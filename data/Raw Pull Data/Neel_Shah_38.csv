pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1367143395,[GSOC][TMVA][SOFIE] Added support for standalone  MatMul operator to be accepted by Gemm Operator,"# This Pull request: 
1) Adds the Swish Activation function in Keras Parser
2) Standalone Matmul support for Gemm operator

## Checklist:

- [x] tested changes locally
- [ ] updated the docs (if necessary)

This PR fixes # 

",True,12894,https://api.github.com/repos/root-project/root/pulls/12894,https://github.com/root-project/root/pull/12894,closed,55,0,3,2,1,5,0,1,[],2023-05-27 07:54:56+00:00,2023-06-14 13:24:38+00:00,1574982.0,"18 days, 5:29:42","[{'comment_id': 1208222827, 'comment_body': 'Why are we including the MatMul implementation here? I would do it in a separate PR', 'comment_created': datetime.datetime(2023, 5, 28, 0, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1208226594, 'comment_body': 'nit: I believe the activation name internally is `swish`, and this will be case-sensitive.', 'comment_created': datetime.datetime(2023, 5, 28, 1, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1208333320, 'comment_body': 'Ok sure. I will create a separate PR for it', 'comment_created': datetime.datetime(2023, 5, 28, 5, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 1208333694, 'comment_body': 'Thanks for pointing out. I will make the changes.', 'comment_created': datetime.datetime(2023, 5, 28, 5, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 1208612394, 'comment_body': 'We might have to check for the version when `swish` was introduced in Keras, and restrict the tests accordingly.', 'comment_created': datetime.datetime(2023, 5, 28, 17, 46, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}]","[{'commit_sha': 'de75e0b0b4189c541f69bc31661ed45f0ef89ba4', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef98b511b981382452905883acaa01fb3e0402c0', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1372083798,[GSOC][TMVA][SOFIE] Swish Activation function implemented in the Keras Parser,"# This Pull request: Adds a Swish Activation function to the Keras Parser as required, given that swish operator does not exist in ONNX documentation.

## Changes or fixes:


## Checklist:

- [X] tested changes locally
- [ ] updated the docs (if necessary)


",True,12918,https://api.github.com/repos/root-project/root/pulls/12918,https://github.com/root-project/root/pull/12918,closed,161,2,6,5,3,2,0,1,[],2023-05-31 12:12:26+00:00,2023-06-12 13:37:39+00:00,1041913.0,"12 days, 1:25:13","[{'comment_id': 1212919922, 'comment_body': 'Many of the Keras tests, especially on the activation functions work in the same way, we can maybe try to generalize them to reduce code repetitions.\r\n\r\ncc: @lmoneta ', 'comment_created': datetime.datetime(2023, 6, 1, 10, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1226679990, 'comment_body': 'Yes, we should do this, but it can be a separate PR', 'comment_created': datetime.datetime(2023, 6, 12, 13, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}]","[{'commit_sha': 'de75e0b0b4189c541f69bc31661ed45f0ef89ba4', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef98b511b981382452905883acaa01fb3e0402c0', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '106299d04a344e6ba50597e129fc95a7c3c9902a', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32b7dbde635d2717c27317de0689de9d0e718ef2', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91b0740aabecc4cf2bf2d10a0f2cb3441d0eb52c', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1475727921,[TMVA/SOFIE] Add support for tensors with dynamic shape,"# This Pull request:
This PR is based on #12941 and [Dynamic-Op](https://github.com/root-project/root/compare/master...Neel-Shah-29:root-1:Dynamic-Op) both by Neel Shah

## Changes or fixes:

- Add support for intermediate tensors with dynamic shape
- Implement the [Range operator](https://github.com/onnx/onnx/blob/main/docs/Operators.md#Range)
- Add tests for the Range operator

## Checklist:

- [x] tested changes locally
",False,13457,https://api.github.com/repos/root-project/root/pulls/13457,https://github.com/root-project/root/pull/13457,closed,395,25,16,1,7,0,1,1,[{'name': 'in:TMVA'}],2023-08-15 11:00:38+00:00,2024-01-23 21:15:22+00:00,13947284.0,"161 days, 10:14:44",[],"[{'commit_sha': '580271409f91c61d94dc6f3f036c798855b7d879', 'committer_username': 'axmat', 'committer_name': '...', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 20, 7, 6, 52, tzinfo=datetime.timezone.utc)}]",...,45193605,,User,,30,,110,22
1377690947,[GSOC][TMVA][SOFIE] TopK ONNX Operator implemented with the corresponding unit tests,"# This Pull request: Implemented the TopK ONNX Operator with the corresponding tests

## Checklist:

- [ ] tested changes locally
- [ ] updated the docs (if necessary)


",False,12942,https://api.github.com/repos/root-project/root/pulls/12942,https://github.com/root-project/root/pull/12942,open,239,0,9,3,1,0,1,1,[{'name': 'in:TMVA'}],2023-06-04 10:56:45+00:00,,0.0,,[],"[{'commit_sha': '822e3ef82e33f01567507f794bf30fc1626c4a53', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e58a752e4bb096b60d095e5c0abdb8882d3c7cb', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e73dee232e9859960e4e47502ce293149e6cc66c', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1378284853,[GSOC][TMVA][SOFIE] Log ONNX Operator implemented with the corresponding unit tests,"# This Pull request:
Adds the Log ONNX Operator to SOFIE with its corresponding unit tests


## Checklist:

- [X] tested changes locally
- [ ] updated the docs (if necessary)



",True,12945,https://api.github.com/repos/root-project/root/pulls/12945,https://github.com/root-project/root/pull/12945,closed,58,1,7,1,10,5,1,1,[{'name': 'in:TMVA'}],2023-06-05 05:14:10+00:00,2023-09-05 15:51:24+00:00,7987034.0,"92 days, 10:37:14","[{'comment_id': 1238588685, 'comment_body': 'We should remove this from here?', 'comment_created': datetime.datetime(2023, 6, 22, 14, 8, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1238589062, 'comment_body': 'Same, Swish operator was added from another PR, I believe.', 'comment_created': datetime.datetime(2023, 6, 22, 14, 9, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1238599606, 'comment_body': 'Okay, this is required for fixing issue mentioned here\r\nhttps://github.com/root-project/root/pull/12945#issuecomment-1592685977', 'comment_created': datetime.datetime(2023, 6, 22, 14, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1238599839, 'comment_body': 'Okay, this is required for fixing issue mentioned here\r\nhttps://github.com/root-project/root/pull/12945#issuecomment-1592685977', 'comment_created': datetime.datetime(2023, 6, 22, 14, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1261720329, 'comment_body': 'We might need to make some checks here. Will it be better if we use `std::logl` and `std::logf` for long and floats particularly? \r\n\r\ncc: @lmoneta ', 'comment_created': datetime.datetime(2023, 7, 12, 21, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}]","[{'commit_sha': '1a37360ffe95d9ca04a4ea1b68728522ef651ac6', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1408674184,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests,"

- [X] tested changes locally


",True,13104,https://api.github.com/repos/root-project/root/pulls/13104,https://github.com/root-project/root/pull/13104,closed,160,0,9,1,1,0,0,1,[],2023-06-26 20:43:14+00:00,2023-07-12 12:43:31+00:00,1353617.0,"15 days, 16:00:17",[],"[{'commit_sha': '7b8406058ec59cd0cadb21e0353956446bf70bdd', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1406665454,[GSOC][TMVA][SOFIE] Where ONNX Operator implemented with the ccorresponding unit tests,"# This Pull request: implements the Where ONNX Operator. 

## Checklist:

- [X] tested changes locally

",False,13093,https://api.github.com/repos/root-project/root/pulls/13093,https://github.com/root-project/root/pull/13093,open,207,2,10,6,2,2,1,1,[{'name': 'in:TMVA'}],2023-06-25 13:14:17+00:00,,0.0,,"[{'comment_id': 1298273157, 'comment_body': 'For what operation do we need the `cmath` library here?', 'comment_created': datetime.datetime(2023, 8, 18, 10, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1298832587, 'comment_body': ""Hi i think we don't need the cmath library, i will remove it and check once."", 'comment_created': datetime.datetime(2023, 8, 18, 20, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}]","[{'commit_sha': '4f72b2228cabdcbab051c30ac07ce13512b72ba1', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '101982ebf3e4a83f4eda60d51be5ea03f750b9d7', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6bfb7e8e90341cb105c7401d3a141cc24849cac', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4450827fcb9890aa5e81fa420f6b91e5f3345dc', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65d4f3e571a2ea538d02a6fdbe5d77d670e111fb', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e04784595eac2232f654fd0af10ade77db8f659', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1468432961,[TMVA/SOFIE] Save weights in ROOT binary files,"## This Pull request:
This PR is based on #13066 by @Neel-Shah-29 

## Changes or fixes:
- A weight file isn't created by default when generating the code
- Options to save the weights in a text file or in a ROOT binary file

## Checklist:

- [x] tested changes locally

",True,13423,https://api.github.com/repos/root-project/root/pulls/13423,https://github.com/root-project/root/pull/13423,closed,184,61,6,6,6,5,0,1,[],2023-08-09 11:26:57+00:00,2023-08-16 08:20:55+00:00,593638.0,"6 days, 20:53:58","[{'comment_id': 1288752901, 'comment_body': 'this should be a `vector<double>`', 'comment_created': datetime.datetime(2023, 8, 9, 15, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 1288759954, 'comment_body': 'we should add here also int64_t and double since we have in writing', 'comment_created': datetime.datetime(2023, 8, 9, 15, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 1288761552, 'comment_body': 'I think the default here should be `true` and maybe use a .dat file as default ', 'comment_created': datetime.datetime(2023, 8, 9, 15, 45, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 1294577704, 'comment_body': ""I don't think we need to add kTextWeightFile. This should be included in the kDefault option"", 'comment_created': datetime.datetime(2023, 8, 15, 13, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 1295048550, 'comment_body': ""Done, yes we don't need `kTextWeightFile` since its already included in `kDefault`."", 'comment_created': datetime.datetime(2023, 8, 15, 19, 55, 30, tzinfo=datetime.timezone.utc), 'commenter': 'axmat', 'type': 'User'}]","[{'commit_sha': '985d0de9f29352703d09374f38fe53a3e03baeb6', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20086352263643d9ba35b47621c053ed2d0e848b', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd1d7bc7e47df81072e91eac5d50486163af95f', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f58e664c250027ad35fd840ee4ff16eaecb79ca9', 'committer_username': 'axmat', 'committer_name': '...', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 20, 7, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcbe90cdb50ec9b38395227f59e01af1b04a6bfd', 'committer_username': 'axmat', 'committer_name': '...', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 20, 7, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e77edbd1c1f756690471c4c21ab7011bbf29fa5', 'committer_username': 'axmat', 'committer_name': '...', 'committer_email': None, 'commit_date': datetime.datetime(2018, 11, 20, 7, 6, 52, tzinfo=datetime.timezone.utc)}]",...,45193605,,User,,30,,110,22
1419422077,"[GSOC][TMVA][SOFIE] Comparision ONNX Operators (Less, Greater, LessOrEqual, GreaterOrEqual, Equal) implemented with the corresponding unit tests","# This Pull request:
implements the Equal Operator with unit tests

",True,13171,https://api.github.com/repos/root-project/root/pulls/13171,https://github.com/root-project/root/pull/13171,closed,537,0,20,9,1,7,1,2,[{'name': 'in:TMVA'}],2023-07-04 10:37:21+00:00,2023-12-11 10:55:51+00:00,13825110.0,"160 days, 0:18:30","[{'comment_id': 1298904557, 'comment_body': ""Will it be good if we keep this operator as a Logical operator and also include the operations for Greater, Less, LessEqual, etc. other logical operators? As they won't have a lot of differences but a lot of code similarities.\r\n\r\ncc: @lmoneta "", 'comment_created': datetime.datetime(2023, 8, 18, 22, 34, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1304628122, 'comment_body': 'Initialize a Boolean array instead, as the `.data` method does not exist in boolean vectors.', 'comment_created': datetime.datetime(2023, 8, 24, 17, 3, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1304634076, 'comment_body': 'I did not understand the use of this code. I guess Equal operator has no initialized tensors?', 'comment_created': datetime.datetime(2023, 8, 24, 17, 10, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1304635140, 'comment_body': ""Same thing here, we don't really require I guess to write boolean vectors as initialized tensors?"", 'comment_created': datetime.datetime(2023, 8, 24, 17, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1309285794, 'comment_body': 'Can we only define the boolean array here and then access its elements? I believe arrays in C++ reference the first element, which can be then moved if required.\r\n\r\nSo, just this should work? Otherwise, here the pointer address is getting copied to another location unnecessarily.\r\n\r\n```\r\n fGC += ""bool tensor_"" + i.first  + "" ["" + std::to_string(length) + ""] = {false};\\n"";\r\n```', 'comment_created': datetime.datetime(2023, 8, 29, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1315820433, 'comment_body': 'Better naming them comparison operators? since these are not really arithmetic. Also, change the PR title and description.', 'comment_created': datetime.datetime(2023, 9, 5, 12, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 1315822286, 'comment_body': 'Can we have tests for other similar operators as well? ', 'comment_created': datetime.datetime(2023, 9, 5, 12, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}]","[{'commit_sha': 'e6c91984612f9141937fbf55408d11b70a26099e', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '748b16dbe4129387cdc08cc04b31d616aa3fec44', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7e55771600c69a5ca95345c0cf4d203dcb4baf2', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e9135e7bcfa4e234ac4b2d676690f9e9c784a75', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5890054824944cf8f28d519f0d8b9fa9aabdb4b', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bf029ac924e81cddb14a5069a68e591a00f140f', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b94d16e26d64e52bf4d21a353c8726fe2471a64', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddb2371b3d3015ae376acca4272e156d32b9ea49', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9364d2c6eb964903424e689f93f1ed140f5df51', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1489849138,[GSOC][TMVA][SOFIE] Elu ONNX operator implemented,,True,13544,https://api.github.com/repos/root-project/root/pulls/13544,https://github.com/root-project/root/pull/13544,closed,166,0,9,6,6,1,1,1,[{'name': 'in:TMVA'}],2023-08-25 14:37:08+00:00,2023-12-11 11:24:24+00:00,9319636.0,"107 days, 20:47:16","[{'comment_id': 1311284462, 'comment_body': 'nit: fix the formatting here', 'comment_created': datetime.datetime(2023, 8, 31, 8, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}]","[{'commit_sha': 'a45d11b542e42adc4e5f31712ca44a80520326a0', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38a10d899e4e355f53e40f8fb490ee1893747e39', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9eb0977241ef640241533945c346ca596709b43', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cfcd47f5f9f3febcda2adbb1c80c5dee7c6b532', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c8b084b42905e7046a8f9d3f29f09b391528701', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3c0dbf78d2b249ad826228f4e0ad6e7945c4294', 'committer_username': 'lmoneta', 'committer_name': 'Lorenzo Moneta', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 12, 12, 31, 59, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
10994345,root,root-project/root,C++,1248,2606,123,532,82377,821,17,281,"[{'id': 1655613219, 'number': 14297, 'closed': datetime.datetime(2024, 1, 17, 14, 8, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 22, 20, 24, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2223872.0, 'time_delta': '25 days, 17:44:32', 'additions': 183, 'deletions': 0, 'state': 'closed'}, {'id': 1489849138, 'number': 13544, 'closed': datetime.datetime(2023, 12, 11, 11, 24, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 14, 37, 8, tzinfo=datetime.timezone.utc), 'time_taken': 9319636.0, 'time_delta': '107 days, 20:47:16', 'additions': 166, 'deletions': 0, 'state': 'closed'}, {'id': 1419422077, 'number': 13171, 'closed': datetime.datetime(2023, 12, 11, 10, 55, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 4, 10, 37, 21, tzinfo=datetime.timezone.utc), 'time_taken': 13825110.0, 'time_delta': '160 days, 0:18:30', 'additions': 537, 'deletions': 0, 'state': 'closed'}, {'id': 1408674184, 'number': 13104, 'closed': datetime.datetime(2023, 7, 12, 12, 43, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 20, 43, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1353617.0, 'time_delta': '15 days, 16:00:17', 'additions': 160, 'deletions': 0, 'state': 'closed'}, {'id': 1406665454, 'number': 13093, 'closed': None, 'created': datetime.datetime(2023, 6, 25, 13, 14, 17, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 207, 'deletions': 2, 'state': 'open'}, {'id': 1402328004, 'number': 13066, 'closed': datetime.datetime(2023, 8, 23, 9, 10, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 21, 19, 35, 13, tzinfo=datetime.timezone.utc), 'time_taken': 5405697.0, 'time_delta': '62 days, 13:34:57', 'additions': 188, 'deletions': 46, 'state': 'closed'}, {'id': 1378284853, 'number': 12945, 'closed': datetime.datetime(2023, 9, 5, 15, 51, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 5, 14, 10, tzinfo=datetime.timezone.utc), 'time_taken': 7987034.0, 'time_delta': '92 days, 10:37:14', 'additions': 58, 'deletions': 1, 'state': 'closed'}, {'id': 1377690947, 'number': 12942, 'closed': None, 'created': datetime.datetime(2023, 6, 4, 10, 56, 45, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 239, 'deletions': 0, 'state': 'open'}, {'id': 1377321111, 'number': 12941, 'closed': None, 'created': datetime.datetime(2023, 6, 3, 20, 45, 3, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 162, 'deletions': 0, 'state': 'open'}, {'id': 1372083798, 'number': 12918, 'closed': datetime.datetime(2023, 6, 12, 13, 37, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 12, 12, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1041913.0, 'time_delta': '12 days, 1:25:13', 'additions': 161, 'deletions': 2, 'state': 'closed'}, {'id': 1367143395, 'number': 12894, 'closed': datetime.datetime(2023, 6, 14, 13, 24, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 27, 7, 54, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1574982.0, 'time_delta': '18 days, 5:29:42', 'additions': 55, 'deletions': 0, 'state': 'closed'}, {'id': 1091933487, 'number': 11608, 'closed': datetime.datetime(2022, 11, 17, 15, 41, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 19, 8, 9, 10, tzinfo=datetime.timezone.utc), 'time_taken': 2532715.0, 'time_delta': '29 days, 7:31:55', 'additions': 251, 'deletions': 11, 'state': 'closed'}, {'id': 1046791107, 'number': 11317, 'closed': datetime.datetime(2022, 9, 7, 13, 54, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 5, 19, 9, 46, tzinfo=datetime.timezone.utc), 'time_taken': 153864.0, 'time_delta': '1 day, 18:44:24', 'additions': 53, 'deletions': 24, 'state': 'closed'}, {'id': 1038264424, 'number': 11258, 'closed': datetime.datetime(2022, 8, 31, 9, 47, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 26, 18, 39, 54, tzinfo=datetime.timezone.utc), 'time_taken': 400054.0, 'time_delta': '4 days, 15:07:34', 'additions': 281, 'deletions': 1, 'state': 'closed'}, {'id': 1027993041, 'number': 11198, 'closed': datetime.datetime(2022, 9, 1, 6, 26, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 19, 23, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1335760.0, 'time_delta': '15 days, 11:02:40', 'additions': 210, 'deletions': 2, 'state': 'closed'}, {'id': 1014215298, 'number': 11086, 'closed': datetime.datetime(2022, 9, 7, 14, 46, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 1, 18, 45, 23, tzinfo=datetime.timezone.utc), 'time_taken': 3182474.0, 'time_delta': '36 days, 20:01:14', 'additions': 161, 'deletions': 1, 'state': 'closed'}, {'id': 1006171895, 'number': 11033, 'closed': datetime.datetime(2022, 8, 16, 11, 0, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 21, 36, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2121834.0, 'time_delta': '24 days, 13:23:54', 'additions': 241, 'deletions': 31, 'state': 'closed'}, {'id': 997941689, 'number': 10971, 'closed': datetime.datetime(2022, 8, 22, 10, 47, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 16, 40, 45, tzinfo=datetime.timezone.utc), 'time_taken': 3262032.0, 'time_delta': '37 days, 18:07:12', 'additions': 116, 'deletions': 8, 'state': 'closed'}, {'id': 994050378, 'number': 10946, 'closed': datetime.datetime(2022, 7, 22, 12, 15, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 12, 9, 26, 29, tzinfo=datetime.timezone.utc), 'time_taken': 874132.0, 'time_delta': '10 days, 2:48:52', 'additions': 159, 'deletions': 0, 'state': 'closed'}, {'id': 989417146, 'number': 10913, 'closed': datetime.datetime(2022, 7, 22, 12, 7, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 21, 38, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1348165.0, 'time_delta': '15 days, 14:29:25', 'additions': 153, 'deletions': 1, 'state': 'closed'}, {'id': 977943641, 'number': 10822, 'closed': datetime.datetime(2022, 7, 1, 8, 14, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 6, 19, 5, tzinfo=datetime.timezone.utc), 'time_taken': 611746.0, 'time_delta': '7 days, 1:55:46', 'additions': 454, 'deletions': 106, 'state': 'closed'}, {'id': 968909135, 'number': 10768, 'closed': datetime.datetime(2022, 6, 29, 17, 30, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 5, 53, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1165004.0, 'time_delta': '13 days, 11:36:44', 'additions': 455, 'deletions': 103, 'state': 'closed'}, {'id': 916818746, 'number': 10442, 'closed': None, 'created': datetime.datetime(2022, 4, 22, 21, 9, 38, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 981, 'deletions': 0, 'state': 'open'}, {'id': 915662008, 'number': 10435, 'closed': datetime.datetime(2022, 6, 30, 7, 34, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 21, 18, 20, 53, tzinfo=datetime.timezone.utc), 'time_taken': 6009203.0, 'time_delta': '69 days, 13:13:23', 'additions': 183, 'deletions': 183, 'state': 'closed'}, {'id': 913512326, 'number': 10415, 'closed': datetime.datetime(2022, 6, 13, 17, 12, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 19, 20, 32, 15, tzinfo=datetime.timezone.utc), 'time_taken': 4740002.0, 'time_delta': '54 days, 20:40:02', 'additions': 176, 'deletions': 0, 'state': 'closed'}, {'id': 901610000, 'number': 10342, 'closed': datetime.datetime(2022, 4, 11, 7, 20, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 6, 14, 53, 25, tzinfo=datetime.timezone.utc), 'time_taken': 404808.0, 'time_delta': '4 days, 16:26:48', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 901334506, 'number': 10337, 'closed': datetime.datetime(2022, 4, 6, 14, 44, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 6, 10, 35, 45, tzinfo=datetime.timezone.utc), 'time_taken': 14924.0, 'time_delta': '4:08:44', 'additions': 234121, 'deletions': 80337, 'state': 'closed'}, {'id': 887991242, 'number': 10223, 'closed': datetime.datetime(2022, 4, 5, 9, 56, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 24, 6, 36, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1048820.0, 'time_delta': '12 days, 3:20:20', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 819404777, 'number': 9546, 'closed': datetime.datetime(2022, 1, 12, 10, 14, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 12, 7, 56, 51, tzinfo=datetime.timezone.utc), 'time_taken': 8259.0, 'time_delta': '2:17:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
