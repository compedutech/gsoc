pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1295613417,Add runtime info to harness' metadata,"### This PR refers to #117 

### What is this PR for?
This PR adds runtime information (including `os`, `os_version`, and `language_version`) to the implementation harness' metadata which is returned by `bowtie info` !

This is a subset PR that adds runtime info to JavaScript and Python based harnesses, and other harnesses' info will be added down the line.


Edit:
Golang based harnesses are also modified to add runtime info.",True,189,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/189,https://github.com/bowtie-json-schema/bowtie/pull/189,closed,74,0,8,12,7,0,0,0,[],2023-03-30 04:55:28+00:00,2023-04-02 14:42:23+00:00,294415.0,"3 days, 9:46:55",[],"[{'commit_sha': '3412b0aaea6683a7891cebbcde81f7ae4f3ea431', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '177e5286840d94a080d713db8ec991616ac01449', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abf4c0a8e4c8da2a1fe5f4d144861ec2a89a4fc1', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bef25f94988563c1498bcc85430169853bfd82b9', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5096dec1cbfdc306515fe8dc0363e1d7dc0507f5', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18a6627b21ebea1c658589edb919bf330f36e28b', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5da0f6837f31d2026b3ec8b728d292c1b10aea2', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e56f23329f7c072cb68cc0257c9bbf7b5f3c7755', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '499c1a4a3f4c6e486b8fe94899bbec3aedd6ee83', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46d7ef5ec2c05e1746795b6c6b461f67a69604a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7b5455164008e9c20e6bf45c4cd531485f13413', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e6297b083b93ee882e2d17a9e011aaf7fa6fb9c', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17
1311405628,Add dark mode to bowtie report,"### This PR refers to #31 

Added toggleable dark mode feature to Bowtie report using Bootstrap.",True,225,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/225,https://github.com/bowtie-json-schema/bowtie/pull/225,closed,58,11,1,20,4,8,0,0,[],2023-04-12 19:57:27+00:00,2023-04-14 16:10:57+00:00,159210.0,"1 day, 20:13:30","[{'comment_id': 1165469295, 'comment_body': 'Bootstrap I believe already has classes for this: https://getbootstrap.com/docs/5.3/utilities/display/', 'comment_created': datetime.datetime(2023, 4, 13, 12, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1165551329, 'comment_body': ""I think this might need/want to be wrapped with a `button` element -- otherwise when you mouseover it the cursor doesn't change (from a pointer to a hand, say).\r\n\r\nI noticed the same thing to be true about the `i` icons we added for runtime info, so if you manage to fix this here perhaps you can fix that one as well the same way."", 'comment_created': datetime.datetime(2023, 4, 13, 13, 48, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1165554913, 'comment_body': ""This combined with the line above redeclaring it breaks collapsing the accordion items I think.\r\n\r\nTry running some test run (e.g. `bowtie suite -i python-jsonschema $DEVELOPMENT/JSON-Schema-Test-Suite/tests/draft7/ | bowtie report`) and then expand one of the tests and try to collapse it, it won't collapse again for me and I see:\r\n\r\n```\r\nUncaught SyntaxError: redeclaration of const tooltipTriggerList\r\n    <anonymous> file:///Users/julian/Development/bowtie/bowtie-report.html:34509\r\n```\r\n\r\nin the console."", 'comment_created': datetime.datetime(2023, 4, 13, 13, 50, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1166246640, 'comment_body': 'accordian collapse issue resolved', 'comment_created': datetime.datetime(2023, 4, 14, 3, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1166247996, 'comment_body': 'wrapped the icons (both **info** and **theme-toggler**) into `button` element', 'comment_created': datetime.datetime(2023, 4, 14, 3, 42, 13, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1166249205, 'comment_body': ""replaced the custom **hidden** class with bootstrap's inbuilt **d-none** class"", 'comment_created': datetime.datetime(2023, 4, 14, 3, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1166782676, 'comment_body': ""This is basically\r\n\r\n```suggestion\r\n    var light = !window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n```\r\n\r\n(or invert the condition to `prefersDark` and you don't need the `!`)."", 'comment_created': datetime.datetime(2023, 4, 14, 12, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1166951027, 'comment_body': 'made the suggested change!', 'comment_created': datetime.datetime(2023, 4, 14, 15, 3, 15, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}]","[{'commit_sha': '82979f3ecd7d003ba49223b804c9f982e5e0f1cc', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe1301c581cb676395616c296cb941881f30cb6', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7446bcd4089de2a3ceec314bdac623a85a2011b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68336013fcadfc5c83b3c4ccb0a0f4b4efa103d3', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67202fd1dcb7e37d5bdff6ebb06c3b4685d49ea7', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c2ff7e15ffac27adc1e97fb9adf72858d964977', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d4b029d482ca502cbb853b3d7664fa461ca7b88', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c851ad469782a48fb05e45c65dbdf63c402c86d5', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5f933ec759d2fe91d75d1bf0ed908a0f5b9abf6', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d3e188d3dde7eb6290d6e8fcb329da0dcac27d4', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a0e1765af8c359c293b33cc2f4002a3f83acbaa', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fdff91c86e82f4e866a51f026597cdad540eb11', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b85d5c4ecc22fef4a0ea2f8536936124dd4e9d23', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '685ce99f58671165c179a98dcd0bcaf2e8bd9717', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4edcc9ed8154ef0300deb57aab1b6723c1e7e389', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230aaa216f2a2bd272ea6be6c9b3abf65ba5d110', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71bf00edf9a53ffd3a034894bc9375c36cc580aa', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b76ebb512558ce7d8b8f63ca47123193a1cc9fbf', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9a2b04e7ef45048a7f442c40cf42c64d21e0954', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7fe6f9c0f1b7bac583d0f9ad4b2564d0d36c40d', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17
1323536198,Add a dynamic (React-driven) UI which will replace the statically generated one,"As per our discussion in [this](https://github.com/bowtie-json-schema/bowtie/issues/157) ticket, I have commenced the task of migrating the report that is currently being developed using JavaScript.

I encountered an issue when attempting to decompress the JSON file, specifically draft7.json.gz. The resulting output comprised various objects that did not conform to the proper JSON format. (It's not even an array of objects)
Something like...
```
{key: value}
{key: value}
{key: value}
{key: value}
```

I wonder how to retrieve data from this file! Nevertheless, I have started the process of migrating the report by utilizing a dummy JSON file that shares similarities with the report's data file.

As of now, 30-40% of the work has been completed (these are the sections that should be rendered initially), and the remaining tasks are still in progress. (We only need to make slight adjustments to the variables to correctly render the data from the original report).
Data in the third section will be rendered dynamically based on user interaction. (say `click` event)

This draft PR is intended to demonstrate the progress made and to confirm whether I am in the right direction. (this is just a temporary file)",True,241,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/241,https://github.com/bowtie-json-schema/bowtie/pull/241,closed,17098,6,26,151,11,68,0,0,[],2023-04-21 20:08:30+00:00,2023-06-14 14:57:08+00:00,4646918.0,"53 days, 18:48:38","[{'comment_id': 1209451040, 'comment_body': 'More specifically this file?\r\n\r\nOr migrate-report.html?', 'comment_created': datetime.datetime(2023, 5, 29, 16, 26, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nomandhoni-cs', 'type': 'User'}, {'comment_id': 1209496328, 'comment_body': 'Both have to be reviewed, but firstly reviewing migrate-report.html would be better!', 'comment_created': datetime.datetime(2023, 5, 29, 18, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1210423877, 'comment_body': 'Hi, I don\'t think this line is required here. `seq` is already the ""each"" in `sorted_CombinedArray` and seems to be the problem. `seq` is not a key, it\'s a value (in context to a key-value pair).', 'comment_created': datetime.datetime(2023, 5, 30, 15, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'VishrutAggarwal', 'type': 'User'}, {'comment_id': 1210425949, 'comment_body': ""Hi, can you please explain this line. I don't really understand what's happening here."", 'comment_created': datetime.datetime(2023, 5, 30, 15, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'VishrutAggarwal', 'type': 'User'}, {'comment_id': 1213485177, 'comment_body': '`this._combined` is an object (dict in python) and `Object.entries` function converts the key-value pairs of object into array of arrays. For eg---\r\n```\r\n{\r\n""name"": ""Agnivesh"",\r\n""age"": ""20""\r\n}\r\n```\r\n\r\nto\r\n\r\n```\r\n[\r\n[""name"", ""Agnivesh""], [""age"", ""20""]\r\n]\r\n```\r\n\r\nThe purpose of doing this was to sort the object in ascending order (direct sorting on object is not possible, that\'s why...)', 'comment_created': datetime.datetime(2023, 6, 1, 17, 44, 14, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1213487046, 'comment_body': 'No, in the raw data, `seq` is key. \r\n', 'comment_created': datetime.datetime(2023, 6, 1, 17, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1213739191, 'comment_body': 'Since there is now a bundling process for UI, maybe *bootstrap* could be put as a dependency in `package.json` file?', 'comment_created': datetime.datetime(2023, 6, 1, 22, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1213742621, 'comment_body': ""I guess this lib could be moved to `package.json` too, but I feel like we shouldn't really be unpacking gzips on frontend? I think probably that build/deploy process should take care of unpacking"", 'comment_created': datetime.datetime(2023, 6, 1, 22, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1213744394, 'comment_body': 'Maybe all SVG icon definition like this could be put into separate files and then imported in JS code? I remember that there was some common solution for that', 'comment_created': datetime.datetime(2023, 6, 1, 22, 33, 31, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1213746329, 'comment_body': 'Is there a way to use data generated by local bowtie?', 'comment_created': datetime.datetime(2023, 6, 1, 22, 37, 25, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1213747218, 'comment_body': 'Is there a reason for using a snake case? Generally, I would consider camel case to be an accepted standard for JS', 'comment_created': datetime.datetime(2023, 6, 1, 22, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1213869805, 'comment_body': 'I have used cdn in order to keep the application lightweight. (Also it might increase the loading speed because of caching). ', 'comment_created': datetime.datetime(2023, 6, 2, 3, 7, 20, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1213880251, 'comment_body': ""At this stage, the UI is fetching data from the local bowtie webpage (`https://bowtie-json-schema.github.io/bowtie/`${dialect_version}`.json.gz`). Also we are 6 **_dialects_** (`2020-12`, `2019-09`, `7`, `6`, `4`, `3`) --- that means 6 data files. I think it would be more feasible to dynamically fetch the data based on user's choice of **_dialect_** (to keep the app lightweight) rather than collecting all the data at once and bundling them in our app. However, let me know what do you think."", 'comment_created': datetime.datetime(2023, 6, 2, 3, 31, 45, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1213885644, 'comment_body': ""Ya I have kept them in a separate svg folder initially, but there was an issue in mode toggling. --- I stored svgs in .svg file and but in that case, I had to use the path as **value** to **src** property. And so, the SVG is now an image and we can't add value of `fill` attribute dynamically  based on the current theme. (means we have to use two different svgs --- I was trying to use only one). \r\n\r\nBtw, there are other ways too. I'll do that!"", 'comment_created': datetime.datetime(2023, 6, 2, 3, 46, 53, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1213886915, 'comment_body': 'Yes of course! The raw data can be found here (in compressed form) ----\r\n`https://bowtie-json-schema.github.io/bowtie/draft2020-12.json.gz` (just replace the **_dialect_** version of your choice)', 'comment_created': datetime.datetime(2023, 6, 2, 3, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1213888223, 'comment_body': ""Not actually!😅 I'll change that."", 'comment_created': datetime.datetime(2023, 6, 2, 3, 52, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1214235246, 'comment_body': ""I mean, either way you still gonna need to download the same amount of bytes. I can see few advantages of putting it in package.json:\r\n- you have all your dependencies in one place - it's easier to manage and e.g. dependabot could see this dependencies\r\n- not relying on 3rd party sites - we don't need to worry this URL stopping to work (or changing) spontaneously. Each UI build/bundle would be independent and it's behaviour should be reproducible\r\n- bundle produced by UI could also be cached as a whole or if it's necessary it can be split to chunks with different cache mechanics for each chunk."", 'comment_created': datetime.datetime(2023, 6, 2, 11, 6, 54, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1214240263, 'comment_body': ""I'm only suggesting that if we need this data to be unpacked we could have it uploaded in unpacked version. Currently, each user's browser is doing the unpacking process (affecting user experience I guess? But i don't know how much time does this process take), when it could be done just once during building/deployment or at any stage it is convenient"", 'comment_created': datetime.datetime(2023, 6, 2, 11, 12, 55, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1214242646, 'comment_body': ""I remember there were also whole icon packs (used as any other dependencies) which could be imported in JS. I'm guessing we don't use any custom icons?"", 'comment_created': datetime.datetime(2023, 6, 2, 11, 15, 28, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1214247528, 'comment_body': 'Hmm, to be precise I meant e.g. using some command like this: `bowtie suite ... / bowtie report` and then using produced data by this command to populate UI', 'comment_created': datetime.datetime(2023, 6, 2, 11, 19, 37, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1214524943, 'comment_body': ""The original reason to investigate was that the unpacked data for each draft is ~10MB or so (#146), and the compressed data is ~50KB. so it was a noticeable reduction in load time I think. But we can reconsider of course (it'd definitely be nice if GitHub supported Content-Type and then we'd obviously get the browser automatically decompressing the gzip before the app saw it)"", 'comment_created': datetime.datetime(2023, 6, 2, 15, 26, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1220239956, 'comment_body': 'Ohh! My bad! Do you mean populating the local UI or the hosted one?', 'comment_created': datetime.datetime(2023, 6, 6, 19, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1221843532, 'comment_body': ""Hmm, that is what I was thinking - the GH pages should expose static files which are **NOT** gzipped, but the underlying server should handle their compressing if client requires so. And the browser should unpack it automatically. So we could use URL like `https://bowtie-json-schema.github.io/bowtie/draft2020-12.json` (without gzip extension), and if client sends request with header `Accept-Encoding=gzip` it should receive gzipped response (with response header `Content-Encoding=gzip`). It looks like e.g. getting bowtie HTML via https://bowtie-json-schema.github.io/bowtie is working exactly like this:\r\n\r\n- without `Accept-Encoding` header: ~8.6mb\r\n- with `Accept-Encoding` header: ~200kb\r\n\r\nHaven't had time to read the whole discussion from #146 so maybe I missed some important details. Let me know if this approach makes sense"", 'comment_created': datetime.datetime(2023, 6, 7, 15, 57, 43, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1221849024, 'comment_body': ""Aha! Good to know, I didn't know that GH Pages supported `Accept-Encoding`. That definitely sounds reasonable to me. @AgniveshChaubey do you follow? We'd need a small tweak to the workflow which I can either show you how to do or do myself, whichever is most helpful."", 'comment_created': datetime.datetime(2023, 6, 7, 16, 1, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1221858692, 'comment_body': ""I mean local UI with local report data. Now the URL is hardcoded for specific host (https://bowtie-json-schema.github.io), maybe this URL can be relative so it could work locally too? Also, if in the future hosting platform gonna change then it shouldn't really affect code behaviour. So I would suggest something like `/bowtie/draft${Dialect}.json.gz`, but you gonna need to have these report files locally. And somehow expose them on live local server"", 'comment_created': datetime.datetime(2023, 6, 7, 16, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1221996811, 'comment_body': ""It looks better separated like that, but I had something like that in mind: https://www.npmjs.com/package/react-bootstrap-icons. Let me know what you think about this approach\r\n\r\nI only wonder why it's not part of official react-bootstrap package"", 'comment_created': datetime.datetime(2023, 6, 7, 18, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1222005019, 'comment_body': 'Any reason why you use `var` in some places? Checked few of them and looks like they can be replaced by `let` or `const`. I think that as a general rule of thumb the latter two should be used - they are much more intuitive in terms of scope and visibility', 'comment_created': datetime.datetime(2023, 6, 7, 18, 27, 30, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1222010831, 'comment_body': ""Wouldn't `if (implementation.skipped)` be enough? Or if you really want to check for `true` you could write `if (implementation.skipped === true)`. Same goes for conditions below"", 'comment_created': datetime.datetime(2023, 6, 7, 18, 32, 42, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1222011679, 'comment_body': 'What is the reason for assigning value to `testResult` on return?', 'comment_created': datetime.datetime(2023, 6, 7, 18, 33, 40, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1222019743, 'comment_body': 'If `each` indeed can be something different than `object`, the AND conditions should be reversed', 'comment_created': datetime.datetime(2023, 6, 7, 18, 42, 13, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1222024943, 'comment_body': 'Maybe `switch-case` can be used instead?', 'comment_created': datetime.datetime(2023, 6, 7, 18, 46, 50, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1222119800, 'comment_body': '(This comment is slightly inaccurate now, but probably fine to just remove it)', 'comment_created': datetime.datetime(2023, 6, 7, 20, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222120114, 'comment_body': ""Didn't you mean to uncomment this? Right now it just adds a space, but the comment character (`#`) is still there."", 'comment_created': datetime.datetime(2023, 6, 7, 20, 26, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222121311, 'comment_body': ""The `.vscode` folder is `gitignored` but looks like this file is committed before doing so (so probably you want to run `git rm -f .vscode/settings.json` or thereabouts so that you're not proposing adding it in this PR."", 'comment_created': datetime.datetime(2023, 6, 7, 20, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222121512, 'comment_body': 'This is `frontend/` now I think.', 'comment_created': datetime.datetime(2023, 6, 7, 20, 27, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222122224, 'comment_body': ""I can't comment on it directly (because the silly GitHub UI doesn't allow it) but if you look above, it looks like you're also committing an empty `bowtie/templates/migrate-report.html` file as part of this PR."", 'comment_created': datetime.datetime(2023, 6, 7, 20, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222122576, 'comment_body': 'Possibly copy the description from the `pyproject.toml` file here (or copy it and mention this is the UI for it).', 'comment_created': datetime.datetime(2023, 6, 7, 20, 29, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222123728, 'comment_body': ""Is there supposed to be a template variable or something here after the –? I'm no react expert, does something magically append page names to the `<title>` or yeah is there supposed to be something after that?"", 'comment_created': datetime.datetime(2023, 6, 7, 20, 30, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222124691, 'comment_body': 'Yeah ideally this whole file should be replaced by that I hope.', 'comment_created': datetime.datetime(2023, 6, 7, 20, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222126830, 'comment_body': 'This is more of a TODO than something to address now, but now that we have a dynamic site, we should likely also have a dynamic way to populate this navigation -- specifically rather than hardcoding which dialects we support, we should probably simply automatically populate this list by querying which dialects are available. Perhaps just file an issue for us to do so after this PR is merged?', 'comment_created': datetime.datetime(2023, 6, 7, 20, 33, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222127309, 'comment_body': 'Now that we have some package management I suspect you should be able to find some humanize JS library that does this better than my silly hand rolled one as well. I think GitHub has a library they published for doing this maybe?', 'comment_created': datetime.datetime(2023, 6, 7, 20, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222127603, 'comment_body': ""Looks like there's some dead code here."", 'comment_created': datetime.datetime(2023, 6, 7, 20, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222128212, 'comment_body': 'And more dead code here.', 'comment_created': datetime.datetime(2023, 6, 7, 20, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222128582, 'comment_body': 'Here too should be replaced by some icon package I hope.', 'comment_created': datetime.datetime(2023, 6, 7, 20, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222129638, 'comment_body': ""More dead code sprinkled in this file -- good to do a pass and just look for any lines you've commented out -- perhaps also look at whether eslint can raise warnings for such things, I suspect/hope it can, so we should enable that -- let me know if you want help figuring out how."", 'comment_created': datetime.datetime(2023, 6, 7, 20, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1222560902, 'comment_body': ""Ya, that's totally reasonable. Till now, I too was thinking that pages didn't support `Accept-Encoding`"", 'comment_created': datetime.datetime(2023, 6, 8, 7, 16, 48, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223004563, 'comment_body': ""Sure, I'll do that!"", 'comment_created': datetime.datetime(2023, 6, 8, 12, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223017049, 'comment_body': ""No. I'll change them to `let`/`const`"", 'comment_created': datetime.datetime(2023, 6, 8, 13, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223048345, 'comment_body': 'Made the changes!', 'comment_created': datetime.datetime(2023, 6, 8, 13, 31, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223064288, 'comment_body': ""Ya, it's unnecessary I guess. Removed!"", 'comment_created': datetime.datetime(2023, 6, 8, 13, 43, 56, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223077114, 'comment_body': 'I think it unintentionally got changed during some random try. Fixed it now!', 'comment_created': datetime.datetime(2023, 6, 8, 13, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223084259, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 6, 8, 13, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223230647, 'comment_body': 'Yes. updated', 'comment_created': datetime.datetime(2023, 6, 8, 15, 42, 12, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223234490, 'comment_body': 'Ah! I forgot to delete it!', 'comment_created': datetime.datetime(2023, 6, 8, 15, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223248524, 'comment_body': 'Is it fine? -\r\n_This is the UI that displays the outcomes generated by Bowtie, which serves as a meta-validator for the JSON Schema specification_', 'comment_created': datetime.datetime(2023, 6, 8, 15, 55, 52, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223305505, 'comment_body': 'No. Here, the dialectShortName is dynamically appended by the following code in `App.js` file.\r\n\r\n```\r\n  document.getElementsByTagName(""title"")[0].textContent +=\r\n    "" "" + runInfo.dialectShortName;\r\n\r\n```', 'comment_created': datetime.datetime(2023, 6, 8, 16, 41, 35, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223311722, 'comment_body': ""Sure, I'll file an issue after this PR gets merged."", 'comment_created': datetime.datetime(2023, 6, 8, 16, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223331686, 'comment_body': 'used moment.js library instead of custom formatting to display the ran time', 'comment_created': datetime.datetime(2023, 6, 8, 17, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223335331, 'comment_body': ""oops! I was trying to use React's context API to pass the data to the parent component but then used the state-lifting method. Either way we can do that. Btw removed the dead code."", 'comment_created': datetime.datetime(2023, 6, 8, 17, 11, 56, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223335654, 'comment_body': 'addressed!', 'comment_created': datetime.datetime(2023, 6, 8, 17, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223349664, 'comment_body': 'Cleaned it up!', 'comment_created': datetime.datetime(2023, 6, 8, 17, 26, 57, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223365041, 'comment_body': '> perhaps also look at whether eslint can raise warnings for such things...\r\n\r\nYa please help me to understand how ESLint works.', 'comment_created': datetime.datetime(2023, 6, 8, 17, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223376377, 'comment_body': '""We can definitely add conditional fetching of data based on where the app is being used, whether to fetch data from the **_remote URL_** or from a **_local path_**. Regarding the idea of using a **_relative URL_**, I believe we can address it in a separate pull request in the near future. @Julian, please let me know your thoughts on this.', 'comment_created': datetime.datetime(2023, 6, 8, 17, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1223385601, 'comment_body': 'Yeah totally fine with me, @harrel56 we definitely want to preserve that behavior but yeah we can perhaps get this one merged and then restore it i in a next PR (I think being able to ""upload"" a local file is probably the most straightforward way to resupport it but we can brainstorm)', 'comment_created': datetime.datetime(2023, 6, 8, 18, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1223389019, 'comment_body': ""Definitely! We can probably hit this too in a follow-up PR, no need to block this one, but yeah I'll show you how it works!"", 'comment_created': datetime.datetime(2023, 6, 8, 18, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1228687210, 'comment_body': 'I think you missed `react-bootstrap-icons` and `moment` dependencies?', 'comment_created': datetime.datetime(2023, 6, 13, 20, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1228939677, 'comment_body': 'Ah! I missed the `--save` flag', 'comment_created': datetime.datetime(2023, 6, 14, 3, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}]","[{'commit_sha': 'ecc9cf398484eea79c633fbcb8919b4761d6f0e3', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44c8b74aae5ab73421db62573c65424ff8241c9', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a52c1c457006048957ea974a33792aed277a99de', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7d1ec61d49a89a8f8c757c8025bea12a6233e70', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a5958c5083d32cf75fa6e3a826c61f2e81c7ace', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a3d23c4d3810f99df7e61558db2716a3802d70e', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45ba6c29f799e6e51b33a407ee5d6a2dd27a908e', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9974cd489768911824982d21ce4e1bd2c7a69329', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '291231732031b86404284a9c6c8490b15939a403', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdf4bdef2ef1bbdc0eed55fb4dd6bb4b143ac102', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c986da96019a78c9f7891fc9637ac844f6a61a9', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0aaf623dba9df6cdeed23b86b501bf6423997b5', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c5361b5cd9d579e44395dcdd19eb7c0f5a2dc2e', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a7710d99787768f8674eb0fd67652fe8707fc39', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b75fc1cf0486c63c712547d0a014ce227e5fd65d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb65eee148754c4ec0790728a6dd2e880c80f79b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b9c3c36c206725d4209c2b9c2f689cda1bcb311', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '868e15dd03873e5acf3ad239f5f07c138790c4c2', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33d818e81c78d5bccc8c0bbe8e647638b788ccb0', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15530d1d7761ecde8d7ae75f4a4a941147b3c2ae', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e448ace4df15bffbba9cf4148def6bda55861037', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67f038fd82f9e1862337450b2d838d5703438d5e', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6973341008752e26d0058e8903284eeb0f3176e', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '693e3936af15d15030e82ef2c4ae0f3123dcfc7f', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2aa84bb8079e603fdccb5be7ade7d55eec28554', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58e883a3aede9aadc3bc10d919770cd1f6d51c0b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72748d878182417d7d0a116928de0c86dda4d90a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ec6641ce7b97b67fd8e4910ae90b1da0728c528', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b5e9978834850019af3ecc4a718ffcf56a72eac', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b81145675815ed5f1f3107e273dfca527a714b11', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64def4a7a826844189c29c22a630d11ca8df1dce', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a47c3668fa7c751dea4bd9f13f8dff915e731167', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4779b281affc94a39090e7788011ab88118e530', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a63a465fac2802f81b242647e9b170fbfb6a1a0d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f164304750b07e971907f67930e3f18b9a578ee8', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b509831b3f63f6d57e0fa3d56e5479b459f26fbb', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd620ce12f47e84ed4c112bd8fc4138a356a9e309', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e111543e776403c2ef242449177fa41e5e5e25a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0d80afd6a3a352c01963415089e3e286a7125e0', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c29e67e87172fef9795a49a22d5e049f511ec31', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ae5461cac09dd7ac53b7df4ee22de03205dd39e', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cc01953c89de2a8e27ce8dca2c505a6a3eb2d47', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5257882b9e75ad30cc76cf7f4fc23603ed5dde09', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adc331db00d72ec959a0a9b558ab02f35cea7cde', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df8bc0e51d235786b65e1be008cb38d553ef2087', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd31577c4e79f4225b09dbd2fe6075a79052bd9de', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ddde6aa00763292788aa79c0c71c8f9bbca5788', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67d529ae879e5ad243e0736d2e4cbfd7bbf2b277', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c29cb4e647081ad483bbae0d0dd82c29b84792b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16d13496a704f06df24903475418b20b74841d30', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d3075bbf0220d685248cc04ba4a5b91ea2f7856', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c6775a5b3bb191b136445d113d600057b9053b9', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b99d7ca40be01eca654493f8ca2c0c167c5207f', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6363c14c153a53925bd1870a0682f126cf66d4d8', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b31cfe3cefd9c50e32e6ff7a9aef82a55a9018ec', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '459c94e0b4c271dde3c9fecd7afeeb8b0e1a9cb2', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab85d098b2c9faa09109f7e45c00b12bd3df9f4', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c89e6a6408bb0df85400b5c79649c706b30cbf53', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cb382013ccc7b893bfd20eca42f78fa61af9c0b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e1f15ad70c684fff1e24860e44aceda7adfe4af', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a98e7cb3e70a95dd8a5c671faf5c663bbd7cf6b8', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf5cdf459b7541362b74dc92574111f4c9504eef', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b803d1fa227d463af5494a5cc6cd2c35202d0199', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8614daa4e2a813f2c5d51a560a56888ae7df7c7a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd67d6026729af3854436990d0efc8d3e5304291', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf75a66aeab04138d91ac40b355fbf99d9fdd9fb', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97e49f81f870c7d7edb2fb6a969c029572713d5f', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6129b923a28ee60f60d34d444ce52fd5cba73c19', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '498a6ad99c311aa99e2c67d90d41e62a1fb2c074', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0169cc3b84e5d5ef78035d9bf2a93274f1c02e', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a235dccedcf57fa7a9ab47c4b9d34d4a3559b1', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c026be0f7c220571a86805bbea7a670f42e13666', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8779f4354ca73bc3369e30deb21f03a367f8ccb', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503176f390d9b2b1ff7a91b97ad701e71f222491', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58bcb8765d3a35a2b5b0144c2e7dd82046ef0624', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af1362b47d03e152f545ae299bde050af7b8b8a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5242d00d5e5fc32e3a4ee00c4715239fa8ebb928', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d5b0f2b78df7dc66f525fa5b859d08a9cb79be0', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f46dcd7775b726e270c058d200a9efbd5715166f', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2348c8484e533ccd77c6aa185efd9fac2ce2b24', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c38822606294ca42d490618d98a45e3ae4dd3f2f', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3562d4f381ecb94e8b24a201ac102e9fdd341de6', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb31e2716c26652af298ade6af8a5d14204eb3ca', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c024db55f66f6bbc8a7e5769eab99097e9563b37', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94fc21847521fd59e925d496243ee8ddd44299e7', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a551ade11dde4377331e3652d599e6264a58313', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e9305c31239ac5079aa3f1ee1047695190e1c3d', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7501468702126cf2fac0d3776fe6958021f0db01', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1de7f5635e890d5e855b5a9789127285952a213', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cba483cf5f7136a79d355264550fc7d39d03fd6', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '718bb75526f69648ce0ef890a01cbf263a2f6a4c', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '322f91fc9d872ae3b510712961c788f0aa308dc2', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '232c690c4f495bf5f8a82a080114754740246c9d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a281783a22ffbeea1c20ffb1579f727c8aba358c', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7281524d8764549e923c6ae3d5d5615a10d3b995', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3df82984cdc947b21d62d1853d106f2bff1ea76', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c55bafca927ceb06a7aa92b0a8907e40b7d5619c', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fcbc0ea74e48e92050e1b9e05640d86dd70db0d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb767f852fcdef10e90ea8f6df09083692c4eb40', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '326f03b7a8486371996b91f93954f335986bd547', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc1786ccc679f3455268b50c4dcf2642dfe59997', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9704a93ef2a05ec96f47b908096b95db6858fe30', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c531f8faa4e7f74244a32dcedc5b62349dfbe3b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '629bf73d4b5a079baaddc7c6643bc56a0a944ff4', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82be256ddf7599c7336fa0565ca1257df4040900', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd7f9d7cff04f6b3cc74973b252a6c8fc1bde9e7', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de7cf74ad8fd3ca22e3416930a4ad8b5138bbf72', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50dc6620c1bdcdc0d47a8155c96686a4f4cbd0bb', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4503fda6225279649b57ec5addebffda9986fdb', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd04f0fcf3a6e9161cbc72873a6914101f87b362b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8faf59cb75ab1a20631ff40022f7fb15ab41c7a8', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e702b38208b73f238d4be0af3d63d640c3a48baf', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e37065978e17b97a3c67eb9632814388d106597', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8148200c0519e8c33d70c834f4a29c1bd847d140', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e443810f336fee1d0560727b2fdce4fd12f0405b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5eaef71457822d4cdda3ee0874b8dd4c0bc1669e', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6afc2243419d4fee50cbf2be5440a67322a47efc', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4b8e336c68af6457aa14ed77b03ca48a0b56f93', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5b23a04aab1d1b5aaf318e3993e6f64d7e4ab8c', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1e9d9569702ee279ab7fa0d6f409c234148396a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0523703c35e8e834dbbe8ea099bead4390cd5e2', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35dd39a3efa040724ea837f6099496958615273b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09af263691ca3ed1d2f73f20f8e000c7ecd6dcff', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e24b74bd41010efe42d82d6eb9a42fac11e1e6b1', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '104f71b2f0400cc603d76aaf38a4c70694c51614', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '420ec6c6c4c1859144c57630af4a382edb1bf098', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1e0c72da356cb2eec8aef7a4909c83f406e9ccd', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a33ac8f33dd3fc966788f5857e416817550bbbb', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e60759937fcb1343d926193a68209ba7275fd0d', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1b84538db07f11256807a40a4f886e6122470b1', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '476fa7fe6519c1457820d46e3c2dc165523265a3', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '546bac1a0665959bb5dccaa5ad17c42b24d0ec28', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d41dedf37d9d5ad76745803f479c3006a394f63', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c61d2b83a7d26964b9ada7e4c353a442ac0bdae5', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f96caa0454e2e17aa6d23996206b8e1045696c9', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0e7f26c0fc3133ca3ea05cd2f91422aad8b7e06', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e95a05817580326e8444df0eab15ad2f94734b0', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd1175873b1fd0653005c3565e6be58464669f62', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dd5ed8a6202a43a0e1c1e53ac31b792d859bcb2', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aad1d1b9e85554465004fa07a6e8a96d8220f3c3', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2906bf2b021bb16e4340cc1dbb58423483b36a2', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91ab6ae778f655ddd88ac07de48e3b96a2f59eef', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8259f706939119040508c77dcc4537abaeda759b', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a7956bc9c437bcdbad822ebd7daec86c3059454', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6acff242d747522e23307a25b45a68915a767d89', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42e6594b04a0a3f66e3c8d3874cd1277e387ef8c', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '122c13e14459f9c838a6db1f14273bf4d7121405', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '759c513a9ed9ea740e000468b9ac0d7ad41960fb', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83258bfe9c6635415dcd67db4772ed1fc5ca8041', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a8625a38511751e932e0b5c3130a236ba66bd0f', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f96b7c8b1e26c7014e5c6baeeef509da75164fbf', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17
1395053697,Feature: Upload locally generated report to bowtie UI,This PR enables users to upload locally generated JSON data to the Bowtie UI. It allows for a more informative and comprehensive representation of their local reports.,True,297,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/297,https://github.com/bowtie-json-schema/bowtie/pull/297,closed,20161,9349,10,46,8,46,0,0,[],2023-06-16 04:09:56+00:00,2023-06-23 15:52:54+00:00,646978.0,"7 days, 11:42:58","[{'comment_id': 1235822765, 'comment_body': ""I wonder if there is a need for `loading` and `lines` states? Can't we just use `loaderData` directly?"", 'comment_created': datetime.datetime(2023, 6, 20, 20, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1235824310, 'comment_body': 'Fragment `<>...</>` seems to be unnecessary', 'comment_created': datetime.datetime(2023, 6, 20, 20, 59, 27, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1235830597, 'comment_body': 'Why not split it to 2 different functions if you need to check for event type inside?', 'comment_created': datetime.datetime(2023, 6, 20, 21, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1235867584, 'comment_body': 'Is there a reason for searching for a newline and `{` on next position? Can we just change this regex to `\\n`?', 'comment_created': datetime.datetime(2023, 6, 20, 21, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1235877213, 'comment_body': 'I guess this should also show some kind of visual indication that something went wrong', 'comment_created': datetime.datetime(2023, 6, 20, 21, 12, 58, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1235905387, 'comment_body': ""I think it's generally more preferred to apply styles to classes instead of ids, but that's not a big deal"", 'comment_created': datetime.datetime(2023, 6, 20, 21, 19, 59, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1235909864, 'comment_body': 'I would say root path should still point to newest draft version. Updating local report is rather unusual action for the user, but I might be wrong 😄 ', 'comment_created': datetime.datetime(2023, 6, 20, 21, 24, 23, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1235916266, 'comment_body': 'Perhaps coming around to this as well, so sorry for misleading you a bit @AgniveshChaubey -- let\'s maybe go with this still then (redirecting to latest), and we can think about how we ""automatically"" make it a bit more prominent when someone\'s using the UI offline (i.e. locally) later.', 'comment_created': datetime.datetime(2023, 6, 20, 21, 33, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1237014400, 'comment_body': ""Yes, I think it's unnecessary to set again the same thing!"", 'comment_created': datetime.datetime(2023, 6, 21, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1237048241, 'comment_body': ""We can't directly return JSX."", 'comment_created': datetime.datetime(2023, 6, 21, 13, 57, 19, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1237099873, 'comment_body': 'What do you mean? React components should mainly return JSX. It could be something like this: `loading ? <LoadingAnimation /> : <App lines={lines} />` or even:\r\n```js\r\nif (loading) {\r\n  return <LoadingAnimation/>\r\n}\r\nreturn <App ../>\r\n\r\n```\r\n', 'comment_created': datetime.datetime(2023, 6, 21, 14, 25, 48, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1237105327, 'comment_body': 'Function `useLoaderData()` seems to not accept any arguments', 'comment_created': datetime.datetime(2023, 6, 21, 14, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1237122436, 'comment_body': 'And BTW it looks like the loading screen only works on initial component mount. Maybe this hook can be useful for implementing loading screens? https://reactrouter.com/en/main/hooks/use-navigation', 'comment_created': datetime.datetime(2023, 6, 21, 14, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1237352811, 'comment_body': ""> What do you mean?....\r\n\r\nSorry for the misspelling! I meant we can't directly use `return { ... }`. It would be considered an object.\r\n\r\n> `loading ? <LoadingAnimation /> : <App lines={lines} />`\r\n\r\nOh! I see, you meant to remove `{...}` too and not just the fragment.\r\n"", 'comment_created': datetime.datetime(2023, 6, 21, 17, 30, 4, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1237353741, 'comment_body': '> And BTW it looks like the loading screen only works on initial component mount.....\r\n\r\nFixed', 'comment_created': datetime.datetime(2023, 6, 21, 17, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1237357203, 'comment_body': ""Yes, you're right. If the data is valid line-based json, then we can skip that extra search."", 'comment_created': datetime.datetime(2023, 6, 21, 17, 33, 6, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1237529561, 'comment_body': ""Bootstrap's `toast` element added!"", 'comment_created': datetime.datetime(2023, 6, 21, 19, 10, 49, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1237629327, 'comment_body': 'If split, then three separate attributes will be required to be added to the form element!\r\nBTW done!', 'comment_created': datetime.datetime(2023, 6, 21, 20, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1237644189, 'comment_body': ""fixed! \r\nBTW it was not causing any errors. Maybe because it's referring to the same route?"", 'comment_created': datetime.datetime(2023, 6, 21, 20, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1237650426, 'comment_body': 'Yes, I agree with Harrel here too!\r\n\r\n> we can think about how we ""automatically"" make it a bit more prominent when someone\'s using the UI offline (i.e. locally) later.\r\n\r\nIf I am not wrong, you mean rendering the `upload report` component at `/` route when users are using UI locally?\r\nHowever, the option to upload a report will still be there in navbar\'s dropdown list.', 'comment_created': datetime.datetime(2023, 6, 21, 20, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1238645311, 'comment_body': ""I would be careful using hooks like that (`useNavigation()`). Hooks are really tricky and you mustn't put them in any loops or conditional statements - you can check it here https://legacy.reactjs.org/docs/hooks-rules.html.\r\nBut still, this usage is basically correct, but I feel like it's just hard to read and reason about. I would just put it near `useLoaderData()`"", 'comment_created': datetime.datetime(2023, 6, 22, 14, 49, 53, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1238654051, 'comment_body': ""Moreover, you shouldn't put expressions directly in a dependency array, normally using something like this would be enough: `[state]`. But that does not really matter because this whole `useEffect` and `isLoading` state is redundant - why not just use data returned by the `useNavigation` hook?"", 'comment_created': datetime.datetime(2023, 6, 22, 14, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1238659242, 'comment_body': 'This is the same as `handleDragEnter`, I guess there is no harm in doing `onDragOver={handleDragEnter}` :)', 'comment_created': datetime.datetime(2023, 6, 22, 14, 58, 7, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1238662794, 'comment_body': ""I don't understand why there are 2 representations of errors? Here you use toast, but if uploaded file has wrong extension then it looks completely different. Can we use just one approach for representing errors?"", 'comment_created': datetime.datetime(2023, 6, 22, 15, 0, 40, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1238664326, 'comment_body': ""Maybe it'll be more readable if instead of conditionally adding css class, you would conditionally render whole `<h5>` tag?"", 'comment_created': datetime.datetime(2023, 6, 22, 15, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1238666906, 'comment_body': ""Is this animation necessary? I think I don't even know how to trigger it - maybe adding a whole separate library for that is not worth it?"", 'comment_created': datetime.datetime(2023, 6, 22, 15, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1238672706, 'comment_body': 'Putting this in context is really nice. But `theme` is basically a boolean variable so maybe something like `[isDarkMode, setDarkMode]` will be more appropriate? ', 'comment_created': datetime.datetime(2023, 6, 22, 15, 8, 22, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1238676360, 'comment_body': ""I would also rename `handleTheme` to something like `toggleDarkTheme`? You could also use another variant of setting state: `setDarkMode(mode => !mode)` - this will ensure that it always toggles appropriately even if it is called multiple times in a single update batch - but that's not a big deal though"", 'comment_created': datetime.datetime(2023, 6, 22, 15, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1238763313, 'comment_body': 'sure!', 'comment_created': datetime.datetime(2023, 6, 22, 16, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1238765198, 'comment_body': 'Okay then! gonna remove it.', 'comment_created': datetime.datetime(2023, 6, 22, 16, 21, 24, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1238773843, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 6, 22, 16, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1238811730, 'comment_body': 'I have intentionally kept it separate. The entire red block will indicate that the report is not a json file (though this situation will only be there in case of drag and drop). \r\n\r\nThe toast will represent that the json file is having some sort of error (maybe not well formatted or not having enough information)', 'comment_created': datetime.datetime(2023, 6, 22, 17, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1238816916, 'comment_body': ""`not have enough info` has not been handled yet. Though it's having very less chance of occurrence."", 'comment_created': datetime.datetime(2023, 6, 22, 17, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1238819488, 'comment_body': 'I haven\'t tried to preview what this looks like yet, so I could be off base, but definitely don\'t be checking the extension of the file -- you don\'t know what it will be, someone can redirect into a file of any name (I regularly redirect into some file called `output` with no extension).\r\n\r\nAnd I don\'t think it\'s very different if the file isn\'t valid line-delimited JSON or if it\'s somehow otherwise invalid -- these files are internal implementation details of Bowtie (i.e. the contents of them aren\'t really hand authored by anyone, Bowtie produces them and Bowtie then consumes them) -- so an invalid file basically only has one explanation, namely ""you\'re uploading something that wasn\'t produced by Bowtie"" -- if anything else is happening it\'s likely a Bowtie bug.\r\n', 'comment_created': datetime.datetime(2023, 6, 22, 17, 14, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1238821191, 'comment_body': ""> If I am not wrong, you mean rendering the upload report component at / route when users are using UI locally?\r\nHowever, the option to upload a report will still be there in navbar's dropdown list.\r\n\r\nYes -- in other words if we detect that the base URL is `https://localhost` (or the reverse, not `https://bowtie-...`) then maybe we skip showing any dialects and only show the local upload. This will probably be more obvious as part of #296 because the obvious way to implement that I think will *force* us to do something different for the local case."", 'comment_created': datetime.datetime(2023, 6, 22, 17, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1238828742, 'comment_body': ""In this case, `useNavigation` will only change its state when there is a path change. And for that case, we will require to trigger the useEffect. So I don't think there would be any problem here."", 'comment_created': datetime.datetime(2023, 6, 22, 17, 24, 22, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1238849959, 'comment_body': ""But there's no need to use `useEffect`, you just need simple variable assignment:\r\n```js\r\nconst isLoading = navigationData.state === 'loading'\r\n```\r\nIf simplified it could look like this:\r\n```js\r\nconst ReportDataHandler = () => {\r\n  const loaderData = useLoaderData()\r\n  const {state} = useNavigation()\r\n\r\n  return state === 'loading' ? <LoadingAnimation /> : <App lines={loaderData} />\r\n}\r\n```"", 'comment_created': datetime.datetime(2023, 6, 22, 17, 44, 50, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1238883932, 'comment_body': 'Hmm! got it!\r\n', 'comment_created': datetime.datetime(2023, 6, 22, 18, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1238900721, 'comment_body': ""> I haven't tried to preview what this looks like yet, so I could be off base, but definitely don't be checking the extension of the file -- you don't know what it will be, someone can redirect into a file of any name (I regularly redirect into some file called output with no extension).\r\n\r\nHmm, I didn't think that way.\r\n\r\nSo to check the validity of the report, I think we must be checking if it contains at least three json lines (one containing `started` property, one containing `case` property and one containing `implementation` property). And if any of these is missing then we can consider it as invalid."", 'comment_created': datetime.datetime(2023, 6, 22, 18, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1238907792, 'comment_body': 'Right, don\'t check any of that explicitly though -- simply start parsing the file assuming it is valid -- if you get a runtime error, the file is invalid (this is essentially what the Python code does) and then you report to the user ""hey you gave me something other than a Bowtie report"".', 'comment_created': datetime.datetime(2023, 6, 22, 18, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1238973316, 'comment_body': 'Actually an even better way of doing the above might just be trying to fetch the dialect file and whenever it fails falling back to showing the ""upload report"" widget.', 'comment_created': datetime.datetime(2023, 6, 22, 19, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1238979694, 'comment_body': 'I think checking for `localhost` would be good option because the fetching process is being done in loader function and the fetching URL itself is dependent on route `params` and also its corresponding component is dependent on the status of loader function!', 'comment_created': datetime.datetime(2023, 6, 22, 20, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1238985887, 'comment_body': ""But ya, if you want that way, we still can achieve that by redirecting to `upload report` component from the loader function itself if it fails fetching the data. But in that case we'll have to compromise with the URL (as currently `<ReportDatahandler />` is being rendered at `/` route)"", 'comment_created': datetime.datetime(2023, 6, 22, 20, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1239894465, 'comment_body': '(As usual not being a React or even frontend dev) -- is there a reason you use inline styles here but still have a separate CSS file?', 'comment_created': datetime.datetime(2023, 6, 23, 14, 31, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1239895522, 'comment_body': '```suggestion\r\n                <small>Bowtie v{runInfo.bowtieVersion}</small>\r\n```', 'comment_created': datetime.datetime(2023, 6, 23, 14, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1239971174, 'comment_body': 'Actually, this is not even required anymore! Removed it!', 'comment_created': datetime.datetime(2023, 6, 23, 15, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}]","[{'commit_sha': '5bf0eedca3fe67d7dd8f2378efbb8d91e9ec5183', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c2fbc89c57eb3847e1b27314a642e3585334cc0', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e5072a002b8528c600f099f031b2755b4d9f1d2', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7e599041e1b67030f0dae618febf904d016e951', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94c130e5f059d38809d2291cab1563c6cad478c9', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b596719d0a7eb01256855e10145a059e1f81a365', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff0420a0af0dec17c50810d27603275ed6a7accc', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2870d40878bfd318ccdf1d3ea61bb9e5ae23afd5', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e21b8a3b60274b8b5c6573fbc818f6625fdb648', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d9d7985e28efa9f00c5923bacd7e6529251b1b6', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57f2a7727db222462fb634e95e3fd95228a03fc2', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '398060638a5ff924adb8fd2287602a451cdd8279', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c89957a71e138203faefb20c375a7dc5ab87fb1', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d8a54ddd335c53a3205e5df0d3c3390a01fc383', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fb7f24a6f9f983ac1c4035eb21829fd8fb81bae', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '250cdc11804892a3b420b8d0ff5c667f577e5ac0', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fef87458f8ac8ba7a7c7175601ec1dbd63b7e193', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6859ba7a575dc1bd96185625d60575658574398', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ec8ca71d65fa1ae1f56195c566bed4c7946b083', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69fe79bd9f4edb51c00d437c3bdb7d9edabe288d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c964fc9e988df00cead4a71744bcbcb10be1244e', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7a84df53746582cd7986a0df21af85f8dd6db75', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91310c6029fb5cf59acca4c79227de8660f0c15b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a22ff032e031cfb44f69ecc90608d073780ec91c', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b01440be17b691fc8cc700fa2a012cc452914993', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcc22e29f3bd33258d60b0c1cf956e3b9223aaf7', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e67a83d61e2f5400f0200ecc779ea9dd04634c78', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '119089c34f843f3036f10b96a2d8c5eb1b9e69ae', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdfcc47c26ee6d6f9b03790ab3fb97cd4be8652b', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e560550d61c02ccdccf0ceffdbbfe78c6090a4d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '314b307d8d340e98895cba426be69425a45c6258', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c682b5c1868b3737a7ea5adc55a6e8b2c590e0de', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '976a6977dd8ba57c0919521e225b4617496c0954', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc897d469d4c2ede4101dd94c2b0c8201f9d5576', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36319dc1ff698e4c63a36681385ecad0aa01bc04', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2a289de03bcab3695c2865b485ab33a9ab138c6', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81ea774aecd330537d3901a503704abb238dc81a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22bbe956f44d267fdf8c2ab2fa8a6298cfeeb824', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd6341fa7701b816f9223d384126896517830852', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19a121078690e0fd5a02d6ca3099219bba0e6c8d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '810bbb2f90033898b1aa763456af6815ca74771a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3706c22ece815f3bebeb7cc701084691ca748293', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '703ec5cd3dcc9c7eee1f4f0300b7edd007c785b5', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd97504a9da76103f2ff3036177ddecd6ceaea6a5', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b04647200775e8e64f4bacd653913305b68b9ef', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd6f2f7f55c00fea3a21629f217c2e6a3d418fdc', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17
1417340216,Add support - networknt/json-schema-validator,This PR addresses #303.,True,316,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/316,https://github.com/bowtie-json-schema/bowtie/pull/316,closed,241,0,4,18,3,30,0,0,[],2023-07-03 04:50:14+00:00,2023-07-10 09:18:26+00:00,620892.0,"7 days, 4:28:12","[{'comment_id': 1251025377, 'comment_body': ""The directory here is named differently than the real one, so this will fail to run I think -- let's actually keep this as is and rename the directory."", 'comment_created': datetime.datetime(2023, 7, 3, 15, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1251025526, 'comment_body': 'Same here.', 'comment_created': datetime.datetime(2023, 7, 3, 15, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1251030816, 'comment_body': 'I\'m not sure if you copied this from @harrel56 \'s harness (and am too lazy to look at the minute :) but technically this would be a Bowtie bug to ever reach this -- `{""ok"": false}` isn\'t meant to mean ""I don\'t understand that dialect"", it\'s meant to mean ""I don\'t support setting dialects at all outside of a schema"" -- Bowtie sending you (the harness) a dialect request that isn\'t one of the ones supported by the implementation (i.e. that you responded with in `start`) would just be a bug, that should never happen, and would seemingly be the only way one could get here in the harness.', 'comment_created': datetime.datetime(2023, 7, 3, 15, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1251090404, 'comment_body': 'This whole ""json provider"" dependency probably should be removed, because the ""networknt"" by itself depends on other json libraries (I mean, it just happens that it also uses `jackson` libraries) and all the transitive dependencies will be handled automatically. \r\nSo, the line \r\n```groovy\r\nimplementation ""$harnessImplementation.group:$harnessImplementation.name:$harnessImplementation.version""\r\n```\r\nwill be enough', 'comment_created': datetime.datetime(2023, 7, 3, 16, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251090758, 'comment_body': '""Implementation-Group"" is not read in harness runtime so it could be removed', 'comment_created': datetime.datetime(2023, 7, 3, 16, 23, 47, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251092144, 'comment_body': 'As mentioned above, these ""Provider-*"" attributes are unnecessary and can be removed', 'comment_created': datetime.datetime(2023, 7, 3, 16, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251094615, 'comment_body': ""The name of the file should be capitalized (pascal case). You even refer to it with capitalized name in gradle script - I don't even know how it finds this file, honestly 😄 "", 'comment_created': datetime.datetime(2023, 7, 3, 16, 29, 7, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251100602, 'comment_body': 'So I got it incorrectly, gonna need to adjust it in my harness too', 'comment_created': datetime.datetime(2023, 7, 3, 16, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251100831, 'comment_body': 'This field is unused', 'comment_created': datetime.datetime(2023, 7, 3, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251101155, 'comment_body': 'This import is unused', 'comment_created': datetime.datetime(2023, 7, 3, 16, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251101214, 'comment_body': 'This import is unused', 'comment_created': datetime.datetime(2023, 7, 3, 16, 38, 29, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251101678, 'comment_body': 'These 2 local variables are unused', 'comment_created': datetime.datetime(2023, 7, 3, 16, 39, 10, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251103740, 'comment_body': 'When setting specific dialect you need to perform some action on the validator. It looks like you should call e.g. `JsonSchemaFactory.getInstance(SpecVersion.VersionFlag.V4)`, but ofc with specific dialect', 'comment_created': datetime.datetime(2023, 7, 3, 16, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251106831, 'comment_body': ""Does it do something? It should somehow register all schema from `runRequest.testCase().registry()`, but unfortunately I don't know the API of networknt lib"", 'comment_created': datetime.datetime(2023, 7, 3, 16, 44, 33, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251115401, 'comment_body': ""(Lemme know if there's some better place to make that even more explicit!)"", 'comment_created': datetime.datetime(2023, 7, 3, 16, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1251115790, 'comment_body': 'Does the linter not catch unused imports + variables? If not can you suggest how we configure it to? Or are we not running one, I forget.', 'comment_created': datetime.datetime(2023, 7, 3, 16, 55, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1251197470, 'comment_body': ""It seems there is no java linter supported in pre-commit? I'm not familiar with this tool tbh. Usually you would use `sonarlint` or `checkstyle` with java"", 'comment_created': datetime.datetime(2023, 7, 3, 18, 53, 48, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251202549, 'comment_body': 'https://github.com/gherynos/pre-commit-java it looks like provides a hook for `checkstyle` at least.', 'comment_created': datetime.datetime(2023, 7, 3, 19, 2, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1251211661, 'comment_body': ""That's strange! It keeps automatically changing to camelCase. Is there a git command I might have executed incorrectly? I only did one reset, and since then, it has been automatically converting to camelCase."", 'comment_created': datetime.datetime(2023, 7, 3, 19, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1251213149, 'comment_body': 'Are you on macOS?', 'comment_created': datetime.datetime(2023, 7, 3, 19, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1251223472, 'comment_body': 'Yes, the `getSchema` method is responsible for collecting the schema that needs to be validated. [This ](https://github.com/networknt/json-schema-validator/blob/master/doc/quickstart.md)is the reference I have used for this implementation.', 'comment_created': datetime.datetime(2023, 7, 3, 19, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1251227196, 'comment_body': ""Thank you for taking a close look at the PR! It's quite late today, so I will address your comments and resolve/respond to them tomorrow."", 'comment_created': datetime.datetime(2023, 7, 3, 19, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1251227377, 'comment_body': ""nice - I could add it later if you don't think it's strictly needed in this PR"", 'comment_created': datetime.datetime(2023, 7, 3, 19, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251228695, 'comment_body': 'Yep fine with me', 'comment_created': datetime.datetime(2023, 7, 3, 19, 46, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1251232525, 'comment_body': 'Sure thing, there is no rush', 'comment_created': datetime.datetime(2023, 7, 3, 19, 53, 17, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1251252071, 'comment_body': 'So, if I recall correctly the structure returned from `runRequest.testCase().registry()` is something like this:\r\n```json\r\n{\r\n  ""https://host.com/schema1"": { ...here goes actual schema definition },\r\n  ""https://host.com/schema2"": { ...here goes actual schema definition },\r\n  ...\r\n}\r\n```\r\nso you would need to iterate over all fields in this JSON and call this `getSchema()` with value of each field.\r\n\r\nBut I have other concern that `getSchema` only creates Schema object and it does not store it somewhere in its internal registry (but I might be wrong, haven\'t had time to thoroughly check it). Maybe implementing custom fetcher is a way to go? https://github.com/networknt/json-schema-validator/blob/master/doc/cust-fetcher.md\r\nIn this fetcher you would just serve schemas from beforementioned registry json object', 'comment_created': datetime.datetime(2023, 7, 3, 20, 13, 47, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1256375045, 'comment_body': 'Windows', 'comment_created': datetime.datetime(2023, 7, 7, 19, 46, 45, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1256381780, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2023, 7, 7, 19, 51, 36, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1256396323, 'comment_body': 'I think we should maintain the `dialect` method exclusively for configuring the dialects without the `$schema` property. All actions associated with validation should be added in the `run` method.', 'comment_created': datetime.datetime(2023, 7, 7, 20, 1, 34, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1256401853, 'comment_body': 'used ArrayList to store the results', 'comment_created': datetime.datetime(2023, 7, 7, 20, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}]","[{'commit_sha': '0013a6ae4e92cccb70c3090aa44d8e4f510d0982', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7669061b80f6500b23a0ccd6891621906c31d933', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a64ec5288a51cb0e8648a99adb161db7138a189', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75ad857b2435d99da2374e8df98e33b998fa9e9d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e94e75855fcc8afc4db4575a7463142ad8981e46', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce57e81a05b5436cc8bcf4df03dbbd4278e952d4', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9233bceeb67796690d7f732f67bfe4c227cf728f', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ed35853bb467f033d6c8e4e60f8b0d9c7abe248', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27ac26b25cfc106b7ee84daaff76c4aa27fbba4c', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c61af3a3644f7051bfe9f76fbb8a8f55072c2385', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cdb7c4aa1842bc9fbfa84cac66e0b6a9903b8f1', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1020064e74eb1596c89adb69fd1081c06866a23a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '374b4c6688709394be12b126a1af4797eb46dadb', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f69517988890f16108ea33513bfa6f3d753bcfc6', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aa5d9363124ff8af4ab3124c8d44e293388b699', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '118779ca5edd87cc2947c50ce776cd4dfa1fe1c6', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa9d06be028a41a6c0809616faa33d7b724d7394', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6156e70d00f43fdc3bdc37045f4cc168f4481a3c', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17
1447765249,Add support - opis/json-schema,"Hi @Julian, 

Before creating the harness, I have already tested the required opis APIs separately and they are working correctly. Also I have carefully reviewed the harness code several times, and I am pretty much sure I didn't make any mistakes in the code (although there may be some errors).

However, I am getting this Traceback:
```
Traceback (most recent call last):
  File ""<frozen runpy>"", line 198, in _run_module_as_main
  File ""<frozen runpy>"", line 88, in _run_code
  File ""C:\Users\agniv\AppData\Roaming\Python\Python311\Scripts\bowtie.exe\__main__.py"", line 7, in <module>
  File ""C:\Users\agniv\AppData\Roaming\Python\Python311\site-packages\click\core.py"", line 1130, in __call__
    return self.main(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""C:\Users\agniv\AppData\Roaming\Python\Python311\site-packages\click\core.py"", line 1055, in main
    rv = self.invoke(ctx)
         ^^^^^^^^^^^^^^^^
  File ""C:\Users\agniv\AppData\Roaming\Python\Python311\site-packages\click\core.py"", line 1657, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""C:\Users\agniv\AppData\Roaming\Python\Python311\site-packages\click\core.py"", line 1404, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""C:\Users\agniv\AppData\Roaming\Python\Python311\site-packages\click\core.py"", line 760, in invoke
    return __callback(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""C:\Users\agniv\AppData\Roaming\Python\Python311\site-packages\click\decorators.py"", line 26, in new_func
    return f(get_current_context(), *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""C:\Users\agniv\Documents\GitHub repo\bowtie\bowtie\_cli.py"", line 423, in run
    exit_code = asyncio.run(_run(**kwargs, cases=cases))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""C:\Program Files\Python311\Lib\asyncio\runners.py"", line 190, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File ""C:\Program Files\Python311\Lib\asyncio\runners.py"", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""C:\Program Files\Python311\Lib\asyncio\base_events.py"", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File ""C:\Users\agniv\Documents\GitHub repo\bowtie\bowtie\_cli.py"", line 781, in _run
    exit_code = os.EX_CONFIG
                ^^^^^^^^^^^^
AttributeError: module 'os' has no attribute 'EX_CONFIG'
```

I have already updated Bowtie but still unable to figure out the actual error. Is it possibly something OS-specific?

<!-- readthedocs-preview bowtie-json-schema start -->
----
:books: Documentation preview :books:: https://bowtie-json-schema--359.org.readthedocs.build/en/359/

<!-- readthedocs-preview bowtie-json-schema end -->",False,359,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/359,https://github.com/bowtie-json-schema/bowtie/pull/359,closed,141,2,5,15,20,11,0,0,[],2023-07-25 05:32:59+00:00,2023-09-07 16:12:16+00:00,3839957.0,"44 days, 10:39:17","[{'comment_id': 1273099563, 'comment_body': ""Probably better to pass along whatever `json_last_error` returns in case it has some extra detail -- or if it's some opaque number, I presume there will be a function in PHP to convert it to an error string perhaps."", 'comment_created': datetime.datetime(2023, 7, 25, 7, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1273101063, 'comment_body': ""This shouldn't be global -- you're leaking the registry from one test to the next. Every test should run with a clean slate (no previously seen URIs), otherwise you may accidentally pass or fail tests based on previous state.\r\n\r\nI'm guessing this means you should be re-instantiating `Validator` for each test case."", 'comment_created': datetime.datetime(2023, 7, 25, 7, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1273398453, 'comment_body': 'Got it!', 'comment_created': datetime.datetime(2023, 7, 25, 11, 32, 58, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1273496962, 'comment_body': 'These are the wrong dialect URIs (or well, they\'re not precisely the same ones as the correct URIs), which is likely why you\'re seeing `UnknownDialect` errors. The correct ones do not have hashes, see e.g. https://github.com/bowtie-json-schema/bowtie/blob/main/implementations/python-jsonschema/bowtie_jsonschema.py#L47-L48 -- and yeah good to trust the error message always, if it\'s saying ""this is wrong"" double check carefully whether it\'s possible it\'s correct.', 'comment_created': datetime.datetime(2023, 7, 25, 12, 53, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1280305744, 'comment_body': ""Composer looks like it's available in the alpine repos -- https://pkgs.alpinelinux.org/package/edge/community/riscv64/composer\r\n\r\ndid you try using it?\r\n\r\nIn general it's better to install via the package manager whenever possible."", 'comment_created': datetime.datetime(2023, 8, 1, 8, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1280306734, 'comment_body': ""All other containers use `/usr/src/app` as the directory -- there's no real reason, probably that's just what other Dockerfiles I copied from did, but let's keep that the same (until/unless we decide to use /app for all of them but it doesn't really matter)"", 'comment_created': datetime.datetime(2023, 8, 1, 8, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1280312541, 'comment_body': ""I don't know much (anything really) about PHP, but I'm not sure this is right -- do you understand what this line does?\r\n\r\nMy rough understanding from glancing at the [first search result](https://medium.com/@softius/faster-docker-builds-with-composer-install-b4d2b15d0fff) is that you're turning off the autoloader, whatever that does, with `--no-autoloader`, but then you're immediately then running it in the next line with `dump-autoload`. That sounds silly, if you want to do that, you should just not turn it off and then you won't need the next line.\r\n\r\nHowever that same post seems to indicate a reason why you *should* turn it off, but that's because of the docker cache.\r\n\r\nNow the docker cache doesn't really matter to us too much since we don't really touch the harnesses often, but, again if I follow correctly, you're not doing what's needed for that -- specifically it looks like the goal is to make sure we don't invalidate the docker cache (the layer which installed dependencies) every time we touch `bowtieJsonSchema.php` -- but that already will be the case, because you did the COPY on line 7, so these lines will run always anyhow.\r\n\r\nIn short, I think if you mean to use this `dump-autoload` that you mean to put `COPY bowtieJsonSchema.php ./` between these two lines, not before them.\r\n\r\nIf you want to test that, you should try editing the `bowtieJsonSchema.php` file and seeing whether docker recompiles the image entirely (reinstalls dependencies), then try moving the line to where I'm suggesting and try again and see."", 'comment_created': datetime.datetime(2023, 8, 1, 8, 55, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1280316312, 'comment_body': 'It looks like for PHP, unlike Python, that the repo names don\'t tend to be unique.\r\n\r\nSpecifically, you\'re calling this validator `json-schema`, but there is a second PHP package *also* called `json-schema`: https://github.com/justinrainbow/json-schema\r\n\r\nIn other languages, e.g. Python, Rust, Ruby, etc., this doesn\'t happen, because we use the name used in the index (PyPI) which is unique and ""owned"" by one package.\r\n\r\nBut if it\'s not unique here, we probably need/want to actually call this `opis-json-schema` so that we\'ll be able to add the other in the future.\r\n\r\nRemember that you need to both rename the directory and change the `name` parameter in the `start` request.\r\n\r\nI was worried this would be the case for Java too, and it may be, though for now I think the two implementations we have have unique names...', 'comment_created': datetime.datetime(2023, 8, 1, 8, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1280326402, 'comment_body': ""Did you find the `Draft*` objects in this library?\r\n\r\nThey seem likely to be what you need here to properly support dialects.\r\n\r\nE.g. it looks like here is how this is done in the library's test suite:\r\n\r\nhttps://github.com/opis/json-schema/blob/c48df6d7089a45f01e1c82432348f2d5976f9bfb/tests/AbstractOfficialDraftTest.php#L69\r\n\r\nwhere e.g. for Draft7 you for some reason pass the string '07':\r\n\r\nhttps://github.com/opis/json-schema/blob/c48df6d7089a45f01e1c82432348f2d5976f9bfb/tests/OfficialDraft7Test.php#L27\r\n\r\nIf you don't find a mapping within the library that maps between dialect URIs (e.g. http://json-schema/whatever/draft7) and those magic strings (07) then you probably want to make one here and do that lookup and store the value as a global."", 'comment_created': datetime.datetime(2023, 8, 1, 9, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1280331393, 'comment_body': 'This doesn\'t look right, technically -- what you have basically will print a JSON object `{""error"": ""foowhatevermessage""}` whenever it runs into a decode error.\r\n\r\nBut that might violate Bowtie\'s protocol.\r\n\r\nBowtie does not always allow you to return an object like that.\r\n\r\nThat\'s only for `run` requests, where the key is called `errored`, see https://github.com/bowtie-json-schema/bowtie/blob/main/bowtie/schemas/io-schema.json#L212-L235\r\n\r\nBut you can\'t simply return some other object whenever an error occurs, you\'re supposed to follow Bowtie\'s protocol, and for example a `start` request, if that fails for whatever reason, there is no `error` message response.\r\n\r\nIf you *do* want to catch errors here, and I\'m sure you do as you said this is where your initial issue was, then the way you can report those is by writing them to stderr -- and then that doesn\'t have to be JSON.\r\n\r\nSpecifically it sounds like for whatever reason that PHP is/was writing exceptions to stdout -- so you should check how to configure it to write them to stderr, and then you may not need to do any extra work here, bowtie will notice errors on stderr and continue.\r\n', 'comment_created': datetime.datetime(2023, 8, 1, 9, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1280332537, 'comment_body': ""Same here, you can't invent new messages :), but hopefully the fix will be the same once you have things writing to stderr.\r\n\r\nAnd please file a bug if `bowtie -V` doesn't complain, because these objects aren't valid (and *should* be being caught because the schema disallows additional properties, but maybe there's a bug)"", 'comment_created': datetime.datetime(2023, 8, 1, 9, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}]","[{'commit_sha': '53824c4b72c717671f360fe29742f437b0b22e76', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2ff8825b02e4b08dc496845db6e82ad18c4a16a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '558eb7a740abbdb7c8337f15f25e0bca8af1877a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a89a3e582a8c58b44073c11637830bdd56801de8', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a973099f78ce18c5ef4a97f5937e4eefb72a900a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74b2979c374ea8b576120ea32853e1e93b97a04a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ac8924b1a709a9624f8511b232d044faf194718', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa1da84bb6388a3705a642ca303d62448d567119', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57f5c9bd89981b32a12f68884fe526dc600f5245', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad1670156749c229b57ee44594cdd1749c35fe9e', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30d867c2643565c4c71c52c9b8a669ae40e2f053', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bead14cf919c8adee85a45fc793c41eca287f58b', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14a0f1ae019c3280955e0ea29dcf74d080ae0ddb', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26c7bab4a278307d0d9627e79154f398c02f8d54', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d6afb65633e33e39c43b1fe61ceaa76ec5a89e8', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17
1474741532,feat: add per-implementation page,"This PR adds `/implementations/<lang>-<implementation-name>` path to the **_Bowtie Report_** (as mentioned in #248). 

At this stage, the newly added page displays the runtime info of all the implementations supported by Bowtie which are compatible with the `draft2020-12`. 

I tried to write the code in TypeScript, but as I'm relatively new to TypeScript, there's room for potential improvements. Any guidance in this area would be greatly appreciated. Also, any suggestions pertaining to the implementation-specific pages are also welcomed.

I have also done a basic setup for `/implementations/<lang>-<implementation-name>/dialects/<dialect-name>`, however, I won't be focusing on this route as part of this PR (I will address this one in the next follow-up PR).

-----------------------
Edit: Following the suggestions below, I am removing `/implementations/<lang>-<implementation-name>/dialects/<dialect-name>` to narrow down the scope of this PR to address one issue at a time.

<!-- readthedocs-preview bowtie-json-schema start -->
----
:books: Documentation preview :books:: https://bowtie-json-schema--397.org.readthedocs.build/en/397/

<!-- readthedocs-preview bowtie-json-schema end -->",True,397,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/397,https://github.com/bowtie-json-schema/bowtie/pull/397,closed,360,135,12,47,18,60,0,1,[],2023-08-14 16:32:09+00:00,2023-09-22 17:38:40+00:00,3373591.0,"39 days, 1:06:31","[{'comment_id': 1293722644, 'comment_body': ""Cool! I'll take a closer look at the entire PR, but because I see it immediately -- I wouldn't want us hardcoding anything here (or really in the UI in general).\r\n\r\nI believe which implementations support draft2020-12 is already available in the data outputted by the 2020 report (but if that or anything else ever wasn't available, we should make it available rather than hard coding it, we control both sides here!)"", 'comment_created': datetime.datetime(2023, 8, 14, 16, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1293781329, 'comment_body': ""Yes, you are absolutely correct. The data is, indeed, available within the report. However, to grab the data related to a specific implementation, we need to verify whether the **name** and **language** of that implementation are present in any of the available image URLs.\r\n\r\nIn most cases, the Image URL follows the pattern `/<language>-<name>` at the end, for example `go-jsonschema`. However, there are cases where obtaining data for certain implementations becomes challenging due to their names. For example, matching `JsonSchema.Net (dotnet)` with `/dotnet-jsonschema-net` (`ghcr.io/bowtie-json-schema/dotnet-jsonschema-net`) is difficult. Due to this reason, I've hard-coded these specific values.\r\n\r\nIf we want to make the entire path dynamic, we would need to make slight adjustments to the implementation names. For example, in the metadata, we would have to change the language name from `c++` to `cpp`, implementation name form `JsonSchema.Net` to `jsonschema-net` and so on."", 'comment_created': datetime.datetime(2023, 8, 14, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1293791835, 'comment_body': 'That\'s quite fragile sounding -- the UI and file should agree on an ID for an implementation, there shouldn\'t be any ""manual"" matching -- using the full image name (`ghcr.io/bowtie-json-schema/dotnet-jsonschema-net` or `dotnet-jsonschema-net` ) is probably the right one (since it really will be unique), and then you simply need to match that to the rest of the metadata for an implementation (its name and language).\r\n\r\nIt\'s possible that that metadata isn\'t completely written out now, but if not, then we should make it be written out.', 'comment_created': datetime.datetime(2023, 8, 14, 17, 53, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1293793228, 'comment_body': 'Looking at the report, from what I see, this is all already there. This is the first line for a run I just did with 1 implementation:\r\n\r\n```json\r\n{""started"": ""2023-08-14T17:54:15.968585+00:00"", ""bowtie_version"": ""2023.8.2.dev53+g5dc9de3.d20230804"", ""dialect"": ""https://json-schema.org/draft/2020-12/schema"", ""implementations"": {""ghcr.io/bowtie-json-schema/python-jsonschema"": {""language"": ""python"", ""name"": ""jsonschema"", ""version"": ""4.18.4"", ""homepage"": ""https://python-jsonschema.readthedocs.io/"", ""issues"": ""https://github.com/python-jsonschema/jsonschema/issues"", ""dialects"": [""https://json-schema.org/draft/2020-12/schema"", ""https://json-schema.org/draft/2019-09/schema"", ""http://json-schema.org/draft-07/schema#"", ""http://json-schema.org/draft-06/schema#"", ""http://json-schema.org/draft-04/schema#"", ""http://json-schema.org/draft-03/schema#""], ""os"": ""Linux"", ""os_version"": ""6.4.7-200.fc38.aarch64"", ""language_version"": ""3.11.4"", ""image"": ""ghcr.io/bowtie-json-schema/python-jsonschema""}}, ""metadata"": {""Commit"": {""text"": ""5cc9214e82f1e0a5e9644960b6fe0166afb7b283"", ""href"": ""https://github.com/json-schema-org/JSON-Schema-Test-Suite/commit/5cc9214e82f1e0a5e9644960b6fe0166afb7b283""}}}\r\n```\r\n\r\nwhich already contains the mapping between ID (image name) and language and name.\r\n\r\nHave a look and point out if you see something specific missing.', 'comment_created': datetime.datetime(2023, 8, 14, 17, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1293794656, 'comment_body': '(`http get https://bowtie.report/draft2020-12.json | head -n1 | jq` is the ""production"" file obviously, and seems to already contain all this data for all implementations we run -- so you want to parse that and create your routes probably)', 'comment_created': datetime.datetime(2023, 8, 14, 17, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1293921731, 'comment_body': 'Hmm, I overlooked that the data is already available in `ImplementationRow.jsx` with a unique ID.\r\nFixed!', 'comment_created': datetime.datetime(2023, 8, 14, 20, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1297489645, 'comment_body': 'This is basically alternative ""report view"" but for implementation. So maybe we could name these components similarly?\r\n\r\n- `ReportView` - for /dialects path - maybe can be changed to `DialectReportView`,\r\n- `PerImplementationPage` - for /implementation path - maybe `ImplementationReportView`?', 'comment_created': datetime.datetime(2023, 8, 17, 16, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1297491154, 'comment_body': 'The table looks a bit raw - can you make it to look like the table from `/dialects` path?', 'comment_created': datetime.datetime(2023, 8, 17, 16, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1297497905, 'comment_body': 'This type is not helpful at all - what should it contain exactly?', 'comment_created': datetime.datetime(2023, 8, 17, 16, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1297498720, 'comment_body': 'This seems to not be of `ReportData` type? it causesa bunch of TS errors below', 'comment_created': datetime.datetime(2023, 8, 17, 17, 0, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1297500358, 'comment_body': ""This looks like it's language version when in reality it's implementation version. I would put version as a separate row"", 'comment_created': datetime.datetime(2023, 8, 17, 17, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1297501116, 'comment_body': ""Let's map language to a user friendly name - check out `mapLanguage.ts`"", 'comment_created': datetime.datetime(2023, 8, 17, 17, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1297506202, 'comment_body': 'This 80+ lines ternary operator is not really readable :P ', 'comment_created': datetime.datetime(2023, 8, 17, 17, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1297509508, 'comment_body': 'BTW you lost language version?', 'comment_created': datetime.datetime(2023, 8, 17, 17, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1297514090, 'comment_body': 'This code duplicates a lot from the function above. Why not do something like this:\r\n```js\r\nObject.keys(dialectToName).map(dialect => fetchReportData(dialect))\r\n```\r\n?\r\nProbably changing document title should be moved to some different place then', 'comment_created': datetime.datetime(2023, 8, 17, 17, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299163106, 'comment_body': 'Yes, it seems reasonable!', 'comment_created': datetime.datetime(2023, 8, 19, 9, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1299167923, 'comment_body': ""> This looks like it's language version when in reality it's implementation version.\r\n\r\nmy bad! corrected now :)\r\n\r\n> BTW you lost language version?\r\n\r\nAdded it in separate row."", 'comment_created': datetime.datetime(2023, 8, 19, 10, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1299174207, 'comment_body': 'Done\r\n', 'comment_created': datetime.datetime(2023, 8, 19, 11, 23, 16, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1299176783, 'comment_body': 'Moved those lines into its own component for improved readability! 😄\r\n```js\r\n  return implementationDetail ? (\r\n    <ReportComponent />\r\n  ) : (\r\n    <LoadingAnimation />\r\n  );\r\n```', 'comment_created': datetime.datetime(2023, 8, 19, 11, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1299178344, 'comment_body': 'It contains an array of strings.\r\n\r\nFixed now.', 'comment_created': datetime.datetime(2023, 8, 19, 12, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1299178376, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 19, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1299180710, 'comment_body': ""Done!\r\n\r\n> Probably changing document title should be moved to some different place then\r\n\r\nThis shouldn't cause any problems since in implementation-specific pages, I've overwritten the `title` with the implementation's name.\r\n\r\n"", 'comment_created': datetime.datetime(2023, 8, 19, 12, 27, 31, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1299426346, 'comment_body': ""This url leads to nowhere - it could point to e.g. https://github.com/bowtie-json-schema/bowtie/pkgs/container/java-json-schema . Or maybe it doesn't have to be a link"", 'comment_created': datetime.datetime(2023, 8, 20, 19, 43, 56, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299426625, 'comment_body': 'If version is not present then the parenthesis are empty. Maybe expand this condition? `implementationDetail.language && implementationDetail.language_version && ...`. Same case for OS version', 'comment_created': datetime.datetime(2023, 8, 20, 19, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299427124, 'comment_body': 'Nesting components definition like that seems to be discouraged, please take a look: https://rules.sonarsource.com/typescript/RSPEC-6478/', 'comment_created': datetime.datetime(2023, 8, 20, 19, 51, 12, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299427155, 'comment_body': '`implementationDetail` is always present and not null, right?', 'comment_created': datetime.datetime(2023, 8, 20, 19, 51, 43, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299427520, 'comment_body': 'this can be const', 'comment_created': datetime.datetime(2023, 8, 20, 19, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299428521, 'comment_body': '`Implementation info`', 'comment_created': datetime.datetime(2023, 8, 20, 20, 4, 40, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299428698, 'comment_body': 'I think more common pattern is to use `isDialectPage && ...`, at least there is no null at the end', 'comment_created': datetime.datetime(2023, 8, 20, 20, 7, 8, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299430133, 'comment_body': ""You could get rid of all this logic to compute `isDialectPage` and use other router APIs, something like this (outside of `useEffect` of course):\r\n```js\r\n  const rootMatch = useMatch('/')\r\n  const dialectsMatch = useMatch('/dialects/*')\r\n  const isDialectPage = matches1 || matches2\r\n```"", 'comment_created': datetime.datetime(2023, 8, 20, 20, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299431306, 'comment_body': ""This is my biggest concern I guess - you transform data in this component and also in `DialectCompliance`. Ideally, all this work could be done way up in a router loader.\r\n\r\nAlso please have a look at `calculateTotals` function in `SummaryTable.tsx` (probably should've put it somewhere else :P). I think if in a router loader we could get the data to look like something like this:\r\n```ts\r\n{\r\n  [key: string]: Totals\r\n}\r\n```\r\nplus the implementation metadata, then it would be all we need?\r\n "", 'comment_created': datetime.datetime(2023, 8, 20, 20, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299892855, 'comment_body': 'removing the link seems to be a better option :P', 'comment_created': datetime.datetime(2023, 8, 21, 9, 57, 36, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1299931143, 'comment_body': 'yes', 'comment_created': datetime.datetime(2023, 8, 21, 10, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1302625302, 'comment_body': 'Done!\r\n\r\nNow, the loader data looks like:\r\n```js\r\n{\r\n    ""name"": ""..."",\r\n    ""homepage"": ""..."",\r\n    ""issues"": ""..."",\r\n    ...\r\n    ""results"": {\r\n        ""drafts"": Totals\r\n    }\r\n}\r\n```', 'comment_created': datetime.datetime(2023, 8, 23, 7, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1302690083, 'comment_body': ""This seems like an oddly specific place for this mapping.\r\n\r\nDoes it not exist in the frontend yet? If not, let's move it somewhere less specific to this page."", 'comment_created': datetime.datetime(2023, 8, 23, 8, 44, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1302691870, 'comment_body': ""I haven't tried to fully understand what this does yet, so it's possible that this comment won't apply, but treating URLs as strings is a code smell. ~~I believe we added a dependency on URI.js already, have a look and see whether it already does what you're doing manually here (which seems like maybe it's just pulling off the last path segment?)~~. See below from Harrel, even better, React should handle this."", 'comment_created': datetime.datetime(2023, 8, 23, 8, 45, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1302696445, 'comment_body': ""Homepage is left optional in the current schema:\r\n\r\nhttps://github.com/bowtie-json-schema/bowtie/blob/main/bowtie/schemas/io-schema.json#L70\r\n\r\nProbably it shouldn't be, so feel free to constrain it there, but be careful when making changes that they match the schema."", 'comment_created': datetime.datetime(2023, 8, 23, 8, 49, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1302698112, 'comment_body': ""Given this and the mapping (which I mentioned above I think belongs in some more central place) I'd probably recommend creating a `Dialect` object at some point containing the various things we want to capture about them (human readable names, mappings to and from their URIs, etc.). Feel free to leave that for now though."", 'comment_created': datetime.datetime(2023, 8, 23, 8, 50, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1302698583, 'comment_body': 'Oh yes, this path parameter should be retrieved from react router api, believe there is a hook for that', 'comment_created': datetime.datetime(2023, 8, 23, 8, 50, 42, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1302700318, 'comment_body': 'This makes a thunk but we have one already no, does `loader: fetchAllReportData` not work in Javascript?', 'comment_created': datetime.datetime(2023, 8, 23, 8, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1302700499, 'comment_body': ""What's happening here?"", 'comment_created': datetime.datetime(2023, 8, 23, 8, 52, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1302703490, 'comment_body': 'The terminology here is confusing to me (though it\'s undoubtedly confusing to everyone, and will require some tooltips to explain).\r\n\r\nBut in the backend, the term ""unsuccessful"" is used to refer to tests which *either* fail (i.e. have a result different than the expected one) or error (i.e. the test caused an exception in the harness).\r\n\r\nThat\'s distinct from ""failures"" which are just the former.\r\n\r\nWhich does this mean here? Combined or just failures?', 'comment_created': datetime.datetime(2023, 8, 23, 8, 54, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1303171459, 'comment_body': 'Yes, it works. Fixed now!', 'comment_created': datetime.datetime(2023, 8, 23, 15, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1303177396, 'comment_body': ""I don't actually know how the extension got added. 😅\r\nRemoved"", 'comment_created': datetime.datetime(2023, 8, 23, 15, 16, 22, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1303184374, 'comment_body': 'It should be `Failed`, actually. (Both **failed** and **errored** tests are displayed separately here)', 'comment_created': datetime.datetime(2023, 8, 23, 15, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1303187015, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2023, 8, 23, 15, 23, 20, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1303263750, 'comment_body': 'I believe we only need to include `homepage` in the **required** array. Is there anything else we should modify to make `homepage` a required field?\r\n', 'comment_created': datetime.datetime(2023, 8, 23, 16, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1303324282, 'comment_body': ""This still looks confusing -- the field is `.unsuccessfulTests`, but you're sure it's failure and not unsuccessful?"", 'comment_created': datetime.datetime(2023, 8, 23, 17, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1303324951, 'comment_body': 'Perhaps `implementation` is a better name than `specificData`.', 'comment_created': datetime.datetime(2023, 8, 23, 17, 19, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1303326025, 'comment_body': ""I think we should avoid `draft` as a variable name (or certainly visible name) -- I tried best I could to avoid it everywhere, but basically the specification doesn't like this term any more. I'd suggest either `dialectName` or `version` or something like that."", 'comment_created': datetime.datetime(2023, 8, 23, 17, 20, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1303329741, 'comment_body': ""I have to stare at this longer to understand what it does, but it seems a bit like it's doing a somewhat odd kind of pivot (taking data keyed by something and pivoting it to be keyed by something else).\r\n\r\nIn general it'd be easier to follow some of these if you added a few docstrings I think on what these are trying to do -- the function name could be a bit clearer too -- this is filtering what, implementation metadata? To what? Does `ImplementationMetadata` represent *all* implementations' metadata? And this filters to just one specific implementation? (That sounds a bit odd to me, I'd instead expect not to have an object representing *all* metadata, to instead simply have that be a mapping / JS object from implementation ID to an object representing *one* implementation's metadata. But perhaps that isn't something new to this PR.)"", 'comment_created': datetime.datetime(2023, 8, 23, 17, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1303331199, 'comment_body': 'Can we encapsulate this? Perhaps with a property / function on `implementation`? What type of object is that? Can we teach it to know what this value is?', 'comment_created': datetime.datetime(2023, 8, 23, 17, 25, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1303332587, 'comment_body': ""These don't look right. Please double check them. Specifically, some JSON Schema dialect IDs have empty fragments (`#`) and some do not. Make sure you've copied them exactly as-is from the Python file or from the specification page."", 'comment_created': datetime.datetime(2023, 8, 23, 17, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1303336812, 'comment_body': '> I believe we only need to include homepage in the required array.\r\n\r\nThat seems right yep.', 'comment_created': datetime.datetime(2023, 8, 23, 17, 31, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1303341492, 'comment_body': 'Yes, I am sure. Okay, I have renamed `unsuccessfulTests` to `failedTests` to avoid confusion.', 'comment_created': datetime.datetime(2023, 8, 23, 17, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1303421744, 'comment_body': ""> This is filtering what, implementation metadata?\r\n\r\nYes, it returns metadata of the page-specific implementation.\r\n\r\n> Does ImplementationMetadata represent all implementations' metadata?\r\n\r\nNope. It represents just one specific implementation.\r\n\r\n> I'd instead expect not to have an object representing all metadata, but instead, to simply have that be a mapping / JS object from implementation ID to an object representing one implementation's metadata.\r\n\r\nThe current structure represents the same thing as you mentioned above.\r\n\r\nSee this:  \r\n![image](https://github.com/bowtie-json-schema/bowtie/assets/113545196/de6d2649-29ae-405f-b237-944223a8b081)\r\n"", 'comment_created': datetime.datetime(2023, 8, 23, 18, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1303448857, 'comment_body': ""I've now converted this file to `tsx` in order to add **Type** annotations."", 'comment_created': datetime.datetime(2023, 8, 23, 19, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1306705634, 'comment_body': 'This is still outstanding right?', 'comment_created': datetime.datetime(2023, 8, 27, 18, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1324793166, 'comment_body': ""I still don't really understand then what / why we're iterating over `Object.keys` and filtering that, that's a code smell. Why isn't this simply a key-value lookup? Why iterate over a bunch of keys trying to find the implementation we're looking for?"", 'comment_created': datetime.datetime(2023, 9, 13, 16, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}, {'comment_id': 1324795861, 'comment_body': 'That wasn\'t precisely what I meant, though seems like a good idea anyhow. What I meant is ""can we put this function on a class or javascript object which represents an `Implementation`""? It seems likely to be an operation we may want to do in a bunch of places in the code base. Specifically I think someone should want to have a JavaScript accessor which lets them write `implementation.imageName` (or some appropriate name) which returns this value, but that doesn\'t involve the caller/user knowing how to do this parsing.', 'comment_created': datetime.datetime(2023, 9, 13, 16, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}]","[{'commit_sha': '6c238bba363757d52448aa0fbf4a1f863c0ad13c', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ef8fead26b08cf10c80628e8f0405584c71f30a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b152432a51dc0555d1ac990049fb7588e9a1aea9', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07b9145ac63f9fb8d3143829a654167940622ef3', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a6936c7350badf94b3bae2141b76199e444acbe', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c01a7ba44341c29f3fbf38b69460a56e48f789d4', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36c770db4ad06b73e07faf5706179ff1e3b5728b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18b370e4df1eecf728ec2b50e66cbec913bcd020', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3439977a24450619a9f16b415861fbcfc5fa8316', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74fd589af286d609717c89444afbbea8d6de8c19', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd64583c7ed0f1131a16be0d198c5f60a6f721d7f', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91e33faca616d4a4b15eb2dbd236ab67ee7d8220', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c99cfe77d47996420cf4fd243020c1cf7fa7f28a', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb8f504b03ae99819abb6f87cb04c1957cb57c90', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e305d5fde4cc6e6b0cb02fdd0f05ce004e6e661d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0552c0b01da7b45482e505c9399026f773f16349', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea8635a5ae0a48779aeac6eeb897c4a267d24dda', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '050f189ddf6f5c25dadf7e58ac985bea2c837984', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe40c8048d277c28a240d0b96982387f870299b6', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25cb6afad8b9ce6098e026d88380ecdd8b46428b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdaeef6560833b01c0b6e1ed4b3d80d34fa84f1c', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5238ec22ef2d4018bcab481f54fbdbb26a73664f', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '515655fd0239054c9adabc68b0281f712ec7e914', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73e526136102adfd79460b9311f6d1b43c39147e', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '562c8e3ccc0a08d5ec81caf2f1d9749e1bc05394', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84ae6787975d4a1ceb3eb7cc06dd8c17dbab86e0', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3179b6355a79eb83156952a4ecca95906fc5bef', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a62197a4b36531d7f4ab7b69068b9deb22f539', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c835c9a1e34b1b7f19d6989505decfea58b63d93', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4edc12232bd2270beaf4a83e5aaa19f4d12e5704', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaebb7884e371ab2ac8f85610e381167d59ff9ea', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c22a88237d0b37b1ef90f1bcd08d802e002f8d3', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02c4bf5a0fd8aff1beb04cc0aa06085d92c834d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b73aa4cf54573f81a4cc0b93b41fcdd42f26182', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23d404f764b5ed3030c69b7d2a5f98d1e7576fda', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '533d5754b657b7c35a2ed832909155f6ac78b098', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2da98ecc8ef55cb9ddde881fa24d7b8b70033f1d', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '096da7be868870b36d375148248252e001a38013', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9a025bbe7f8b34953173fa74f0ab9fa064b22ff', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '755ece02eeaa3d5ff6bb909596f835f1280ae709', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ed9cfa1c39e0757605b7831ed628fe2bed92ac', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca6f21932e00faaa926bd01763b4c7b70ce56a86', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3505c6ccc2350472ea7f93ca61b7a2b86f4e2788', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4340dbbfaa67ad580da2ec0402e050c03c60da8', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce3925670b38734d9c4487068eec2f342cfa3d56', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb16afae5e2277d516f16b7f82acfefd0fc1ecdc', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8998dcb2f935100244df687c991890037079b132', 'committer_username': 'Julian', 'committer_name': 'Julian Berman', 'committer_email': 'Julian@GrayVines.com', 'commit_date': datetime.datetime(2010, 7, 12, 17, 3, 40, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17
1481552109,feat: add a button in the UI to access documentation page,"![image](https://github.com/bowtie-json-schema/bowtie/assets/113545196/27d1dc8e-28fd-4b7a-9fd3-45bd5ed751b8)

<!-- readthedocs-preview bowtie-json-schema start -->
----
:books: Documentation preview :books:: https://bowtie-json-schema--404.org.readthedocs.build/en/404/

<!-- readthedocs-preview bowtie-json-schema end -->",True,404,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/404,https://github.com/bowtie-json-schema/bowtie/pull/404,closed,9,0,1,1,0,6,0,0,[],2023-08-19 18:42:16+00:00,2023-08-21 03:26:05+00:00,117829.0,"1 day, 8:43:49","[{'comment_id': 1299425403, 'comment_body': 'Is `id` attribute necessary?', 'comment_created': datetime.datetime(2023, 8, 20, 19, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299552922, 'comment_body': ""Not necessary, but it's good practice to keep it."", 'comment_created': datetime.datetime(2023, 8, 21, 3, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1299706570, 'comment_body': ""Why is it a good practice? I think I've never heard of that. What are the advantages?"", 'comment_created': datetime.datetime(2023, 8, 21, 7, 22, 9, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1299885052, 'comment_body': ""Although the button text in our code indicates its purpose for documentation, the 'id' attribute can also serve as a form of documentation. It's beneficial for SEO as well, even though we are not currently focusing on that aspect in our case.\r\n\r\nI don't see any issues with it, but I'll remove it if you want :)"", 'comment_created': datetime.datetime(2023, 8, 21, 9, 51, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}, {'comment_id': 1299928319, 'comment_body': ""TBH I tried to find something on the web that confirms ids affect SEO, but without much luck - if you have any source on that I'll be happy to have a look.\n\nPS I'm genuinely curious about your motives here and not trying to push anything, so there is no need to remove this id"", 'comment_created': datetime.datetime(2023, 8, 21, 10, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'harrel56', 'type': 'User'}, {'comment_id': 1300330725, 'comment_body': ""These points were discussed in a course (**Full-Stack Web Development with React Specialization**) offered by Hong Kong University on Coursera. TBH, I didn't cross-verify them as SEO wasn't my primary focus. I didn't place significant emphasis on it and simply included the 'id' attribute based on the information from that course. (considering it as a good practice)😃"", 'comment_created': datetime.datetime(2023, 8, 21, 16, 5, 37, tzinfo=datetime.timezone.utc), 'commenter': 'AgniveshChaubey', 'type': 'User'}]","[{'commit_sha': 'aad05750d3197cf62b016c2e3e322bbdfe705a53', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17
1383106656,Disable gzip compression for the test report,Data compression removed,True,278,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/278,https://github.com/bowtie-json-schema/bowtie/pull/278,closed,2,2,1,2,2,1,0,0,[],2023-06-07 17:36:38+00:00,2023-06-07 17:55:16+00:00,1118.0,0:18:38,"[{'comment_id': 1221963882, 'comment_body': 'You still need the `tee`, just not the `>(...)` -- that\'s called ""process substitution"" (and was previously redirecting some things into `gzip`, but we still do need `tee` in order to both write out a file as well as pass output along), it probably should be:\r\n\r\n```suggestion\r\n          bowtie suite $(find implementations/ -mindepth 1 -maxdepth 1 -type d | sed \'s/implementations\\//-i /\') https://github.com/json-schema-org/JSON-Schema-Test-Suite/tree/main/tests/${{ matrix.version }} | tee ${{ matrix.version }}.jsonl | bowtie report --badges badges --generate-dialect-navigation --out ${{ matrix.version }}.html\r\n```\r\n\r\nYou can try it out locally by manually replacing the template variable (and picking just one implementation to make it run faster), e.g.:\r\n\r\n```\r\nbowtie suite -i python-jsonschema https://github.com/json-schema-org/JSON-Schema-Test-Suite/tree/main/tests/draft2020-12 | tee draft2020-12.jsonl | bowtie report --badges badges --generate-dialect-navigation --out draft2020-12.html\r\n```', 'comment_created': datetime.datetime(2023, 6, 7, 17, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Julian', 'type': 'User'}]","[{'commit_sha': '3ad2d343c487f0377a7383e4691bb177048d1a31', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ea32a46f8b3c194efbbe62520ba2acb4aa7ad77', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17
1425998104,fix: bug causing error when uploading local report,,True,326,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/326,https://github.com/bowtie-json-schema/bowtie/pull/326,closed,3,2,1,1,2,0,0,0,[],2023-07-08 17:00:42+00:00,2023-07-08 17:21:25+00:00,1243.0,0:20:43,[],"[{'commit_sha': 'ed68410296b032f12e053683f735506a128fa46b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17
1435138604,fix: BowtieJsonSchemaValidator.java,This PR fixes `run` method of #316 ,True,344,https://api.github.com/repos/bowtie-json-schema/bowtie/pulls/344,https://github.com/bowtie-json-schema/bowtie/pull/344,closed,145,57,1,4,0,0,0,0,[],2023-07-14 17:54:57+00:00,2023-07-17 08:55:06+00:00,226809.0,"2 days, 15:00:09",[],"[{'commit_sha': '69dec79113fc6e62f9f82c7e84a4ea09e8327a8f', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5580f4bc1d55bc20497f59724d435f327e0192d', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '150725e12915b066fd781480b729396ae30f3a4b', 'committer_username': 'AgniveshChaubey', 'committer_name': 'Agnivesh Chaubey', 'committer_email': 'agniveshvapi@gmail.com', 'commit_date': datetime.datetime(2022, 9, 14, 17, 11, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '257756490909101c287f934b675e3755548999b5', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}]",Agnivesh Chaubey,113545196,agniveshvapi@gmail.com,User,,71,,18,17

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
531839193,bowtie,bowtie-json-schema/bowtie,Python,38,51,4,37,5354,88,14,7,"[{'id': 1647013690, 'number': 708, 'closed': datetime.datetime(2024, 5, 9, 13, 41, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 16, 16, 31, 11, tzinfo=datetime.timezone.utc), 'time_taken': 12517833.0, 'time_delta': '144 days, 21:10:33', 'additions': 97, 'deletions': 10, 'state': 'closed'}, {'id': 1481552109, 'number': 404, 'closed': datetime.datetime(2023, 8, 21, 3, 26, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 19, 18, 42, 16, tzinfo=datetime.timezone.utc), 'time_taken': 117829.0, 'time_delta': '1 day, 8:43:49', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 1474741532, 'number': 397, 'closed': datetime.datetime(2023, 9, 22, 17, 38, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 14, 16, 32, 9, tzinfo=datetime.timezone.utc), 'time_taken': 3373591.0, 'time_delta': '39 days, 1:06:31', 'additions': 360, 'deletions': 135, 'state': 'closed'}, {'id': 1447765249, 'number': 359, 'closed': datetime.datetime(2023, 9, 7, 16, 12, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 5, 32, 59, tzinfo=datetime.timezone.utc), 'time_taken': 3839957.0, 'time_delta': '44 days, 10:39:17', 'additions': 141, 'deletions': 2, 'state': 'closed'}, {'id': 1435138604, 'number': 344, 'closed': datetime.datetime(2023, 7, 17, 8, 55, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 14, 17, 54, 57, tzinfo=datetime.timezone.utc), 'time_taken': 226809.0, 'time_delta': '2 days, 15:00:09', 'additions': 145, 'deletions': 57, 'state': 'closed'}, {'id': 1425998104, 'number': 326, 'closed': datetime.datetime(2023, 7, 8, 17, 21, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 8, 17, 0, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1243.0, 'time_delta': '0:20:43', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1417340216, 'number': 316, 'closed': datetime.datetime(2023, 7, 10, 9, 18, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 3, 4, 50, 14, tzinfo=datetime.timezone.utc), 'time_taken': 620892.0, 'time_delta': '7 days, 4:28:12', 'additions': 241, 'deletions': 0, 'state': 'closed'}, {'id': 1395053697, 'number': 297, 'closed': datetime.datetime(2023, 6, 23, 15, 52, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 16, 4, 9, 56, tzinfo=datetime.timezone.utc), 'time_taken': 646978.0, 'time_delta': '7 days, 11:42:58', 'additions': 20161, 'deletions': 9349, 'state': 'closed'}, {'id': 1383106656, 'number': 278, 'closed': datetime.datetime(2023, 6, 7, 17, 55, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 7, 17, 36, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1118.0, 'time_delta': '0:18:38', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1323536198, 'number': 241, 'closed': datetime.datetime(2023, 6, 14, 14, 57, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 21, 20, 8, 30, tzinfo=datetime.timezone.utc), 'time_taken': 4646918.0, 'time_delta': '53 days, 18:48:38', 'additions': 17098, 'deletions': 6, 'state': 'closed'}, {'id': 1311405628, 'number': 225, 'closed': datetime.datetime(2023, 4, 14, 16, 10, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 12, 19, 57, 27, tzinfo=datetime.timezone.utc), 'time_taken': 159210.0, 'time_delta': '1 day, 20:13:30', 'additions': 58, 'deletions': 11, 'state': 'closed'}, {'id': 1301014633, 'number': 200, 'closed': datetime.datetime(2023, 4, 5, 15, 39, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 4, 4, 12, 21, tzinfo=datetime.timezone.utc), 'time_taken': 127604.0, 'time_delta': '1 day, 11:26:44', 'additions': 34, 'deletions': 0, 'state': 'closed'}, {'id': 1295613417, 'number': 189, 'closed': datetime.datetime(2023, 4, 2, 14, 42, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 30, 4, 55, 28, tzinfo=datetime.timezone.utc), 'time_taken': 294415.0, 'time_delta': '3 days, 9:46:55', 'additions': 74, 'deletions': 0, 'state': 'closed'}, {'id': 1272386817, 'number': 165, 'closed': datetime.datetime(2023, 3, 31, 14, 44, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 12, 17, 35, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1631358.0, 'time_delta': '18 days, 21:09:18', 'additions': 106, 'deletions': 1, 'state': 'closed'}, {'id': 1272089507, 'number': 164, 'closed': datetime.datetime(2023, 3, 12, 17, 14, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 11, 15, 58, 17, tzinfo=datetime.timezone.utc), 'time_taken': 90953.0, 'time_delta': '1 day, 1:15:53', 'additions': 4, 'deletions': 1, 'state': 'closed'}]"
