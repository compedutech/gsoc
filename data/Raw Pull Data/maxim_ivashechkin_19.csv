pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1023300488,add multiview calibration [GSOC 2022],"### Pull Request Readiness Checklist

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake

The usage tutorial is on Google Docs following this link: https://docs.google.com/document/d/1k6YpD0tpSVqnVnvU2nzE34K3cp_Po6mLWqXV06CUHwQ/edit?usp=sharing",True,22363,https://api.github.com/repos/opencv/opencv/pulls/22363,https://github.com/opencv/opencv/pull/22363,closed,3087,2,24,87,8,103,3,0,"[{'name': 'feature'}, {'name': 'category: calib3d'}, {'name': 'GSoC'}]",2022-08-10 23:33:43+00:00,2023-03-23 12:42:42+00:00,19400939.0,"224 days, 13:08:59","[{'comment_id': 949117072, 'comment_body': '`gray` is already resized here. Corners after `corners /= scale` do not correspond to image here.', 'comment_created': datetime.datetime(2022, 8, 18, 13, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 949133663, 'comment_body': 'There are stereoCalibrate tests for pinhole and fisheye cameras with real data. I recommend you to re-use their input and ground truth to add tests with real calibration points.\r\nSee https://github.com/opencv/opencv/blob/99d216c8d4cc722b8d4387c462c6aec8f61504f4/modules/calib/test/test_fisheye.cpp#L694\r\nand https://github.com/opencv/opencv/blob/99d216c8d4cc722b8d4387c462c6aec8f61504f4/modules/calib/test/test_cameracalibration.cpp#L1242', 'comment_created': datetime.datetime(2022, 8, 18, 13, 28, 16, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 949148135, 'comment_body': 'the function expects that the board is visible on all images or at least we have images from all cameras. I propose to generate visibility matrix here and relay on file names. Images with the same file name are captured by different cameras in the same time and observe the same pattern.', 'comment_created': datetime.datetime(2022, 8, 18, 13, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 955144456, 'comment_body': 'Please document axis direction.', 'comment_created': datetime.datetime(2022, 8, 25, 15, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 957174673, 'comment_body': ""Syntax error here. try block is not closed with catch or finally. I propose just to replace try with `if __name__ == '__main__':` and do not hide exceptions, if any."", 'comment_created': datetime.datetime(2022, 8, 29, 10, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 957175786, 'comment_body': 'I propose to skip empty lines, if any. It allows to not store frames, where the pattern is not visible.', 'comment_created': datetime.datetime(2022, 8, 29, 10, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 957176429, 'comment_body': 'Current version for 5.x fails with exception:\r\n```\r\nTraceback (most recent call last):\r\n  File ""/home/alexander/Projects/OpenCV/opencv-next/samples/python/multiview_calibration.py"", line 220, in <module>\r\n    params.pattern_type, [bool(int(v)) for v in params.fisheye.split(\',\')], params.pattern_distance)\r\n  File ""/home/alexander/Projects/OpenCV/opencv-next/samples/python/multiview_calibration.py"", line 194, in calibrateFromImages\r\n    calibrateFromPoints(pattern, image_points_cameras, image_sizes, is_fisheye, all_images_names)\r\n  File ""/home/alexander/Projects/OpenCV/opencv-next/samples/python/multiview_calibration.py"", line 93, in calibrateFromPoints\r\n    flags_intrinsics=0)\r\ncv2.error: OpenCV(5.0.0-pre) :-1: error: (-5:Bad argument) in function \'calibrateMultiview\'\r\n> Overload resolution failed:\r\n>  - Required argument \'Ks\' (pos 5) not found\r\n>  - Required argument \'Ks\' (pos 5) not found\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 10, 56, 20, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 960076342, 'comment_body': 'fixed, I forgot to add CV_OUT.', 'comment_created': datetime.datetime(2022, 8, 31, 22, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 960076855, 'comment_body': 'added in new commit: https://github.com/opencv/opencv/pull/22363/commits/af8359e79347c6d6a5f57e2ead5d3f340fc5fa4e', 'comment_created': datetime.datetime(2022, 8, 31, 22, 32, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 960077576, 'comment_body': ""replaced 'try' with if __name__ == '__main__' in new commit here: https://github.com/opencv/opencv/commit/af8359e79347c6d6a5f57e2ead5d3f340fc5fa4e"", 'comment_created': datetime.datetime(2022, 8, 31, 22, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 960077952, 'comment_body': 'Rs will be array of rotation vectors: https://github.com/opencv/opencv/pull/22363/commits/822cfa465d73035bad85e33c7b2e5821e65779be', 'comment_created': datetime.datetime(2022, 8, 31, 22, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 960078314, 'comment_body': '> @ivashmak Please create PR with test data to opencv_extra with the same branch name. XMLs with board points are missing.\r\n\r\nHere is PR: https://github.com/opencv/opencv_extra/pull/1001', 'comment_created': datetime.datetime(2022, 8, 31, 22, 36, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 960078829, 'comment_body': 'tests are added: https://github.com/opencv/opencv/pull/22363/commits/019915854b897f22478ea76f30a9fe45357adc62', 'comment_created': datetime.datetime(2022, 8, 31, 22, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 960078913, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 8, 31, 22, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 983547043, 'comment_body': 'I propose to start from the problem statement. We have several cameras that have FoW intersection and want to estimate ther internal parameters (intrinsics) and relative positions (extrinsics) ....', 'comment_created': datetime.datetime(2022, 9, 29, 13, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 983548347, 'comment_body': 'I propose to add references to intrinsics calibration tutorial, interactive calibration app and cameraCalibrate functions at least.', 'comment_created': datetime.datetime(2022, 9, 29, 13, 32, 5, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 983550192, 'comment_body': ""Please use references. It'll be even better to have reference on detailed camera model description with flags rather then individual flags without formulas."", 'comment_created': datetime.datetime(2022, 9, 29, 13, 33, 38, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 983551830, 'comment_body': 'Also need to point that the cameras should be in sync otherwise the solution does not work.', 'comment_created': datetime.datetime(2022, 9, 29, 13, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 983554775, 'comment_body': 'Reference will be useful too.', 'comment_created': datetime.datetime(2022, 9, 29, 13, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 983565173, 'comment_body': 'I build documentation locally and doxygen does not insert images: ""Firefox cannot file file /home/alexander/opencv-next-build/doc/doxygen/html/images/1a.png""', 'comment_created': datetime.datetime(2022, 9, 29, 13, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 989270203, 'comment_body': ""Direct links to doxygen documentation is bad idea. It does not work for local docs or if page is moved somewhere. Please use just full function name `cv::calibrateCamera` or `\\ref`with C++ symbol name or chapter id. Doxygen will substitute related links automatically or reports if it's broken."", 'comment_created': datetime.datetime(2022, 10, 6, 16, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 989746662, 'comment_body': '2 column view does not work correctly with doxygen. You can stitch the images together and insert as single image with header or include images one by one.', 'comment_created': datetime.datetime(2022, 10, 7, 7, 4, 12, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 989748379, 'comment_body': 'Doxygen does not parse the comment as description. Syntax issue.', 'comment_created': datetime.datetime(2022, 10, 7, 7, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000582184, 'comment_body': '`USE_INTRINSICS_GUESS` should be renamed in cammel-case style. as soon as other parameters.', 'comment_created': datetime.datetime(2022, 10, 20, 12, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000584087, 'comment_body': 'Please add reference to calibrateCamera with `#calibrateCamera`', 'comment_created': datetime.datetime(2022, 10, 20, 12, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000586495, 'comment_body': 'Use `@return` for return value. It should be after parameters list.', 'comment_created': datetime.datetime(2022, 10, 20, 12, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000591244, 'comment_body': 'I propose to add reference to calibration pattern page. File: doc/tutorials/calib3d/camera_calibration_pattern/camera_calibration_pattern.markdown. Doxygen reference: `#tutorial_camera_calibration_pattern`', 'comment_created': datetime.datetime(2022, 10, 20, 12, 58, 15, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000593982, 'comment_body': 'reference to `calibrateCamera` is useful here.', 'comment_created': datetime.datetime(2022, 10, 20, 13, 0, 40, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000595769, 'comment_body': 'Use just anchor in the page header `#tutorial_camera_calibration`. Doxygen generates links to known symbols automatically.', 'comment_created': datetime.datetime(2022, 10, 20, 13, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000598232, 'comment_body': 'The same for all API identifiers. Just use `#CALIB_RATIONAL_MODEL` to add reference.', 'comment_created': datetime.datetime(2022, 10, 20, 13, 4, 25, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000605333, 'comment_body': 'Use Tex notation for formulas. Formula is broken in rendered html.', 'comment_created': datetime.datetime(2022, 10, 20, 13, 10, 40, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000608955, 'comment_body': '`{r, eval = FALSE}` breaks html generation.', 'comment_created': datetime.datetime(2022, 10, 20, 13, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000622560, 'comment_body': '`RESIZE_IMAGE=True` by default is bad idea. I propose to add command line parameter with scale. Default values should be 1.', 'comment_created': datetime.datetime(2022, 10, 20, 13, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000626110, 'comment_body': '`findCirclesGrid` supports color images and does color check. I propose to call cvtColor for `findChessboardCorners` only.', 'comment_created': datetime.datetime(2022, 10, 20, 13, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000633217, 'comment_body': 'Please dump the calibration result to xml/yaml with FileStorage.', 'comment_created': datetime.datetime(2022, 10, 20, 13, 31, 3, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000636548, 'comment_body': '`traceback` is not used.', 'comment_created': datetime.datetime(2022, 10, 20, 13, 33, 6, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000645482, 'comment_body': 'tolerance values are very large. dist_tol = 2e-1 is comparable with distortion coefficients.', 'comment_created': datetime.datetime(2022, 10, 20, 13, 38, 43, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000734569, 'comment_body': ""It's bad idea.  `Mat detection_mask_ = detection_mask` creates new cv::Mat mat with reference to user's data and then, it's could be re-written with convertTo, if element size is the same.\r\nI propose to get rid of convertTo for both buffers, use InputArray for masks and flags and add assert for type CV_8U. It allows to pass `std::vector<>` as input in C++."", 'comment_created': datetime.datetime(2022, 10, 20, 14, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000740838, 'comment_body': ""It's not documented behavior. The result for mixed camera setup will be miss-interpreted. It leads to wrong calibration."", 'comment_created': datetime.datetime(2022, 10, 20, 14, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1000742026, 'comment_body': 'I propose to extract the constant from function to the top if the file and add detailed description for it.', 'comment_created': datetime.datetime(2022, 10, 20, 14, 50, 11, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1003712603, 'comment_body': 'I think this is what we were discussing with Jean-Yves and Vadim as well. If there is a mix of fisheye and pinhole cameras, then the rational model is used for intrinsics calibration. Additionally, the rational flag must be added for extrinsics calibration.', 'comment_created': datetime.datetime(2022, 10, 24, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1004589986, 'comment_body': 'pickle is not portable solution and could not be easily loaded from C++ code. Use FileStorage with json or yaml instead.', 'comment_created': datetime.datetime(2022, 10, 25, 14, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1004593297, 'comment_body': 'In terms of architecture it\'s logical to return the calibration result as function result and save it to file in ""main"". File operations are not calibration concern.', 'comment_created': datetime.datetime(2022, 10, 25, 14, 50, 24, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1004595865, 'comment_body': ""Please use OpenCV `cv::CommandLineParser` to handle input it the same way it's done for Python."", 'comment_created': datetime.datetime(2022, 10, 25, 14, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1005555287, 'comment_body': 'reprojection error reporting will be useful too.', 'comment_created': datetime.datetime(2022, 10, 26, 11, 25, 39, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1005558634, 'comment_body': 'it was renamed.', 'comment_created': datetime.datetime(2022, 10, 26, 11, 29, 16, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1006163290, 'comment_body': 'fixed\r\n', 'comment_created': datetime.datetime(2022, 10, 26, 20, 36, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006164732, 'comment_body': 'fixed\r\n', 'comment_created': datetime.datetime(2022, 10, 26, 20, 37, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006164851, 'comment_body': 'fixed\r\n', 'comment_created': datetime.datetime(2022, 10, 26, 20, 38, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006164925, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 26, 20, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006165013, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 26, 20, 38, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006165118, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 26, 20, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006165312, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 26, 20, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006165751, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 26, 20, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006166572, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 10, 26, 20, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006166646, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 10, 26, 20, 40, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006169672, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 10, 26, 20, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006172501, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 10, 26, 20, 47, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006191839, 'comment_body': 'Sometimes resizing image is very convenient, if resolution is too big, it could take minutes to detect corners. While approximate corners could be found on the resized image and afterwards refined with cv::cornerSubPix.\r\nI added argument flag, the default parameter is now False (no resize).', 'comment_created': datetime.datetime(2022, 10, 26, 21, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006193831, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 26, 21, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006254223, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2022, 10, 26, 22, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006254324, 'comment_body': 'fixed\r\n', 'comment_created': datetime.datetime(2022, 10, 26, 22, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006743636, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 27, 11, 21, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006748974, 'comment_body': 'fixed\r\n', 'comment_created': datetime.datetime(2022, 10, 27, 11, 27, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006763322, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 27, 11, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006844169, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 27, 13, 2, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006849744, 'comment_body': 'should I use #define for this constant in the top of the file?', 'comment_created': datetime.datetime(2022, 10, 27, 13, 7, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006850344, 'comment_body': 'commented', 'comment_created': datetime.datetime(2022, 10, 27, 13, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006878572, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 27, 13, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006935181, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 27, 14, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006935378, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 10, 27, 14, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1006936341, 'comment_body': 'done', 'comment_created': datetime.datetime(2022, 10, 27, 14, 17, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1007001880, 'comment_body': ""Should be `print('rvecs', rvecs)`."", 'comment_created': datetime.datetime(2022, 10, 27, 15, 3, 50, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1013125460, 'comment_body': '> terminal-real-demo.png\r\n\r\nIts size is >800kb, which is large.\r\nPlease try .jpg format for this image.', 'comment_created': datetime.datetime(2022, 11, 3, 16, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1013126589, 'comment_body': 'Please use short license header: https://github.com/opencv/opencv/wiki/Coding_Style_Guide#file-structure\r\n\r\n```\r\n// This file is part of OpenCV project.\r\n// It is subject to the license terms in the LICENSE file found in the top-level directory\r\n// of this distribution and at http://opencv.org/license.html.\r\n```\r\n\r\nUse `#` instead of `//` in Python code.', 'comment_created': datetime.datetime(2022, 11, 3, 16, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1013130783, 'comment_body': '> yacs.config\r\n\r\nLooks like it is a new dependency. Releases are abandoned in 2020: https://pypi.org/project/yacs/#history\r\n\r\nCan we use `json.load()` approach from Python library?', 'comment_created': datetime.datetime(2022, 11, 3, 16, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1013134248, 'comment_body': '> https://docs.opencv.org/\r\n\r\nLinks on docs.opencv.org should be avoided.\r\nUse `@ref` instead.', 'comment_created': datetime.datetime(2022, 11, 3, 16, 24, 24, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1013139796, 'comment_body': 'Empty line after `----` header mark.', 'comment_created': datetime.datetime(2022, 11, 3, 16, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1013141371, 'comment_body': 'Please use short license header: https://github.com/opencv/opencv/wiki/Coding_Style_Guide#file-structure\r\n\r\n```\r\n// This file is part of OpenCV project.\r\n// It is subject to the license terms in the LICENSE file found in the top-level directory\r\n// of this distribution and at http://opencv.org/license.html.\r\n```', 'comment_created': datetime.datetime(2022, 11, 3, 16, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1013143554, 'comment_body': 'assert -> CV_Assert', 'comment_created': datetime.datetime(2022, 11, 3, 16, 32, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1013143814, 'comment_body': '> `#include <cassert>`\r\n\r\ndrop', 'comment_created': datetime.datetime(2022, 11, 3, 16, 32, 14, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1013145018, 'comment_body': 'It is better to have 1 dependency per line.', 'comment_created': datetime.datetime(2022, 11, 3, 16, 33, 15, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1020602119, 'comment_body': 'changed to jpg.', 'comment_created': datetime.datetime(2022, 11, 11, 22, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1020602187, 'comment_body': 'changed.', 'comment_created': datetime.datetime(2022, 11, 11, 22, 57, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1020602292, 'comment_body': 'replaced it with yaml library, json does not work as expected.', 'comment_created': datetime.datetime(2022, 11, 11, 22, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1020602385, 'comment_body': 'replaced https with ref', 'comment_created': datetime.datetime(2022, 11, 11, 22, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1020602406, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 11, 11, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1020602429, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 11, 11, 22, 58, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1020602471, 'comment_body': 'dropped', 'comment_created': datetime.datetime(2022, 11, 11, 22, 58, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1020602488, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 11, 11, 22, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1020602528, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 11, 11, 22, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1020610724, 'comment_body': 'Looks like jpg file is not added to commits.', 'comment_created': datetime.datetime(2022, 11, 11, 23, 28, 22, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1020801997, 'comment_body': 'Changed all images to jpg format', 'comment_created': datetime.datetime(2022, 11, 12, 20, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1020802124, 'comment_body': ""I have several warnings in my markdown file, it says that latex math symbols like '\\frac', \\cdot', and '\\choose' are unknown. Do you know how could I fix this?"", 'comment_created': datetime.datetime(2022, 11, 12, 20, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ivashmak', 'type': 'User'}, {'comment_id': 1061964523, 'comment_body': ""I think that's UB in C++."", 'comment_created': datetime.datetime(2023, 1, 4, 23, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rogday', 'type': 'User'}, {'comment_id': 1103272996, 'comment_body': 'float cast does the same thing if you look at the implementation :(\r\nyou can do something like:\r\n\r\n```cpp\r\nfloat f = err;\r\nint32_t i = 0;\r\nstd::memcpy(&i, &f, sizeof i);\r\n```\r\n\r\nIt should generate the same assembly.\r\nNow that I think about it, `softfloat` could be fixed as well :)', 'comment_created': datetime.datetime(2023, 2, 10, 21, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rogday', 'type': 'User'}, {'comment_id': 1103312584, 'comment_body': '> std::memcpy\r\n\r\nThere is `Cv32suf` for that purpose.', 'comment_created': datetime.datetime(2023, 2, 10, 22, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1103320196, 'comment_body': ""Exactly,  there is the same bug with strict aliasing. Softfloat's float operator creates Cv32suf(union), writes an int and reads back a float."", 'comment_created': datetime.datetime(2023, 2, 10, 22, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rogday', 'type': 'User'}, {'comment_id': 1104418197, 'comment_body': ""OK, I'm not sure if we need this optimization at all.\r\nIf there were some performance measurements that justify the usage of that function, then I'd like to see them.\r\nIf not, I'll leave it turned off with `#define` and use good, non-optimized version instead."", 'comment_created': datetime.datetime(2023, 2, 13, 12, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'savuor', 'type': 'User'}, {'comment_id': 1114902403, 'comment_body': 'Malformed documentation:\r\n\r\n> One could use the [\\brief](https://www.doxygen.nl/manual/commands.html#cmdbrief) command with one of the above comment blocks. This command ends at the end of a paragraph, so the detailed description follows **after an empty line**.\r\n\r\nRef: https://www.doxygen.nl/manual/docblocks.html\r\n\r\nThe same as https://github.com/opencv/opencv/pull/23098#discussion_r1105320043 (1 week and the same again)', 'comment_created': datetime.datetime(2023, 2, 22, 20, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1114903033, 'comment_body': '> `- Pattern`\r\n\r\nno dashes.', 'comment_created': datetime.datetime(2023, 2, 22, 20, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1114907027, 'comment_body': 'why do we need both parameters if there is `CALIB_USE_INTRINSIC_GUESS`?', 'comment_created': datetime.datetime(2023, 2, 22, 20, 12, 55, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1114911612, 'comment_body': ""fisheye has different `CALIB_` constant (which are used for flagsForIntrinsics).\r\n\r\n`CALIB_FIX_K4 = 1 << 7`\r\n\r\nvs \r\n\r\n`CALIB_FIX_K4 = 0x00800`\r\n\r\nSo we can't properly handle mess of these models.\r\nOr we should have `flagsForIntrinsics` on per-camera basis."", 'comment_created': datetime.datetime(2023, 2, 22, 20, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}]","[{'commit_sha': '4866b774066b9e1f30ca853b813198a6d63ed0d4', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '125f82d2ce033ed26232c7baa193696cb5af30ed', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'affb75f7886df4f7852b8544bddea6253ae4d5cf', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '784efecb2c64bd4eff5dd066d00592c4dd9d2ec7', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da68fe90a554c725bbcc82f10c07626c4e9310eb', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '019915854b897f22478ea76f30a9fe45357adc62', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53dfbdd0ecca64a88dc0c0ed7e0c5fd2fb92e2b0', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86127ac1e01ef3f7460b780d34c148e0ee554566', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf890a78adfd927f8d1ac29d96d03e128bd24f5a', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af8359e79347c6d6a5f57e2ead5d3f340fc5fa4e', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '822cfa465d73035bad85e33c7b2e5821e65779be', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02eb4fadd0af16d23ffb7cb1df2d598d234847ec', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '381495609a6d1862165ed39b9e490bba96d1dea9', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '805bbd17025341b12a124da3f3511f667c861a32', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd3b2bce560128789abf05481e1039b26d55af6d', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '435ae38a70cd6e84f8f702afacaf8c6bab84206b', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f916f4342d1c58255c75dd4313e0360f9a3ef89', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbc40ee6d6be640e42aa4aede771c69bcdf3dbfe', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26f360b872c307c9500fc51a4864eace77b3bd38', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd36982725f81db29c38d47c8c05519e5c86a9db', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fde06c79772de7194eeec9ab956764fd3069acf', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce58459951ac4e30085b61e336489a1973b77cac', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29d6ca70dacb4aec208a4908b248adc6733700b3', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba68685cf43e906ba6c92238bcd1a49dd4dabe30', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1490f6ecd7c8d0de313e7bfaafd1f087467d38d', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c924ca5b56a441ec60fbc9b07e86a068acfe543', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46793aed05ce7b1df1c6489fc4a7f61394ba8db8', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9946620d13a362965824ef094ee79354c3d2665', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8923e0a45ecc057061914c67affcb8f8d2c724a', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c8e61d3086bbec78bac7f1c3d3103b0f11b8fdc', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2eb87d7e848d108938c5dfd7910acfc4f4c30c1', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffa160733b04a0baa260e98e1b66714a7131904d', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffe65c8516bc00d68f8569cba9f9463c2b72cb3e', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b83360f2bb16b994afc535ee04c214a55246272c', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74d295987532032a9fbb31611d5c7a221067362f', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad3708c3fdf9e259f94589c4e4c9897b62215e2c', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff6584cdb0a69f943790b6d01558944d3e9440d2', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55b4cac89c156500920093a0d5744b2aab93601f', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62976ee88aa742cc5967df0f76229e4a882275dd', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d02e0d649beedd259eda63eaef1e5798fccf08c', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63c7f7035ab5335dc25040391a2982258c2b9f0e', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96481ada81f4556d6db2ecf64b0cadc3956b3bb3', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99b15382d10e806787cffbf14dc7edc3cb9527d5', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee5da37937a526b04deba62e06daa7be807a9d81', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31018a8fd954ea3df396624ea38c770bdfd7a501', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9ba3ceffa9d14caec0d53652b31ad4dc28f9d77', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7f9a3a6f3f95c5613cf02005a5ed27203b7caaa', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99421ec892731f9d3a32d81516ccc069f1ef939b', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc7bb084d3fa9c224cbacbd23800750f2706a6f0', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '443507a0a4cffc78623228420cdb52d6ddb1e87d', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b58c3c479126fd0b6c4a786cd74bd2c2f578690d', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01f09d0357294feb87160408e329d5069c1eed3f', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0de2d960ded8a9f98883045a53b79643e7513e2d', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83bebdf6bc4ff52d61756171ed4dc6ecb4c4554d', 'committer_username': 'ivashmak', 'committer_name': 'Maksym Ivashechkin', 'committer_email': 'maksimivashechkin@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 15, 2, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e281dd5714bc0adbcaa70655642a9d39f8b48b26', 'committer_username': 'stopmosk', 'committer_name': 'Sergei Shutov', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 13, 17, 1, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0677590251d5da24c49b5b1990522908cfc2d6fb', 'committer_username': 'stopmosk', 'committer_name': 'Sergei Shutov', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 13, 17, 1, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '869848023435777a610606d10341e38138a9f9f6', 'committer_username': 'stopmosk', 'committer_name': 'Sergei Shutov', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 13, 17, 1, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52b882b62d9a6669a6ae2ce6493b7d8d5526dd02', 'committer_username': 'stopmosk', 'committer_name': 'Sergei Shutov', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 13, 17, 1, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8575222f61fa5a144685086470d164a63bf0b7e', 'committer_username': 'stopmosk', 'committer_name': 'Sergei Shutov', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 13, 17, 1, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10846b1ba7992a76efd9073725629d88bf19d3b2', 'committer_username': 'stopmosk', 'committer_name': 'Sergei Shutov', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 13, 17, 1, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3219fe3bd730b78a1a1e7c08a614239f2a7e55fb', 'committer_username': 'stopmosk', 'committer_name': 'Sergei Shutov', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 13, 17, 1, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ea78736c0c9a366f5718fdde581ba0c9f1fbe14', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8791f2f3a8658ca5b0db43da1314c16acfd09b23', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0f1c4dd643c26b6985307e14baac014dc4a8018', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd85e5a62d90081c2117d4a0d6db8679412cf3c88', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b6c3129c24e71cf5a61343d59a5f53eb8a34395', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e4d63550941ce7f1869f4d373cc455a861e8766', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '935e230c1df446981eead1efcff8c47f4f89043d', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90794a6776779a34088cc01c6bf1327742df8b41', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0aa01d41a247e6d6b07ad7afcb9d26ea82b88fb', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6922a081250f25ab118b85c161f1020b31a117e3', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44d91d1461c05313eab1c98554239b9eaa3ce2a', 'committer_username': 'savuor', 'committer_name': 'Rostislav Vasilikhin', 'committer_email': 'savuor@gmail.com', 'commit_date': datetime.datetime(2014, 12, 27, 14, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd52abb3b3e19b4a0373b5a12b4d127863050d928', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3965c854f9581fc5366d11e99339e448ebba18f1', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '053a9a180298a7911ef5269b3aa54721ae7d3b5b', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd00815231da7b2d7b9891b0ce79c028222709dcc', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb9c73ad7e1c71ac5b0048107564e7f03d2865aa', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e098966171877b8a45054382e187399f1607a08', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9713bff228114ef0b5fd9122afaaf62923c9c7c7', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ce68978d516dd08349327395ed072bacba94854', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2caacd6025455e6595a4ca41510838c975f6b42', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af096f4368622dd1af12bb1152da76c701f7ea58', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f466ff4e9d30108aa6d90a2130e95898a47306db', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7147f89758f0fd43f6f099ad27b4c25cbc12e35', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '093c35114abd768d6c572f1098fea0d636ee3b37', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8412169614ca2b5f4376a11d31fe4f91094783c7', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf1254bdba256d131287413310dcbcf36c57f695', 'committer_username': 'asmorkalov', 'committer_name': 'Alexander Smorkalov', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 11, 11, 21, 16, tzinfo=datetime.timezone.utc)}]",Maksym Ivashechkin,25746830,maksimivashechkin@gmail.com,User,,6,,0,11

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
5108051,opencv,opencv/opencv,C++,55705,77636,2656,2195,34493,2601,6,134,"[{'id': 1720777613, 'number': 24987, 'closed': datetime.datetime(2024, 2, 12, 7, 16, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 10, 23, 58, 30, tzinfo=datetime.timezone.utc), 'time_taken': 112669.0, 'time_delta': '1 day, 7:17:49', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1587578230, 'number': 24499, 'closed': datetime.datetime(2023, 11, 20, 12, 47, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 5, 21, 42, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1263899.0, 'time_delta': '14 days, 15:04:59', 'additions': 28, 'deletions': 26, 'state': 'closed'}, {'id': 1577588828, 'number': 24465, 'closed': datetime.datetime(2023, 11, 8, 11, 1, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 28, 15, 54, 22, tzinfo=datetime.timezone.utc), 'time_taken': 932834.0, 'time_delta': '10 days, 19:07:14', 'additions': 121, 'deletions': 75, 'state': 'closed'}, {'id': 1445268806, 'number': 24047, 'closed': datetime.datetime(2023, 7, 23, 18, 12, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 22, 9, 45, 36, tzinfo=datetime.timezone.utc), 'time_taken': 116812.0, 'time_delta': '1 day, 8:26:52', 'additions': 2, 'deletions': 102, 'state': 'closed'}, {'id': 1437811548, 'number': 24005, 'closed': datetime.datetime(2023, 7, 27, 14, 51, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 17, 18, 10, 14, tzinfo=datetime.timezone.utc), 'time_taken': 852063.0, 'time_delta': '9 days, 20:41:03', 'additions': 4737, 'deletions': 2565, 'state': 'closed'}, {'id': 1182781423, 'number': 23078, 'closed': datetime.datetime(2023, 6, 16, 7, 59, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 2, 17, 21, 31, tzinfo=datetime.timezone.utc), 'time_taken': 14222263.0, 'time_delta': '164 days, 14:37:43', 'additions': 4470, 'deletions': 2291, 'state': 'closed'}, {'id': 1023300488, 'number': 22363, 'closed': datetime.datetime(2023, 3, 23, 12, 42, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 23, 33, 43, tzinfo=datetime.timezone.utc), 'time_taken': 19400939.0, 'time_delta': '224 days, 13:08:59', 'additions': 3087, 'deletions': 2, 'state': 'closed'}, {'id': 626452503, 'number': 20012, 'closed': datetime.datetime(2021, 5, 19, 9, 9, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 29, 19, 47, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1689733.0, 'time_delta': '19 days, 13:22:13', 'additions': 34, 'deletions': 11, 'state': 'closed'}, {'id': 496486960, 'number': 18483, 'closed': datetime.datetime(2020, 10, 2, 15, 3, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 1, 19, 11, 18, tzinfo=datetime.timezone.utc), 'time_taken': 71520.0, 'time_delta': '19:52:00', 'additions': 11, 'deletions': 7, 'state': 'closed'}, {'id': 488799036, 'number': 18356, 'closed': datetime.datetime(2020, 10, 6, 20, 37, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 17, 16, 42, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1655695.0, 'time_delta': '19 days, 3:54:55', 'additions': 685, 'deletions': 821, 'state': 'closed'}, {'id': 469033905, 'number': 18121, 'closed': datetime.datetime(2020, 8, 20, 13, 23, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 19, 45, 52, tzinfo=datetime.timezone.utc), 'time_taken': 236249.0, 'time_delta': '2 days, 17:37:29', 'additions': 7, 'deletions': 6, 'state': 'closed'}, {'id': 441029991, 'number': 17683, 'closed': datetime.datetime(2020, 8, 14, 22, 42, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 28, 9, 33, tzinfo=datetime.timezone.utc), 'time_taken': 4108167.0, 'time_delta': '47 days, 13:09:27', 'additions': 9460, 'deletions': 3, 'state': 'closed'}]"
