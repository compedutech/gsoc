pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
990908301,Add metric wrappers and MetricsContainer for Prometheus endpoint,"This is a PR for the GSoC project [JVB Prometheus Stats](https://summerofcode.withgoogle.com/programs/2022/projects/CtgpJGaV). This is a project idea [originally proposed by Jitsi](https://github.com/jitsi/gsoc-ideas/blob/master/2022/prometheus-stats.md).

Large commit, so here's the commit message:

* Add MetricsContainer which defines and collects metrics.

MetricsContainer provides a central interface to define and collect metrics.
Classes can define and register metrics with MetricsContainer.
Metrics can be exported in JSON and in both formats supported by Prometheus: OpenMetrics and text/plain 0.0.4.
Currently, only a small sample of existing statistics are defined and kept as metrics.

* Add metric wrappers for Prometheus metric types.

Wrappers such as GaugeMetric implement the interface Metric, simplifying the exporting of metrics in MetricsContainer.
These wrappers also provide atomic operations, such as decrementAndGet().
Wrappers such as BooleanMetric and LongGaugeMetric enable stronger type distinction
since Prometheus exposes all samples as 64-bit floats, unlike JSON.

* Update pom.xml with Prometheus JVM lib dependencies.

* Replace some Atomic instances with Metric instances.

* doc: Add copyright notice to Prometheus class

* ref: Rename /prometheus endpoint path to /metrics

* feat: Support for content-type negotiation for /metrics

* fix: Set region stat once in constructor

Signed-off-by: Alexandre Fonseca <4717855+alexcsf@users.noreply.github.com>",True,1915,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1915,https://github.com/jitsi/jitsi-videobridge/pull/1915,closed,122,21,13,13,4,33,0,0,[],2022-07-07 22:23:35+00:00,2022-07-28 15:52:07+00:00,1790912.0,"20 days, 17:28:32","[{'comment_id': 916328079, 'comment_body': 'These versions should match, correct? Can you introduce a variable to hold it to make it less likely to get out of sync? See e.g. jetty.version defined in the parent pom.xml', 'comment_created': datetime.datetime(2022, 7, 7, 22, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916328977, 'comment_body': ""There's no need to hold this as a static in Videobridge, is there?"", 'comment_created': datetime.datetime(2022, 7, 7, 22, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916329937, 'comment_body': 'Should we drop the ""current"" prefix since the totals already have a ""_total"" suffix?', 'comment_created': datetime.datetime(2022, 7, 7, 22, 39, 28, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916332592, 'comment_body': 'I think this needs a @Override annotation', 'comment_created': datetime.datetime(2022, 7, 7, 22, 46, 18, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916334255, 'comment_body': 'Returning an `Object` is strange. Should this be parametrized instead? e.g. `Metric<T>` and `T getMetricValue()`', 'comment_created': datetime.datetime(2022, 7, 7, 22, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916335636, 'comment_body': ""Is there a case where this returns anything different than `newValue`? I think I suggested this, but I didn't think it through -- a normal `void set(double newValue)` (still synchronized to prevent it racing with `addAndGet`) should be sufficient."", 'comment_created': datetime.datetime(2022, 7, 7, 22, 53, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916335983, 'comment_body': 'nit: Maybe rename to just `CounterMetric` since there are no other kinds of counters.', 'comment_created': datetime.datetime(2022, 7, 7, 22, 54, 48, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916336293, 'comment_body': 'nit: How about just `get()`?', 'comment_created': datetime.datetime(2022, 7, 7, 22, 55, 31, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916336536, 'comment_body': 'nit: Rename to just `addAndGet`?', 'comment_created': datetime.datetime(2022, 7, 7, 22, 56, 4, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916336708, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2022, 7, 7, 22, 56, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916338464, 'comment_body': '`GaugeMetric` would be the class to use when you want a `double` gauge, right? Maybe the methods should be public instead of protected.', 'comment_created': datetime.datetime(2022, 7, 7, 23, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916339678, 'comment_body': 'Idea: maybe this class is superfluus and these methods should go to the default (double) `GaugeMetric` class.', 'comment_created': datetime.datetime(2022, 7, 7, 23, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916340755, 'comment_body': ""As you see we don't always care about the return value. Maybe expose additional `decrement` or `dec` methods (and `increment`/`inc`)?"", 'comment_created': datetime.datetime(2022, 7, 7, 23, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916342803, 'comment_body': ""Did you mean to return the existing metric if a metric with that name was already registered? Or just return `null` as a failure indication?\r\n\r\nI suggest logging a warning or even throwing an exception, because I don't anticipate this happening legitimately.\r\n\r\nThe same applies to the other `register` methods."", 'comment_created': datetime.datetime(2022, 7, 7, 23, 11, 56, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916345538, 'comment_body': 'I think it would be nice to have an optional initial value, so we can have this start off as `true`.', 'comment_created': datetime.datetime(2022, 7, 7, 23, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916762905, 'comment_body': ""I believe they should match, I'll add a version variable."", 'comment_created': datetime.datetime(2022, 7, 8, 12, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 916767125, 'comment_body': 'No need, just an oversight!', 'comment_created': datetime.datetime(2022, 7, 8, 12, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 916773395, 'comment_body': 'I think we should, that matches the metric name for the current number of conferences: `""conferences""`.\r\nShould the _variable_ name keep the prefix? For `""conferences""` I named the variable `currentConferences` to avoid ambiguity with the Conference class.', 'comment_created': datetime.datetime(2022, 7, 8, 12, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 916796420, 'comment_body': ""It crossed my mind; I agree with `Metric<T>`.\r\n I would no longer extend `GaugeMetric` for both `BooleanMetric` and `LongGaugeMetric`.\r\nI would have to implement them concretely, since we'd have `GaugeMetric implements Metric<Double>`.\r\nI could perhaps make `GaugeMetric` a `DoubleGaugeMetric`? Those would be used for metrics such as bitrate.\r\n\r\nDoes it make sense to skip the getters (such as `getLong()`) and just use the `Metric<T>` interface method? (less clutter)\r\n```java\r\npublic final class LongGaugeMetric implements Metric<Long>\r\n{\r\n    private final Gauge gauge;\r\n    // ...\r\n\r\n    @Override\r\n    public Long getMetricValue()\r\n    {\r\n        return (long) gauge.get();\r\n    }\r\n    // ...\r\n}\r\n```\r\n\r\nOther operations _could_ also return the parameterized type, such as `Long incrementAndGet()`.\r\nThe only issue I see here is returning boxed types but I don't believe that's a problem."", 'comment_created': datetime.datetime(2022, 7, 8, 13, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 916798543, 'comment_body': ""Sounds good, I wasn't sure if we'd have an unlikely double counter."", 'comment_created': datetime.datetime(2022, 7, 8, 13, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 916800961, 'comment_body': '`void` is the way to go, I got carried away reading the concurrent.atomic javadocs and mixed it up with [getAndSet](https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/AtomicInteger.html#getAndSet-int-).', 'comment_created': datetime.datetime(2022, 7, 8, 13, 10, 8, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 916804542, 'comment_body': ""Agreed, for simplicity's sake I only mimicked the previous `AtomicLong` behavior"", 'comment_created': datetime.datetime(2022, 7, 8, 13, 14, 24, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 916818060, 'comment_body': 'I think it makes sense to keep the variable name (we can change that at any point without affecting users).', 'comment_created': datetime.datetime(2022, 7, 8, 13, 29, 46, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916825305, 'comment_body': '""Other operations could also return the parameterized type, such as Long incrementAndGet().""\r\n\r\nI like that. You could implement LongGaugeMetric and BooleanGaugeMetric by delegating to a DoubleGaugeMetric, but I\'m not sure it\'s worth the effort (compared to re-implementing the few methods they have).', 'comment_created': datetime.datetime(2022, 7, 8, 13, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 916843806, 'comment_body': ""I wasn't sure whether I should throw an exception or return an existing one so I left it as it is for now.\r\nI believe the test failures are due to this.\r\nAs an example: in [ConferenceTest.kt](https://github.com/jitsi/jitsi-videobridge/blob/master/jvb/src/test/kotlin/org/jitsi/videobridge/ConferenceTest.kt#L31), initializing new `Videobridge.Statistics()` results in null metrics. This leads to `NullPointerException` when calling methods such as `totalConferencesCreated.incrementAndGetLong()`.\r\n\r\nShould we just return the metric if it exists (and perhaps log a warning)?"", 'comment_created': datetime.datetime(2022, 7, 8, 13, 57, 30, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 916844724, 'comment_body': 'Agreed!', 'comment_created': datetime.datetime(2022, 7, 8, 13, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 916858365, 'comment_body': ""Hm, that's an interesting problem. Returning the metric if it exists is not always possible because the type might be different. We can stop instantiating `Videobridge.Statistics` more than once, but that's not great. \r\n\r\nI don't really like how MC is static and leaves state behind between test runs. We could introduce a different MC implementation for tests, and have it cleaned up between tests. Is there a way to unregister metrics from Prometheus? I have to think about this some more."", 'comment_created': datetime.datetime(2022, 7, 8, 14, 12, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 919058124, 'comment_body': 'Is a `null` value supported? If not, you can make `value` non-nullable, save it as a `val` and then return it here instead of having to use `!!`', 'comment_created': datetime.datetime(2022, 7, 12, 14, 41, 10, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 919060627, 'comment_body': 'nit: You can use the kotlin `mutableMapOf()` here', 'comment_created': datetime.datetime(2022, 7, 12, 14, 43, 17, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 919066159, 'comment_body': 'You can use `metrics.mapValues { it.value.get() }` here', 'comment_created': datetime.datetime(2022, 7, 12, 14, 47, 56, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 919979123, 'comment_body': ""`null` values are not supported, I'll include the change"", 'comment_created': datetime.datetime(2022, 7, 13, 11, 43, 12, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 928958637, 'comment_body': 'Can it just inherit this from `jicoco-metrics`?', 'comment_created': datetime.datetime(2022, 7, 25, 14, 34, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 928991584, 'comment_body': 'The `/metrics` endpoint uses media type constants such as `TextFormat.CONTENT_TYPE_004`.\r\nOnly `simpleclient_common` is needed for that, but we can have those constants in `MetricsContainer` or write them ourselves in the endpoint (if you want both dependencies gone).', 'comment_created': datetime.datetime(2022, 7, 25, 15, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}]","[{'commit_sha': '404e4cb9dccab3e48f733fc2fb12cc5bd42b218f', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319c7f9fd21cd29796e9b5b6a5b4bbcdc11d990c', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07e95df1f9e7df4559ad58a08dae2cafc5ed572b', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '220bb3047328f31a37bbf06189de2cd39f41bcc7', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6b2f789d0575e35ce1e57cf456cd3902fdba0cb', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46f38d45d74525a3ff20b08183a9b72afbb3b636', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2eabf1000507885a90ebfac1d2c73c876c25537', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e5e1e1044d69590ea5631e3714143acbc3f5df', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd75ea46ef0f7fb368c2e9b6883dc60466b95b2c', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eef45ef175f952fb3ebd21c7c3512852d3f9b0a7', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccf4124d005b652bfb052e3e2afec59a062c13fb', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c7bf8d6c42cab88e5cf1772ddabe7921b80f9c3', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3d6b6476ac17874f1ccce4f7fa8ccdc82005ddc', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1016412565,ref: Port both failed conferences stats to Metrics.,"Port both ""failed conferences"" stats - `total_failed_conferences` and `total_partially_failed_conferences` - to `CounterMetric` instances, for use with the reworked metrics system. The ""total"" prefix in the names is omitted for the new `metrics` endpoint (and preserved for the old one) since the Prometheus library automatically adds a `total` suffix.",True,1930,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1930,https://github.com/jitsi/jitsi-videobridge/pull/1930,closed,12,12,3,2,1,3,0,0,[],2022-08-03 14:42:59+00:00,2022-08-05 13:05:23+00:00,166944.0,"1 day, 22:22:24","[{'comment_id': 937221177, 'comment_body': 'Can you also rename the variables please (""total"" is not necessary).', 'comment_created': datetime.datetime(2022, 8, 3, 23, 41, 20, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 937223585, 'comment_body': 'Can you please change the descriptions to something like ""Number of conferences in which ALL/SOME of the endpoints failed ICE""? It\'d be nice to update/clarify the descriptions while porting and this one is outdated. I actually question the usefulness of these 2 metrics altogether.', 'comment_created': datetime.datetime(2022, 8, 3, 23, 47, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 938657820, 'comment_body': 'Sure thing!', 'comment_created': datetime.datetime(2022, 8, 5, 9, 58, 5, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}]","[{'commit_sha': 'b630d95bddd2a66c0c709f6f8e47b89fd5904cef', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec2916d7a2d913aa1aed806d9615f7f4a1c94bd1', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1021509386,Port totalConferencesCompleted stat to Metric.,"* ref: Port totalConferencesCompleted stat to Metric.
* ref: Rename totalConferencesCreated variable and metric.",True,1931,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1931,https://github.com/jitsi/jitsi-videobridge/pull/1931,closed,9,7,3,1,1,0,0,0,[],2022-08-09 13:16:51+00:00,2022-08-09 13:51:46+00:00,2095.0,0:34:55,[],"[{'commit_sha': 'da9b097d6a14486654fc9a4deb051dc3a21a42f4', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1021648672,ref: Port ICE stats to Metrics.,Also fixes a test failure in BitrateControllerTraceTest and removes a trailing comma ktlint wasn't happy about.,True,1932,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1932,https://github.com/jitsi/jitsi-videobridge/pull/1932,closed,53,31,5,3,1,4,0,0,[],2022-08-09 15:09:32+00:00,2022-08-09 20:14:11+00:00,18279.0,5:04:39,"[{'comment_id': 941517164, 'comment_body': 'Can you move these from Videobridge.Statistics to IceTransport.Companion?\r\n\r\nI see that iceSucceededTcp and iceSucceededRelayed are never incremented which explains why I\'ve had ""fix ice tcp and relayed stats"" ticket on my backlog 🤦 . I\'ll fix that later.', 'comment_created': datetime.datetime(2022, 8, 9, 15, 50, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 941519816, 'comment_body': 'The increment should also be internal to IceTransport', 'comment_created': datetime.datetime(2022, 8, 9, 15, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 941536326, 'comment_body': ""Sure thing.\r\n\r\n> The increment should also be internal to IceTransport\r\n\r\nI'm not sure what you mean by this. Can you clarify?\r\n"", 'comment_created': datetime.datetime(2022, 8, 9, 16, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 941590544, 'comment_body': 'As an example currently IceTransport calls `connected()`, then `Endpoint`/`Relay` fire `iceSucceeded` and `Conference` increments the `iceSucceeded` metrics. Instead `IceTransport` should increment the metric when it calls `connected()`. \r\nBasically all the logic for ICE metrics (except for should be in IceTransport', 'comment_created': datetime.datetime(2022, 8, 9, 17, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}]","[{'commit_sha': '4de50175c38ac46650975486e425bcbdc74cf713', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c34580e38bf66153a05a29b80991de54e480655', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00007311f42dc7126ea8421771d37a57ad742e7c', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1023766241,Port some more metrics to MetricsContainer.,,True,1934,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1934,https://github.com/jitsi/jitsi-videobridge/pull/1934,closed,18,12,6,4,1,0,0,0,[],2022-08-11 11:51:06+00:00,2022-08-11 12:44:31+00:00,3205.0,0:53:25,[],"[{'commit_sha': '01deaca4f250199576ccde12c53021d75f88912c', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22783be13088dcc6cb4c2ab5729e02dc0ebfccd2', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef74b34f6de8a334f46ce02c3b1221c897de8165', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3957ce1d74e85b8fd955608a7d89c31f76e335e0', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1023977791,Port additional metrics to MetricsContainer.,,True,1935,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1935,https://github.com/jitsi/jitsi-videobridge/pull/1935,closed,12,8,4,1,1,0,0,0,[],2022-08-11 14:59:44+00:00,2022-08-12 12:30:33+00:00,77449.0,21:30:49,[],"[{'commit_sha': 'c8e77f0c374e31f365a609352e4ab98a1a588542', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1025028498,Move some keyframe metrics to MetricsContainer.,,True,1936,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1936,https://github.com/jitsi/jitsi-videobridge/pull/1936,closed,14,8,5,1,2,0,0,0,[],2022-08-12 14:43:57+00:00,2022-08-16 15:16:01+00:00,347524.0,"4 days, 0:32:04",[],"[{'commit_sha': '6362e910b3256c28bab7b379172a78a04932f2aa', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1032855254,Port some packet stats to MetricsContainer.,,True,1941,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1941,https://github.com/jitsi/jitsi-videobridge/pull/1941,closed,20,13,3,1,1,0,0,0,[],2022-08-22 13:29:42+00:00,2022-08-22 14:01:34+00:00,1912.0,0:31:52,[],"[{'commit_sha': 'ad0cf5df0e534e2d1e193618e6de68559d84fa9c', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1034128993,Move a few metrics to MetricsContainer.,"I have a couple of concerns regarding metric (and variable) naming.

1. (nitpicking) In this case, I think keeping the ""total"" prefix reduces ambiguity for Counters with similar Gauge counterparts (e.g., `totalEndpoints` vs. `currentLocalEndpoints`). For standalone Counters we can omit ""total"".

2. More importantly, the Prometheus library adds a ""total"" suffix to Counters automatically. However, the JSON (at `/metrics`) , doesn't get this suffix. Worse yet, this behavior can break the `MetricsContainer` (though unlikely):

- Register a CounterMetric named `endpoints` which ends up as `endpoints_total` in the Prometheus registry;
- Register a CounterMetric named `endpoints_total`. This works for `MetricsContainer`, but can't be registered in the Prometheus registry since the library [handles ""_total"" suffixes gracefully](https://github.com/prometheus/client_java/blob/master/simpleclient/src/main/java/io/prometheus/client/Counter.java#L101) (i.e., no duplicate suffixes).

If we want consistency, I believe it is better to ensure every Counter ends with ""total"". I see 3 options:

1. Leave it as is.
2. Rename every ported CounterMetric, adding a ""_total"" suffix. New CounterMetrics should have this suffix. Contributors would have to be aware of this naming standard.
3. Change `MetricsContainer` so that registering a CounterMetric adds a suffix when necessary. We could log whenever a metric is renamed (and perhaps suggest renaming the metric itself).",True,1942,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1942,https://github.com/jitsi/jitsi-videobridge/pull/1942,closed,16,8,3,1,6,0,0,0,[],2022-08-23 12:35:35+00:00,2022-08-25 20:10:16+00:00,200081.0,"2 days, 7:34:41",[],"[{'commit_sha': '9fbe9983e7454dabbd5cdd9c7278be910da41b00', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1039926235,Port a few more stats to MetricsContainer.,"- I assume `dtlsFailedEndpoints` is cumulative, can you confirm?
- `totalDominantSpeakerChanges` is/was a `LongAdder`. Is this for better performance?",True,1944,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1944,https://github.com/jitsi/jitsi-videobridge/pull/1944,closed,18,12,5,2,2,3,0,0,[],2022-08-29 16:23:00+00:00,2022-08-30 20:28:49+00:00,101149.0,"1 day, 4:05:49","[{'comment_id': 957665531, 'comment_body': 'Can you rename this to endpoints_dtls_failed for consistency (we have other endpoints_ metrics, right?)', 'comment_created': datetime.datetime(2022, 8, 29, 18, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 957666943, 'comment_body': ""FYI: I would like to move to a model where we increment these live insted of on expire(), but that's probably outside the scope of your project"", 'comment_created': datetime.datetime(2022, 8, 29, 18, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 957733548, 'comment_body': 'Will do (and yes, we do)', 'comment_created': datetime.datetime(2022, 8, 29, 19, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}]","[{'commit_sha': '2cea1017babeb08eaa231aadc415c46cae99b685', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9b95a9fcb70a3c096fbd2418afd4a2f2b5a86aa', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
997024873,Add checkstyle rules to match guidelines for opening braces.,"According to [Jitsi's Contributing Guidelines](https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-contributing/#formatting), for Java:

> Opening braces MUST be on their own line (especially those beginning a method).


I believe this covers all cases.

To avoid reformatting one-line statements in IDEA, there's a few options under:
Settings > Editor > Code Style > Java > Wrapping and Braces > Keep when reformatting",True,1920,https://api.github.com/repos/jitsi/jitsi-videobridge/pulls/1920,https://github.com/jitsi/jitsi-videobridge/pull/1920,closed,40,15,11,2,6,0,0,0,[],2022-07-14 19:05:16+00:00,2022-07-15 15:35:48+00:00,73832.0,20:30:32,[],"[{'commit_sha': '7f71b0ff81e288c20ba66690aa5021956d73040b', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd4b570ec7e86fa3986ddd64eedcecebc081e8d1', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1001104684,Rework metrics system for Prometheus (moved from jvb).,"This commit relates to PR #1915 in jitsi-videobridge.
The metrics package (the core of the project) is moving to jicoco.
See: https://github.com/jitsi/jitsi-videobridge/pull/1915/",True,173,https://api.github.com/repos/jitsi/jicoco/pulls/173,https://github.com/jitsi/jicoco/pull/173,closed,899,0,12,3,3,4,0,0,[],2022-07-19 18:22:05+00:00,2022-07-26 17:29:14+00:00,601629.0,"6 days, 23:07:09","[{'comment_id': 924843004, 'comment_body': 'metaconfig is not needed', 'comment_created': datetime.datetime(2022, 7, 19, 18, 35, 37, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 924845209, 'comment_body': 'ghost comment block', 'comment_created': datetime.datetime(2022, 7, 19, 18, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 924852342, 'comment_body': 'Can you use a `Gauge` without (or before) registering it? I think you may run into some awkwardness when adding tests if every `Metric` instance automatically registers itself with the default registry.\r\n\r\nI think a better approach is to make registration the responsibility of MetricsContainer. This will also make it easy to allow the user of the library (this is now a library :)) to use their own registry (i.e. just add a `val` in MetricsContainer) ', 'comment_created': datetime.datetime(2022, 7, 19, 18, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 925599927, 'comment_body': ""> Can you use a `Gauge` without (or before) registering it? I think you may run into some awkwardness when adding tests if every `Metric` instance automatically registers itself with the default registry.\r\n\r\nYes, they can be used without being registered.\r\n\r\n> I think a better approach is to make registration the responsibility of MetricsContainer. This will also make it easy to allow the user of the library (this is now a library :)) to use their own registry (i.e. just add a `val` in MetricsContainer)\r\n\r\nI agree with separating registration from creation. I think we can streamline MetricsContainer. I'll get back to you on that.\r\nI've also been thinking of replicating the builder pattern from the prometheus library for each metric type, it seems more intuitive."", 'comment_created': datetime.datetime(2022, 7, 20, 13, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}]","[{'commit_sha': '80d1886faa43f00aac9e29da5afb605fbe56309f', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9cf44763a4a1eae2c0f3c8fdce6a78c0d01e48c', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe2460d868a6267b1bedc348ff087deda4d64c53', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1009980208,Add Prometheus REST endpoint (moved from JVB).,"* Add Prometheus REST endpoint.
* Add tests.
* Update pom.xml.

This commit relates to PR #1915 in jitsi-videobridge.

Signed-off-by: Alexandre Fonseca <4717855+alexcsf@users.noreply.github.com>",True,175,https://api.github.com/repos/jitsi/jicoco/pulls/175,https://github.com/jitsi/jicoco/pull/175,closed,278,2,3,2,1,0,0,0,[],2022-07-27 18:20:10+00:00,2022-07-27 19:22:35+00:00,3745.0,1:02:25,[],"[{'commit_sha': 'd2b4103f55a3e2d458f35ec0b7a57bae4462948e', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f390d1cb50f8db20223a76fa67fb6c72a7e28078', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1023061781,feat: Add resetAll() to MetricsContainer for testing.,Adds a `resetAll()` method to `MetricsContainer` which resets all of its `Metrics` to their respective initial values.,True,176,https://api.github.com/repos/jitsi/jicoco/pulls/176,https://github.com/jitsi/jicoco/pull/176,closed,54,5,8,2,1,0,0,0,[],2022-08-10 18:42:43+00:00,2022-08-10 21:49:36+00:00,11213.0,3:06:53,[],"[{'commit_sha': 'bca37ac83388481815a37e28c353474065a868be', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fea17fb9c28f99f8f8425c723cd26041e92abea5', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1038138871,Append missing _total suffix when registering Counter metrics.,"As discussed in [this jitsi-videobridge PR](https://github.com/jitsi/jitsi-videobridge/pull/1942).
",True,177,https://api.github.com/repos/jitsi/jicoco/pulls/177,https://github.com/jitsi/jicoco/pull/177,closed,19,6,3,5,1,7,0,0,[],2022-08-26 16:17:41+00:00,2022-09-13 14:07:37+00:00,1547396.0,"17 days, 21:49:56","[{'comment_id': 957674898, 'comment_body': 'Use createLogger()', 'comment_created': datetime.datetime(2022, 8, 29, 18, 33, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 957675773, 'comment_body': 'Why use ""when"" instead of ""if""?', 'comment_created': datetime.datetime(2022, 8, 29, 18, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 957677916, 'comment_body': 'If there is another metric with ""name"" the Prometheus lib will throw, right? What do you think about handling that case here, so it\'s clear that it\'s expected and the warning message is clear ', 'comment_created': datetime.datetime(2022, 8, 29, 18, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 957747292, 'comment_body': 'I think I was playing around and forgot to revert it to ""if"". Should I go ahead and change it to this?\r\n```kotlin\r\nval newName = if (name.endsWith(""_total"")) name else ""${name}_total"".also {\r\n    logger.warn(""Counter \'$name\' was renamed to \'$it\' to ensure consistent metric naming."")\r\n}\r\n```\r\nAlso, it currently logs whenever a metric is renamed (which currently applies to all of our CounterMetric). I think it\'s better to log this behavior even though it\'s the most common, as opposed to logging whenever a metric name is unchanged.', 'comment_created': datetime.datetime(2022, 8, 29, 20, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 957764709, 'comment_body': 'Yes, it throws an IllegalArgumentException. So were you thinking of trying to return a newly-registered metric, and catch the exception and deal with it?', 'comment_created': datetime.datetime(2022, 8, 29, 20, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'alexcsf', 'type': 'User'}, {'comment_id': 958898405, 'comment_body': 'Agreed. But make it INFO or DEBUG', 'comment_created': datetime.datetime(2022, 8, 30, 20, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}, {'comment_id': 958899695, 'comment_body': ""No, I was thinking of catching the case and throwing our own exception. Just a suggestion I'm not sure this is a good idea or worth doing."", 'comment_created': datetime.datetime(2022, 8, 30, 20, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bgrozev', 'type': 'User'}]","[{'commit_sha': '930aec4907906a87b4a4b85ebbdfabc511ff6ade', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b24edf54b0c347c93d58800dd86d060bd3a3845', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '561d38b38a1dd4dd595f6f28cc02940f01a295c0', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46e1feab41e09a37c5a5a1ea53fe0d12780bd70', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '883a4f6cd44d66d4d0980137d6fc33b074425791', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3
1046650722,Add OpenMetrics units to metrics.,"Currently just a draft.
In this approach, a unit is automatically added to a metric if the last suffix of its name matches a known unit string.",False,178,https://api.github.com/repos/jitsi/jicoco/pulls/178,https://github.com/jitsi/jicoco/pull/178,open,24,3,4,1,0,0,0,0,[],2022-09-05 16:11:50+00:00,,0.0,,[],"[{'commit_sha': '63d1e84b55bcd499c41ff86c9abf5036fbbc7962', 'committer_username': 'alexcsf', 'committer_name': 'Alexandre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 17, 12, 1, 55, tzinfo=datetime.timezone.utc)}]",Alexandre,4717855,,User,,4,,0,3

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
9657943,jitsi-videobridge,jitsi/jitsi-videobridge,Kotlin,987,2882,151,92,4977,170,25,32,"[{'id': 1039926235, 'number': 1944, 'closed': datetime.datetime(2022, 8, 30, 20, 28, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 29, 16, 23, tzinfo=datetime.timezone.utc), 'time_taken': 101149.0, 'time_delta': '1 day, 4:05:49', 'additions': 18, 'deletions': 12, 'state': 'closed'}, {'id': 1034128993, 'number': 1942, 'closed': datetime.datetime(2022, 8, 25, 20, 10, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 23, 12, 35, 35, tzinfo=datetime.timezone.utc), 'time_taken': 200081.0, 'time_delta': '2 days, 7:34:41', 'additions': 16, 'deletions': 8, 'state': 'closed'}, {'id': 1032855254, 'number': 1941, 'closed': datetime.datetime(2022, 8, 22, 14, 1, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 13, 29, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1912.0, 'time_delta': '0:31:52', 'additions': 20, 'deletions': 13, 'state': 'closed'}, {'id': 1025028498, 'number': 1936, 'closed': datetime.datetime(2022, 8, 16, 15, 16, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 12, 14, 43, 57, tzinfo=datetime.timezone.utc), 'time_taken': 347524.0, 'time_delta': '4 days, 0:32:04', 'additions': 14, 'deletions': 8, 'state': 'closed'}, {'id': 1023977791, 'number': 1935, 'closed': datetime.datetime(2022, 8, 12, 12, 30, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 14, 59, 44, tzinfo=datetime.timezone.utc), 'time_taken': 77449.0, 'time_delta': '21:30:49', 'additions': 12, 'deletions': 8, 'state': 'closed'}, {'id': 1023766241, 'number': 1934, 'closed': datetime.datetime(2022, 8, 11, 12, 44, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 11, 51, 6, tzinfo=datetime.timezone.utc), 'time_taken': 3205.0, 'time_delta': '0:53:25', 'additions': 18, 'deletions': 12, 'state': 'closed'}, {'id': 1021648672, 'number': 1932, 'closed': datetime.datetime(2022, 8, 9, 20, 14, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 15, 9, 32, tzinfo=datetime.timezone.utc), 'time_taken': 18279.0, 'time_delta': '5:04:39', 'additions': 53, 'deletions': 31, 'state': 'closed'}, {'id': 1021509386, 'number': 1931, 'closed': datetime.datetime(2022, 8, 9, 13, 51, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 13, 16, 51, tzinfo=datetime.timezone.utc), 'time_taken': 2095.0, 'time_delta': '0:34:55', 'additions': 9, 'deletions': 7, 'state': 'closed'}, {'id': 1016412565, 'number': 1930, 'closed': datetime.datetime(2022, 8, 5, 13, 5, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 3, 14, 42, 59, tzinfo=datetime.timezone.utc), 'time_taken': 166944.0, 'time_delta': '1 day, 22:22:24', 'additions': 12, 'deletions': 12, 'state': 'closed'}, {'id': 997024873, 'number': 1920, 'closed': datetime.datetime(2022, 7, 15, 15, 35, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 14, 19, 5, 16, tzinfo=datetime.timezone.utc), 'time_taken': 73832.0, 'time_delta': '20:30:32', 'additions': 40, 'deletions': 15, 'state': 'closed'}, {'id': 990908301, 'number': 1915, 'closed': datetime.datetime(2022, 7, 28, 15, 52, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 22, 23, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1790912.0, 'time_delta': '20 days, 17:28:32', 'additions': 122, 'deletions': 21, 'state': 'closed'}]"
43829218,jicoco,jitsi/jicoco,Kotlin,55,18,18,20,270,4,8,3,"[{'id': 1046650722, 'number': 178, 'closed': None, 'created': datetime.datetime(2022, 9, 5, 16, 11, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 24, 'deletions': 3, 'state': 'open'}, {'id': 1038138871, 'number': 177, 'closed': datetime.datetime(2022, 9, 13, 14, 7, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 26, 16, 17, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1547396.0, 'time_delta': '17 days, 21:49:56', 'additions': 19, 'deletions': 6, 'state': 'closed'}, {'id': 1023061781, 'number': 176, 'closed': datetime.datetime(2022, 8, 10, 21, 49, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 18, 42, 43, tzinfo=datetime.timezone.utc), 'time_taken': 11213.0, 'time_delta': '3:06:53', 'additions': 54, 'deletions': 5, 'state': 'closed'}, {'id': 1009980208, 'number': 175, 'closed': datetime.datetime(2022, 7, 27, 19, 22, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 18, 20, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3745.0, 'time_delta': '1:02:25', 'additions': 278, 'deletions': 2, 'state': 'closed'}, {'id': 1001104684, 'number': 173, 'closed': datetime.datetime(2022, 7, 26, 17, 29, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 19, 18, 22, 5, tzinfo=datetime.timezone.utc), 'time_taken': 601629.0, 'time_delta': '6 days, 23:07:09', 'additions': 899, 'deletions': 0, 'state': 'closed'}]"
