pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1375424872,Introduced Question Coordinator Role: GSoC M1.1,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR Introduces the role of Question Coordinator with rights same as question admin.
2. This PR does the following: Added a new role of Question Coordinator with same rights as Question Admin. We need this role so as to implement new contributor admin dashboard.

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

The user doesn't have the role of question admin assigned to it but is able to perform functions of the question admin with question coordinator role, this shows that the rights of question coordinator and question admin are same.

[Screencast from 02-06-23 02:16:47 PM IST.webm](https://github.com/oppia/oppia/assets/91470808/4f64d52f-a1d9-4373-a4a6-640c3475ba0d)

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected


Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,18317,https://api.github.com/repos/oppia/oppia/pulls/18317,https://github.com/oppia/oppia/pull/18317,closed,33,6,8,22,9,2,1,1,[{'name': 'PR: LGTM'}],2023-06-02 09:24:15+00:00,2023-06-07 16:00:11+00:00,455756.0,"5 days, 6:35:56","[{'comment_id': 1219568298, 'comment_body': ""Optional: Can you create an enum for all roles? Like: \r\n```\r\nenum UserRoles {\r\n  QUESTION_COORDINATOR='QUESTION_COORDINATOR',\r\n  QUESTION_ADMIN='QUESTION_ADMIN'\r\n  ...\r\n}\r\n```\r\nThen use it here:\r\n`this._roles.includes(UserRoles.QUESTION_COORDINATOR)`"", 'comment_created': datetime.datetime(2023, 6, 6, 12, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 1222725182, 'comment_body': 'Added the suggested enum. Sorry for not responding to the comment.', 'comment_created': datetime.datetime(2023, 6, 8, 9, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13ad88abc5c4b4975f3e2920f173ab75d038df20', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32990603cc66a21979aec3474165e2b1f970053e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a18f93d307fc74f7cd3f54971985261d9a63e731', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87379b047f3b78c5ab7b215e01739a0b0047368c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bda8ba0e45c0c65f064c04664d14b3d7aff1085', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1380147841,Introducing new storage models required for Contributor Admin Dashboard: GSoC M1.2,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR introduces storage model changes required for #17440 
2. This PR does the following: Added four new storage models to store the stats required to be displayed in contributor admin dashboard. 
fetch_page is a pagination function implemented so that we can use it in future while building frontend. It supports pagination, sorting and filtering. Test cases have been added for each unique condition.
The reasoning for introducing the models and more information about the models can be found at [GSoC Proposal (2023) -- 2.1 Contributor Dashboard Admin Stats Table (Kshitij Patil)](https://docs.google.com/document/d/19lCEYQUgV7_DwIK_0rz3zslRHX2qKOHn-t9Twpi0qu0/edit)

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x]  The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

Proof that all the test cases are covered

![Screenshot from 2023-06-05 19-40-45](https://github.com/oppia/oppia/assets/91470808/ef9bce58-e09e-4d5a-bb16-d3c3c50d7b8a)


<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,18340,https://api.github.com/repos/oppia/oppia/pulls/18340,https://github.com/oppia/oppia/pull/18340,closed,5011,7,6,73,25,176,2,2,"[{'name': 'PR: LGTM'}, {'name': 'PR: Affects datastore layer'}]",2023-06-06 04:30:45+00:00,2023-06-13 18:22:39+00:00,654714.0,"7 days, 13:51:54","[{'comment_id': 1220087794, 'comment_body': 'Perhaps you should capitalize Submitted and Reviewed (in 4 places below) as well.', 'comment_created': datetime.datetime(2023, 6, 6, 18, 1, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220088429, 'comment_body': 'cause --> because', 'comment_created': datetime.datetime(2023, 6, 6, 18, 1, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220088983, 'comment_body': 'cause --> because', 'comment_created': datetime.datetime(2023, 6, 6, 18, 2, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220097825, 'comment_body': 'translation --> translations', 'comment_created': datetime.datetime(2023, 6, 6, 18, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220101808, 'comment_body': ""This seems indirect, can't you just pass 'IncreasingLastActivity' etc. as the sort_by ? You should use IDs for these things rather than displayable names, since the former are stable and the latter are changeable.\r\n\r\nThen I would also suggest just making a dict mapping those IDs to the corresponding sort property and doing a dict lookup."", 'comment_created': datetime.datetime(2023, 6, 6, 18, 14, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220102186, 'comment_body': 'Deindent by 4 to match opening brace.', 'comment_created': datetime.datetime(2023, 6, 6, 18, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220102397, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2023, 6, 6, 18, 15, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220102607, 'comment_body': 'else raise Exception?', 'comment_created': datetime.datetime(2023, 6, 6, 18, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220103704, 'comment_body': 'Make this a named constant (or use an existing named constant), declare it at the top of the file, and use that constant throughout all the methods which need it.', 'comment_created': datetime.datetime(2023, 6, 6, 18, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220105008, 'comment_body': 'You can drop one of the parens at the end (and the corresponding close paren).', 'comment_created': datetime.datetime(2023, 6, 6, 18, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220106342, 'comment_body': ""You can't use a filter for this in the datastore query above?"", 'comment_created': datetime.datetime(2023, 6, 6, 18, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220108302, 'comment_body': 'Why not just `splitted_id[0]` (without the %s stuff)?', 'comment_created': datetime.datetime(2023, 6, 6, 18, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220846787, 'comment_body': 'If None is passed, it will be set to -cls.recent_performance as default, as you can see on line 2203.', 'comment_created': datetime.datetime(2023, 6, 7, 4, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1220852699, 'comment_body': ""We can't because of the property of gae models that states: \r\n**The first sort property must be the same as the property to which an inequality filter is applied.** \r\nAs we are sorting on multiple metrics we have to go by this method to apply filter for last_activity.\r\n\r\nI have mentioned this on line 2233 as well, where we are writing sort query."", 'comment_created': datetime.datetime(2023, 6, 7, 5, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221849661, 'comment_body': ""I think you can make the comment in line 2233 more clear. Be specific about where the restriction comes from, provide a link, give the reader enough context on what you're trying to do and why it can't be done. Assume your reader has no knowledge of GAE query restrictions or this conversation.\r\n\r\nIt's fine for the comment to be multiple paragraphs long, as long as it's clear to any developer who reads it."", 'comment_created': datetime.datetime(2023, 6, 7, 16, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1221918037, 'comment_body': 'Changed it in the new commits.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221918241, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221918361, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 57, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221918473, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221918785, 'comment_body': 'Done,', 'comment_created': datetime.datetime(2023, 6, 7, 16, 58, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221918900, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 58, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221919889, 'comment_body': 'Made a new constant in the file NUM_MODELS_PER_FETCH', 'comment_created': datetime.datetime(2023, 6, 7, 16, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221920062, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221920949, 'comment_body': 'Yeah, that sounds fine. Changed.', 'comment_created': datetime.datetime(2023, 6, 7, 17, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221956976, 'comment_body': 'Added a new dict **sort_options_dict** . In future if we want to add or remove any sort propoerty we just have to modify that dict rather than tweaking the whole if-else ladder. Thanks for the suggestion.', 'comment_created': datetime.datetime(2023, 6, 7, 17, 37, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1222454609, 'comment_body': ""I have added a reference link to gae docs stating that error, where a new developer can easily understand why we didn't used the inequality filter with the sort query."", 'comment_created': datetime.datetime(2023, 6, 8, 5, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1222546985, 'comment_body': '```suggestion\r\n    ""IncreasingReviewedTranslations"": ""Lowest to Highest Reviewed Translations"",\r\n    ""DecreasingReviewedTranslations"": ""Highest to Lowest Reviewed Translations"",\r\n    ""IncreasingReviewedQuestions"": ""Lowest to Highest Reviewed Questions"",\r\n    ""DecreasingReviewedQuestions"": ""Highest to Lowest Reviewed Questions""\r\n```', 'comment_created': datetime.datetime(2023, 6, 8, 7, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lkbhitesh07', 'type': 'User'}, {'comment_id': 1222547282, 'comment_body': 'Revert this.', 'comment_created': datetime.datetime(2023, 6, 8, 7, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lkbhitesh07', 'type': 'User'}, {'comment_id': 1222625710, 'comment_body': 'Changed it and also the references to these changes. Thanks.', 'comment_created': datetime.datetime(2023, 6, 8, 8, 13, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1222626484, 'comment_body': ""Actually I didn't made this change. Tho I have reverted it, I am not sure how it was changed."", 'comment_created': datetime.datetime(2023, 6, 8, 8, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1223007829, 'comment_body': ""I advise that you don't call these statuses. This is going to confuse things. Instead you should use REVIEW_OUTCOME_ACCEPTED, REVIEW_OUTCOME_ACCEPTED_WITH_EDITS, etc. \r\n\r\nOtherwise, with what you have, it leads to questions about why STATUS_CHOICES doesn't include STATUS_ACCEPTED_WITH_EDITS etc."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 0, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223009754, 'comment_body': 'REVIEW_OUTCOME_CHOICES', 'comment_created': datetime.datetime(2023, 6, 8, 13, 1, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223012112, 'comment_body': ""This is not quite right, it doesn't match your implementation.\r\n\r\n`The ID of each model is formatted as [language_code].[contributor_id]`\r\n\r\nPlease make sure other docstrings are fully correct as well, otherwise we go through unnecessary review cycles."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223013431, 'comment_body': '...of the topics for which the contributor has at least one ...\r\n\r\nNote also that ""at least"" is two words. Please fix here and elsewhere.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223013882, 'comment_body': 'Add a space before /', 'comment_created': datetime.datetime(2023, 6, 8, 13, 4, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223015336, 'comment_body': 'Missing args and returns in docstring. Please fix here and elsewhere.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 5, 26, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223016114, 'comment_body': 'This docstring is wrong. Please proofread your docstrings.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223016388, 'comment_body': 'Nit: can be on the previous line.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223016768, 'comment_body': 'Specify the possible choices that are allowed, and use a more restrictive Python type that limits to those choices.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223017582, 'comment_body': 'You can move the start of this sentence to the end of the previous line.\r\n\r\nAlso I don\'t think this is correct? Isn\'t this the thing that the caller is passing in rather than some attribute of the user? I.e. ""List of topic IDs to fetch the contribution stats for."" or something like that? There is no specific user here, I think, so I\'m not sure what your docstring is referring to.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223018928, 'comment_body': ""I don't understand what this means. It might have the same problem as the previous one.\r\n\r\nAlso the variable name doesn't sound like an int. Perhaps num_days_since_last_activity or similar."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223019813, 'comment_body': 'The optional args should go at the end.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 9, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223020114, 'comment_body': 'The language code to get results for.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223022601, 'comment_body': 'The list of models which match the supplied language_code, topic_ids and last_activity filters, returned in the order specified by sort_by.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223024283, 'comment_body': 'The string value appear to be duplicated, so you should make them constants and put them at the top, e.g. SORT_KEY_INCREASING_LAST_ACTIVITY.\r\n\r\nAlso, as mentioned in a previous comment, the mapping should be directly from SORT_KEY_INCREASING_LAST_ACTIVITY and you should be passing the sort keys to this function, rather than the human-readable values.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223026390, 'comment_body': 'Add a conclusion at the end: This is why we are handling the last_activity inequality filter separately below.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223029057, 'comment_body': ""I think you can make NUM_MODELS_PER_FETCH larger, say 500. Otherwise you'll potentially end up fetching quite a lot of pages in the case where you'll need to retrieve all the results. It's better to have fewer queries."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223031134, 'comment_body': 'You will need to exercise this manually on your local server to generate the index.yaml file indexes needed to serve this query. https://cloud.google.com/appengine/docs/legacy/standard/python/config/indexref#creating_index_files', 'comment_created': datetime.datetime(2023, 6, 8, 13, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223032533, 'comment_body': 'You should have a backend test that verifies that the keys here match the constants defined in the backend file (see comment below). This will help catch errors if a developer changes the key in the future.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223037272, 'comment_body': 'Why are you incrementing in this case?', 'comment_created': datetime.datetime(2023, 6, 8, 13, 22, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223039463, 'comment_body': 'Missing args and returns.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223040356, 'comment_body': 'Same concerns as above, here and for other parts of this method.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223041551, 'comment_body': '`The ID of each model is simply: [contributor_id].`\r\n\r\n(There is only one ID for each model, so ""IDs"" is misleading.)', 'comment_created': datetime.datetime(2023, 6, 8, 13, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223043699, 'comment_body': 'Same concerns as above.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223046007, 'comment_body': ""I'm a bit confused by this. Why don't you just call it the language_code? The way it is written it sounds like some kind of ID."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223046552, 'comment_body': 'Why are you referring to topics here?', 'comment_created': datetime.datetime(2023, 6, 8, 13, 29, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223046728, 'comment_body': ""This sentence doesn't scan."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223048456, 'comment_body': 'Same question as above.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223048782, 'comment_body': 'Why do we need to do this? We only have one model for each user.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223049250, 'comment_body': ""Add space before '/'. Similarly elsewhere."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 31, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223050941, 'comment_body': 'Same comments as above, throughout this class.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223051640, 'comment_body': 'Indent by 4.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223052381, 'comment_body': 'All these args should be indented by 4.\r\n\r\nDitto below, in various places.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223053299, 'comment_body': 'Check len(sorted_results) and check sorted_results[1].id as well if it exists.\r\n\r\nDitto for other fetch_page() queries, do the test fully.\r\n\r\nYou should also be creating the data so that each sort produces a different result. You might need to check the second page of results as well for full confirmation. It is OK to make your page size larger when testing sort order, and have a separate test for checking pagination.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 35, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223053636, 'comment_body': 'This should be 4 spaces indented from the previous line.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223055662, 'comment_body': 'I suggest creating a separate test for filters since they are conceptually different from sorts.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 37, 7, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223058372, 'comment_body': ""You shouldn't have logic in tests. Just hardcode the expected data."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223059221, 'comment_body': 'Same notes as before re splitting filtering to a separate test. Also note that last_activity is misspelled below.\r\n\r\nDitto for the other two models.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 39, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223059600, 'comment_body': 'Same notes as before re not doing logic in tests. Ditto for the other two models.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 40, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223900889, 'comment_body': 'Hi @seanlip need a little help here. How can I run the queries manually on the local server. I am bit confused here. The documentation you linked suggests to run the queries which will create a index.yaml file automatically. Should I manually type-in the values? ', 'comment_created': datetime.datetime(2023, 6, 9, 6, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1223973669, 'comment_body': 'https://github.com/oppia/oppia/wiki/Debugging-datastore-locally might be useful. You can make queries from there.', 'comment_created': datetime.datetime(2023, 6, 9, 7, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223977608, 'comment_body': 'I have covered and tested every sort and filter we have implemented. Also every branch in the code. I am little confused here wdym by a separete test, do you mean we should create a different test class?', 'comment_created': datetime.datetime(2023, 6, 9, 7, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1223981973, 'comment_body': ""I think, the current test cases covers both sorting and filtering and we need to ensure that both works coherently as well. Separating the tests won't ensure that sorting and filtering works fine even when applied together. Also the same question as above by splitting you mean to split in two different test classes?"", 'comment_created': datetime.datetime(2023, 6, 9, 8, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224098333, 'comment_body': 'I would suggest having different test methods (not classes) -- one for testing sorting, one for testing filtering, and one for testing the combo. Also, name your test methods clearly -- not just ""test_method_name"". See https://github.com/oppia/oppia/wiki/Backend-tests#guidelines-for-writing-good-tests for guidance.', 'comment_created': datetime.datetime(2023, 6, 9, 9, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1224098886, 'comment_body': 'Similar to the other comment I left, I would suggest having different test methods (not classes) -- one for testing sorting, one for testing filtering, and one for testing the combo. Also, name your test methods clearly -- not just ""test_method_name"". See https://github.com/oppia/oppia/wiki/Backend-tests#guidelines-for-writing-good-tests for guidance.\r\n\r\nIt\'s generally not a good idea to have N different behavioural tests in a single method. If some issue causes multiple tests in that method to fail then it takes multiple test runs to root out all the errors. With different test methods you end up having better isolation and can see all the failures at once.', 'comment_created': datetime.datetime(2023, 6, 9, 9, 45, 50, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1224575546, 'comment_body': 'Made the sort_choices more strict below PTAL.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224577730, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224578362, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2023, 6, 9, 17, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224578583, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224578769, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224579005, 'comment_body': 'Added docstring.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224579186, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224580326, 'comment_body': 'Done. Will keep in mind from next time.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224581285, 'comment_body': 'Made new class **SortChoice** to act as restriction for sort_by', 'comment_created': datetime.datetime(2023, 6, 9, 17, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224582488, 'comment_body': 'Yeah you are correct, it is not related to user but passed down from frontend to fetch contributor stats.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 38, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224582864, 'comment_body': 'Updated. PTAL.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 38, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224583231, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224583615, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 39, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224583962, 'comment_body': 'Updated. PTAL.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224584653, 'comment_body': 'I added the reasoning and conclusion before reference link. PTAL', 'comment_created': datetime.datetime(2023, 6, 9, 17, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224585230, 'comment_body': 'I am trying this might take some time, I figuring out something that will help me through out the project and not just for this case.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224585609, 'comment_body': 'Yeah sg. Changed it to 500.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224585865, 'comment_body': ""It shouldn't be incrementing here. Thanks"", 'comment_created': datetime.datetime(2023, 6, 9, 17, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224586350, 'comment_body': 'It was actually supposed to be ""Model contains data corresponding to a user: contributor_id."". Updated', 'comment_created': datetime.datetime(2023, 6, 9, 17, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224586628, 'comment_body': 'Missed while editing. Updaed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 42, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224586996, 'comment_body': 'Yeah, we could call it language code. Updated', 'comment_created': datetime.datetime(2023, 6, 9, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224587106, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 43, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224587284, 'comment_body': 'PTAL again. Thanks', 'comment_created': datetime.datetime(2023, 6, 9, 17, 43, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224587490, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224587841, 'comment_body': 'Okay. Changed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 44, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224588208, 'comment_body': 'I assumed we do this for every model. Changed it.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224588306, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224588498, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224589249, 'comment_body': 'Updated best upto my knowledge. PTAL. Thanks', 'comment_created': datetime.datetime(2023, 6, 9, 17, 45, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224590001, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224590516, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224590903, 'comment_body': 'Updated tests. PTAL again. Thanks.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224591332, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2023, 6, 9, 17, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224592011, 'comment_body': 'I have splitted tests into four tests. \r\nsorting\r\nfiltering\r\nsorting and filtering\r\npagination.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224592762, 'comment_body': ""Okay, changed but had doubt why shouldn't we have logic in tests and rather hardcode things only?"", 'comment_created': datetime.datetime(2023, 6, 9, 17, 49, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224593425, 'comment_body': 'PTAL at new tests.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224593630, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224594553, 'comment_body': 'Thanks. That helps.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224597294, 'comment_body': 'There are a lot of online posts on this (search for ""avoid logic in tests""). Here\'s a random example http://www.everydayunittesting.com/2016/08/unit-test-anti-patterns-logic-in-tests.html but you can find many more with a web search.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 55, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1224605773, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 18, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224607097, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 6, 9, 18, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225056418, 'comment_body': 'Woah. Why is this making it into the PR?\r\n\r\nPlease always check your ""Files Changed"" tab before requesting any reviews, in order to make sure the changes you submit are the ones you actually want to get merged. This is good PR discipline.', 'comment_created': datetime.datetime(2023, 6, 10, 3, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225057269, 'comment_body': 'Nit: Why the weird line break and indentation? (You can put ""structure:"" on the previous line and then have the rest on the next line.)', 'comment_created': datetime.datetime(2023, 6, 10, 3, 50, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225058422, 'comment_body': '...language_code and contributor_id.', 'comment_created': datetime.datetime(2023, 6, 10, 3, 52, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225061385, 'comment_body': 'Look at how other enums are done in the codebase, e.g. classes subclassing enum.Enum. Maybe you could use the same pattern.\r\n\r\nAlso the class name should be plural.', 'comment_created': datetime.datetime(2023, 6, 10, 3, 53, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225091138, 'comment_body': ""Sorry, this happened previously as well. I'll just remove it but any idea how this is automatically getting attached?"", 'comment_created': datetime.datetime(2023, 6, 10, 4, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225092119, 'comment_body': 'Actually we were exceeding line lenght therefore I did line break before structure.', 'comment_created': datetime.datetime(2023, 6, 10, 4, 44, 19, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225153743, 'comment_body': 'Hi @seanlip I tried running the queries manually but every index was not generated in index.yaml. I have added the indexes with all possible queries in our models. PTAL.', 'comment_created': datetime.datetime(2023, 6, 10, 6, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225157374, 'comment_body': 'Okay. thanks.', 'comment_created': datetime.datetime(2023, 6, 10, 6, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225157487, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2023, 6, 10, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225157549, 'comment_body': 'Changed', 'comment_created': datetime.datetime(2023, 6, 10, 6, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225424565, 'comment_body': ""Could you please point me to the backend test? There should still be one to ensure that the constants defined here and the ones defined in the backend don't diverge."", 'comment_created': datetime.datetime(2023, 6, 10, 15, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225425660, 'comment_body': 'Try checking with @kevintab95 -- per https://github.com/oppia/oppia/blame/develop/assets/constants.ts#L7044 he merged that change 5 days ago.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 31, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225426486, 'comment_body': 'End docstrings with a period, just like elsewhere in the codebase.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 33, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225426907, 'comment_body': ""Doesn't seem changed to me."", 'comment_created': datetime.datetime(2023, 6, 10, 15, 34, 21, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225427352, 'comment_body': 'stats --> stats for.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225428115, 'comment_body': ""I keep saying this again and again, and it doesn't seem to get addressed. To quote a previous review:\r\n\r\n> Also, as mentioned in a previous comment, the mapping should be directly from SORT_KEY_INCREASING_LAST_ACTIVITY and you should be passing the sort keys to this function, rather than the human-readable values."", 'comment_created': datetime.datetime(2023, 6, 10, 15, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225428573, 'comment_body': '""below"" is ambiguous since it can refer to what\'s just ""below"" this comment. This is why my original suggestion included ""separately"".', 'comment_created': datetime.datetime(2023, 6, 10, 15, 37, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225428996, 'comment_body': ""That's a bit odd, usually we have the opposite problem (i.e. people seeing unexpected changes in index.yaml). Maybe that will trigger when you run the devserver once you've hooked everything up, but for now it's also fine to populate them manually. Thanks."", 'comment_created': datetime.datetime(2023, 6, 10, 15, 38, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225429743, 'comment_body': 'Same notes as before, for this and the comment below. Ditto for other classes.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 39, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225430148, 'comment_body': 'Add a colon after ""here"" (ditto elsewhere).', 'comment_created': datetime.datetime(2023, 6, 10, 15, 39, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225431100, 'comment_body': ""This sentence doesn't scan, and I commented on this before.\r\n\r\nWhen addressing a comment, please check other cases which might need to be fixed similarly; don't expect the reviewer to point all those cases out for you. (They often will, to an extent, but you should be doing the final audit.)"", 'comment_created': datetime.datetime(2023, 6, 10, 15, 41, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225433116, 'comment_body': 'As mentioned in a previous review, this should be 4 spaces indented from the previous line. It is not.\r\n\r\nDitto elsewhere in several other places.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 45, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225433338, 'comment_body': 'for --> with. Ditto for the others.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225433716, 'comment_body': 'Deindent this by 4 to match the opening {', 'comment_created': datetime.datetime(2023, 6, 10, 15, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225434114, 'comment_body': 'This should be indented by 4 from the previous line.\r\n\r\nIn general your indentation in this PR is somewhat ""off"" -- there seem to be a number of such errors. Please double-check all of it.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225478340, 'comment_body': 'Hi @kshitij01042002, few questions that will help me debug this:\n1. When these files were committed, was the local server still active in the background?\n2. If not, what method did you use to shut down the server?\n\nThanks!', 'comment_created': datetime.datetime(2023, 6, 10, 17, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1225710098, 'comment_body': 'Where should this backend test go?', 'comment_created': datetime.datetime(2023, 6, 11, 5, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225710725, 'comment_body': 'I am confused here about how you want flow to be. If you can see on line 2287 in am passing the sort keys to this function. Then it is checking on the basis of sort_key which sort query is appropriate.', 'comment_created': datetime.datetime(2023, 6, 11, 5, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225710908, 'comment_body': 'Actually I tested it on the devserver and ran queries, some indexes were generated for that matter but added the missed ones.', 'comment_created': datetime.datetime(2023, 6, 11, 5, 22, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225714377, 'comment_body': ""If you're not sure about something, please feel free to ask for clarification rather than ignoring the comment.\r\n\r\nWhat I am saying is that this dict should be:\r\n\r\n```\r\nsort_options_dict = {\r\n     SortChoices.SORT_KEY_INCREASING_LAST_ACTIVITY.value: -cls.last_contribution_date,\r\n     SortChoices.SORT_KEY_DECREASING_LAST_ACTIVITY.value: cls.last_contribution_date,\r\n     ...\r\n}\r\n```\r\n\r\nrather than what you have. Make sure that the input args and tests match this understanding as well. There should be no need to reference constants.ts."", 'comment_created': datetime.datetime(2023, 6, 11, 5, 46, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225714540, 'comment_body': 'I would put it in the test file associated with the backend file which defines those constants. In this case they would go in core/storage/suggestions/gae_models_test.py.', 'comment_created': datetime.datetime(2023, 6, 11, 5, 47, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225720640, 'comment_body': 'So do we need to define values in constants.ts, should I remove those values? Or we might need them while building frontend?', 'comment_created': datetime.datetime(2023, 6, 11, 6, 20, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225722660, 'comment_body': '1. No the local server was not running while commiting these changes.\r\n2. I usually shutdown the server with ctrl+c, so did this time.\r\n\r\nFYI these changes occured when I did a commit on my local branch.\r\nThanks @kevintab95. ', 'comment_created': datetime.datetime(2023, 6, 11, 6, 32, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735412, 'comment_body': 'Added it there. PTAL.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735533, 'comment_body': 'Done. Also added some extra information for a new developer who might work on this in future,', 'comment_created': datetime.datetime(2023, 6, 11, 7, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735649, 'comment_body': 'Sorry, missed it. Changed this as well as other with similarities.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 36, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735697, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735851, 'comment_body': 'Thanks @seanlip PTAL at the new changes if that looks good? Fow now I have kept the changes in the constants file as well. Thinking we might require it in future while building frontend.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 38, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735891, 'comment_body': 'Changed. PTAL.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 38, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735989, 'comment_body': 'PTAL again. Thanks', 'comment_created': datetime.datetime(2023, 6, 11, 7, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225736003, 'comment_body': 'Okay.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225736108, 'comment_body': 'Changed this as well as other docstrings in this file to be accurate, Thanks.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225736241, 'comment_body': 'I indented it after ""="". Thanks for suggestio. Changed it.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225736262, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225736358, 'comment_body': 'Okay.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 41, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225846671, 'comment_body': 'Check the other way round, too -- anything in that constants file must be in the enum.\r\n\r\nI suggest getting the keys of each, sorting them, and making sure those lists are equal.', 'comment_created': datetime.datetime(2023, 6, 11, 15, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225856784, 'comment_body': ""You don't need this any more, right?"", 'comment_created': datetime.datetime(2023, 6, 11, 16, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225856821, 'comment_body': 'Just do `dict_values = constants.CD_ADMIN_STATS_SORT_OPTIONS.keys()` at the outset.', 'comment_created': datetime.datetime(2023, 6, 11, 16, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1226447952, 'comment_body': ""If we do this, we can't use the sort() function. I think we could keep the existing method as well."", 'comment_created': datetime.datetime(2023, 6, 12, 10, 36, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1226480132, 'comment_body': ""I don't understand, why can't you use the sort() function? Don't you end up with a list of strings either way (perhaps after casting with list())?"", 'comment_created': datetime.datetime(2023, 6, 12, 11, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1226493640, 'comment_body': 'Hi @kevintab95 these changes always takes place whenever I push changes to github', 'comment_created': datetime.datetime(2023, 6, 12, 11, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1226501430, 'comment_body': 'Casting it into a list works. Thanks.', 'comment_created': datetime.datetime(2023, 6, 12, 11, 21, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1226502314, 'comment_body': ""Yeah. it doesn't make sense to check this now."", 'comment_created': datetime.datetime(2023, 6, 12, 11, 21, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1226856291, 'comment_body': 'Why do you need dict_values = dict_values here?', 'comment_created': datetime.datetime(2023, 6, 12, 15, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1226862308, 'comment_body': ""Ahhh. So sorry for that. I'll just change that."", 'comment_created': datetime.datetime(2023, 6, 12, 15, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1227190611, 'comment_body': ""Hi @kshitij01042002, I tried this out but haven't been able to reproduce on my machine. The file constants.ts seems to be reset to the original state after I shutdown the server using the ctrl + c method. The changes however do show up if the server was not shutdown. Could you share the logs on the console corresponding to the shutdown process? This might help us understand what is happening."", 'comment_created': datetime.datetime(2023, 6, 12, 20, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1227196383, 'comment_body': 'Another thing I would suggest trying is, start the server in prod mode (i.e. use the ""--prod_env"" flag), wait for it to open up the splash page and then stop the server. Execute ""git status"" and see if there are any changes to the ""DEV_MODE"" constant in constants.ts -- prod mode also involves modifying the constants file temporarily. If there are changes, it probably means there is some issue with shutting down the server and we will need to investigate that.', 'comment_created': datetime.datetime(2023, 6, 12, 20, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1227205255, 'comment_body': ""Also, a note for the future, after you have responded to comment(s) and would like someone to take a look at it, please remember to assign them to the PR to avoid delays. The assignee field needs to reflect the individuals who need to take action on the PR. I almost missed this because I wasn't assigned."", 'comment_created': datetime.datetime(2023, 6, 12, 20, 25, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1227539161, 'comment_body': ""Hi @kevintab95 I tried to run the server in prod mode and was exited with an error:-\r\n![image](https://github.com/oppia/oppia/assets/91470808/1a00ba74-6176-4315-9013-388042ee07b9)\r\n\r\n![image](https://github.com/oppia/oppia/assets/91470808/5cb6a6df-8f5e-4813-9ffa-81c5b380cbe3)\r\n\r\nAlso after doing this there were changes in index.yaml file and constants.ts file which wasn't reverted.\r\n\r\nWhen I start the server in dev mode, there were changes in constants.ts but on shutting down the server the changes were reverted."", 'comment_created': datetime.datetime(2023, 6, 13, 5, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1228389225, 'comment_body': 'What changes were in the constants file when the server stopped -- when run in prod mode?', 'comment_created': datetime.datetime(2023, 6, 13, 16, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df98b046abd9b3c267937e264bb49f28ede038ef', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '792881d49633c9fed987741042ec72aec57c3f89', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95410efb664c48ab26027a1c3aff3089b5fd4a15', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90aaa1c503395f5ee1ddae47600bf7eb0e744130', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09d2e1ade153aa91b5f4ca37e48d612b28a9e18e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85f1e3af0fa8706019f19c11ff0335cd3eba538a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9744fe146a69e9808fad23ead341423d88507a02', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a74d8a7dacef4236c5e47c1c9b9c3469fc027df4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74d0d1cbc0d25bbf5695b216931babdb5c73b0db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '197e74484e6dcd19efa81a6c854093d94b0c5748', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'accbf31e2fdd74bbdb73564ee25e23b94bbbd0d4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5d0a539bfffe3016eb77f516fd7263aa824e355', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af650dc7ad337114ff96c16ced75ea4db1ecad6b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db01e30d90553104e2de2306af6d020002001632', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df438c620e953c0917687eba0f8f177d2ec36ee8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fafc8df0d4292e9705c73425463e9ac41f7aa8bd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71d85e0e48d50b9734ce0d56702f888d8b47c23f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95aa11082a66df8a371b7a44d67ce19fe51e53ad', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '032c4220234ebb740adc5ed82edcea26fc727b21', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5992bf4ba38ecf9f128e58b2aafcb94eeffc1ae7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e429a38bd4fd491d86f9af892e5a7b0811bdac5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef6b4e02f2bb60451ea8429bdcd997ba2eda563e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2487641b60f2f6089facf6454ae52e4996044a3b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0b147fedf058c7aa537bac627c40584681b295c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6c0ecde3c6e618e48d1a0f8742d2419f0c9d747', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5269976255506c1191576a9296fcaa71feed958', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74f225fac241ae239253908a85daddcaa1d64c96', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '256082d973a7bd4ebf3d370a861332be25020af4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a104d9eb0d5278a269c6a8673cf83c3a8359b685', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '857ce9f457064ecb30c8b503fcd0b82bfc0b6b71', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10fe3a2b0f16b3733a4d066f5d7f76aac4ada6ce', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29a517af96cee6655651c97e3760f133e1988cf7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d0d7bfa17040f1187590ff8cbec1fd0b6a56ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '114d5e1140478bcc123c7fa70e9b4587b83b7f8d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd44dfb722b65f9f7eedad0ad33246052015d709', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c0840fa2e6c0857f90e8cf3514a11aa5ccae193', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6edff6b1c55367efc38a5dec71f86cb160b72a0a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae50e3a421e4c4ed1440be8d2e906f3bd9c427dc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20bf08d30574dea3680a9c9d6d42abfaadba5192', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0595d4559d44a753f719d4c6c5ce6c8a93a89ec2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6afdb850abe37b1c998dd367ae17403584a31f04', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '917151463e2d131847a15115ff835a8f8310ed55', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '009e1f9b73a2d4faffb4736b0d1cc8c0385285cd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd657d0ba255463d4e45cf01c8379eb3ef1f7ebe9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0ba94e6785649d179e06e58ff9de2aecab689c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bd1be0529247e9cdece52150e4c2ff1e9c8ddd5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c89d2572c9efaa1cfdfd23b6645a392aee450b4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7cb65ef91b3e0c87267ee5b81572a93dce65eb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9637efa12ffb546ed28bf646e03ab5751d4bec2d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e024ec6e4d8749f712b60b17c4b8f14259a6224', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5854b33541a37caa36795680f280ad1cc693820c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98f953ebc51e844f24ab17dc9b1843d8f4a55c8c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ee68c3790dfa3e876b5534105ac5307b5d09a11', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9ca730989363833bf978298c66d43d5f97d6923', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2ebb77d22da94fb9f020e265f5a8cfa1e2e250', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1387080193,Introduced Domain Objects Needed for Contributor Admin Dashboard. GSoC M1.3,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes part of #17440 
2. This PR does the following: Introduced Domain objects for new storage models. PR introducing new storage models.
https://github.com/oppia/oppia/pull/18340

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,18358,https://api.github.com/repos/oppia/oppia/pulls/18358,https://github.com/oppia/oppia/pull/18358,closed,615,0,2,37,10,11,1,1,[{'name': 'PR: LGTM'}],2023-06-10 09:06:50+00:00,2023-06-14 23:12:28+00:00,396338.0,"4 days, 14:05:38","[{'comment_id': 1228517215, 'comment_body': ""It looks like the `to_dict` method is the method under test here, so let's include that in the test name. Ditto below.\r\n\r\n```suggestion\r\n    def test_to_dict_returns_dict(self) -> None:\r\n```"", 'comment_created': datetime.datetime(2023, 6, 13, 18, 9, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1228524422, 'comment_body': 'Do we even need the non-frontend `to_dict` methods? Where/when are we planning to use them other then in tests?', 'comment_created': datetime.datetime(2023, 6, 13, 18, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1228526073, 'comment_body': 'If we do need both the `to_dict` and `to_frontend_dict` methods, then might want to call `to_dict` here and update the values that need modification since most of the fields remain the same.', 'comment_created': datetime.datetime(2023, 6, 13, 18, 17, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1228529991, 'comment_body': 'Nit: For such a simple method like this and since we already mentioned the return value in the docstring summary, we can probably simplify the return description to eliminate redundancy, e.g.\r\n\r\n```suggestion\r\n            dict. The dict representation.\r\n```\r\n\r\nDitto below.', 'comment_created': datetime.datetime(2023, 6, 13, 18, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1229022884, 'comment_body': 'I added these methods since we might require them while editing services that updates the models or in beam jobs maybe. Not sure tho.', 'comment_created': datetime.datetime(2023, 6, 14, 5, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1229072736, 'comment_body': 'We are changing the value and type of `last_contribution_date`(date) to `last_contributed_in_days`(int). Since we cannot delete a key from a TypedDict, we cannot use to_dict here and modify the values.', 'comment_created': datetime.datetime(2023, 6, 14, 6, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1229075681, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 14, 6, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1229076020, 'comment_body': 'Sounds reasonable. Changed.', 'comment_created': datetime.datetime(2023, 6, 14, 6, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1229823994, 'comment_body': ""I don't really foresee us needing the `to_dict` methods in the backend, since we should be operating on the domain objects in the backend. I would just remove them. Worst case you can always add them back later, but otherwise it will be dead code."", 'comment_created': datetime.datetime(2023, 6, 14, 15, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1229828314, 'comment_body': ""Ah, I see. It shouldn't be a problem anymore anyway since we should just remove the `to_dict` methods."", 'comment_created': datetime.datetime(2023, 6, 14, 15, 39, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1229897349, 'comment_body': 'Okay. I have removed the to_dict method, PTAL. Thanks', 'comment_created': datetime.datetime(2023, 6, 14, 16, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d66863ebf6082e0528d4f84b9db7b4188406c1b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7e636d6e2b355bb7f580fdfb61562d68a8d2247', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd55e1e9faa7da03f4b23020102994d483c2aef29', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d76f9df85ba1b9494d0fc70b64454f17e41cbc6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0eac5e94ff3532ec5898f0b57c2f4759e8353956', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ca37e64ddff3379c1012e60696e051a100510bb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7845210e8cbfd76a5548e269e2a329d7757f6c08', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eecd471498692b92723ae0e67bd6fe23a92859a5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27b463da3d2632fa5cf8c8fe87c951ed24260a68', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '315ba40a9c22595f8493d1f0dfe4ada97c4d222f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df9489cc562cd5c14a56dd4e89da02b418eb927d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dae9fe2f8b99b49e71263b4c9f81a08f85586531', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1d82b5e163811d73a2950fd8f9c535ae6a05256', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '187d3f57408e9e94a00a37c3bce926e76d44cae1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2ebb7e2a7b4a2768e7d72b0b44df17a9206296f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac5f19d5061056cc00a618181cd2fc82a412158', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07f0e3aae72490d160c826a339320ba9b34279a9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28921b18ac6b787ce632e85852ead4b6a3909b9a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1424608454,Beam Job for populating new models used in Contributor Admin Dashboard: GSoC M1.4 ,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

This PR is the duplicate of #18406 which is already been approved. #18406 was reverted because it was merged before testing on the backup server.

Server Admin handling this @JayVivarekar .

Testing instruction doc:-
https://docs.google.com/document/d/1O99A0-k0e43vwHSbbMLsWFnblKUcnZpqI0G1lQwDCZM/edit.



1. This fixes part of #17440 .
2. This PR does the following: Beam Job for populating new models used in contributor admin dashboard using existing stats models and general suggestion models.

This beam Job uses below mentioned models:-

- GeneralSuggestionModel
- TranslationContributionStatsModel
- TranslationReviewStatsModel
- QuestionContributionStatsModel
- QuestionReviewStatsModel

Above stats models are also keyed on topic but the stats we are planning to display in contributor admin dashboard isn't related to topics so we have need to introduce these new storage models. The discussion about this and the decision table can be found in the proposal linked above.

Below mentioned models will be populated:-
- TranslationSubmitterTotalContributionStatsModel
- TranslationReviewerTotalContributionStatsModel
- QuestionSubmitterTotalContributionStatsModel
- QuestionReviewerTotalContributionStatsModel

All models are present in core/storage/suggestion/gae_models.py

The plan used to write this beam job is documented [here](https://docs.google.com/document/d/19lCEYQUgV7_DwIK_0rz3zslRHX2qKOHn-t9Twpi0qu0/edit#heading=h.q8pchv9rnpz8).
The need for these models are also documented in the same document [GSoC Proposal](https://docs.google.com/document/d/19lCEYQUgV7_DwIK_0rz3zslRHX2qKOHn-t9Twpi0qu0/edit)


New models populated were introduced in https://github.com/oppia/oppia/pull/18340 PR.


After initial load is populated using the beam Job, new services to update these models will be introduced in the PR GSoC M1.5 i.e. the PR after this.


## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

Same data is used in writing unit tests as well. So if you want to have a look at the data you can look at test file of the beam job.

[Screencast from 29-07-23 10:19:40 AM IST.webm](https://github.com/oppia/oppia/assets/91470808/9c567ecc-04f1-4e8e-9d7c-9970a1f340d6)




<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,18597,https://api.github.com/repos/oppia/oppia/pulls/18597,https://github.com/oppia/oppia/pull/18597,closed,1831,0,5,103,30,4,3,1,"[{'name': 'PR: LGTM'}, {'name': 'PR: Affects datastore layer'}, {'name': ""PR: don't merge - STALE BUILD""}]",2023-07-07 12:29:27+00:00,2023-09-20 07:52:40+00:00,6463393.0,"74 days, 19:23:13","[{'comment_id': 1283672104, 'comment_body': 'Rather checking for empty topic ID we should validate whether the topic ID is correct. Also we should do this for all 4 types of stats.', 'comment_created': datetime.datetime(2023, 8, 3, 20, 13, 30, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1288226241, 'comment_body': ""Just need some clarifications here. If the topic is deleted should we consider counts of those topics or should we modify them as well. (Here by counts I mean counts of submitted/rejected and so on contributions).\r\n\r\nI think even if the topic is deleted we shouldn't modify it's count. Cause the stats represents potentiality of a user, if a user has contributed too much to a single topic and then we decide to remove that topic, his stats will eventually look bad even though he did good amount of contribution. Not sure tho :)\r\n\r\ncc: @seanlip @sagangwee @qinghaoyang ."", 'comment_created': datetime.datetime(2023, 8, 9, 9, 41, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1288941535, 'comment_body': ""Hm, it's a good question. I think it's probably fine to only limit to valid topics. It will be very rare (if ever) that we delete a topic, and for stats stuff we do need a clear way to regenerate stats from scratch at any time. So I suggest keeping it simple and only including existing topics. (I assume we can change this in the future and regenerate if needed.)\r\n\r\nJust my 2c."", 'comment_created': datetime.datetime(2023, 8, 9, 17, 25, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1289143821, 'comment_body': ""I agree with Sean's reasoning."", 'comment_created': datetime.datetime(2023, 8, 9, 20, 12, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5757c0499f74e061065f91371ad1d485fd2a7f60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69938cd963886f1abe9277bceb79984f5f108404', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2189b7d99351154842c39939c7872cc6b7be4f31', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c970375ea3feb164c087d57e6e11198926c282ba', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a70b2c4d9e5097b117d07df7b804edb6dfc709a9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5e527cee35c4af321989a58ef32163ea2cdf264', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d1862e4de132339166d86b404e7e310601148bd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a311d791b62bc613073a0bc8bc88e732ed8ee7c4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e95b057588cd5af6e30679933896b4e7ac01cfa', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e3e07d4150e2307d3f22a56b388cfb0737b1ff8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9afa6b5e30c32d7ab2e258fa7ae35a1664ab355', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d9d269b25fc42ee6ec6a0e37fe3edf37de4a74f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee88429bf1bbf8ee8347e65efbca426a92ea54a8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f98dccc9a43514fb5aee6b1329aa0c69d95fb53', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71b6d8fdf4d94e2ace48f54d8282455a62bf8b39', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bc96d47ae7c42c9b744da62f690cfe3bb0bef1e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cd9e88f47c30b665b50134cd21838c00ad09d9d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a14f6c4afca0b4864f54c9edbb53384444ec6adb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '745f5a732cd48ee5313601a0418974986f974551', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb5ab00c9d23bf213e66db6f8e8671bb589efc5e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a9a12ef8530e1e35f0dd17c1b284a50f38e7886', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd74f066694d4deb4c4b8d2e655a85df8d659c890', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '695e0218ae4724547f57479f0f247c52ff0caa26', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f1b5c8408c9ca47caf1a66faf2e465f324312e2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d87a052fa0c8c960787683dcdcbe955930f3639', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'addca9207944bb2d9d118928f1c0a4fcf0dc4afc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e24c14749f26ec5d05e429f6d60ed7eff9d90d2f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f1c105e0fef2c590a4155ba751b435542af01a1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87759a10f9f7d04fc5810bb8dec3f797fbddb277', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4537b58f93714645b3bc8c0db5c229c3b7e8b9d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03c3c4e0041574f3f2b6e3c1f0c01fbe20ee468b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f31867494ee248d5bbcf6f51e3ea8c4a6ee69e27', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5b47290752f0fdb63f421908a0e0302348305ab', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '455d38369ca3b6bb59ce088793b959f60cb6585d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56124a5267a21a20b0adfa487e539dc6dde98ef5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ebb13814605ce6b932a10de50d25c64aba80f5a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10b44372c7bfcf8c7e41addfd869d273716791c7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fc936b72d2a23ca6252301e32622287697a38c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e22be0041613ca04d16f36e41deb87bfb37ec0a0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '734b8c32e5a3082cc0174ba51fc9a2d46500f220', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5a9006f9f1978bf9ee59c3c4c61562ee1a7e208', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae918677d356ed696206f714cb40214c6b5e7bc1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4541330ed256a611e51afd333debdcdd75d7641e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eea087a3f925e1008204ad371b86ac870985112d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453289d6e0be161084bdb493ff9523170fcb55e1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1064d4a6277e59c30dd2078e18aea4432225ce5d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4c0941a487551e493ff50a344b12595ce75af80', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f548ef4cce2f4d27e54cf2443c760fe3664bc203', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5e6bb84ead2f80f79e2f83e017b435a059d42d7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fca50f1d79b4a88496ed908776ac2f41f4a4204', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a288a6b968159434974912728b578d884ce1f38', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cd54fed696ce8619f1177b39f46473a463ab811', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b7e64ee6b1050969df26699570756f58b0e1e4a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44edda1c85636a4cd3e6a197e1655731f106c5b2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '086ec532d356bee80373c2d01854302ed3f7b422', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8faa862f3db8c6d578839f747cacce399bb32dc1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce52e87ebf8a301bb838047635ad112c4d8afd43', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb1c5bbbba392e20234762709ca9f1ed57611f08', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fd26d9a5323dee94b2933fe6275d1c6d7878058', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94a65256844261ba6f837a4dc6c45e1672642216', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3cdbd799eeaf173efc08b3ca4b251ee914901b3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8b9404fbe17a39db5ad6ce17e971822b421f7f6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae93fdb44cbbd0e4ec0de52030a3f47f8ccf3bec', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3001aa974e5ec59c88d32a70f6d2e2cd26693ad0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dfb5c07f05130cb4c706b62a1ad0e234d84de24', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a69a6b073efcbe42427fd3cf4f236a74b3a8aa95', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9b9c4a23f0a1c21df3e5bea88a58557d83aaaf0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab108b4f790b4ee6b63a0568d6df8b8aa25a27e6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8424f77beca2e0b9fc707f343bdc7cf39865030', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6616370bdbe687884daf3a8b00501b39a52bb39f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1deb8554c77ee727f468efdd8e86d9ae5242d44', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c9d8d2dc4cbaec401d79a0aba351c62dd2c71d6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86ed89f3bc603811dca61e23d9f2effda09bd97b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '971666ed7ed0b256d50e357f23a6d7cafc8b89f8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '080e87542682182091fc1595a996d9af46c79a8a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa892d6c7c8b118b93c78771d5732fcae1725e07', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd59c5cdaf57fa8d556f0383709aa159c4f8f86c7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4dff161318263c875928f845ff6596836ded8ff', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99dbf217329b0c3de738bd3cb6434c7408a37f24', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ddf4dd98cea68b156369405b3122d0586959a9d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efb027f8f9e46e74f4343cda3a5676f16bc05fdf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecd49b8c42ce91ed046281ece340543171656523', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '785039b004012faa78adf4f98830bb08e3627279', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf583ca8a0c79cbc27ba59b7863efe07cf9bf710', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1411959737,Modified and implemented new backend services required for Contributor Admin Dashboard: GSoC M1.5,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes part of #17440 .
2. This PR does the following: Introduced new backend services required for new Contributor Admin Dashboard. 
  Modified existing services in suggestion_services.py to update the new models introduced in #18340 . The initial load of these models will be populated using beam job introdued in #18406 .

## Essential Checklist

- [x] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).


## Testing doc (for PRs with Beam jobs that modify production server data)

<!--
If this PR affects production server data, please follow
[these instructions](https://github.com/oppia/oppia/wiki/Testing-jobs-and-other-features-on-production#submitting-a-pr-with-a-new-job-or-feature-that-requires-third-party-api)
and link to the job request doc here.

Otherwise, please delete this section.
-->

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Never force push! If you do, your PR will be closed.
- Make sure your PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,18560,https://api.github.com/repos/oppia/oppia/pulls/18560,https://github.com/oppia/oppia/pull/18560,closed,2785,119,8,66,15,26,0,0,[],2023-06-28 16:16:47+00:00,2023-07-14 02:09:14+00:00,1331547.0,"15 days, 9:52:27","[{'comment_id': 1250256362, 'comment_body': '```suggestion\r\n""""""Tests the functions to get stats displayed in contributor Admin Dashboard.""""""\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 5, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'JayVivarekar', 'type': 'User'}, {'comment_id': 1250260864, 'comment_body': '```suggestion\r\n""""""Functions to get stats displayed in contributor Admin Dashboard.\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 5, 29, 34, tzinfo=datetime.timezone.utc), 'commenter': 'JayVivarekar', 'type': 'User'}, {'comment_id': 1251508723, 'comment_body': 'Why are these being removed? Here and below.', 'comment_created': datetime.datetime(2023, 7, 4, 5, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1251509207, 'comment_body': '```suggestion\r\n    Optional, Sequence, Set, Tuple, Union, cast, overload\r\n)\r\n```', 'comment_created': datetime.datetime(2023, 7, 4, 5, 42, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1251511355, 'comment_body': ""Why would you use another variable? Can't you directly use `translation_submitter_total_stats`? Ditto elsewhere"", 'comment_created': datetime.datetime(2023, 7, 4, 5, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1251512454, 'comment_body': ""Shouldn't we raise an exception if the model is not found? Ditto elsewhere."", 'comment_created': datetime.datetime(2023, 7, 4, 5, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1251519178, 'comment_body': ""If `translation_contribution_stat_model` is not `None` we don't need to perform these checks since we already do it while incrementing stats."", 'comment_created': datetime.datetime(2023, 7, 4, 5, 57, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1251520860, 'comment_body': ""Don't need to perform these checks when `question_submitter_total_stat_model` is not `None`"", 'comment_created': datetime.datetime(2023, 7, 4, 5, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1251522815, 'comment_body': 'Why 99? Can this be a constant somewhere?', 'comment_created': datetime.datetime(2023, 7, 4, 6, 0, 52, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1251530700, 'comment_body': ""Actually in PR #18358 on sagang's recommendation `to_dict` method was removed but I forget to delete the dict used. So this is basically dead code which isn't used anywhere."", 'comment_created': datetime.datetime(2023, 7, 4, 6, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251531976, 'comment_body': ""pylint didn't allowed this, I made these changes only because I wasn't able to push code."", 'comment_created': datetime.datetime(2023, 7, 4, 6, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251535025, 'comment_body': ""I guess we don't need to do this because we are calling this method only when the model exists. If model doesn't exist we create a new model in `update_translation_review_stats`"", 'comment_created': datetime.datetime(2023, 7, 4, 6, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251864616, 'comment_body': 'Yeah we can directly use that, updated.', 'comment_created': datetime.datetime(2023, 7, 4, 10, 54, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251866194, 'comment_body': 'Actually we need to do this is `translation_contribution_stat_model` is None or `translation_contribution_stat_model` is None so rather than doing it twice I got it out of the if condition.', 'comment_created': datetime.datetime(2023, 7, 4, 10, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251866496, 'comment_body': 'Ditto above,', 'comment_created': datetime.datetime(2023, 7, 4, 10, 56, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251866829, 'comment_body': 'Yeah that sounds good, Updated.', 'comment_created': datetime.datetime(2023, 7, 4, 10, 56, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1254767828, 'comment_body': '```suggestion\r\n    translation_reviewer_stats = [\r\n        get_translation_reviewer_total_stats_from_model(model)\r\n        for model in translation_reviewer_models\r\n    ]\r\n```', 'comment_created': datetime.datetime(2023, 7, 6, 18, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1254768096, 'comment_body': '```suggestion\r\n    question_submitter_stats = [\r\n        get_question_submitter_total_stats_from_model(model)\r\n        for model in question_submitter_models\r\n    ]\r\n```', 'comment_created': datetime.datetime(2023, 7, 6, 18, 8, 29, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1254769769, 'comment_body': '```suggestion\r\n    question_reviewer_stats = [\r\n        get_question_reviewer_total_stats_from_model(model)\r\n        for model in question_reviewer_models\r\n    ]\r\n```', 'comment_created': datetime.datetime(2023, 7, 6, 18, 10, 28, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1254777129, 'comment_body': '```suggestion\r\n        translation_submitter_total_stat = (\r\n            contributor_admin_dashboard_services\r\n            .get_translation_submitter_total_stats_from_model(\r\n                translation_submitter_total_stat_model\r\n             )\r\n         )\r\n```', 'comment_created': datetime.datetime(2023, 7, 6, 18, 18, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1254781461, 'comment_body': 'Can we have this as a constant? I see we have used the number 99 multiple times', 'comment_created': datetime.datetime(2023, 7, 6, 18, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1257504698, 'comment_body': 'Updated. PTAL.', 'comment_created': datetime.datetime(2023, 7, 9, 15, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1258602958, 'comment_body': 'Okay. Then could you please explain it from a comment? Ditto elsewhere.', 'comment_created': datetime.datetime(2023, 7, 10, 17, 1, 16, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1258610013, 'comment_body': ""I hope you mean `translation_contribution_stat_model` is None or `translation_submitter_total_stat_model` is None cases\r\n\r\nBut still don't we repeat this here https://github.com/kshitij01042002/oppia/blob/9b206e29e401987d6d078a0f00fc4b44a0dbb4d2/core/domain/suggestion_services.py#L3385C5-L3385C5\r\n\r\nCan we move to separate function for the case of `translation_contribution_stat_model` is None or `translation_submitter_total_stat_model` is None cases?"", 'comment_created': datetime.datetime(2023, 7, 10, 17, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1259172541, 'comment_body': ""1. Yeah you are right, we need to calculate even if one of the case is None.\r\n\r\n2. The code you have linked updates the existing model but if the model doesn't exist we have to calculate here.\r\n\r\n3. I didn't quite get what exactly you mean? "", 'comment_created': datetime.datetime(2023, 7, 11, 4, 42, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259183410, 'comment_body': 'Updated with a comment. PTAL.', 'comment_created': datetime.datetime(2023, 7, 11, 4, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5757c0499f74e061065f91371ad1d485fd2a7f60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d5423c9feb3a9f8bb53037c4c546ddda285327', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a9afaaf0c25c0cf299fd97262a7705e93d0880', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9162bc5559c9cc119ed8c4fe42de43d2d2461cb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4e28952837a90511cd0b9fa2024ce4e9c080ec8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a013f0ab5933afd5699fe6553ee3005a666a8e8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '899b3cdcfb0fd1798f3d9eb86a4ea72ea7b893a0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e1f216912df7a67561896348bc5f30b6ee39ef7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcaedce6e4411e2f58fb48a9b42f7ba75874e920', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fd21d4579583550552bcfba067c5d45b6844323', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63bec8309632098e8ec53cb0f0bc1313ef0b20fa', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66cadcbdf28f3f5bc45fe20a93dc644449f30e61', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5037836b027546bcadf19a68ecdf02fc710db995', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '604010d9a3b3c8cfd0bd6733b31442528d84cc3f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '191782182565364b70ccf2fe95cdabf851e4d98e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e39b94e6e797a8a77b23252afaeb4d8b94604fb0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34cb7129865f36e62af11cf1fbe78245a65b78b9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb0dfb8272405f0c2dec2396365808f77e07c8e0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef19df0b521d96c0d6dc5db1bb88b1d9e410c0bc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efa066106765c0e37095f71658f0abf1cd52f6ac', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b8412018ef9236958780dfc57742783fdb8c72c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3be2bba541f6f5e403e4c08043def3e01744ee8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ea7110e833126c6d67e352bbed0e271032da8ff', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8ac8334e6341cc7f235af1702b7b128baff0570', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf912800ac315e5b6e122506ae5a55cdd5793e6d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1f2eb58b21a684f1f82d36c4ac2ef5823a11f4a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '891822edd73891f086a6f36e137f754cf7b64729', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e606bfccfd0ed66b11b0b72d2353aa218568bb52', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eae1b605f6cd2327fc168722f012e33ddf951383', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '483bf1073597ef77b892467e8bea6bfbdea353c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbc9a89eee720cb56d280bc91c469a0d6c40b733', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8d37c53d3151338468e88c6341933f2ccf64be8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80c5ae10cd114e63483195f37da7808d795772a3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbebe36935d13fd200aef42e7d1fe4e94b9ebb3d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b206e29e401987d6d078a0f00fc4b44a0dbb4d2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98939a8c8270a42cec38697a22588da3451837eb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '287569083243a21ac13a69ac25be1dacd41a49d1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e68c0c56fa13dcaaf77e9740a1e28fac7c85297d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '610cc597760e8a9c9f28f29e9798eaebcaf43439', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd288e08dcc4f071ae81d98bd54db7c26c0da0d20', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b55955197d92ce623cc0c69664ed88dd1b8278ab', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd56d9044540f065865f23df711407c7527faae9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c038f4894fdc67f1382966888db113342959b6f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aea29365d803b7dde08c68024536dc959f8e58c4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2e962627399920f401d1579b5f53c19b6f54315', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95826949630ad9868efcef634aaae908603e1bf5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c32f9886866ce6160c76cfba6b2d7584dafcf56e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1380147841,Introducing new storage models required for Contributor Admin Dashboard: GSoC M1.2,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR introduces storage model changes required for #17440 
2. This PR does the following: Added four new storage models to store the stats required to be displayed in contributor admin dashboard. 
fetch_page is a pagination function implemented so that we can use it in future while building frontend. It supports pagination, sorting and filtering. Test cases have been added for each unique condition.
The reasoning for introducing the models and more information about the models can be found at [GSoC Proposal (2023) -- 2.1 Contributor Dashboard Admin Stats Table (Kshitij Patil)](https://docs.google.com/document/d/19lCEYQUgV7_DwIK_0rz3zslRHX2qKOHn-t9Twpi0qu0/edit)

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x]  The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

If the changes in your PRs are autogenerated via a script and you cannot provide proof
for the changes then please leave a comment ""No proof of changes needed because {{Reason}}""
and remove all the sections below.
-->

Proof that all the test cases are covered

![Screenshot from 2023-06-05 19-40-45](https://github.com/oppia/oppia/assets/91470808/ef9bce58-e09e-4d5a-bb16-d3c3c50d7b8a)


<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- If you need a review or an answer to a question, and don't have permissions to assign people, **leave a comment** like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL"". Oppiabot will help assign that person for you.
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
",True,18340,https://api.github.com/repos/oppia/oppia/pulls/18340,https://github.com/oppia/oppia/pull/18340,closed,5011,7,6,73,25,176,2,2,"[{'name': 'PR: LGTM'}, {'name': 'PR: Affects datastore layer'}]",2023-06-06 04:30:45+00:00,2023-06-13 18:22:39+00:00,654714.0,"7 days, 13:51:54","[{'comment_id': 1220087794, 'comment_body': 'Perhaps you should capitalize Submitted and Reviewed (in 4 places below) as well.', 'comment_created': datetime.datetime(2023, 6, 6, 18, 1, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220088429, 'comment_body': 'cause --> because', 'comment_created': datetime.datetime(2023, 6, 6, 18, 1, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220088983, 'comment_body': 'cause --> because', 'comment_created': datetime.datetime(2023, 6, 6, 18, 2, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220097825, 'comment_body': 'translation --> translations', 'comment_created': datetime.datetime(2023, 6, 6, 18, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220101808, 'comment_body': ""This seems indirect, can't you just pass 'IncreasingLastActivity' etc. as the sort_by ? You should use IDs for these things rather than displayable names, since the former are stable and the latter are changeable.\r\n\r\nThen I would also suggest just making a dict mapping those IDs to the corresponding sort property and doing a dict lookup."", 'comment_created': datetime.datetime(2023, 6, 6, 18, 14, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220102186, 'comment_body': 'Deindent by 4 to match opening brace.', 'comment_created': datetime.datetime(2023, 6, 6, 18, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220102397, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2023, 6, 6, 18, 15, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220102607, 'comment_body': 'else raise Exception?', 'comment_created': datetime.datetime(2023, 6, 6, 18, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220103704, 'comment_body': 'Make this a named constant (or use an existing named constant), declare it at the top of the file, and use that constant throughout all the methods which need it.', 'comment_created': datetime.datetime(2023, 6, 6, 18, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220105008, 'comment_body': 'You can drop one of the parens at the end (and the corresponding close paren).', 'comment_created': datetime.datetime(2023, 6, 6, 18, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220106342, 'comment_body': ""You can't use a filter for this in the datastore query above?"", 'comment_created': datetime.datetime(2023, 6, 6, 18, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220108302, 'comment_body': 'Why not just `splitted_id[0]` (without the %s stuff)?', 'comment_created': datetime.datetime(2023, 6, 6, 18, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1220846787, 'comment_body': 'If None is passed, it will be set to -cls.recent_performance as default, as you can see on line 2203.', 'comment_created': datetime.datetime(2023, 6, 7, 4, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1220852699, 'comment_body': ""We can't because of the property of gae models that states: \r\n**The first sort property must be the same as the property to which an inequality filter is applied.** \r\nAs we are sorting on multiple metrics we have to go by this method to apply filter for last_activity.\r\n\r\nI have mentioned this on line 2233 as well, where we are writing sort query."", 'comment_created': datetime.datetime(2023, 6, 7, 5, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221849661, 'comment_body': ""I think you can make the comment in line 2233 more clear. Be specific about where the restriction comes from, provide a link, give the reader enough context on what you're trying to do and why it can't be done. Assume your reader has no knowledge of GAE query restrictions or this conversation.\r\n\r\nIt's fine for the comment to be multiple paragraphs long, as long as it's clear to any developer who reads it."", 'comment_created': datetime.datetime(2023, 6, 7, 16, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1221918037, 'comment_body': 'Changed it in the new commits.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221918241, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221918361, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 57, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221918473, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221918785, 'comment_body': 'Done,', 'comment_created': datetime.datetime(2023, 6, 7, 16, 58, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221918900, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 58, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221919889, 'comment_body': 'Made a new constant in the file NUM_MODELS_PER_FETCH', 'comment_created': datetime.datetime(2023, 6, 7, 16, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221920062, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 7, 16, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221920949, 'comment_body': 'Yeah, that sounds fine. Changed.', 'comment_created': datetime.datetime(2023, 6, 7, 17, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1221956976, 'comment_body': 'Added a new dict **sort_options_dict** . In future if we want to add or remove any sort propoerty we just have to modify that dict rather than tweaking the whole if-else ladder. Thanks for the suggestion.', 'comment_created': datetime.datetime(2023, 6, 7, 17, 37, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1222454609, 'comment_body': ""I have added a reference link to gae docs stating that error, where a new developer can easily understand why we didn't used the inequality filter with the sort query."", 'comment_created': datetime.datetime(2023, 6, 8, 5, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1222546985, 'comment_body': '```suggestion\r\n    ""IncreasingReviewedTranslations"": ""Lowest to Highest Reviewed Translations"",\r\n    ""DecreasingReviewedTranslations"": ""Highest to Lowest Reviewed Translations"",\r\n    ""IncreasingReviewedQuestions"": ""Lowest to Highest Reviewed Questions"",\r\n    ""DecreasingReviewedQuestions"": ""Highest to Lowest Reviewed Questions""\r\n```', 'comment_created': datetime.datetime(2023, 6, 8, 7, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lkbhitesh07', 'type': 'User'}, {'comment_id': 1222547282, 'comment_body': 'Revert this.', 'comment_created': datetime.datetime(2023, 6, 8, 7, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lkbhitesh07', 'type': 'User'}, {'comment_id': 1222625710, 'comment_body': 'Changed it and also the references to these changes. Thanks.', 'comment_created': datetime.datetime(2023, 6, 8, 8, 13, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1222626484, 'comment_body': ""Actually I didn't made this change. Tho I have reverted it, I am not sure how it was changed."", 'comment_created': datetime.datetime(2023, 6, 8, 8, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1223007829, 'comment_body': ""I advise that you don't call these statuses. This is going to confuse things. Instead you should use REVIEW_OUTCOME_ACCEPTED, REVIEW_OUTCOME_ACCEPTED_WITH_EDITS, etc. \r\n\r\nOtherwise, with what you have, it leads to questions about why STATUS_CHOICES doesn't include STATUS_ACCEPTED_WITH_EDITS etc."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 0, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223009754, 'comment_body': 'REVIEW_OUTCOME_CHOICES', 'comment_created': datetime.datetime(2023, 6, 8, 13, 1, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223012112, 'comment_body': ""This is not quite right, it doesn't match your implementation.\r\n\r\n`The ID of each model is formatted as [language_code].[contributor_id]`\r\n\r\nPlease make sure other docstrings are fully correct as well, otherwise we go through unnecessary review cycles."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223013431, 'comment_body': '...of the topics for which the contributor has at least one ...\r\n\r\nNote also that ""at least"" is two words. Please fix here and elsewhere.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223013882, 'comment_body': 'Add a space before /', 'comment_created': datetime.datetime(2023, 6, 8, 13, 4, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223015336, 'comment_body': 'Missing args and returns in docstring. Please fix here and elsewhere.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 5, 26, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223016114, 'comment_body': 'This docstring is wrong. Please proofread your docstrings.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223016388, 'comment_body': 'Nit: can be on the previous line.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223016768, 'comment_body': 'Specify the possible choices that are allowed, and use a more restrictive Python type that limits to those choices.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223017582, 'comment_body': 'You can move the start of this sentence to the end of the previous line.\r\n\r\nAlso I don\'t think this is correct? Isn\'t this the thing that the caller is passing in rather than some attribute of the user? I.e. ""List of topic IDs to fetch the contribution stats for."" or something like that? There is no specific user here, I think, so I\'m not sure what your docstring is referring to.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223018928, 'comment_body': ""I don't understand what this means. It might have the same problem as the previous one.\r\n\r\nAlso the variable name doesn't sound like an int. Perhaps num_days_since_last_activity or similar."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223019813, 'comment_body': 'The optional args should go at the end.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 9, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223020114, 'comment_body': 'The language code to get results for.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223022601, 'comment_body': 'The list of models which match the supplied language_code, topic_ids and last_activity filters, returned in the order specified by sort_by.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223024283, 'comment_body': 'The string value appear to be duplicated, so you should make them constants and put them at the top, e.g. SORT_KEY_INCREASING_LAST_ACTIVITY.\r\n\r\nAlso, as mentioned in a previous comment, the mapping should be directly from SORT_KEY_INCREASING_LAST_ACTIVITY and you should be passing the sort keys to this function, rather than the human-readable values.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223026390, 'comment_body': 'Add a conclusion at the end: This is why we are handling the last_activity inequality filter separately below.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223029057, 'comment_body': ""I think you can make NUM_MODELS_PER_FETCH larger, say 500. Otherwise you'll potentially end up fetching quite a lot of pages in the case where you'll need to retrieve all the results. It's better to have fewer queries."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223031134, 'comment_body': 'You will need to exercise this manually on your local server to generate the index.yaml file indexes needed to serve this query. https://cloud.google.com/appengine/docs/legacy/standard/python/config/indexref#creating_index_files', 'comment_created': datetime.datetime(2023, 6, 8, 13, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223032533, 'comment_body': 'You should have a backend test that verifies that the keys here match the constants defined in the backend file (see comment below). This will help catch errors if a developer changes the key in the future.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223037272, 'comment_body': 'Why are you incrementing in this case?', 'comment_created': datetime.datetime(2023, 6, 8, 13, 22, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223039463, 'comment_body': 'Missing args and returns.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223040356, 'comment_body': 'Same concerns as above, here and for other parts of this method.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223041551, 'comment_body': '`The ID of each model is simply: [contributor_id].`\r\n\r\n(There is only one ID for each model, so ""IDs"" is misleading.)', 'comment_created': datetime.datetime(2023, 6, 8, 13, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223043699, 'comment_body': 'Same concerns as above.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223046007, 'comment_body': ""I'm a bit confused by this. Why don't you just call it the language_code? The way it is written it sounds like some kind of ID."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223046552, 'comment_body': 'Why are you referring to topics here?', 'comment_created': datetime.datetime(2023, 6, 8, 13, 29, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223046728, 'comment_body': ""This sentence doesn't scan."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223048456, 'comment_body': 'Same question as above.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223048782, 'comment_body': 'Why do we need to do this? We only have one model for each user.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223049250, 'comment_body': ""Add space before '/'. Similarly elsewhere."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 31, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223050941, 'comment_body': 'Same comments as above, throughout this class.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223051640, 'comment_body': 'Indent by 4.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223052381, 'comment_body': 'All these args should be indented by 4.\r\n\r\nDitto below, in various places.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223053299, 'comment_body': 'Check len(sorted_results) and check sorted_results[1].id as well if it exists.\r\n\r\nDitto for other fetch_page() queries, do the test fully.\r\n\r\nYou should also be creating the data so that each sort produces a different result. You might need to check the second page of results as well for full confirmation. It is OK to make your page size larger when testing sort order, and have a separate test for checking pagination.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 35, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223053636, 'comment_body': 'This should be 4 spaces indented from the previous line.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223055662, 'comment_body': 'I suggest creating a separate test for filters since they are conceptually different from sorts.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 37, 7, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223058372, 'comment_body': ""You shouldn't have logic in tests. Just hardcode the expected data."", 'comment_created': datetime.datetime(2023, 6, 8, 13, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223059221, 'comment_body': 'Same notes as before re splitting filtering to a separate test. Also note that last_activity is misspelled below.\r\n\r\nDitto for the other two models.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 39, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223059600, 'comment_body': 'Same notes as before re not doing logic in tests. Ditto for the other two models.', 'comment_created': datetime.datetime(2023, 6, 8, 13, 40, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223900889, 'comment_body': 'Hi @seanlip need a little help here. How can I run the queries manually on the local server. I am bit confused here. The documentation you linked suggests to run the queries which will create a index.yaml file automatically. Should I manually type-in the values? ', 'comment_created': datetime.datetime(2023, 6, 9, 6, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1223973669, 'comment_body': 'https://github.com/oppia/oppia/wiki/Debugging-datastore-locally might be useful. You can make queries from there.', 'comment_created': datetime.datetime(2023, 6, 9, 7, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1223977608, 'comment_body': 'I have covered and tested every sort and filter we have implemented. Also every branch in the code. I am little confused here wdym by a separete test, do you mean we should create a different test class?', 'comment_created': datetime.datetime(2023, 6, 9, 7, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1223981973, 'comment_body': ""I think, the current test cases covers both sorting and filtering and we need to ensure that both works coherently as well. Separating the tests won't ensure that sorting and filtering works fine even when applied together. Also the same question as above by splitting you mean to split in two different test classes?"", 'comment_created': datetime.datetime(2023, 6, 9, 8, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224098333, 'comment_body': 'I would suggest having different test methods (not classes) -- one for testing sorting, one for testing filtering, and one for testing the combo. Also, name your test methods clearly -- not just ""test_method_name"". See https://github.com/oppia/oppia/wiki/Backend-tests#guidelines-for-writing-good-tests for guidance.', 'comment_created': datetime.datetime(2023, 6, 9, 9, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1224098886, 'comment_body': 'Similar to the other comment I left, I would suggest having different test methods (not classes) -- one for testing sorting, one for testing filtering, and one for testing the combo. Also, name your test methods clearly -- not just ""test_method_name"". See https://github.com/oppia/oppia/wiki/Backend-tests#guidelines-for-writing-good-tests for guidance.\r\n\r\nIt\'s generally not a good idea to have N different behavioural tests in a single method. If some issue causes multiple tests in that method to fail then it takes multiple test runs to root out all the errors. With different test methods you end up having better isolation and can see all the failures at once.', 'comment_created': datetime.datetime(2023, 6, 9, 9, 45, 50, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1224575546, 'comment_body': 'Made the sort_choices more strict below PTAL.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224577730, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224578362, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2023, 6, 9, 17, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224578583, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224578769, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224579005, 'comment_body': 'Added docstring.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224579186, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224580326, 'comment_body': 'Done. Will keep in mind from next time.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224581285, 'comment_body': 'Made new class **SortChoice** to act as restriction for sort_by', 'comment_created': datetime.datetime(2023, 6, 9, 17, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224582488, 'comment_body': 'Yeah you are correct, it is not related to user but passed down from frontend to fetch contributor stats.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 38, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224582864, 'comment_body': 'Updated. PTAL.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 38, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224583231, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224583615, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 39, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224583962, 'comment_body': 'Updated. PTAL.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224584653, 'comment_body': 'I added the reasoning and conclusion before reference link. PTAL', 'comment_created': datetime.datetime(2023, 6, 9, 17, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224585230, 'comment_body': 'I am trying this might take some time, I figuring out something that will help me through out the project and not just for this case.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224585609, 'comment_body': 'Yeah sg. Changed it to 500.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224585865, 'comment_body': ""It shouldn't be incrementing here. Thanks"", 'comment_created': datetime.datetime(2023, 6, 9, 17, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224586350, 'comment_body': 'It was actually supposed to be ""Model contains data corresponding to a user: contributor_id."". Updated', 'comment_created': datetime.datetime(2023, 6, 9, 17, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224586628, 'comment_body': 'Missed while editing. Updaed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 42, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224586996, 'comment_body': 'Yeah, we could call it language code. Updated', 'comment_created': datetime.datetime(2023, 6, 9, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224587106, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 43, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224587284, 'comment_body': 'PTAL again. Thanks', 'comment_created': datetime.datetime(2023, 6, 9, 17, 43, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224587490, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224587841, 'comment_body': 'Okay. Changed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 44, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224588208, 'comment_body': 'I assumed we do this for every model. Changed it.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224588306, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224588498, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224589249, 'comment_body': 'Updated best upto my knowledge. PTAL. Thanks', 'comment_created': datetime.datetime(2023, 6, 9, 17, 45, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224590001, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224590516, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224590903, 'comment_body': 'Updated tests. PTAL again. Thanks.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224591332, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2023, 6, 9, 17, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224592011, 'comment_body': 'I have splitted tests into four tests. \r\nsorting\r\nfiltering\r\nsorting and filtering\r\npagination.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224592762, 'comment_body': ""Okay, changed but had doubt why shouldn't we have logic in tests and rather hardcode things only?"", 'comment_created': datetime.datetime(2023, 6, 9, 17, 49, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224593425, 'comment_body': 'PTAL at new tests.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224593630, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224594553, 'comment_body': 'Thanks. That helps.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224597294, 'comment_body': 'There are a lot of online posts on this (search for ""avoid logic in tests""). Here\'s a random example http://www.everydayunittesting.com/2016/08/unit-test-anti-patterns-logic-in-tests.html but you can find many more with a web search.', 'comment_created': datetime.datetime(2023, 6, 9, 17, 55, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1224605773, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 6, 9, 18, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1224607097, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 6, 9, 18, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225056418, 'comment_body': 'Woah. Why is this making it into the PR?\r\n\r\nPlease always check your ""Files Changed"" tab before requesting any reviews, in order to make sure the changes you submit are the ones you actually want to get merged. This is good PR discipline.', 'comment_created': datetime.datetime(2023, 6, 10, 3, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225057269, 'comment_body': 'Nit: Why the weird line break and indentation? (You can put ""structure:"" on the previous line and then have the rest on the next line.)', 'comment_created': datetime.datetime(2023, 6, 10, 3, 50, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225058422, 'comment_body': '...language_code and contributor_id.', 'comment_created': datetime.datetime(2023, 6, 10, 3, 52, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225061385, 'comment_body': 'Look at how other enums are done in the codebase, e.g. classes subclassing enum.Enum. Maybe you could use the same pattern.\r\n\r\nAlso the class name should be plural.', 'comment_created': datetime.datetime(2023, 6, 10, 3, 53, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225091138, 'comment_body': ""Sorry, this happened previously as well. I'll just remove it but any idea how this is automatically getting attached?"", 'comment_created': datetime.datetime(2023, 6, 10, 4, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225092119, 'comment_body': 'Actually we were exceeding line lenght therefore I did line break before structure.', 'comment_created': datetime.datetime(2023, 6, 10, 4, 44, 19, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225153743, 'comment_body': 'Hi @seanlip I tried running the queries manually but every index was not generated in index.yaml. I have added the indexes with all possible queries in our models. PTAL.', 'comment_created': datetime.datetime(2023, 6, 10, 6, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225157374, 'comment_body': 'Okay. thanks.', 'comment_created': datetime.datetime(2023, 6, 10, 6, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225157487, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2023, 6, 10, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225157549, 'comment_body': 'Changed', 'comment_created': datetime.datetime(2023, 6, 10, 6, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225424565, 'comment_body': ""Could you please point me to the backend test? There should still be one to ensure that the constants defined here and the ones defined in the backend don't diverge."", 'comment_created': datetime.datetime(2023, 6, 10, 15, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225425660, 'comment_body': 'Try checking with @kevintab95 -- per https://github.com/oppia/oppia/blame/develop/assets/constants.ts#L7044 he merged that change 5 days ago.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 31, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225426486, 'comment_body': 'End docstrings with a period, just like elsewhere in the codebase.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 33, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225426907, 'comment_body': ""Doesn't seem changed to me."", 'comment_created': datetime.datetime(2023, 6, 10, 15, 34, 21, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225427352, 'comment_body': 'stats --> stats for.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225428115, 'comment_body': ""I keep saying this again and again, and it doesn't seem to get addressed. To quote a previous review:\r\n\r\n> Also, as mentioned in a previous comment, the mapping should be directly from SORT_KEY_INCREASING_LAST_ACTIVITY and you should be passing the sort keys to this function, rather than the human-readable values."", 'comment_created': datetime.datetime(2023, 6, 10, 15, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225428573, 'comment_body': '""below"" is ambiguous since it can refer to what\'s just ""below"" this comment. This is why my original suggestion included ""separately"".', 'comment_created': datetime.datetime(2023, 6, 10, 15, 37, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225428996, 'comment_body': ""That's a bit odd, usually we have the opposite problem (i.e. people seeing unexpected changes in index.yaml). Maybe that will trigger when you run the devserver once you've hooked everything up, but for now it's also fine to populate them manually. Thanks."", 'comment_created': datetime.datetime(2023, 6, 10, 15, 38, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225429743, 'comment_body': 'Same notes as before, for this and the comment below. Ditto for other classes.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 39, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225430148, 'comment_body': 'Add a colon after ""here"" (ditto elsewhere).', 'comment_created': datetime.datetime(2023, 6, 10, 15, 39, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225431100, 'comment_body': ""This sentence doesn't scan, and I commented on this before.\r\n\r\nWhen addressing a comment, please check other cases which might need to be fixed similarly; don't expect the reviewer to point all those cases out for you. (They often will, to an extent, but you should be doing the final audit.)"", 'comment_created': datetime.datetime(2023, 6, 10, 15, 41, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225433116, 'comment_body': 'As mentioned in a previous review, this should be 4 spaces indented from the previous line. It is not.\r\n\r\nDitto elsewhere in several other places.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 45, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225433338, 'comment_body': 'for --> with. Ditto for the others.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225433716, 'comment_body': 'Deindent this by 4 to match the opening {', 'comment_created': datetime.datetime(2023, 6, 10, 15, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225434114, 'comment_body': 'This should be indented by 4 from the previous line.\r\n\r\nIn general your indentation in this PR is somewhat ""off"" -- there seem to be a number of such errors. Please double-check all of it.', 'comment_created': datetime.datetime(2023, 6, 10, 15, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225478340, 'comment_body': 'Hi @kshitij01042002, few questions that will help me debug this:\n1. When these files were committed, was the local server still active in the background?\n2. If not, what method did you use to shut down the server?\n\nThanks!', 'comment_created': datetime.datetime(2023, 6, 10, 17, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1225710098, 'comment_body': 'Where should this backend test go?', 'comment_created': datetime.datetime(2023, 6, 11, 5, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225710725, 'comment_body': 'I am confused here about how you want flow to be. If you can see on line 2287 in am passing the sort keys to this function. Then it is checking on the basis of sort_key which sort query is appropriate.', 'comment_created': datetime.datetime(2023, 6, 11, 5, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225710908, 'comment_body': 'Actually I tested it on the devserver and ran queries, some indexes were generated for that matter but added the missed ones.', 'comment_created': datetime.datetime(2023, 6, 11, 5, 22, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225714377, 'comment_body': ""If you're not sure about something, please feel free to ask for clarification rather than ignoring the comment.\r\n\r\nWhat I am saying is that this dict should be:\r\n\r\n```\r\nsort_options_dict = {\r\n     SortChoices.SORT_KEY_INCREASING_LAST_ACTIVITY.value: -cls.last_contribution_date,\r\n     SortChoices.SORT_KEY_DECREASING_LAST_ACTIVITY.value: cls.last_contribution_date,\r\n     ...\r\n}\r\n```\r\n\r\nrather than what you have. Make sure that the input args and tests match this understanding as well. There should be no need to reference constants.ts."", 'comment_created': datetime.datetime(2023, 6, 11, 5, 46, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225714540, 'comment_body': 'I would put it in the test file associated with the backend file which defines those constants. In this case they would go in core/storage/suggestions/gae_models_test.py.', 'comment_created': datetime.datetime(2023, 6, 11, 5, 47, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225720640, 'comment_body': 'So do we need to define values in constants.ts, should I remove those values? Or we might need them while building frontend?', 'comment_created': datetime.datetime(2023, 6, 11, 6, 20, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225722660, 'comment_body': '1. No the local server was not running while commiting these changes.\r\n2. I usually shutdown the server with ctrl+c, so did this time.\r\n\r\nFYI these changes occured when I did a commit on my local branch.\r\nThanks @kevintab95. ', 'comment_created': datetime.datetime(2023, 6, 11, 6, 32, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735412, 'comment_body': 'Added it there. PTAL.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735533, 'comment_body': 'Done. Also added some extra information for a new developer who might work on this in future,', 'comment_created': datetime.datetime(2023, 6, 11, 7, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735649, 'comment_body': 'Sorry, missed it. Changed this as well as other with similarities.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 36, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735697, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735851, 'comment_body': 'Thanks @seanlip PTAL at the new changes if that looks good? Fow now I have kept the changes in the constants file as well. Thinking we might require it in future while building frontend.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 38, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735891, 'comment_body': 'Changed. PTAL.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 38, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225735989, 'comment_body': 'PTAL again. Thanks', 'comment_created': datetime.datetime(2023, 6, 11, 7, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225736003, 'comment_body': 'Okay.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225736108, 'comment_body': 'Changed this as well as other docstrings in this file to be accurate, Thanks.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225736241, 'comment_body': 'I indented it after ""="". Thanks for suggestio. Changed it.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225736262, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225736358, 'comment_body': 'Okay.', 'comment_created': datetime.datetime(2023, 6, 11, 7, 41, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1225846671, 'comment_body': 'Check the other way round, too -- anything in that constants file must be in the enum.\r\n\r\nI suggest getting the keys of each, sorting them, and making sure those lists are equal.', 'comment_created': datetime.datetime(2023, 6, 11, 15, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225856784, 'comment_body': ""You don't need this any more, right?"", 'comment_created': datetime.datetime(2023, 6, 11, 16, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1225856821, 'comment_body': 'Just do `dict_values = constants.CD_ADMIN_STATS_SORT_OPTIONS.keys()` at the outset.', 'comment_created': datetime.datetime(2023, 6, 11, 16, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1226447952, 'comment_body': ""If we do this, we can't use the sort() function. I think we could keep the existing method as well."", 'comment_created': datetime.datetime(2023, 6, 12, 10, 36, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1226480132, 'comment_body': ""I don't understand, why can't you use the sort() function? Don't you end up with a list of strings either way (perhaps after casting with list())?"", 'comment_created': datetime.datetime(2023, 6, 12, 11, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1226493640, 'comment_body': 'Hi @kevintab95 these changes always takes place whenever I push changes to github', 'comment_created': datetime.datetime(2023, 6, 12, 11, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1226501430, 'comment_body': 'Casting it into a list works. Thanks.', 'comment_created': datetime.datetime(2023, 6, 12, 11, 21, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1226502314, 'comment_body': ""Yeah. it doesn't make sense to check this now."", 'comment_created': datetime.datetime(2023, 6, 12, 11, 21, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1226856291, 'comment_body': 'Why do you need dict_values = dict_values here?', 'comment_created': datetime.datetime(2023, 6, 12, 15, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1226862308, 'comment_body': ""Ahhh. So sorry for that. I'll just change that."", 'comment_created': datetime.datetime(2023, 6, 12, 15, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1227190611, 'comment_body': ""Hi @kshitij01042002, I tried this out but haven't been able to reproduce on my machine. The file constants.ts seems to be reset to the original state after I shutdown the server using the ctrl + c method. The changes however do show up if the server was not shutdown. Could you share the logs on the console corresponding to the shutdown process? This might help us understand what is happening."", 'comment_created': datetime.datetime(2023, 6, 12, 20, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1227196383, 'comment_body': 'Another thing I would suggest trying is, start the server in prod mode (i.e. use the ""--prod_env"" flag), wait for it to open up the splash page and then stop the server. Execute ""git status"" and see if there are any changes to the ""DEV_MODE"" constant in constants.ts -- prod mode also involves modifying the constants file temporarily. If there are changes, it probably means there is some issue with shutting down the server and we will need to investigate that.', 'comment_created': datetime.datetime(2023, 6, 12, 20, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1227205255, 'comment_body': ""Also, a note for the future, after you have responded to comment(s) and would like someone to take a look at it, please remember to assign them to the PR to avoid delays. The assignee field needs to reflect the individuals who need to take action on the PR. I almost missed this because I wasn't assigned."", 'comment_created': datetime.datetime(2023, 6, 12, 20, 25, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 1227539161, 'comment_body': ""Hi @kevintab95 I tried to run the server in prod mode and was exited with an error:-\r\n![image](https://github.com/oppia/oppia/assets/91470808/1a00ba74-6176-4315-9013-388042ee07b9)\r\n\r\n![image](https://github.com/oppia/oppia/assets/91470808/5cb6a6df-8f5e-4813-9ffa-81c5b380cbe3)\r\n\r\nAlso after doing this there were changes in index.yaml file and constants.ts file which wasn't reverted.\r\n\r\nWhen I start the server in dev mode, there were changes in constants.ts but on shutting down the server the changes were reverted."", 'comment_created': datetime.datetime(2023, 6, 13, 5, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1228389225, 'comment_body': 'What changes were in the constants file when the server stopped -- when run in prod mode?', 'comment_created': datetime.datetime(2023, 6, 13, 16, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df98b046abd9b3c267937e264bb49f28ede038ef', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '792881d49633c9fed987741042ec72aec57c3f89', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95410efb664c48ab26027a1c3aff3089b5fd4a15', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90aaa1c503395f5ee1ddae47600bf7eb0e744130', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09d2e1ade153aa91b5f4ca37e48d612b28a9e18e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85f1e3af0fa8706019f19c11ff0335cd3eba538a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9744fe146a69e9808fad23ead341423d88507a02', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a74d8a7dacef4236c5e47c1c9b9c3469fc027df4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74d0d1cbc0d25bbf5695b216931babdb5c73b0db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '197e74484e6dcd19efa81a6c854093d94b0c5748', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'accbf31e2fdd74bbdb73564ee25e23b94bbbd0d4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5d0a539bfffe3016eb77f516fd7263aa824e355', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af650dc7ad337114ff96c16ced75ea4db1ecad6b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db01e30d90553104e2de2306af6d020002001632', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df438c620e953c0917687eba0f8f177d2ec36ee8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fafc8df0d4292e9705c73425463e9ac41f7aa8bd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71d85e0e48d50b9734ce0d56702f888d8b47c23f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95aa11082a66df8a371b7a44d67ce19fe51e53ad', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '032c4220234ebb740adc5ed82edcea26fc727b21', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5992bf4ba38ecf9f128e58b2aafcb94eeffc1ae7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e429a38bd4fd491d86f9af892e5a7b0811bdac5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef6b4e02f2bb60451ea8429bdcd997ba2eda563e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2487641b60f2f6089facf6454ae52e4996044a3b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0b147fedf058c7aa537bac627c40584681b295c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6c0ecde3c6e618e48d1a0f8742d2419f0c9d747', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5269976255506c1191576a9296fcaa71feed958', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74f225fac241ae239253908a85daddcaa1d64c96', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '256082d973a7bd4ebf3d370a861332be25020af4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a104d9eb0d5278a269c6a8673cf83c3a8359b685', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '857ce9f457064ecb30c8b503fcd0b82bfc0b6b71', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10fe3a2b0f16b3733a4d066f5d7f76aac4ada6ce', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29a517af96cee6655651c97e3760f133e1988cf7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d0d7bfa17040f1187590ff8cbec1fd0b6a56ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '114d5e1140478bcc123c7fa70e9b4587b83b7f8d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd44dfb722b65f9f7eedad0ad33246052015d709', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c0840fa2e6c0857f90e8cf3514a11aa5ccae193', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6edff6b1c55367efc38a5dec71f86cb160b72a0a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae50e3a421e4c4ed1440be8d2e906f3bd9c427dc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20bf08d30574dea3680a9c9d6d42abfaadba5192', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0595d4559d44a753f719d4c6c5ce6c8a93a89ec2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6afdb850abe37b1c998dd367ae17403584a31f04', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '917151463e2d131847a15115ff835a8f8310ed55', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '009e1f9b73a2d4faffb4736b0d1cc8c0385285cd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd657d0ba255463d4e45cf01c8379eb3ef1f7ebe9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0ba94e6785649d179e06e58ff9de2aecab689c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bd1be0529247e9cdece52150e4c2ff1e9c8ddd5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c89d2572c9efaa1cfdfd23b6645a392aee450b4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7cb65ef91b3e0c87267ee5b81572a93dce65eb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9637efa12ffb546ed28bf646e03ab5751d4bec2d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e024ec6e4d8749f712b60b17c4b8f14259a6224', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5854b33541a37caa36795680f280ad1cc693820c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98f953ebc51e844f24ab17dc9b1843d8f4a55c8c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ee68c3790dfa3e876b5534105ac5307b5d09a11', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9ca730989363833bf978298c66d43d5f97d6923', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2ebb77d22da94fb9f020e265f5a8cfa1e2e250', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1416246406,Implemented Controller Changes for contributor Admin Dashboard: GSoC M1.6,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes part of #17440 
2. This PR does the following: 

**This PR cannot be merged before #18560 gets merged.**

-   Implement Controller layer changes required for Contributor Admin Project. It adds one new handler

                  - ContributorDashboardAdminStatsHandler

- There was some logic error which I discovered in recent debugging so the changes are done in

                 - core/storage/suggestion/gae_models.py

## Essential Checklist

- [x] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).


## Testing doc (for PRs with Beam jobs that modify production server data)

<!--
If this PR affects production server data, please follow
[these instructions](https://github.com/oppia/oppia/wiki/Testing-jobs-and-other-features-on-production#submitting-a-pr-with-a-new-job-or-feature-that-requires-third-party-api)
and link to the job request doc here.

Otherwise, please delete this section.
-->

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

The above should be done for all PRs, including short ones (e.g. a single-line change).
However, if the changes in your PRs are autogenerated via a script and you cannot
provide proof for the changes then please leave a comment ""No proof of changes
needed because {{Reason}}"" and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Never force push! If you do, your PR will be closed.
- Make sure your PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,18576,https://api.github.com/repos/oppia/oppia/pulls/18576,https://github.com/oppia/oppia/pull/18576,closed,1232,185,8,72,31,113,1,1,[{'name': 'PR: LGTM'}],2023-07-01 16:50:59+00:00,2023-07-18 19:24:49+00:00,1478030.0,"17 days, 2:33:50","[{'comment_id': 1249593166, 'comment_body': ""I don't think I have seen this typing before. Can you point me to somewhere else in the codebase where things are typed by {{enum}}.value?\r\n\r\nIf not, please follow existing codebase conventions, or explain clearly why this is different from all the other cases."", 'comment_created': datetime.datetime(2023, 7, 2, 15, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1249593760, 'comment_body': 'Is using `offset` rather than `temp_offset` here correct?\r\n\r\nAlso please name the ""temp_offset"" something different. I cannot tell, from the name, how it differs from `offset`. Try and convey the purpose of each variable clearly through its naming.', 'comment_created': datetime.datetime(2023, 7, 2, 15, 56, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1249594365, 'comment_body': 'This seems odd to me. Presumably the offset is to skip the results that have already been sent to the frontend. So why are we recomputing them again here? That seems too inefficient to be workable.', 'comment_created': datetime.datetime(2023, 7, 2, 15, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1249594985, 'comment_body': 'If logic is repeated in if/else branches, find a way to pull it out of both branches so that it only needs to be stated once.', 'comment_created': datetime.datetime(2023, 7, 2, 15, 58, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1249595077, 'comment_body': 'Same question about the use of ""value"".', 'comment_created': datetime.datetime(2023, 7, 2, 15, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1249595440, 'comment_body': 'Why are there comments in your code? Please read through your ""Files Changed"" tab and make sure the changes are exactly what you want them to be before you ask reviewers to do the same.', 'comment_created': datetime.datetime(2023, 7, 2, 15, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1249595989, 'comment_body': ""Why are these results changing? Normally we expect tests to be stable when the code changes if the behaviour is still supposed to be the same -- in fact that's one of the reasons we write tests in the first place. So the existence of changes in the expectations here, without any description/discussion of behaviour change, is a red flag."", 'comment_created': datetime.datetime(2023, 7, 2, 16, 0, 26, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1250738867, 'comment_body': 'Yess, the loop should break when we get the (page_size + offset) that is the number of results till the end of desired page.', 'comment_created': datetime.datetime(2023, 7, 3, 11, 27, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1250741176, 'comment_body': 'The reason we have to compute them is because the last_activity filter is not directly applied in the gae query. We need to fetch the results again and discard the one that has already been sent to frontend.', 'comment_created': datetime.datetime(2023, 7, 3, 11, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1250744498, 'comment_body': 'I have changed the size of the page from 2 to 1, to test more branching and combinations. So the the results are also changing. PTAL above.', 'comment_created': datetime.datetime(2023, 7, 3, 11, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251492874, 'comment_body': ""Changed it to be `str`, it's fine if we don't do strict type checking here cause we are doing it in controller. So the string that comes from the frontend will also be one of `CD_ADMIN_STATS_SORT_OPTIONS` defined in constants.ts"", 'comment_created': datetime.datetime(2023, 7, 4, 5, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251493098, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2023, 7, 4, 5, 16, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251508683, 'comment_body': 'What other can I name it because it is the temporary offset I am using to skip the results when I am making the request to the datastore again.', 'comment_created': datetime.datetime(2023, 7, 4, 5, 41, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251509011, 'comment_body': 'Sounds reasonable, updated PTAL.', 'comment_created': datetime.datetime(2023, 7, 4, 5, 42, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251509142, 'comment_body': 'Added the reasoning above. PTAL.', 'comment_created': datetime.datetime(2023, 7, 4, 5, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1251675502, 'comment_body': 'This should be handled via the `URL_PATH_ARGS_SCHEMAS`', 'comment_created': datetime.datetime(2023, 7, 4, 8, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251676401, 'comment_body': ""Do we need this, I'm assuming the `HANDLER_ARGS_SCHEMAS` must be handling it. "", 'comment_created': datetime.datetime(2023, 7, 4, 8, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251702338, 'comment_body': ""I see repeated patterns in all the if-else blocks, can we simplify it:\r\n```\r\nstats, next_offset, more = get_total_stats(contribution_type, contribution_subtype) \r\nself.render_json({\r\n    'frontend_dicts': [\r\n        stat.to_frontend_dict() for stat in translation_submitter_stats],\r\n    'next_offset': next_offset,\r\n    'more': more\r\n})\r\n```\r\n\r\nYou can further simplify  `get_total_stats` with a static map `contribution_type => contribution_subtype => method`. (Though this will make the structure bit rigid, if you think that the general structure would be same for all the cases in future then we can use the dict/map.)\r\n"", 'comment_created': datetime.datetime(2023, 7, 4, 8, 42, 28, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251703637, 'comment_body': 'Do we have positiveInt (or Non-negaitve) as a type?', 'comment_created': datetime.datetime(2023, 7, 4, 8, 43, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251704026, 'comment_body': 'Ditto*', 'comment_created': datetime.datetime(2023, 7, 4, 8, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251706141, 'comment_body': ""Can we use the validator:\r\n```\r\n'validators': [{\r\n    'id': 'is_supported_audio_language_code'\r\n}]\r\n```"", 'comment_created': datetime.datetime(2023, 7, 4, 8, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251709212, 'comment_body': ""is `language_code` an optional param? I don't see it to be optional in `ContributorDashboardAdminStatsHandlerNormalizedPayloadDict`"", 'comment_created': datetime.datetime(2023, 7, 4, 8, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251742600, 'comment_body': '```suggestion\r\n            feconf.CONTRIBUTOR_DASHBOARD_ADMIN_STATS_URL_PREFIX),\r\n```', 'comment_created': datetime.datetime(2023, 7, 4, 9, 14, 21, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251745282, 'comment_body': 'Maybe add choices here?', 'comment_created': datetime.datetime(2023, 7, 4, 9, 16, 33, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251745607, 'comment_body': 'Add choices here*', 'comment_created': datetime.datetime(2023, 7, 4, 9, 16, 49, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251746125, 'comment_body': 'Are we expecting choices to be inside `schema`?', 'comment_created': datetime.datetime(2023, 7, 4, 9, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251746244, 'comment_body': 'Maybe nonNegative int? (if we have one!)', 'comment_created': datetime.datetime(2023, 7, 4, 9, 17, 8, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251993905, 'comment_body': 'Should we call it `stats` instead on `frontend_dicts`', 'comment_created': datetime.datetime(2023, 7, 4, 12, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1251996012, 'comment_body': 'Why is this handled via ""post""? are we expecting to update any field in the datastore through this API?', 'comment_created': datetime.datetime(2023, 7, 4, 12, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1252347231, 'comment_body': ""We don't name services files based on the pages instead entity names are used like exp_services, story_services. I would suggest either moving these functions to suggestion_services (As all the models are stored in suggestion_models.py) or renaming it to suggestion_stats_services/contribution_stats_services.py "", 'comment_created': datetime.datetime(2023, 7, 4, 20, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1252496982, 'comment_body': 'Can you please once confirm the naming convention we use here, at some places we separate the keywords by a hyphen(-), at some places by an underscore(_), and at some places its continuous text, maybe with @seanlip?\r\nJust want to be sure so that we follow a similar pattern.\r\nThanks', 'comment_created': datetime.datetime(2023, 7, 5, 3, 27, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lkbhitesh07', 'type': 'User'}, {'comment_id': 1252917841, 'comment_body': 'I have added a check for choices inside the post method, so that we can through a customized error message.', 'comment_created': datetime.datetime(2023, 7, 5, 10, 44, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1252918241, 'comment_body': 'Ditto above, added check inside the post method.', 'comment_created': datetime.datetime(2023, 7, 5, 10, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1252919029, 'comment_body': 'Not sure, I used the convention already used in the codebase', 'comment_created': datetime.datetime(2023, 7, 5, 10, 45, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1252927855, 'comment_body': 'Thanks for pointing out.', 'comment_created': datetime.datetime(2023, 7, 5, 10, 52, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1252928908, 'comment_body': 'I looked out some other schemas and then decided to have a choices validator here.', 'comment_created': datetime.datetime(2023, 7, 5, 10, 53, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1253258030, 'comment_body': ""Re https://github.com/oppia/oppia/pull/18576#discussion_r1249593166 -- I'm not sure I buy the rationale. The type checking should always be as strict as possible, so I wouldn't suggest relaxing it.\r\n\r\nMy original comment was about something different. Here it is for reference:\r\n\r\n> I don't think I have seen this typing before. Can you point me to somewhere else in the codebase where things are typed by {{enum}}.value?\r\n>\r\n> If not, please follow existing codebase conventions, or explain clearly why this is different from all the other cases.\r\n\r\nCan you address the question here?"", 'comment_created': datetime.datetime(2023, 7, 5, 15, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1253259615, 'comment_body': ""But that won't work due to the inefficiency I mentioned. Why can't you memorize the previous offset and then start counting from that when making the next query?"", 'comment_created': datetime.datetime(2023, 7, 5, 15, 10, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1253259742, 'comment_body': ""Re https://github.com/oppia/oppia/pull/18576#discussion_r1249593166 -- I'm not sure I buy the rationale. The type checking should always be as strict as possible, so I wouldn't suggest relaxing it.\r\n\r\nMy original comment was about something different. Here it is for reference:\r\n\r\n> I don't think I have seen this typing before. Can you point me to somewhere else in the codebase where things are typed by {{enum}}.value?\r\n>\r\n> If not, please follow existing codebase conventions, or explain clearly why this is different from all the other cases.\r\n\r\nCan you address the question here?"", 'comment_created': datetime.datetime(2023, 7, 5, 15, 10, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1253261325, 'comment_body': 'Why are you removing this assertion?', 'comment_created': datetime.datetime(2023, 7, 5, 15, 11, 55, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1253262806, 'comment_body': ""Why are you removing this check? Please don't remove existing expectations -- you do need to test the number of results and each result value."", 'comment_created': datetime.datetime(2023, 7, 5, 15, 12, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1253264432, 'comment_body': 'What is the difference between ""temp_offset"" and ""offset""? Your responses don\'t explain this clearly.\r\n\r\nAlso please see my comment below, starting the fetch from item 0 is not acceptable from a latency perspective.', 'comment_created': datetime.datetime(2023, 7, 5, 15, 14, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1253486363, 'comment_body': ""```suggestion\r\n        csrf_token = self.get_new_csrf_token()\r\n        \r\n        response = self.post_json(\r\n            '/contributor-dashboard-admin-stats/invalid/submission', {\r\n                'page_size': 2,\r\n                'offset': 1,\r\n                'language_code': self.SUGGESTION_LANGUAGE_CODE,\r\n                'sort_by': None,\r\n                'topic_ids': None,\r\n                'num_days_since_last_activity': None\r\n            },\r\n                csrf_token=csrf_token,\r\n                expected_status_int=400)\r\n\r\n        self.assertEqual(\r\n            response['error'], 'Invalid contribution type invalid.')\r\n        self.logout()\r\n```\r\n\r\nUse new lines to differentiate the test structure (setup, action under test, asserts). Ditto below. Also see https://github.com/oppia/oppia/wiki/Backend-tests#guidelines-for-writing-good-tests."", 'comment_created': datetime.datetime(2023, 7, 5, 18, 34, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1253488193, 'comment_body': '+1. This should be GET.', 'comment_created': datetime.datetime(2023, 7, 5, 18, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1253488262, 'comment_body': '+1.', 'comment_created': datetime.datetime(2023, 7, 5, 18, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1253492489, 'comment_body': '```suggestion\r\n    max_days_since_last_contribution: Optional[int]\r\n```\r\n\r\nSeems clearer.', 'comment_created': datetime.datetime(2023, 7, 5, 18, 41, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1253495619, 'comment_body': ""Let's create a separate test for each test case (and create a helper function to setup the models). That way, if a case fails, it's obvious which case is failing."", 'comment_created': datetime.datetime(2023, 7, 5, 18, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1253498650, 'comment_body': 'Why do you have to filter the results manually? Can you not add a `last_contribution_date` filter to the storage fetch call? e.g. https://cloud.google.com/appengine/docs/legacy/standard/python/ndb/queries#filter_by_prop. ', 'comment_created': datetime.datetime(2023, 7, 5, 18, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1254378089, 'comment_body': 'The first sort property must be the same as the property to which an inequality filter is applied. Thus, the inequality filter on last_activity can not be used here and we have implemented it separately below. Learn more about this here:\r\nhttps://cloud.google.com/appengine/docs/legacy/standard/go111/datastore/query-restrictions#properties_used_in_inequality_filters_must_be_sorted_first.', 'comment_created': datetime.datetime(2023, 7, 6, 12, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1254389088, 'comment_body': ""Actually I took the reference of [this](https://github.com/oppia/oppia/blob/develop/core/controllers/topics_and_skills_dashboard.py#L256) code used for getting data for skills dashboard. Since we are implementing pagination in the backend itself we need to send data via this API. I am not sure about this though, can you please give me suggestion whether should I change it. If yes I'll have to make the changes and also change the tests so will resolve other comments after getting this one resolved."", 'comment_created': datetime.datetime(2023, 7, 6, 12, 48, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1254645013, 'comment_body': ""The schema validation for payloads/urls exists so that we don't have to write these validations manually, please use schema validation for any incoming data."", 'comment_created': datetime.datetime(2023, 7, 6, 16, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1254646616, 'comment_body': 'Please add the basic validations via schema. Note: we are not expecting any of these issues to happen vai fronted, it is only possible if someone tries to access these APIs manually and I think ` customized error message.` is not required for such cases.', 'comment_created': datetime.datetime(2023, 7, 6, 16, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1254657264, 'comment_body': ""I'm not sure whether this is an expected pattern, can you please add a few links where we have added choices this way? (It will help me understand the situation and maybe fix other places as well if they are not working fine!)"", 'comment_created': datetime.datetime(2023, 7, 6, 16, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1254682664, 'comment_body': ""Yes change it to GET as it's a request to fetch data, there are a lot of issues with using post in place of GET. Also, thanks for reporting the [issue](https://github.com/oppia/oppia/blob/develop/core/controllers/topics_and_skills_dashboard.py#L256) in develop., I'll report it to the LaCE team and get it fixed."", 'comment_created': datetime.datetime(2023, 7, 6, 16, 40, 21, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1254825891, 'comment_body': '```suggestion\r\n        if contribution_type not in {\r\n            feconf.CONTRIBUTION_TYPE_TRANSLATION,\r\n            feconf.CONTRIBUTION_TYPE_QUESTION\r\n        }:\r\n```', 'comment_created': datetime.datetime(2023, 7, 6, 19, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1254826084, 'comment_body': '```suggestion\r\n        if contribution_subtype not in {\r\n            feconf.CONTRIBUTION_SUBTYPE_SUBMISSION,\r\n            feconf.CONTRIBUTION_SUBTYPE_REVIEW\r\n        }:\r\n```', 'comment_created': datetime.datetime(2023, 7, 6, 19, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1254826449, 'comment_body': ""also can't we leverage schema validation for these checks?"", 'comment_created': datetime.datetime(2023, 7, 6, 19, 16, 37, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1254830446, 'comment_body': 'Why change it from enum to str?', 'comment_created': datetime.datetime(2023, 7, 6, 19, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1256388071, 'comment_body': ""This doesn't seem addressed?"", 'comment_created': datetime.datetime(2023, 7, 7, 19, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1256395912, 'comment_body': 'Ah, right. Forgot about that quirk. Can you please add a comment explaining this with a link to the documentation for future readers?', 'comment_created': datetime.datetime(2023, 7, 7, 20, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1257271619, 'comment_body': 'One of the example is [here](https://github.com/oppia/oppia/blob/develop/core/controllers/contributor_dashboard.py#L878).', 'comment_created': datetime.datetime(2023, 7, 8, 13, 45, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1257272654, 'comment_body': ""I am not sure if we have anything specific for Non-negative but we can use validator to have min-value to be Zero.\r\n\r\n`\r\n                'validators': [{\r\n                    'id': 'is_at_least',\r\n                    'min_value': 0\r\n                }],\r\n`\r\n\r\nSomething like this."", 'comment_created': datetime.datetime(2023, 7, 8, 13, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1257278022, 'comment_body': 'I have added it above on line 2273 where we are actually defining the sort query. Sean suggested that it would be better to reference it while defining the sort query itself rather than later.', 'comment_created': datetime.datetime(2023, 7, 8, 14, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1257294108, 'comment_body': ""I am not able to find an example where we have used {enum}.values as a typing but it is necessary here because we have created a new constant `CD_ADMIN_STATS_SORT_OPTIONS` in constants.ts which is mapped to the values of this enum. On using the constant value directly as typing there is a mypy error\r\n\r\n`\r\nerror: Name 'constants.CD_ADMIN_STATS_SORT_OPTIONS.value' is not defined  [name-defined]\r\n`\r\n"", 'comment_created': datetime.datetime(2023, 7, 8, 15, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1257503154, 'comment_body': 'Yeah, that was exactly what I did the first time I implemented it but while testing I mistakenly took the number of models to skip as same as offset and then created a lot of confusion which resulted in unneccessary efforts. ', 'comment_created': datetime.datetime(2023, 7, 9, 15, 38, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1257503952, 'comment_body': ""Actually while trying to address https://github.com/oppia/oppia/pull/18576#discussion_r1249593166 this. I changed it from enum to str but we shouldn't be loose on type checking therefore added it back again."", 'comment_created': datetime.datetime(2023, 7, 9, 15, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1257522654, 'comment_body': ""I am not able to find an example where we have used {enum}.values as a typing but it is necessary here because we have created a new constant CD_ADMIN_STATS_SORT_OPTIONS in constants.ts which is mapped to the values of this enum. On using the constant value directly as typing there is a mypy error\r\n\r\nerror: Name 'constants.CD_ADMIN_STATS_SORT_OPTIONS.value' is not defined  [name-defined]"", 'comment_created': datetime.datetime(2023, 7, 9, 18, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1257731967, 'comment_body': 'As we have discarded the new approach and keeping the same approach,temp_offset is not used anymore.', 'comment_created': datetime.datetime(2023, 7, 10, 5, 37, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1257732181, 'comment_body': 'Reverted the changes', 'comment_created': datetime.datetime(2023, 7, 10, 5, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1257733051, 'comment_body': 'Reveted the changes.', 'comment_created': datetime.datetime(2023, 7, 10, 5, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259184607, 'comment_body': ""I'm little confused like how would we implement static mapping, do we have any existing example in the codebase? \r\n\r\nThe function and number of params are different for each case."", 'comment_created': datetime.datetime(2023, 7, 11, 4, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259205059, 'comment_body': 'Changed it. Thanks.', 'comment_created': datetime.datetime(2023, 7, 11, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259206147, 'comment_body': 'Hi @seanlip , does the convention used correct? Or it should be something like hitesh suggested? ', 'comment_created': datetime.datetime(2023, 7, 11, 5, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259211699, 'comment_body': ""I think `max_days_since_last_acitivity` would be accurate cause we are also considering for reviewers.\r\n\r\nI am thinking to make this change at the end as this will also change it's naming in other files which will result in more reviewers getting assgined. It is just a variable name change so thinking of doing it at the end. \r\n\r\nIs it fine?"", 'comment_created': datetime.datetime(2023, 7, 11, 5, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259258835, 'comment_body': 'Sounds reasonable. Updated the checks. PTAL. Thanks', 'comment_created': datetime.datetime(2023, 7, 11, 6, 43, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259261700, 'comment_body': 'Added a validator which checks that value should be atleast 0 i.e. a nonNegative', 'comment_created': datetime.datetime(2023, 7, 11, 6, 46, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259263494, 'comment_body': 'Sg. Updated. \r\n', 'comment_created': datetime.datetime(2023, 7, 11, 6, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259264826, 'comment_body': 'I have split the test cases into different tests. PTAL.', 'comment_created': datetime.datetime(2023, 7, 11, 6, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259661437, 'comment_body': '@kshitij01042002 is this resolved?', 'comment_created': datetime.datetime(2023, 7, 11, 12, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1259661669, 'comment_body': '@kshitij01042002 Is this resolved?', 'comment_created': datetime.datetime(2023, 7, 11, 12, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1259683778, 'comment_body': 'Yeah I have changed the method from POST to GET.', 'comment_created': datetime.datetime(2023, 7, 11, 12, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259684943, 'comment_body': 'Yeah. I have renamed the files to contribution_stats_services.py', 'comment_created': datetime.datetime(2023, 7, 11, 12, 46, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259737909, 'comment_body': 'Added the schema validation and removed manual validation. PTAL.', 'comment_created': datetime.datetime(2023, 7, 11, 13, 26, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259738321, 'comment_body': 'Added a validator which checks that value should be atleast 0 i.e. a nonNegative', 'comment_created': datetime.datetime(2023, 7, 11, 13, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259739435, 'comment_body': 'Yeah, removed it from here and added in schema validation.', 'comment_created': datetime.datetime(2023, 7, 11, 13, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259740556, 'comment_body': 'Actually this is required for mypy checking. Even though we are validating it in schema it assumes that it can be None.', 'comment_created': datetime.datetime(2023, 7, 11, 13, 28, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259742549, 'comment_body': 'Updated. PTAL.', 'comment_created': datetime.datetime(2023, 7, 11, 13, 30, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1259743320, 'comment_body': 'Updated. PTAL. Thanks for pointing to the documentation.', 'comment_created': datetime.datetime(2023, 7, 11, 13, 30, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1260001875, 'comment_body': 'User-facing URLs (that are shown in the URL bar) should be hyphenated. Data handlers can be concatenated (but hyphenated is probably OK too).', 'comment_created': datetime.datetime(2023, 7, 11, 16, 46, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1260202002, 'comment_body': ""Sure, `max_days_since_last_activity` seems reasonable. \r\n\r\nThe end of the GSoC period? I would just do it now, as I don't really see the point of deferring it to later."", 'comment_created': datetime.datetime(2023, 7, 11, 19, 42, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1260206205, 'comment_body': 'Nit: Remove new line. Ditto below.', 'comment_created': datetime.datetime(2023, 7, 11, 19, 46, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1260207744, 'comment_body': ""Don't think the lint exception is necessary if we indent properly.\r\n```suggestion\r\n    def test_get_translation_reviewer_stats_for_last_activity_filter(\r\n      self\r\n    ) -> None:\r\n```"", 'comment_created': datetime.datetime(2023, 7, 11, 19, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1260212950, 'comment_body': 'I believe this file will encompass more than just getters.\r\n\r\n```suggestion\r\n""""""Service methods for operating on contributor dashboard user stats.\r\n```', 'comment_created': datetime.datetime(2023, 7, 11, 19, 53, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1260954189, 'comment_body': 'No not at the end of GSoC at the end of this PR, after all other major comments have been resolved.', 'comment_created': datetime.datetime(2023, 7, 12, 10, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1260963815, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2023, 7, 12, 10, 26, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1260964449, 'comment_body': 'Yeah, Thanks for the suggestion.', 'comment_created': datetime.datetime(2023, 7, 12, 10, 26, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1260965298, 'comment_body': 'Changed it to `Service methods for operating on contributor admin dashboard user stats.`. I think it is more accurate as we are using this file for admin dashboard stats.', 'comment_created': datetime.datetime(2023, 7, 12, 10, 27, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1261346206, 'comment_body': ""I still don't see the benefit of waiting—any added reviewers will need to review the same changes at some point or another. The PR is almost ready anyway, so I would just make the changes."", 'comment_created': datetime.datetime(2023, 7, 12, 15, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1261354607, 'comment_body': ""This seems like a hack that isn't quite what we want since we shouldn't accept non-list like JSON strings. Did you try the suggestion of adding the `topic_ids` URL query param in the URL of `get_json` calls in the tests? \r\n\r\nA `list` should be a valid schema type (https://github.com/oppia/oppia/wiki/Schemas#write-a-schema), so if the above doesn't work, then you can try reaching out to the schema wiki writers: https://github.com/oppia/oppia/wiki/Schemas#write-a-schema. @rohitkatlaa @vojtechjelinek @Nik-09 "", 'comment_created': datetime.datetime(2023, 7, 12, 15, 28, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1261413812, 'comment_body': 'Actually in the codebase where we have to pass list through a GET method we are using this technique. See for example **ConceptCardDataHandler**.\r\n\r\nOn trying the method you suggested the error still persist `{""error"": ""Schema validation for \'topic_ids\' failed: Expected list, received topic1"", ""status_code"": 400}`', 'comment_created': datetime.datetime(2023, 7, 12, 16, 11, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1261426523, 'comment_body': ""@kshitij01042002 Just a note, I imagine this discussion would have come up when the PR for ConceptCardDataHandler was created. Maybe find that PR using git's blame functionality and see if anything was mentioned there."", 'comment_created': datetime.datetime(2023, 7, 12, 16, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1261434773, 'comment_body': ""The schema was introduced in this PR https://github.com/oppia/oppia/pull/14563 but there isn't any discussion about this."", 'comment_created': datetime.datetime(2023, 7, 12, 16, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1261436096, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 7, 12, 16, 31, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1261448896, 'comment_body': ""~~OK, I know what happened here -- @sagangwee is right.~~\r\n\r\n~~JsonEncodedInString was introduced in https://github.com/oppia/oppia/commit/aefe95731d353fe7142f8b18343e49c81e39adcf because it was necessary to transfer an encoded object in a user-facing URL.~~\r\n\r\n~~Its use in data handlers was never actually intended, because you can transfer structured data through a JSON request and #14563 is actually wrong.~~\r\n\r\n~~So I would suggest using the appropriate schema for a list of strings instead. We have a wiki page on schemas that you might find useful: https://github.com/oppia/oppia/wiki/Schemas~~\r\n\r\nEDIT: Ah, sorry, ignore what I said above. The distinction is not actually between page/data handlers as I mistakenly thought, it is between GET and POST/PUT/etc. handlers. See @Nik-09's comment below. \r\n"", 'comment_created': datetime.datetime(2023, 7, 12, 16, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1261466718, 'comment_body': ""Using List in schema definition doesn't work as expected for GET requests. It only considers the first element of the list, as mentioned in the error above."", 'comment_created': datetime.datetime(2023, 7, 12, 17, 0, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1262125736, 'comment_body': ""Could you dig a little deeper into why it doesn't work? Propagating a bad pattern isn't really the way to go here.\r\n\r\n(You can use this [debugging doc template](https://docs.google.com/document/d/1qRbvKjJ0A7NPVK8g6XJNISMx_6BuepoCL7F2eIfrGqM/edit) to organize your investigation.)"", 'comment_created': datetime.datetime(2023, 7, 13, 7, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1262240402, 'comment_body': 'Adding a note: The data passed through URL query params are string data types and in order to normalize the string into a list of topicIDs, here `JsonEncodedInString` is used. Thus @kshitij01042002 is facing the error i.e., ""expected list received ..."".', 'comment_created': datetime.datetime(2023, 7, 13, 8, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Nik-09', 'type': 'User'}, {'comment_id': 1262347817, 'comment_body': ""Hi @Nik-09 thanks for rolling in. I tried to dig more into it and found the similar conclusion. The URL query doesn't allow to pass the list but only string values. If we want to pass a list either we have to use the `POST` method or pass it as a `JsonEncodedInString`\r\n\r\n@seanlip @sagangwee How should I proceed with it?\r\n\r\ncc: @DubeySandeep "", 'comment_created': datetime.datetime(2023, 7, 13, 10, 17, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1262356533, 'comment_body': 'Sorry, I amended my comment above -- I think what you have is probably fine.', 'comment_created': datetime.datetime(2023, 7, 13, 10, 25, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1263337637, 'comment_body': ""I was expecting this to be inside `schema`, can you please check whether it's working here?\r\n\r\n@Nik-09 Can we add validators here? (OR do we need to it inside the schema)? If both, I would suggest sticking it to one place i.e, inside the schema."", 'comment_created': datetime.datetime(2023, 7, 14, 6, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1263631899, 'comment_body': 'Yes we need to add **choices** inside the **schema**, for ref: https://github.com/oppia/oppia/blob/3d1d9af3d08d8448af866cbe5e5779e4bd9feb90/core/schema_utils.py#L278', 'comment_created': datetime.datetime(2023, 7, 14, 11, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Nik-09', 'type': 'User'}, {'comment_id': 1263837831, 'comment_body': 'Okay. Updated it. PTAL. Thanks.', 'comment_created': datetime.datetime(2023, 7, 14, 14, 59, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1265793647, 'comment_body': ""I think our validation logic doesn't support URL query params with the same key, though the `webapp2` framework does with `getall`: https://webapp2.readthedocs.io/en/latest/guide/request.html#get-data. So, what we have here seems fine."", 'comment_created': datetime.datetime(2023, 7, 17, 19, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5757c0499f74e061065f91371ad1d485fd2a7f60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d5423c9feb3a9f8bb53037c4c546ddda285327', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4c16fe508d34c9099606b9438afa3f0f620082', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c881635e54517745a5b2ebf9f034c651505f651', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5255828143b1b098719e1d9406434a4ef764499c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0c2154e0e91debf2b9d2f0b8edd64b9ca919583', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5c736486d9b8a8622de200f48a997305910fc32', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '195977953bb97b1324cb2fef20833a75b609b042', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a35617be4aa449310cb4e99b30c3136c8a9147e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcb9b3b1ac40ece6ee3bc9b9e06389d71d32e5ed', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b356de331b4f0394b5a072a995b86acb51b1c3d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f50346fd2648a7c16886c6cc4d1fd36a65afad60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '197d9af0e0912d46d9519af08c397d85e6f4af51', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84d29956839c9073a9d6382fd8a54b4b23ac666b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85f570b75f881108ab7563165e9f349fa2d5c948', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5857ce30b02ad8848924916c5db4060c2e833ecd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d149f02f00c8de8499295d1b42e1e24c9e27747', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc417523bc79ae1703ba2b5574e6d56b2a4a2a40', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a601316e903861b25cb51f06ccd93d78ffb279a1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaabcf6107d551fc2882ca5f44429c2251056331', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a9e0faba4ef432471d290a96a1da75d72fa5805', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c2134a4698c0f0913570c97204302cac21b03b2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '320209629b7f69a7283242b5c6ccd8b24949d3c4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57389caf0d148a394afe43af2dce58b73780e180', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f60ea4a27326fa7dd0141bf144a8541827baa74', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd364c51e3edd20c7bc8b33276e2625da8d1fd940', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '808f77af3328b40ac57060dde4995022545bf668', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d01297484e318ec68a4bbc656ff0b1633fcbed7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '203b9ca446451ffcba29352e0d7a77e498113805', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f67ef0a63224676c44311a4fde55e78d519734d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69c60b867d6301c6d5f47c114161874b0b851244', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa037626d0fe29b7e855e5caaf8d8d58ff7bb42', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54916f0aa88d771e34381d81ff40d14e9b6ca107', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf36079662a9c1484b5789704a391eac8022fb8a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1a418412c18023911869d45e472d10da327d649', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '095a2daa4e6ee0ddb7d41d4b690d7dcad732eef0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '225b6c588fa48d92d0eb3cda5210987cddb63fa3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1768add5b90e0c92565c26e88819e12b900d2627', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29b4f42fd58a93eee88fbe6b7b0eeceb078bb606', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c51d81efcc7d32ccabcb1cf2943eceb01388f7c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3484c1fb0042f821f1efe46c4d8010bb32f2db0e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5149b23cf06cd25c21e11e3d948fd316eb96d012', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f214efd325c867551143337d2a9dd6ddd8cf16f7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e222672ab0da89e677fc9d438a28fcca1f6f385c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09aa816b1349199550d17c15e47c3b0d9cc22022', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11637c3d1653103074e4b88f2e5adb0a1f99b976', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96326d7e1e07e32a5b8d3a61aeb54be82cfbccff', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb8ecb125fb192bb435dd75ddb4b32081a346df2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fafb8fe2abb7c99d25ba91b4279ad882de57ba0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f080c4a10002513434377ae7b26efe8770713a4a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f4e950d0b25f2809216d3a624d565477661f2e6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfc13ad37eaa2107b675e7fe4ce213b05357a24d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ab9844b15a3d681ccc5af41bb9cbf7604bb95e7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1445659221,Implement new UI for contributor admin dashboard Desktop+Mobile: GSoC M1.7,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes part of #17440  .
2. This PR does the following: Implements new UI for contributor-admin-dashboard, along with feature flag `CD_NEW_UI`. It implements both Desktop and Mobile views.
3. Link to the mocks : [Mocks](https://www.figma.com/file/bmyOkQwosePcoNAr45Rdk0/Admin-Dashboard?node-id=35%3A3752&mode=dev)

## Essential Checklist

- [x] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).


## Testing doc (for PRs with Beam jobs that modify production server data)

<!--
If this PR affects production server data, please follow
[these instructions](https://github.com/oppia/oppia/wiki/Testing-jobs-and-other-features-on-production#submitting-a-pr-with-a-new-job-or-feature-that-requires-third-party-api)
and link to the job request doc here.

Otherwise, please delete this section.
-->

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

The above should be done for all PRs, including short ones (e.g. a single-line change).
However, if the changes in your PRs are autogenerated via a script and you cannot
provide proof for the changes then please leave a comment ""No proof of changes
needed because {{Reason}}"" and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network
[Screencast from 26-07-23 09:33:23 PM IST.webm](https://github.com/oppia/oppia/assets/91470808/41394eb9-74de-4276-94b0-67408fd88920)



<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone
[Screencast from 26-07-23 09:35:29 PM IST.webm](https://github.com/oppia/oppia/assets/91470808/ad5480fa-8bc9-437b-87ac-b2ab72233a43)



<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Never force push! If you do, your PR will be closed.
- Make sure your PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,18669,https://api.github.com/repos/oppia/oppia/pulls/18669,https://github.com/oppia/oppia/pull/18669,closed,3126,91,31,69,27,22,1,1,[{'name': 'PR: LGTM'}],2023-07-23 16:38:43+00:00,2023-07-27 22:12:38+00:00,365635.0,"4 days, 5:33:55","[{'comment_id': 1274941999, 'comment_body': '```suggestion\r\n * @fileoverview Unit tests for contributor admin dashboard page component.\r\n```', 'comment_created': datetime.datetime(2023, 7, 26, 13, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1274942177, 'comment_body': '```suggestion\r\n// Copyright 2023 The Oppia Authors. All Rights Reserved.\r\n```', 'comment_created': datetime.datetime(2023, 7, 26, 13, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1275249532, 'comment_body': '```suggestion\r\n// Copyright 2023 The Oppia Authors. All Rights Reserved.\r\n```', 'comment_created': datetime.datetime(2023, 7, 26, 16, 57, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1275281883, 'comment_body': 'This is too broad. CD_ADMIN_DASHBOARD_NEW_UI would be better, because the CD refers to /contributor-dashboard and we might need to do other things there. Make your feature flags specific.', 'comment_created': datetime.datetime(2023, 7, 26, 17, 28, 53, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1275283331, 'comment_body': 'This does not follow the existing UpperCamelCase convention.', 'comment_created': datetime.datetime(2023, 7, 26, 17, 30, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1275293353, 'comment_body': 'Can you rename these variables to have proper meanings?', 'comment_created': datetime.datetime(2023, 7, 26, 17, 38, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1275295784, 'comment_body': 'Why topicIds optional?', 'comment_created': datetime.datetime(2023, 7, 26, 17, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1275296029, 'comment_body': 'Why is this optional?', 'comment_created': datetime.datetime(2023, 7, 26, 17, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1275296725, 'comment_body': ""Why `'es'`? Can it be a const?"", 'comment_created': datetime.datetime(2023, 7, 26, 17, 42, 26, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1275297973, 'comment_body': 'Why are these 24? Here and below. Can they be const somewhere?', 'comment_created': datetime.datetime(2023, 7, 26, 17, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1275300293, 'comment_body': 'Why 20? Can it be a const?', 'comment_created': datetime.datetime(2023, 7, 26, 17, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chris7716', 'type': 'User'}, {'comment_id': 1275729001, 'comment_body': 'These are supposed to be optional cause will making the request to the handler, we only have to pass filters which are set otherwise we are not supposed to pass them. This is partially implemented, it will make more sense once we implement filtering and sorting in frontend as well.', 'comment_created': datetime.datetime(2023, 7, 27, 4, 50, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1275729281, 'comment_body': 'This is passed as hardcoded for now, till we implement sorting and filtering.', 'comment_created': datetime.datetime(2023, 7, 27, 4, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1275730768, 'comment_body': 'It is defaulted for now, this will change according to user preference.All the pagination, sorting and filtering from frontend is hardcoded for now.', 'comment_created': datetime.datetime(2023, 7, 27, 4, 54, 19, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1275781534, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 7, 27, 6, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1275781621, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 7, 27, 6, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1275781785, 'comment_body': 'Changed. Thanks for the nit.', 'comment_created': datetime.datetime(2023, 7, 27, 6, 19, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1275781992, 'comment_body': 'Sound reasonable. Updated. PTAL.', 'comment_created': datetime.datetime(2023, 7, 27, 6, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1275782163, 'comment_body': 'Fixed. ', 'comment_created': datetime.datetime(2023, 7, 27, 6, 20, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1275782345, 'comment_body': 'Fixed. PTAL again.', 'comment_created': datetime.datetime(2023, 7, 27, 6, 20, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1275782782, 'comment_body': ""Yeah, topicIds shouldn't be optional. Fixed."", 'comment_created': datetime.datetime(2023, 7, 27, 6, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1275783094, 'comment_body': 'Sorry, it was dummy values while testing. Fixed.', 'comment_created': datetime.datetime(2023, 7, 27, 6, 21, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5757c0499f74e061065f91371ad1d485fd2a7f60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d5423c9feb3a9f8bb53037c4c546ddda285327', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4c16fe508d34c9099606b9438afa3f0f620082', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aebbdd232cf7da200bc94c8c83632d0647b8dcc9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c52b49a862ae6a3af4885a8ce8189fc13d89e385', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9e65f919601eb901a0d71c006781d09a180d70d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c869c12fc35dca9c781515a6bb8acef1a27d03cb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4b2dc4cdcc7cb93b5fee44bcfcdedecb537ddb0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07cc9fdf5b3376cd6c8880a07711c0b2eb7711ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bc3349367e25e3c03a85fd364dfc4e478033048', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '747729d862e5555ebe008c1eb5f230e270e6ce1f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dd2b77cd069ca417824cc7bb8b6c5f4291ee06b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3db4d39510120e8d1d7e4eee132259bbfb5a594a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea3ec713b9f72eb6847fb82644bd3863cb6024ba', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0f722789ba718d14ac2a7986d7b0986e926e87f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45a27157c97af232390ba4e2afb7979353c3a0bd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '899f6cb1b5f7dca83e9dbe15d080dad9f50fb8f3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba4429c6d8c699b590c0c954dc202c72caf32c60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04e8e9f957423cf33280d6f567576aa74bcd0c80', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75342da2e7e498b46e859c42b755dd969ffd66eb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f75f45975033e6eb4dfc800f5354c6d39a2280c2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4554307a25513104226c3b559ae59e0677c5e006', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3250957fba49938ba8e84672aa33f78c89391053', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bd244c48d2db2a2b65917b39e5b189999ed3a08', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2b05ddd881376ed49e52ae42acf8640c0c4e6aa', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1457f8a0e04683e328aa95b322a1b2abf1d748da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b55dac2651d670eb285cd1e7ed2374d87f82b55', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3153e07be7eda70ee1d463e4dc4bb197a1d0273d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb7aa4ad8cc879022e696ef602f5037eec2ea205', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa6ad9ff52982e4e0ffc16fae4499c07c7a1c880', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d48c2e9f170a6682e4a8eede09c80e6697fa267', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57656a12fd94fc1cbe724bbf599d0c064c30fb0e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '050e7fa9f6c239a0ec80b1867b890dd5efabc9d6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a94f7897c0cf1c737bc92b90a5af0aa3c77eaf25', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81f9ece6389f5cdb9f76677e602deb4b455faffc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b51dc32f422e7a8f55838060c93b4854e0f694a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d8075b2b8eb445fd7054d89a978c41d4c71e213', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd07b23e678e9af4325ee5b5d94a4abbd8020ca6b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3051f068a27cb2f03729e0bef4415da72fcebbd0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2744db7e9cd02865c535fa9fd0fa1b30342f1c96', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b69079d70c830b7b613de7d4b5e498ec5379a1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e86803cbf69c26d62a8f3a7d610876627dfb1c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2e92585e73946e17addc15aa04e2b262fc277c4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3e713c8e5c04bb5f3fb32d39a86df9933cbfa10', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bff1554b68bea93a7bc49f2b1ac90d7fed40213', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9f3442ba7320dff2e52249cac2a7dd11bf34da2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fe5ffbfbb88829a2a11373d630f0ae09630719f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5ee25b7a9d940ceb7fc6fc478154bcfeeec0437', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50e877e6ae320cdc1d02dd75fd0f0a8ef17b2619', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '708fe7eaa1c5999f9423ccbbacae7f0795e48d58', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1464097354,Introduce Translation Coordinator Storage model and handlers changes required for Question and Translation coordinator stats: GSoC M2.1,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes part of #17440 .
2. This PR does the following: 

Introduces a new storage model `TranslationCoordinatorsModel`.

Handler changes in `ContributorDashboardAdminStatsHandler`.

## Essential Checklist

- [x] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).


## Testing doc (for PRs with Beam jobs that modify production server data)

<!--
If this PR affects production server data, please follow
[these instructions](https://github.com/oppia/oppia/wiki/Testing-jobs-and-other-features-on-production#submitting-a-pr-with-a-new-job-or-feature-that-requires-third-party-api)
and link to the job request doc here.

Otherwise, please delete this section.
-->

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface.

Please also include videos/screenshots of the developer tools
browser console, so that we can be sure that there are no console errors.

The above should be done for all PRs, including short ones (e.g. a single-line change).
However, if the changes in your PRs are autogenerated via a script and you cannot
provide proof for the changes then please leave a comment ""No proof of changes
needed because {{Reason}}"" and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Never force push! If you do, your PR will be closed.
- Make sure your PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,18744,https://api.github.com/repos/oppia/oppia/pulls/18744,https://github.com/oppia/oppia/pull/18744,closed,621,7,11,39,13,30,2,1,"[{'name': 'PR: LGTM'}, {'name': 'PR: Affects datastore layer'}]",2023-08-06 09:37:42+00:00,2023-08-18 18:16:10+00:00,1067908.0,"12 days, 8:38:28","[{'comment_id': 1285196569, 'comment_body': 'Does this field have a relation to the length of the coordinator_ids list? If yes, specify that explicitly and explain where the relation is enforced.', 'comment_created': datetime.datetime(2023, 8, 6, 11, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1285196729, 'comment_body': 'This docstring seems wrong.', 'comment_created': datetime.datetime(2023, 8, 6, 11, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1286207358, 'comment_body': 'Updated!', 'comment_created': datetime.datetime(2023, 8, 7, 17, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1286207471, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2023, 8, 7, 17, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1286632250, 'comment_body': 'Please proofread your comment for typos.', 'comment_created': datetime.datetime(2023, 8, 8, 6, 3, 26, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1286632530, 'comment_body': 'languages this user coordinates.', 'comment_created': datetime.datetime(2023, 8, 8, 6, 3, 53, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1286634119, 'comment_body': ""The number of coordinators of this language. This property is added to enable the sorting of datastore query results. It is equal to the length of the coordinator_ids field.\r\n\r\n\r\n(Also, make sure this condition is validated on all PUTs. If you're doing PUTs in a separate PR then please file an issue and TODO here, and make sure that the follow-up PR resolves the TODO. When doing puts, declare a validate() method in the domain layer and make sure the data passes through validate() before being transformed to a storage model object and committed to the datastore -- follow the patterns established in exp_services.py.)"", 'comment_created': datetime.datetime(2023, 8, 8, 6, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1287095681, 'comment_body': 'Why type ignore over here?\r\nWhy dont we add this attr to the typedict if its necessary?\r\n', 'comment_created': datetime.datetime(2023, 8, 8, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1287096486, 'comment_body': 'same as above', 'comment_created': datetime.datetime(2023, 8, 8, 13, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1287097422, 'comment_body': '```suggestion\r\n            last_activity_days = int(\r\n                (datetime.datetime.today() - last_activity).days\r\n            )\r\n```', 'comment_created': datetime.datetime(2023, 8, 8, 13, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1287098206, 'comment_body': 'I dont think we should use type ignore over here', 'comment_created': datetime.datetime(2023, 8, 8, 13, 11, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1287100401, 'comment_body': ""```suggestion\r\n        self.assertEqual(\r\n            [stat['language_id'] for stat in response['stats']],\r\n            ['hi', 'es']\r\n        )\r\n```\r\nmaybe?"", 'comment_created': datetime.datetime(2023, 8, 8, 13, 13, 8, tzinfo=datetime.timezone.utc), 'commenter': 'aasiffaizal', 'type': 'User'}, {'comment_id': 1287996173, 'comment_body': 'The typed dict we are getting in param are the values from backend but we are returning the dict with some additional values. I have implemented 2 different typed dicts for param and return. The reason for using type ignore is because if we add a key in a typed dict mypy considers it an error. I have mentioned the same in above comment.', 'comment_created': datetime.datetime(2023, 8, 9, 6, 13, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1287997616, 'comment_body': 'Above we are adding a new key `translators_count` and here we are adding the key `reviewers_count`', 'comment_created': datetime.datetime(2023, 8, 9, 6, 15, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1287999051, 'comment_body': ""I adapted this pattern after seeing the some examples from the codebase. MyPy doesn't allow key addition or deletion. If we have a better way to handle this please let me know."", 'comment_created': datetime.datetime(2023, 8, 9, 6, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1288104383, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 8, 9, 8, 2, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1288104653, 'comment_body': 'Sounds good. Updated!', 'comment_created': datetime.datetime(2023, 8, 9, 8, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1288107787, 'comment_body': 'Thanks for the help with docstring. I have created a new issue #18762 and added a comment. PTAL.', 'comment_created': datetime.datetime(2023, 8, 9, 8, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1288108101, 'comment_body': 'Updated!', 'comment_created': datetime.datetime(2023, 8, 9, 8, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1288108435, 'comment_body': 'Sorry for that. Fixed.', 'comment_created': datetime.datetime(2023, 8, 9, 8, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1288261832, 'comment_body': ""This is a sentence fragment ... I don't really understand it. Can you write this docstring more coherently?"", 'comment_created': datetime.datetime(2023, 8, 9, 10, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1288262524, 'comment_body': 'TODO(#18762): Add a ...\r\n\r\n(TODOs should always be instructions.)', 'comment_created': datetime.datetime(2023, 8, 9, 10, 12, 36, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1289979763, 'comment_body': 'Will it provide all the different user_ids to a given user when they export their data? ', 'comment_created': datetime.datetime(2023, 8, 10, 11, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1292824678, 'comment_body': 'No, not all the ids will be exported rather only the particular user_id mapped with the coordinated languages will be exported, If you look at `export_data()` method it will clear. PTAL.', 'comment_created': datetime.datetime(2023, 8, 13, 16, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1292829422, 'comment_body': 'PTAL again. Does it look good now?', 'comment_created': datetime.datetime(2023, 8, 13, 17, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1292829431, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 8, 13, 17, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1292830020, 'comment_body': 'Indentation of the continuation line is wrong, you should have a space before the paren, the paren should be next to the word after it, the part inside the paren should start with a lowercase letter, and you are missing a period at the end.', 'comment_created': datetime.datetime(2023, 8, 13, 17, 31, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1292830103, 'comment_body': '...to verify that the coordinators_count equals the length of coordinator_ids.', 'comment_created': datetime.datetime(2023, 8, 13, 17, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 1292839304, 'comment_body': 'PTAL again.', 'comment_created': datetime.datetime(2023, 8, 13, 18, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1292839320, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 8, 13, 18, 49, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5757c0499f74e061065f91371ad1d485fd2a7f60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d5423c9feb3a9f8bb53037c4c546ddda285327', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4c16fe508d34c9099606b9438afa3f0f620082', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aebbdd232cf7da200bc94c8c83632d0647b8dcc9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bb334787dc584204209080908b905910ad39c1e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9df7c25150b5f3b5405a358d182852128bb9db96', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cb1a8a90f2306566694bf8043adb3cbc8dcb976', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc53f298dc153d1807ed34a6f74bea55b73600c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fe0440ab34c7f0409f107174b2ca48f31c587b7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e14c166bd118e10ffcb17b1ab870ba495de1212', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e52c226143bdbd6a0d4ae3a7cb1dd06613ce23dd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a4c00e7cade2a7b20b6d2fd48453e5f850a679', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91542bfbad9939def7bcd7eadec54850f1f90dfb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5d527a5966354a9a060ea4ce7ca62aacab01a69', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e9af8321ff37bdd7dbb00e1c21b06144d9b0b84', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef53f79c96cfe1496177e62dfe44d0a2a9b3bea4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ac7365696c276dbd43a1b88b9d04fb6fa5575f9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ddc6815d78f48cdb97c44a737e4456e622c431a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b0ff9520d58a61ba1f814125f75ada6de6545cf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd474ec8867e612c4ca61d11b1ef3dace9c22ab1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1512496716,Introducing Translation Coodinator Role and e2e tests for new CD Admin Dashboard: GSoCM2.2,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes part of #17440 .
2. This PR does the following: 
- Introduces new role of Translation Coordinator.
- Restricted views for contributor-admin-dashboard.

The views will be as follows

        Translation Coordinator: 
- Translation Submitters
- Translation Reviewes


         Question Coordinator:
- Question Submitters
- Question Reviewers


**- End-to-End tests for new contributor admin dashboard.**

## Essential Checklist

- [x] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] My PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide).
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).

## Proof that changes are correct
[Screencast from 22-09-23 09:01:38 PM IST.webm](https://github.com/oppia/oppia/assets/91470808/3239cba1-d37e-4264-9e11-8481b84a0a63)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface. Please also include
videos/screenshots of the developer tools browser console, so that we can be
sure that there are no console errors.

When you make updates to the PR, please update these videos/screenshots as well.
You can drop videos/screenshots from previous versions of the PR.

The above should be done for all PRs, including short ones (e.g. a single-line change).
However, if the changes in your PRs are autogenerated via a script and you cannot
provide proof for the changes then please leave a comment ""No proof of changes
needed because {{Reason}}"" and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Never force push! If you do, your PR will be closed.
- To reply to reviewers, follow these instructions: https://github.com/oppia/oppia/wiki/Make-a-pull-request#step-5-address-review-comments-until-all-reviewers-approve
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,18867,https://api.github.com/repos/oppia/oppia/pulls/18867,https://github.com/oppia/oppia/pull/18867,closed,714,41,22,66,29,132,2,1,"[{'name': 'PR: LGTM'}, {'name': 'PR: Affects datastore layer'}]",2023-09-12 17:08:09+00:00,2023-09-26 19:20:14+00:00,1217525.0,"14 days, 2:12:05","[{'comment_id': 1325416993, 'comment_body': 'Is the extra newline needed here?', 'comment_created': datetime.datetime(2023, 9, 14, 6, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1325419833, 'comment_body': 'Create an issue for this and provide the link here. Prefix the comment with `TODO:`.', 'comment_created': datetime.datetime(2023, 9, 14, 6, 26, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Lawful2002', 'type': 'User'}, {'comment_id': 1328104315, 'comment_body': 'Not necessary, fixed it!', 'comment_created': datetime.datetime(2023, 9, 17, 14, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1328104325, 'comment_body': 'Done!.\r\n', 'comment_created': datetime.datetime(2023, 9, 17, 14, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1331054768, 'comment_body': 'Can you please explain what is this selection variable for ?', 'comment_created': datetime.datetime(2023, 9, 20, 6, 20, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1331054844, 'comment_body': 'In updateSelection are we just setting activeTabName ? If yes why not just call `this.setActiveTab` directly instead of creating a new method here, or is there anything I m missing here ?', 'comment_created': datetime.datetime(2023, 9, 20, 6, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1331054949, 'comment_body': 'PTAL at previous comment.', 'comment_created': datetime.datetime(2023, 9, 20, 6, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1331554833, 'comment_body': ""This variable is used for changing values in dropdown when the user is in mobile view. You can see it's usage [here](https://github.com/oppia/oppia/pull/18867/files/89df8afc1ed1ead7c8be3046a52e02d3d6944edd#diff-de34ddb8699ce7fec21d168a2c7bb71e330ed07d363b7e9530c0e5f41c3e4a72R55)."", 'comment_created': datetime.datetime(2023, 9, 20, 12, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1331558214, 'comment_body': 'Actually this function is used in multiple places to update the selected value and the active tab value.', 'comment_created': datetime.datetime(2023, 9, 20, 12, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1331561142, 'comment_body': 'Selected value is updated via dropdown and activeTab value is updated via higher level tabs.', 'comment_created': datetime.datetime(2023, 9, 20, 12, 32, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1331587574, 'comment_body': ""Got it thanks, but then isn't selection a bit vague ? It's not conveying what's being selected, probably something like `selectedContributionType` would be more accurate, same for the `updateSelection`."", 'comment_created': datetime.datetime(2023, 9, 20, 12, 54, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Ash-2k3', 'type': 'User'}, {'comment_id': 1334544078, 'comment_body': 'Sg. I have changed both things please take a look. Thanls.', 'comment_created': datetime.datetime(2023, 9, 22, 15, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1335545455, 'comment_body': 'WHy are we using this flag here?', 'comment_created': datetime.datetime(2023, 9, 25, 8, 17, 41, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335545954, 'comment_body': 'WHy do we need this logic  here?', 'comment_created': datetime.datetime(2023, 9, 25, 8, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335547887, 'comment_body': ""I'm expecting this to be defined inside utils file ie., mostly the elements are defined in the respective utils file."", 'comment_created': datetime.datetime(2023, 9, 25, 8, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335649792, 'comment_body': 'what element  is an `image`? i.,e is it a  button or static image? How does it have the static `e2e-test-image` class? ', 'comment_created': datetime.datetime(2023, 9, 25, 9, 44, 22, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335694890, 'comment_body': 'Maybe  define this in utils file as  copyElementWithClassName(elementDescription, elementClassName) and use it here*', 'comment_created': datetime.datetime(2023, 9, 25, 10, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335697155, 'comment_body': ""WHy are we having the width check here? (Don't we have control over width when running e2e tests?)\r\n\r\nIf we want to test behavior for different screens, can't we have different describe/it blocks for each scenario?"", 'comment_created': datetime.datetime(2023, 9, 25, 10, 28, 52, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335700388, 'comment_body': 'maybe define this in the utils file as clickFiestOpportunityInSmallScreenView?\r\n\r\nAlso, why are we selecting the random first item where as for bigger screen selecting a specific item?', 'comment_created': datetime.datetime(2023, 9, 25, 10, 31, 23, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335700730, 'comment_body': 'Define thsi in utils file*', 'comment_created': datetime.datetime(2023, 9, 25, 10, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335702595, 'comment_body': 'Ditto define these in utils files, follow this pattern for all other palces*', 'comment_created': datetime.datetime(2023, 9, 25, 10, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335704257, 'comment_body': ""```suggestion\r\n    await waitFor.presenceOf(statsTable, 'Stats table is not visible');\r\n```"", 'comment_created': datetime.datetime(2023, 9, 25, 10, 35, 4, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335704964, 'comment_body': 'name of the function should be camelCase*', 'comment_created': datetime.datetime(2023, 9, 25, 10, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335705081, 'comment_body': 'DItto*', 'comment_created': datetime.datetime(2023, 9, 25, 10, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335706622, 'comment_body': 'The `number` here creates confusion with the type `number` in the type script. Maybe use elementsCount*', 'comment_created': datetime.datetime(2023, 9, 25, 10, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335707144, 'comment_body': 'Maybe call it expectStatsElementCountToBe', 'comment_created': datetime.datetime(2023, 9, 25, 10, 38, 14, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335708100, 'comment_body': 'why precenceOf here and visibiltyOf elesewhere?', 'comment_created': datetime.datetime(2023, 9, 25, 10, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335708840, 'comment_body': 'what are we checking here?', 'comment_created': datetime.datetime(2023, 9, 25, 10, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335709309, 'comment_body': 'Incorrect description*\r\n', 'comment_created': datetime.datetime(2023, 9, 25, 10, 40, 29, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335710344, 'comment_body': 'WHy are we having `Test` prefix here?', 'comment_created': datetime.datetime(2023, 9, 25, 10, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335710470, 'comment_body': 'Ditto*', 'comment_created': datetime.datetime(2023, 9, 25, 10, 41, 34, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335711403, 'comment_body': 'Add `language` value in the decsrition, helps with debugging i.e, the error message will clearly show which language was attempted for selection', 'comment_created': datetime.datetime(2023, 9, 25, 10, 42, 29, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335712471, 'comment_body': 'Add a check to ensure the langaugeSelector is opened.', 'comment_created': datetime.datetime(2023, 9, 25, 10, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335714387, 'comment_body': 'The description should be the name of the button/element. Maybe ""Review tab button""', 'comment_created': datetime.datetime(2023, 9, 25, 10, 45, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335714887, 'comment_body': 'Do we have multiple review tabs button in view?', 'comment_created': datetime.datetime(2023, 9, 25, 10, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335716335, 'comment_body': '```suggestion\r\n      featureElement.$(addFeatureRuleButtonLocator)\r\n```', 'comment_created': datetime.datetime(2023, 9, 25, 10, 47, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1335759934, 'comment_body': ""The image is neither a button nor static image. It is part of card content which is to be translated to a different language. That's the reason it have a static class."", 'comment_created': datetime.datetime(2023, 9, 25, 11, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1335761853, 'comment_body': 'These are setUp steps are we are not testing this. I needed to populate data for stats to be displayed in cd admin dashboard, so most of this is legacy code which I reused to generate data.', 'comment_created': datetime.datetime(2023, 9, 25, 11, 36, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1335779023, 'comment_body': 'We are checking if the row is expanded on click or not.', 'comment_created': datetime.datetime(2023, 9, 25, 11, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1335794346, 'comment_body': 'Yeah, we have multiple review tabs. I think review buttons would be a more suitable name for it.', 'comment_created': datetime.datetime(2023, 9, 25, 12, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336237043, 'comment_body': ""Here lint check prevents us from directly using `elem.setValue()` it suggests to use `action.setValue()` but if I change it, it doens't seem to set the value correctly and tests fail."", 'comment_created': datetime.datetime(2023, 9, 25, 18, 14, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336237440, 'comment_body': 'I used the existing refrence here. Removed it.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336237592, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336238304, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336238674, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336238852, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336239004, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 16, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336239136, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 16, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336239415, 'comment_body': 'Updated. Thanks for nit.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336239547, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336239680, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336245316, 'comment_body': 'Actually I was doing some debugging with `presenceOf` and forgot to change it to `visibiltyOf`. Changed. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 23, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336245577, 'comment_body': 'Changed. Thanks for the nit.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336246195, 'comment_body': 'I wrote it in the sense of Unit tests and forgot it was e2e tests. Sorry for that. Updated/', 'comment_created': datetime.datetime(2023, 9, 25, 18, 24, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336246343, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336246518, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 24, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336248053, 'comment_body': 'Updated. PTAL.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336248274, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 26, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336250360, 'comment_body': '```suggestion\r\n    this.userService.getUserInfoAsync().then(userInfo => {\r\n```', 'comment_created': datetime.datetime(2023, 9, 25, 18, 28, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1336252688, 'comment_body': 'Flip the condition using a guard clause to reduce nesting and increase readability.\r\n```suggestion\r\n      if (username === null) {\r\n        return;\r\n      }\r\n     ...\r\n```', 'comment_created': datetime.datetime(2023, 9, 25, 18, 31, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1336258885, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336259027, 'comment_body': 'Sg. Done.', 'comment_created': datetime.datetime(2023, 9, 25, 18, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1336628028, 'comment_body': 'is there any issue with creating the UserInfo object here? (The existing code is not maintainable i.e, if someone ad/removes a function from UserInfo class they will have to modify this place unexpectedly.)\r\n\r\nDitto below*', 'comment_created': datetime.datetime(2023, 9, 26, 5, 4, 22, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336629254, 'comment_body': 'Do we need this block? Considering the above two if black will result in the same value for the given situation. ', 'comment_created': datetime.datetime(2023, 9, 26, 5, 6, 45, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336629991, 'comment_body': 'Do we need this in the template? IF not, is there any specific reason for binding it to `object/this`?', 'comment_created': datetime.datetime(2023, 9, 26, 5, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336631043, 'comment_body': 'Any specific reason for using var and let for different places here?', 'comment_created': datetime.datetime(2023, 9, 26, 5, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336631692, 'comment_body': ""Can you please check action.setValue, how it's different any why it's causing this problem?"", 'comment_created': datetime.datetime(2023, 9, 26, 5, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336631986, 'comment_body': 'Do we need `width`?', 'comment_created': datetime.datetime(2023, 9, 26, 5, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336632245, 'comment_body': 'Why do we need to do this?', 'comment_created': datetime.datetime(2023, 9, 26, 5, 12, 3, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336633770, 'comment_body': 'Do we need these logics? if not please remove it from here and elsewhere*\r\n\r\n(Asking this as it adds discrepancy between tests i.e, there can be unexpected behaviour in the tests. In general, we avoid adding logic in the tests.)', 'comment_created': datetime.datetime(2023, 9, 26, 5, 15, 3, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336634480, 'comment_body': 'Define these on the top (maybe)?', 'comment_created': datetime.datetime(2023, 9, 26, 5, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336634781, 'comment_body': ""This comment doesn't seems relevent for the next line*"", 'comment_created': datetime.datetime(2023, 9, 26, 5, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336635497, 'comment_body': ""`await action.click('Copy button', copyButton);` CAn you please check whether action.click internally take cares of visibilityOf, if yes, please remove the duplicate check on line 131"", 'comment_created': datetime.datetime(2023, 9, 26, 5, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336636002, 'comment_body': ""```suggestion\r\n    await action.click('Copy Done button', doneButton);\r\n```"", 'comment_created': datetime.datetime(2023, 9, 26, 5, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336636067, 'comment_body': ""```suggestion\r\n    await action.click('Save button', saveButton);\r\n```"", 'comment_created': datetime.datetime(2023, 9, 26, 5, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336636472, 'comment_body': ""If we are going to remove width, then remove this if it's not needed."", 'comment_created': datetime.datetime(2023, 9, 26, 5, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336636707, 'comment_body': 'Define all elements on top*', 'comment_created': datetime.datetime(2023, 9, 26, 5, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336636854, 'comment_body': 'Ditto here and elsewhere*', 'comment_created': datetime.datetime(2023, 9, 26, 5, 20, 8, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336637149, 'comment_body': '```suggestion\r\n  this.navigateToQuestionReviewerTab = async function() {\r\n```', 'comment_created': datetime.datetime(2023, 9, 26, 5, 20, 40, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336637285, 'comment_body': '```suggestion\r\n  this.navigateToTranslationSubmitterTab = async function() {\r\n```', 'comment_created': datetime.datetime(2023, 9, 26, 5, 20, 54, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336637435, 'comment_body': '```suggestion\r\n  this.navigateToTranslationReviewerTab = async function() {\r\n```', 'comment_created': datetime.datetime(2023, 9, 26, 5, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336705295, 'comment_body': '```suggestion\r\n    await action.click(`Language ${language} option`, selectorOption);\r\n```', 'comment_created': datetime.datetime(2023, 9, 26, 6, 51, 12, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336710672, 'comment_body': ""`action.setValue` internally calls `elem.setValue` so it should work, can you please check what's going on? In general, we avoid having flags and use the actions to avoid unexpected flakiness in CI."", 'comment_created': datetime.datetime(2023, 9, 26, 6, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336711082, 'comment_body': 'I see it in other places as well, should we remove it?', 'comment_created': datetime.datetime(2023, 9, 26, 6, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336713336, 'comment_body': ""It's okay to use existing code but at your own responsibility to make sure you understand what's going on and only use the required steps. Can we remove things that are not required for this test setup?"", 'comment_created': datetime.datetime(2023, 9, 26, 6, 58, 37, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336714103, 'comment_body': 'I think the initial capital `S` is still not died (not sure!), can you please check and fix it?', 'comment_created': datetime.datetime(2023, 9, 26, 6, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1336717784, 'comment_body': 'so maybe rename it to expectStatsRowsAreEpanded().\r\n\r\nNote: The `expect` prefix is used for testing blocks.', 'comment_created': datetime.datetime(2023, 9, 26, 7, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1337392981, 'comment_body': 'I think the reason is elem is a param for the async function and on passing it to `action.setValue` it is loosing context.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 19, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337405756, 'comment_body': 'The above blocks will initialize the array with only 2 values for each true condition.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337408980, 'comment_body': 'Yes we need it in the template to render some components based on these flags.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 30, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337415375, 'comment_body': 'No speicfic reason, used it alternatively', 'comment_created': datetime.datetime(2023, 9, 26, 15, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337418535, 'comment_body': 'We are setting up attributes of exploration via settings tab like title, category, objective, etc', 'comment_created': datetime.datetime(2023, 9, 26, 15, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337438632, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 50, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337438942, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 50, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337439080, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 51, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337439287, 'comment_body': 'Sg. Updated.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 51, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337441496, 'comment_body': 'If I create a UserInfo object with only attributes needed, it throws error of missing attributes.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 53, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337441948, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 53, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337442383, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337442526, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 53, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337443097, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337443583, 'comment_body': 'Done. Thanks for pointing out.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337444062, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337444292, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 26, 15, 55, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1337444665, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 9, 26, 15, 55, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1339534637, 'comment_body': 'Are you sure? (Note: By UserInfo obejct I mean `new UserInfo(...)`.)\r\n\r\nCan you please share the log, I can help you fi it if needed?', 'comment_created': datetime.datetime(2023, 9, 28, 5, 9, 19, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339535759, 'comment_body': ""Can't we simplfy it to:\r\n```\r\nCONTRIBUTION_TYPES = [];\r\nif(A) CONTRIBUTION_TYPES.push(a,b)\r\nif(B) CONTRIBUTION_TYPES.push(c,d)\r\n```\r\n\r\nThis way we won't have to duplicate check off `if(A&B)`, right?"", 'comment_created': datetime.datetime(2023, 9, 28, 5, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339536187, 'comment_body': ""Let''s use `let` in all the place to avoid confusion?"", 'comment_created': datetime.datetime(2023, 9, 28, 5, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339536762, 'comment_body': 'Ah, I mean why do we need to click `basicSettings`? Is it any form of button or dropdown?', 'comment_created': datetime.datetime(2023, 9, 28, 5, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339537316, 'comment_body': 'Is it resolved?', 'comment_created': datetime.datetime(2023, 9, 28, 5, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339537431, 'comment_body': 'is thsi resolved?', 'comment_created': datetime.datetime(2023, 9, 28, 5, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339537804, 'comment_body': 'is this resolved?', 'comment_created': datetime.datetime(2023, 9, 28, 5, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339537897, 'comment_body': 'Is this resolved?', 'comment_created': datetime.datetime(2023, 9, 28, 5, 14, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339538023, 'comment_body': 'is this resolved?', 'comment_created': datetime.datetime(2023, 9, 28, 5, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339538102, 'comment_body': 'is this resolved?', 'comment_created': datetime.datetime(2023, 9, 28, 5, 14, 59, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339543632, 'comment_body': ""I'm finding it difficult to understand, it would be great if you could explain it in detail. \r\n\r\nRegarding the `function` in context is `async`, that's because we are using `await` inside, right? The entire `beforeAll` section is in `async` (line 74)."", 'comment_created': datetime.datetime(2023, 9, 28, 5, 23, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339545559, 'comment_body': 'Yes. have updated it before merging.', 'comment_created': datetime.datetime(2023, 9, 28, 5, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1339545773, 'comment_body': 'Updated it before merging.', 'comment_created': datetime.datetime(2023, 9, 28, 5, 26, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1339546045, 'comment_body': 'Updated it before merging.\r\n', 'comment_created': datetime.datetime(2023, 9, 28, 5, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1339546089, 'comment_body': 'Updated it before merging.\r\n\r\n', 'comment_created': datetime.datetime(2023, 9, 28, 5, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1339546441, 'comment_body': 'Updated it before merging.\r\n\r\n', 'comment_created': datetime.datetime(2023, 9, 28, 5, 27, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1339546503, 'comment_body': 'Updated it before merging.\r\n\r\n', 'comment_created': datetime.datetime(2023, 9, 28, 5, 27, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1339546919, 'comment_body': ""It's a tab."", 'comment_created': datetime.datetime(2023, 9, 28, 5, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1340225005, 'comment_body': 'Yeah that does the work. I might have been doing something wrong. Thanks for the help.', 'comment_created': datetime.datetime(2023, 9, 28, 14, 15, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1340225855, 'comment_body': 'Yeah. Sg. Implemented.', 'comment_created': datetime.datetime(2023, 9, 28, 14, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1340225984, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 28, 14, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1340227629, 'comment_body': 'Actually the passing the value of clickable element as `false` while calling action.setValue does the work.', 'comment_created': datetime.datetime(2023, 9, 28, 14, 17, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1340265981, 'comment_body': ""SO are we clicking it to open the tab? or is it already open? (Basically, I'm unable to understand what this click is doing and why do we need it?)"", 'comment_created': datetime.datetime(2023, 9, 28, 14, 41, 20, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1340272075, 'comment_body': ""Yeahs, so basically we don't want to click the element before setting the value! Thanks for looking into it and fixing it! :)\r\n\r\n(We try to avoid using pragmas/flags, in case we do, we write proper documentation/code-comment on why it's needed. Also, developers copy code from one place to another and the pragma/flags gets copied so that was the reason I was trying to get rid of it. I hope you can understand! :) )"", 'comment_created': datetime.datetime(2023, 9, 28, 14, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1340277512, 'comment_body': 'Can you please check whether we can use `action.select`?', 'comment_created': datetime.datetime(2023, 9, 28, 14, 49, 25, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1340285651, 'comment_body': ""Yeah that's understandable and it's always better to follow good coding practices. I am learning new things here. Thanks."", 'comment_created': datetime.datetime(2023, 9, 28, 14, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1340286887, 'comment_body': '![image](https://github.com/oppia/oppia/assets/91470808/13f5ab9f-be24-4d44-b4a7-cc21814723bc)\r\n\r\nI think this image will give you a better idea.', 'comment_created': datetime.datetime(2023, 9, 28, 14, 55, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5757c0499f74e061065f91371ad1d485fd2a7f60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d5423c9feb3a9f8bb53037c4c546ddda285327', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4c16fe508d34c9099606b9438afa3f0f620082', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aebbdd232cf7da200bc94c8c83632d0647b8dcc9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bb334787dc584204209080908b905910ad39c1e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9df7c25150b5f3b5405a358d182852128bb9db96', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cb1a8a90f2306566694bf8043adb3cbc8dcb976', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc53f298dc153d1807ed34a6f74bea55b73600c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fe0440ab34c7f0409f107174b2ca48f31c587b7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e14c166bd118e10ffcb17b1ab870ba495de1212', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e52c226143bdbd6a0d4ae3a7cb1dd06613ce23dd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a4c00e7cade2a7b20b6d2fd48453e5f850a679', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91542bfbad9939def7bcd7eadec54850f1f90dfb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5d527a5966354a9a060ea4ce7ca62aacab01a69', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e9af8321ff37bdd7dbb00e1c21b06144d9b0b84', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef53f79c96cfe1496177e62dfe44d0a2a9b3bea4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ac7365696c276dbd43a1b88b9d04fb6fa5575f9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ddc6815d78f48cdb97c44a737e4456e622c431a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b0ff9520d58a61ba1f814125f75ada6de6545cf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd474ec8867e612c4ca61d11b1ef3dace9c22ab1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c61ad5c1660739105e764c0cfa9f191208b972', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '506ea48ff67f2d442c56217bf7acab5d38f5ad49', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da445f47f1101f7b5b149292c0ecffca72da3404', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fea361e145fac8a0141dae412a67d937cc03dbd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c54ad2903d64a8f8de2cae1a036d857df4a42e1f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9873799f210e4b3e4702e4296a9a9c5e4e367c07', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '805e9b46656cc404c8df73c55248ffb644dd8cfc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca0bf17e41dddfd7208cf38b7d19a08a808d0d3b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76e76f982f8bb54f505f8053b3b85b68ba2c1601', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02178378b9ccddad923e47ab09b5a02631d69034', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02e64d0f20d17e43293df2b90da55c8449774b3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e65db93faee0cf5d032f32713cf45b51aa6a76b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7333810093e32fa2b859d3792d7fc5889cf7bdd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '672c154dfdf7ebdf693a49e3b05050747c2a14ae', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aed85bd531adcc41672f2d8b7981a9b4d38d429a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79a19814d02c2a1804590c5d1bb1ea9c073b62ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89df8afc1ed1ead7c8be3046a52e02d3d6944edd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '356d4fc97f1f0bb6b89e16f2b8bdc75c8ce72318', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '150a2494524b80eb86d530521f4d092383393f62', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2371c1444c72ffae2130c311fd2ac1ccd788e2e8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be1e86e29f0ec586b660a76b48836b8bf58c8fa9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0613cf441515538f51edf592ea8ee020e073dcd6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4c825a48baaac9dc9b99963221b352f846c7f5a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac1d14da3759cdd0ea7f073a865b59c0cdc1a38f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '757fa83c3f5c9bc4a6ee62172dff0ceef4b27ce3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdab586dc292fc69f729d1b7c285b01751d29bb7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d8fe7c441511d61f4531310b62ab5a95e04424c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1532584387,Changes to /admin page to promote a user to language/question coordinator or to deassign a user from coordinator rights.GSoC M2.3,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes #18904 and part of #17440 .
2. This PR does the following: Changes to /admin page to promote a user to language/question coordinator or to deassign a user from coordinator rights. Backend handler changes required for the same.
End-to-End tests for the flow promoting a user to translation coordinator.

## Essential Checklist

- [x] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] My PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide).
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).


## Proof that changes are correct
[Screencast from 24-09-23 04:00:43 PM IST.webm](https://github.com/oppia/oppia/assets/91470808/8c273eef-37cd-4e8b-af1c-ae9774184043)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface. Please also include
videos/screenshots of the developer tools browser console, so that we can be
sure that there are no console errors.

When you make updates to the PR, please update these videos/screenshots as well.
You can drop videos/screenshots from previous versions of the PR.

The above should be done for all PRs, including short ones (e.g. a single-line change).
However, if the changes in your PRs are autogenerated via a script and you cannot
provide proof for the changes then please leave a comment ""No proof of changes
needed because {{Reason}}"" and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Never force push! If you do, your PR will be closed.
- To reply to reviewers, follow these instructions: https://github.com/oppia/oppia/wiki/Make-a-pull-request#step-5-address-review-comments-until-all-reviewers-approve
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,18946,https://api.github.com/repos/oppia/oppia/pulls/18946,https://github.com/oppia/oppia/pull/18946,closed,1603,83,28,92,22,58,0,0,[],2023-09-27 14:37:37+00:00,2023-10-05 09:47:00+00:00,673763.0,"7 days, 19:09:23","[{'comment_id': 1339605153, 'comment_body': ""`get_translation_rights_with_user` function inside `suggestion_services` doesn't sound right to me as the suggestion should not be serving user's permissions/rights. Move it to  rights_services."", 'comment_created': datetime.datetime(2023, 9, 28, 6, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339606570, 'comment_body': 'I took a quick pass an seems like all the permission models/object/services are inside the suggestion context, can we move it to user or rights context? ', 'comment_created': datetime.datetime(2023, 9, 28, 6, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339624154, 'comment_body': 'Was there any specific reason for creating a separate model and not using the existing `UserContributionRights` model?', 'comment_created': datetime.datetime(2023, 9, 28, 6, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1339650511, 'comment_body': '`UserContributionRights` have one instance per user and the new model has one instance per language. We are displaying stats of all the languages at once in the new dashboard so it would have been to many calls to the datastore. [Mock Link](https://www.figma.com/file/bmyOkQwosePcoNAr45Rdk0/Admin-Dashboard?node-id=35%3A3752&mode=dev) to get a better idea of what we are planning to do.\r\n\r\n`UserContributionRights` stores contribution rights of the user and the new model stores administrative rights of the user', 'comment_created': datetime.datetime(2023, 9, 28, 7, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1340004129, 'comment_body': 'Since the rights were related to suggestions so I added it in the `suggestion_services`. Moved it to `user_services`. PTAL.', 'comment_created': datetime.datetime(2023, 9, 28, 11, 50, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1340927956, 'comment_body': 'This should be `test_assigning_two_languages_to_translation_coordinator`?', 'comment_created': datetime.datetime(2023, 9, 29, 5, 57, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lkbhitesh07', 'type': 'User'}, {'comment_id': 1341053734, 'comment_body': 'Yeah you are correct. Thanks for the nit.', 'comment_created': datetime.datetime(2023, 9, 29, 8, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1342204931, 'comment_body': 'This test case reads ""When getting the translation coordinators models by a given user, then the result should have two models"", which feels incomplete. Considering the behavior we\'re trying to test, I feel that the test should also explicitly check that all `TranslationCoordinatorsModel` instances that came from the query should have the same user ID. Then, it\'ll read something like ""When getting the translation coordinators models by a given user, then the result should have two models, both with the same user"", which feels much more complete.', 'comment_created': datetime.datetime(2023, 10, 1, 23, 52, 9, tzinfo=datetime.timezone.utc), 'commenter': 'StephenYu2018', 'type': 'User'}, {'comment_id': 1342208511, 'comment_body': ""If we're trying to de-assign a user from all languages, does it matter that we start out with *specifically* 3 languages? I think that any discrete number of languages would be fine. It isn't important to explicitly check that our setup for this test resulted in the user being assigned 3 languages. At best, it's pointless and at worst, it confuses the reader about what is important to this test's results."", 'comment_created': datetime.datetime(2023, 10, 2, 0, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'StephenYu2018', 'type': 'User'}, {'comment_id': 1342220946, 'comment_body': ""I think these 2 assert statements don't need to be there. It's enough to check that we got the same exact model by matching the model IDs. By removing the 2 assert statements, the test will make it abundantly clear to the reader that each `TranslationCoordinatorModel` is identified by its language."", 'comment_created': datetime.datetime(2023, 10, 2, 1, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'StephenYu2018', 'type': 'User'}, {'comment_id': 1342223807, 'comment_body': 'Typo: Extra `r` after Coordinator', 'comment_created': datetime.datetime(2023, 10, 2, 1, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'StephenYu2018', 'type': 'User'}, {'comment_id': 1343069567, 'comment_body': 'Sounds about right, I have added it PTAL.', 'comment_created': datetime.datetime(2023, 10, 2, 19, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343070814, 'comment_body': 'If not 3, we atleast need to assign 2 languages to the user cause this test is different from the one where we deassign user from one language at a time. I have reduced it to 2. How does that sounds to you?', 'comment_created': datetime.datetime(2023, 10, 2, 19, 24, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343070979, 'comment_body': 'Sg. Thanks.', 'comment_created': datetime.datetime(2023, 10, 2, 19, 25, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343071242, 'comment_body': 'Thanks for the nit. Fixed.', 'comment_created': datetime.datetime(2023, 10, 2, 19, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343524378, 'comment_body': '```suggestion\r\n    """"""Dict representation of TranslationCoordinatorStats domain object.""""""\r\n```', 'comment_created': datetime.datetime(2023, 10, 3, 5, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343525330, 'comment_body': '```suggestion\r\nclass TranslationCoordinatorStatsUnitTests(\r\n    test_utils.GenericTestBase\r\n):\r\n```', 'comment_created': datetime.datetime(2023, 10, 3, 5, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343526202, 'comment_body': 'Do not sue pylint disable.', 'comment_created': datetime.datetime(2023, 10, 3, 5, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343526669, 'comment_body': '```suggestion\r\n    if (\r\n        role_services.ACTION_MODIFY_CORE_ROLES_FOR_ANY_ACTIVITY not in\r\n        committer.actions\r\n    ):\r\n```', 'comment_created': datetime.datetime(2023, 10, 3, 5, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343527152, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2023, 10, 3, 5, 46, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343527729, 'comment_body': '```suggestion\r\n    translation_coordinator_models: Sequence[\r\n        suggestion_models.TranslationCoordinatorsModel\r\n    ] = suggestion_models.TranslationCoordinatorsModel.get_by_user(user_id)\r\n    \r\n    return [\r\n        get_translation_rights_from_model(model)\r\n        for model in translation_coordinator_models\r\n        if model is not None\r\n    ]\r\n```', 'comment_created': datetime.datetime(2023, 10, 3, 5, 47, 47, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343528627, 'comment_body': ""```suggestion\r\n        self.set_translation_coordinators([\r\n            user_services.get_username(\r\n                self.user_id_translationcoordinator\r\n            )\r\n        ], 'en')\r\n```"", 'comment_created': datetime.datetime(2023, 10, 3, 5, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343529001, 'comment_body': ""```suggestion\r\n            'UnauthorizedUserException: Could not assign new role.'\r\n        ):\r\n```"", 'comment_created': datetime.datetime(2023, 10, 3, 5, 49, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343529238, 'comment_body': ""```suggestion\r\n        with self.assertRaisesRegex(\r\n            Exception, 'This user already is a coordinator for this language'\r\n        ):\r\n```"", 'comment_created': datetime.datetime(2023, 10, 3, 5, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343529705, 'comment_body': 'Fix this also below', 'comment_created': datetime.datetime(2023, 10, 3, 5, 50, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343530211, 'comment_body': '```suggestion\r\n    def get_by_user(cls, user_id: str) -> Sequence[\r\n        TranslationCoordinatorsModel\r\n    ]:\r\n```', 'comment_created': datetime.datetime(2023, 10, 3, 5, 50, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343530354, 'comment_body': '```suggestion\r\n    def test_get_returns_model_when_it_exists(self) -> None:\r\n```', 'comment_created': datetime.datetime(2023, 10, 3, 5, 51, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343530435, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2023, 10, 3, 5, 51, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1343593740, 'comment_body': 'Define these on the top*', 'comment_created': datetime.datetime(2023, 10, 3, 6, 58, 41, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1343600297, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343600389, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343600490, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343600668, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 5, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343600772, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 5, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343600851, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 5, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343601011, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343601162, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343601303, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343601487, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343601706, 'comment_body': 'Done. Thanks for the review.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344389289, 'comment_body': '```suggestion\r\ndef get_translation_rights_with_user(user_id: str) -> List[\r\n    user_domain.TranslationCoordinatorStats\r\n]:\r\n```', 'comment_created': datetime.datetime(2023, 10, 3, 16, 19, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1344390711, 'comment_body': '```suggestion\r\n    model = suggestion_models.TranslationCoordinatorsModel.get(\r\n        language_id)\r\n```', 'comment_created': datetime.datetime(2023, 10, 3, 16, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1344395100, 'comment_body': 'Why do you even need to implement this? `get` is implemented in the base model', 'comment_created': datetime.datetime(2023, 10, 3, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1344425889, 'comment_body': ""We need to override the default method in base model cause if there's no model found for given id default method fails with an error but this method returns None instead. We need this functionality in the case where we check if the model exists and if it doesn't exists we create a new one. Please let me know if there's any concerns."", 'comment_created': datetime.datetime(2023, 10, 3, 16, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344426123, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 16, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344426243, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 16, 46, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1345688192, 'comment_body': ""Not quite. When we want all models that have a specific user, then after we've made the query to storage, we expect all the returned models to have the same user we've specified. So with the assert statements you've added:\r\n\r\n```python\r\n        self.assertEqual(\r\n            translation_coordinators_models[0].id,\r\n            self.LANGUAGE_4_ID\r\n        )\r\n        self.assertEqual(\r\n            translation_coordinators_models[1].id,\r\n            self.LANGUAGE_5_ID\r\n        )\r\n```\r\n\r\nWe don't expect nor care that the first model is for language `LANGUAGE_4_ID`, or that the second model is for language `LANGUAGE_5_ID`. These assert statements should be removed and replaced with the following:\r\n\r\n```python\r\n        self.assertIn(\r\n            self.USER_ID_2\r\n            translation_coordinators_models[0].coordinator_ids,\r\n        )\r\n        self.assertIn(\r\n            self.USER_ID_2\r\n            translation_coordinators_models[1].coordinator_ids,\r\n        )\r\n```"", 'comment_created': datetime.datetime(2023, 10, 4, 12, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'StephenYu2018', 'type': 'User'}, {'comment_id': 1345776553, 'comment_body': ""This method needs to be covered by tests. From what I've read, the features we want to provide by adding this method includes:\r\n- Our testing utilities `gives_translation_coordinator_role_in_a_language_to_users`\r\n  - **Motivation of scenario**: Users that are not translation coordinators will become translation coordinators \r\n  - **Action**: Giving translation coordinator role in a language to users without the role\r\n  - **Expected result**: All mentioned users are translation coordinators in the given language \r\n- Our testing utilities `adds_another_translation_coordinator_language_to_translation_coordinator`\r\n  - **Motivation of scenario**: Translation coordinator(s) can be assigned new languages without replacing their existing ones\r\n  - **Action**: Giving a unique translation coordinator language multiple times\r\n  - **Expected result**: The user(s) should have all of the given translation coordinator languages\r\n\r\nSo having 2 test cases that cover each of the aforementioned features should be adequate."", 'comment_created': datetime.datetime(2023, 10, 4, 13, 12, 47, tzinfo=datetime.timezone.utc), 'commenter': 'StephenYu2018', 'type': 'User'}, {'comment_id': 1345794703, 'comment_body': 'Remove this assert statement. If we want to ensure that calling `set_translation_coordinators` twice on the same user(s) assigns said user(s) with both translation coordinator languages, then write a separate test for `set_translation_coordinators`. For details about this test, please see my review comment in the `core/tests/test_utils.py` file.', 'comment_created': datetime.datetime(2023, 10, 4, 13, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'StephenYu2018', 'type': 'User'}, {'comment_id': 1345804775, 'comment_body': 'Again, please fix the typo. It should be `openTranslationCoordinatorRoleEditor`.', 'comment_created': datetime.datetime(2023, 10, 4, 13, 31, 53, tzinfo=datetime.timezone.utc), 'commenter': 'StephenYu2018', 'type': 'User'}, {'comment_id': 1345827507, 'comment_body': 'Sorry this thread was hidden to me. My response is in my second review.', 'comment_created': datetime.datetime(2023, 10, 4, 13, 46, 46, tzinfo=datetime.timezone.utc), 'commenter': 'StephenYu2018', 'type': 'User'}, {'comment_id': 1345830784, 'comment_body': ""Sorry I should've clarified that all instances of the method name with this typo should be fixed."", 'comment_created': datetime.datetime(2023, 10, 4, 13, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'StephenYu2018', 'type': 'User'}, {'comment_id': 1346004619, 'comment_body': 'You can do `.get(id, strict=False)` and that will return either the model or `None`, you do not need this reimplementation.', 'comment_created': datetime.datetime(2023, 10, 4, 15, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 1346119551, 'comment_body': 'Done. Thanks for the nit. Sorry for not checking for other typos as well.', 'comment_created': datetime.datetime(2023, 10, 4, 16, 0, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1346119895, 'comment_body': 'Sounds about right. Done. ', 'comment_created': datetime.datetime(2023, 10, 4, 16, 0, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1346120641, 'comment_body': 'Yeah, you are correct. Sorry I missed out on writing test for this code. Thanks for looking out.', 'comment_created': datetime.datetime(2023, 10, 4, 16, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1346121899, 'comment_body': 'Ohh Yes, you are correct. Changed it. PTAL again.', 'comment_created': datetime.datetime(2023, 10, 4, 16, 2, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1346123230, 'comment_body': 'Removed it. Thanks for the information. PTAL again.', 'comment_created': datetime.datetime(2023, 10, 4, 16, 3, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5757c0499f74e061065f91371ad1d485fd2a7f60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d5423c9feb3a9f8bb53037c4c546ddda285327', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4c16fe508d34c9099606b9438afa3f0f620082', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aebbdd232cf7da200bc94c8c83632d0647b8dcc9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bb334787dc584204209080908b905910ad39c1e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9df7c25150b5f3b5405a358d182852128bb9db96', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cb1a8a90f2306566694bf8043adb3cbc8dcb976', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc53f298dc153d1807ed34a6f74bea55b73600c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fe0440ab34c7f0409f107174b2ca48f31c587b7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e14c166bd118e10ffcb17b1ab870ba495de1212', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e52c226143bdbd6a0d4ae3a7cb1dd06613ce23dd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a4c00e7cade2a7b20b6d2fd48453e5f850a679', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91542bfbad9939def7bcd7eadec54850f1f90dfb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5d527a5966354a9a060ea4ce7ca62aacab01a69', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e9af8321ff37bdd7dbb00e1c21b06144d9b0b84', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef53f79c96cfe1496177e62dfe44d0a2a9b3bea4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ac7365696c276dbd43a1b88b9d04fb6fa5575f9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ddc6815d78f48cdb97c44a737e4456e622c431a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b0ff9520d58a61ba1f814125f75ada6de6545cf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd474ec8867e612c4ca61d11b1ef3dace9c22ab1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c61ad5c1660739105e764c0cfa9f191208b972', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '506ea48ff67f2d442c56217bf7acab5d38f5ad49', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da445f47f1101f7b5b149292c0ecffca72da3404', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fea361e145fac8a0141dae412a67d937cc03dbd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c54ad2903d64a8f8de2cae1a036d857df4a42e1f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9873799f210e4b3e4702e4296a9a9c5e4e367c07', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '805e9b46656cc404c8df73c55248ffb644dd8cfc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca0bf17e41dddfd7208cf38b7d19a08a808d0d3b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76e76f982f8bb54f505f8053b3b85b68ba2c1601', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02178378b9ccddad923e47ab09b5a02631d69034', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02e64d0f20d17e43293df2b90da55c8449774b3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e65db93faee0cf5d032f32713cf45b51aa6a76b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7333810093e32fa2b859d3792d7fc5889cf7bdd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e06b81d8cf34e1732bf5c7eacb8f8f603a883d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0111b2d65891ef755e02bb8a8a2209ba0ca75fe5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0548583ebc366fbcccd90000b60d505796a5bd3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2f6150104a8df1394d7fb522d784238f5a781c7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '128a75591a6ca0b06c29695cdec8747458e9b87b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '286473199840c61f44f12f867e61d8385ebd5728', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cd2fe2083555d88ff3b36840cf88938f65887f5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b622351404d3143614f9eb4921a51e115f9e37cf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93064202037ced682a43ac826e624787f8fedd2e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e37fe7aa7622c3ea90111ae4e5ce5c2fe74574a2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e5425ab8fb38f8d260cf7347cafd434ee84b8a1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46532b1afaec3b1adad5429ea4636a967712d6a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19493a1b3d4ebc2aacc1e76c0aed6f85e4d4c6ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f39beb3be98dc7ea7235408faa6865aa6e96b853', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '045b6c20587f6d768179dcb4534e138f9b215ea1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ffea20bf2c67f0cfc916b43e2d1847c58bc573a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd428a91db0a9a046a84d28d85c200ca1d37ec092', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e9229893233b7db5caa844b731b18184041b3c6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbd103610bfc85e1a7bcefa5c1c46916642d4c60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3073c125955f56b945c1224f6a1441b4989d262', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1b6dba310fbfcc7209062de9d6ec386c9184690', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c446f3163721c285cf3a2d05145a4a70df8127', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f84db1f2412797acf4b9d766649dbd4b7445c656', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e4f80deb196bbed38d7f1abf6421f52446b6d7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e435355380d83856b4dde17c2a962cd4e737183', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed949958e201c70c5c8a5a11844375396554e67', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '491303bf201ed9dc4ddc1de850591796bd791fdc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80c2f5746a2c5c3702cfbd3bb0c3272748ebbfcb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a994fa33c742993434aa34298e2df78c9fe326e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '612d6587a3b46dc19aed166d8e143f251278e7d0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c6824b9bed7ffeec8ceab7fe7ea55249fc35223', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '497c3220d36b195374e235cc94facc96979d81fe', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864cb5a594fa4598a99ecf35b60d4f079c37de3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67a0301c28c87f8612177b128f9bab7fd3c594fc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6be9e3411fd7eb5d103fb949a313e7a5d444df05', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b750751fbd03e1ced264a0fdefb2eeab97e0c25e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faa873796e23787e4b4cc73f6caf4eda7bf40b28', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3041b124179ef850ed10f74b0ad59e1cc450321', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ebe955d6e161e946e0f7cb7d28e8d3b496d9c53', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21bac72d4fdc01f752a6d621c86965413f7176fd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1536506679,Implementing filtering to new contributor admin dashboard: GSoCM2.4,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes #18907 and subpart of #17440 .
2. **FYI: This PR is the branch of #18946 so some changes are duplicated here as well.**
3. This PR does the following: Implements filtering to 4 tabs in new contributor admin dashboard. [Mocks](https://www.figma.com/file/bmyOkQwosePcoNAr45Rdk0/Admin-Dashboard?mode=dev).
4. End to end tests for filtering.

## Essential Checklist

- [x] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] My PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide).
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).

## Proof that changes are correct
[Screencast from 09-10-23 04:53:46 PM IST.webm](https://github.com/oppia/oppia/assets/91470808/edf0b50f-e431-4658-9c13-755036a4e6cd)


<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface. Please also include
videos/screenshots of the developer tools browser console, so that we can be
sure that there are no console errors.

When you make updates to the PR, please update these videos/screenshots as well.
You can drop videos/screenshots from previous versions of the PR.

The above should be done for all PRs, including short ones (e.g. a single-line change).
However, if the changes in your PRs are autogenerated via a script and you cannot
provide proof for the changes then please leave a comment ""No proof of changes
needed because {{Reason}}"" and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Never force push! If you do, your PR will be closed.
- To reply to reviewers, follow these instructions: https://github.com/oppia/oppia/wiki/Make-a-pull-request#step-5-address-review-comments-until-all-reviewers-approve
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,18960,https://api.github.com/repos/oppia/oppia/pulls/18960,https://github.com/oppia/oppia/pull/18960,closed,1289,201,25,151,31,113,1,1,[{'name': 'PR: LGTM'}],2023-09-30 06:38:34+00:00,2023-10-14 06:03:32+00:00,1207498.0,"13 days, 23:24:58","[{'comment_id': 1343112981, 'comment_body': ""Why don't we have the topic filter for the translation reviewer tab?"", 'comment_created': datetime.datetime(2023, 10, 2, 20, 16, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343113686, 'comment_body': 'From the screencast, the topic filter is shorter than the last activity filter next to it. Can we make them the same height to be consistent?', 'comment_created': datetime.datetime(2023, 10, 2, 20, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343115343, 'comment_body': '```suggestion\r\ninterface LanguageChoice {\r\n```\r\nTypo.', 'comment_created': datetime.datetime(2023, 10, 2, 20, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343120431, 'comment_body': '```suggestion\r\n  languageChoices: LangaugeChoice[] = [];\r\n```', 'comment_created': datetime.datetime(2023, 10, 2, 20, 22, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343123802, 'comment_body': ""Is this the only place `assignedLanguageIds` is used? If so, then let's get rid of it as a class instance variable."", 'comment_created': datetime.datetime(2023, 10, 2, 20, 25, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343125358, 'comment_body': 'Instead of creating separate variables for these, can we just have one `selectedLanguageChoice`? Ditto for `selectedTopics`. ', 'comment_created': datetime.datetime(2023, 10, 2, 20, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343130590, 'comment_body': '```suggestion\r\n  lastActivity: number[] = [];\r\n```\r\nTypo.', 'comment_created': datetime.datetime(2023, 10, 2, 20, 31, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343135308, 'comment_body': ""```suggestion\r\n        topicChoice => topicChoice.topic === selectedTopic);\r\n```\r\nNit: Don't think the parentheses are necessary if there's only one param. Ditto elsewhere. "", 'comment_created': datetime.datetime(2023, 10, 2, 20, 33, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343139839, 'comment_body': 'When would this occur? This feels like an error.', 'comment_created': datetime.datetime(2023, 10, 2, 20, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343142937, 'comment_body': ""Why doesn't the filter correctly handle the 0 case?"", 'comment_created': datetime.datetime(2023, 10, 2, 20, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343143317, 'comment_body': 'Does this mean if you select a language, the topic filters are reset? Is that as intended?', 'comment_created': datetime.datetime(2023, 10, 2, 20, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343147760, 'comment_body': 'Why is this needed? IIUC this is to copy the object?', 'comment_created': datetime.datetime(2023, 10, 2, 20, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343149385, 'comment_body': ""```suggestion\r\n    const classroomDataUrl = this.urlInterpolationService.interpolateUrl(\r\n      ClassroomDomainConstants.CLASSROOOM_DATA_URL_TEMPLATE, {\r\n        classroom_url_fragment: 'math'\r\n      });\r\n    const response = await this.http\r\n      .get<ClassroomDataBackendDict>(classroomDataUrl)\r\n      .toPromise();\r\n    const topicChoices: TopicChoice[] = response.topic_summary_dicts.map(\r\n      topicSummary => ({\r\n        id: topicSummary.id,\r\n        topic: topicSummary.name\r\n      }));\r\n    return topicChoices;\r\n```"", 'comment_created': datetime.datetime(2023, 10, 2, 20, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343150248, 'comment_body': '```suggestion\r\n  async fetchTopicChoices(): Promise<TopicChoice[]> {\r\n```', 'comment_created': datetime.datetime(2023, 10, 2, 20, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1343610365, 'comment_body': ""Actually all the filters have been planned and implemented in the backend itself. According to the [GSoC Proposal](https://docs.google.com/document/d/19lCEYQUgV7_DwIK_0rz3zslRHX2qKOHn-t9Twpi0qu0/edit#heading=h.vxqaj7i9qj8a), [Admin Dashboard PRD](https://docs.google.com/document/d/1_vvewEwviQjtPvZy9yo74eCcRTQNcQKyCgdHNpyWNWw/edit#heading=h.liiqbmwmz8j8) and [Mocks](https://www.figma.com/file/bmyOkQwosePcoNAr45Rdk0/Admin-Dashboard?node-id=0%3A1&mode=dev).\r\n\r\nSo we don't have topic filter for reviewers. FYI there is no topic filter for question reviewers as well."", 'comment_created': datetime.datetime(2023, 10, 3, 7, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343612158, 'comment_body': ""The topic filters height changes according to the number of topic selected, so it's not fixed but dynamic. \r\n\r\nHence I have kept the height to change according to the content in it. Does that sounds reasonable?"", 'comment_created': datetime.datetime(2023, 10, 3, 7, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343632282, 'comment_body': ""Ideally this would never occur cause the function is called only when there's change in `selectedTopic` via topic filter in frontend. Added this condition to fix ts type errors cause `find` returns undefined as default value."", 'comment_created': datetime.datetime(2023, 10, 3, 7, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343634018, 'comment_body': ""0 means there's no filter at all. In frontend it's shown as `All time`. So when the user selects 'All time' last activity filter is removed."", 'comment_created': datetime.datetime(2023, 10, 3, 7, 34, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343634728, 'comment_body': 'No the filters remains same, fixed it.', 'comment_created': datetime.datetime(2023, 10, 3, 7, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343636446, 'comment_body': ""This is to pass params only when the filter is selected in frontend other wise don't send it in the get request."", 'comment_created': datetime.datetime(2023, 10, 3, 7, 36, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343941785, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2023, 10, 3, 11, 23, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343941936, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 11, 23, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343943307, 'comment_body': 'removed the variable as a whole, we can directly use response instead.', 'comment_created': datetime.datetime(2023, 10, 3, 11, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343943553, 'comment_body': 'Done. PTAL.', 'comment_created': datetime.datetime(2023, 10, 3, 11, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343943792, 'comment_body': 'Fixed. Thanks for noticing.', 'comment_created': datetime.datetime(2023, 10, 3, 11, 25, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343944104, 'comment_body': 'Fixed. everywhere.', 'comment_created': datetime.datetime(2023, 10, 3, 11, 25, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343945046, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2023, 10, 3, 11, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1343945241, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2023, 10, 3, 11, 26, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344508775, 'comment_body': 'Well at the very least I think the heights should be the same in the defaults states—otherwise it looks strange.', 'comment_created': datetime.datetime(2023, 10, 3, 17, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344512127, 'comment_body': ""Don't need a new interface for this—just make this an array of `TopicChoice`s like you did for `languageChoices`."", 'comment_created': datetime.datetime(2023, 10, 3, 17, 55, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344513541, 'comment_body': ""```suggestion\r\n  languageChoices: LanguageChoice[] = [];\r\n  lastActivity: number[] = [];\r\n  filter: ContributorAdminDashboardFilter = (\r\n    ContributorAdminDashboardFilter.createDefault());\r\n  selectedTopics: selectedTopicChoices = {\r\n    ids: [],\r\n    topics: []\r\n  };\r\n  selectedLanguage: LanguageChoice = {\r\n    language: '',\r\n    id: ''\r\n  };\r\n  topics: TopicChoice[] = [];\r\n```\r\nNit: The new lines aren't necessary and may even be confusing since it implies some logical separation when there isn't really one."", 'comment_created': datetime.datetime(2023, 10, 3, 17, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344516416, 'comment_body': ""Can we just not initialize this here? It doesn't really make sense to have a default value for a language choice like this."", 'comment_created': datetime.datetime(2023, 10, 3, 17, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344519824, 'comment_body': 'Okay well then can we have `ContributorAdminDashboardFilter` correctly handle that logic instead of doing that here? ""0"" seems like a valid input to the filter, so the filter should handle that correctly.', 'comment_created': datetime.datetime(2023, 10, 3, 18, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344522993, 'comment_body': ""```suggestion\r\n    spyOn(userService, 'getUserInfoAsync').and.returnValue(\r\n      Promise.resolve(fullAccessUserInfo));\r\n      \r\n    component.ngOnInit();\r\n    tick();\r\n    fixture.detectChanges();\r\n   \r\n    expect(component.selectedLanguage.language).toEqual('English');\r\n    expect(component.selectedLanguage.id).toEqual('en');\r\n```\r\nMake sure to add new lines to differentiate the test phases (setup, action, assertion). This makes tests easy to scan and understand quickly. Ditto elsewhere."", 'comment_created': datetime.datetime(2023, 10, 3, 18, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344525186, 'comment_body': 'Can we add a test using both the topic and language filter at the same time? That would have caught the bug noted here:  https://github.com/oppia/oppia/pull/18960#discussion_r1343143317.', 'comment_created': datetime.datetime(2023, 10, 3, 18, 8, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344525789, 'comment_body': ""```suggestion\r\n      const fakeClickAwayEvent = new MouseEvent('click');\r\n```\r\nNit: Prefer `const` if the variable is not being reassigned. Ditto below. "", 'comment_created': datetime.datetime(2023, 10, 3, 18, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344528238, 'comment_body': 'Nit: Instead of mutating the `this.selectedLanguage` object, reassign it to a new object in one statement. ', 'comment_created': datetime.datetime(2023, 10, 3, 18, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344529270, 'comment_body': ""Since we're not using the output of `.map()`, just use `forEach` instead. Or better yet, return `topic.topic` in the map function and assign `this.allTopicNames` the new array directly."", 'comment_created': datetime.datetime(2023, 10, 3, 18, 12, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344531838, 'comment_body': 'If this does occur, then we should probably tell the user with an error message toast, otherwise they will be confused as to why their topic filter is not working as intended. ', 'comment_created': datetime.datetime(2023, 10, 3, 18, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344532573, 'comment_body': 'Same here just assign `this.selectedLanguage` in one line.', 'comment_created': datetime.datetime(2023, 10, 3, 18, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344533427, 'comment_body': 'Flip this conditional into a guard clause to reduce nesting\r\n```suggestion\r\n    if (this.checkMobileView()) {\r\n      return;\r\n    }\r\n    ...\r\n```', 'comment_created': datetime.datetime(2023, 10, 3, 18, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344534797, 'comment_body': ""Aren't you already doing with the ternary operators? I'm not sure how the elipses `...` help with that."", 'comment_created': datetime.datetime(2023, 10, 3, 18, 17, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1344559200, 'comment_body': 'For topic it is different than of language, cause `TopicChoice` has id and topic, but in we need array of ids and array of topics. Using the same thing will make it confusing and difficult to hanfle.', 'comment_created': datetime.datetime(2023, 10, 3, 18, 39, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344562052, 'comment_body': ""If we don;t add blank lines between `selectedTopics` and `selectedLanguage` there's a lint error `Expected blank line between class members.`."", 'comment_created': datetime.datetime(2023, 10, 3, 18, 42, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344563581, 'comment_body': ""If we don't initialize it here, it throughs an error `cannot read properties of undefined` whereever it is used. As it is initialized by response from a request ts assumes it can be undefined if it's not already initialized."", 'comment_created': datetime.datetime(2023, 10, 3, 18, 43, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344625817, 'comment_body': ""Done. Actually we didn't needed it at all cause the case where value of lastActivity is 0 is already handled in service file."", 'comment_created': datetime.datetime(2023, 10, 3, 19, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344626579, 'comment_body': 'Done. Fixed everywhere. PTAL. Thanks.', 'comment_created': datetime.datetime(2023, 10, 3, 19, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344626983, 'comment_body': 'I have added the test just below this one, PTAL.', 'comment_created': datetime.datetime(2023, 10, 3, 19, 30, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344627116, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 3, 19, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344627437, 'comment_body': 'Sounds reasonable. thanks.', 'comment_created': datetime.datetime(2023, 10, 3, 19, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344627884, 'comment_body': 'Updated the logic. PTAL.', 'comment_created': datetime.datetime(2023, 10, 3, 19, 30, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344634772, 'comment_body': ""This won't occur in frontend ever cause the selectedTopics is getting selected from this.topics only."", 'comment_created': datetime.datetime(2023, 10, 3, 19, 36, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344634928, 'comment_body': 'Sg. Fixed.', 'comment_created': datetime.datetime(2023, 10, 3, 19, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344635203, 'comment_body': 'Done. Thanks.', 'comment_created': datetime.datetime(2023, 10, 3, 19, 37, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344640484, 'comment_body': ""I tried fixing it but since both uses different native elements and one's height being dynamically changing I am not able to make it of same height. "", 'comment_created': datetime.datetime(2023, 10, 3, 19, 40, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1344643093, 'comment_body': ""Yeah working with ternary operators solves the issue for language and topics but for last activity we have keep `...` cause if there's no last_activity filter selected we are not passing it to the handler."", 'comment_created': datetime.datetime(2023, 10, 3, 19, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1346131420, 'comment_body': 'Can we provide validation for `language_id`, so that the handler is safe?', 'comment_created': datetime.datetime(2023, 10, 4, 16, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'JayVivarekar', 'type': 'User'}, {'comment_id': 1346176279, 'comment_body': 'Yeah, actually I was supposed to do that but forgot. Thanks for pointing out.', 'comment_created': datetime.datetime(2023, 10, 4, 16, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347144108, 'comment_body': 'Where is this language defined?', 'comment_created': datetime.datetime(2023, 10, 5, 9, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1347144561, 'comment_body': 'Define these on the top*', 'comment_created': datetime.datetime(2023, 10, 5, 9, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1347146814, 'comment_body': 'Can we use _selectLaanuagage here?', 'comment_created': datetime.datetime(2023, 10, 5, 9, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1347148308, 'comment_body': 'This looks like a duplicate function (line 221)', 'comment_created': datetime.datetime(2023, 10, 5, 9, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1347149542, 'comment_body': 'Define this on top*', 'comment_created': datetime.datetime(2023, 10, 5, 9, 59, 21, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1347150416, 'comment_body': ""Do we need to confirm whether it's added?"", 'comment_created': datetime.datetime(2023, 10, 5, 9, 59, 54, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1347152022, 'comment_body': 'How is this different from `makeUserTranslationCoordinator`? In case they are similar, can we do something to avoid duplicate pattern/code? ', 'comment_created': datetime.datetime(2023, 10, 5, 10, 0, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1347152762, 'comment_body': 'USe action.matSelect*', 'comment_created': datetime.datetime(2023, 10, 5, 10, 1, 25, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1347157120, 'comment_body': 'Instead of adding logic to this block create two functions `expectNoStatsElement`, `expectStatsElementCountToBe`', 'comment_created': datetime.datetime(2023, 10, 5, 10, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1347159935, 'comment_body': ""SHould we chanaeg the name to make it clear what this function is doing else it creates confusion on what it's doing? (I'm thinking of waitForLoadingMessageToDisappear or something around that?)"", 'comment_created': datetime.datetime(2023, 10, 5, 10, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 1347715656, 'comment_body': 'The height changing after selecting multiple topics is fine, just change the default heights to match. Should just be some CSS.', 'comment_created': datetime.datetime(2023, 10, 5, 16, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1347721390, 'comment_body': 'That may be true for now, but may not be true in the future as code changes all the time. Also, that assumption would not be immediately obvious to a future reader less familiar with this code, so at least throw an exception here to self-document the expected behavior.', 'comment_created': datetime.datetime(2023, 10, 5, 16, 51, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1347724041, 'comment_body': ""It's a duplicate function. Fixed it."", 'comment_created': datetime.datetime(2023, 10, 5, 16, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347724139, 'comment_body': ""It's a duplicate function. Fixed it."", 'comment_created': datetime.datetime(2023, 10, 5, 16, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347724435, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 10, 5, 16, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347724709, 'comment_body': 'Yeah, thanks for noiticing! Fixed it.', 'comment_created': datetime.datetime(2023, 10, 5, 16, 54, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347725075, 'comment_body': 'Done. PTAL again. Thanks.', 'comment_created': datetime.datetime(2023, 10, 5, 16, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347725210, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 5, 16, 55, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347725829, 'comment_body': '```suggestion\r\nexport interface SelectedTopicChoices {\r\n```', 'comment_created': datetime.datetime(2023, 10, 5, 16, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1347733095, 'comment_body': ""We can't use `action.select/action.matselect` here this is the same situation we discussed in the other PR.[ Reference](https://github.com/oppia/oppia/pull/18951/files/394ac59329e1651784703689bc8577703cc4ce2d#r1342832961). We can only use action.select when we have implemented `<select>` in the code. If we are handling dropdown with a div we can't use it."", 'comment_created': datetime.datetime(2023, 10, 5, 17, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347733336, 'comment_body': 'Done,  PTAL.', 'comment_created': datetime.datetime(2023, 10, 5, 17, 1, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347733627, 'comment_body': 'Yeah, that sounds about right. updated.', 'comment_created': datetime.datetime(2023, 10, 5, 17, 2, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347735732, 'comment_body': ""I'm not quite sure how can we do that. Cause we are opening a modal selecting a language and then again closing the model so we don't have anything in the frontend after calling the function."", 'comment_created': datetime.datetime(2023, 10, 5, 17, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1347736169, 'comment_body': ""Then that seems like a code smell. It doesn't really make sense to initialize a `LanguageChoice` with empty strings as the default value. Since it is possible for `selectedLanguage` to not be initialized, we should properly handle that in the code. I think initialize `selectedLanguage` to `null` and make sure the accessors of `this.selectedLanguage` handles that case properly (since the initializing `fetchAssignedLanguageIds` call may fail). "", 'comment_created': datetime.datetime(2023, 10, 5, 17, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1347737735, 'comment_body': '```suggestion\r\n  @Input() defaultTopicNames!: string[];\r\n  @Input() selectedTopicNames: string[] = [];\r\n```\r\nNit: To differentiate between topic IDs and names. ', 'comment_created': datetime.datetime(2023, 10, 5, 17, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1347759247, 'comment_body': ""Instead of allowing the topic-filter component to mutate the `this.selectedTopics.topics` array directly, just assign the new emitted array. In general, try to minimize the use of mutable objects as it's error-prone and can be difficult to trace through logically."", 'comment_created': datetime.datetime(2023, 10, 5, 17, 25, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1347763952, 'comment_body': ""Gotcha. Then maybe just have two variables: `selectedTopicIds` and `selectedTopicNames`. It doesn't look like they need to necessarily be logically grouped via an interface since you only need the IDs or the names at a time. "", 'comment_created': datetime.datetime(2023, 10, 5, 17, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1347798816, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 10, 5, 18, 3, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1348907261, 'comment_body': 'I have changed the video in description of the PR. PTAL. Does that looks good?', 'comment_created': datetime.datetime(2023, 10, 6, 15, 54, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1348908193, 'comment_body': 'Removed it. As per other [comment](https://github.com/oppia/oppia/pull/18960/files/60bad73648ee5dc46d46265b6f9aee45c9bb08f4#r1344512127)', 'comment_created': datetime.datetime(2023, 10, 6, 15, 55, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1348913579, 'comment_body': 'Yeah sg. Changed it.', 'comment_created': datetime.datetime(2023, 10, 6, 16, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349132357, 'comment_body': 'Instead of initiating it to null and checking it whenever we access, what if we initialize with empty string and if fetchAssignedLanguageIds fails we could check for the empty string and throw an error. I have implemented it PTAL.', 'comment_created': datetime.datetime(2023, 10, 6, 17, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349133865, 'comment_body': 'The point I missed is even if this situation does occur we are passing an empty array to the filter.', 'comment_created': datetime.datetime(2023, 10, 6, 17, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349134594, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 10, 6, 17, 33, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349134883, 'comment_body': 'Done!\r\n', 'comment_created': datetime.datetime(2023, 10, 6, 17, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349136531, 'comment_body': '`this.selectedTopics.topics` is used in two way binding to keep track of selected topics continuously and update the stats accordingly.', 'comment_created': datetime.datetime(2023, 10, 6, 17, 35, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349318090, 'comment_body': 'Hm the filter looks the same to me? ', 'comment_created': datetime.datetime(2023, 10, 6, 21, 1, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1349318299, 'comment_body': 'Still there?', 'comment_created': datetime.datetime(2023, 10, 6, 21, 1, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1349324250, 'comment_body': ""Well, the problem is that `null` is more clear and more accurately conveys the variable state. Initializing the fields as empty strings compiles, but aren't really valid values. Like what does it mean for an `id` or `language` to be an empty string? If you catch an error from `fetchAssignedLanguageIds` and throw there, does that satisfy the compiler?"", 'comment_created': datetime.datetime(2023, 10, 6, 21, 10, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1349327204, 'comment_body': 'You mean an empty string? Yes, but the user selected a topic name in the filter, but we would pass an empty string for that selected topic name, so the filter would do nothing for that selected topic name. That seems like an error.', 'comment_created': datetime.datetime(2023, 10, 6, 21, 14, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1349464770, 'comment_body': ""Sorry the video didn't get updated last time. PTAL again."", 'comment_created': datetime.datetime(2023, 10, 7, 5, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349464932, 'comment_body': 'Yess. The later condition you mentioned satisifes the compiler and we can throw an error there. I have already implemented this.', 'comment_created': datetime.datetime(2023, 10, 7, 5, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349469690, 'comment_body': 'Removed!', 'comment_created': datetime.datetime(2023, 10, 7, 6, 10, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349469819, 'comment_body': ""Yeah that sounds reasonable. Added a condition to throw an error when there is a selected topic but doesn't match any from the list. PTAL."", 'comment_created': datetime.datetime(2023, 10, 7, 6, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349535191, 'comment_body': '@kshitij01042002 Did you update the video? The filter looks the same to me.', 'comment_created': datetime.datetime(2023, 10, 7, 15, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'qinghaoyang', 'type': 'User'}, {'comment_id': 1349536718, 'comment_body': 'Confirmed.', 'comment_created': datetime.datetime(2023, 10, 7, 15, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'qinghaoyang', 'type': 'User'}, {'comment_id': 1349537624, 'comment_body': 'Confirmed', 'comment_created': datetime.datetime(2023, 10, 7, 15, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'qinghaoyang', 'type': 'User'}, {'comment_id': 1349539137, 'comment_body': 'Is it possible to initialize it to `null` and check for the `null`?', 'comment_created': datetime.datetime(2023, 10, 7, 16, 4, 13, tzinfo=datetime.timezone.utc), 'commenter': 'qinghaoyang', 'type': 'User'}, {'comment_id': 1349561495, 'comment_body': 'If we initialize it to null we have to check each time we are accessing `selectedLanguage` but if we do in this way we only have to check once.', 'comment_created': datetime.datetime(2023, 10, 7, 18, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1349561632, 'comment_body': ""Yeah I have updated it. The topic filter is slightly above but it's the same height now."", 'comment_created': datetime.datetime(2023, 10, 7, 18, 53, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1353846880, 'comment_body': '@sagangwee Does the topic filter look good for you?', 'comment_created': datetime.datetime(2023, 10, 11, 2, 23, 55, tzinfo=datetime.timezone.utc), 'commenter': 'qinghaoyang', 'type': 'User'}, {'comment_id': 1357357523, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 10, 12, 20, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1357364342, 'comment_body': 'No, I mean adding a `catch` clause to the `fetchAssignedLanguageIds` promise to throw an error to guarantee that `selectedLanguage` is assigned a value or an error is thrown. Then, add a non-null assertion operator (`!`) to the `selectedLanguage` variable.  e.g. https://github.com/oppia/oppia/blob/develop/core/templates/components/checkpoint-celebration-modal/checkpoint-celebration-modal.component.ts#L53-L56', 'comment_created': datetime.datetime(2023, 10, 12, 20, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1358396839, 'comment_body': ""If I do this there's a lint error `Expected blank line between class members.`"", 'comment_created': datetime.datetime(2023, 10, 13, 15, 12, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1358427627, 'comment_body': ""Even after doing this, we still face the behaviur I mentioned above. That is the compiler gives error of `TypeError: Cannot read properties of undefined (reading 'id')`. In case we encounter the condition you mnetioned I have added the condition to throw the error."", 'comment_created': datetime.datetime(2023, 10, 13, 15, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5757c0499f74e061065f91371ad1d485fd2a7f60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d5423c9feb3a9f8bb53037c4c546ddda285327', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4c16fe508d34c9099606b9438afa3f0f620082', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aebbdd232cf7da200bc94c8c83632d0647b8dcc9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bb334787dc584204209080908b905910ad39c1e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9df7c25150b5f3b5405a358d182852128bb9db96', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cb1a8a90f2306566694bf8043adb3cbc8dcb976', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc53f298dc153d1807ed34a6f74bea55b73600c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fe0440ab34c7f0409f107174b2ca48f31c587b7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e14c166bd118e10ffcb17b1ab870ba495de1212', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e52c226143bdbd6a0d4ae3a7cb1dd06613ce23dd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a4c00e7cade2a7b20b6d2fd48453e5f850a679', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91542bfbad9939def7bcd7eadec54850f1f90dfb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5d527a5966354a9a060ea4ce7ca62aacab01a69', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e9af8321ff37bdd7dbb00e1c21b06144d9b0b84', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef53f79c96cfe1496177e62dfe44d0a2a9b3bea4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ac7365696c276dbd43a1b88b9d04fb6fa5575f9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ddc6815d78f48cdb97c44a737e4456e622c431a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b0ff9520d58a61ba1f814125f75ada6de6545cf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd474ec8867e612c4ca61d11b1ef3dace9c22ab1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c61ad5c1660739105e764c0cfa9f191208b972', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '506ea48ff67f2d442c56217bf7acab5d38f5ad49', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da445f47f1101f7b5b149292c0ecffca72da3404', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fea361e145fac8a0141dae412a67d937cc03dbd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c54ad2903d64a8f8de2cae1a036d857df4a42e1f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9873799f210e4b3e4702e4296a9a9c5e4e367c07', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '805e9b46656cc404c8df73c55248ffb644dd8cfc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca0bf17e41dddfd7208cf38b7d19a08a808d0d3b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76e76f982f8bb54f505f8053b3b85b68ba2c1601', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02178378b9ccddad923e47ab09b5a02631d69034', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02e64d0f20d17e43293df2b90da55c8449774b3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e65db93faee0cf5d032f32713cf45b51aa6a76b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7333810093e32fa2b859d3792d7fc5889cf7bdd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86500b1f59292860176522525602de4c03c3e0ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e06b81d8cf34e1732bf5c7eacb8f8f603a883d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '380e3a9090999652b8b5fe8ca292ebb09e9e5497', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0111b2d65891ef755e02bb8a8a2209ba0ca75fe5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0548583ebc366fbcccd90000b60d505796a5bd3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2f6150104a8df1394d7fb522d784238f5a781c7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '128a75591a6ca0b06c29695cdec8747458e9b87b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '286473199840c61f44f12f867e61d8385ebd5728', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cd2fe2083555d88ff3b36840cf88938f65887f5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b622351404d3143614f9eb4921a51e115f9e37cf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93064202037ced682a43ac826e624787f8fedd2e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e37fe7aa7622c3ea90111ae4e5ce5c2fe74574a2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e5425ab8fb38f8d260cf7347cafd434ee84b8a1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46532b1afaec3b1adad5429ea4636a967712d6a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dec08dc02b300a207d481dd0979d513cfc672b84', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48d65cb4f10e6718ac66ee47cf956840258f0b4e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '652a90e50a0147a330f03344573f239753e4ec02', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e14739300e329a02f4f2026b3c64e6d681f55893', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19493a1b3d4ebc2aacc1e76c0aed6f85e4d4c6ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f39beb3be98dc7ea7235408faa6865aa6e96b853', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '002a6e1e4b21601659b875e2fe0954f2f7676d8b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '045b6c20587f6d768179dcb4534e138f9b215ea1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ffea20bf2c67f0cfc916b43e2d1847c58bc573a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd428a91db0a9a046a84d28d85c200ca1d37ec092', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e9229893233b7db5caa844b731b18184041b3c6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbd103610bfc85e1a7bcefa5c1c46916642d4c60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3073c125955f56b945c1224f6a1441b4989d262', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b1af89c978add65e34765a6b827e91c0f1b4d3b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bff2433e53b2b0618de9dcdd44648f2e83120a40', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1b6dba310fbfcc7209062de9d6ec386c9184690', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c446f3163721c285cf3a2d05145a4a70df8127', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f84db1f2412797acf4b9d766649dbd4b7445c656', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd518e399cdc3ecc69bdc459ae39b6970c4ed5d6a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e4f80deb196bbed38d7f1abf6421f52446b6d7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e435355380d83856b4dde17c2a962cd4e737183', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed949958e201c70c5c8a5a11844375396554e67', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dac2c088833c39e5c150695c57565ccb23a2d0e0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ebf2399cf7e80d8cff274e14ab2fc1a8e86ebcd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4a120c4caf287f1ff03991eaa4acb7ca083af12', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e580ff68f1418703bcf5065958c75e1c1d397394', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f19065aa7690b0b213d305ebbb7e471e0a70ec25', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9427932b2e945de13b3868889e9eb55a8373f6cb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '862a04714df4adc4d8bd2d6eddea92079b8ee578', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40248e980ea72d5143675fa2e8e1a4d57f732d22', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38e596db3f577413ef1e33aa305eef9e6fbda122', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '435d7068729409eb4b36f5358cc7a34930d76e51', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '606a5c91c15aef24bfd9ec8a78959051d52ebc2d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3df0563c19f60d7f363b0df85a308ca901f375', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '491303bf201ed9dc4ddc1de850591796bd791fdc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80c2f5746a2c5c3702cfbd3bb0c3272748ebbfcb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2842fb6ea9f4a754b951c1eb48feb32c4d555e19', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a994fa33c742993434aa34298e2df78c9fe326e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '612d6587a3b46dc19aed166d8e143f251278e7d0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c6824b9bed7ffeec8ceab7fe7ea55249fc35223', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39165309e0fd55cc79bc5db28b09f15369539dba', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f3421f91fec099555ac10ed49cd3055e6e96343', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6b6966f3a51d5085909c8ba2b1ce35fad3d26db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '497c3220d36b195374e235cc94facc96979d81fe', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7271f2ccc87eb204e05d07a1a19dcd7cb31ff7c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d301a31175fe1281c127697ad8ba992ee3c4fd5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5790625363b412e4e855ca690f79a2f3add5aea6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '848f97e1b1bd6b6039e78626a05c57a1f2bd7ca4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a8de10c9bd235cf02c0a7d0564a7a9cd113aa3d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e4b7184acb3aadc0b766b826bae935b903a05ca', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7a55233a2afb289c61d28d9479afeb5d8658e65', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864cb5a594fa4598a99ecf35b60d4f079c37de3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67a0301c28c87f8612177b128f9bab7fd3c594fc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c555f3ed40db2772ff7b5de75af58c9ac0a527e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f004119a2792762c4e6d80e7fbdd9122f457d354', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6be9e3411fd7eb5d103fb949a313e7a5d444df05', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0186202aa5d9094cd78848271a8c57bac02ca844', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b750751fbd03e1ced264a0fdefb2eeab97e0c25e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd084134620a4139baca00fff136324f70c9b69bb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faa873796e23787e4b4cc73f6caf4eda7bf40b28', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3041b124179ef850ed10f74b0ad59e1cc450321', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44c7112db7808dae3c0774985c7a1d243646a2bd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c547f049886533b20798ca8653869843a6ec401', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ebe955d6e161e946e0f7cb7d28e8d3b496d9c53', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed00b9728a25ee0ebce1bccb3dd767f89630fb13', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f26dd23f26623ba1a1c7d0c6d82c24410eb4768', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '240419943f69eda1269e8a7d7be848d5f9488e45', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60bad73648ee5dc46d46265b6f9aee45c9bb08f4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fad88002ac2f27e582c0f76dfb1b94acb784cb0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81e7e9daca9bde625b9dff847efe005f9a911ef5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5d060c1736e03af88cb1ac536199d6a296da417', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b43dfb4f829eec6bc0fde07ce71fcd31070fcf2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '274ed5eaefd16453d5022d8ec57ceaaf2a7d7521', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e42eff237ada09f53c683fd093a4bfa8c55f3d8a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78e53b650b3051e99cae41de0970373df36a9f39', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f98844a13d6d8044a25edb30dc6474a4ff67cc0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15fd337db6bed4364dc6f9105b3d66aede634515', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e603685367fcb3fd94f891089378e23362ef891', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4680e632bd4da30c63327c0d3ae21b986b425d1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a296625b95061fcfa4d61403107a9e4de56a1b80', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbfa89835bd9e531c6c2d34661146f3c8ef571cc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9507b88a5a2d4cd8e81e0a20991ed3bff8df54b1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17901b971c40f796e0bbbcd46fc5f35855f92d09', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79a9fd79e73f10ee6918368d1a741d2e697d6685', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2b9053c299a7ad0413d311e5269171ed646b108', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1556920816,Different coordiantor actions enabled at /contributor-admin-dashboard.GSoC: M2.5,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes #18905 and part of #17440 .
2. This PR does the following: Making different admin actions available according to the roles in /contributor-dashboard-admin (for eg. Promoting a translator to reviewer as a language coordinator). Covering e2e tests for admin actions available in /contributor-dashboard-admin

Different coordinator actions enabled are:-

1. Translation coordinator

- Promote user to translation reviewer
- Assign/Deassign languages to existing translation reviewers

2. Question Coordinator

- Assign/Deassign Question submitter role to a user.
- Assign/Deassign Question reviewer role to a user.

## Essential Checklist

- [x] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] My PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide).
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).

## Proof that changes are correct
[Screencast from 09-10-23 04:34:56 PM IST.webm](https://github.com/oppia/oppia/assets/91470808/bfae3805-2c2b-4816-8866-a66b7031dda7)


<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface. Please also include
videos/screenshots of the developer tools browser console, so that we can be
sure that there are no console errors.

When you make updates to the PR, please update these videos/screenshots as well.
You can drop videos/screenshots from previous versions of the PR.

The above should be done for all PRs, including short ones (e.g. a single-line change).
However, if the changes in your PRs are autogenerated via a script and you cannot
provide proof for the changes then please leave a comment ""No proof of changes
needed because {{Reason}}"" and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Never force push! If you do, your PR will be closed.
- To reply to reviewers, follow these instructions: https://github.com/oppia/oppia/wiki/Make-a-pull-request#step-5-address-review-comments-until-all-reviewers-approve
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,19017,https://api.github.com/repos/oppia/oppia/pulls/19017,https://github.com/oppia/oppia/pull/19017,closed,1552,51,18,171,12,55,1,1,[{'name': 'PR: LGTM'}],2023-10-14 12:44:03+00:00,2023-10-18 08:09:54+00:00,329151.0,"3 days, 19:25:51","[{'comment_id': 1360952378, 'comment_body': 'Duplicates?', 'comment_created': datetime.datetime(2023, 10, 16, 16, 41, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1360953475, 'comment_body': 'Duplicate?', 'comment_created': datetime.datetime(2023, 10, 16, 16, 42, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1360959754, 'comment_body': '```suggestion\r\n        const languageIdToName: Record<string, string> = {};\r\n```', 'comment_created': datetime.datetime(2023, 10, 16, 16, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1360967980, 'comment_body': '```suggestion\r\nexport interface QuestionRights {\r\n```', 'comment_created': datetime.datetime(2023, 10, 16, 16, 53, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1360982869, 'comment_body': 'Why use separate variables here instead of using `rights`? ', 'comment_created': datetime.datetime(2023, 10, 16, 16, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1360987580, 'comment_body': 'Does this need to be within this conditional?', 'comment_created': datetime.datetime(2023, 10, 16, 16, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1360989568, 'comment_body': ""Is a loading message even necessary? The modal doesn't fetch any data, and I couldn't discern the loading message in the demo. "", 'comment_created': datetime.datetime(2023, 10, 16, 17, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1360990132, 'comment_body': '```suggestion\r\n    <p *ngIf=""!assignedLanguageIds.length"">Please assign user to at least one language:</p>\r\n```', 'comment_created': datetime.datetime(2023, 10, 16, 17, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1360993755, 'comment_body': 'Though should this even be the message here? Seems valid for the editor to want to remove all languages.', 'comment_created': datetime.datetime(2023, 10, 16, 17, 3, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361002345, 'comment_body': 'Should the text just be ""Close""? Clicking the button doesn\'t seem to ""save"" anything. This might be confusing if the user is expecting their changes to be saved only after clicking the button. ', 'comment_created': datetime.datetime(2023, 10, 16, 17, 11, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361010554, 'comment_body': '```suggestion\r\n  selectedLanguageId: string | null = null;\r\n```', 'comment_created': datetime.datetime(2023, 10, 16, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361013717, 'comment_body': ""What if `languageIdsForSelection` is empty? Won't this throw index out of bounds?"", 'comment_created': datetime.datetime(2023, 10, 16, 17, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361013925, 'comment_body': '```suggestion\r\n  private updateLanguageIdsForSelection(): void {\r\n```', 'comment_created': datetime.datetime(2023, 10, 16, 17, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361018901, 'comment_body': 'Can we use a `[Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set)` here instead? Makes for simpler and faster remove/has operations. ', 'comment_created': datetime.datetime(2023, 10, 16, 17, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361025161, 'comment_body': '```suggestion\r\n * @fileoverview Component for looking up a user by username.\r\n```', 'comment_created': datetime.datetime(2023, 10, 16, 17, 30, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361026189, 'comment_body': ""```suggestion\r\n * @fileoverview Component for editing a user's translation contribution rights.\r\n```"", 'comment_created': datetime.datetime(2023, 10, 16, 17, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361026419, 'comment_body': ""```suggestion\r\n * @fileoverview Component for editing a user's question contribution rights.\r\n```"", 'comment_created': datetime.datetime(2023, 10, 16, 17, 31, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361029533, 'comment_body': '```suggestion\r\n      Username not found. Please enter a valid username.\r\n```', 'comment_created': datetime.datetime(2023, 10, 16, 17, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361035217, 'comment_body': ""```suggestion\r\n  it('should update language ids for selection on initialization', () => {\r\n```"", 'comment_created': datetime.datetime(2023, 10, 16, 17, 36, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361035544, 'comment_body': ""```suggestion\r\n    it('should make request to add language', fakeAsync(() => {\r\n```"", 'comment_created': datetime.datetime(2023, 10, 16, 17, 36, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361036179, 'comment_body': 'Can you please update the topic references in this test file to language?', 'comment_created': datetime.datetime(2023, 10, 16, 17, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361038359, 'comment_body': ""```suggestion\r\n  it('should save and close modal and return selected rights', () => {\r\n```"", 'comment_created': datetime.datetime(2023, 10, 16, 17, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361038548, 'comment_body': ""```suggestion\r\n  it('should properly toggle Question Reviewer checkbox', () => {\r\n```"", 'comment_created': datetime.datetime(2023, 10, 16, 17, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361042428, 'comment_body': 'Not really sure what this means.', 'comment_created': datetime.datetime(2023, 10, 16, 17, 40, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361045295, 'comment_body': 'Not really sure what this means. Do you mean the question role editor modal should be opened when on the question submitter tab? Ditto below. The test name should specify the test condition.', 'comment_created': datetime.datetime(2023, 10, 16, 17, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361046023, 'comment_body': 'Add new lines above and below as it looks like this is the test ""action"".', 'comment_created': datetime.datetime(2023, 10, 16, 17, 43, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1361519094, 'comment_body': 'We cannot use `Set` here cause we are rendering `languageIdsForSelection` as options in dropdown menu. To use it in ngFor we need an array.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361521709, 'comment_body': ""This condition will only occur when we have assigned a user to all the available languages and if this does occur we don't show the option of `addLanguage` in the frontend. "", 'comment_created': datetime.datetime(2023, 10, 17, 5, 20, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361522082, 'comment_body': '![image](https://github.com/oppia/oppia/assets/91470808/a194f442-0d08-43b9-bfa7-278b7d83cc55)\r\n', 'comment_created': datetime.datetime(2023, 10, 17, 5, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361524145, 'comment_body': 'Yeah. I think this was generated during resolving merge conflicts. Thanks for noticing', 'comment_created': datetime.datetime(2023, 10, 17, 5, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361524210, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 25, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361524509, 'comment_body': 'This describe class is for testing various modals.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361524704, 'comment_body': 'Updated. PTAL again if that seems good.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 26, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361524770, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361524898, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361525532, 'comment_body': ""I was going to put it till the modal was initialized but it seems that the modal doesn't open untill initialzed. Removed it."", 'comment_created': datetime.datetime(2023, 10, 17, 5, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361525611, 'comment_body': 'Thanks for the nit.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 27, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361525665, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 27, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361525950, 'comment_body': 'Removed the condition as a whole.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361526236, 'comment_body': 'Updated the message, can you please take a look again and see if it is reasonable now?', 'comment_created': datetime.datetime(2023, 10, 17, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361526328, 'comment_body': 'Sg. Updated.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 29, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361526387, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361526451, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361526539, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 29, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361526593, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361526641, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361526698, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361526771, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1361526807, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 10, 17, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}, {'comment_id': 1362484833, 'comment_body': ""It looks like `ngFor` takes any iterable object: https://angular.io/api/common/NgFor#description, https://netbasal.com/angular-2-ngfor-array-with-unique-values-6b15478d6484. Did you try it and it didn't work?"", 'comment_created': datetime.datetime(2023, 10, 17, 17, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1362486023, 'comment_body': ""```suggestion\r\n      ' value of question reviewer', fakeAsync(() => {\r\n```"", 'comment_created': datetime.datetime(2023, 10, 17, 17, 2, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1362489034, 'comment_body': ""This describe class doesn't seem necessary as the `beforeEach` is empty and there isn't common setup, so I'd just remove it."", 'comment_created': datetime.datetime(2023, 10, 17, 17, 5, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1362492244, 'comment_body': '```suggestion\r\n      <i *ngIf=""assignedLanguageIds.length"">There are no languages remaining. User is assigned to all available languages.</i>\r\n```', 'comment_created': datetime.datetime(2023, 10, 17, 17, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1362494221, 'comment_body': '```suggestion\r\n    <p *ngIf=""!assignedLanguageIds.length"">User does not have review rights in any languages./p>\r\n```', 'comment_created': datetime.datetime(2023, 10, 17, 17, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sagangwee', 'type': 'User'}, {'comment_id': 1362544595, 'comment_body': 'yess. I did try it.', 'comment_created': datetime.datetime(2023, 10, 17, 17, 55, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kshitij01042002', 'type': 'User'}]","[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5757c0499f74e061065f91371ad1d485fd2a7f60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d5423c9feb3a9f8bb53037c4c546ddda285327', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4c16fe508d34c9099606b9438afa3f0f620082', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aebbdd232cf7da200bc94c8c83632d0647b8dcc9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bb334787dc584204209080908b905910ad39c1e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9df7c25150b5f3b5405a358d182852128bb9db96', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cb1a8a90f2306566694bf8043adb3cbc8dcb976', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc53f298dc153d1807ed34a6f74bea55b73600c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fe0440ab34c7f0409f107174b2ca48f31c587b7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e14c166bd118e10ffcb17b1ab870ba495de1212', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e52c226143bdbd6a0d4ae3a7cb1dd06613ce23dd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a4c00e7cade2a7b20b6d2fd48453e5f850a679', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91542bfbad9939def7bcd7eadec54850f1f90dfb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5d527a5966354a9a060ea4ce7ca62aacab01a69', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e9af8321ff37bdd7dbb00e1c21b06144d9b0b84', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef53f79c96cfe1496177e62dfe44d0a2a9b3bea4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ac7365696c276dbd43a1b88b9d04fb6fa5575f9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ddc6815d78f48cdb97c44a737e4456e622c431a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b0ff9520d58a61ba1f814125f75ada6de6545cf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd474ec8867e612c4ca61d11b1ef3dace9c22ab1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c61ad5c1660739105e764c0cfa9f191208b972', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '506ea48ff67f2d442c56217bf7acab5d38f5ad49', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da445f47f1101f7b5b149292c0ecffca72da3404', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fea361e145fac8a0141dae412a67d937cc03dbd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c54ad2903d64a8f8de2cae1a036d857df4a42e1f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9873799f210e4b3e4702e4296a9a9c5e4e367c07', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '805e9b46656cc404c8df73c55248ffb644dd8cfc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca0bf17e41dddfd7208cf38b7d19a08a808d0d3b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76e76f982f8bb54f505f8053b3b85b68ba2c1601', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02178378b9ccddad923e47ab09b5a02631d69034', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02e64d0f20d17e43293df2b90da55c8449774b3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e65db93faee0cf5d032f32713cf45b51aa6a76b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7333810093e32fa2b859d3792d7fc5889cf7bdd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86500b1f59292860176522525602de4c03c3e0ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e06b81d8cf34e1732bf5c7eacb8f8f603a883d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '380e3a9090999652b8b5fe8ca292ebb09e9e5497', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0111b2d65891ef755e02bb8a8a2209ba0ca75fe5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0548583ebc366fbcccd90000b60d505796a5bd3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2f6150104a8df1394d7fb522d784238f5a781c7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '128a75591a6ca0b06c29695cdec8747458e9b87b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '286473199840c61f44f12f867e61d8385ebd5728', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cd2fe2083555d88ff3b36840cf88938f65887f5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b622351404d3143614f9eb4921a51e115f9e37cf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93064202037ced682a43ac826e624787f8fedd2e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e37fe7aa7622c3ea90111ae4e5ce5c2fe74574a2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e5425ab8fb38f8d260cf7347cafd434ee84b8a1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46532b1afaec3b1adad5429ea4636a967712d6a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dec08dc02b300a207d481dd0979d513cfc672b84', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48d65cb4f10e6718ac66ee47cf956840258f0b4e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '652a90e50a0147a330f03344573f239753e4ec02', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e14739300e329a02f4f2026b3c64e6d681f55893', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19493a1b3d4ebc2aacc1e76c0aed6f85e4d4c6ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f39beb3be98dc7ea7235408faa6865aa6e96b853', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '002a6e1e4b21601659b875e2fe0954f2f7676d8b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '045b6c20587f6d768179dcb4534e138f9b215ea1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ffea20bf2c67f0cfc916b43e2d1847c58bc573a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd428a91db0a9a046a84d28d85c200ca1d37ec092', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e9229893233b7db5caa844b731b18184041b3c6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbd103610bfc85e1a7bcefa5c1c46916642d4c60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3073c125955f56b945c1224f6a1441b4989d262', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b1af89c978add65e34765a6b827e91c0f1b4d3b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bff2433e53b2b0618de9dcdd44648f2e83120a40', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1b6dba310fbfcc7209062de9d6ec386c9184690', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c446f3163721c285cf3a2d05145a4a70df8127', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f84db1f2412797acf4b9d766649dbd4b7445c656', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd518e399cdc3ecc69bdc459ae39b6970c4ed5d6a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e4f80deb196bbed38d7f1abf6421f52446b6d7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e435355380d83856b4dde17c2a962cd4e737183', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed949958e201c70c5c8a5a11844375396554e67', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dac2c088833c39e5c150695c57565ccb23a2d0e0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ebf2399cf7e80d8cff274e14ab2fc1a8e86ebcd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4a120c4caf287f1ff03991eaa4acb7ca083af12', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e580ff68f1418703bcf5065958c75e1c1d397394', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f19065aa7690b0b213d305ebbb7e471e0a70ec25', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9427932b2e945de13b3868889e9eb55a8373f6cb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '862a04714df4adc4d8bd2d6eddea92079b8ee578', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40248e980ea72d5143675fa2e8e1a4d57f732d22', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38e596db3f577413ef1e33aa305eef9e6fbda122', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '435d7068729409eb4b36f5358cc7a34930d76e51', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '606a5c91c15aef24bfd9ec8a78959051d52ebc2d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3df0563c19f60d7f363b0df85a308ca901f375', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '491303bf201ed9dc4ddc1de850591796bd791fdc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80c2f5746a2c5c3702cfbd3bb0c3272748ebbfcb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2842fb6ea9f4a754b951c1eb48feb32c4d555e19', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a994fa33c742993434aa34298e2df78c9fe326e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '612d6587a3b46dc19aed166d8e143f251278e7d0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c6824b9bed7ffeec8ceab7fe7ea55249fc35223', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39165309e0fd55cc79bc5db28b09f15369539dba', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f3421f91fec099555ac10ed49cd3055e6e96343', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6b6966f3a51d5085909c8ba2b1ce35fad3d26db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '497c3220d36b195374e235cc94facc96979d81fe', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7271f2ccc87eb204e05d07a1a19dcd7cb31ff7c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d301a31175fe1281c127697ad8ba992ee3c4fd5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5790625363b412e4e855ca690f79a2f3add5aea6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '848f97e1b1bd6b6039e78626a05c57a1f2bd7ca4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a8de10c9bd235cf02c0a7d0564a7a9cd113aa3d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e4b7184acb3aadc0b766b826bae935b903a05ca', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7a55233a2afb289c61d28d9479afeb5d8658e65', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864cb5a594fa4598a99ecf35b60d4f079c37de3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67a0301c28c87f8612177b128f9bab7fd3c594fc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c555f3ed40db2772ff7b5de75af58c9ac0a527e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f004119a2792762c4e6d80e7fbdd9122f457d354', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6be9e3411fd7eb5d103fb949a313e7a5d444df05', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0186202aa5d9094cd78848271a8c57bac02ca844', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b750751fbd03e1ced264a0fdefb2eeab97e0c25e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd084134620a4139baca00fff136324f70c9b69bb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '380de8ca6d8a3505884a52545bbc9665667d3ef4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faa873796e23787e4b4cc73f6caf4eda7bf40b28', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3041b124179ef850ed10f74b0ad59e1cc450321', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44c7112db7808dae3c0774985c7a1d243646a2bd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c547f049886533b20798ca8653869843a6ec401', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ebe955d6e161e946e0f7cb7d28e8d3b496d9c53', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed00b9728a25ee0ebce1bccb3dd767f89630fb13', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f26dd23f26623ba1a1c7d0c6d82c24410eb4768', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '240419943f69eda1269e8a7d7be848d5f9488e45', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '610bf4cbe68fdfe785f2ae7645fc5e33c7cddd53', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60bad73648ee5dc46d46265b6f9aee45c9bb08f4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fad88002ac2f27e582c0f76dfb1b94acb784cb0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81e7e9daca9bde625b9dff847efe005f9a911ef5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5d060c1736e03af88cb1ac536199d6a296da417', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b43dfb4f829eec6bc0fde07ce71fcd31070fcf2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '274ed5eaefd16453d5022d8ec57ceaaf2a7d7521', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e42eff237ada09f53c683fd093a4bfa8c55f3d8a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78e53b650b3051e99cae41de0970373df36a9f39', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f98844a13d6d8044a25edb30dc6474a4ff67cc0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15fd337db6bed4364dc6f9105b3d66aede634515', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e603685367fcb3fd94f891089378e23362ef891', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4680e632bd4da30c63327c0d3ae21b986b425d1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c96f4fdec714f8282ddd8b83b70383a63cf5df0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5024ec620a0afd7645e8a798987f8931197388d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59e4d77bdb1fb1125027f3dbd1bd7d77ced95404', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '055476d5e1628a2103e9b5868e7ca0372530e627', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e6088b79349f7c883e4034536711de12fd38dee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '952abee59c328cd8d28729d7cc17f5ef2be3163b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '418cad47ce10c843f49911681ce5cc2f7a368169', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b0cbf04ac334dfebb4b0be18460339657adc369', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '546fcb245d8b2dd255f5bf7d891536e3de349fd9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3fd2f04c25afe4c387abbfd5c302c091cc86cb0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea2a4d022d36aaaed1b9b2d4b5dddf0e1d155bb9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35d99ad742413b99151af98faec0dd3afe11ffc3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b17090efb5cd59fe2c29197acef692c6e0446a9b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49b5b616844d4d0abf894db8867fdf0ed2da8983', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ac3aac013e7e5c85c6d009d588f673749d14766', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c2d1d444f94f2fe192bda722411800e07a8db56', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7a84a55c23cd1874ce8a6c8f3675ba307588af4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a686ada9c2ca593c499939f704b2e14cfe070c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '214c103b3e5a9c06be852044fa2c3750aa975643', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f0b05ce6d013703d01908d338c225b59959576f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '723ece0e1e358d886bc4c8183069619dc8727b18', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cecef8ba057c03d54a776bd0792b6ad05f1aae1b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30464be9f8a03c10fdd5492edb4ac8ffe10fa285', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33765f6d1736a5bc2194b747a3221dfde75d261a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28
1557366539,Implemented Pagination for 4 tabs in /contributor-dashboard-admin: GSoCM2.6,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes #18906 and part of #17440 .
2. This PR does the following: Implementing Pagination for 4 tabs in /contributor-dashboard-admin. All the backend changes for the pagination was already done and this PR deals with only the frontend work.

This PR is the branch of #19017, so it also contains changed from that PR. Files relevant to this PR only are:

- core/templates/pages/contributor-dashboard-admin-page/contributor-dashboard-tables/**contributor-admin-stats-table.component.html**

- core/templates/pages/contributor-dashboard-admin-page/contributor-dashboard-tables/**contributor-admin-stats-table.component.spec.ts**

- core/templates/pages/contributor-dashboard-admin-page/contributor-dashboard-tables/**contributor-admin-stats-table.component.ts** 

**PageSize options given in the demo are [1, 2, 3] but it'll actually be [20, 50, 100] with 20 as default.**

## Essential Checklist

- [x] The **PR title** starts with ""Fix #bugnum: "" or ""Fix part of #bugnum: ..."",
followed by a short, clear summary of the changes.
- [x] I have followed the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Make-a-pull-request).
- [x] The linter/Karma presubmit checks have passed on my local machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
- [x] My PR follows the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide).
- [x] I have assigned the correct reviewers to this PR (or will leave a
comment with the phrase ""@{{reviewer_username}} PTAL"" if I don't have
permissions to assign reviewers directly).

## Proof that changes are correct

**TRANSLATION SUBMITTERS TAB** have total of 5 entries and other tabs only have 2 entries.

[Screencast from 15-10-23 01:30:38 PM IST.webm](https://github.com/oppia/oppia/assets/91470808/f6328425-a94e-407a-aa8e-5826e11e9639)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes
made in this PR work correctly. If this PR is for a developer-facing feature,
provide the videos/screenshots of developer-facing interface. Please also include
videos/screenshots of the developer tools browser console, so that we can be
sure that there are no console errors.

When you make updates to the PR, please update these videos/screenshots as well.
You can drop videos/screenshots from previous versions of the PR.

The above should be done for all PRs, including short ones (e.g. a single-line change).
However, if the changes in your PRs are autogenerated via a script and you cannot
provide proof for the changes then please leave a comment ""No proof of changes
needed because {{Reason}}"" and remove all the sections below.
-->

#### Proof of changes on desktop with slow/throttled network

<!--
Make sure to properly verify that everything works correctly, and that there are
no weird UI mistakes or other problems. Also, if there are any newly added fields,
try to fill them out and test that different inputs are correctly accepted/rejected.

Throttle the network (to 3G) using the browser Developer Tools (see references below).
There should be no performance or UI issues while the network is slow.

References:
 - Chrome: https://css-tricks.com/throttling-the-network/
 - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Throttling
-->

#### Proof of changes on mobile phone

<!--
In some cases this is not needed (e.g. for pages that we do not expect to
support mobile phones, or for backend-only features).

Feel free to use the Developer Tools emulator for this.

References:
 - Chrome: https://developer.chrome.com/docs/devtools/device-mode/
 - Firefox: https://firefox-source-docs.mozilla.org/devtools-user/index.html#responsive-design-mode
-->

#### Proof of changes in Arabic language

<!--
If the PR changes the UI, make sure to add screenshots with the site
language set to Arabic as well (we use Arabic as it is a language written from right to left).
-->

## PR Pointers

- Never force push! If you do, your PR will be closed.
- To reply to reviewers, follow these instructions: https://github.com/oppia/oppia/wiki/Make-a-pull-request#step-5-address-review-comments-until-all-reviewers-approve
- Some e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-CI-checks-fail-on-your-PR).
- See the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia's-code-owners-and-checks-to-be-carried-out-by-developers) for what code owners will expect.
",True,19018,https://api.github.com/repos/oppia/oppia/pulls/19018,https://github.com/oppia/oppia/pull/19018,closed,335,167,4,171,7,0,1,1,[{'name': 'PR: LGTM'}],2023-10-15 09:07:42+00:00,2023-10-19 16:35:21+00:00,372459.0,"4 days, 7:27:39",[],"[{'commit_sha': '6171b736954b5f512be1887277b98b2f053f75c3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77bfec799dcad5abc73c54d2629644b3c344dc98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7daeb5142263bf51595a4fe5d6826d670b85c0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e133f1cd5285795b6918a0e163bf6339705e353', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff8fbc2afc1b2d8ea09cf91c449750ff98eefe6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f77454d10fbdba199891199b6bd32d358e7cd4db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2532f40b36a5374e10c4528afac842d860c32054', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f14ea8247d6b68f4671dab1ac70f148d97c3da', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd2ba56722ecf20eba334b74c2e516de3b8d460', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a555922ef507f0476c14550e04d95eb92cbf0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd761400b867061396c7970325646147ef11c13b0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa6b96f187a3765a1defbe56f20c764d8a5d42e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a58333fc2f0e2e84448e16d57db66dbbf9d424', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa98b75320f167087d29c414beecaba20f44d98', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0219cb15b302ab1cbf099a4e37a998bac16245a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd23085333c54dc462bbb934005c5a03e6f9f9f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca8f4b256832ceece27b220f415ea44d4c9955', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b268197690e555d3ad21bb9ef47781e0b94629', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a4d595ee04e8b4ba27092b4eda68a9999c2496e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5757c0499f74e061065f91371ad1d485fd2a7f60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d5423c9feb3a9f8bb53037c4c546ddda285327', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4c16fe508d34c9099606b9438afa3f0f620082', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aebbdd232cf7da200bc94c8c83632d0647b8dcc9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bb334787dc584204209080908b905910ad39c1e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9df7c25150b5f3b5405a358d182852128bb9db96', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cb1a8a90f2306566694bf8043adb3cbc8dcb976', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc53f298dc153d1807ed34a6f74bea55b73600c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fe0440ab34c7f0409f107174b2ca48f31c587b7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e14c166bd118e10ffcb17b1ab870ba495de1212', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e52c226143bdbd6a0d4ae3a7cb1dd06613ce23dd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69a4c00e7cade2a7b20b6d2fd48453e5f850a679', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91542bfbad9939def7bcd7eadec54850f1f90dfb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5d527a5966354a9a060ea4ce7ca62aacab01a69', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e9af8321ff37bdd7dbb00e1c21b06144d9b0b84', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef53f79c96cfe1496177e62dfe44d0a2a9b3bea4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ac7365696c276dbd43a1b88b9d04fb6fa5575f9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ddc6815d78f48cdb97c44a737e4456e622c431a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b0ff9520d58a61ba1f814125f75ada6de6545cf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd474ec8867e612c4ca61d11b1ef3dace9c22ab1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c61ad5c1660739105e764c0cfa9f191208b972', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '506ea48ff67f2d442c56217bf7acab5d38f5ad49', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da445f47f1101f7b5b149292c0ecffca72da3404', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fea361e145fac8a0141dae412a67d937cc03dbd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c54ad2903d64a8f8de2cae1a036d857df4a42e1f', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9873799f210e4b3e4702e4296a9a9c5e4e367c07', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '805e9b46656cc404c8df73c55248ffb644dd8cfc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca0bf17e41dddfd7208cf38b7d19a08a808d0d3b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76e76f982f8bb54f505f8053b3b85b68ba2c1601', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02178378b9ccddad923e47ab09b5a02631d69034', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02e64d0f20d17e43293df2b90da55c8449774b3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e65db93faee0cf5d032f32713cf45b51aa6a76b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7333810093e32fa2b859d3792d7fc5889cf7bdd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86500b1f59292860176522525602de4c03c3e0ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e06b81d8cf34e1732bf5c7eacb8f8f603a883d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '380e3a9090999652b8b5fe8ca292ebb09e9e5497', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0111b2d65891ef755e02bb8a8a2209ba0ca75fe5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0548583ebc366fbcccd90000b60d505796a5bd3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2f6150104a8df1394d7fb522d784238f5a781c7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '128a75591a6ca0b06c29695cdec8747458e9b87b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '286473199840c61f44f12f867e61d8385ebd5728', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cd2fe2083555d88ff3b36840cf88938f65887f5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b622351404d3143614f9eb4921a51e115f9e37cf', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93064202037ced682a43ac826e624787f8fedd2e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e37fe7aa7622c3ea90111ae4e5ce5c2fe74574a2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e5425ab8fb38f8d260cf7347cafd434ee84b8a1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46532b1afaec3b1adad5429ea4636a967712d6a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dec08dc02b300a207d481dd0979d513cfc672b84', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48d65cb4f10e6718ac66ee47cf956840258f0b4e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '652a90e50a0147a330f03344573f239753e4ec02', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e14739300e329a02f4f2026b3c64e6d681f55893', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19493a1b3d4ebc2aacc1e76c0aed6f85e4d4c6ee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f39beb3be98dc7ea7235408faa6865aa6e96b853', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '002a6e1e4b21601659b875e2fe0954f2f7676d8b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '045b6c20587f6d768179dcb4534e138f9b215ea1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ffea20bf2c67f0cfc916b43e2d1847c58bc573a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd428a91db0a9a046a84d28d85c200ca1d37ec092', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e9229893233b7db5caa844b731b18184041b3c6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbd103610bfc85e1a7bcefa5c1c46916642d4c60', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3073c125955f56b945c1224f6a1441b4989d262', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b1af89c978add65e34765a6b827e91c0f1b4d3b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bff2433e53b2b0618de9dcdd44648f2e83120a40', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1b6dba310fbfcc7209062de9d6ec386c9184690', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c446f3163721c285cf3a2d05145a4a70df8127', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f84db1f2412797acf4b9d766649dbd4b7445c656', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd518e399cdc3ecc69bdc459ae39b6970c4ed5d6a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e4f80deb196bbed38d7f1abf6421f52446b6d7', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e435355380d83856b4dde17c2a962cd4e737183', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed949958e201c70c5c8a5a11844375396554e67', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dac2c088833c39e5c150695c57565ccb23a2d0e0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ebf2399cf7e80d8cff274e14ab2fc1a8e86ebcd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4a120c4caf287f1ff03991eaa4acb7ca083af12', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e580ff68f1418703bcf5065958c75e1c1d397394', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f19065aa7690b0b213d305ebbb7e471e0a70ec25', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9427932b2e945de13b3868889e9eb55a8373f6cb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '862a04714df4adc4d8bd2d6eddea92079b8ee578', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40248e980ea72d5143675fa2e8e1a4d57f732d22', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38e596db3f577413ef1e33aa305eef9e6fbda122', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '435d7068729409eb4b36f5358cc7a34930d76e51', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '606a5c91c15aef24bfd9ec8a78959051d52ebc2d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3df0563c19f60d7f363b0df85a308ca901f375', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '491303bf201ed9dc4ddc1de850591796bd791fdc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80c2f5746a2c5c3702cfbd3bb0c3272748ebbfcb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2842fb6ea9f4a754b951c1eb48feb32c4d555e19', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a994fa33c742993434aa34298e2df78c9fe326e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '612d6587a3b46dc19aed166d8e143f251278e7d0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c6824b9bed7ffeec8ceab7fe7ea55249fc35223', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39165309e0fd55cc79bc5db28b09f15369539dba', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f3421f91fec099555ac10ed49cd3055e6e96343', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6b6966f3a51d5085909c8ba2b1ce35fad3d26db', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '497c3220d36b195374e235cc94facc96979d81fe', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7271f2ccc87eb204e05d07a1a19dcd7cb31ff7c', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d301a31175fe1281c127697ad8ba992ee3c4fd5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5790625363b412e4e855ca690f79a2f3add5aea6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '848f97e1b1bd6b6039e78626a05c57a1f2bd7ca4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a8de10c9bd235cf02c0a7d0564a7a9cd113aa3d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e4b7184acb3aadc0b766b826bae935b903a05ca', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7a55233a2afb289c61d28d9479afeb5d8658e65', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864cb5a594fa4598a99ecf35b60d4f079c37de3e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67a0301c28c87f8612177b128f9bab7fd3c594fc', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c555f3ed40db2772ff7b5de75af58c9ac0a527e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f004119a2792762c4e6d80e7fbdd9122f457d354', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6be9e3411fd7eb5d103fb949a313e7a5d444df05', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0186202aa5d9094cd78848271a8c57bac02ca844', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b750751fbd03e1ced264a0fdefb2eeab97e0c25e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd084134620a4139baca00fff136324f70c9b69bb', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '380de8ca6d8a3505884a52545bbc9665667d3ef4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faa873796e23787e4b4cc73f6caf4eda7bf40b28', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3041b124179ef850ed10f74b0ad59e1cc450321', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44c7112db7808dae3c0774985c7a1d243646a2bd', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c547f049886533b20798ca8653869843a6ec401', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ebe955d6e161e946e0f7cb7d28e8d3b496d9c53', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed00b9728a25ee0ebce1bccb3dd767f89630fb13', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f26dd23f26623ba1a1c7d0c6d82c24410eb4768', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '240419943f69eda1269e8a7d7be848d5f9488e45', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '610bf4cbe68fdfe785f2ae7645fc5e33c7cddd53', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60bad73648ee5dc46d46265b6f9aee45c9bb08f4', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fad88002ac2f27e582c0f76dfb1b94acb784cb0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81e7e9daca9bde625b9dff847efe005f9a911ef5', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5d060c1736e03af88cb1ac536199d6a296da417', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b43dfb4f829eec6bc0fde07ce71fcd31070fcf2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '274ed5eaefd16453d5022d8ec57ceaaf2a7d7521', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e42eff237ada09f53c683fd093a4bfa8c55f3d8a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78e53b650b3051e99cae41de0970373df36a9f39', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f98844a13d6d8044a25edb30dc6474a4ff67cc0d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15fd337db6bed4364dc6f9105b3d66aede634515', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e603685367fcb3fd94f891089378e23362ef891', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4680e632bd4da30c63327c0d3ae21b986b425d1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c96f4fdec714f8282ddd8b83b70383a63cf5df0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5024ec620a0afd7645e8a798987f8931197388d', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59e4d77bdb1fb1125027f3dbd1bd7d77ced95404', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '055476d5e1628a2103e9b5868e7ca0372530e627', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e6088b79349f7c883e4034536711de12fd38dee', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '952abee59c328cd8d28729d7cc17f5ef2be3163b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '418cad47ce10c843f49911681ce5cc2f7a368169', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b0cbf04ac334dfebb4b0be18460339657adc369', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '546fcb245d8b2dd255f5bf7d891536e3de349fd9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3fd2f04c25afe4c387abbfd5c302c091cc86cb0', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea2a4d022d36aaaed1b9b2d4b5dddf0e1d155bb9', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35d99ad742413b99151af98faec0dd3afe11ffc3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b17090efb5cd59fe2c29197acef692c6e0446a9b', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b71c3d6b35aa57436637b8f3bea98b042923d5a', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '220adb92c813cc43dd57e0d53932238dadc68cb1', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00b34f3a82b6c1892413ee8d86f20df8679116b2', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7ef0b1cf8710988a441c127c0444fa5ae7d3e3', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f2bfaa1639ac815a375b085e7645fa85d40aa5e', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9162616650ae383707e05ab408ae7128b0701fd6', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bf6731c6b4a7bc8f6718f0d9dd8c2045e563fb8', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd334184776802d1166b4fa3019b0c583aedc1dac', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf7cde60862e093652b6e67fa0a976e91d0d6659', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2fade67b4ffdaeaa6500636883ac4f882b69c15', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3660b2589eea9769eb13bb6fd56b048277049947', 'committer_username': 'kshitij01042002', 'committer_name': 'Kshitij Patil', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 27, 11, 51, 56, tzinfo=datetime.timezone.utc)}]",Kshitij Patil,91470808,,User,,39,,18,28

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3846,5717,241,775,15760,1411,418,20,"[{'id': 1584867025, 'number': 19100, 'closed': datetime.datetime(2023, 11, 4, 21, 45, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 2, 18, 45, 18, tzinfo=datetime.timezone.utc), 'time_taken': 183618.0, 'time_delta': '2 days, 3:00:18', 'additions': 95, 'deletions': 3, 'state': 'closed'}, {'id': 1577907662, 'number': 19073, 'closed': datetime.datetime(2023, 10, 29, 22, 22, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 29, 15, 57, 53, tzinfo=datetime.timezone.utc), 'time_taken': 23092.0, 'time_delta': '6:24:52', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1561766432, 'number': 19032, 'closed': datetime.datetime(2023, 10, 20, 6, 35, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 18, 3, 56, 10, tzinfo=datetime.timezone.utc), 'time_taken': 182363.0, 'time_delta': '2 days, 2:39:23', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1557366539, 'number': 19018, 'closed': datetime.datetime(2023, 10, 19, 16, 35, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 15, 9, 7, 42, tzinfo=datetime.timezone.utc), 'time_taken': 372459.0, 'time_delta': '4 days, 7:27:39', 'additions': 335, 'deletions': 167, 'state': 'closed'}, {'id': 1556920816, 'number': 19017, 'closed': datetime.datetime(2023, 10, 18, 8, 9, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 14, 12, 44, 3, tzinfo=datetime.timezone.utc), 'time_taken': 329151.0, 'time_delta': '3 days, 19:25:51', 'additions': 1552, 'deletions': 51, 'state': 'closed'}, {'id': 1556915559, 'number': 19016, 'closed': datetime.datetime(2023, 10, 14, 12, 38, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 14, 12, 33, 16, tzinfo=datetime.timezone.utc), 'time_taken': 302.0, 'time_delta': '0:05:02', 'additions': 1587, 'deletions': 29, 'state': 'closed'}, {'id': 1536506679, 'number': 18960, 'closed': datetime.datetime(2023, 10, 14, 6, 3, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 30, 6, 38, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1207498.0, 'time_delta': '13 days, 23:24:58', 'additions': 1289, 'deletions': 201, 'state': 'closed'}, {'id': 1534297237, 'number': 18951, 'closed': datetime.datetime(2023, 10, 15, 17, 35, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 28, 14, 14, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1480808.0, 'time_delta': '17 days, 3:20:08', 'additions': 42, 'deletions': 133, 'state': 'closed'}, {'id': 1532584387, 'number': 18946, 'closed': datetime.datetime(2023, 10, 5, 9, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 27, 14, 37, 37, tzinfo=datetime.timezone.utc), 'time_taken': 673763.0, 'time_delta': '7 days, 19:09:23', 'additions': 1603, 'deletions': 83, 'state': 'closed'}, {'id': 1526226912, 'number': 18912, 'closed': datetime.datetime(2023, 9, 22, 18, 0, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 22, 9, 12, 28, tzinfo=datetime.timezone.utc), 'time_taken': 31662.0, 'time_delta': '8:47:42', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1526213043, 'number': 18911, 'closed': datetime.datetime(2023, 9, 22, 9, 4, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 22, 9, 3, 44, tzinfo=datetime.timezone.utc), 'time_taken': 47.0, 'time_delta': '0:00:47', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 1512496716, 'number': 18867, 'closed': datetime.datetime(2023, 9, 26, 19, 20, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 17, 8, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1217525.0, 'time_delta': '14 days, 2:12:05', 'additions': 714, 'deletions': 41, 'state': 'closed'}, {'id': 1464097354, 'number': 18744, 'closed': datetime.datetime(2023, 8, 18, 18, 16, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 6, 9, 37, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1067908.0, 'time_delta': '12 days, 8:38:28', 'additions': 621, 'deletions': 7, 'state': 'closed'}, {'id': 1445659221, 'number': 18669, 'closed': datetime.datetime(2023, 7, 27, 22, 12, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 23, 16, 38, 43, tzinfo=datetime.timezone.utc), 'time_taken': 365635.0, 'time_delta': '4 days, 5:33:55', 'additions': 3126, 'deletions': 91, 'state': 'closed'}, {'id': 1424608454, 'number': 18597, 'closed': datetime.datetime(2023, 9, 20, 7, 52, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 7, 12, 29, 27, tzinfo=datetime.timezone.utc), 'time_taken': 6463393.0, 'time_delta': '74 days, 19:23:13', 'additions': 1831, 'deletions': 0, 'state': 'closed'}, {'id': 1416246406, 'number': 18576, 'closed': datetime.datetime(2023, 7, 18, 19, 24, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 1, 16, 50, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1478030.0, 'time_delta': '17 days, 2:33:50', 'additions': 1232, 'deletions': 185, 'state': 'closed'}, {'id': 1411959737, 'number': 18560, 'closed': datetime.datetime(2023, 7, 14, 2, 9, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 28, 16, 16, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1331547.0, 'time_delta': '15 days, 9:52:27', 'additions': 2785, 'deletions': 119, 'state': 'closed'}, {'id': 1397061891, 'number': 18406, 'closed': datetime.datetime(2023, 6, 28, 17, 35, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 18, 9, 29, 41, tzinfo=datetime.timezone.utc), 'time_taken': 893134.0, 'time_delta': '10 days, 8:05:34', 'additions': 1574, 'deletions': 1, 'state': 'closed'}, {'id': 1387080193, 'number': 18358, 'closed': datetime.datetime(2023, 6, 14, 23, 12, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 10, 9, 6, 50, tzinfo=datetime.timezone.utc), 'time_taken': 396338.0, 'time_delta': '4 days, 14:05:38', 'additions': 615, 'deletions': 0, 'state': 'closed'}, {'id': 1380147841, 'number': 18340, 'closed': datetime.datetime(2023, 6, 13, 18, 22, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 6, 4, 30, 45, tzinfo=datetime.timezone.utc), 'time_taken': 654714.0, 'time_delta': '7 days, 13:51:54', 'additions': 5011, 'deletions': 7, 'state': 'closed'}, {'id': 1375424872, 'number': 18317, 'closed': datetime.datetime(2023, 6, 7, 16, 0, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 2, 9, 24, 15, tzinfo=datetime.timezone.utc), 'time_taken': 455756.0, 'time_delta': '5 days, 6:35:56', 'additions': 33, 'deletions': 6, 'state': 'closed'}, {'id': 1324240640, 'number': 18132, 'closed': datetime.datetime(2023, 6, 11, 21, 3, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 23, 4, 35, 10, tzinfo=datetime.timezone.utc), 'time_taken': 4292913.0, 'time_delta': '49 days, 16:28:33', 'additions': 150, 'deletions': 19, 'state': 'closed'}, {'id': 1287614234, 'number': 17809, 'closed': datetime.datetime(2023, 4, 12, 18, 24, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 23, 15, 27, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1738629.0, 'time_delta': '20 days, 2:57:09', 'additions': 44, 'deletions': 25, 'state': 'closed'}, {'id': 1272053983, 'number': 17677, 'closed': datetime.datetime(2023, 3, 22, 15, 15, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 11, 14, 6, 36, tzinfo=datetime.timezone.utc), 'time_taken': 954540.0, 'time_delta': '11 days, 1:09:00', 'additions': 37, 'deletions': 18, 'state': 'closed'}, {'id': 1246228796, 'number': 17403, 'closed': datetime.datetime(2023, 3, 14, 6, 48, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 19, 8, 18, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1981821.0, 'time_delta': '22 days, 22:30:21', 'additions': 69, 'deletions': 10, 'state': 'closed'}, {'id': 1242708619, 'number': 17365, 'closed': datetime.datetime(2023, 2, 28, 12, 21, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 15, 21, 1, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1091994.0, 'time_delta': '12 days, 15:19:54', 'additions': 21, 'deletions': 98, 'state': 'closed'}, {'id': 1237994464, 'number': 17337, 'closed': datetime.datetime(2023, 2, 16, 21, 5, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 12, 9, 36, 45, tzinfo=datetime.timezone.utc), 'time_taken': 386898.0, 'time_delta': '4 days, 11:28:18', 'additions': 18, 'deletions': 7, 'state': 'closed'}, {'id': 1236341775, 'number': 17304, 'closed': datetime.datetime(2023, 2, 22, 11, 51, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 10, 9, 0, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1047091.0, 'time_delta': '12 days, 2:51:31', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1231088825, 'number': 17257, 'closed': datetime.datetime(2023, 2, 13, 10, 3, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 6, 21, 25, 48, tzinfo=datetime.timezone.utc), 'time_taken': 563844.0, 'time_delta': '6 days, 12:37:24', 'additions': 73, 'deletions': 8, 'state': 'closed'}, {'id': 1218358794, 'number': 17158, 'closed': datetime.datetime(2023, 1, 27, 4, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 26, 19, 48, 11, tzinfo=datetime.timezone.utc), 'time_taken': 30589.0, 'time_delta': '8:29:49', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 1197227120, 'number': 16935, 'closed': datetime.datetime(2023, 2, 14, 21, 1, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 13, 20, 25, 22, tzinfo=datetime.timezone.utc), 'time_taken': 2766974.0, 'time_delta': '32 days, 0:36:14', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1197208590, 'number': 16934, 'closed': datetime.datetime(2023, 1, 16, 3, 4, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 13, 20, 9, 31, tzinfo=datetime.timezone.utc), 'time_taken': 197708.0, 'time_delta': '2 days, 6:55:08', 'additions': 0, 'deletions': 3, 'state': 'closed'}, {'id': 1192593512, 'number': 16885, 'closed': datetime.datetime(2023, 1, 10, 22, 42, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 10, 16, 0, 47, tzinfo=datetime.timezone.utc), 'time_taken': 24089.0, 'time_delta': '6:41:29', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1189705288, 'number': 16846, 'closed': datetime.datetime(2023, 2, 22, 12, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 8, 6, 22, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3909430.0, 'time_delta': '45 days, 5:57:10', 'additions': 53, 'deletions': 108, 'state': 'closed'}, {'id': 1178791617, 'number': 16786, 'closed': datetime.datetime(2022, 12, 31, 17, 49, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 27, 18, 57, 6, tzinfo=datetime.timezone.utc), 'time_taken': 341519.0, 'time_delta': '3 days, 22:51:59', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1175347557, 'number': 16767, 'closed': datetime.datetime(2022, 12, 25, 9, 0, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 22, 16, 14, 43, tzinfo=datetime.timezone.utc), 'time_taken': 233166.0, 'time_delta': '2 days, 16:46:06', 'additions': 2, 'deletions': 2, 'state': 'closed'}]"
