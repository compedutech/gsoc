pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1458498089,Add ensembling methods for tiling to Anomalib,"# Description

This PR adds mechanism to train ensemble of models on tiled images. It is part of Google Summer of Code. 

A lot of details on implementation as well as discussion can be accessed in #1131.

Closes #1727 

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] Refactor (non-breaking change which refactors the code base)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [x] This change requires a documentation update

## Checklist

Some things still todo (tests, docs...) but most of the code is ready for review.

- [x] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [x] I have performed a self-review of my code
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,1226,https://api.github.com/repos/openvinotoolkit/anomalib/pulls/1226,https://github.com/openvinotoolkit/anomalib/pull/1226,open,3895,5,40,196,10,110,1,0,[{'name': 'Feature'}],2023-08-01 17:21:40+00:00,,0.0,,"[{'comment_id': 1284187467, 'comment_body': ""We might have to revisit the naming of this tool. The term 'ensemble' is usually reserved for multiple models that aim to solve the same task. In our case each model learns a similar, but slightly different task (the anomaly detection task for each specific tile location). So without further context, the name 'ensemble' might be a bit misleading. To outsiders, `train_ensemble` might sound like we train an ensemble of models on the full images. Also, we don't want the naming of this tool to interfere if we decide to add classical ensemble methods in the future.\r\n\r\nThe main motivation behind this approach is that we want to increase the effective resolution of our input images by splitting the images into multiple tiles. It just so happens that the only way to achieve this for patch-based models is to train a separate model on each tile location. So at it's core, it's a tiling approach more than it is an ensembling approach. Accordingly, I would suggest to include tiling in the name, maybe something like `tiled_ensemble`, or `ensemble_tiling`, which would also be in line with the class name `EnsembleTiler`. But I'm open to other suggestions as well. \r\n\r\n@samet-akcay @ashwinvaidya17 also curious about your opinion on this."", 'comment_created': datetime.datetime(2023, 8, 4, 9, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1284260810, 'comment_body': 'Do you think it would be possible to include the tiling parameters in the main config, instead of having a separate file for it?', 'comment_created': datetime.datetime(2023, 8, 4, 10, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1284330612, 'comment_body': 'Not sure if these modules should be stored under `anomalib.models`. The `models` module is meant for model implementations and their building blocks. Most of these functions are more like utility functions needed by the ensemble entrypoint. Maybe we could create a directory `tools/ensemble_tiling` in which we store the script and the utility functions.', 'comment_created': datetime.datetime(2023, 8, 4, 11, 53, 25, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1284509461, 'comment_body': ""Yes, I agree. It would be much more clear. I'll wait for others opinions on this, but tiled_ensemble sounds okay. "", 'comment_created': datetime.datetime(2023, 8, 4, 14, 37, 15, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1284512504, 'comment_body': 'Yes, that was one thing we really quickly discussed last time with Samet. It can easily be done, and will I think even simplify setting up the config for users. So this should all be part of base config? I assume optional but documented that it should be added inside?', 'comment_created': datetime.datetime(2023, 8, 4, 14, 39, 44, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1284517433, 'comment_body': ""`models` probably isn't a good place for this, I agree. I will move that to `tools/ensemble_tiling`."", 'comment_created': datetime.datetime(2023, 8, 4, 14, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1286063163, 'comment_body': '```suggestion\r\n        self.collate_fn = collate_fn\r\n```', 'comment_created': datetime.datetime(2023, 8, 7, 15, 44, 17, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1286868004, 'comment_body': 'Would it be possible to use the new annotation format', 'comment_created': datetime.datetime(2023, 8, 8, 9, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1286888493, 'comment_body': 'Could you add the annotation for the rest of the docstring as well. This would be useful when the documentation is built. \n```suggestion\n        config (DictConfig | ListConfig): Configurable parameters object.\n```', 'comment_created': datetime.datetime(2023, 8, 8, 9, 53, 54, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1286900643, 'comment_body': '```suggestion\r\n""""""Fixtures that are used in ensemble testing""""""\r\n\r\n# Copyright (C) 2023 Intel Corporation\r\n# SPDX-License-Identifier: Apache-2.0\r\n\r\n```', 'comment_created': datetime.datetime(2023, 8, 8, 10, 4, 36, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1286901099, 'comment_body': 'Can you also add docstring and license header here please?', 'comment_created': datetime.datetime(2023, 8, 8, 10, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1286907230, 'comment_body': '```suggestion\r\ndef get_ensemble_config():\r\n```', 'comment_created': datetime.datetime(2023, 8, 8, 10, 10, 49, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1286914762, 'comment_body': 'One of my main concerns with this class is this `config` input. This is inline with the existing anomalib structure. However, we would like to avoid this design in v1.0, and have explicit arguments in the signature. \r\n\r\nThe main reason for our motivation is that this hides the configurations, and hurts the readability of the code. In addition, it does not work well with our upcoming CLI structure which will be based on `jsonargparse`. \r\n\r\nFor example, we would like to switch from the following:\r\nhttps://github.com/openvinotoolkit/anomalib/blob/a62cd92e33d8cb9cdb004c249edbb01af5a04739/src/anomalib/models/efficient_ad/lightning_model.py#L270-L277\r\n\r\nTo the following:\r\nhttps://github.com/openvinotoolkit/anomalib/blob/a62cd92e33d8cb9cdb004c249edbb01af5a04739/src/anomalib/models/efficient_ad/lightning_model.py#L68-L78', 'comment_created': datetime.datetime(2023, 8, 8, 10, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1288486008, 'comment_body': 'A small comment would be useful here', 'comment_created': datetime.datetime(2023, 8, 9, 13, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1288491952, 'comment_body': 'For completeness, I think it would be good to add a logging message before we start training. Something like ""Ensemble tiling is enabled. Anomalib will train separate models for X tile locations."" (or similar).', 'comment_created': datetime.datetime(2023, 8, 9, 13, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1288551748, 'comment_body': 'This will break if `val_split_mode` is set to `none` (which means that there is no validation set and validation should be skipped).', 'comment_created': datetime.datetime(2023, 8, 9, 14, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1288686576, 'comment_body': ""I like the design of this class in combination with the `TileCollater`. It's clean and easy to follow. Good job :)"", 'comment_created': datetime.datetime(2023, 8, 9, 15, 7, 50, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1288747712, 'comment_body': ""I'm not sure if I understand what do you mean by this? This is the signature of the hook exactly as in lightning parent module.\r\nShould it be something like `outputs: STEP_OUTPUT, *args, **kwargs`?"", 'comment_created': datetime.datetime(2023, 8, 9, 15, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1288750622, 'comment_body': 'Sure. Should I add these type annotations to all doc-strings then as well? I added them to all class docstrings, should the same be done for functions too?', 'comment_created': datetime.datetime(2023, 8, 9, 15, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1288796001, 'comment_body': ""So if I understand correctly, in this case I'd also need to warn user if threshold is not set to manual, same for minmax normalization that it might not make sense, as without validation you can't get thresholds and min max (The defaults here are 0.5 and -inf and inf, which is quite implicit in existing code)."", 'comment_created': datetime.datetime(2023, 8, 9, 15, 56, 54, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1290033711, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 10, 12, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1290034155, 'comment_body': 'Done for all tests', 'comment_created': datetime.datetime(2023, 8, 10, 12, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1290034312, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 10, 12, 15, 16, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1290041510, 'comment_body': 'Done for both config and metrics.', 'comment_created': datetime.datetime(2023, 8, 10, 12, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1290168291, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 10, 13, 51, 31, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1290178637, 'comment_body': 'Added', 'comment_created': datetime.datetime(2023, 8, 10, 13, 58, 4, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1290247888, 'comment_body': 'Should I do this for all classes or even for functions? Because some helper functions would become really messy this way.', 'comment_created': datetime.datetime(2023, 8, 10, 14, 45, 29, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1290338362, 'comment_body': 'I refactored all classes to now take explicit arguments.', 'comment_created': datetime.datetime(2023, 8, 10, 15, 44, 44, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294368429, 'comment_body': 'Would a user find it hard to follow the difference between `config` and `ens_config`? Would it be an idea to explicitly define these such as:\r\n\r\n```bash\r\n    python tools/tiled_ensemble/train_ensemble.py \\\r\n         --model_config src/anomalib/models/padim/config.yaml \\\r\n         --ensemble_config tools/tiled_ensemble/ens_config.yaml\r\n```', 'comment_created': datetime.datetime(2023, 8, 15, 9, 19, 56, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294377903, 'comment_body': '```suggestion\r\n* file_system - predictions are stored in the file system,\r\n```', 'comment_created': datetime.datetime(2023, 8, 15, 9, 28, 1, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294384113, 'comment_body': 'can we think of any alternative terminology before we settle on `tile` and `final` ?', 'comment_created': datetime.datetime(2023, 8, 15, 9, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294417649, 'comment_body': '> Metrics section overrides the one in main config.\r\n\r\nDo you mean the model config? Which one is the main one?', 'comment_created': datetime.datetime(2023, 8, 15, 10, 9, 36, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294418424, 'comment_body': 'Should we enable it in the docs, or wait a bit more?', 'comment_created': datetime.datetime(2023, 8, 15, 10, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294427509, 'comment_body': 'I know you explain it in the documentation, but a brief comment to what `rescale_factor` does would be helpful.', 'comment_created': datetime.datetime(2023, 8, 15, 10, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294427982, 'comment_body': 'brief comments to these would also be helpful', 'comment_created': datetime.datetime(2023, 8, 15, 10, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294429433, 'comment_body': 'we have two terminology that we use for tiling: `tiled_ensemble` and `ensemble_tiler`. I think it would be good to choose one of them, and use it throughout. @djdameln, any thoughts?', 'comment_created': datetime.datetime(2023, 8, 15, 10, 26, 16, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294430362, 'comment_body': 'Also should we keep function and classes in `tools` or inside `anomalib`? I have the feeling that `tools` could only contain the entry point scripts and the rest of the stuff could be inside `anomalib`. \r\n\r\nThoughts?', 'comment_created': datetime.datetime(2023, 8, 15, 10, 27, 41, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294450926, 'comment_body': 'is this accurate? Can you clarify in the doctoring what exactly the difference between `process` and `compute`?', 'comment_created': datetime.datetime(2023, 8, 15, 10, 57, 20, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294451909, 'comment_body': '@samet-akcay any update on this?\r\n', 'comment_created': datetime.datetime(2023, 8, 15, 10, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294452266, 'comment_body': '@samet-akcay any update here?', 'comment_created': datetime.datetime(2023, 8, 15, 10, 59, 21, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294452552, 'comment_body': '@djdameln any update?', 'comment_created': datetime.datetime(2023, 8, 15, 10, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294453169, 'comment_body': 'Yes, a very valid concern. I think it is confusing and renaming would be really needed. I will change to model_config and ensemble_config.', 'comment_created': datetime.datetime(2023, 8, 15, 11, 0, 40, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294453845, 'comment_body': ""If you don't mind, that would be great. Not sure what tool you use for doctoring generation, but `autoDocstring` extension of VSCode can automatically do this. "", 'comment_created': datetime.datetime(2023, 8, 15, 11, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294455676, 'comment_body': 'It could be more explicit like `individual_tile`, `joined_image` and `none`.', 'comment_created': datetime.datetime(2023, 8, 15, 11, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294456529, 'comment_body': ""oh sorry, I meant something like `Any | None`. Haven't tested it though?"", 'comment_created': datetime.datetime(2023, 8, 15, 11, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294456586, 'comment_body': 'Yes, main config is the model config. I will clarify this in code and in docs as well as do the previously discussed renaming of flags.', 'comment_created': datetime.datetime(2023, 8, 15, 11, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294467986, 'comment_body': 'It would be good to explain to the users why we need the basic implementation, or why is it named Basic', 'comment_created': datetime.datetime(2023, 8, 15, 11, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294470275, 'comment_body': 'is it first tiles? or first_tile', 'comment_created': datetime.datetime(2023, 8, 15, 11, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294472561, 'comment_body': '```suggestion\r\n    def add_tile_prediction(self, tile_index: tuple[int, int], tile_prediction: list[dict[str, Tensor | list]]) -> None:\r\n```', 'comment_created': datetime.datetime(2023, 8, 15, 11, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294472747, 'comment_body': '```suggestion\r\n    def get_batch_tiles(self, batch_index: int) -> dict[Tuple[int, int], dict]:\r\n```', 'comment_created': datetime.datetime(2023, 8, 15, 11, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294473414, 'comment_body': '```suggestion\r\n    def add_tile_prediction(self, tile_index: tuple[int, int], tile_prediction: list[Dict[str, Tensor | list]]) -> None:\r\n```\r\n\r\nAnd for the others please', 'comment_created': datetime.datetime(2023, 8, 15, 11, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294477927, 'comment_body': 'would it be an idea to have `num_tiles` attribute, like `tiler.num_tiles`?', 'comment_created': datetime.datetime(2023, 8, 15, 11, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294478664, 'comment_body': 'If we have `tiler.num_tiles`, we could potentially use it here as well, like:\r\n\r\n```python\r\nlogger.info(""Start of procedure for tile %s of %s"", tile_index, tiler.num_tiles)\r\n```', 'comment_created': datetime.datetime(2023, 8, 15, 11, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294480190, 'comment_body': 'can you explain what `stats.json` file is ? Would it be ok to use yaml in terms of extension consistency', 'comment_created': datetime.datetime(2023, 8, 15, 11, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1294861958, 'comment_body': ""I'm not sure, maybe we could wait a bit more, so it should stay there but be removed from index?"", 'comment_created': datetime.datetime(2023, 8, 15, 16, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294863915, 'comment_body': 'Ah, okay. I will sort this out.', 'comment_created': datetime.datetime(2023, 8, 15, 16, 43, 12, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294868091, 'comment_body': ""I think that code should be inside anomalib, that would also fit better with running the script as right now root needs to be added to pytonpath to work (just the way python works if you have source in same root as script).\r\n\r\nAbout naming, my idea was that the method is called tiled ensemble, but tiler class for this method is called ensemble tiler, but can be renamed to tiled ensemble tiller. I think it'd be good to hear @djdameln thoughts on this."", 'comment_created': datetime.datetime(2023, 8, 15, 16, 47, 12, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294869146, 'comment_body': ""Oh, this is a mistake as metrics were at first not part of the pipeline. I'll change that and go over other docstrings to make sure they are right. Thanks for catching this."", 'comment_created': datetime.datetime(2023, 8, 15, 16, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294873020, 'comment_body': ""The naming might even need to be adusted. The idea of it being basic is that it just joins the data, it doesn't perform any modification operations on the data except the averaging. Should the name be changed or do I write this clarification to docstring?"", 'comment_created': datetime.datetime(2023, 8, 15, 16, 52, 16, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294874506, 'comment_body': 'It is first tiles, as there are more tiles in one batch. I can clarify this more in a comment I think.', 'comment_created': datetime.datetime(2023, 8, 15, 16, 53, 52, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1294879234, 'comment_body': ""This is like metadata when using onnx or openvino.  In this case it contains min and max for normalization and thresholds for threshodling if that is done on joined images. I used json as it's used in onnx and openvino, but can change it to yaml."", 'comment_created': datetime.datetime(2023, 8, 15, 16, 58, 47, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297133277, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 17, 12, 14, 11, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297143320, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 17, 12, 23, 38, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297189419, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 17, 13, 1, 5, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297189762, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 17, 13, 1, 21, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297189895, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 17, 13, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297227417, 'comment_body': 'I changed this and added comment in yaml.', 'comment_created': datetime.datetime(2023, 8, 17, 13, 31, 27, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297227607, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2023, 8, 17, 13, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297228635, 'comment_body': 'I removed it from here for now.', 'comment_created': datetime.datetime(2023, 8, 17, 13, 32, 19, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297259319, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 8, 17, 13, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297261955, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 17, 13, 55, 56, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297296725, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 8, 17, 14, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297296891, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2023, 8, 17, 14, 21, 18, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297751571, 'comment_body': 'DOne', 'comment_created': datetime.datetime(2023, 8, 17, 21, 5, 21, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297757480, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 17, 21, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1297827853, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 17, 22, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1300031127, 'comment_body': 'This should now be fixed for all cases of test and val split modes, with additional warning if no val data is provided.', 'comment_created': datetime.datetime(2023, 8, 21, 12, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1301524210, 'comment_body': 'just a minor comment on the white space. it would be good to make this transparent so it would be well placed with darker backgrounds', 'comment_created': datetime.datetime(2023, 8, 22, 11, 49, 17, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301525094, 'comment_body': 'same as above.', 'comment_created': datetime.datetime(2023, 8, 22, 11, 50, 8, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301589910, 'comment_body': '```suggestion\r\n        storage: memory # options: [memory, file_system, memory_downscaled]\r\n        downscale_factor: 0.5\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 12, 43, 38, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301675009, 'comment_body': ""Only the borders? Because if background would be transparent, then the arrows wouldn't be properly visible."", 'comment_created': datetime.datetime(2023, 8, 22, 13, 45, 39, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1301804992, 'comment_body': '@ashwinvaidya17 it would be great to also hear your opinion on this.', 'comment_created': datetime.datetime(2023, 8, 22, 15, 13, 30, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1301805851, 'comment_body': 'As we decided, I now refactored this into a single class.', 'comment_created': datetime.datetime(2023, 8, 22, 15, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1301809999, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 8, 22, 15, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1304220334, 'comment_body': ""I agree. These methods can go inside `anomalib`. We can consider having a folder called pipelines/orchestration in anomalib. Maybe later on we can move these into the trainer folder (anomalib 1.0). We can collect exerimentation utilities here as well (like HPO). This will also make all these utilities available with `pip install`. I didn't go through it in detail but from my cursory look, we can move most of the code within anomalib and keep only the entry point. In Anomalib 1.0 we can consider replacing the entry point with `anomalib ensemble fit/test`.\r\nOther than that I have a few ideas for refactoring but that might not be part of the scope of this project and is aligned with the anomalib 1.0 design. The rest of the code looks very clean. Good job!"", 'comment_created': datetime.datetime(2023, 8, 24, 12, 2, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1321480789, 'comment_body': 'From what I understand, `compute` is only defined for `EnsembleMetrics`, and is the only one for which `final_compute` is set to `True`. I have two ideas here but they are more of a personal preference,\n1. Remove `final_compute` and implement `compute` for all sub-classes with `pass` or\n2. Use `is_overridden` from `lightning_utilities.core.overrides` to explicitly check if the step has `compute` defined\n    something like\n    ```python\n    if is_overridden(""compute"", step):\n        step.compute()\n    ```', 'comment_created': datetime.datetime(2023, 9, 11, 12, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654358576, 'comment_body': 'How about we rename this to `SmoothSeams`?', 'comment_created': datetime.datetime(2024, 6, 26, 8, 21, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654375603, 'comment_body': ""Since each job is supposed to be independent, how about we move this to a separate section in the config.\nInstead of defining the entire config under pipeline we can move each config under its separate key. So, if we set the `SmoothingJob.name` parameter to `SmoothSeams` or something, we can then move `seam_smoothing` section under `post_processing` to `SmoothSeams`.\n\n```yaml\nTrainModel:\n    ...\n\nPredict:\n    ...\n\nSmoothSeams:\n    apply: True\n    sigma: 2\n    width: 0.1\n\nComputeStatistics:\n    ...\n```\n\nThen we can just check `if args['SmoothSeams']['apply']:`"", 'comment_created': datetime.datetime(2024, 6, 26, 8, 33, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654380624, 'comment_body': 'How about we pass `accelerator` in the `init` method? This way, the only arguments this method relies are under the `seam_smoothing` method.', 'comment_created': datetime.datetime(2024, 6, 26, 8, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654408455, 'comment_body': 'Is this supposed to be `sigma`?', 'comment_created': datetime.datetime(2024, 6, 26, 8, 53, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654422531, 'comment_body': 'From what I see, `accelerator` is common between `TrainModelJob, PredictJob, SmoothingJob`. `seed` and `normalization_stage` is common between predict `TrainModelJob` and `PredictJob`. While, logically it makes sense to have well defined steps like `post_processing`, since each job is designed to be independent, I have another alternative rather than defining everything under `pipeline`. We can group all parameters that are shared more than once across jobs, and split the others.\n\n```yaml\nseed: 42\naccelerator: ""cpu""\ndefault_root_dir: ""results""\ntiling:\n    ...\nnormalization_stage:\n    ...\nthreshold:\n    ...\ndata:\n    ...\n\nTrainModel:\n    metrics:\n        ...\n    trainer:\n        ...\n\nSmoothingJob:\n    apply:\n    sigma:\n    width:\n\n```\n\nWe can then pass the common parameters during initialization. Something like this\n```python\ndef _setup_runners(...)->...:\n    normalization_stage = args[\'normalization_stage\']\n    data  = args[\'data\']\n    ParallelRunner(TrainModelJobGenerator(self.root_dir, normalization_stage=normalization_stage, ...))\n```\n\nWhat do you think?', 'comment_created': datetime.datetime(2024, 6, 26, 9, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654429262, 'comment_body': 'Minor comment but should we directly pass `args[""data""]""` to this method? So, the signature can be `data_args: dict`.', 'comment_created': datetime.datetime(2024, 6, 26, 9, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654429444, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2024, 6, 26, 9, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654443027, 'comment_body': 'Personally, I prefer job specific name. So, something like `name= ""visualization""`.', 'comment_created': datetime.datetime(2024, 6, 26, 9, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654446777, 'comment_body': '```suggestion\n# Copyright (C) 2024 Intel Corporation\n```', 'comment_created': datetime.datetime(2024, 6, 26, 9, 19, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654447253, 'comment_body': '```suggestion\n# Copyright (C) 2024 Intel Corporation\n```', 'comment_created': datetime.datetime(2024, 6, 26, 9, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654450435, 'comment_body': 'Is this up-to-date?', 'comment_created': datetime.datetime(2024, 6, 26, 9, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654451542, 'comment_body': 'Do we need this here now that is moved to `src/anomalib`?', 'comment_created': datetime.datetime(2024, 6, 26, 9, 22, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654453276, 'comment_body': 'I guess this needs to be updated as well.', 'comment_created': datetime.datetime(2024, 6, 26, 9, 23, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654455904, 'comment_body': 'I am confused about this. Is this still relevant?', 'comment_created': datetime.datetime(2024, 6, 26, 9, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1702030566, 'comment_body': ""The solution above should work for this case and is much nicer than what I have now. \r\n\r\nThe problem here is that some pipeline stages require args from some other part of config. For example, model training job needs to know normalization stage to determine if normalization should be applied at tile level, but normalization stage is is part of post processing. Since the pipeline class does this `_args = args.get(runner.generator.job_class.name, None)` it would then mean that train job doesn't have access, or I'd need to duplicate this.\r\n\r\nSo I'm not sure how to best handle such cases with current design."", 'comment_created': datetime.datetime(2024, 8, 2, 15, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1702030897, 'comment_body': ""This is no longer used, I'll delete these files asap."", 'comment_created': datetime.datetime(2024, 8, 2, 15, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1702035417, 'comment_body': 'That could work yeah. Seam smoothing actually relies only on the params under seam_smoothing.', 'comment_created': datetime.datetime(2024, 8, 2, 15, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1702036115, 'comment_body': 'Yes, thanks.', 'comment_created': datetime.datetime(2024, 8, 2, 15, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1702039160, 'comment_body': 'One possibility is to somehow accumulate the ones that are shared under one name, but then the config file looses the structure a bit.\r\n', 'comment_created': datetime.datetime(2024, 8, 2, 15, 55, 45, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1702039581, 'comment_body': 'These are old files, will be removed.', 'comment_created': datetime.datetime(2024, 8, 2, 15, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1702039863, 'comment_body': ""No, I'll delete this."", 'comment_created': datetime.datetime(2024, 8, 2, 15, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1702040219, 'comment_body': ""I'll go over the test and rewrite them after I refactor the other things that you pointed out. "", 'comment_created': datetime.datetime(2024, 8, 2, 15, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1702040442, 'comment_body': ""No it's not, I'll remove this."", 'comment_created': datetime.datetime(2024, 8, 2, 15, 56, 54, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}, {'comment_id': 1702085510, 'comment_body': ""That is a great idea! I'll refactor this in this way."", 'comment_created': datetime.datetime(2024, 8, 2, 16, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'blaz-r', 'type': 'User'}]","[{'commit_sha': '73fa06287f75e07b4f4defa3207f802a3c44af23', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eeb0b905c16e06371cdfce65a1c0ef17313ad596', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c60ab7f7a0df90f01a271591933998d04ebfbe6', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b38ea6d5f2d938f2555db318376b72c4949831a7', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ea1047310901d79d0fbd5fd4cf8b7b60d3f4c7d', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24d32f89db092f00b843fdf19cbd2f1db25dafe5', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '971cd7f9f88910e62ff386c3792e0ef62b394aa2', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53d110bfccfa78d6b04b512c2356d39ad8af2daf', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32373795b9259cc37d2aee7a676ccb9af6eb8245', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '621e1b4abbec04d613fb791c8b42a243de417e8c', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c7785c8edb01f7eef5bae05476a25fd876a7166', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b934db3eeefa2c86ba61c4224d64b12e7c5690f9', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71dabaf19c731d2cd93bbe988690642a44ae9804', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef69183c8306a55ad0dfe37360f55dd988826018', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c1357c371d41b8776b0a752459b2069588634dc', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0845114c9be0f1bf73f780700cc6134d1e6b39e9', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a0ecfa5f29c1d3073a8f814ab77b95897d2bd03', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8437875718c13f856fe0fcc944ec8468762d97ef', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8ecb6ec1bbd688baf6960a648a9da81bcc5f81c', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86c62c7bc8830e529753729763d19aaa210c23ee', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9bb6153b27a212ed7a72dfb4b682dbe928fe494', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e2dbda2c55f9c7959600d6a4dcdffa507497dd1', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28ea8a2cebbca1e799f62e3429fcac8d458e01d1', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c321e60f11da4325bb3687efe0e9d8cbda47fd7e', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd90ef3d5887a1057f79d4a571c3cccbf07f6cba', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '941439ee99e40ea7e0bb87da2c21f35ae5dded14', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42023c666f9a108ca3b0465794730671a942395a', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69bd0e858b8cddedf7aa12ad22950b960cf451e8', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06eb042a83eaddc04d79826b3910e0ed86ebbad7', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b9c3aa7ac570dfbd2b5a61ac7333eba345edb1', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94bc48589b67b2dd4f557ce54977aa6556952169', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17b56557fd36db1683fa25e1e63b2b07e2804283', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc22440d9c3a986640046957baa71ecf2d6096e2', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1be665edfdec092b194df82532e248f759614fe', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '752a749b1896e2491d393d86bd2cedd791094fba', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a7b5268d91a98de63d60df3e3325ea9833fd0c4', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0916591beaab717ed0a5bc5016c7aa8b96ec209', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19d036e3e1427f8fab67c6dd82d7a3280259b0e2', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a607f736ec50844103745107648d085d9cd531c5', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62085de723240333363baa4579998dc40fb6a151', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c81a61283f9762ab35a89d0a03e4f87298cc6271', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faf28394018f5fce613c33f3e7207f9cd76d4fe9', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a359b025d4cb090270ce7e4481973dcd6268687b', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '326b30476ec5dd44abf5bf9865274df4e937fda5', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2e7893a8a22429a455288d63e8206f0eb62893', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '184bdb256881342113201df5f09b31db47e99fb4', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8723034528fd2adc569561d0d62f81bc8b76493', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7ab2a545a59889909b35299525efe3846c2e4b5', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cc9c65c6dcb6a40ad4d79d62e720cec88bb1b8d', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac8b657efb3684d4a5700804ea54c3443b05fdb4', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4b3611596c53724aa2323c93551b9aebc8defc1', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '894d9ea4bba406af47a1cd92ab8ee02e57ad18a7', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95812e435d5081d072b88c2466c109805dd185e4', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58426239cb4862e120baf81f1714206e57b860e3', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '447613bcec36ba960f2f5e30daec0acfa8905863', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a04dc4a4ca7c5781db2a08518fa11e6e35bbbc0', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '548bf20628098c4f68d71ea2101a256db1dc0f73', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f04818c6c06e42ff3dbe6cf63a37d903f661b800', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab794eb0d6fb1f65e6aa6c9842c6f1bfbb0979ac', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa21c83211ed888630a271221c72655af15c0bf6', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66973898b4053880745fe44561e27de61de29289', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbb593f442fb11a546abe89cc23a8d01e8e0a038', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e1939c9efc091b17061e55528758c696beffd58', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfebf9b4c407c3ba428804ef3110d171860ffb58', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2e3a01e371a9c35ee6b5c9f41de642794c89c18', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8941a6ec1e12dbe61e2f6a1cb9cdda4a4b9c1e5a', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87adbd774704ba08205c666a89d1547d7f4d709e', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7c537cc7e2ee1f5026a1b3079c97d055ab20111', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f103de0bfc9412ade4f87cea90808af7590cee6', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c7662abedf8adede93d027ae34026c980ac779a', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adf281ffbb48ea8633bf46d3f5159035eaa63b71', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6ca8602bff4bd3c6004e0ee489de5125e60a8f8', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24568f30b7d7d454314508048542a79d78218a57', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02dc3562e5e13975dee55b2d5dce6925fde8a402', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '770fe3495ad2973b0c727ef27fa75406ccdc451f', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c45fe683577f027692a7103a0f81589ca5be0a5', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6440bd035b8e8d9b39def5f55cdf866cbff5a1a9', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5bc6cbaabf6d886278e48f3f3f0a133e3cba8f8', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb5b12546f49449e2e63c3e5c7e986e352d72901', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e1840ccb81d54a4cfadbe914aefd50a49357a66', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '057528d62cd42f6c1b5901eb35944b4cd8d8a068', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b3c4f2f35f448d5c18f46494dc8e388ca1718b7', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0709799824133157dcc775bd833c3e1405e56a4', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab22b7244e7a9af095e71b961a1560e7b547fa7', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69ccc6535816044ebdf27e163383634e01add4cd', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fbc67d33e65b2988f5f2a330a4fad8ebf929e4a', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd431637ad11a605c82abea7c8d4300560a4041bf', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8753910b51b071c2feb4109d12d4eb46612bebe', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29a311a3c7b3309d231d659028a416eb2c7dd439', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b0ce71874cceb8bee97c2f4689f525af0061d3c', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a0bb1efe0d5c4cde7018a7b3690a893fff95676', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fbf89a8c938c03039cc9e2f392ef14232eb7484', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f1ebe6a809f91eda6a00dc7126f0e9f51ddf8ee', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f9c16feba321b5bc76aac951abe31db61cbaf10', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '333ab235f3146580cf40aace249b5513e88b9cd2', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9719044d7db4d1bf673333db16ba6a74124a252e', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf9a77a089865452f2d2b7ec703eceb544d4bcb0', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d9f670ebea32f97ac5767f5453303c7d657dc15', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd917b7fb56da2fe5ef1b5b8bd9b30e431dac18a1', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8856421021464e01d0bc8574f52942fb2ac4beb', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b21e0ba471fc1843701e70a387d71b0fcafc966', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89fade89848266ffe369345f1e689c05fe3d18f2', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d5371ed02373eb7ccdc2004e94a86083023e6bb', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e191083fb03268f2a8e1ba4925960c72287b814', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '866e3decb381db7098e0db1b31a4e8ff66dadb92', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08aef87e9be2416fc0ad93261b9df58b53dc9e67', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d37c60bb62925830dde2cca241f09c76bbef668', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cfcb4a4cdfd5af8cde220245cb4d4acbf11e8c0', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbfe1c6afd90f6dadd314fcaaa346bea31ebfaa6', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5845f5b803c942e03f830c068d6f692766c566e8', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bea6e778f1f185aac54e9958a9e4141b2d1be68', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25d22a43cdd3d475ab247928382e233559c83a26', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6055f6824d823e5e1abb2b2fa46230083e432b51', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b4aa43e8712c4eb350e3d80f9ba6c1d7cd1cd6d', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d4b97d63e81c20036ed737bc8d14fa9a3b2fdcd', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a25baac60ed549c8f98ccb7847515c7d7e5f32b', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bc68f9c94961624438c3948748b19a54009c891', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '262a8a13c21cd2280fba766d64411e6db7b6b9ab', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73a1960b98509ca07c0a7467dadc1050cf55385b', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c1a115817620a18abdf7233a692a624e12d8874', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a3b625fa7be7fba453ed5bd5b79491a37ae291a', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89275b918736b4b7536e2a34cf41dc76d0fca3a3', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78e71e22ade0924636d1d8a71c5bd2cefc3b04d8', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3720f84c2709e646275a3554429a65df6dcc507', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0143db96068f5c463db260865536a4080896206e', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c199494487719cfbba13a1e33e01cc796e4b1bcb', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1976d4ec89f68a6bd66619e73bb37c5be5d2c825', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33f11258afe74161fcc9099db9ca19af09fd0859', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae3ac29a91677103f4d455298ae71eaf60aa63c3', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f5a4a7eca42eb87e9842d16cbe1d7164a5b84f7', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09c03658930887d91b8c33a920e6181b0fa73796', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5eb735fa29c46f1783ac7ae26259c9fccad6a985', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cf3ea06cb65bc14969ce2fb544b5cb22e564842', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11cbab65a4ab8235ccf9c2becc5ad988da8ac1f9', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5bb093262f38dcd44506e2e83152a6711fb34d8', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f99a070f31c4fbec62ebb30ae4b5027483ff76ed', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f55cb7bda8cb4f3515037481158323980227181', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ff7281c0735989845d5a7a70175c89ee25844ef', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a083a6d94e0508b4ef9a7079d6d014860b1cb12', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16a28a412ec9007e8635fcfa9fc7a2a39ffd7737', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e40ff34873c0177ebb786727d43e36056c7286', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b47f2dd5de0e14218e2cdb9fe71caa7285972e3e', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dba87e11cc2281f76b5de0a4a9674b69475f1c2', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fab1a5112730b2cd16bdda42cddcf35f598ed09', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97e9cb65490ec59577ad689602467b6ed0ed4372', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2c17097d9a047b08a5ea85a97e67779790c5e5d', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '811c4e84c5851eb7ce988d04de93dc9aaa2d8e19', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ab91ac9062af30d0e38386137f99f63389cbc81', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '808698f306bc498f7c161576bea7a2490340419b', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b21129cd99d3898b02bc7f3d7ffbf9bd64dab1fb', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc507c4fc9397523961706a909aafa30b7b0ca21', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ca5493e06e87cca68feccac2260e3a124014cc', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0ded2ec73a7bbbc310c4f76fd65ce1e7584e565', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b6b41ebaeb0a016588615533752b522a26d2376', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d4b0d389ebbd3c68f1ee852d2569a5aa9a5ef52', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6ce60b426c4eba7ea1a4184860869910357149', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b1aa463fedbd64824c1413e27df7e9a4c4809b6', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfa4aa297b130cdf10a23ec6b3e42579430fdf3c', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b686032e036cca9fb17af8c7a2e4ae51f9c75c', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82cfc00b2c7e47aa5e4dfdf4e7cb67ea220588d5', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46d9ed89b3b80d6d710a3106f64c73d5119b786b', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8deacdc3af4e434e1c042217a074ed2952f1b69', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceb0bd9e887eb3a6311527a4d9ce214587300479', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c53cb53f2eecaff40bc60e2b3b1210cf5dc302ab', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ae4c204ef156fede2387743fc4aaf5f899506b7', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce4d707e7de7b317ff6097b0a14d0f22bbb4001b', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '640d63088af366ae7f08ae38c5994f2dfe6ca6d4', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1d37638009e096d8ac488d6c10a3da066df9bd2', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb04a3b24bba53e90f94eb2ab16989d8b8ee26d3', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '658ee6088c5457de7c66b44bb3fc6f7027fd0966', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aecf83783a55a821fff22a41c4f6782031bd8a7c', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15eae3485b93127d9f8966b202f57924fcc15bf9', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c00f6a157a3eb2163c3cea39d3ca73b749b72825', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7ee730f55f9d1fc7db6fbf8868f9ee291d73ef0', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d1f1414a4f7912636eec73521b3e8836739d0cd', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65701562248cdd77cbe2eb7a557b19e350d54c89', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e49dbfefdcfa6ad14930001736f5b15ed4182a9f', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'affc8ef361bd8adf268a0a7d593943f5e2ce0e43', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b934c6878f55718347e31756423643fc12b88ec9', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0791be0c920fae9394c23e78e2aebe31c00aab0', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dac5edcfff3eac2557ce20da5a33be2c80c02af', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fedaddb86d6f29c5b8f5cda0f3159bd50ac5b860', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3548a504676ca43ea9c9898ca27c4fcbc5a9ecce', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551d38de2fb99facee24d52de24e956c6b44049c', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6834d824c5b6e0a2b4bfd16bf302ee8fddd14e2', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b45cd27904053be0690bf6da9a4dfb4a9d3772b', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '971311246d6a7f8a187d99fbbd47cafe1e683b95', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dac985fac8cba8644c56cf9c5dd58adaeb651afd', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b59fcbf5ca2e23e1431a9451b4abb223e4c6eaa0', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aca61df75defa0201bbd05fc867e37e4c73247cb', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27824df188b5b6d3423bf0d6d21070b535e535b1', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f935a772ea711a157613895d541109d4ea2c920', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ce8480c32644396fda4b1e31bfa780de580bffd', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb0f6e75a5394fd2ecffc7502ff5bce2aaec6d6f', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6db23cc27b40fe6016fd7b4eee413a76b994c0f6', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15db3de0066466b0e2888fbff4bc98ec21281d2a', 'committer_username': 'blaz-r', 'committer_name': 'Blaž Rolih', 'committer_email': None, 'commit_date': datetime.datetime(2020, 2, 22, 16, 37, 3, tzinfo=datetime.timezone.utc)}]",Blaž Rolih,61357777,,User,,23,,35,38

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
423775360,anomalib,openvinotoolkit/anomalib,Python,646,3589,38,80,669,144,8,32,"[{'id': 1810967522, 'number': 1960, 'closed': datetime.datetime(2024, 4, 9, 22, 35, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 7, 19, 38, 48, tzinfo=datetime.timezone.utc), 'time_taken': 183412.0, 'time_delta': '2 days, 2:56:52', 'additions': 128, 'deletions': 1, 'state': 'closed'}, {'id': 1810966756, 'number': 1959, 'closed': datetime.datetime(2024, 4, 9, 7, 46, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 7, 19, 35, 57, tzinfo=datetime.timezone.utc), 'time_taken': 130226.0, 'time_delta': '1 day, 12:10:26', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 1707245721, 'number': 1705, 'closed': datetime.datetime(2024, 2, 8, 19, 42, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 22, 12, 50, tzinfo=datetime.timezone.utc), 'time_taken': 595758.0, 'time_delta': '6 days, 21:29:18', 'additions': 19, 'deletions': 4, 'state': 'closed'}, {'id': 1666059101, 'number': 1579, 'closed': datetime.datetime(2024, 1, 8, 13, 36, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 5, 11, 50, 4, tzinfo=datetime.timezone.utc), 'time_taken': 265591.0, 'time_delta': '3 days, 1:46:31', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1574670171, 'number': 1443, 'closed': datetime.datetime(2024, 1, 13, 21, 32, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 26, 11, 47, 55, tzinfo=datetime.timezone.utc), 'time_taken': 6860695.0, 'time_delta': '79 days, 9:44:55', 'additions': 9, 'deletions': 12, 'state': 'closed'}, {'id': 1564282088, 'number': 1431, 'closed': datetime.datetime(2023, 11, 8, 16, 1, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 19, 8, 20, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1755688.0, 'time_delta': '20 days, 7:41:28', 'additions': 34, 'deletions': 15, 'state': 'closed'}, {'id': 1499027700, 'number': 1319, 'closed': datetime.datetime(2023, 9, 22, 15, 9, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 15, 12, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1814235.0, 'time_delta': '20 days, 23:57:15', 'additions': 15, 'deletions': 17, 'state': 'closed'}, {'id': 1498652968, 'number': 1317, 'closed': datetime.datetime(2023, 9, 5, 8, 34, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 10, 41, 51, tzinfo=datetime.timezone.utc), 'time_taken': 337940.0, 'time_delta': '3 days, 21:52:20', 'additions': 12, 'deletions': 4, 'state': 'closed'}, {'id': 1474662229, 'number': 1267, 'closed': datetime.datetime(2023, 8, 14, 17, 3, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 14, 15, 42, 50, tzinfo=datetime.timezone.utc), 'time_taken': 4847.0, 'time_delta': '1:20:47', 'additions': 24, 'deletions': 2, 'state': 'closed'}, {'id': 1466944318, 'number': 1245, 'closed': datetime.datetime(2023, 8, 9, 9, 43, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 8, 13, 53, 29, tzinfo=datetime.timezone.utc), 'time_taken': 71401.0, 'time_delta': '19:50:01', 'additions': 12, 'deletions': 12, 'state': 'closed'}, {'id': 1458498089, 'number': 1226, 'closed': None, 'created': datetime.datetime(2023, 8, 1, 17, 21, 40, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 3895, 'deletions': 5, 'state': 'open'}, {'id': 1410513151, 'number': 1155, 'closed': datetime.datetime(2023, 6, 30, 14, 5, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 27, 19, 50, 49, tzinfo=datetime.timezone.utc), 'time_taken': 238495.0, 'time_delta': '2 days, 18:14:55', 'additions': 145, 'deletions': 1, 'state': 'closed'}, {'id': 1281639074, 'number': 972, 'closed': datetime.datetime(2023, 4, 3, 21, 7, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 19, 14, 38, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1319370.0, 'time_delta': '15 days, 6:29:30', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 1281166871, 'number': 969, 'closed': datetime.datetime(2023, 3, 21, 9, 19, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 18, 16, 43, 56, tzinfo=datetime.timezone.utc), 'time_taken': 232563.0, 'time_delta': '2 days, 16:36:03', 'additions': 24, 'deletions': 24, 'state': 'closed'}]"
