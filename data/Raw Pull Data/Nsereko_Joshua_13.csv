pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
703727083,MM-893: Solved Authentication Bypass to System Administration,"A user without the privilege could access the administration page and all other functionalities.
I have just created a Filter to redirect every user, without the above privilege, to the home page.

cc @isears @dkayiwa @ibacher @sherrif10",True,426,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/426,https://github.com/openmrs/openmrs-module-coreapps/pull/426,closed,82,0,3,2,1,6,0,0,[],2021-08-04 16:56:09+00:00,2021-08-07 15:24:50+00:00,253721.0,"2 days, 22:28:41","[{'comment_id': 682822846, 'comment_body': 'Small thing: we should probably put this in the [CoreAppsConstants](https://github.com/openmrs/openmrs-module-coreapps/blob/master/api/src/main/java/org/openmrs/module/coreapps/CoreAppsConstants.java) file like the other privileges.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682823481, 'comment_body': '```suggestion\r\n\t\t\tlog.info(""User {} lacks the privilege {}"", user, COREAPPS_SYSTEM_ADMINISTRATOR_PRIVELEGE);\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 17, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682824248, 'comment_body': ""After calling `sendRedirect()` it's best to have a `return` so that we don't continue running this request through the filter chain."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 682966823, 'comment_body': ""@ibacher I really don't know how much to thank you.  I think I have added the request correctly."", 'comment_created': datetime.datetime(2021, 8, 4, 21, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 682991444, 'comment_body': 'What happens when the user is null?', 'comment_created': datetime.datetime(2021, 8, 4, 22, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 682993091, 'comment_body': '> What happens when the user is null?\r\n\r\n@dkayiwa I think this happens when the user has not logged in.  He/she goes to the login page ', 'comment_created': datetime.datetime(2021, 8, 4, 22, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'c3dab7b7387c98d352e1505c3ca842018aed9863', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58becd0769e6da99cf365b07d84766c6b4a2b899', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
683449489,RA-1424: Removed escapeJs which is vulnerable to xss,"Hello @isears @sherrif10 
i have removed escapeJs method which is vulnerable to xss attacks.  However, i have left out the patient.gsp because changes were breaking the url referenced the links.
Thanks ",True,422,https://api.github.com/repos/openmrs/openmrs-module-coreapps/pulls/422,https://github.com/openmrs/openmrs-module-coreapps/pull/422,closed,32,32,17,2,2,0,0,0,[],2021-07-05 07:46:06+00:00,2021-07-05 15:18:36+00:00,27150.0,7:32:30,[],"[{'commit_sha': '84e62393a7c28c22311b7a7eab1d66c9d3b6e3e9', 'committer_username': 'openmrs-bot', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 4, 14, 14, 30, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47a8e352ce51c21bb3cf1b6517613456ce1fe5c6', 'committer_username': 'isears', 'committer_name': 'Isaac Sears', 'committer_email': 'isaac.j.sears@gmail.com', 'commit_date': datetime.datetime(2014, 3, 20, 22, 10, 39, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
685328087,MM-876: XSS in relation name (input validation),"I have encoded the patient name to prevent xss

before:
![Screenshot from 2021-07-07 19-07-47](https://user-images.githubusercontent.com/58003327/124793463-b1e9c080-df56-11eb-890b-a783b21c4270.png)

After
![Screenshot from 2021-07-07 18-57-11](https://user-images.githubusercontent.com/58003327/124793068-4d2e6600-df56-11eb-9d73-a05922dbdcdb.png)

cc @isears @sherrif10 ",True,116,https://api.github.com/repos/openmrs/openmrs-module-registrationapp/pulls/116,https://github.com/openmrs/openmrs-module-registrationapp/pull/116,closed,1,1,1,1,1,2,0,0,[],2021-07-07 16:08:55+00:00,2021-07-08 02:42:55+00:00,38040.0,10:34:00,"[{'comment_id': 665538937, 'comment_body': 'I think `ui.encodeHtmlAttribute` might be a better fit here', 'comment_created': datetime.datetime(2021, 7, 7, 16, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'isears', 'type': 'User'}, {'comment_id': 665623996, 'comment_body': 'i agree 100%', 'comment_created': datetime.datetime(2021, 7, 7, 18, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'f3c8d0940424b162e99ba62db338fbfb2c0d1845', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
685328087,MM-876: XSS in relation name (input validation),"I have encoded the patient name to prevent xss

before:
![Screenshot from 2021-07-07 19-07-47](https://user-images.githubusercontent.com/58003327/124793463-b1e9c080-df56-11eb-890b-a783b21c4270.png)

After
![Screenshot from 2021-07-07 18-57-11](https://user-images.githubusercontent.com/58003327/124793068-4d2e6600-df56-11eb-9d73-a05922dbdcdb.png)

cc @isears @sherrif10 ",True,116,https://api.github.com/repos/openmrs/openmrs-module-registrationapp/pulls/116,https://github.com/openmrs/openmrs-module-registrationapp/pull/116,closed,1,1,1,1,1,2,0,0,[],2021-07-07 16:08:55+00:00,2021-07-08 02:42:55+00:00,38040.0,10:34:00,"[{'comment_id': 665538937, 'comment_body': 'I think `ui.encodeHtmlAttribute` might be a better fit here', 'comment_created': datetime.datetime(2021, 7, 7, 16, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'isears', 'type': 'User'}, {'comment_id': 665623996, 'comment_body': 'i agree 100%', 'comment_created': datetime.datetime(2021, 7, 7, 18, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'f3c8d0940424b162e99ba62db338fbfb2c0d1845', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
685328087,MM-876: XSS in relation name (input validation),"I have encoded the patient name to prevent xss

before:
![Screenshot from 2021-07-07 19-07-47](https://user-images.githubusercontent.com/58003327/124793463-b1e9c080-df56-11eb-890b-a783b21c4270.png)

After
![Screenshot from 2021-07-07 18-57-11](https://user-images.githubusercontent.com/58003327/124793068-4d2e6600-df56-11eb-9d73-a05922dbdcdb.png)

cc @isears @sherrif10 ",True,116,https://api.github.com/repos/openmrs/openmrs-module-registrationapp/pulls/116,https://github.com/openmrs/openmrs-module-registrationapp/pull/116,closed,1,1,1,1,1,2,0,0,[],2021-07-07 16:08:55+00:00,2021-07-08 02:42:55+00:00,38040.0,10:34:00,"[{'comment_id': 665538937, 'comment_body': 'I think `ui.encodeHtmlAttribute` might be a better fit here', 'comment_created': datetime.datetime(2021, 7, 7, 16, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'isears', 'type': 'User'}, {'comment_id': 665623996, 'comment_body': 'i agree 100%', 'comment_created': datetime.datetime(2021, 7, 7, 18, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'f3c8d0940424b162e99ba62db338fbfb2c0d1845', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
683610187,Ra 1424:  escapeJs is vulnerable to XSS attacks ,"issue link:  https://issues.openmrs.org/browse/RA-1424?filter=-1

There is no breakage in the UI
cc @isears @sherrif10 
",True,51,https://api.github.com/repos/openmrs/openmrs-module-htmlformentryui/pulls/51,https://github.com/openmrs/openmrs-module-htmlformentryui/pull/51,closed,10,10,8,2,0,0,0,0,[],2021-07-05 11:14:44+00:00,2021-07-05 15:19:48+00:00,14704.0,4:05:04,[],"[{'commit_sha': '8710194fd400ee94ef7dc0fb12e3916f07471aae', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a92a0f37cd485aeb7685efe67fafda03664dde5a', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
679092632,MM-875: Emphasized that the new password is different from the old pa…,"…ssword

<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Before this PR, as a user is changing his password, he could use his/her old password as a new password.  This PR is aiming at preventing this problem
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->

## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/RA-1875

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3811,https://api.github.com/repos/openmrs/openmrs-core/pulls/3811,https://github.com/openmrs/openmrs-core/pull/3811,closed,23,1,4,1,9,5,0,0,[],2021-06-28 14:19:32+00:00,2021-06-29 15:27:35+00:00,90483.0,"1 day, 1:08:03","[{'comment_id': 660087351, 'comment_body': 'correct the spelling of password', 'comment_created': datetime.datetime(2021, 6, 28, 20, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 660097148, 'comment_body': 'do you have XML_FILENAME_WITH_DATA_FOR_CHANGE_PASSWORD_ACTION this any where?', 'comment_created': datetime.datetime(2021, 6, 28, 20, 32, 25, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 660099570, 'comment_body': 'yeah! it is pointing to https://github.com/openmrs/openmrs-core/blob/master/api/src/test/resources/org/openmrs/api/include/UserServiceTest-changePasswordAction.xml', 'comment_created': datetime.datetime(2021, 6, 28, 20, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 660549449, 'comment_body': ""This is perfectly fine. However, at this point, we've verified:\r\n\r\n1. That user exists\r\n2. That the old password is given and correct\r\n\r\nSo it might be simpler to replace this with:\r\n\r\n```java\r\nelse if (oldPassword.equals(newPassword) {\r\n```\r\n\r\nAlso, we should probably check that the `newPassword` isn't null."", 'comment_created': datetime.datetime(2021, 6, 29, 12, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 660560999, 'comment_body': 'Thanks @ibacher this is far better.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 20, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': '0ab4f6718ac417a2fd678909fcf98e82d4387fd3', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
682640716,MM-860: Implemented anti-csrf tokens for OpenMRS protection against CSRF attacks,"<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
##  I have created a repository class that extends CsrfTokenRepository, to create, save and generate a web token associated to the HttpServletRequest.  
##  I have added a filter to create a cookie having a the token value
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->

## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",False,3815,https://api.github.com/repos/openmrs/openmrs-core/pulls/3815,https://github.com/openmrs/openmrs-core/pull/3815,closed,216,1,6,2,8,0,0,0,[],2021-07-02 13:43:05+00:00,2022-04-13 04:44:20+00:00,24591675.0,"284 days, 15:01:15",[],"[{'commit_sha': '8718ea5b398c0687299b8e4963c4e35c2892d7bc', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '417b33106ab49d10a43bda34e64f21884bc3820e', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
669034639,EMPT-174:  Made cookies more secure.,"<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
 I have made cookies more secure in OpenMRS by reducing setting up an expiry date of the cookie and  setting the secure attribute to true such that an attacker can not access the cookie using Javascript
<!--- It can simply be your commit message, which you must have -->

## Issue I worked on EMPT-174
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/RA-1875

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",False,3800,https://api.github.com/repos/openmrs/openmrs-core/pulls/3800,https://github.com/openmrs/openmrs-core/pull/3800,closed,3,0,1,1,5,0,0,1,[],2021-06-13 11:10:47+00:00,2021-07-27 16:59:18+00:00,3822511.0,"44 days, 5:48:31",[],"[{'commit_sha': '05d691f82e8619625e1ffff389aba393d673199e', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
679092632,MM-875: Emphasized that the new password is different from the old pa…,"…ssword

<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Before this PR, as a user is changing his password, he could use his/her old password as a new password.  This PR is aiming at preventing this problem
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->

## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/RA-1875

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3811,https://api.github.com/repos/openmrs/openmrs-core/pulls/3811,https://github.com/openmrs/openmrs-core/pull/3811,closed,23,1,4,1,9,5,0,0,[],2021-06-28 14:19:32+00:00,2021-06-29 15:27:35+00:00,90483.0,"1 day, 1:08:03","[{'comment_id': 660087351, 'comment_body': 'correct the spelling of password', 'comment_created': datetime.datetime(2021, 6, 28, 20, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 660097148, 'comment_body': 'do you have XML_FILENAME_WITH_DATA_FOR_CHANGE_PASSWORD_ACTION this any where?', 'comment_created': datetime.datetime(2021, 6, 28, 20, 32, 25, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 660099570, 'comment_body': 'yeah! it is pointing to https://github.com/openmrs/openmrs-core/blob/master/api/src/test/resources/org/openmrs/api/include/UserServiceTest-changePasswordAction.xml', 'comment_created': datetime.datetime(2021, 6, 28, 20, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 660549449, 'comment_body': ""This is perfectly fine. However, at this point, we've verified:\r\n\r\n1. That user exists\r\n2. That the old password is given and correct\r\n\r\nSo it might be simpler to replace this with:\r\n\r\n```java\r\nelse if (oldPassword.equals(newPassword) {\r\n```\r\n\r\nAlso, we should probably check that the `newPassword` isn't null."", 'comment_created': datetime.datetime(2021, 6, 29, 12, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 660560999, 'comment_body': 'Thanks @ibacher this is far better.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 20, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': '0ab4f6718ac417a2fd678909fcf98e82d4387fd3', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
669034639,EMPT-174:  Made cookies more secure.,"<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
 I have made cookies more secure in OpenMRS by reducing setting up an expiry date of the cookie and  setting the secure attribute to true such that an attacker can not access the cookie using Javascript
<!--- It can simply be your commit message, which you must have -->

## Issue I worked on EMPT-174
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/RA-1875

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",False,3800,https://api.github.com/repos/openmrs/openmrs-core/pulls/3800,https://github.com/openmrs/openmrs-core/pull/3800,closed,3,0,1,1,5,0,0,1,[],2021-06-13 11:10:47+00:00,2021-07-27 16:59:18+00:00,3822511.0,"44 days, 5:48:31",[],"[{'commit_sha': '05d691f82e8619625e1ffff389aba393d673199e', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
682640716,MM-860: Implemented anti-csrf tokens for OpenMRS protection against CSRF attacks,"<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
##  I have created a repository class that extends CsrfTokenRepository, to create, save and generate a web token associated to the HttpServletRequest.  
##  I have added a filter to create a cookie having a the token value
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->

## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",False,3815,https://api.github.com/repos/openmrs/openmrs-core/pulls/3815,https://github.com/openmrs/openmrs-core/pull/3815,closed,216,1,6,2,8,0,0,0,[],2021-07-02 13:43:05+00:00,2022-04-13 04:44:20+00:00,24591675.0,"284 days, 15:01:15",[],"[{'commit_sha': '8718ea5b398c0687299b8e4963c4e35c2892d7bc', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '417b33106ab49d10a43bda34e64f21884bc3820e', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
705530376,MM-918 [WIP]: Invalidate all user sessions after password change,"This issue is still in development : 
Every time a user changes his/her password, so long as he/she has not clicked the logout link, he/she can still login using his/her previous password.  

cc @isears @sherrif10 @ibacher @dkayiwa ",False,64,https://api.github.com/repos/openmrs/openmrs-module-adminui/pulls/64,https://github.com/openmrs/openmrs-module-adminui/pull/64,open,4,3,1,1,7,4,0,0,[],2021-08-06 14:30:32+00:00,,0.0,,"[{'comment_id': 684293875, 'comment_body': ""Does this forcibly log the user out? (I don't think that's desirable behaviour)"", 'comment_created': datetime.datetime(2021, 8, 6, 14, 47, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 684309320, 'comment_body': '\r\n> Does this forcibly log the user out?\r\n\r\nYes @ibacher  The user is forcefully logged out.  Thank you ', 'comment_created': datetime.datetime(2021, 8, 6, 15, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 684317134, 'comment_body': 'maybe i should remove line 115 and add the code below to logout the user using the context so that he is redirected to the login screen.  What is the better option? \r\n```\r\n Context.logout();\r\n request.getSession().invalidate();\r\n request.getSession().setAttribute(""manual-logout"", ""true"");\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 15, 19, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 684318947, 'comment_body': ""I mean, the real ideal would be if there's a way for a user to change their password and have the session continue uninterrupted, but, yeah, if we're going to log the user out, maybe just do the whole thing. We could even add a redirect to the login page here?"", 'comment_created': datetime.datetime(2021, 8, 6, 15, 22, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}]","[{'commit_sha': 'ab84e124f1823efeceb4d04c2b96af2df7a31f7c', 'committer_username': 'ibacher', 'committer_name': 'Ian', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 3, 16, 23, 10, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
669475951,RA-1424: escapeJs vulnerable to XSS.,"from the issue https://issues.openmrs.org/browse/RA-1424, it was detected that `escapeJs` is becoming insecure.  I have replaced it with a more secure method `encodeJavaScript`.",True,61,https://api.github.com/repos/openmrs/openmrs-module-adminui/pulls/61,https://github.com/openmrs/openmrs-module-adminui/pull/61,closed,1,1,1,1,0,7,0,0,[],2021-06-14 11:14:03+00:00,2021-06-16 14:07:07+00:00,183184.0,"2 days, 2:53:04","[{'comment_id': 651360489, 'comment_body': 'thanks @jnsereko  have you tested this on a running openmrs instance. Add screen shots of before and after your changes', 'comment_created': datetime.datetime(2021, 6, 15, 0, 20, 40, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 652044142, 'comment_body': ""Hello @HerbertYiga \r\nI have tested hid feature with OpenMRS sdk and the ui doesn't change but makes OpenMRS more secure.\r\n![image](https://user-images.githubusercontent.com/58003327/122103595-778d7780-ce1f-11eb-888c-7c247b923e18.png)\r\n"", 'comment_created': datetime.datetime(2021, 6, 15, 18, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 652118575, 'comment_body': 'could you try to see on the different pull requests that  have been merged for solving XSS vulnerabilities and see how testing has been done  @jnsereko', 'comment_created': datetime.datetime(2021, 6, 15, 20, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 652269329, 'comment_body': ""@jnsereko another thing (besides making sure that the UI isn't broken) is to make sure that the original XSS vulnerability is still patched. So, for example, create a location with name `<script>alert(1)</script>` and make sure the alert doesn't show on the list locations page.\r\n\r\nOtherwise, I think this looks good."", 'comment_created': datetime.datetime(2021, 6, 16, 0, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'isears', 'type': 'User'}, {'comment_id': 652611692, 'comment_body': ""> `<script>alert(1)</script>` and make sure the alert doesn't show on the list locations page.\r\n\r\nthanks @HerbertYiga  and @isears for looking at this. \r\nI have created a location with the name `<script>alert(1)</script>`  but i am not getting the alert displaying `1`\r\nSo the script is not executed. \r\n"", 'comment_created': datetime.datetime(2021, 6, 16, 11, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 652614266, 'comment_body': ""> `<script>alert(1)</script>` and make sure the alert doesn't show on the list locations page.\r\n\r\nthanks @HerbertYiga  and @isears for looking at this. \r\nI have created a location with the name `<script>alert(1)</script>`  but i am not getting the alert displaying `1`\r\nSo the script is not executed. \r\n\r\nnow i don't know why Maven build is rejecting my code.  \r\n"", 'comment_created': datetime.datetime(2021, 6, 16, 11, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 652722715, 'comment_body': ""I don't think the build errors are related to this PR."", 'comment_created': datetime.datetime(2021, 6, 16, 14, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'isears', 'type': 'User'}]","[{'commit_sha': 'a1dc7bfbe4bf4d66659ddfb712768804d6de653a', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
669475951,RA-1424: escapeJs vulnerable to XSS.,"from the issue https://issues.openmrs.org/browse/RA-1424, it was detected that `escapeJs` is becoming insecure.  I have replaced it with a more secure method `encodeJavaScript`.",True,61,https://api.github.com/repos/openmrs/openmrs-module-adminui/pulls/61,https://github.com/openmrs/openmrs-module-adminui/pull/61,closed,1,1,1,1,0,7,0,0,[],2021-06-14 11:14:03+00:00,2021-06-16 14:07:07+00:00,183184.0,"2 days, 2:53:04","[{'comment_id': 651360489, 'comment_body': 'thanks @jnsereko  have you tested this on a running openmrs instance. Add screen shots of before and after your changes', 'comment_created': datetime.datetime(2021, 6, 15, 0, 20, 40, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 652044142, 'comment_body': ""Hello @HerbertYiga \r\nI have tested hid feature with OpenMRS sdk and the ui doesn't change but makes OpenMRS more secure.\r\n![image](https://user-images.githubusercontent.com/58003327/122103595-778d7780-ce1f-11eb-888c-7c247b923e18.png)\r\n"", 'comment_created': datetime.datetime(2021, 6, 15, 18, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 652118575, 'comment_body': 'could you try to see on the different pull requests that  have been merged for solving XSS vulnerabilities and see how testing has been done  @jnsereko', 'comment_created': datetime.datetime(2021, 6, 15, 20, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 652269329, 'comment_body': ""@jnsereko another thing (besides making sure that the UI isn't broken) is to make sure that the original XSS vulnerability is still patched. So, for example, create a location with name `<script>alert(1)</script>` and make sure the alert doesn't show on the list locations page.\r\n\r\nOtherwise, I think this looks good."", 'comment_created': datetime.datetime(2021, 6, 16, 0, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'isears', 'type': 'User'}, {'comment_id': 652611692, 'comment_body': ""> `<script>alert(1)</script>` and make sure the alert doesn't show on the list locations page.\r\n\r\nthanks @HerbertYiga  and @isears for looking at this. \r\nI have created a location with the name `<script>alert(1)</script>`  but i am not getting the alert displaying `1`\r\nSo the script is not executed. \r\n"", 'comment_created': datetime.datetime(2021, 6, 16, 11, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 652614266, 'comment_body': ""> `<script>alert(1)</script>` and make sure the alert doesn't show on the list locations page.\r\n\r\nthanks @HerbertYiga  and @isears for looking at this. \r\nI have created a location with the name `<script>alert(1)</script>`  but i am not getting the alert displaying `1`\r\nSo the script is not executed. \r\n\r\nnow i don't know why Maven build is rejecting my code.  \r\n"", 'comment_created': datetime.datetime(2021, 6, 16, 11, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 652722715, 'comment_body': ""I don't think the build errors are related to this PR."", 'comment_created': datetime.datetime(2021, 6, 16, 14, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'isears', 'type': 'User'}]","[{'commit_sha': 'a1dc7bfbe4bf4d66659ddfb712768804d6de653a', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
673914052,EMPT-75:  Beautified error thrown on geting unexisting privilage,"Before this PR, when you click,
-  configure metadata,
- manage privileges,
- edit icon of any privilege (personally, i used Add Allergies)
- the URL will be openmrs/adminui/metadata/privileges/privilege.page?privilegeName=Add+Allergies&action=edit&
- change the section Add+Allergies to asdf+lkjh or any non-existing Privilege.

You get an error
![image](https://user-images.githubusercontent.com/58003327/122651388-25ab6100-d141-11eb-9813-64d595238007.png)

**With this PR you get something like**
![image](https://user-images.githubusercontent.com/58003327/122651410-4ecbf180-d141-11eb-877c-0cefe872f74d.png)
,

cc @isears @sherrif10 ",True,63,https://api.github.com/repos/openmrs/openmrs-module-adminui/pulls/63,https://github.com/openmrs/openmrs-module-adminui/pull/63,closed,38,29,4,1,0,7,0,0,[],2021-06-19 18:01:08+00:00,2021-06-24 01:00:01+00:00,370733.0,"4 days, 6:58:53","[{'comment_id': 654964037, 'comment_body': 'thanks @jnsereko  why not add a message under properties file than ui.message(""No privilege found with name "")}""', 'comment_created': datetime.datetime(2021, 6, 20, 17, 15, 56, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 655135543, 'comment_body': 'Thanks @HerbertYiga for the review..\r\nMan this is far a better alternative.', 'comment_created': datetime.datetime(2021, 6, 21, 7, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 655713077, 'comment_body': 'Hey @HerbertYiga, do you think we need this ', 'comment_created': datetime.datetime(2021, 6, 21, 21, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 655793500, 'comment_body': 'Unencoded value introduces an XSS vulnerability here!\r\n\r\nFor example, try with privilege name `<script>alert(1)</script>`\r\n\r\nMake sure to html-encode `unknownPrivilegeName`', 'comment_created': datetime.datetime(2021, 6, 22, 0, 33, 6, tzinfo=datetime.timezone.utc), 'commenter': 'isears', 'type': 'User'}, {'comment_id': 655921139, 'comment_body': 'add that to messages. Properties file with the English message ,run your changes in a running server to ensure it works as required', 'comment_created': datetime.datetime(2021, 6, 22, 6, 44, 5, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 655980304, 'comment_body': 'thanks @isears for the reminders \r\n![image](https://user-images.githubusercontent.com/58003327/122888097-32e76c00-d34a-11eb-899c-f6ae31459978.png)\r\n', 'comment_created': datetime.datetime(2021, 6, 22, 8, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 655983650, 'comment_body': 'Year it is displaying as required.  \r\nthank you @HerbertYiga ', 'comment_created': datetime.datetime(2021, 6, 22, 8, 13, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': '34e2666919a81719196bd5aae9c75acbece7096b', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21
710064954,MM-918: Close all user sessions after password change and on logout,"Hello Everyone, I have tried to improve session management by keeping track of sessions opened by every user before.
When a user changes his password or logs out, all sessions must be invalidated so that an attacker is trapped out.

As @ibacher had advised me, we had to even implement this feature in core but this was almost impossible because the classes I created weren't accessible in the adminui-module.
Thank you
cc @isears @sherrif10 @ibacher

https://user-images.githubusercontent.com/58003327/129126775-012991f1-4bae-4bea-8114-f76a754b17c7.mp4 ",True,171,https://api.github.com/repos/openmrs/openmrs-module-legacyui/pulls/171,https://github.com/openmrs/openmrs-module-legacyui/pull/171,closed,67,30,2,1,7,25,0,0,[],2021-08-12 03:06:14+00:00,2021-09-15 13:02:22+00:00,2973368.0,"34 days, 9:56:08","[{'comment_id': 687417408, 'comment_body': '@jnsereko  isnt this method used in any other place within the module?', 'comment_created': datetime.datetime(2021, 8, 12, 6, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 687432999, 'comment_body': ""Hello @HerbertYiga! This method ain't used anywhere in the module. \r\nThis method is executed every time a request is invalidates or destroyed.  \r\nIt's initial role was to remove a user matching every httpSession of the event passed as parameter.\r\n\r\nHowever, I wouldn't wish to remove this method or it's class because it's importance might rise soon. "", 'comment_created': datetime.datetime(2021, 8, 12, 6, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 692386151, 'comment_body': 'This import seems unnecessary.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 33, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692394900, 'comment_body': 'All of this seems like unnecessary ceremony.\r\n\r\n```java\r\nList<String> userNames = currentUsers.keySet().stream().collect(Collectors.toList());\r\nCollections.sort(userNames);\r\nreturn userNames; \r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 18, 46, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692395120, 'comment_body': '```suggestion\r\n\t\tList<String> userNames = getCurrentUsernames(httpSession);\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 18, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692396688, 'comment_body': 'Couldn\'t this just be:\r\n\r\n```suggestion\r\n\t\t\tsessions.remove(httpSession);\r\n\t\t\tlog.debug(""Removed session {}. Remaining sessions: {}"", httpSession, sessions.size());\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 18, 49, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692397391, 'comment_body': 'These would be better as debug messages', 'comment_created': datetime.datetime(2021, 8, 19, 18, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692397570, 'comment_body': ""A few things here:\r\n\r\n1. It's probably better to use a plain `HashMap` unless we specifically need a sorted map.\r\n2. It seems a little excessive to have *both* a synchronized map *and* a `CopyOnWriteArrayList`. If we're tracking multiple sessions, a simple `ArrayList` in a synchronized map is probably fine. Even better would be to just use a plain HashMap and just use a simple lock."", 'comment_created': datetime.datetime(2021, 8, 19, 18, 50, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692397924, 'comment_body': '```suggestion\r\n\tprivate static String getUserName(User user) {\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 18, 51, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692398055, 'comment_body': 'I\'m not sure ""Valid"" adds any value here.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 51, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692400587, 'comment_body': ""Shouldn't we be getting the user name from the `httpSession`?"", 'comment_created': datetime.datetime(2021, 8, 19, 18, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692403598, 'comment_body': ""Do we actually want to invalidate *all* of the user's sessions when the log out of a single session? I would suggest instead that we simply remove the user from the currentUsers map when the number of sessions remaining is 0."", 'comment_created': datetime.datetime(2021, 8, 19, 19, 0, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692422614, 'comment_body': 'The main reason why I resorted to `CopyOnWriteArryList` was that I ran into `java.util.ConcurrentModificationException `as I was trying to remove a session from the sessions-list while iterating trough all other existing sessions.  \r\nThis is how it all happened.\r\n\r\n```\r\nprivate static void invalidateAllUserSessions(String currentUserName,\r\n........\t\r\nfor (HttpSession session : sessions) {\r\n\t\tif (session != null) {\r\n\t\t\tsession.invalidate();\r\n\t\t}\r\n\t}\r\n```\r\nwhich calls the method `removeSessionFromList` through the `SessionListener` class run on every session invalidation. \r\n\r\n@ibacher, Basing on what I have explained above, will option 2 bring out concurrency very well?', 'comment_created': datetime.datetime(2021, 8, 19, 19, 30, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 692429513, 'comment_body': 'I aimed at invalidating all user sessions on password change.  I created this method so that I use it in the adminui-module, and invalidate all user sessions after a password change.  \r\n\r\nThe on logout, the request is always invalidated which calls the listener and the list of sessions is updated', 'comment_created': datetime.datetime(2021, 8, 19, 19, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 692440082, 'comment_body': ""That's likely to happen with almost any Java list implementation. You just can't change a list directly while iterating over it. Usually, the way around it it something like this:\r\n\r\n```java\r\nIterator<HttpSession> iterator = sessions.iterator();\r\nwhile (iterator.hasNext()) {\r\n\tHttpSession session = iterator.next();\r\n\tsession.invalidate();\r\n\titerator.remove();\r\n}\r\n```\r\n\r\nThe `for (HttpSession session : sessions)` bit is actually just syntactic sugar for the first 3 lines of the above example."", 'comment_created': datetime.datetime(2021, 8, 19, 19, 53, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692441598, 'comment_body': ""Is it a must that every session must have the session-attribute  like `username` set?  I honestly don't even know the exact attribute I will be looking for."", 'comment_created': datetime.datetime(2021, 8, 19, 19, 56, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 692449946, 'comment_body': 'Definitely not! I was thinking of looking for a particular session attribute: I was thinking of getting the user by the particular session, e.g.,\r\n\r\n```java\r\npublic static List<HttpSession> getSessionsForSessionUser(HttpSession httpSession, Map<String, CopyOnWriteArrayList<HttpSession>> currentUsers) {\r\n\tfor (Map.Entry<String, CopyOnWriteArrayList<HttpSession>> entry : currentUsers.entrySet()) {\r\n\t\tList<HttpSession> sessions = entry.getValue();\r\n\t\tif (sessions != null && sessions.contains(httpSession)) {\r\n\t\t\treturn sessions;\r\n\t\t}\r\n\t}\r\n\r\n\treturn Collections.emptyList();\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 20, 9, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692451511, 'comment_body': 'So, I totally buy that we need a method that invalidates all user sessions and that makes a lot of sense. What doesn\'t make sense to me is killing all of a user\'s sessions every time one of their sessions expires (this is different from ""what happens when I change my password"" where it makes sense to kill all of the users sessions). That is to say that the password reset code probably needs to have a special case to invalidate all of the sessions.', 'comment_created': datetime.datetime(2021, 8, 19, 20, 12, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692452580, 'comment_body': ""I used the iterator too before I changed to the `CopyOnWriteArryList`\r\n\r\n\r\n> ```java\r\n> Iterator<HttpSession> iterator = sessions.iterator();\r\n> while (iterator.hasNext()) {\r\n> \tHttpSession session = iterator.next();\r\n> \tsession.invalidate();\r\n> \titerator.remove();\r\n> }\r\n> ```\r\n\r\nif we use this, the `SessionListener` will also try to remove the element on session invalidation.  In my thinking, I expect some errors here :)  \r\n\r\nSometimes sessions are invalidated even when the user hasn't clicked logout. or password change for example when the instance(system) is left unused for like 20 minutes .  \r\nMy main goal is to use the listener to update the sessions list each time the session is invalidated to prevent having null objects in the list.  But this takes place from a different method on a different state of the system.\r\n\r\nI don't know if this is clear!  But that's how I had understood this."", 'comment_created': datetime.datetime(2021, 8, 19, 20, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 692460595, 'comment_body': ""So, the `SessionListener` will never remove any item from the list. This is because it doesn't know about the list and has no way of removing it. So the list should **never** contain any `null` objects.\r\n\r\nWhat it might make sense to do is to instead have a `pruneExpiredSessions()` method that does something like this:\r\n\r\n```java\r\nprivate static void pruneExpiredSessions(List<HttpSession> sessions) {\r\n\t  long currentTimestamp = System.currentTimeMillis();\r\n\t  Iterator<HttpSession> iterator = sessions.iterator();\r\n\t  while (iterator.hasNext()) {\r\n\t\t  HttpSession session = iterator.next();\r\n\t\t  if (session.getLastAccessTime() - currentTimestamp > session.getMaxInactiveInterval()) {\r\n\t\t\t  iterator.remove();\r\n\t\t  }\r\n\t  }\r\n}\r\n```\r\n\r\nThen after running it:\r\n\r\n```java\r\nif (sessions.size() == 0) {\r\n\tcurrentUsers.remove(currentUserName);\r\n}\r\n```"", 'comment_created': datetime.datetime(2021, 8, 19, 20, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692463521, 'comment_body': '\r\n> That is to say that the password reset code probably needs to have a special case to invalidate all of the sessions.\r\n\r\nyeah, sure! @ibacher \r\n\r\nIn simple terms each time the method `removeUser(httpSession)` is used, it will invalidate all sessions for the requested user.  \r\nEach time a request is invalidated like https://github.com/openmrs/openmrs-module-legacyui/blob/master/omod/src/main/java/org/openmrs/web/servlet/LogoutServlet.java#L46 the Listener is executed and that session is removed from the sessions list of a specified user to prevent references to null objects in the list.', 'comment_created': datetime.datetime(2021, 8, 19, 20, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 692465281, 'comment_body': 'And, yeah, if you\'re having an issue with an infinite loop of invalidations, then thing to do is to track which session your actually already invalidating, e.g.,\r\n\r\n```java\r\nprivate static void invalidateAllUserSessions(HttpSession httpSession, String currentUserName,\r\n\t        Map<String, CopyOnWriteArrayList<HttpSession>> currentUsers) {\r\n\t\tlog.info(""Finding sessions for the user: {}"", currentUserName);\r\n\r\n\t\tCopyOnWriteArrayList<HttpSession> sessions = currentUsers.get(currentUserName);\r\n\t\tif (sessions != null) {\r\n\t\t\tfor (HttpSession session : sessions) {\r\n\t\t\t\tif (!httpSession.equals(session)) {\r\n\t\t\t\t\tsession.invalidate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcurrentUsers.remove(currentUserName);\r\n\t\t\tlog.debug(""Found {} sessions for the user: {}"", sessions.size(), currentUserName);\r\n\t\t} else {\r\n\t\t\tlog.debug(""No sessions found for this user: {}"", currentUserName);\r\n\t\t}\r\n\t}\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 20, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 692476647, 'comment_body': ""> And, yeah, if you're having an issue with an infinite loop of invalidations, then thing to do is to track which session your actually already invalidating, e.g.,\r\n\r\nThank you @ibacher for really taking some time to look at this.  I am going to polish this and then push the code."", 'comment_created': datetime.datetime(2021, 8, 19, 20, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}, {'comment_id': 700502320, 'comment_body': 'Before we merge this PR, could we get rid of these `System.out.println()` calls?', 'comment_created': datetime.datetime(2021, 9, 1, 19, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 700722763, 'comment_body': 'Hello @ibacher \r\nThank you so much for looking at this.  I use `System` functions to test some cases.  Removed it.\r\nThank you ', 'comment_created': datetime.datetime(2021, 9, 2, 3, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jnsereko', 'type': 'User'}]","[{'commit_sha': 'b77fec0e9470e59de297a04e92d6579d8b4709b5', 'committer_username': 'jnsereko', 'committer_name': 'jnsereko', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 20, 17, 13, 13, tzinfo=datetime.timezone.utc)}]",jnsereko,58003327,,User,,90,,23,21

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
9224950,openmrs-module-coreapps,openmrs/openmrs-module-coreapps,Java,181,12,78,91,1543,14,48,14,"[{'id': 703727083, 'number': 426, 'closed': datetime.datetime(2021, 8, 7, 15, 24, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 16, 56, 9, tzinfo=datetime.timezone.utc), 'time_taken': 253721.0, 'time_delta': '2 days, 22:28:41', 'additions': 82, 'deletions': 0, 'state': 'closed'}, {'id': 683449489, 'number': 422, 'closed': datetime.datetime(2021, 7, 5, 15, 18, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 7, 46, 6, tzinfo=datetime.timezone.utc), 'time_taken': 27150.0, 'time_delta': '7:32:30', 'additions': 32, 'deletions': 32, 'state': 'closed'}, {'id': 616736212, 'number': 398, 'closed': datetime.datetime(2023, 3, 22, 4, 1, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 16, 10, 49, tzinfo=datetime.timezone.utc), 'time_taken': 60887569.0, 'time_delta': '704 days, 17:12:49', 'additions': 4, 'deletions': 10, 'state': 'closed'}]"
9700409,openmrs-module-registrationapp,openmrs/openmrs-module-registrationapp,Java,133,4,83,49,692,2,10,2,"[{'id': 685328087, 'number': 116, 'closed': datetime.datetime(2021, 7, 8, 2, 42, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 16, 8, 55, tzinfo=datetime.timezone.utc), 'time_taken': 38040.0, 'time_delta': '10:34:00', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
9684980,openmrs-module-htmlformentryui,openmrs/openmrs-module-htmlformentryui,Java,59,2,81,30,311,7,9,7,"[{'id': 683610187, 'number': 51, 'closed': datetime.datetime(2021, 7, 5, 15, 19, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 11, 14, 44, tzinfo=datetime.timezone.utc), 'time_taken': 14704.0, 'time_delta': '4:05:04', 'additions': 10, 'deletions': 10, 'state': 'closed'}]"
5187976,openmrs-core,openmrs/openmrs-core,Java,3613,1389,148,465,12245,36,42,36,"[{'id': 906785939, 'number': 4051, 'closed': datetime.datetime(2023, 2, 23, 22, 47, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 12, 2, 46, 24, tzinfo=datetime.timezone.utc), 'time_taken': 27460853.0, 'time_delta': '317 days, 20:00:53', 'additions': 200, 'deletions': 1, 'state': 'closed'}, {'id': 812913385, 'number': 3948, 'closed': datetime.datetime(2022, 3, 6, 8, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 3, 5, 40, 16, tzinfo=datetime.timezone.utc), 'time_taken': 5366684.0, 'time_delta': '62 days, 2:44:44', 'additions': 169, 'deletions': 0, 'state': 'closed'}, {'id': 796508482, 'number': 3922, 'closed': datetime.datetime(2021, 12, 22, 0, 38, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 7, 3, 27, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1285806.0, 'time_delta': '14 days, 21:10:06', 'additions': 1284, 'deletions': 0, 'state': 'closed'}, {'id': 754774726, 'number': 3879, 'closed': datetime.datetime(2021, 10, 26, 17, 36, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 10, 20, 18, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1372707.0, 'time_delta': '15 days, 21:18:27', 'additions': 17, 'deletions': 1, 'state': 'closed'}, {'id': 682640716, 'number': 3815, 'closed': datetime.datetime(2022, 4, 13, 4, 44, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 13, 43, 5, tzinfo=datetime.timezone.utc), 'time_taken': 24591675.0, 'time_delta': '284 days, 15:01:15', 'additions': 216, 'deletions': 1, 'state': 'closed'}, {'id': 679092632, 'number': 3811, 'closed': datetime.datetime(2021, 6, 29, 15, 27, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 14, 19, 32, tzinfo=datetime.timezone.utc), 'time_taken': 90483.0, 'time_delta': '1 day, 1:08:03', 'additions': 23, 'deletions': 1, 'state': 'closed'}, {'id': 669034639, 'number': 3800, 'closed': datetime.datetime(2021, 7, 27, 16, 59, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 13, 11, 10, 47, tzinfo=datetime.timezone.utc), 'time_taken': 3822511.0, 'time_delta': '44 days, 5:48:31', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 447874647, 'number': 3331, 'closed': datetime.datetime(2020, 7, 12, 9, 24, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 9, 24, 8, tzinfo=datetime.timezone.utc), 'time_taken': 11.0, 'time_delta': '0:00:11', 'additions': 469, 'deletions': 22, 'state': 'closed'}, {'id': 432929864, 'number': 3240, 'closed': datetime.datetime(2022, 2, 3, 22, 45, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 11, 8, 44, 51, tzinfo=datetime.timezone.utc), 'time_taken': 52063243.0, 'time_delta': '602 days, 14:00:43', 'additions': 194, 'deletions': 19, 'state': 'closed'}, {'id': 414370703, 'number': 3192, 'closed': datetime.datetime(2022, 10, 4, 0, 50, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 6, 22, 44, 36, tzinfo=datetime.timezone.utc), 'time_taken': 76039539.0, 'time_delta': '880 days, 2:05:39', 'additions': 487, 'deletions': 20, 'state': 'closed'}, {'id': 405699852, 'number': 3182, 'closed': datetime.datetime(2021, 8, 2, 0, 13, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 19, 17, 12, 53, tzinfo=datetime.timezone.utc), 'time_taken': 40546827.0, 'time_delta': '469 days, 7:00:27', 'additions': 54, 'deletions': 0, 'state': 'closed'}, {'id': 380570198, 'number': 3136, 'closed': datetime.datetime(2020, 6, 11, 7, 39, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 27, 0, 9, 35, tzinfo=datetime.timezone.utc), 'time_taken': 9099004.0, 'time_delta': '105 days, 7:30:04', 'additions': 176, 'deletions': 7, 'state': 'closed'}]"
20815099,openmrs-module-adminui,openmrs/openmrs-module-adminui,Groovy,59,4,82,29,271,3,2,3,"[{'id': 705530376, 'number': 64, 'closed': None, 'created': datetime.datetime(2021, 8, 6, 14, 30, 32, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 4, 'deletions': 3, 'state': 'open'}, {'id': 673914052, 'number': 63, 'closed': datetime.datetime(2021, 6, 24, 1, 0, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 18, 1, 8, tzinfo=datetime.timezone.utc), 'time_taken': 370733.0, 'time_delta': '4 days, 6:58:53', 'additions': 38, 'deletions': 29, 'state': 'closed'}, {'id': 672950735, 'number': 62, 'closed': datetime.datetime(2021, 6, 18, 16, 48, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 20, 11, 23, tzinfo=datetime.timezone.utc), 'time_taken': 74244.0, 'time_delta': '20:37:24', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 669475951, 'number': 61, 'closed': datetime.datetime(2021, 6, 16, 14, 7, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 11, 14, 3, tzinfo=datetime.timezone.utc), 'time_taken': 183184.0, 'time_delta': '2 days, 2:53:04', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
35045181,openmrs-module-legacyui,openmrs/openmrs-module-legacyui,Java,173,8,78,55,523,9,11,9,"[{'id': 1691179197, 'number': 188, 'closed': None, 'created': datetime.datetime(2024, 1, 23, 7, 31, 53, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 76, 'deletions': 4, 'state': 'open'}, {'id': 779380549, 'number': 173, 'closed': datetime.datetime(2022, 1, 24, 18, 27, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 12, 12, 51, 1, tzinfo=datetime.timezone.utc), 'time_taken': 6327373.0, 'time_delta': '73 days, 5:36:13', 'additions': 26, 'deletions': 0, 'state': 'closed'}, {'id': 710064954, 'number': 171, 'closed': datetime.datetime(2021, 9, 15, 13, 2, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 3, 6, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2973368.0, 'time_delta': '34 days, 9:56:08', 'additions': 67, 'deletions': 30, 'state': 'closed'}, {'id': 709991842, 'number': 170, 'closed': datetime.datetime(2021, 8, 12, 2, 9, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 2, 7, 1, tzinfo=datetime.timezone.utc), 'time_taken': 166.0, 'time_delta': '0:02:46', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 700011018, 'number': 169, 'closed': datetime.datetime(2021, 8, 4, 17, 0, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 30, 5, 14, 4, tzinfo=datetime.timezone.utc), 'time_taken': 474411.0, 'time_delta': '5 days, 11:46:51', 'additions': 82, 'deletions': 0, 'state': 'closed'}]"
