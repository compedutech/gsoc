pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
653573729,Add BaseParameters and SymPy,"# Description

- Add Base Parameters class and tests
- Set Base Parameters as the parent class of all parameters
- Add SymPy in dependencies

#### (GSoC21: Print Equations)
## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)


# Key checklist:

- [ ] No style issues: `$ flake8`
- [ ] All tests pass: `$ python run-tests.py --unit`
- [ ] The documentation builds: `$ cd docs` and then `$ make clean; make html`

You can run all three at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,1495,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/1495,https://github.com/pybamm-team/PyBaMM/pull/1495,closed,64,55,12,5,4,3,0,0,[],2021-05-26 10:38:26+00:00,2021-05-27 11:59:07+00:00,91241.0,"1 day, 1:20:41","[{'comment_id': 639817275, 'comment_body': 'can you move this above matplotlib, otherwise it looks like the comment above refers to both sympy and matplotlib', 'comment_created': datetime.datetime(2021, 5, 26, 15, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 639817430, 'comment_body': 'move to line 12', 'comment_created': datetime.datetime(2021, 5, 26, 15, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 639819065, 'comment_body': 'This is a pretty brittle test (relies on the model not changing). Better to do something like\r\n```python\r\nparam = pybamm.ElectricalParameters()\r\nself.assertEqual(param.I_typ.print_name, ""I_typ"")\r\n```', 'comment_created': datetime.datetime(2021, 5, 26, 15, 6, 45, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}]","[{'commit_sha': '94718f22da16c43b5b891f5b3888ca3ae74a7c78', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc35bfd8ef2a042067fcd864d5af190b11cd5762', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22262930608a1c9a2c5739c27f9e036d13aaa367', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327390988f71790617a4121619f7f16eedc4b60a', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e82ca77f69d8b28aeb29fa7713c5928e76517654', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}]",Priyanshu Agarwal,64051212,priyanshuone6@gmail.com,User,,27,,12,25
661693961,Add to_equation in Binary and Scalar,"# Description

- Add `to_equation` in Scalar, Binary Operators and Array
- Change `Heaviside` to `_Heaviside`
- Add tests

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)


# Key checklist:

- [ ] No style issues: `$ flake8`
- [ ] All tests pass: `$ python run-tests.py --unit`
- [ ] The documentation builds: `$ cd docs` and then `$ make clean; make html`

You can run all three at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,1502,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/1502,https://github.com/pybamm-team/PyBaMM/pull/1502,closed,205,119,10,10,1,8,0,0,[],2021-06-04 11:39:49+00:00,2021-06-11 23:19:34+00:00,646785.0,"7 days, 11:39:45","[{'comment_id': 647046672, 'comment_body': 'The same code works on the jupyter notebook and gives `1` but here gives an error', 'comment_created': datetime.datetime(2021, 6, 8, 1, 33, 25, tzinfo=datetime.timezone.utc), 'commenter': 'priyanshuone6', 'type': 'User'}, {'comment_id': 647828091, 'comment_body': 'It works in notebook but not in test because these lines are only called in the tests when debug mode is true https://github.com/pybamm-team/PyBaMM/blob/08de41714aa093fa2b705a649d4132d3418d43b3/pybamm/expression_tree/symbol.py#L226-L232', 'comment_created': datetime.datetime(2021, 6, 8, 22, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 647828767, 'comment_body': ""`_binary_evaluate` isn't implemented for `Heaviside`. Instead of calling `Heaviside` directly just test both `EqualHeaviside` and `NotEqualHeaviside`. Can you also change the class name `Heaviside` to `_Heaviside` to indicate that it is a semi-private class (shouldn't be called directly)?"", 'comment_created': datetime.datetime(2021, 6, 8, 22, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 647913125, 'comment_body': ""Thanks, @tinosulzer, I have also removed the `to_equation` from the Heaviside as it is a semi-private class and won't be called directly"", 'comment_created': datetime.datetime(2021, 6, 9, 2, 7, tzinfo=datetime.timezone.utc), 'commenter': 'priyanshuone6', 'type': 'User'}, {'comment_id': 648340126, 'comment_body': '`to_equation` can still be in the Heaviside if the behavior of EqualHeaviside and NotEqualHeavside is intented to be the same (saves writing the same code twice). Then `EqualHeaviside.to_equation` will just call `_Heaviside.to_equation`', 'comment_created': datetime.datetime(2021, 6, 9, 14, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 648396845, 'comment_body': 'The `_binary_evaluate` in EqualHeaviside and NotEqualHeavside already does what `sympy.Heaviside` is intended to do, so I think we can probably skip overriding the `to_equation` for the _Heaviside class', 'comment_created': datetime.datetime(2021, 6, 9, 14, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'priyanshuone6', 'type': 'User'}, {'comment_id': 650111798, 'comment_body': '```suggestion\r\n    A node in the expression tree representing a heaviside step function.\r\n    This class is semi-private and should not be called directly, use `EqualHeaviside`\r\n    or `NotEqualHeaviside` instead, or `<` or `<=`.\r\n```', 'comment_created': datetime.datetime(2021, 6, 11, 16, 17, 42, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 650112290, 'comment_body': 'good catch! ðŸ˜… ', 'comment_created': datetime.datetime(2021, 6, 11, 16, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}]","[{'commit_sha': '9a3d7f6203a8e4dd0ada3678f5290016bb1619b9', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6236307a7c6d353d9f6ff4af9449d73c2572626c', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d3e2fa450524b895f343bbda8e24c773c0c618e', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffddbeb4bbfd20db5cd06938ebf10cb2da6f4057', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36e200c80200bef2049ccf2d81aeaf9e2b4fa5bf', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd14a1ca84986d01950ed42828dd1674f3f951737', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '182deb166839a406554e67c0e1e217c27b62df58', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bf454fe4218a68b273e1727ee770a6b16d7567a', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e7e75bd8d38cdc3e158bce2ed96041a0dcf5aab', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3893835ef9f1b8224d911d0c5de01678d2607a0f', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}]",Priyanshu Agarwal,64051212,priyanshuone6@gmail.com,User,,27,,12,25
674444665,Add to_equation for SPM,"# Description

- Add to_equation in FunctionParameter, Symbol, UnaryOperator, Gradient, Divergence and Variable
- Make to_equation SPM compatible
- Add tests

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)


# Key checklist:

- [ ] No style issues: `$ flake8`
- [ ] All tests pass: `$ python run-tests.py --unit`
- [ ] The documentation builds: `$ cd docs` and then `$ make clean; make html`

You can run all three at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,1517,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/1517,https://github.com/pybamm-team/PyBaMM/pull/1517,closed,132,34,9,2,1,3,0,0,[],2021-06-21 10:54:10+00:00,2021-06-22 13:42:35+00:00,96505.0,"1 day, 2:48:25","[{'comment_id': 655744931, 'comment_body': 'needs a test (both branches)', 'comment_created': datetime.datetime(2021, 6, 21, 22, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 655745050, 'comment_body': 'needs test', 'comment_created': datetime.datetime(2021, 6, 21, 22, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 655745092, 'comment_body': 'needs test', 'comment_created': datetime.datetime(2021, 6, 21, 22, 29, 1, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}]","[{'commit_sha': '6595107f7a816896f86acd5bf33dfd7df3de4826', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e232a86cacc8313a699ce95e7a5cd1411d825e81', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}]",Priyanshu Agarwal,64051212,priyanshuone6@gmail.com,User,,27,,12,25
680912987,Add to_equation for SPM voltage,"# Description

- Add to_equation in Function, Arcsinh, Parameter, BoundaryValue
- Automate print_name using regex
- Add tests

## SPM model equations
<img width=""458"" alt=""spm-1"" src=""https://user-images.githubusercontent.com/64051212/124263324-bd9d4780-db50-11eb-994e-b8574c02eb58.PNG"">


## SPM Voltage expression
<img width=""940"" alt=""spm-2"" src=""https://user-images.githubusercontent.com/64051212/124263337-c1c96500-db50-11eb-85f0-67b67801a800.PNG"">


## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)


# Key checklist:

- [ ] No style issues: `$ flake8`
- [ ] All tests pass: `$ python run-tests.py --unit`
- [ ] The documentation builds: `$ cd docs` and then `$ make clean; make html`

You can run all three at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,1528,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/1528,https://github.com/pybamm-team/PyBaMM/pull/1528,closed,232,11,14,9,2,12,0,0,[],2021-06-30 14:09:27+00:00,2021-07-06 17:49:56+00:00,531629.0,"6 days, 3:40:29","[{'comment_id': 661706190, 'comment_body': 'this should actually return an indication of the boundary value. The mathematical notation looks something like this:\r\n<img width=""46"" alt=""Screen Shot 2021-06-30 at 2 08 56 PM"" src=""https://user-images.githubusercontent.com/20817509/124010384-c05f3780-d9ac-11eb-9ceb-da158fd02bc5.png"">\r\nThat\'s hard to replicate so we could instead do something like\r\n```python3\r\nif child.domain in [""negative particle"", ""positive particle""] and self.side == ""right"":\r\n   return child + ""^{surf}"" # value on the surface of the particle\r\nelse:\r\n   return child + f""^{self.side}""\r\n```\r\n', 'comment_created': datetime.datetime(2021, 6, 30, 18, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 662934976, 'comment_body': '```suggestion\r\nimport pybamm\r\nimport numpy as np\r\nfrom pybamm.expression_tree.print_name import prettify_print_name\r\n```', 'comment_created': datetime.datetime(2021, 7, 2, 11, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}, {'comment_id': 662935123, 'comment_body': 'Very minor cosmetic change, but to keep consistency across files', 'comment_created': datetime.datetime(2021, 7, 2, 11, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}, {'comment_id': 662935499, 'comment_body': '```suggestion\r\nimport pybamm\r\nimport numpy as np\r\nfrom .base_parameters import BaseParameters\r\n```', 'comment_created': datetime.datetime(2021, 7, 2, 11, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}, {'comment_id': 662936342, 'comment_body': ""Same as my suggestions before (here I can't make a suggestion though because some lines appear as deleted)"", 'comment_created': datetime.datetime(2021, 7, 2, 11, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}, {'comment_id': 662937174, 'comment_body': 'Is there a symbol that we know for sure will never be implemented? Because `Erf` should be fairly easy to bring in.', 'comment_created': datetime.datetime(2021, 7, 2, 11, 16, 26, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}, {'comment_id': 664008725, 'comment_body': 'remove xav from the subscript', 'comment_created': datetime.datetime(2021, 7, 5, 15, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 664009179, 'comment_body': 'case is important, if a greek letter starts with an uppercase (e.g. Delta) we should print the uppercase greek letter', 'comment_created': datetime.datetime(2021, 7, 5, 15, 25, 41, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 664010408, 'comment_body': 'we could make `print_name` a property in `symbol` and then have the setter class for the property automatically call `prettify_print_name`', 'comment_created': datetime.datetime(2021, 7, 5, 15, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 664011095, 'comment_body': 'awesome!', 'comment_created': datetime.datetime(2021, 7, 5, 15, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 664028632, 'comment_body': 'Yes, it will return `\\Delta` if the name contains Delta and `\\delta` if the name contains delta', 'comment_created': datetime.datetime(2021, 7, 5, 16, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'priyanshuone6', 'type': 'User'}, {'comment_id': 664630921, 'comment_body': ""I didn't actually know you could do this here ðŸ˜† but for consistency let's put it in the `__init__`"", 'comment_created': datetime.datetime(2021, 7, 6, 14, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}]","[{'commit_sha': '7a5ca3cf8cb2fdaf310c9a23446cdfc4ec742dde', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3777e32814c46ac5a6f0def5c4e0d0132c9906c7', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a35cd85ef522f3d995689c4fbd158dcc8eccc73f', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '424ad37ecae99becae704225c6c5561e199b3fbd', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '538dc05f7ac5fd2fa790f1d1840495d2bee149c2', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '671ab0810125722ff11820eb5549d18398b2af70', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00ec6536dbfcb0654be719a454b0c6a1c6112825', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12d4639570c1f27528c4b81052674a1710529a6e', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21093630dc7e271d6637fba37f36ea314a69a712', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}]",Priyanshu Agarwal,64051212,priyanshuone6@gmail.com,User,,27,,12,25
683353531,Add SymPy overrides,"# Description

- Add sympy_overrides.py to override sympy methods to use partial derivative when `force_partial` is set True
- Add tests


For more details see [this](https://stackoverflow.com/questions/67173838/is-it-possible-to-assign-a-symbol-of-partial-derivative-via-symbols-in-sympy)



## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)


# Key checklist:

- [ ] No style issues: `$ flake8`
- [ ] All tests pass: `$ python run-tests.py --unit`
- [ ] The documentation builds: `$ cd docs` and then `$ make clean; make html`

You can run all three at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,1532,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/1532,https://github.com/pybamm-team/PyBaMM/pull/1532,closed,55,0,2,4,1,0,0,0,[],2021-07-05 04:51:44+00:00,2021-07-06 18:45:47+00:00,136443.0,"1 day, 13:54:03",[],"[{'commit_sha': 'a64148f7f2f2568f47b36f4d84cfaefeecd1ec2f', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2684303cc8fe0a5dd24431d65e75d7358dad023d', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98291da96b32588cf6cf0f3b947fd8a029e8a02e', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8246270d109d261bc33f0045e4dd2677d8d3910d', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}]",Priyanshu Agarwal,64051212,priyanshuone6@gmail.com,User,,27,,12,25
687319794,Add to_equation for SPMe,"# Description

- Add to_equation in Broadcasts, Concatenation, Log, Sinh, Integral and Independent Variable
- Modify print_name


## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)


# Key checklist:

- [ ] No style issues: `$ flake8`
- [ ] All tests pass: `$ python run-tests.py --unit`
- [ ] The documentation builds: `$ cd docs` and then `$ make clean; make html`

You can run all three at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,1543,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/1543,https://github.com/pybamm-team/PyBaMM/pull/1543,closed,164,61,20,12,1,12,0,0,[],2021-07-11 11:35:57+00:00,2021-07-26 15:26:59+00:00,1309862.0,"15 days, 3:51:02","[{'comment_id': 668962065, 'comment_body': 'these should also have indications of what domain each case holds in. Can be a separate PR\r\n<img width=""292"" alt=""Screen Shot 2021-07-13 at 1 15 03 PM"" src=""https://user-images.githubusercontent.com/20817509/125496624-5fb1f372-97c5-4e96-84e2-7e1eda641c37.png"">\r\n', 'comment_created': datetime.datetime(2021, 7, 13, 17, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 668963353, 'comment_body': 'can sympy integrals take integral limits? you can get these from the geometry. can be a separate PR', 'comment_created': datetime.datetime(2021, 7, 13, 17, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 668963641, 'comment_body': 'should be lowercase i', 'comment_created': datetime.datetime(2021, 7, 13, 17, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 668963859, 'comment_body': 'lowercase a', 'comment_created': datetime.datetime(2021, 7, 13, 17, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 668964001, 'comment_body': 'lowercase a', 'comment_created': datetime.datetime(2021, 7, 13, 17, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 668967449, 'comment_body': 'could have a default behavior (e.g. in SpecificFunction._sympy_operator) for functions that have the same name in pybamm and sympy:\r\n```python3\r\nclass_name = self.__class__.__name__.lower()\r\nsympy_function = getattr(sympy, class_name)\r\nreturn sympy_function(child)\r\n```', 'comment_created': datetime.datetime(2021, 7, 13, 17, 23, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 669560696, 'comment_body': 'How to access model.default_geometry from here?', 'comment_created': datetime.datetime(2021, 7, 14, 12, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'priyanshuone6', 'type': 'User'}, {'comment_id': 669752405, 'comment_body': 'Does the `integration_variable` have this information? Otherwise might be a bit tricky...', 'comment_created': datetime.datetime(2021, 7, 14, 16, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}, {'comment_id': 669801779, 'comment_body': ""Hmm good point, you can't access default geometry from here, so don't worry about it. Maybe instead we could print `\\Omega_n` (/s/p) as the lower limit to indicate integration over the entire domain?"", 'comment_created': datetime.datetime(2021, 7, 14, 17, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 669826713, 'comment_body': '`sympy.Integral(child, sympy.symbols(""\\Omega_n""))` will return this\r\n\r\n<img width=""528"" alt=""Capture"" src=""https://user-images.githubusercontent.com/64051212/125668174-457e597b-2472-487e-9b82-4398a72a061a.PNG"">\r\n', 'comment_created': datetime.datetime(2021, 7, 14, 17, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'priyanshuone6', 'type': 'User'}, {'comment_id': 669914112, 'comment_body': 'Ok leave it as xn for now', 'comment_created': datetime.datetime(2021, 7, 14, 20, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 675007489, 'comment_body': '```suggestion\r\n        tor.print_name = r""\\epsilon^{b_e}""\r\n```\r\nI think we want the exponent to be `b_e`, can you confirm @tinosulzer?', 'comment_created': datetime.datetime(2021, 7, 22, 17, 26, 2, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}]","[{'commit_sha': 'b8e9fa7e005d064ed058d4648a96033ca76b3530', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f1dfa642e50e7afcde20a1f66a97c789924f147', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9a21d53f81336c93b4c172da7803963a55e6ff1', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '180a82a8f23c60e9317e0c3439014444b03d917d', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c702193300f29b8729911ba78aab58fb85a244f0', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e10210e4f2af679562c2837afb8a80e33f60d86f', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1d30e1f432d0cb87e7184b71f62df7ac292a7f9', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dc0d7bdedcba732207a291930fe1b0fd98402f6', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4dae9e931a58519b3c63f8fdae3b3746161532b', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5af7545708e195a7b3ec02ea9ab7189b9ea5686a', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f32257bbd0ef51ead354c37a3fc4436719afae7b', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdc46c9b9d77dfb2e7d1163a37be0531b83b8674', 'committer_username': 'valentinsulzer', 'committer_name': 'Valentin Sulzer', 'committer_email': 'valentin@ionworks.com', 'commit_date': datetime.datetime(2016, 8, 3, 13, 47, 5, tzinfo=datetime.timezone.utc)}]",Priyanshu Agarwal,64051212,priyanshuone6@gmail.com,User,,27,,12,25
697690916,Add latexify,"# Description

- Add latexify in expression_tree/operations and BaseModel
- Convert eps to epsilon in print_name.py
- Add some print_name

Fixes #722 
## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)


# Key checklist:

- [ ] No style issues: `$ flake8`
- [ ] All tests pass: `$ python run-tests.py --unit`
- [ ] The documentation builds: `$ cd docs` and then `$ make clean; make html`

You can run all three at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,1568,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/1568,https://github.com/pybamm-team/PyBaMM/pull/1568,closed,515,20,13,11,6,10,0,0,[],2021-07-27 09:27:37+00:00,2021-08-09 19:00:54+00:00,1157597.0,"13 days, 9:33:17","[{'comment_id': 677654640, 'comment_body': 'Why this one?', 'comment_created': datetime.datetime(2021, 7, 27, 17, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 677681154, 'comment_body': '@rtimms suggested this [here](https://pybamm.slack.com/archives/C01QNMULRB5/p1627017172018300?thread_ts=1626961961.010600&cid=C01QNMULRB5)', 'comment_created': datetime.datetime(2021, 7, 27, 18, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'priyanshuone6', 'type': 'User'}, {'comment_id': 678368192, 'comment_body': 'Should just be \\epsilon, not \\epsilon{c}', 'comment_created': datetime.datetime(2021, 7, 28, 14, 40, 19, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 684798577, 'comment_body': 'This could be a separate test skipped with the decorator `skipIf` (to make it obvious it is skipped for mac and windows)', 'comment_created': datetime.datetime(2021, 8, 8, 16, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 684798627, 'comment_body': 'can skip with `#pragma: no cover`', 'comment_created': datetime.datetime(2021, 8, 8, 16, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 684799032, 'comment_body': ""It's a bit weird that this is a function in `base_model` - it doesn't use `self`"", 'comment_created': datetime.datetime(2021, 8, 8, 16, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 685307849, 'comment_body': ""I don't think these lines are needed, if `var.domain` is empty it will just skip the for loop below"", 'comment_created': datetime.datetime(2021, 8, 9, 15, 41, 39, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 685308264, 'comment_body': '```suggestion\r\n        elif self.filename.endswith("".tex""): # pragma: no cover\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 15, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 685308734, 'comment_body': ""nice, I didn't know you could do this"", 'comment_created': datetime.datetime(2021, 8, 9, 15, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 685326321, 'comment_body': 'Good catch!', 'comment_created': datetime.datetime(2021, 8, 9, 16, 4, 20, tzinfo=datetime.timezone.utc), 'commenter': 'priyanshuone6', 'type': 'User'}]","[{'commit_sha': '062abae0466ccf1a690ef54fb675ddd87f97832b', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '731ab6af77a3c921aa638f6a2471430f80d05876', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05a7ced68f9e2f3a7fab2bc3340ae22400d407b5', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc750e9576e4eae942c51633edc40f31d3eb8318', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cb0718a1257cd99830c5896d16c9451a42b3433', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5c1af8bba3eedffd4dbae8afdd004799ea328ef', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e3ea58d96b714ec5e2e5376a77ac2d22d83e800', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fce0528b474b2890324bd2deac67153be906dbae', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1625e6d4e9c38ebffa3d71cdf2b7430bff872b4f', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a953b75e5c84019a4135f64181a92628d8d3ea64', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38d92d78ab50d3075b7fccd0c21881d24b3153a6', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}]",Priyanshu Agarwal,64051212,priyanshuone6@gmail.com,User,,27,,12,25
701482999,Add print_name in new_copy,"# Description

Add print_name in new_copy

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)


# Key checklist:

- [ ] No style issues: `$ flake8`
- [ ] All tests pass: `$ python run-tests.py --unit`
- [ ] The documentation builds: `$ cd docs` and then `$ make clean; make html`

You can run all three at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,1585,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/1585,https://github.com/pybamm-team/PyBaMM/pull/1585,closed,51,18,14,4,2,0,0,0,[],2021-08-02 13:46:36+00:00,2021-08-03 14:17:06+00:00,88230.0,"1 day, 0:30:30",[],"[{'commit_sha': '82635d92aa6b8c801c195537ae9d4ea86c263437', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b44eb63f8a2d28fadb480769b7a57e1e77a0bd91', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0689bd0a402c1fe6c771a57e2b10e1e14faef33', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc314f14ab44b55104f26e7028bace68e5086285', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}]",Priyanshu Agarwal,64051212,priyanshuone6@gmail.com,User,,27,,12,25
706068194,Add latexify notebook,"# Description

Add latexify notebook in examples


## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)


# Key checklist:

- [ ] No style issues: `$ flake8`
- [ ] All tests pass: `$ python run-tests.py --unit`
- [ ] The documentation builds: `$ cd docs` and then `$ make clean; make html`

You can run all three at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,1596,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/1596,https://github.com/pybamm-team/PyBaMM/pull/1596,closed,614,36,24,10,2,1,0,0,[],2021-08-08 16:10:19+00:00,2021-08-18 19:25:56+00:00,875737.0,"10 days, 3:15:37","[{'comment_id': 691423747, 'comment_body': 'nice!!', 'comment_created': datetime.datetime(2021, 8, 18, 16, 36, 27, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}]","[{'commit_sha': '16c662c08dd89f3b8874f15f737a673e37e10a01', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be15e31ed6dd1bc0d283d26921cf99a6206e97ed', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7017517bb6d796407b2d41320d1f08389a7b4b87', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f64abda9a4e68c7b5e1537416087142e6e46fdc0', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3dfd4c2e55012ab4f071db3d92516e5b034d38f', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd12a4fa6b11fa42726b18a340d118c5c903533c1', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6c932638ab8b21ceda8a94361d6b3f8cccfeb53', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab58c8a7a94d9ba5c00ea29b548bc77f76fc5a04', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9779aaeb6b03e3ea7c5f4dce7f5152fee1f22cb2', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8ea482210b25ac6a313e008c65c16adcc46630d', 'committer_username': 'priyanshuone6', 'committer_name': 'Priyanshu Agarwal', 'committer_email': 'priyanshuone6@gmail.com', 'commit_date': datetime.datetime(2020, 4, 21, 1, 9, 48, tzinfo=datetime.timezone.utc)}]",Priyanshu Agarwal,64051212,priyanshuone6@gmail.com,User,,27,,12,25

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
155538761,PyBaMM,pybamm-team/PyBaMM,Python,516,1034,29,118,15108,161,46,28,"[{'id': 1039951616, 'number': 2272, 'closed': datetime.datetime(2022, 9, 27, 17, 34, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 29, 16, 48, 24, tzinfo=datetime.timezone.utc), 'time_taken': 2508339.0, 'time_delta': '29 days, 0:45:39', 'additions': 5283, 'deletions': 1534, 'state': 'closed'}, {'id': 951456528, 'number': 2085, 'closed': datetime.datetime(2022, 6, 24, 17, 25, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 31, 3, 5, 28, tzinfo=datetime.timezone.utc), 'time_taken': 2125220.0, 'time_delta': '24 days, 14:20:20', 'additions': 47, 'deletions': 95, 'state': 'closed'}, {'id': 938548108, 'number': 2062, 'closed': datetime.datetime(2022, 5, 17, 17, 17, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 17, 9, 21, 5, tzinfo=datetime.timezone.utc), 'time_taken': 28601.0, 'time_delta': '7:56:41', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 885721312, 'number': 1991, 'closed': datetime.datetime(2022, 3, 22, 19, 53, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 22, 7, 59, 22, tzinfo=datetime.timezone.utc), 'time_taken': 42870.0, 'time_delta': '11:54:30', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 867788006, 'number': 1956, 'closed': datetime.datetime(2022, 3, 2, 19, 4, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 1, 11, 57, 14, tzinfo=datetime.timezone.utc), 'time_taken': 112012.0, 'time_delta': '1 day, 7:06:52', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 837125745, 'number': 1928, 'closed': datetime.datetime(2022, 2, 2, 17, 39, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 1, 11, 48, 38, tzinfo=datetime.timezone.utc), 'time_taken': 107466.0, 'time_delta': '1 day, 5:51:06', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 834673648, 'number': 1925, 'closed': datetime.datetime(2022, 1, 31, 14, 38, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 28, 17, 38, 57, tzinfo=datetime.timezone.utc), 'time_taken': 248372.0, 'time_delta': '2 days, 20:59:32', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 828151398, 'number': 1908, 'closed': datetime.datetime(2022, 1, 21, 18, 37, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 21, 4, 4, 2, tzinfo=datetime.timezone.utc), 'time_taken': 52393.0, 'time_delta': '14:33:13', 'additions': 13, 'deletions': 5, 'state': 'closed'}, {'id': 821067876, 'number': 1899, 'closed': datetime.datetime(2022, 1, 20, 14, 23, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 13, 14, 49, tzinfo=datetime.timezone.utc), 'time_taken': 603285.0, 'time_delta': '6 days, 23:34:45', 'additions': 231, 'deletions': 126, 'state': 'closed'}, {'id': 816201685, 'number': 1885, 'closed': datetime.datetime(2022, 1, 13, 13, 40, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 7, 8, 58, 3, tzinfo=datetime.timezone.utc), 'time_taken': 535359.0, 'time_delta': '6 days, 4:42:39', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 812569606, 'number': 1881, 'closed': datetime.datetime(2022, 1, 20, 19, 30, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 1, 12, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1666543.0, 'time_delta': '19 days, 6:55:43', 'additions': 49, 'deletions': 17, 'state': 'closed'}, {'id': 811865501, 'number': 1878, 'closed': datetime.datetime(2021, 12, 30, 15, 46, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 30, 9, 16, 55, tzinfo=datetime.timezone.utc), 'time_taken': 23379.0, 'time_delta': '6:29:39', 'additions': 9, 'deletions': 13, 'state': 'closed'}, {'id': 778203913, 'number': 1798, 'closed': datetime.datetime(2021, 11, 11, 13, 29, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 11, 3, 52, 49, tzinfo=datetime.timezone.utc), 'time_taken': 34615.0, 'time_delta': '9:36:55', 'additions': 34, 'deletions': 34, 'state': 'closed'}, {'id': 771188332, 'number': 1774, 'closed': datetime.datetime(2021, 11, 2, 15, 43, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 2, 8, 17, 52, tzinfo=datetime.timezone.utc), 'time_taken': 26763.0, 'time_delta': '7:26:03', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 769387972, 'number': 1767, 'closed': datetime.datetime(2021, 11, 10, 16, 20, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 29, 16, 25, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1036504.0, 'time_delta': '11 days, 23:55:04', 'additions': 1102, 'deletions': 1110, 'state': 'closed'}, {'id': 755467782, 'number': 1743, 'closed': datetime.datetime(2021, 10, 15, 17, 34, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 11, 16, 48, 49, tzinfo=datetime.timezone.utc), 'time_taken': 348329.0, 'time_delta': '4 days, 0:45:29', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 749486344, 'number': 1715, 'closed': datetime.datetime(2021, 10, 5, 13, 5, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 5, 4, 0, 58, tzinfo=datetime.timezone.utc), 'time_taken': 32699.0, 'time_delta': '9:04:59', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 744429952, 'number': 1696, 'closed': datetime.datetime(2021, 9, 28, 11, 45, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 28, 5, 32, 3, tzinfo=datetime.timezone.utc), 'time_taken': 22397.0, 'time_delta': '6:13:17', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 736026909, 'number': 1681, 'closed': datetime.datetime(2021, 9, 22, 3, 59, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 17, 3, 49, 22, tzinfo=datetime.timezone.utc), 'time_taken': 432621.0, 'time_delta': '5 days, 0:10:21', 'additions': 8021, 'deletions': 5708, 'state': 'closed'}, {'id': 735412522, 'number': 1679, 'closed': datetime.datetime(2021, 9, 16, 14, 36, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 16, 12, 5, 51, tzinfo=datetime.timezone.utc), 'time_taken': 9012.0, 'time_delta': '2:30:12', 'additions': 8, 'deletions': 5, 'state': 'closed'}, {'id': 733872111, 'number': 1672, 'closed': datetime.datetime(2021, 9, 15, 13, 4, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 14, 17, 13, 43, tzinfo=datetime.timezone.utc), 'time_taken': 71453.0, 'time_delta': '19:50:53', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 733429110, 'number': 1670, 'closed': datetime.datetime(2021, 9, 14, 9, 53, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 14, 8, 13, 9, tzinfo=datetime.timezone.utc), 'time_taken': 5994.0, 'time_delta': '1:39:54', 'additions': 2, 'deletions': 4, 'state': 'closed'}, {'id': 732792210, 'number': 1666, 'closed': datetime.datetime(2021, 9, 14, 7, 49, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 13, 14, 13, 21, tzinfo=datetime.timezone.utc), 'time_taken': 63389.0, 'time_delta': '17:36:29', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 732756561, 'number': 1664, 'closed': datetime.datetime(2021, 9, 13, 13, 57, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 13, 13, 35, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1352.0, 'time_delta': '0:22:32', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 732382009, 'number': 1661, 'closed': datetime.datetime(2021, 9, 13, 9, 26, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 13, 4, 52, 6, tzinfo=datetime.timezone.utc), 'time_taken': 16455.0, 'time_delta': '4:34:15', 'additions': 83, 'deletions': 5, 'state': 'closed'}, {'id': 731624045, 'number': 1658, 'closed': datetime.datetime(2021, 9, 13, 4, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 10, 17, 18, 37, tzinfo=datetime.timezone.utc), 'time_taken': 214283.0, 'time_delta': '2 days, 11:31:23', 'additions': 0, 'deletions': 6, 'state': 'closed'}, {'id': 731571714, 'number': 1657, 'closed': datetime.datetime(2021, 9, 17, 0, 30, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 10, 16, 7, 14, tzinfo=datetime.timezone.utc), 'time_taken': 548583.0, 'time_delta': '6 days, 8:23:03', 'additions': 74, 'deletions': 0, 'state': 'closed'}, {'id': 730419026, 'number': 1649, 'closed': datetime.datetime(2021, 9, 10, 16, 0, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 9, 10, 2, 4, tzinfo=datetime.timezone.utc), 'time_taken': 107897.0, 'time_delta': '1 day, 5:58:17', 'additions': 70, 'deletions': 0, 'state': 'closed'}, {'id': 729855879, 'number': 1647, 'closed': datetime.datetime(2021, 9, 8, 17, 51, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 8, 17, 50, 19, tzinfo=datetime.timezone.utc), 'time_taken': 75.0, 'time_delta': '0:01:15', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 728833150, 'number': 1643, 'closed': datetime.datetime(2021, 9, 8, 18, 33, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 7, 17, 44, 38, tzinfo=datetime.timezone.utc), 'time_taken': 89349.0, 'time_delta': '1 day, 0:49:09', 'additions': 13, 'deletions': 5, 'state': 'closed'}, {'id': 712218711, 'number': 1606, 'closed': datetime.datetime(2021, 8, 13, 14, 30, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 9, 42, 18, tzinfo=datetime.timezone.utc), 'time_taken': 17283.0, 'time_delta': '4:48:03', 'additions': 23, 'deletions': 10, 'state': 'closed'}, {'id': 706068194, 'number': 1596, 'closed': datetime.datetime(2021, 8, 18, 19, 25, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 8, 16, 10, 19, tzinfo=datetime.timezone.utc), 'time_taken': 875737.0, 'time_delta': '10 days, 3:15:37', 'additions': 614, 'deletions': 36, 'state': 'closed'}, {'id': 702457499, 'number': 1589, 'closed': datetime.datetime(2021, 8, 3, 19, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 17, 15, 45, tzinfo=datetime.timezone.utc), 'time_taken': 7155.0, 'time_delta': '1:59:15', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 701482999, 'number': 1585, 'closed': datetime.datetime(2021, 8, 3, 14, 17, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 13, 46, 36, tzinfo=datetime.timezone.utc), 'time_taken': 88230.0, 'time_delta': '1 day, 0:30:30', 'additions': 51, 'deletions': 18, 'state': 'closed'}, {'id': 699218501, 'number': 1579, 'closed': datetime.datetime(2021, 7, 29, 13, 29, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 5, 23, 8, tzinfo=datetime.timezone.utc), 'time_taken': 29166.0, 'time_delta': '8:06:06', 'additions': 34, 'deletions': 4, 'state': 'closed'}, {'id': 697690916, 'number': 1568, 'closed': datetime.datetime(2021, 8, 9, 19, 0, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 9, 27, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1157597.0, 'time_delta': '13 days, 9:33:17', 'additions': 515, 'deletions': 20, 'state': 'closed'}, {'id': 696882994, 'number': 1565, 'closed': datetime.datetime(2021, 7, 26, 15, 27, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 10, 7, 35, tzinfo=datetime.timezone.utc), 'time_taken': 19195.0, 'time_delta': '5:19:55', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 687319794, 'number': 1543, 'closed': datetime.datetime(2021, 7, 26, 15, 26, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 11, 35, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1309862.0, 'time_delta': '15 days, 3:51:02', 'additions': 164, 'deletions': 61, 'state': 'closed'}, {'id': 686801695, 'number': 1542, 'closed': datetime.datetime(2021, 7, 9, 16, 10, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 13, 44, 36, tzinfo=datetime.timezone.utc), 'time_taken': 8778.0, 'time_delta': '2:26:18', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 683353531, 'number': 1532, 'closed': datetime.datetime(2021, 7, 6, 18, 45, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 4, 51, 44, tzinfo=datetime.timezone.utc), 'time_taken': 136443.0, 'time_delta': '1 day, 13:54:03', 'additions': 55, 'deletions': 0, 'state': 'closed'}, {'id': 680912987, 'number': 1528, 'closed': datetime.datetime(2021, 7, 6, 17, 49, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 14, 9, 27, tzinfo=datetime.timezone.utc), 'time_taken': 531629.0, 'time_delta': '6 days, 3:40:29', 'additions': 232, 'deletions': 11, 'state': 'closed'}, {'id': 675986217, 'number': 1520, 'closed': datetime.datetime(2021, 6, 23, 10, 57, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 6, 22, 7, tzinfo=datetime.timezone.utc), 'time_taken': 16517.0, 'time_delta': '4:35:17', 'additions': 343, 'deletions': 319, 'state': 'closed'}, {'id': 674444665, 'number': 1517, 'closed': datetime.datetime(2021, 6, 22, 13, 42, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 10, 54, 10, tzinfo=datetime.timezone.utc), 'time_taken': 96505.0, 'time_delta': '1 day, 2:48:25', 'additions': 132, 'deletions': 34, 'state': 'closed'}, {'id': 661693961, 'number': 1502, 'closed': datetime.datetime(2021, 6, 11, 23, 19, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 4, 11, 39, 49, tzinfo=datetime.timezone.utc), 'time_taken': 646785.0, 'time_delta': '7 days, 11:39:45', 'additions': 205, 'deletions': 119, 'state': 'closed'}, {'id': 653573729, 'number': 1495, 'closed': datetime.datetime(2021, 5, 27, 11, 59, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 10, 38, 26, tzinfo=datetime.timezone.utc), 'time_taken': 91241.0, 'time_delta': '1 day, 1:20:41', 'additions': 64, 'deletions': 55, 'state': 'closed'}, {'id': 627297714, 'number': 1475, 'closed': datetime.datetime(2021, 5, 5, 17, 6, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 30, 11, 44, 9, tzinfo=datetime.timezone.utc), 'time_taken': 451367.0, 'time_delta': '5 days, 5:22:47', 'additions': 103, 'deletions': 143, 'state': 'closed'}, {'id': 622261691, 'number': 1464, 'closed': datetime.datetime(2021, 4, 28, 20, 29, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 23, 18, 46, 33, tzinfo=datetime.timezone.utc), 'time_taken': 438194.0, 'time_delta': '5 days, 1:43:14', 'additions': 148, 'deletions': 99, 'state': 'closed'}, {'id': 608018258, 'number': 1455, 'closed': datetime.datetime(2021, 4, 9, 19, 4, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 13, 1, 20, tzinfo=datetime.timezone.utc), 'time_taken': 626586.0, 'time_delta': '7 days, 6:03:06', 'additions': 336, 'deletions': 4, 'state': 'closed'}, {'id': 592908487, 'number': 1431, 'closed': datetime.datetime(2021, 3, 15, 18, 50, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 9, 29, 23, tzinfo=datetime.timezone.utc), 'time_taken': 33639.0, 'time_delta': '9:20:39', 'additions': 38, 'deletions': 38, 'state': 'closed'}, {'id': 585760064, 'number': 1418, 'closed': datetime.datetime(2021, 3, 10, 1, 36, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 5, 17, 16, 18, tzinfo=datetime.timezone.utc), 'time_taken': 375636.0, 'time_delta': '4 days, 8:20:36', 'additions': 239, 'deletions': 231, 'state': 'closed'}, {'id': 573929358, 'number': 1387, 'closed': datetime.datetime(2021, 2, 16, 23, 53, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 16, 5, 12, 22, tzinfo=datetime.timezone.utc), 'time_taken': 67271.0, 'time_delta': '18:41:11', 'additions': 75, 'deletions': 73, 'state': 'closed'}, {'id': 572265514, 'number': 1382, 'closed': datetime.datetime(2021, 2, 12, 15, 54, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 4, 25, 26, tzinfo=datetime.timezone.utc), 'time_taken': 41359.0, 'time_delta': '11:29:19', 'additions': 45, 'deletions': 44, 'state': 'closed'}, {'id': 568936156, 'number': 1371, 'closed': datetime.datetime(2021, 2, 11, 18, 32, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 7, 8, 43, 41, tzinfo=datetime.timezone.utc), 'time_taken': 380915.0, 'time_delta': '4 days, 9:48:35', 'additions': 227, 'deletions': 0, 'state': 'closed'}, {'id': 562589941, 'number': 1347, 'closed': datetime.datetime(2021, 2, 1, 20, 12, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 27, 15, 29, 11, tzinfo=datetime.timezone.utc), 'time_taken': 449018.0, 'time_delta': '5 days, 4:43:38', 'additions': 54, 'deletions': 21, 'state': 'closed'}]"
