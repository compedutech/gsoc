pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
650775600,Add right panel with Room information,,True,365,https://api.github.com/repos/element-hq/hydrogen-web/pulls/365,https://github.com/element-hq/hydrogen-web/pull/365,closed,390,30,22,91,2,45,0,0,[],2021-05-23 11:51:41+00:00,2021-06-24 15:08:35+00:00,2776614.0,"32 days, 3:16:54","[{'comment_id': 642447572, 'comment_body': 'view models should not access any DOM interfaces, like window, as they are assume to work outside of browser environments. The easiest way would probably to expose a url property from this view model.', 'comment_created': datetime.datetime(2021, 5, 31, 12, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 642449354, 'comment_body': 'you should not have to react to a change in the grid rooms set, as the active room will be a room segment after that. So you can just react to a change in the active room, and it will work for both grid and single rooms.\r\n\r\nSo, concretely, you can call _toggleRoomInformationPanel from `this.track(currentRoomId.subscribe(roomId => ` on line 62, and in your toggle method check if the room id of the current vm, if any is still the active one.', 'comment_created': datetime.datetime(2021, 5, 31, 12, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644568936, 'comment_body': 'The font-size (and font-family of the button, but that should be fixed upstream) seems off still for link menu options:\r\n![image](https://user-images.githubusercontent.com/274386/120608280-8a2ba800-c440-11eb-9ae5-89c7b705d68a.png)\r\n', 'comment_created': datetime.datetime(2021, 6, 3, 7, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644571168, 'comment_body': 'For all user visible strings, please use\r\n```js\r\nvm.i18n`...`\r\n```\r\nwhich should make it easier to introduce translations once we decide to support them.', 'comment_created': datetime.datetime(2021, 6, 3, 7, 55, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644573527, 'comment_body': ""Is this needed?\r\nA `details` segment would always only come after a `room` segment, no?\r\nAnd room can occur either after session or rooms.\r\nSo you'd have:\r\n`session > rooms > room > details` for the right panel in the grid view or\r\n`session > room > details` for the right panel in the single room view.\r\n\r\nPossible I'm missing something though."", 'comment_created': datetime.datetime(2021, 6, 3, 7, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644575335, 'comment_body': ""I imagine your editor is doing this? The (very limited) code guidelines don't say anything either way in this regard, but most places in the project don't put spaces there and it's perhaps best not to clutter the PR with unrelated stylistic changes like this."", 'comment_created': datetime.datetime(2021, 6, 3, 8, 1, 50, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644576908, 'comment_body': 'Also check the value of the segment here, like you do in parseUrlPath', 'comment_created': datetime.datetime(2021, 6, 3, 8, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644578657, 'comment_body': 'Granted that the css naming conventions are wildly inconsistent, but perhaps name this similar to the class for the middle area, e.g. `right-shown`?', 'comment_created': datetime.datetime(2021, 6, 3, 8, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644579972, 'comment_body': 'Consider return `this` like in `setIcon` here so it can be used in a builder-like pattern: `new MenuOption().setCallback().setIcon()` ...', 'comment_created': datetime.datetime(2021, 6, 3, 8, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644580676, 'comment_body': 'Would you consider writing a small test below for this behaviour? :pray: ', 'comment_created': datetime.datetime(2021, 6, 3, 8, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644581908, 'comment_body': 'Same, please avoid changes like this', 'comment_created': datetime.datetime(2021, 6, 3, 8, 11, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644585483, 'comment_body': 'This will throw if details is not present, so need to check here first.', 'comment_created': datetime.datetime(2021, 6, 3, 8, 16, 36, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644585612, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2021, 6, 3, 8, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644587268, 'comment_body': ""wrt to `_summary`, properties that start with an `_` are considered private, and it's a no-no to access them from anywhere but `this` (you might see it happen in tests sometimes, but that's probably being lazy). See below how to get access to the values you need."", 'comment_created': datetime.datetime(2021, 6, 3, 8, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644589350, 'comment_body': 'you can use `this._room.isEncrypted` here, see `BaseRoom` again.', 'comment_created': datetime.datetime(2021, 6, 3, 8, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644590290, 'comment_body': ""you don't need to do this for the name, `this._room.name` (see `BaseRoom.name`) will give you the correct name, taking into account heroes and canonical alias."", 'comment_created': datetime.datetime(2021, 6, 3, 8, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644590454, 'comment_body': 'Please create a getter in BaseRoom for it.', 'comment_created': datetime.datetime(2021, 6, 3, 8, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644590577, 'comment_body': 'Please create a getter in BaseRoom for it, perhaps `joinedMemberCount`?', 'comment_created': datetime.datetime(2021, 6, 3, 8, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644592043, 'comment_body': 'Seems like this is not used?', 'comment_created': datetime.datetime(2021, 6, 3, 8, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644593512, 'comment_body': ""Probably best to create the URLs in the constructor and store them in a property. The property on a view model should ideally be very fast (and not create new strings, etc), so the bindings reevaluating them won't slow things down."", 'comment_created': datetime.datetime(2021, 6, 3, 8, 27, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644593876, 'comment_body': 'Probably best to create the URLs in the constructor and store them in a property.', 'comment_created': datetime.datetime(2021, 6, 3, 8, 28, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644604686, 'comment_body': 'Also, perhaps put this option first in the menu, so you\'re less likely to hit (the destructive) ""Leave room"" option by accident.', 'comment_created': datetime.datetime(2021, 6, 3, 8, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644605916, 'comment_body': 'No need for this empty line at the end of the method probably?', 'comment_created': datetime.datetime(2021, 6, 3, 8, 44, 32, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644607010, 'comment_body': 'Like elsewhere, also check the value of the segment here, if present.', 'comment_created': datetime.datetime(2021, 6, 3, 8, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644609530, 'comment_body': 'Do this inside the `if(enable)`?', 'comment_created': datetime.datetime(2021, 6, 3, 8, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644613129, 'comment_body': 'Hmm, just realized that opening the lightbox will close the details and vice-versa ... not sure how to solve this, but fine for now. Perhaps lightbox should not be part of the navigation path :thinking: as it is also annoying it ends up in the history, and is more of a modal thing. Anyway .... nothing for you to do here :smile: ', 'comment_created': datetime.datetime(2021, 6, 3, 8, 54, 12, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644616675, 'comment_body': ""Every push will cause the navigation to update. It's nice to make all the navigation changes in one go, so I'd suggest creating a new path (with room id and details) like already done in the left panel view model, and then applying it in one go, rather than multiple pushes."", 'comment_created': datetime.datetime(2021, 6, 3, 8, 58, 54, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644620895, 'comment_body': ""This is already used in the composer (and since redactions is merged also in BaseMessageView), so either keep the name, or ensure you've applied the name change everywhere."", 'comment_created': datetime.datetime(2021, 6, 3, 9, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644622961, 'comment_body': ""To receive updates on any properties of the room, you'll need to listen to its `change` event and call `emitChange`. Currently, if the room name, avatar or join count, ... would change, the right panel would not update. RoomViewModel does exactly the same, so serves as a good example."", 'comment_created': datetime.datetime(2021, 6, 3, 9, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644625470, 'comment_body': ""Were you envisioning that this be used in other sidebars in the app? I'd prefer calling anything related to the right panel that, rather than sidebar. This is consistent with left panel and is more specific which panel is meant."", 'comment_created': datetime.datetime(2021, 6, 3, 9, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644628484, 'comment_body': ""I imagine your tooling got ahead of you here, but please don't make unrelated stylistic changes like this. For one, it makes it harder to see where you made actual changes in this file."", 'comment_created': datetime.datetime(2021, 6, 3, 9, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644631090, 'comment_body': 'So, as said, the CSS naming conventions are currently wildly inconsistent. But for CSS classes that are not used in multiple views (which I think applies to all the below?), I do try to use the convention of `ViewName` for the root element, and `ViewName_something` for sub elements.', 'comment_created': datetime.datetime(2021, 6, 3, 9, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644633225, 'comment_body': ""can we call this `RoomDetails{View|ViewModel}` everywhere? It's consistent with the details segment in the nav/url. Also the CSS classes, see comments in `element/theme.css`"", 'comment_created': datetime.datetime(2021, 6, 3, 9, 22, 1, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644633793, 'comment_body': 'This would also become `roomDetailsViewModel` ...', 'comment_created': datetime.datetime(2021, 6, 3, 9, 22, 51, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644637878, 'comment_body': ""As commented in RoomInfoViewModel, I'd suggest the name `RoomDetailsView` here.\r\n\r\nI imagine once you add the member list to the right panel. RoomDetailsView would be one possible child of RightPanelView or something, with `MemberListView` being the other possibility."", 'comment_created': datetime.datetime(2021, 6, 3, 9, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644643799, 'comment_body': 'Wonder what this is for? It is adding space on the right, making it look somewhat unbalanced:\r\n![image](https://user-images.githubusercontent.com/274386/120623146-fdd4b180-c44e-11eb-92c8-945f390d0736.png)\r\n', 'comment_created': datetime.datetime(2021, 6, 3, 9, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644644734, 'comment_body': ""I'd go for 16px here. Our designer recommended me to always use values multiple of 4px in any case, so you end up with a 4px grid that looks more coherent."", 'comment_created': datetime.datetime(2021, 6, 3, 9, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 644645994, 'comment_body': 'Hmm, not sure about this. I think I prefer how it looks without this (and the other changes I suggested):\r\n\r\n![image](https://user-images.githubusercontent.com/274386/120623944-b69af080-c44f-11eb-93b9-e430afe22e5b.png)\r\n', 'comment_created': datetime.datetime(2021, 6, 3, 9, 40, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 650949061, 'comment_body': ""Just a small note that you don't need `text()` here. It's only when working with node bindings where you explicitly need to return a DOM node you need to do this. t.<element>() will convert any children strings to text nodes."", 'comment_created': datetime.datetime(2021, 6, 14, 13, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 650953325, 'comment_body': 'the implementation looks like it will just open rather than toggle? Change name?', 'comment_created': datetime.datetime(2021, 6, 14, 13, 36, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 650956567, 'comment_body': ""You'll need to unsubscribe in the dispose method you override from ViewModel, which also means you can't use an anonymous lambda here. See RoomViewModel"", 'comment_created': datetime.datetime(2021, 6, 14, 13, 40, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 651575556, 'comment_body': 'This should be 15px aka `1.5rem`', 'comment_created': datetime.datetime(2021, 6, 15, 8, 38, 47, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 651580642, 'comment_body': 'selector lists in `:not` are not supported in IE [apparently](https://developer.mozilla.org/en-US/docs/Web/CSS/:not). Can you write this out?', 'comment_created': datetime.datetime(2021, 6, 15, 8, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 657683923, 'comment_body': 'Nit: only the imports needed for the tests should be below here, the others up at the top. You can also avoid the import by doing `this.navigation.segment(...)` fwiw.', 'comment_created': datetime.datetime(2021, 6, 24, 7, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 657684812, 'comment_body': 'is the `.right-shown` not needed then in here?', 'comment_created': datetime.datetime(2021, 6, 24, 7, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}]","[{'commit_sha': 'c7ba47204254a3b1563f3399470428d3567da009', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7fd0fac0757161446dcdc570a19001a08199933', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '986271d02a8b56fcac18c3aa071ba1ce1b8def97', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e39572b98ba4b459dad5a12073848a4a860a5c5a', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96959a3c4ced1a967a99cad4370c0b4ccae63030', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '439910f6caa5821cfb9b7cb9c9e0f8030b7687a7', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98d8d44695ffe9f15c689a505e11882df3af5c90', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e38c3ea88fe2a22a0328d6f25cb2bae526169f6', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddaa9b46c07937e92f8f09dc8919138097f54348', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3333f5fe8d02753fc0a4ff2e39b2e795f620226', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a605cc6c6688bb45f913c000c7ea62684141607', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d11f85ab3b03793036d6f7cd3bbb246380760df', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '191eb09a76f5c6a6f0b725a0dd8ebf7a8d90b961', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ea2843454c281a7b6a041de8db33ffecb65fe63', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1b77b6fa7074cd78c63d4e0ea8955dd0271edb', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aece82dff640e86082ea369d74984558bf2e2157', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd502a7f911adb9d378deb7d2576b5a9784576c05', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a23e2c361a2a41b615baf4c520265a3a6f93e675', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a4f8aff7961a5ca2b1ffa70e555d7c0d51b7026', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '653fcbbb1f883a429a0605bff06953dfc225b263', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee29d7f799dc353883145ed72d8283b427bae5b5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f42553f8cb3d1195ddcae1c6f3918a8950e85f72', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c96abc889205cda589f1d4afa7ffcc626ebb63f7', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0535b5d7d501107cddd2625e1624d9f8e4f1673', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91f083a2458bf0779bca38620fe42a50ab287c15', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c65e26ec4c65d97aa3246ac12fd788b1a645ac7d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20a250dfc0d5c0ac893d2dbbd137d11b1041e891', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37367cde652f50ed4bb04d72ee9e8a0e2f74a6dd', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecd5505af9c5cfd24dfbfe8f71dfd51e62e30c3d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4edc58ebcf2c65a1c93bab361f866813a0912bcf', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5480b018b0c07eaa7e38f66d56bf68fd995e398', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ac415fa4f288da11aa1da5418910d33332d90de', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eab6ca3baf808a03552b7cca600228ef838766e9', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd782c9e0bb92af68398283775600bf85124bebce', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dcec6343d0cc6d6de8496c623b0ed25a2acb82e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02d79b52a4ad77738606da51f0d85bc6e1cc4690', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '426d0779ee68677679783b3e4f3aef9a5628c3d9', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e96b58f85b39cb2a4cc2c4b75d86eb393d741a5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00dbd3db060eb57bbcdd35ede7888984da82455b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '040c744b6a69d5c9bdf0265587df2b8485ad0a03', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1fe17fe652f0084de134fc502bb0e431a6c6ea1', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3d65d89baac2ca3ff44905731c9ce48b52bfe52', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32736821554ceab31cdc401bc1b63e88b9335a11', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d254c91e3c7859c5c026816d33b9c78140c02e3', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3271fb9166f84a7ef0bf4c0684212e6830c795a', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98ef6f432183ffbdc263339909b4d11a851cb9b5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65bd74442f598a4770611584b94b9907485f6963', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9074caf443589dd99fca0a657db236f18c1d0b18', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '986f04aac022fa0c27fdf3c310e3ff25fa9466a9', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3587a80c6fa0fa2ba79b5efd39d055076bb370b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04933acbfbff32767389f5844d7c3f3be356af32', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f922afe790bcacb9e95fed3b532deb51eeb901b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4bcb21a85afcfbc95b3cb8197c2db49d9f537e5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37e052c0617fef4b4c396ab3f5f7e878267775cb', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2448e1207932146a4ba98bd4ab0946012d9cee4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b740389129dcd147b1ede41a0b4b1d7769e437a', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d63ce9a3a1d6e12d52335329725108697695baa', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c962943b2442d82eeb6c0f620cb2cf6127a9377', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4700009c68beae5c4f68b8d9f17d96682e0c78d6', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6f3b1fbbe0834ffaffa5130bc6d03b96d5a20df', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04065847dc0ded1dc188164c0a1da62ff9bb40f6', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcc2afba08d0a69399188f5a4f89829389b175a5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb870cfc23d1b09577fc04e728918ae0cb54a222', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fbcf8953984b8bfc3d06f189e6297fb14185ccf', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '332fbdda846b4e046f741fdcc4a3a7a459519864', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '008f3601ca187ff4fbd1d8475fa8cf995e3da8ad', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efd37d811f34f4d48c82d36770be552a49da04dc', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f917730a21c7446e317f08cd12e5c88c7c92cac9', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3f1436bb01c47a1d176d6cc9475a59f4a626ac3', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c0176f3f2c13639d7b051c901ed0b15f1063617', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6086d157e2fe190d38b6d515b963201cdb29aeeb', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95512b51442497a7f1d7eb9ea31af4bfa3797bbf', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa67c5e248a08b4a72264638250cd9f25ff7882f', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4005d70bb96f5bba0e61761a2482f8ca4a37d15d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd9a19b7f0d7853b4a4e2aeb059be72ed3bf9563', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c5d118bfd71a698b95e49a44f8ba95bc43fe84c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2f2d51594067c503f5ae3fa15a258a0ad9bb586', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2443a8b09bebc1ea187c9d1c0f634e5885bfe8a', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e10b455b2737cde833ae34627822466b31b58fad', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b811aa92728a30a24e35d2e06b4c457d34203c3', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88a1e34987286a560a14c21fdb08728746324e30', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e50b503897d05a0054165a2d4b1dd953b5f3995b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97e484b8e6b739b1ea70922b32ee6202634edba0', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f05d9a5b76063767ed82a5dec83fee745eb21df', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1772fc04f922d9c10bc31d914a3b5e3bb3f54beb', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e4db2f5dc850f92d894fa4b520d2875935913e2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e161f6131980920845feb4822f82fb94a8bb08bf', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2fd90bdc25e014496cf1dc5f096b004ac29e78b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a273b25bac86f248c4039c70f13fb372737537d3', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb35f462141c9abb363a6618580bc4d8039911e4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09aba788032fd6f994e04d7a1e31cb6d4bd61151', 'committer_username': 'bwindels', 'committer_name': 'Bruno Windels', 'committer_email': None, 'commit_date': datetime.datetime(2010, 5, 12, 11, 57, 4, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22
673257020,Add memberlist right-panel to Hydrogen,,True,395,https://api.github.com/repos/element-hq/hydrogen-web/pulls/395,https://github.com/element-hq/hydrogen-web/pull/395,closed,1097,90,33,106,3,59,0,0,[],2021-06-18 08:02:33+00:00,2021-07-16 20:03:13+00:00,2462440.0,"28 days, 12:00:40","[{'comment_id': 662093462, 'comment_body': 'This will need to be generic to copy any segments over that come after a `right-panel` segment.', 'comment_created': datetime.datetime(2021, 7, 1, 8, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662095344, 'comment_body': 'Perhaps put this file (comparator.js) in a `members` subdirectory?', 'comment_created': datetime.datetime(2021, 7, 1, 8, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662095811, 'comment_body': 'same here, can be in `members` sub dir', 'comment_created': datetime.datetime(2021, 7, 1, 8, 38, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662097125, 'comment_body': 'You can prevent the double lookup here by doing `get` immediately and check if the result is truthy', 'comment_created': datetime.datetime(2021, 7, 1, 8, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662098410, 'comment_body': ""You could return the array of `vm`s from this method (only if it is an array), so you don't need to look it up again here."", 'comment_created': datetime.datetime(2021, 7, 1, 8, 41, 46, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662099989, 'comment_body': 'Perhaps check that previousName is not a string or is not undefined rather than falsy in case somebody has an empty name', 'comment_created': datetime.datetime(2021, 7, 1, 8, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662102311, 'comment_body': 'Can we write this inline in `_handlePreviousName` perhaps? I find it a bit harder to read when this is disconnected from the `length === 1` check. Then you could do `array[0]` for more clarity.', 'comment_created': datetime.datetime(2021, 7, 1, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662106850, 'comment_body': 'I wonder if it is worth it to create a generic loading view that accepts a message and perhaps an extra css class, and by default just center the message and spinner on both axis, like `TimelineLoadingView`.', 'comment_created': datetime.datetime(2021, 7, 1, 8, 53, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662107686, 'comment_body': 'You can just define MemberListView as a sub class of `ListView`, providing a convenience constructor. Or do you plan to add more things to this view?', 'comment_created': datetime.datetime(2021, 7, 1, 8, 54, 12, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662144240, 'comment_body': ""`this._timeline` is only set if the timeline is open, which will be fine for using it in the in the member list, but it will throw if `openTimeline` is not called before `loadMemberlist`. Ideally we'd:\r\n\r\n - lazy load the power levels in BaseRoom either when loading the members or opening the timeline, and pass them into Timeline and Memberlist.\r\n - if loaded, update the power levels in afterSync of Room\r\n - resort the member list when the power levels change in afterSync."", 'comment_created': datetime.datetime(2021, 7, 1, 9, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662170627, 'comment_body': 'Will keep this in mind. But some of this is bound to change with lazy loading I think.', 'comment_created': datetime.datetime(2021, 7, 1, 10, 24, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 662171418, 'comment_body': ""This is pretty much what I thought too. We'd then replace TimelineLoadingView with the generic loading view."", 'comment_created': datetime.datetime(2021, 7, 1, 10, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 662173875, 'comment_body': ""Yep. Haven't gotten around to making the navigation work everywhere. Planning on doing it right after lazy loading. 👍"", 'comment_created': datetime.datetime(2021, 7, 1, 10, 30, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 663373419, 'comment_body': ""Noticed something here. `MappedMap` won't run the mapper in `onRemove`. This will cause any user who leaves and rejoins a room to appear disambiguated. "", 'comment_created': datetime.datetime(2021, 7, 3, 14, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 663714019, 'comment_body': ""any reason you can't leave this up to the parent class by calling `super`? Should be enough to just override `onAdd`, ...?"", 'comment_created': datetime.datetime(2021, 7, 5, 7, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 663714954, 'comment_body': ""I'd try to determine this inside this component using the DOM rather than inject (& hardcode) it. It does mean you might need to make the initial rendering async as in render at first you'd only attach the `ul` to measure the height of it, and only then mount the needed amount of children. In my experience, doing a double `await new Promise(r => requestAnimationFrame(r))` does a good job of reading a reliably `clientHeight`."", 'comment_created': datetime.datetime(2021, 7, 5, 7, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 663722007, 'comment_body': ""I think this will add `n` (default of 5) items *every* time you scroll a pixel? I'd like to interpret this number as a padding rather, where you have the range the corresponds to the current viewport and you add `n` items on either end (limited by 0 and the length of the list on either end of course)."", 'comment_created': datetime.datetime(2021, 7, 5, 8, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 663724447, 'comment_body': 'What does expand mean here? Move the window of the range to react to scrolling? Is it inspired [on this](https://github.com/matrix-org/matrix-react-sdk/blob/9d6d8fc666855ca0c06c71ccb30c74ac4fc8fd12/src/components/views/elements/LazyRenderList.js#L39)? It seems to do something somewhat different though.', 'comment_created': datetime.datetime(2021, 7, 5, 8, 7, 18, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 663725228, 'comment_body': ""you'll need to render an item at the end of the list though to keep the count the same"", 'comment_created': datetime.datetime(2021, 7, 5, 8, 8, 28, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 663725376, 'comment_body': ""same here, you'll need to remove an item at the end of the list to keep the count the same"", 'comment_created': datetime.datetime(2021, 7, 5, 8, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 663726892, 'comment_body': ""I'm failing to understand what the idea here is"", 'comment_created': datetime.datetime(2021, 7, 5, 8, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 663742901, 'comment_body': 'Ah yes, can you check for this in the mapper when it is run in onAdd?', 'comment_created': datetime.datetime(2021, 7, 5, 8, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 663746639, 'comment_body': 'Because `super.loadList()` also inserts all the elements from list into `_root`.', 'comment_created': datetime.datetime(2021, 7, 5, 8, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 668621710, 'comment_body': ""the root element should probably be an `<li>` here as it's mounted within an `<ul>`."", 'comment_created': datetime.datetime(2021, 7, 13, 10, 8, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 668825466, 'comment_body': '`listHasChangedSize` can be removed here and in the check below, as any changes to the list will be handled in the onAdd/onMove/onRemove/... handlers.', 'comment_created': datetime.datetime(2021, 7, 13, 14, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 668827157, 'comment_body': 'I wonder how much behaviour is still used from `ListView`? Do you think it could be simpler to just implement this from scratch?', 'comment_created': datetime.datetime(2021, 7, 13, 14, 36, 36, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 669373512, 'comment_body': 'this should be private (e.g. _load...)', 'comment_created': datetime.datetime(2021, 7, 14, 7, 47, 43, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 669373838, 'comment_body': 'The timeline reader is not needed for the power levels. This is the part the reads the messages in the Timeline class.', 'comment_created': datetime.datetime(2021, 7, 14, 7, 48, 13, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 669375392, 'comment_body': 'as the function currently is, if a second call is made before `load...` finishes for the first call, it will load the power levels twice. I think you will need to cache the promise from `load...` and store it on `this` and await that if it is set.', 'comment_created': datetime.datetime(2021, 7, 14, 7, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 669376426, 'comment_body': ""the transaction should only use the `roomState` store, as that is the only store you'll be reading from here."", 'comment_created': datetime.datetime(2021, 7, 14, 7, 51, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 669555046, 'comment_body': 'Very little. It would me much simpler to implement this from scratch indeed. You can see in some places (like `loadList`) where the code gets a little crufty because we have to support the super class.', 'comment_created': datetime.datetime(2021, 7, 14, 12, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 669683979, 'comment_body': ""new members should be set to null in the constructor, I think this could cause v8 to de-optimize our code if the hidden class doesn't match any more."", 'comment_created': datetime.datetime(2021, 7, 14, 14, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670315595, 'comment_body': 'why not just inline `path = addPanelIfNeeded(this.navigation, path);` where this is used?', 'comment_created': datetime.datetime(2021, 7, 15, 9, 55, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670424971, 'comment_body': 'you could use `ifView` here', 'comment_created': datetime.datetime(2021, 7, 15, 12, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670535124, 'comment_body': ""Not sure why this doesn't make the lazy list too tall, but 100vh doesn't seem correct as there are buttons above it. This would be better:\r\n```suggestion\r\n    flex: 1;\r\n```"", 'comment_created': datetime.datetime(2021, 7, 15, 14, 49, 37, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670536820, 'comment_body': 'same here\r\n```suggestion\r\n    flex: 1;\r\n```', 'comment_created': datetime.datetime(2021, 7, 15, 14, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670540183, 'comment_body': ""not sure it's worth to put this in a method? seems easier to read if the whole chain is in one place ..."", 'comment_created': datetime.datetime(2021, 7, 15, 14, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670611158, 'comment_body': 'Nothing changed with lazy loading :sweat_smile: ', 'comment_created': datetime.datetime(2021, 7, 15, 16, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 670613424, 'comment_body': '`listHasChangedSize` is removed but we still need an option to force render for the time being until we optimize onAdd/onRemove.', 'comment_created': datetime.datetime(2021, 7, 15, 16, 15, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 670642584, 'comment_body': ""why do we need this flag? wouldn't only one of the options have `enable` true below?"", 'comment_created': datetime.datetime(2021, 7, 15, 16, 46, 24, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670645205, 'comment_body': 'singling out `@` seems a bit arbitrary here, but probably fine for now.', 'comment_created': datetime.datetime(2021, 7, 15, 16, 49, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670651688, 'comment_body': 'this method should not throw as it is not awaited from `mount`, better just log?', 'comment_created': datetime.datetime(2021, 7, 15, 16, 58, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670654196, 'comment_body': 'since this method being called from anywhere but _renderElementsInRange would break things (as _renderElementsInRange clears the DOM), should we merge the two?', 'comment_created': datetime.datetime(2021, 7, 15, 17, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670655767, 'comment_body': 'should we do this in this PR? Sounds like it would create bugs otherwise?', 'comment_created': datetime.datetime(2021, 7, 15, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670656852, 'comment_body': ""`BaseObservableList` doesn't define a `get` method ... should we also use an iterator here for now?"", 'comment_created': datetime.datetime(2021, 7, 15, 17, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670658272, 'comment_body': ""I don't understand why toIdx and fromIdx are seemingly being ignored here. If an element moves within the current rendered range, I'd think we'd need to take the specific indices into account?"", 'comment_created': datetime.datetime(2021, 7, 15, 17, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670659033, 'comment_body': '(also, a lambda for this seems overkill?)', 'comment_created': datetime.datetime(2021, 7, 15, 17, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670659940, 'comment_body': ""Can we give this a name more specific to moving an item? Given it's arguments, it looks like it would only apply in that scenario."", 'comment_created': datetime.datetime(2021, 7, 15, 17, 11, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670661247, 'comment_body': 'Oooh, I see. This is about adding an item at either edge after removing one to keep the count in the rendered range the same. Perhaps we can make this clearer?', 'comment_created': datetime.datetime(2021, 7, 15, 17, 13, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670662323, 'comment_body': ""Ok, but we're not doing it in this PR I suppose? fine be me"", 'comment_created': datetime.datetime(2021, 7, 15, 17, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 670713703, 'comment_body': 'We have to run the `updater` for both the segments (""memberlist"" and ""details"") once initially because otherwise by the time the `RightPanelViewModel` is created and the segment is observed, the navigation event would have already fired.\r\nOnly one of the initial `updater` runs would actually create the `activeViewModel` but we don\'t want the second initial updater call to dispose of the view model created by an earlier initial updater call.', 'comment_created': datetime.datetime(2021, 7, 15, 18, 33, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 670718942, 'comment_body': 'Perhaps removing the explaining comment from here just hours ago was a mistake :smile:\r\nThis is so that we can spread the members whose name is just their user id (starting with @) from clubbing together at the top of the list. By ignoring the starting @, these members are alphabetically sorted on their user id.', 'comment_created': datetime.datetime(2021, 7, 15, 18, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 670729901, 'comment_body': 'Have merged the two for the time being. The follow up PR will change the render code anyway.', 'comment_created': datetime.datetime(2021, 7, 15, 18, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 670734871, 'comment_body': 'Unmount child and modify `childInstances` here. ', 'comment_created': datetime.datetime(2021, 7, 15, 19, 5, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 671057004, 'comment_body': ""> `BaseObservableList` doesn't define a `get` method ... should we also use an iterator here for now?\r\n\r\nEventually we'd want a `get` method for `BaseObservableList` no? We sure can do iterator for now.\r\n"", 'comment_created': datetime.datetime(2021, 7, 16, 8, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 671137294, 'comment_body': ""Fixed for now but there are related issues. For instance if user-A and user-B are disambiguated and user-B leaves the room, we'd ideally want user-A to be un-disambiguated (which we can't really do atm because the disambiguator does not get informed when user-B leaves)."", 'comment_created': datetime.datetime(2021, 7, 16, 10, 23, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 671445294, 'comment_body': 'good point, I think this is fine though for now.', 'comment_created': datetime.datetime(2021, 7, 16, 18, 19, 37, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 671449107, 'comment_body': 'right, makes sense now :+1: ', 'comment_created': datetime.datetime(2021, 7, 16, 18, 26, 44, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 671495529, 'comment_body': 'Yeah, probably. Just need to think if it can be implemented well in all observable list implementations (e.g. filtering changes the index).', 'comment_created': datetime.datetime(2021, 7, 16, 20, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}]","[{'commit_sha': '69237fce85282ad44333c00b70b0315279fb4f47', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e6e4ecfab5094cb3e10355f649506ea6a7b5ccb', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b74e4452ddf82564f6991bed6ad613cab7aeb6dd', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7500bbeaad5101710993cc82d216e4dc93dd3b8b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b01ca502e7053a312be1124144885678aef4f20', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfe7385611561ae19cc76ae035f70a36ec3934b7', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1418645e151b99f84112e6813637fa8a11271c3d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46a6cf6adf4c3bb4f353a4575d2af8d79f1ac58d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3c7ab337d57b413f9334276e2607b3bf420b372', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a765d7fc7dd732478d245a624d27b9de3ddc1643', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abd2c19bf29a63ecb188538e60e4e50b6085a478', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e72d57be7942273bb1fd819cb13636ff4e7d8db', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddb7a16fb8a22e21ba614f9e891bc0486156f115', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7a6fbd90171eeb84f28098512d9c957b95c6dd8', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb5e598e955535889c46d058f63342e871f53226', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e23392a0e98727d0cbebfb64c148d36e1da61d8', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9ff6ab026b901fb2ad5514760318f5961699884', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1e3ff3ed8a4f46668dbbaa816270886478f537c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e8c4563aa3e31bd9a5c6386ee59d45c5d67b432', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11eb9c7783dadea01323b331f6c7fa245aafe2bd', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fcaac3865159b90d1df98699965c726213b8778', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b62473ae79cdc1731ddd3228c90f1b2b1c571461', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0819dcb29ef1ad9f46ba25053d06e1366d6fcf49', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f41c835e91644e1c18798dee21a0309a37594c3e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '404129f60eb18f68243f14f7a9efa04eda30b9bb', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dea0cad252958a8bcb670e54851ef60f656c236b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8542c675467a9a5d75aae44b2783250131010f2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcb46fc54a5568eed2a964f7fb99e2b62fbd7814', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef400275026eb124d60bf4c9f5e372f8da717346', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d4ba2015070eb3600615879b0ee34f8945707bf', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86c1550850e4ccaef42c408df1857ea11c578af8', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7139711314a8f0938bf0d06dc8e1d9c6ea790d4b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fb89a81bce1aca230421b89fa33e7cdd6c2ef93', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd64d07aee5d5ab12338845f897df4791f7abcc43', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcfd1bd1352e7789b9049eb328d350a4a9215362', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9354238142b52f29f2754d8a28ee811e17b8ca0', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bb82e55bf5fe72e13646214544f6801e070b405', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab0a48ab31f3f7d8eb6f063a293680d0f96b2279', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41806b5e825fc9c979befe83c6bd8474aeeb9989', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad6122a5b635f46712abd05e557f757022085075', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da1e981948f86bd56dda931986b207b7893d8840', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea06d4f88e05ab964724e968a145337aa408ecb4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89e256e563be91160c76f9c8215e53ed43545c0b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11d411c9a91947e270c72b6b7e51714fc69a003d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53fc6a7af9caeebf4dc8f363d05200f6b6ec5793', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db515d48c1d6b1e725f931029f210967eb280ab3', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35f6043d06e2aedc3c91721cae097fae1fd7ad7b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d5b16395fb0fee466724c13788a26af07af9342', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b9f4a5e1d8b4e282f063567163cbe54afdf856a', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee072343f5d9f8fa7d9d2d4d9ec2ed7eda9a0c0d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '452eee6767e46520a2cb8c31fcfcc7ce09d5c867', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f05574f579393f81848ba8c621700ae3371b4e8d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96e2bb0b1a6fccc841873b81ddb825305f8c1701', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a00143623ed30c84033eb9d7df9cc41a2fd57d9', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cb9adc9ea7d0a949c58856d7e34958bad96f780', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85924aba92a428f53437fdc36fbcee5d59068f03', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5338457ea06cab4ea79feb607635c0571d983861', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3a8e959622ac6ac047d97d0a6ab97da44ec03d5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea0851eb9498f466490e1e13d7a1702bde1eb58e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f506cf615bd98bb63f016674ed26f522f4368330', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c539c386996c43c60825d65d58a0e5873f00ae9c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f465e6ccd39e73a98f5d27ef63c5a92cf1e028', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a976ef24b3444b0ce2c73fac84bb538eecea588', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22fab3761ad063a01bfa12d55b4ba290b0a5a2d7', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14c00f50fcca1bff9012ad00993fc69acd4860eb', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e39aed4b6fe6db239af69a1a3c944a8a934eb59', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2502c4024a89706d63a4a5f78d6dcc70762d3b6b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c073d4c0d075242ca6154abc4af08ae5eed6ae39', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe4f6d23089447bedfd5b4a52d45a1ce19ef3cdd', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ee9cb10c22f88d566c8d95d746f25584d0096c2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f79e8bef7927b2aedca209585b35c44e7429cc', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e55967db3f6c74079e6fce5c24578a3129aec9e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21f47f21aaef6e7a4ad1a64877291c5831d87115', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f98a8847e35b9b5bc084ce0dc200df465f02a2dd', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b126ba13709b8dbdc2099e9d306385fba9164380', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7e12c98b577772e6ff84355eaf9d6be6459e306', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be46d870aa7837cb583ede4127b32ccce02a9e66', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a54be2e2ebf965f919f9b495ac7e2ddd4e8d4e4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5873ab63baf3a80538a5c88db8ee8ad9e71beb06', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e406aa6e456475e426fd8f319beac0ffd98ad519', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '960f2c283e754785bcc2d4eee7d5c9ee74d22a1c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60793798c71fa4589dd2a11f90e097ee58cbac6c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c0c59044f68a09e0a4a72f6a2e1d12a97095ea2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe18b616884ca02f875fb3b31c4a5242dc70ca82', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4c0e0206f7a1fc22ac5cd1119dced83a5b1e703', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bac98d39af2f7df20c66c86ff59fd9bc5befe73', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a3d7e416a0e098a2c46a619f8df1bfe0ecb230d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ac3d3727b8856af0fd4595444e8f921ae0c7967', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da733f9f8a1d1556ca7ea1ac21ad1cd2fa151bf7', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f67aa34d36946a41d5379485bf3f21679c82cba', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '694b62730999667cbbfbe4f844cf70bdf97dc3b7', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4946683b239ac19af5fb7422dda157ca27de978e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c410aed672668d6ab64adec9c132e62b9dbcf63a', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec8b6f9dd29e981b8f3bc9c4cab2365c768441cf', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '611524cddaa7997d236f6d946677b5bd74f238da', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e0976c7f56ae0b6c889ce97a1c1fc9b64d2640b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '829830c0fa4439c9405253a73d8038dcd6f4809b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bd1d2b29141d76963ed65e4b8fde9a7bd838bee', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f366479c160d41558710b1113ffb3cf38cbfe588', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fdfebf00db0646e915a9373dba1619693d8953c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66d5f4d1a3be705cf3bcb456104b4d5547a1bc27', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec4a783759f42da0007f70f0072c16743cc1d5c5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '436e87578e97db87ba1a1a50fc1c1b4c57aabba4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86bb56ab6fb8e99f86e23dabbde7e8c711bbc1a2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c9755d1a6cd038c529824cf3e818205e0819559', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a721fe7e8703226872bb2d9e84a7e15f4a9ca6c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22
679252303,Handle avatar image error,"Fixes #402 
Signed-off-by: RMidhunSuresh <rmidhunsuresh@gmail.com>",True,404,https://api.github.com/repos/element-hq/hydrogen-web/pulls/404,https://github.com/element-hq/hydrogen-web/pull/404,closed,116,90,6,11,2,13,0,0,[],2021-06-28 17:51:20+00:00,2021-07-05 07:48:49+00:00,568649.0,"6 days, 13:57:29","[{'comment_id': 660353019, 'comment_body': 'Perhaps also listen for load here and in both handlers, remove the listeners of both, so once an image is loaded or failed to load, there are no listeners anymore.', 'comment_created': datetime.datetime(2021, 6, 29, 7, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 660357454, 'comment_body': ""Can we also do this for static avatars (e.g. done with renderStaticAvatar and not binding to the view model)? We'll need to handle both separately though I think, as we need to know in update if the avatar failed to load to add or remove the background color class."", 'comment_created': datetime.datetime(2021, 6, 29, 7, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 660631757, 'comment_body': 'don\'t you need to remove both handlers on either event? I think you can use the same handler for both events even, and set `this._avatarError` to `e.type === ""error"";`.', 'comment_created': datetime.datetime(2021, 6, 29, 13, 44, 31, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 660667682, 'comment_body': 'Oops! Sorry about that', 'comment_created': datetime.datetime(2021, 6, 29, 14, 21, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 662072830, 'comment_body': 'Can you add a closure to disposables to remove this again when dispose gets called? `adaptUIOnVisualViewportResize` has an example of this.', 'comment_created': datetime.datetime(2021, 7, 1, 8, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662073762, 'comment_body': 'You could only set the letter if `hasAvatar` is true', 'comment_created': datetime.datetime(2021, 7, 1, 8, 7, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662074480, 'comment_body': ""Wouldn't you also need to hide the img somehow? (and unhide if the binding in AvatarView changes the `src` property)"", 'comment_created': datetime.datetime(2021, 7, 1, 8, 8, 54, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662076992, 'comment_body': 'The background color class should not be removed or set here I imagine, but just always left as it was by the initial render in `renderStaticAvatar`. You would however need to add/remove a class to show or hide the image when it fails to load I think?', 'comment_created': datetime.datetime(2021, 7, 1, 8, 12, 21, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662223429, 'comment_body': 'textContent already clears the image', 'comment_created': datetime.datetime(2021, 7, 1, 11, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662228338, 'comment_body': 'Can you do `this._root.textContent = ...` here as well like you did in handleAvatarError?', 'comment_created': datetime.datetime(2021, 7, 1, 12, 3, 25, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662228558, 'comment_body': 'Can you check here now if this is indeed an image? As we might have removed it on error ...', 'comment_created': datetime.datetime(2021, 7, 1, 12, 3, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662228640, 'comment_body': 'Can you do `this._root.textContent = ...` here as well like you did in handleAvatarError?', 'comment_created': datetime.datetime(2021, 7, 1, 12, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 662230316, 'comment_body': 'actually, looks like you want to use innerText to make the <img> go away in IE11\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#differences_from_innertext', 'comment_created': datetime.datetime(2021, 7, 1, 12, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}]","[{'commit_sha': '5f1346568de7ff814799ac43b1981e0ff3417b5f', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b6ff533e8ed8604619c7cdc8ef41952fb0c9f14', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b42f7e1a361727c9fc6682efcf9d1f5f9ce0614d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcaf84e54587c77afab254124600209e93652b5d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b469c4299f0ac60f7c70c4245f416738b25183bd', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '168b1d6247ab57e2f65b8f80aaaaf0bd0d511526', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ed6cd57f3a4c7a845746fc969f47a9bfbd92ae4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03a913629f0ef44ad120a5abc3721322c7dc237e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93e77a3fcd313d360f0258201645c3c923a96c89', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c01272f4ca3a679dd6e4084d78cf343a637442', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '191613adbecfcd89e667970ebd4c28435267a83c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22
692668370,Member panel - PR 1 - Add method to fetch member,Signed-off-by: RMidhunSuresh <rmidhunsuresh@gmail.com>,True,412,https://api.github.com/repos/element-hq/hydrogen-web/pulls/412,https://github.com/element-hq/hydrogen-web/pull/412,closed,90,1,4,7,0,4,0,0,[],2021-07-19 14:41:02+00:00,2021-08-05 11:13:52+00:00,1456370.0,"16 days, 20:32:50","[{'comment_id': 675377331, 'comment_body': 'We need a `fetchOrLoadMember` so that we can  show the details of a member who has not yet been fetched (roomSummary.hasFetchedMembers = false; since memberlist has not been loaded yet).  \r\nWe could do this using the [/profile](https://matrix.org/docs/spec/client_server/r0.6.1#get-matrix-client-r0-profile-userid) endpoint.\r\n\r\nThis is only a problem when switching to another room which has not fetched the memberlist yet but does contain the member.', 'comment_created': datetime.datetime(2021, 7, 23, 8, 3, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 680781898, 'comment_body': ""Yeah, I think the best approach here would be:\r\n\r\n1. try read the member\r\n2. if found, return\r\n2. if not found, fetch it with https://matrix.org/docs/spec/client_server/latest#get-matrix-client-r0-rooms-roomid-state-eventtype-statekey\r\n3. store the member\r\n4. return\r\n\r\nThe idea being that if you've opened the member panel before, it will be available offline the next time you open it."", 'comment_created': datetime.datetime(2021, 8, 2, 8, 37, 58, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 680785738, 'comment_body': 'I\'d return null here, so the return type is always the ""same""', 'comment_created': datetime.datetime(2021, 8, 2, 8, 43, 32, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 683301469, 'comment_body': 'perhaps return null here, which is usually for ""not found""', 'comment_created': datetime.datetime(2021, 8, 5, 9, 46, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}]","[{'commit_sha': '05f05bb577a66b91c2fefe4b0049fccd64fea99e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aeb0c4d9899146376088f19705629c6fb37f130', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cfb4cfbe02a87852497ac2f214c625a7b33b5eb', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb68b4d3677658bbcd841ded2ebba1227852996e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e363d329217dff583ca8bf5a64743cbae4809759', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9a4c393edf2f7a9fca65681f06f88db4abdbeb0', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e481080b539c664a43223f142dbaa65addefdc2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22
693379471,Member Panel - PR 2 - UI,,True,417,https://api.github.com/repos/element-hq/hydrogen-web/pulls/417,https://github.com/element-hq/hydrogen-web/pull/417,closed,342,32,14,36,0,19,0,0,[],2021-07-20 11:15:50+00:00,2021-08-06 11:18:52+00:00,1468982.0,"17 days, 0:03:02","[{'comment_id': 675387941, 'comment_body': ""Avatars loaded here are blurry; they're smaller than the requested size. Probably a synapse bug."", 'comment_created': datetime.datetime(2021, 7, 23, 8, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 681001190, 'comment_body': 'why not just copy over all segments over after right-panel?', 'comment_created': datetime.datetime(2021, 8, 2, 14, 6, 21, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 681003704, 'comment_body': 'you could make this a virtual property, by implementing it as a getter', 'comment_created': datetime.datetime(2021, 8, 2, 14, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 681004576, 'comment_body': ""although not really used for anything today, it's a custom to mention the name of the property that should be checked again (here `role`)"", 'comment_created': datetime.datetime(2021, 8, 2, 14, 10, 36, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 681005977, 'comment_body': 'For user-visible strings, you can also use this.i18n here', 'comment_created': datetime.datetime(2021, 8, 2, 14, 12, 21, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 681012015, 'comment_body': 'Perhaps better to upper-case with css text-transform', 'comment_created': datetime.datetime(2021, 8, 2, 14, 19, 45, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 681021947, 'comment_body': 'So in Element Web, the avatar is sized to 2x30vh: https://github.com/matrix-org/matrix-react-sdk/blob/e78a1adb6f1af2ea425b0bae9034fb7344a4b2e8/src/components/views/right_panel/UserInfo.tsx#L1454-L1456 but the size is dynamic there depending on the right panel width. Prior to that it was 800x800, so if there is a synapse bug here, it might have been undetected so far. If you can accurately describe the problem you see with thumbnails, might be good to file an issue on https://github.com/matrix-org/synapse/issues/ and refer to that in the comment or commit for why 128 is not good enough. Also, make sure `window.devicePixelRatio` is 1 on the device/browser where you are seeing the problem, otherwise this is expected. On that subject, we should multiply the number here with `this._platform.devicePixelRatio` in any case.', 'comment_created': datetime.datetime(2021, 8, 2, 14, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 681032101, 'comment_body': 'just use ?: here rather than creating an extra object?', 'comment_created': datetime.datetime(2021, 8, 2, 14, 43, 45, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 681035453, 'comment_body': ""ah, you wouldn't want to copy the member segment over as we can't assume that the other room will have the same member..."", 'comment_created': datetime.datetime(2021, 8, 2, 14, 47, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 681035946, 'comment_body': 'will this actually just copy over the members segment but not the member segment?', 'comment_created': datetime.datetime(2021, 8, 2, 14, 48, 32, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 681529278, 'comment_body': '>why not just copy over all segments over after right-panel?\r\n\r\nGood idea! We currently only have one segment after the ""right-panel"" segment but in future we may have more.', 'comment_created': datetime.datetime(2021, 8, 3, 8, 2, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 683529570, 'comment_body': ""I don't think we want to copy the `member` segment though ... perhaps only copy until you find a segment which value isn't `true`?"", 'comment_created': datetime.datetime(2021, 8, 5, 14, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 683532742, 'comment_body': ""good start, but I meant more that we don't need to cache this even, as it's all derived from things we already have:\r\n```suggestion\r\n        return this._powerLevelsObservable.get()?.getUserLevel(this._member.userId);\r\n```"", 'comment_created': datetime.datetime(2021, 8, 5, 14, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 684080773, 'comment_body': ""We're going to address this in a follow-up PR"", 'comment_created': datetime.datetime(2021, 8, 6, 9, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 684085364, 'comment_body': 'can also remove this now', 'comment_created': datetime.datetime(2021, 8, 6, 9, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 684085693, 'comment_body': 'Oops! Fixed now.', 'comment_created': datetime.datetime(2021, 8, 6, 9, 17, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 684109984, 'comment_body': 'this can be just fwiw\r\n```suggestion\r\n        this.track(observable.subscribe(updater));\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 9, 55, 6, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 684112939, 'comment_body': ""the spec says homeservers should only support certain resolutions for each scale mode, with the tl;dr for now being that we have to choose between blurry avatars or avatars that don't respect the aspect-ratio of the design. We're going with blurry."", 'comment_created': datetime.datetime(2021, 8, 6, 9, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 684114425, 'comment_body': 'why prefer this over a switch statement?', 'comment_created': datetime.datetime(2021, 8, 6, 10, 1, 10, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}]","[{'commit_sha': '05f05bb577a66b91c2fefe4b0049fccd64fea99e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aeb0c4d9899146376088f19705629c6fb37f130', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cfb4cfbe02a87852497ac2f214c625a7b33b5eb', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb68b4d3677658bbcd841ded2ebba1227852996e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e363d329217dff583ca8bf5a64743cbae4809759', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9a4c393edf2f7a9fca65681f06f88db4abdbeb0', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e481080b539c664a43223f142dbaa65addefdc2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd4caa0b76b5093722f4d359481586ed11121dc', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4bb20575b3bc21ec3eabca078d07c2135f9124d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acdba8fc026474765e352b122a0dedd6279db5ba', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ef7c419e3b44d96da0c140fc3d641a3091c6675', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2b9c3f726e82f21ff8dbea69f86ddd3020750d3', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9224c13a707feca6e41c7d299fd3e3b126a1e5e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe6551ff3c35e9c6e3bbf780b10e6b7c84600250', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9b1068baebcca38410106b73d2bd01be1a9f97b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef17808fbdb2c70afba9fd2e8db3885188d06208', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7530b281305a351fa32274cc88011ee7148363a0', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dacbdb700c4e71fe008d48274b4119fab0bfb03', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65b1a1958ae8509273395ec9765dd8ca8a77a7ea', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4784bcc59085ccf5eb8247eb8487b95b81fa65d4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '448bf3cb3f7a765f4f9319123e19798f70149246', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16887c3c33bf5c66aba7229379b1e1795bdb01ae', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd056a9f961835da5ff769cd5d1e3e06a1e7e9e72', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ff0850979f0a00a8403769094063733166df475', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28a0a0830f6726b8b838dbb2057a74d698b8dd94', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a16c3aacab3aaaad36f0454f09415d8da7851695', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '862e8569a9c2b3713ae977fc114a34e4f9f49767', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3ea26a38ac0b6cbfa753559092c31c4cea65c5b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fea4143af9c2d5d74d6b97649339558b525ed402', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49be4e64ca9cc3006f47d86f185098c84058f460', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '974d9bf199144641579af7eb4d7d9fdef1ddd0fa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '86ddfc1e9ec4c2d3ebcf6a9001908950a562037d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbd205701c701b5f5bb9a00d9a4e9d68155f0d3b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ff55204f364c8f6e181dc548eaf212c9e364eba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bc8e6237d6c090dc569d960ec8a70da7c87d9ba8', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e8d76a95ee17623a08034b06c50733b609c0284', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22
703094027,Member Panel - PR 3 - Update powerlevels from state event,,True,432,https://api.github.com/repos/element-hq/hydrogen-web/pulls/432,https://github.com/element-hq/hydrogen-web/pull/432,closed,29,4,5,8,1,7,0,0,[],2021-08-04 08:06:49+00:00,2021-08-06 15:02:21+00:00,197732.0,"2 days, 6:55:32","[{'comment_id': 682481865, 'comment_body': ""This (e.g. updating in-memory data) should happen in afterSync, rather than writeSync, which is only about trying to persist the room response and returning data to incrementally update in-memory data with in afterSync. This is so that in-memory data structures are not altered until the storage transaction has successfully committed, so in case something goes wrong, we can safely retry without having data being out of sync between storage and in-memory. afterSync receives the return value from writeSync for this purpose. So here you'll actually want to return the new state events from the room response, and then call `_updatePowerLevels` with it in afterSync.\r\n\r\nTo find out about new state events, you'll need to look both at `roomResponse.state.events` (any state events since the last sync and the beginning of the returned timeline chunk in this sync response) and `roomResponse.timeline.events` (where state events are mixed with non-state events, and you can just filter events that have a state_key)"", 'comment_created': datetime.datetime(2021, 8, 4, 10, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 683289991, 'comment_body': 'wonder if you need `?.find` here?\r\nAlso, state events in timeline.events come after the state events in state.events, so you should first look in timeline.events and only if none found look in state.events to find the most recent power level event (as both arrays could have it)', 'comment_created': datetime.datetime(2021, 8, 5, 9, 31, 8, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 683304191, 'comment_body': 'Hmm.. I don\'t know what I did but I did get something similar to ""Sync Error: roomResponse.state is undefined"". The same for roomResponse.timeline.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 683343029, 'comment_body': ""Can't really reproduce anymore so I'll remove the `?` for now. Will keep testing though."", 'comment_created': datetime.datetime(2021, 8, 5, 10, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 684119653, 'comment_body': 'no, I actually thought you may need an extra `?` when calling find, e.g:\r\n```js\r\nconst powerLevelEvent = roomResponse.state?.events?.find(isPowerlevelEvent) ?? roomResponse.timeline?.events?.find(isPowerlevelEvent); \r\n```\r\nbut I misunderstood how `?` works and this does not seem to be needed, in node:\r\n```\r\n> let foo = {};\r\nundefined\r\n> foo.events?.bar.foo.find()\r\nundefined\r\n> \r\n```\r\nSo you initially had it correct with just a `?` after state and timeline\r\n```js\r\nconst powerLevelEvent = roomResponse.state?.events.find(isPowerlevelEvent) ?? roomResponse.timeline?.events.find(isPowerlevelEvent); \r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 10, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 684121855, 'comment_body': ""can we also check here there is a `state_key` on the event, to make sure people can't sneak non-state events in the power levels"", 'comment_created': datetime.datetime(2021, 8, 6, 10, 13, 47, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 684269188, 'comment_body': ""can you move this file one level up now that it's not exclusively used for the timeline anymore?"", 'comment_created': datetime.datetime(2021, 8, 6, 14, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}]","[{'commit_sha': 'b75760c43741c332f23553aadbf9656506d61147', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40128c7ff6436e0106e92b501ae758e9c851db53', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ddc7c06837118f7e8f63bda4e5222e869040f13', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cae7c41d3a1c32be8110916cb42465402cc968c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '187cf5cd2852026ca79d9db471c3d453a44e1dc1', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd85cf982cce263f15404db2a711eefa452b5c068', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a062f69fd7fc76f66b4f22a6ea0bc34b800f1b7', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be57352f71d4b5dec21e7dc89b3f6be04182c5d8', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22
705568429,Link to member-panel from avatar,Signed-off-by: RMidhunSuresh <rmidhunsuresh@gmail.com>,True,447,https://api.github.com/repos/element-hq/hydrogen-web/pulls/447,https://github.com/element-hq/hydrogen-web/pull/447,closed,7,1,3,2,0,0,0,0,[],2021-08-06 15:23:57+00:00,2021-08-06 15:44:58+00:00,1261.0,0:21:01,[],"[{'commit_sha': 'b97b9da14aaef14d171a9d25f5d67cc55cf65e9e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ce111c317b01888f20f9ee9f1c3d95da6eb01c8', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22
712929371,[SSO] - [PR 4] - SSO/Token login functionality,,True,453,https://api.github.com/repos/element-hq/hydrogen-web/pulls/453,https://github.com/element-hq/hydrogen-web/pull/453,closed,808,182,23,81,0,65,0,0,[],2021-08-15 12:41:17+00:00,2021-08-23 11:38:48+00:00,687451.0,"7 days, 22:57:31","[{'comment_id': 689441618, 'comment_body': 'can we scope the name of this key a bit more, something like `sso_ongoing_login_homeserver`?', 'comment_created': datetime.datetime(2021, 8, 16, 11, 7, 8, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689442139, 'comment_body': 'This creation of the sso url should be able to go in `SSOLoginHelper` class (see other comment), passing in the redirectUrl as a parameter?', 'comment_created': datetime.datetime(2021, 8, 16, 11, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689451308, 'comment_body': ""I'd suggest to split up this view model into a `StartSSOLoginViewModel` (which receives the loginOptions.sso) and `CompleteSSOLoginViewModel` (which receives the loginOptions.token and the login token) . These two things don't seem to have much in common."", 'comment_created': datetime.datetime(2021, 8, 16, 11, 23, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689456100, 'comment_body': 'so this would actually be `loginOptions.token(this._loginToken)`', 'comment_created': datetime.datetime(2021, 8, 16, 11, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689458989, 'comment_body': ""I think here we should rather put a class to help create the sso redirect url. SSO piggy-backs on token login, and the only specific part is redirecting to the homeserver url. This should be handled by an `SSOLoginHelper` class (rather than `SSOLoginMethod` as it wouldn't have the `login` method given CompleteSSOLoginViewModel would use the token login method.), and `SSOLoginHelper` is also where we can add the support of the multiple SSO providers."", 'comment_created': datetime.datetime(2021, 8, 16, 11, 36, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689459862, 'comment_body': 'Why did you move this to the view model? Ideally, validation is done at the lowest possible level, which is the session container here.', 'comment_created': datetime.datetime(2021, 8, 16, 11, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689473331, 'comment_body': ""good point, not sure why we're doing `observe().get()` rather than just `get()` above ..."", 'comment_created': datetime.datetime(2021, 8, 16, 11, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689483553, 'comment_body': ""I'd suggest `getLoginFlows` here"", 'comment_created': datetime.datetime(2021, 8, 16, 12, 15, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689490479, 'comment_body': 'we can normalize the homeserver here (and later on we can also add .well-known lookup here)', 'comment_created': datetime.datetime(2021, 8, 16, 12, 25, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689501987, 'comment_body': ""wouldn't location.search start with a `?` rather than a `/`? just to test it in the way it is used ..."", 'comment_created': datetime.datetime(2021, 8, 16, 12, 42, 28, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689504847, 'comment_body': 'probably best to check the correct login method (which here will be token rather than sso as mentioned below) before creating the SessionLoadViewModel or the UI will just be stuck at a white screen.', 'comment_created': datetime.datetime(2021, 8, 16, 12, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689568468, 'comment_body': ""It's probably worth it to extract the homeserver field from the password login view (model) and put it in the login view (model). Some servers won't support password login at all, but you still need to be able to change the homeserver."", 'comment_created': datetime.datetime(2021, 8, 16, 14, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689631942, 'comment_body': 'can we make this loginToken, to be more explicit, and also to make the typescript conversion easier.', 'comment_created': datetime.datetime(2021, 8, 16, 15, 20, 48, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689788676, 'comment_body': 'no dynamic properties, please. Ideally declare properties in the constructor, or in a method called by the constructor, but not conditionally like here.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 689789269, 'comment_body': ""Here, you'd actually have two members: one for StartSSOLoginViewModel, and one for CompleteSSOLoginViewModel"", 'comment_created': datetime.datetime(2021, 8, 16, 19, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691884358, 'comment_body': '`isBusy` is not a property on this VM', 'comment_created': datetime.datetime(2021, 8, 19, 8, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691894146, 'comment_body': 'We should probably already make `loadLabel` return something here while awaiting... perhaps a constructor argument called `initialLabel` which we can then set to `Finishing your SSO login...`.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691899960, 'comment_body': ""can't we initialize this to the default homeserver rather than have a separate field?"", 'comment_created': datetime.datetime(2021, 8, 19, 8, 29, 29, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691902418, 'comment_body': 'call this something more specific like `_loadServerOptions` given it is not only used after the object is created?', 'comment_created': datetime.datetime(2021, 8, 19, 8, 32, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691902794, 'comment_body': ""Inline this method as it doesn't really do anything and is only used once?"", 'comment_created': datetime.datetime(2021, 8, 19, 8, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691912072, 'comment_body': ""I'd prefer to keep this logic out of the view and rather add a `showHomeserver` field to the viewmodel"", 'comment_created': datetime.datetime(2021, 8, 19, 8, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691918422, 'comment_body': '`createSSORedirectURL` and call `redirectURL` `returnURL` instead (even though the url param is called the former)?', 'comment_created': datetime.datetime(2021, 8, 19, 8, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691925516, 'comment_body': 'This is already checked by the `LoginViewModel`?', 'comment_created': datetime.datetime(2021, 8, 19, 9, 2, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691943451, 'comment_body': '_ for private', 'comment_created': datetime.datetime(2021, 8, 19, 9, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691952034, 'comment_body': ""you can use `this._sso.homeServer` here so you don't need to pass in the homeserver separately."", 'comment_created': datetime.datetime(2021, 8, 19, 9, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691953899, 'comment_body': ""I personally wouldn't override childOptions here and just pass in the login option need, like so:\r\n```js\r\nthis._passwordLoginViewModel = this.track(new PasswordLoginViewModel(this.childOptions({\r\n  createPasswordLogin: this._loginOptions.password})));\r\n```\r\nSame for SSO below"", 'comment_created': datetime.datetime(2021, 8, 19, 9, 41, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691954639, 'comment_body': 'As said above, I think the code could be simpler without overriding childOptions here, with the added benefit of just passing everything needed to the child view models.', 'comment_created': datetime.datetime(2021, 8, 19, 9, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691958881, 'comment_body': 'Perhaps the go back button should also go into the login view (model), otherwise it looks a bit weird with the sso button below ... perhaps as a chevron on the top left corner?', 'comment_created': datetime.datetime(2021, 8, 19, 9, 48, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691978502, 'comment_body': 'Perhaps you can only construct this element in the if binding below where it is used?', 'comment_created': datetime.datetime(2021, 8, 19, 10, 15, 26, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691991316, 'comment_body': 'so, as discussed, I think it would be worthwhile to move the SessionLoadViewModel up to avoid too many nested view models and code duplication.\r\n\r\nI would pass to the child view models a\r\n`attemptLogin(method: LoginMethod): Promise<LoginFailure>` callback that they can await and get a LoginFailure back. This way:\r\n - child view models can show login errors on their own UI as they see fit\r\n - child views can still disable their input while attempting the login\r\n - child views don\'t have to deal with the SessionLoadViewModel\r\n - the login view model can also observe the progress of the login and for example disable the homeserver field\r\n\r\nSo, concretely, once the child view model calls `attemptLogin`, the login view model passes it to startWithLogin on the session container it already created, and wait for the the loadStatus to go from `Login` to something else. If it\'s a login failure, return that, otherwise return null (meaning the login succeeded). Furthermore, if the login succeeded, it should create a SessionLoadViewModel with the session container passed in. SessionLoadViewModel can now be just about loading the session, and we don\'t handle the Login(Failure) in there anymore.\r\nOnce login succeeded, and we start loading the session, the login options and homeserver field should also be hidden, with only the session load status visible.\r\n\r\nNote that `StartSSOLoginViewModel` won\'t need `attemptLogin`, but `CompleteSSOLoginViewModel` will. The latter will now also also disappear once the token login succeeded, preventing both the ""Finishing your sso login"" and the label from the SessionLoadViewModel being shown at the same time.', 'comment_created': datetime.datetime(2021, 8, 19, 10, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 691996873, 'comment_body': 'actually feel free to pass in just the whole loginOptions object (and the attemptLogin calback as described below)', 'comment_created': datetime.datetime(2021, 8, 19, 10, 43, 51, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692878515, 'comment_body': 'This should probably be a button so that we can disable it during a login.', 'comment_created': datetime.datetime(2021, 8, 20, 11, 38, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 692880372, 'comment_body': 'It might be better if the `LoginViewModel` indicates to all child view(models) that a login is being attempted. This would make it easy, for example, to disable the sso login button when a password login is being attempted.', 'comment_created': datetime.datetime(2021, 8, 20, 11, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 692882391, 'comment_body': 'Is it okay to dispose the viewmodels when said viewmodels are awaiting on this method?', 'comment_created': datetime.datetime(2021, 8, 20, 11, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 692882775, 'comment_body': 'I think we can also get rid of this getter and just use `vm.homeserver` in the view?', 'comment_created': datetime.datetime(2021, 8, 20, 11, 47, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692889289, 'comment_body': 'this.i18n`` please for future-proofness', 'comment_created': datetime.datetime(2021, 8, 20, 11, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692889562, 'comment_body': ""can we do this internally in the session container when calling `startWith...`? Then we also don't need to inject the sessionContainer here."", 'comment_created': datetime.datetime(2021, 8, 20, 11, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692896116, 'comment_body': ""you don't need the if here, disposeTracked ignores calls with null or undefined"", 'comment_created': datetime.datetime(2021, 8, 20, 12, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692898926, 'comment_body': ""Don't you need to set _isBusy to false here first? This matters when the loading fails for some reason, that you don't want to keep everything disabled."", 'comment_created': datetime.datetime(2021, 8, 20, 12, 15, 50, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692905756, 'comment_body': ""Yeah, perhaps we can add a setBusy to PasswordLoginViewModel and StartSSOLoginViewModel called by the LoginViewModel? That way, we also don't need to toggle busy while calling attemptLogin."", 'comment_created': datetime.datetime(2021, 8, 20, 12, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692906610, 'comment_body': 'Can we go back to the previous text here?', 'comment_created': datetime.datetime(2021, 8, 20, 12, 29, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692907774, 'comment_body': 'as said elsewhere, can make this private and call this from startWithLogin/ExistingSession?', 'comment_created': datetime.datetime(2021, 8, 20, 12, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692913176, 'comment_body': 'also, no dash here?', 'comment_created': datetime.datetime(2021, 8, 20, 12, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692919059, 'comment_body': ""I would the view (model) for every login method have it's own errors shown:\r\n![image](https://user-images.githubusercontent.com/274386/130235571-3c4f217b-9b13-4e11-97bc-848fb9bef30b.png)\r\n\r\nSo the error is closer to the invalid input"", 'comment_created': datetime.datetime(2021, 8, 20, 12, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692920768, 'comment_body': ""It would probably be a feature to be able to cancel login like this, but SessionContainer.dispose currently doesn't abort any login requests in progress, so it would probably throw if you go back and a long running /login request finishes. So yeah, fine to disable for now."", 'comment_created': datetime.datetime(2021, 8, 20, 12, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692921255, 'comment_body': 'You can add the error class for redness and boldness:\r\n```suggestion\r\n            t.if(vm => vm.errorMessage, (t, vm) => t.p({className: ""LoginView_error error""}, vm.i18n(vm.errorMessage))),\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 12, 52, 36, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692921731, 'comment_body': ""Can we have a spinner with a message while it's querying the login methods on the homeserver?"", 'comment_created': datetime.datetime(2021, 8, 20, 12, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692922238, 'comment_body': 'Perhaps put this at the top as well, before the homeserver field?', 'comment_created': datetime.datetime(2021, 8, 20, 12, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692924808, 'comment_body': 'feel free to remove this comment and convert the others above to just use get without observe', 'comment_created': datetime.datetime(2021, 8, 20, 12, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692925510, 'comment_body': 'can we perhaps have a comment here that the statuses related to login are handled in the login view model', 'comment_created': datetime.datetime(2021, 8, 20, 12, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692928492, 'comment_body': ""You don't need to inject the homeserver separately I think. When you create the password login option, you can get the homeserver from there."", 'comment_created': datetime.datetime(2021, 8, 20, 13, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692929517, 'comment_body': 'emitChange after this?', 'comment_created': datetime.datetime(2021, 8, 20, 13, 4, 35, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692932054, 'comment_body': ""I think if this is done implicitly by startWithLogin as suggested elsewhere, you don't need to inject the sessionContainer here anymore."", 'comment_created': datetime.datetime(2021, 8, 20, 13, 8, 13, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692933481, 'comment_body': 'I think we discussed making this just the loginToken rather than an object before. Any reason to keep it this way?', 'comment_created': datetime.datetime(2021, 8, 20, 13, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 692937276, 'comment_body': ""Hmm, yeah, it's not ideal but as the callee should not do anything if there is no error, I think it's probably fine in practice. I also don't see a better way."", 'comment_created': datetime.datetime(2021, 8, 20, 13, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 693727865, 'comment_body': 'Ah, heh, I just meant two words (login token) :)', 'comment_created': datetime.datetime(2021, 8, 23, 7, 31, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 693752479, 'comment_body': 'Should we allow LoadStatus.Error here as well?', 'comment_created': datetime.datetime(2021, 8, 23, 8, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 693757396, 'comment_body': ""Why not put these two lines inside the method `_toggleBusy`? Also, to me, `toggle` rather than `set` implies it wouldn't take an argument but rather just invert the current state."", 'comment_created': datetime.datetime(2021, 8, 23, 8, 15, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 693758380, 'comment_body': ""Curious why you clear it again after emitting? If any other emit in the viewmodel triggers a binding update, the error would just disappear at an unrelated timed. I'd expect to clear it only when you try to login again ..."", 'comment_created': datetime.datetime(2021, 8, 23, 8, 16, 29, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 693786796, 'comment_body': 'This is already present on line 633 in this same file.', 'comment_created': datetime.datetime(2021, 8, 23, 8, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 693802397, 'comment_body': 'you could just do `this.navigation.push(""session"")` here fwiw.', 'comment_created': datetime.datetime(2021, 8, 23, 9, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 693825443, 'comment_body': 'yes 👍', 'comment_created': datetime.datetime(2021, 8, 23, 9, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 693842172, 'comment_body': 'Yeah that wasn\'t very smart of me 🙂\r\n\r\nFixed for LoginViewModel and PasswordLoginViewModel but for CompleteSSOLoginViewModel I\'ve removed `this._errorMessage = """"` since there\'s no UI currently for retrying a failed login using loginToken.', 'comment_created': datetime.datetime(2021, 8, 23, 10, 12, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 693884736, 'comment_body': 'Hmm, this should probably have a try catch around it catching any error and calling showError', 'comment_created': datetime.datetime(2021, 8, 23, 11, 22, 46, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 693887085, 'comment_body': 'could also do just `this.navigation.push(""session"")` here', 'comment_created': datetime.datetime(2021, 8, 23, 11, 26, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}]","[{'commit_sha': 'e0fcec910220bfb9965b1f0c1ae6e91a93f414f9', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20765d96885948abe9f163ec4a962edeb46ab1e9', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a53e29767f8d69a03c68dcd7128d77c883400dd5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acfe3f30db265af82cd7092ae6f5eeae2ac76b80', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72fb7f679b31c131fd535d3889312ffc2c7ba5f2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46b7d9a3737d184767c7ab984a1d478dc4e040ab', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '730a6b2d0aaf1bf5836e8a7d9bf9556635f8a8d3', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9651817c5bef3699bfb4cd6dad6e36f7b764aa3c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3946fcdf37b2470871ffdcc569f34ececa71527', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18e1c305f5da4804ceac7008370a45a986729cec', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19664e54be7dddadf2516c32fcaea48a60b258b5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2d2291d8d3ac7c093ae110b270ee8217463d417', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3efadcb72cf6920a940ef97e743e7148408d1a76', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '987a83b4cf4d28276e2a803a6df6d82f57848a45', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74f5e3048716acf6ae55e878d84bc4b29cafaa90', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bed01851860e5ea0bce1253eff2fc732c91210b8', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2613740b8c4beb21eac618c7765d711662201d2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d71717d8d2d3a76f2fc7345bc38da07f7223f9', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b87887a4fa885f4f848807cc082191f718a978d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2103adfc03d3405e4d37f2b64ff9214bd64cd1be', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c953e361d08ccebb41abe777cca69082addbd61', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0af27fc8dd963a343bb6925a4c77d08274bf4ba4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce5fdd465c83ebf70eacdc2ad267e7e53b7dc481', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c82af5a0a373c223235c42ae6cf3c10615ed62d5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cabffd5e3fde7de02a9a47ba4d04566ea4a7a9fd', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8f0361157a255b0525714b64f7d0dd3aedaddc2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93720f602556c6792c2ddc302f3698cc618a7298', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c6c4c7dfdce14c690e8cb9fe1118a9d3eebd952', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e424293293692e781ec724b211dcb9ec7dd0cc64', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daeeaa2869bbfc3b3c084c611fb58fd61746db79', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66f28b90fce04804cb57769be576b44c43844056', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fa955e594b2672f0eb45ad78a64572cd6d50ac4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '683d2c21eb7d4971050dc18314cc3e43dd7f659b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '474a4bb19a04b1403fc05557c477d5093c587dc9', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98f8f04c74b2eb5b25a53bc70cec96fab1a67391', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8b0ef052f0dcdcc84bcba470be60a15208a4822', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b72b64a2ea0da38cb51c81ccac367184329fb6c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4e7dc3b5aad7becaf013189f4e59fd47d2e2c8f', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b9ec5516a004070b5f23dfb0be715cb030f8128', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db3fd3d1aeccf273eb963b013c45aaa5e73a78cc', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2c94b0d3eb68a36db7210bab3fd32e77ca9f4ba', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83f4095d880ffd64cda24ecc07793c2a06fbef13', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13cb8979ace2637d7bf44fc13f21d4181c9de104', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10a6aca477505bf871737d7e13f64f394415b376', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17f1d6b16a6ed217b496a1a228d09c3a84b5f7a4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '738603e8909589a15232d32ef0759ed309a0c54b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '068fba3616c4f9937632bc9c95f6b7fa50442785', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daf7af17b10200b5651682ad0a383737c2d9e78f', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d842c71743078cd49f2705edab716b8862e8c25', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed278e3e5a4e9d038a01720231232ff0d872057c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3af2ae3bddee60b53b07718a68f25be59d1fbbcf', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab405fc30211b525ae39204a30419eb58c1105f', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80ea48e8a19f2633418a2bb338eba6d5c05083fc', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdc860eb798fdae49bd08c0e6983e6aa31791bea', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dadeb7f3e53a850bd806f3058e7729f0d9501f7e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2468bc3e9fa2d2e1ae5444544e86e996acd0db09', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9482998b15c0533abb636541a9e0f49ba0811c83', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c650b358319e38d5f9ce6021f6fd44ee13297af7', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ca732341a0e2756d0c75e2fb1ad7b9863065df6', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e7a9e224c0cd3e0925faecbc4487796ae843863', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '784b06d5009e368bdc6def2a3051fb7a275c041d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff8417dfe250c5cc0914c1ef1044d14def777ea4', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '355468b6372d662f04beeb5e6a1c8cbfbd5ab351', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2677a64006c52dab0a18efe110d73274a5547a5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55da58893b86f7771e494bf8480d0d32aa6fa654', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82067ca6f57f568aaff9f450cbe5ca650cc17ba5', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5985cba2a15106ed6d7e3a9130a8f44ce606229', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0630452571c507b8215d8e059fcdb4013f809aa2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94ba93acb5272cee7c4bb94e6c9653c4b2e5055a', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e6139d5e3e453261d9ece6b4162a96281f1942f', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd47e126370683cda318cabc49d209d6a2abbb842', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04806a1425e67847d38402a7e36610467ef612a6', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84fd2861402c5dbfe3caf0725ba8175ac9dbd64c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9fbafb909fd64b81cbe2f4a26227c18d20376f1', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecfdc314d5a8b9b0c4bee1c1538176c32414ad3b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69478b81b2c45689d7e16d794801d32ddace6e64', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e80667c93547eaa944991448ca4e232c21214c64', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0db7e03441edf851f977329ebc3a1be6e3c4f1b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc169af10f0b50f6de02892eb87140c7d889de2a', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9319c7c3880abae669ffd6e657d2ea9a09891db', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef4db4ababb9db97c7d06ebbf3f10cb835a238e1', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22
634485450,Render URLs as clickable links in timeline,Implements feature request #246.,True,345,https://api.github.com/repos/element-hq/hydrogen-web/pulls/345,https://github.com/element-hq/hydrogen-web/pull/345,closed,280,20,5,35,0,16,0,0,[],2021-05-08 13:59:34+00:00,2021-05-12 15:40:47+00:00,351673.0,"4 days, 1:41:13","[{'comment_id': 629313117, 'comment_body': 'I like the concept of this class, but the name is a bit implementation-detail-y. What about `MessageBody` or `MessageBodyBuilder`?\r\n\r\nAlso, can we put this and the linkifier in `src/domain/session/room/timeline` as it is specific to the timeline?', 'comment_created': datetime.datetime(2021, 5, 10, 12, 22, 46, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 629360583, 'comment_body': ""This doesn't seem related to linkifying, I wonder if we should move the newline handling to `MessageObjectFormat`. So for every line `MessageObjectFormat` detects, it calls the linkifier with that line to split it up. Perhaps the `Linkifier` class can even be a `linkify` function given it has so little state, where apart from the text you pass in a `callback(isLink, text)` which `MessageObjectFormat` then translates into `insertText` (if `isLink` is `false`) or `insertLink` calls internally. Wdyt?"", 'comment_created': datetime.datetime(2021, 5, 10, 13, 30, 51, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 629361863, 'comment_body': 'I think the linkifier won\'t work if body is undefined here, so perhaps we can fall back to an empty string\r\n```suggestion\r\n        let body = content?.body || """";\r\n```', 'comment_created': datetime.datetime(2021, 5, 10, 13, 32, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 629362571, 'comment_body': ""I'd expect a format to be a format identifier like `html` or something ... not the actual message content. What about just calling this `body`?"", 'comment_created': datetime.datetime(2021, 5, 10, 13, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 629363843, 'comment_body': ""perhaps don't create an extra object here, but just pass `m` and `t` as separate arguments? Otherwise looks great!"", 'comment_created': datetime.datetime(2021, 5, 10, 13, 35, 10, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 629364724, 'comment_body': ""this object can probably just exist as a variable at the module level so it doesn't get recreated every time `_formatFunction` is called."", 'comment_created': datetime.datetime(2021, 5, 10, 13, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 630075919, 'comment_body': 'please use brackets for all block statement (this should really be in a style guide, sorry)', 'comment_created': datetime.datetime(2021, 5, 11, 11, 19, 46, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 630077384, 'comment_body': 'can we split up the tests for links and put them in `linkify.js`?', 'comment_created': datetime.datetime(2021, 5, 11, 11, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 630078678, 'comment_body': ""define this at module scope so its doesn't get recreated on every invocation?"", 'comment_created': datetime.datetime(2021, 5, 11, 11, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 630084340, 'comment_body': 'Can we have some comments explaining the different parts of the regex?\r\nI\'m also somewhat confused by:\r\n - the `#` in `[a-zA-Z0-9:.\\[\\]#-]`, hosts can\'t have a `#` in them AFAIK?\r\n - `(?:\\/[^\\s]*[^\\s.,?!]|[^\\s\\u{80}-\\u{10ffff}.,?!])`, `\\/[^\\s]` selects /* until space, `[^\\s.,?!]` selects anything but whitespace and punctuation, and why do we need `[^\\s\\u{80}-\\u{10ffff}.,?!]` again (something related to unicode but forgot why ""not whitespace"" doesn\'t cut it)? Also, what is the operator precedence of `|` here? E.g. is the left operand `[^\\s]*[^\\s.,?!]` or `[^\\s.,?!]`?', 'comment_created': datetime.datetime(2021, 5, 11, 11, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 630381929, 'comment_body': '> why do we need `[^\\s\\u{80}-\\u{10ffff}.,?!]`\r\n\r\nIf path/fragment is absent, URL must end with ASCII character.\r\ni.e https://matrix.org🔥 -> 🔥 is not part of URL, https://matrix.org/🔥 -> 🔥 is part of URL.\r\nAFAIK `80-10ffff` is the non-ASCII unicode range.\r\n>Also, what is the operator precedence of | here? E.g. is the left operand `[^\\s]*[^\\s.,?!]` or `[^\\s.,?!]`?\r\n\r\nThe left operand is  `[^\\s]*[^\\s.,?!]`.\r\n', 'comment_created': datetime.datetime(2021, 5, 11, 17, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MidhunSureshR', 'type': 'User'}, {'comment_id': 630865855, 'comment_body': 'endASCII is basically checking the last character of the host part, right? It should have the same constraints as `host`, and additionally not accept any punctuation. This is true whether there is a path/fragment or not. So could we instead simplify to this?:\r\n```js\r\nconst scheme = ""(?:https|http|ftp):\\\\/\\\\/"";\r\nconst noSpaceNorPunctuation = ""[^\\\\s.,?!]"";\r\nconst hostCharacter = ""[a-zA-Z0-9:.\\\\[\\\\]-]"";\r\n// using non-consuming group here to combine two criteria for the last character\r\nconst host = `${hostCharacter}*(?=${hostCharacter})${noSpaceNorPunctuation}`;\r\n// use sub groups so we accept just / or #, but if anything comes after it should not end with punctuation\r\nconst pathOrFragment = `(?:[\\\\/#](?:[^\\\\s]*${noSpaceNorPunctuation})?)`;\r\n// path or fragment is optional\r\nconst urlRegex = `${scheme}${host}${pathOrFragment}?`;\r\n```\r\n\r\nThis way the last character of the host won\'t accept any characters not accepted by DNS, like `https://matrix.org<`', 'comment_created': datetime.datetime(2021, 5, 12, 9, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 630868203, 'comment_body': 'Thanks for splitting it up, much more readable like this!', 'comment_created': datetime.datetime(2021, 5, 12, 9, 13, 8, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 630869318, 'comment_body': ""perhaps assign it to a variable so it's clear what is happening? Same below.\r\n```suggestion\r\n        const precedingText = text.slice(curr, match.index);\r\n        callback(precedingText, false);\r\n```"", 'comment_created': datetime.datetime(2021, 5, 12, 9, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 630872665, 'comment_body': 'Great to have so many tests? Can we have a test for `https://matrix.org<` as well which seems to be accepted with the current regex (see below)?', 'comment_created': datetime.datetime(2021, 5, 12, 9, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}, {'comment_id': 630876438, 'comment_body': 'flatMap is not supported by IE11, the legacy build _should_ include a polyfill for it from corejs and put it in the legacy bundle. We should double check this is actually happening before merging.', 'comment_created': datetime.datetime(2021, 5, 12, 9, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}]","[{'commit_sha': '3c46a07a1e4bc04acc752379b237852dc0be9180', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32fd1eb318c81b5b0b5c1e68a1f2a929ebb0d20c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ca0d93a01d8486f08f301bb67bcd163f26a78a6', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f883d049cb85dd5955d7d49d6e918f382454408', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbeb0a5764debbfb4b4ae4714b9afd0690a9437a', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06a6cae4afd6dce5b0517b0cc9ce6e3c9ca92593', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dca649dfd41d48b1126dfb48e89cdeb80055ae44', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '787d438a746a313da65150d28437040d20c1c100', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55f2d79d077a83eeecb0bc34ab16cc222d5df57d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc3b391aa929eee784b4827d75952df5890fdc26', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17be7c4f4d03f48548c0108a509a470448825a3e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03b971d8987616f529576bbb792542bb3021f844', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '577883a1d4f5fdbb40f20885dd460caeab8594e1', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '070bc961868f1005ccabd14dc40d3db39c9e9b58', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3beaf88a8b9d51cd9cd4c91eea360d8db924d541', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '051771397cbab7b78f2b8fdcc6b052dec1db9c64', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4a143659ce5d470bfb0aab816d4dc99c23e8d74', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86f4b6186a1d15d3cc9de2ecd6fdc68866d3104d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3830a95af22bbdc2b37ffc4dc52ddb36fbaa9a6e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbe76e973e9efd668b649c4cca271ad083ac622d', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03208b88d5d190ee55c45e3f63080b76d545c527', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7be9f939090da7cec5463185da831ba506f8de76', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e20810b0cb34875ea354326a18882fd77561ba04', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '027f6020e76b1de94963082c58d50d9e2c6c71b2', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f0362802a9692e6aac975b971d13852b85c2573', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31740f4ec613e81005f6a95e800145d827d56353', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d7cef491d1202c3d535ca24d92e746bee50d99', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef15968a3d52ec3f508e7302a8b58ed0bf785749', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b521797f4d3e238656c18df7c5842be3d5bd6c78', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d898bdf479098190b0551300c0733e9f811961c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55b7c55efe5cf3bbf4b7889842ca304bc6064570', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e657fbbbd14739d46b25db25140d9563acc105e', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb74656348973d50c5ea76857662496c32a58ce7', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00bcdbab37bbc0b3d9861e94a6239d3ccaf71cba', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '851e8d34a47c9e64f3d3e6f3e9a376c83bffd97b', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22
645969521,Add jsdoc comments for clickable link code + Minor Changes,,True,356,https://api.github.com/repos/element-hq/hydrogen-web/pulls/356,https://github.com/element-hq/hydrogen-web/pull/356,closed,17,1,3,4,0,0,0,0,[],2021-05-17 15:35:24+00:00,2021-05-18 13:30:23+00:00,78899.0,21:54:59,[],"[{'commit_sha': 'd671bcec31a0ae6090063fcf7bbcd2f4e0b17bee', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11d551f8a3029084bd449f35d9bcd71c31da1704', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d63799c9b00b45e0876eb7bbcc82e621436a787', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f58b6001a91dff0632942c172eb6463bfc79da', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22
656220348,Replace ellipsis character in RoomView header with svg icon,,True,369,https://api.github.com/repos/element-hq/hydrogen-web/pulls/369,https://github.com/element-hq/hydrogen-web/pull/369,closed,7,4,3,4,0,1,0,0,[],2021-05-28 10:20:41+00:00,2021-05-31 08:05:30+00:00,251089.0,"2 days, 21:44:49","[{'comment_id': 641616446, 'comment_body': 'Could you add an `aria-label` with\r\n```\r\nvm.i18`Room options`\r\n```\r\nas well?', 'comment_created': datetime.datetime(2021, 5, 28, 14, 57, 44, tzinfo=datetime.timezone.utc), 'commenter': 'bwindels', 'type': 'User'}]","[{'commit_sha': '3f99b7247cd8161d84f9364a53bc73c3fe899bee', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba11cdd83fc1ddde680c6bee6d879bcfea5f401c', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc898f8c7e43a4db9667533c573ff6e7ae890b0a', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '849a02cec253716c023e28551870cfb00cd88cf9', 'committer_username': 'MidhunSureshR', 'committer_name': 'R Midhun Suresh', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 20, 11, 35, 51, tzinfo=datetime.timezone.utc)}]",R Midhun Suresh,7010307,,User,,27,,7,22

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
285832821,hydrogen-web,element-hq/hydrogen-web,TypeScript,121,626,23,34,5550,306,488,21,"[{'id': 2027511870, 'number': 1183, 'closed': datetime.datetime(2024, 8, 20, 12, 10, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 20, 12, 9, 21, tzinfo=datetime.timezone.utc), 'time_taken': 88.0, 'time_delta': '0:01:28', 'additions': 9, 'deletions': 1, 'state': 'closed'}, {'id': 2027483411, 'number': 1182, 'closed': datetime.datetime(2024, 8, 20, 11, 53, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 20, 11, 53, 10, tzinfo=datetime.timezone.utc), 'time_taken': 27.0, 'time_delta': '0:00:27', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 2027477075, 'number': 1181, 'closed': datetime.datetime(2024, 8, 20, 11, 50, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 20, 11, 49, 28, tzinfo=datetime.timezone.utc), 'time_taken': 57.0, 'time_delta': '0:00:57', 'additions': 18, 'deletions': 3, 'state': 'closed'}, {'id': 2027304520, 'number': 1180, 'closed': datetime.datetime(2024, 8, 20, 10, 11, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 20, 10, 11, 15, tzinfo=datetime.timezone.utc), 'time_taken': 17.0, 'time_delta': '0:00:17', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 2025664814, 'number': 1179, 'closed': datetime.datetime(2024, 8, 19, 14, 1, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 19, 13, 48, 52, tzinfo=datetime.timezone.utc), 'time_taken': 780.0, 'time_delta': '0:13:00', 'additions': 23, 'deletions': 6, 'state': 'closed'}, {'id': 2025546130, 'number': 1177, 'closed': datetime.datetime(2024, 8, 19, 13, 28, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 19, 12, 50, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2246.0, 'time_delta': '0:37:26', 'additions': 286, 'deletions': 81, 'state': 'closed'}, {'id': 2022689406, 'number': 1174, 'closed': datetime.datetime(2024, 8, 16, 11, 2, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 16, 10, 8, 49, tzinfo=datetime.timezone.utc), 'time_taken': 3211.0, 'time_delta': '0:53:31', 'additions': 540, 'deletions': 283, 'state': 'closed'}, {'id': 1926701272, 'number': 1166, 'closed': datetime.datetime(2024, 6, 18, 15, 2, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 18, 15, 2, 48, tzinfo=datetime.timezone.utc), 'time_taken': 11.0, 'time_delta': '0:00:11', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1926650745, 'number': 1165, 'closed': datetime.datetime(2024, 6, 18, 14, 39, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 18, 14, 38, tzinfo=datetime.timezone.utc), 'time_taken': 78.0, 'time_delta': '0:01:18', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1925974687, 'number': 1164, 'closed': datetime.datetime(2024, 6, 18, 8, 47, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 18, 8, 29, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1076.0, 'time_delta': '0:17:56', 'additions': 23, 'deletions': 20, 'state': 'closed'}, {'id': 1592370985, 'number': 1152, 'closed': datetime.datetime(2023, 11, 8, 11, 0, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 8, 10, 59, 32, tzinfo=datetime.timezone.utc), 'time_taken': 87.0, 'time_delta': '0:01:27', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 1546875825, 'number': 1144, 'closed': datetime.datetime(2023, 10, 8, 17, 57, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 8, 17, 55, 22, tzinfo=datetime.timezone.utc), 'time_taken': 153.0, 'time_delta': '0:02:33', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 1546863771, 'number': 1143, 'closed': datetime.datetime(2023, 10, 8, 17, 47, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 8, 17, 42, 21, tzinfo=datetime.timezone.utc), 'time_taken': 328.0, 'time_delta': '0:05:28', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1484647486, 'number': 1137, 'closed': datetime.datetime(2023, 8, 22, 12, 14, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 22, 12, 12, 35, tzinfo=datetime.timezone.utc), 'time_taken': 122.0, 'time_delta': '0:02:02', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 1484554560, 'number': 1136, 'closed': datetime.datetime(2023, 8, 22, 12, 5, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 22, 11, 8, 36, tzinfo=datetime.timezone.utc), 'time_taken': 3405.0, 'time_delta': '0:56:45', 'additions': 28, 'deletions': 8, 'state': 'closed'}, {'id': 1482723106, 'number': 1135, 'closed': datetime.datetime(2023, 9, 4, 7, 23, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 21, 11, 44, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1193922.0, 'time_delta': '13 days, 19:38:42', 'additions': 207, 'deletions': 7, 'state': 'closed'}, {'id': 1480893275, 'number': 1134, 'closed': datetime.datetime(2023, 9, 4, 7, 22, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 18, 17, 45, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1431413.0, 'time_delta': '16 days, 13:36:53', 'additions': 165, 'deletions': 25, 'state': 'closed'}, {'id': 1469716221, 'number': 1132, 'closed': datetime.datetime(2023, 8, 10, 6, 14, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 6, 12, 49, tzinfo=datetime.timezone.utc), 'time_taken': 127.0, 'time_delta': '0:02:07', 'additions': 12, 'deletions': 1, 'state': 'closed'}, {'id': 1469707335, 'number': 1131, 'closed': datetime.datetime(2023, 8, 10, 6, 5, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 6, 3, 39, tzinfo=datetime.timezone.utc), 'time_taken': 106.0, 'time_delta': '0:01:46', 'additions': 23, 'deletions': 2, 'state': 'closed'}, {'id': 1442892499, 'number': 1128, 'closed': datetime.datetime(2023, 7, 20, 13, 32, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 20, 13, 32, 3, tzinfo=datetime.timezone.utc), 'time_taken': 34.0, 'time_delta': '0:00:34', 'additions': 12, 'deletions': 1, 'state': 'closed'}, {'id': 1442597609, 'number': 1127, 'closed': datetime.datetime(2023, 7, 20, 12, 31, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 20, 10, 42, 4, tzinfo=datetime.timezone.utc), 'time_taken': 6552.0, 'time_delta': '1:49:12', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1400987095, 'number': 1116, 'closed': datetime.datetime(2023, 9, 4, 7, 20, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 21, 5, 58, 4, tzinfo=datetime.timezone.utc), 'time_taken': 6484927.0, 'time_delta': '75 days, 1:22:07', 'additions': 0, 'deletions': 11, 'state': 'closed'}, {'id': 1378361971, 'number': 1112, 'closed': datetime.datetime(2023, 6, 20, 13, 44, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 6, 23, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1322437.0, 'time_delta': '15 days, 7:20:37', 'additions': 1019, 'deletions': 140, 'state': 'closed'}, {'id': 1357533279, 'number': 1096, 'closed': None, 'created': datetime.datetime(2023, 5, 19, 18, 48, 48, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 230, 'deletions': 53, 'state': 'open'}, {'id': 1352152257, 'number': 1095, 'closed': datetime.datetime(2023, 6, 11, 11, 38, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 16, 9, 27, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2254217.0, 'time_delta': '26 days, 2:10:17', 'additions': 1031, 'deletions': 206, 'state': 'closed'}, {'id': 1347107252, 'number': 1093, 'closed': datetime.datetime(2023, 5, 11, 13, 29, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 11, 13, 29, 1, tzinfo=datetime.timezone.utc), 'time_taken': 29.0, 'time_delta': '0:00:29', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1347038256, 'number': 1092, 'closed': datetime.datetime(2023, 5, 11, 12, 50, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 11, 12, 46, 58, tzinfo=datetime.timezone.utc), 'time_taken': 239.0, 'time_delta': '0:03:59', 'additions': 29, 'deletions': 0, 'state': 'closed'}, {'id': 1339740208, 'number': 1085, 'closed': datetime.datetime(2023, 5, 5, 11, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 5, 11, 25, 24, tzinfo=datetime.timezone.utc), 'time_taken': 216.0, 'time_delta': '0:03:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1338735187, 'number': 1084, 'closed': datetime.datetime(2023, 5, 4, 16, 40, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 4, 16, 36, 24, tzinfo=datetime.timezone.utc), 'time_taken': 255.0, 'time_delta': '0:04:15', 'additions': 46, 'deletions': 0, 'state': 'closed'}, {'id': 1336340711, 'number': 1080, 'closed': datetime.datetime(2023, 5, 3, 9, 11, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 3, 9, 2, 33, tzinfo=datetime.timezone.utc), 'time_taken': 514.0, 'time_delta': '0:08:34', 'additions': 24, 'deletions': 4, 'state': 'closed'}, {'id': 1316605419, 'number': 1077, 'closed': datetime.datetime(2023, 4, 17, 15, 45, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 17, 13, 11, tzinfo=datetime.timezone.utc), 'time_taken': 9278.0, 'time_delta': '2:34:38', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 1308429215, 'number': 1075, 'closed': datetime.datetime(2023, 4, 14, 12, 34, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 11, 5, 50, 17, tzinfo=datetime.timezone.utc), 'time_taken': 283440.0, 'time_delta': '3 days, 6:44:00', 'additions': 17, 'deletions': 7, 'state': 'closed'}, {'id': 1297617778, 'number': 1071, 'closed': datetime.datetime(2023, 3, 31, 12, 22, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 31, 11, 35, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2831.0, 'time_delta': '0:47:11', 'additions': 17, 'deletions': 7, 'state': 'closed'}, {'id': 1297530620, 'number': 1070, 'closed': datetime.datetime(2023, 3, 31, 10, 36, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 31, 10, 25, 43, tzinfo=datetime.timezone.utc), 'time_taken': 632.0, 'time_delta': '0:10:32', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1296008546, 'number': 1066, 'closed': datetime.datetime(2023, 3, 30, 10, 52, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 30, 10, 41, 33, tzinfo=datetime.timezone.utc), 'time_taken': 674.0, 'time_delta': '0:11:14', 'additions': 48, 'deletions': 35, 'state': 'closed'}, {'id': 1285476888, 'number': 1058, 'closed': datetime.datetime(2023, 3, 28, 6, 16, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 9, 1, 31, tzinfo=datetime.timezone.utc), 'time_taken': 508477.0, 'time_delta': '5 days, 21:14:37', 'additions': 139, 'deletions': 74, 'state': 'closed'}, {'id': 1284452230, 'number': 1057, 'closed': datetime.datetime(2023, 3, 30, 9, 39, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 21, 15, 27, 6, tzinfo=datetime.timezone.utc), 'time_taken': 756718.0, 'time_delta': '8 days, 18:11:58', 'additions': 1173, 'deletions': 50, 'state': 'closed'}, {'id': 1246925899, 'number': 1040, 'closed': datetime.datetime(2023, 3, 30, 9, 26, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 20, 9, 2, 11, tzinfo=datetime.timezone.utc), 'time_taken': 3284672.0, 'time_delta': '38 days, 0:24:32', 'additions': 2201, 'deletions': 11, 'state': 'closed'}, {'id': 1230297709, 'number': 1016, 'closed': datetime.datetime(2023, 2, 7, 21, 3, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 6, 11, 43, 37, tzinfo=datetime.timezone.utc), 'time_taken': 120000.0, 'time_delta': '1 day, 9:20:00', 'additions': 70, 'deletions': 53, 'state': 'closed'}, {'id': 1223130461, 'number': 1010, 'closed': datetime.datetime(2023, 2, 7, 18, 48, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 31, 11, 24, 58, tzinfo=datetime.timezone.utc), 'time_taken': 631410.0, 'time_delta': '7 days, 7:23:30', 'additions': 25, 'deletions': 9, 'state': 'closed'}, {'id': 1218942206, 'number': 1006, 'closed': datetime.datetime(2023, 1, 27, 9, 15, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 27, 8, 9, 34, tzinfo=datetime.timezone.utc), 'time_taken': 3961.0, 'time_delta': '1:06:01', 'additions': 12, 'deletions': 3, 'state': 'closed'}, {'id': 1214596274, 'number': 1004, 'closed': datetime.datetime(2023, 1, 26, 11, 2, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 24, 6, 24, 38, tzinfo=datetime.timezone.utc), 'time_taken': 189471.0, 'time_delta': '2 days, 4:37:51', 'additions': 428, 'deletions': 903, 'state': 'closed'}, {'id': 1198609512, 'number': 987, 'closed': datetime.datetime(2023, 1, 19, 8, 45, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 16, 8, 12, 54, tzinfo=datetime.timezone.utc), 'time_taken': 261137.0, 'time_delta': '3 days, 0:32:17', 'additions': 61, 'deletions': 41, 'state': 'closed'}, {'id': 1194929436, 'number': 984, 'closed': datetime.datetime(2023, 1, 12, 10, 11, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 12, 8, 13, 3, tzinfo=datetime.timezone.utc), 'time_taken': 7136.0, 'time_delta': '1:58:56', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 1135543909, 'number': 939, 'closed': datetime.datetime(2022, 11, 25, 16, 47, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 25, 5, 45, 4, tzinfo=datetime.timezone.utc), 'time_taken': 39763.0, 'time_delta': '11:02:43', 'additions': 31, 'deletions': 11, 'state': 'closed'}, {'id': 1091171520, 'number': 906, 'closed': datetime.datetime(2022, 10, 26, 5, 58, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 18, 18, 17, 5, tzinfo=datetime.timezone.utc), 'time_taken': 646894.0, 'time_delta': '7 days, 11:41:34', 'additions': 2146, 'deletions': 9, 'state': 'closed'}, {'id': 1083257703, 'number': 889, 'closed': datetime.datetime(2022, 10, 14, 8, 54, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 11, 12, 37, 37, tzinfo=datetime.timezone.utc), 'time_taken': 245835.0, 'time_delta': '2 days, 20:17:15', 'additions': 70, 'deletions': 34, 'state': 'closed'}, {'id': 1078319157, 'number': 885, 'closed': datetime.datetime(2022, 10, 14, 7, 53, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 6, 6, 22, 5, tzinfo=datetime.timezone.utc), 'time_taken': 696712.0, 'time_delta': '8 days, 1:31:52', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1053022467, 'number': 870, 'closed': datetime.datetime(2022, 9, 20, 8, 51, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 12, 9, 20, 29, tzinfo=datetime.timezone.utc), 'time_taken': 689476.0, 'time_delta': '7 days, 23:31:16', 'additions': 250, 'deletions': 21, 'state': 'closed'}, {'id': 1039372082, 'number': 856, 'closed': datetime.datetime(2022, 10, 18, 18, 18, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 29, 8, 59, 19, tzinfo=datetime.timezone.utc), 'time_taken': 4353525.0, 'time_delta': '50 days, 9:18:45', 'additions': 2531, 'deletions': 9, 'state': 'closed'}, {'id': 1033085215, 'number': 850, 'closed': datetime.datetime(2022, 8, 26, 11, 1, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 16, 32, 4, tzinfo=datetime.timezone.utc), 'time_taken': 325742.0, 'time_delta': '3 days, 18:29:02', 'additions': 181, 'deletions': 1, 'state': 'closed'}, {'id': 1022952287, 'number': 839, 'closed': datetime.datetime(2022, 8, 24, 14, 12, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 16, 56, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1199750.0, 'time_delta': '13 days, 21:15:50', 'additions': 62, 'deletions': 22, 'state': 'closed'}, {'id': 1021802380, 'number': 836, 'closed': datetime.datetime(2022, 8, 24, 14, 13, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 17, 42, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1283432.0, 'time_delta': '14 days, 20:30:32', 'additions': 25, 'deletions': 6, 'state': 'closed'}, {'id': 1018324451, 'number': 834, 'closed': datetime.datetime(2022, 8, 24, 14, 13, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 5, 6, 59, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1667627.0, 'time_delta': '19 days, 7:13:47', 'additions': 56, 'deletions': 6, 'state': 'closed'}, {'id': 1012239792, 'number': 825, 'closed': datetime.datetime(2022, 8, 1, 10, 47, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 18, 17, 13, tzinfo=datetime.timezone.utc), 'time_taken': 232197.0, 'time_delta': '2 days, 16:29:57', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1012235591, 'number': 824, 'closed': datetime.datetime(2022, 8, 1, 11, 59, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 18, 11, 7, tzinfo=datetime.timezone.utc), 'time_taken': 236926.0, 'time_delta': '2 days, 17:48:46', 'additions': 16, 'deletions': 4, 'state': 'closed'}, {'id': 1012215492, 'number': 823, 'closed': datetime.datetime(2022, 8, 1, 10, 46, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 17, 42, 43, tzinfo=datetime.timezone.utc), 'time_taken': 234232.0, 'time_delta': '2 days, 17:03:52', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1006854031, 'number': 813, 'closed': datetime.datetime(2022, 7, 29, 10, 16, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 25, 6, 9, 51, tzinfo=datetime.timezone.utc), 'time_taken': 360410.0, 'time_delta': '4 days, 4:06:50', 'additions': 35, 'deletions': 0, 'state': 'closed'}, {'id': 1006848835, 'number': 812, 'closed': datetime.datetime(2022, 7, 29, 10, 5, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 25, 6, 3, 10, tzinfo=datetime.timezone.utc), 'time_taken': 360137.0, 'time_delta': '4 days, 4:02:17', 'additions': 64, 'deletions': 0, 'state': 'closed'}, {'id': 1000590170, 'number': 802, 'closed': datetime.datetime(2022, 7, 19, 10, 22, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 19, 10, 21, 2, tzinfo=datetime.timezone.utc), 'time_taken': 94.0, 'time_delta': '0:01:34', 'additions': 6, 'deletions': 11, 'state': 'closed'}, {'id': 992729817, 'number': 794, 'closed': datetime.datetime(2022, 7, 20, 6, 57, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 11, 6, 49, 57, tzinfo=datetime.timezone.utc), 'time_taken': 778025.0, 'time_delta': '9 days, 0:07:05', 'additions': 13, 'deletions': 14, 'state': 'closed'}, {'id': 990182100, 'number': 790, 'closed': datetime.datetime(2022, 7, 7, 12, 49, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 12, 47, 33, tzinfo=datetime.timezone.utc), 'time_taken': 95.0, 'time_delta': '0:01:35', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 990100521, 'number': 789, 'closed': datetime.datetime(2022, 7, 7, 12, 12, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 11, 48, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1446.0, 'time_delta': '0:24:06', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 990053520, 'number': 788, 'closed': datetime.datetime(2022, 7, 7, 12, 5, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 11, 14, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3079.0, 'time_delta': '0:51:19', 'additions': 51, 'deletions': 15, 'state': 'closed'}, {'id': 987520300, 'number': 784, 'closed': datetime.datetime(2022, 7, 5, 14, 43, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 14, 40, 47, tzinfo=datetime.timezone.utc), 'time_taken': 191.0, 'time_delta': '0:03:11', 'additions': 15, 'deletions': 2, 'state': 'closed'}, {'id': 987374760, 'number': 782, 'closed': datetime.datetime(2022, 7, 5, 14, 0, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 12, 27, 10, tzinfo=datetime.timezone.utc), 'time_taken': 5623.0, 'time_delta': '1:33:43', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 980998613, 'number': 769, 'closed': datetime.datetime(2022, 7, 29, 14, 25, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 28, 6, 58, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2705166.0, 'time_delta': '31 days, 7:26:06', 'additions': 869, 'deletions': 247, 'state': 'closed'}, {'id': 971847848, 'number': 760, 'closed': datetime.datetime(2022, 7, 11, 11, 24, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 20, 7, 27, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1828603.0, 'time_delta': '21 days, 3:56:43', 'additions': 92, 'deletions': 38, 'state': 'closed'}, {'id': 970504463, 'number': 759, 'closed': datetime.datetime(2022, 6, 20, 6, 44, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 17, 11, 10, 58, tzinfo=datetime.timezone.utc), 'time_taken': 243189.0, 'time_delta': '2 days, 19:33:09', 'additions': 19, 'deletions': 24, 'state': 'closed'}, {'id': 970300057, 'number': 758, 'closed': datetime.datetime(2022, 7, 4, 11, 50, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 17, 7, 16, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1485252.0, 'time_delta': '17 days, 4:34:12', 'additions': 169, 'deletions': 0, 'state': 'closed'}, {'id': 969512737, 'number': 756, 'closed': datetime.datetime(2022, 6, 20, 5, 49, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 16, 6, tzinfo=datetime.timezone.utc), 'time_taken': 308628.0, 'time_delta': '3 days, 13:43:48', 'additions': 17, 'deletions': 12, 'state': 'closed'}, {'id': 967747767, 'number': 752, 'closed': datetime.datetime(2022, 7, 4, 11, 41, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 6, 43, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1659453.0, 'time_delta': '19 days, 4:57:33', 'additions': 68, 'deletions': 0, 'state': 'closed'}, {'id': 966971957, 'number': 751, 'closed': datetime.datetime(2022, 6, 14, 14, 0, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 14, 13, 58, 8, tzinfo=datetime.timezone.utc), 'time_taken': 126.0, 'time_delta': '0:02:06', 'additions': 1, 'deletions': 6, 'state': 'closed'}, {'id': 944024450, 'number': 742, 'closed': datetime.datetime(2022, 6, 14, 8, 14, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 23, 7, 22, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1903944.0, 'time_delta': '22 days, 0:52:24', 'additions': 254, 'deletions': 77, 'state': 'closed'}, {'id': 934662374, 'number': 735, 'closed': datetime.datetime(2022, 5, 18, 18, 22, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 12, 10, 36, 56, tzinfo=datetime.timezone.utc), 'time_taken': 546360.0, 'time_delta': '6 days, 7:46:00', 'additions': 12, 'deletions': 6, 'state': 'closed'}, {'id': 930486288, 'number': 731, 'closed': datetime.datetime(2022, 5, 10, 7, 3, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 8, 14, 11, 26, tzinfo=datetime.timezone.utc), 'time_taken': 147141.0, 'time_delta': '1 day, 16:52:21', 'additions': 13, 'deletions': 12, 'state': 'closed'}, {'id': 920241680, 'number': 726, 'closed': datetime.datetime(2022, 4, 27, 9, 18, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 27, 7, 2, 45, tzinfo=datetime.timezone.utc), 'time_taken': 8168.0, 'time_delta': '2:16:08', 'additions': 7, 'deletions': 5, 'state': 'closed'}, {'id': 917975186, 'number': 724, 'closed': datetime.datetime(2022, 5, 18, 18, 22, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 25, 10, 28, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2015624.0, 'time_delta': '23 days, 7:53:44', 'additions': 210, 'deletions': 26, 'state': 'closed'}, {'id': 913865311, 'number': 723, 'closed': datetime.datetime(2022, 4, 22, 9, 30, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 20, 7, 13, 40, tzinfo=datetime.timezone.utc), 'time_taken': 180982.0, 'time_delta': '2 days, 2:16:22', 'additions': 57, 'deletions': 10, 'state': 'closed'}, {'id': 907834202, 'number': 718, 'closed': datetime.datetime(2022, 4, 13, 8, 49, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 12, 15, 32, 2, tzinfo=datetime.timezone.utc), 'time_taken': 62239.0, 'time_delta': '17:17:19', 'additions': 23, 'deletions': 4, 'state': 'closed'}, {'id': 905171124, 'number': 717, 'closed': datetime.datetime(2022, 4, 13, 8, 49, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 10, 9, 36, 49, tzinfo=datetime.timezone.utc), 'time_taken': 256367.0, 'time_delta': '2 days, 23:12:47', 'additions': 17, 'deletions': 2, 'state': 'closed'}, {'id': 905167809, 'number': 716, 'closed': datetime.datetime(2022, 4, 13, 8, 50, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 10, 9, 20, 21, tzinfo=datetime.timezone.utc), 'time_taken': 257383.0, 'time_delta': '2 days, 23:29:43', 'additions': 100, 'deletions': 20, 'state': 'closed'}, {'id': 902342475, 'number': 712, 'closed': datetime.datetime(2022, 4, 14, 7, 52, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 7, 6, 31, 33, tzinfo=datetime.timezone.utc), 'time_taken': 609665.0, 'time_delta': '7 days, 1:21:05', 'additions': 264, 'deletions': 159, 'state': 'closed'}, {'id': 891055656, 'number': 709, 'closed': datetime.datetime(2022, 4, 7, 6, 1, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 27, 14, 53, 11, tzinfo=datetime.timezone.utc), 'time_taken': 918528.0, 'time_delta': '10 days, 15:08:48', 'additions': 90, 'deletions': 7, 'state': 'closed'}, {'id': 889209089, 'number': 707, 'closed': datetime.datetime(2022, 4, 7, 6, 24, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 25, 8, 7, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1117015.0, 'time_delta': '12 days, 22:16:55', 'additions': 134, 'deletions': 1, 'state': 'closed'}, {'id': 879084659, 'number': 704, 'closed': datetime.datetime(2022, 4, 7, 6, 27, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 13, 51, 32, tzinfo=datetime.timezone.utc), 'time_taken': 2046931.0, 'time_delta': '23 days, 16:35:31', 'additions': 174, 'deletions': 0, 'state': 'closed'}, {'id': 878691041, 'number': 703, 'closed': datetime.datetime(2022, 4, 7, 6, 14, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 6, 43, 12, tzinfo=datetime.timezone.utc), 'time_taken': 2071894.0, 'time_delta': '23 days, 23:31:34', 'additions': 195, 'deletions': 17, 'state': 'closed'}, {'id': 870650708, 'number': 701, 'closed': datetime.datetime(2022, 3, 24, 6, 44, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 3, 14, 30, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1786464.0, 'time_delta': '20 days, 16:14:24', 'additions': 315, 'deletions': 3, 'state': 'closed'}, {'id': 855107276, 'number': 678, 'closed': datetime.datetime(2022, 2, 17, 8, 8, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 17, 6, 1, 49, tzinfo=datetime.timezone.utc), 'time_taken': 7625.0, 'time_delta': '2:07:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 854685832, 'number': 676, 'closed': datetime.datetime(2022, 7, 29, 14, 21, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 16, 18, 8, 1, tzinfo=datetime.timezone.utc), 'time_taken': 14069596.0, 'time_delta': '162 days, 20:13:16', 'additions': 269, 'deletions': 166, 'state': 'closed'}, {'id': 854053402, 'number': 671, 'closed': datetime.datetime(2022, 2, 16, 9, 20, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 16, 7, 6, 12, tzinfo=datetime.timezone.utc), 'time_taken': 8062.0, 'time_delta': '2:14:22', 'additions': 52, 'deletions': 0, 'state': 'closed'}, {'id': 840238037, 'number': 661, 'closed': datetime.datetime(2022, 2, 4, 16, 43, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 4, 12, 59, 43, tzinfo=datetime.timezone.utc), 'time_taken': 13420.0, 'time_delta': '3:43:40', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 824254083, 'number': 642, 'closed': datetime.datetime(2022, 1, 17, 8, 18, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 17, 7, 20, 43, tzinfo=datetime.timezone.utc), 'time_taken': 3444.0, 'time_delta': '0:57:24', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 810313589, 'number': 624, 'closed': datetime.datetime(2022, 1, 6, 12, 22, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 27, 10, 24, 7, tzinfo=datetime.timezone.utc), 'time_taken': 871084.0, 'time_delta': '10 days, 1:58:04', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 809019330, 'number': 623, 'closed': datetime.datetime(2022, 2, 4, 16, 43, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 23, 9, 48, 52, tzinfo=datetime.timezone.utc), 'time_taken': 3740050.0, 'time_delta': '43 days, 6:54:10', 'additions': 425, 'deletions': 63, 'state': 'closed'}, {'id': 802294078, 'number': 619, 'closed': datetime.datetime(2022, 1, 14, 18, 16, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 14, 12, 32, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2699046.0, 'time_delta': '31 days, 5:44:06', 'additions': 28, 'deletions': 8, 'state': 'closed'}, {'id': 802289368, 'number': 618, 'closed': datetime.datetime(2021, 12, 14, 12, 31, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 14, 12, 26, 29, tzinfo=datetime.timezone.utc), 'time_taken': 287.0, 'time_delta': '0:04:47', 'additions': 31, 'deletions': 24, 'state': 'closed'}, {'id': 796579486, 'number': 612, 'closed': datetime.datetime(2022, 1, 14, 18, 10, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 7, 6, 5, 42, tzinfo=datetime.timezone.utc), 'time_taken': 3326698.0, 'time_delta': '38 days, 12:04:58', 'additions': 253, 'deletions': 87, 'state': 'closed'}, {'id': 795550035, 'number': 611, 'closed': datetime.datetime(2022, 1, 14, 14, 35, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 6, 6, 8, 9, tzinfo=datetime.timezone.utc), 'time_taken': 3400038.0, 'time_delta': '39 days, 8:27:18', 'additions': 441, 'deletions': 85, 'state': 'closed'}, {'id': 792557667, 'number': 608, 'closed': datetime.datetime(2022, 1, 6, 13, 39, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 1, 10, 36, 40, tzinfo=datetime.timezone.utc), 'time_taken': 3121346.0, 'time_delta': '36 days, 3:02:26', 'additions': 30, 'deletions': 1, 'state': 'closed'}, {'id': 790350534, 'number': 601, 'closed': datetime.datetime(2021, 11, 30, 9, 2, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 29, 6, 17, 19, tzinfo=datetime.timezone.utc), 'time_taken': 96288.0, 'time_delta': '1 day, 2:44:48', 'additions': 55, 'deletions': 12, 'state': 'closed'}, {'id': 788773884, 'number': 597, 'closed': datetime.datetime(2021, 12, 9, 17, 54, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 25, 11, 55, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1231119.0, 'time_delta': '14 days, 5:58:39', 'additions': 94, 'deletions': 46, 'state': 'closed'}, {'id': 788672464, 'number': 596, 'closed': datetime.datetime(2021, 12, 2, 8, 29, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 25, 9, 49, 13, tzinfo=datetime.timezone.utc), 'time_taken': 599998.0, 'time_delta': '6 days, 22:39:58', 'additions': 29, 'deletions': 8, 'state': 'closed'}, {'id': 788586373, 'number': 595, 'closed': datetime.datetime(2021, 12, 2, 8, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 25, 7, 53, 43, tzinfo=datetime.timezone.utc), 'time_taken': 606917.0, 'time_delta': '7 days, 0:35:17', 'additions': 91, 'deletions': 51, 'state': 'closed'}, {'id': 787694416, 'number': 593, 'closed': datetime.datetime(2021, 12, 2, 8, 28, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 24, 8, 18, 24, tzinfo=datetime.timezone.utc), 'time_taken': 691824.0, 'time_delta': '8 days, 0:10:24', 'additions': 59, 'deletions': 53, 'state': 'closed'}, {'id': 783662566, 'number': 588, 'closed': datetime.datetime(2021, 12, 9, 17, 51, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 18, 11, 49, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1836131.0, 'time_delta': '21 days, 6:02:11', 'additions': 384, 'deletions': 184, 'state': 'closed'}, {'id': 783449581, 'number': 587, 'closed': datetime.datetime(2021, 11, 24, 9, 49, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 18, 7, 14, 29, tzinfo=datetime.timezone.utc), 'time_taken': 527703.0, 'time_delta': '6 days, 2:35:03', 'additions': 75, 'deletions': 11, 'state': 'closed'}, {'id': 780390962, 'number': 584, 'closed': datetime.datetime(2021, 11, 30, 13, 13, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 15, 7, 39, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1316035.0, 'time_delta': '15 days, 5:33:55', 'additions': 104, 'deletions': 90, 'state': 'closed'}, {'id': 776261456, 'number': 583, 'closed': datetime.datetime(2021, 11, 17, 13, 37, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 9, 7, 31, 44, tzinfo=datetime.timezone.utc), 'time_taken': 713158.0, 'time_delta': '8 days, 6:05:58', 'additions': 464, 'deletions': 316, 'state': 'closed'}, {'id': 775334567, 'number': 578, 'closed': datetime.datetime(2021, 11, 10, 10, 17, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 8, 9, 8, 38, tzinfo=datetime.timezone.utc), 'time_taken': 176905.0, 'time_delta': '2 days, 1:08:25', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 774180109, 'number': 573, 'closed': datetime.datetime(2021, 11, 5, 14, 45, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 5, 12, 10, 2, tzinfo=datetime.timezone.utc), 'time_taken': 9343.0, 'time_delta': '2:35:43', 'additions': 21, 'deletions': 2, 'state': 'closed'}, {'id': 772666434, 'number': 571, 'closed': datetime.datetime(2021, 11, 5, 14, 56, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 3, 18, 37, 36, tzinfo=datetime.timezone.utc), 'time_taken': 159537.0, 'time_delta': '1 day, 20:18:57', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 772441221, 'number': 569, 'closed': datetime.datetime(2021, 11, 5, 14, 57, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 3, 14, 35, tzinfo=datetime.timezone.utc), 'time_taken': 174156.0, 'time_delta': '2 days, 0:22:36', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 769081189, 'number': 566, 'closed': datetime.datetime(2021, 11, 5, 17, 20, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 29, 9, 44, 31, tzinfo=datetime.timezone.utc), 'time_taken': 632131.0, 'time_delta': '7 days, 7:35:31', 'additions': 29, 'deletions': 7, 'state': 'closed'}, {'id': 766118690, 'number': 559, 'closed': datetime.datetime(2021, 11, 5, 12, 10, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 26, 6, 43, 47, tzinfo=datetime.timezone.utc), 'time_taken': 883625.0, 'time_delta': '10 days, 5:27:05', 'additions': 59, 'deletions': 2, 'state': 'closed'}, {'id': 715024037, 'number': 458, 'closed': datetime.datetime(2021, 9, 7, 10, 16, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 12, 15, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1720856.0, 'time_delta': '19 days, 22:00:56', 'additions': 34, 'deletions': 6, 'state': 'closed'}, {'id': 712929371, 'number': 453, 'closed': datetime.datetime(2021, 8, 23, 11, 38, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 12, 41, 17, tzinfo=datetime.timezone.utc), 'time_taken': 687451.0, 'time_delta': '7 days, 22:57:31', 'additions': 808, 'deletions': 182, 'state': 'closed'}, {'id': 705568429, 'number': 447, 'closed': datetime.datetime(2021, 8, 6, 15, 44, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 15, 23, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1261.0, 'time_delta': '0:21:01', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 703094027, 'number': 432, 'closed': datetime.datetime(2021, 8, 6, 15, 2, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 8, 6, 49, tzinfo=datetime.timezone.utc), 'time_taken': 197732.0, 'time_delta': '2 days, 6:55:32', 'additions': 29, 'deletions': 4, 'state': 'closed'}, {'id': 702140285, 'number': 431, 'closed': datetime.datetime(2021, 11, 23, 13, 28, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 10, 6, 56, tzinfo=datetime.timezone.utc), 'time_taken': 9688878.0, 'time_delta': '112 days, 3:21:18', 'additions': 217, 'deletions': 95, 'state': 'closed'}, {'id': 700698251, 'number': 429, 'closed': datetime.datetime(2021, 8, 25, 11, 35, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 31, 11, 44, 3, tzinfo=datetime.timezone.utc), 'time_taken': 2159497.0, 'time_delta': '24 days, 23:51:37', 'additions': 497, 'deletions': 102, 'state': 'closed'}, {'id': 700463883, 'number': 428, 'closed': datetime.datetime(2021, 8, 25, 11, 35, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 30, 17, 35, 58, tzinfo=datetime.timezone.utc), 'time_taken': 2224768.0, 'time_delta': '25 days, 17:59:28', 'additions': 129, 'deletions': 8, 'state': 'closed'}, {'id': 700104501, 'number': 427, 'closed': datetime.datetime(2021, 8, 25, 11, 35, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 30, 8, 22, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2257984.0, 'time_delta': '26 days, 3:13:04', 'additions': 94, 'deletions': 6, 'state': 'closed'}, {'id': 695912570, 'number': 421, 'closed': datetime.datetime(2021, 8, 2, 15, 9, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 12, 41, 7, tzinfo=datetime.timezone.utc), 'time_taken': 872904.0, 'time_delta': '10 days, 2:28:24', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 695910181, 'number': 420, 'closed': datetime.datetime(2021, 8, 2, 15, 10, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 12, 36, 54, tzinfo=datetime.timezone.utc), 'time_taken': 873204.0, 'time_delta': '10 days, 2:33:24', 'additions': 240, 'deletions': 0, 'state': 'closed'}, {'id': 693379471, 'number': 417, 'closed': datetime.datetime(2021, 8, 6, 11, 18, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 11, 15, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1468982.0, 'time_delta': '17 days, 0:03:02', 'additions': 342, 'deletions': 32, 'state': 'closed'}, {'id': 692668370, 'number': 412, 'closed': datetime.datetime(2021, 8, 5, 11, 13, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 14, 41, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1456370.0, 'time_delta': '16 days, 20:32:50', 'additions': 90, 'deletions': 1, 'state': 'closed'}, {'id': 679252303, 'number': 404, 'closed': datetime.datetime(2021, 7, 5, 7, 48, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 17, 51, 20, tzinfo=datetime.timezone.utc), 'time_taken': 568649.0, 'time_delta': '6 days, 13:57:29', 'additions': 116, 'deletions': 90, 'state': 'closed'}, {'id': 673859417, 'number': 398, 'closed': datetime.datetime(2021, 6, 24, 7, 27, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 10, 33, 2, tzinfo=datetime.timezone.utc), 'time_taken': 420861.0, 'time_delta': '4 days, 20:54:21', 'additions': 29, 'deletions': 1, 'state': 'closed'}, {'id': 673257020, 'number': 395, 'closed': datetime.datetime(2021, 7, 16, 20, 3, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 8, 2, 33, tzinfo=datetime.timezone.utc), 'time_taken': 2462440.0, 'time_delta': '28 days, 12:00:40', 'additions': 1097, 'deletions': 90, 'state': 'closed'}, {'id': 665039713, 'number': 392, 'closed': datetime.datetime(2021, 9, 30, 16, 38, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 15, 46, 45, tzinfo=datetime.timezone.utc), 'time_taken': 9852718.0, 'time_delta': '114 days, 0:51:58', 'additions': 50, 'deletions': 0, 'state': 'closed'}, {'id': 656220348, 'number': 369, 'closed': datetime.datetime(2021, 5, 31, 8, 5, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 10, 20, 41, tzinfo=datetime.timezone.utc), 'time_taken': 251089.0, 'time_delta': '2 days, 21:44:49', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 650775600, 'number': 365, 'closed': datetime.datetime(2021, 6, 24, 15, 8, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 23, 11, 51, 41, tzinfo=datetime.timezone.utc), 'time_taken': 2776614.0, 'time_delta': '32 days, 3:16:54', 'additions': 390, 'deletions': 30, 'state': 'closed'}, {'id': 645969521, 'number': 356, 'closed': datetime.datetime(2021, 5, 18, 13, 30, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 17, 15, 35, 24, tzinfo=datetime.timezone.utc), 'time_taken': 78899.0, 'time_delta': '21:54:59', 'additions': 17, 'deletions': 1, 'state': 'closed'}, {'id': 634485450, 'number': 345, 'closed': datetime.datetime(2021, 5, 12, 15, 40, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 8, 13, 59, 34, tzinfo=datetime.timezone.utc), 'time_taken': 351673.0, 'time_delta': '4 days, 1:41:13', 'additions': 280, 'deletions': 20, 'state': 'closed'}, {'id': 596778008, 'number': 285, 'closed': datetime.datetime(2021, 3, 23, 10, 22, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 18, 3, 8, tzinfo=datetime.timezone.utc), 'time_taken': 317934.0, 'time_delta': '3 days, 16:18:54', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 596566928, 'number': 284, 'closed': datetime.datetime(2021, 3, 23, 10, 7, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 13, 26, 57, tzinfo=datetime.timezone.utc), 'time_taken': 333647.0, 'time_delta': '3 days, 20:40:47', 'additions': 2, 'deletions': 0, 'state': 'closed'}]"
