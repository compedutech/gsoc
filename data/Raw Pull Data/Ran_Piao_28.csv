pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1019714016,406 Human Pose Estimation 3D,"# 3D Human Pose Estimation with OpenVINO 

This demo contains 3D multi-person pose estimation demo. Intel OpenVINO™ backend can be used for fast inference on CPU. It is based on [Lightweight OpenPose](https://arxiv.org/abs/1811.12004) and [Single-Shot Multi-Person 3D Pose Estimation From Monocular RGB](https://arxiv.org/abs/1712.03453) papers. 
<br>
The implementation of this demo starts with the ideas I originally wrote about in my [blog](https://medium.com/@bagayonghuming/3d-jupyter-notebooks-and-webgl-integration-for-openvino-531784a04a52)
There are two options involved in this pull request. One is to use WebGL, which interacts with the browser, and the other is to use the less dependent OpenCV, which implements a basic 3D visual library.
## 406-human-pose-estimation-3d
![threejs](https://user-images.githubusercontent.com/42672437/183292131-576cc05a-a724-472c-8dc9-f6bc092190bf.gif)
This demo allows you to use the mouse to change the angle of view from which you view an object.

## 406-opencv-human-pose-estimation-3d
![OpenCV](https://user-images.githubusercontent.com/42672437/183285240-4ac00639-ceba-4b65-a783-be66a372ac8e.gif)
This example allows you to use the keyboard to move your camera and press ESC to exit.(You need to set _use_popup=True_ firstly)

",True,606,https://api.github.com/repos/openvinotoolkit/openvino_notebooks/pulls/606,https://github.com/openvinotoolkit/openvino_notebooks/pull/606,closed,1459,5,11,92,34,145,1,1,[{'name': 'new notebook'}],2022-08-08 01:59:12+00:00,2022-12-21 13:27:30+00:00,11705298.0,"135 days, 11:28:18","[{'comment_id': 991881022, 'comment_body': 'Since we have ""402-pose-estimation-webcam"", should we change the name of 406 to ""406-3D-pose-estimation-webcam"" to make the title clearer and consistent with the ""4XX"" series of notebooks that contains webcam?', 'comment_created': datetime.datetime(2022, 10, 11, 6, 54, 11, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 991882510, 'comment_body': 'Suggest to make the description here shorter and consistent with other ""4XX“ notebooks, like ""3D display of human pose estimation with a webcam or video file"".', 'comment_created': datetime.datetime(2022, 10, 11, 6, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 991883248, 'comment_body': '""三为”should be ""三维“', 'comment_created': datetime.datetime(2022, 10, 11, 6, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992198731, 'comment_body': ""what's the use of this command line here? If not, please delete it. If uncomment it could be further used for another purpose, please leave some comments."", 'comment_created': datetime.datetime(2022, 10, 11, 11, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992199095, 'comment_body': 'same here for the commented command line.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 31, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992199320, 'comment_body': 'same here for the commented command line.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992199426, 'comment_body': 'same here for the commented command line.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 31, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992199858, 'comment_body': 'same here for the commented command line and the following 2 lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992200411, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 32, 56, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992200626, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992201913, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992202262, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 34, 41, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992202643, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992203510, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 35, 36, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992204226, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 36, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992204503, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 36, 22, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992204868, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 36, 37, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992206010, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992206362, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992207288, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992210870, 'comment_body': 'Suggested changes : "" This notebook demonstrates a 3D display for human pose estimation with live webcam inferencing with OpenVINO. ""', 'comment_created': datetime.datetime(2022, 10, 11, 11, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992216328, 'comment_body': 'Suggested changes: ""If you want to try another model for pose estimation, please change the model name to what you choose from Open Model Zoo, and precision accordingly.""', 'comment_created': datetime.datetime(2022, 10, 11, 11, 47, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992217145, 'comment_body': 'What does ""PAF"" mean?', 'comment_created': datetime.datetime(2022, 10, 11, 11, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992219213, 'comment_body': 'Suggested changes: ""It could be either a webcam or a video file.""', 'comment_created': datetime.datetime(2022, 10, 11, 11, 50, 58, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992219779, 'comment_body': 'same here with the command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992222983, 'comment_body': ""Please change the description here accordingly. Also, please point out what's the difference between this notebook and the other notebook demo in the same repo, to make it more clearly to the developers."", 'comment_created': datetime.datetime(2022, 10, 11, 11, 54, 19, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992224307, 'comment_body': 'same for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 998268668, 'comment_body': 'Why do we need to reshape the model, but not resizing the input data ? And why should another infer request be created ?', 'comment_created': datetime.datetime(2022, 10, 18, 13, 55, 42, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 998276154, 'comment_body': 'Could you add some comments to explain the usage of these body edges ?  what do they stand for ?', 'comment_created': datetime.datetime(2022, 10, 18, 14, 1, 18, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 998280356, 'comment_body': 'the tables seems be mashed in the notebook', 'comment_created': datetime.datetime(2022, 10, 18, 14, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 998287270, 'comment_body': 'Whats the connection between this words and the code block below for normalization ? Could help to add some notes to explain this isolated code block as well？', 'comment_created': datetime.datetime(2022, 10, 18, 14, 9, 59, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 998293959, 'comment_body': 'Could you help to add some comments to illuminate the difference between these 2 notebooks ?', 'comment_created': datetime.datetime(2022, 10, 18, 14, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 998302271, 'comment_body': ""what's the propose of this notebook ?  Could you help to add a README file or explain more in this notebook ?"", 'comment_created': datetime.datetime(2022, 10, 18, 14, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1000451322, 'comment_body': 'Thank you very much for your review. On this question, I want to reduce the code part of the image data processing. In this notebook, the shape of the model is modified at least once, and it will be recreated only when the shape of the input image changes. First, if the image is compressed in the wrong proportion, the result will be biased, which will increase the code to process the coordinate data later. Second, because the output has three different properties, and get_tensor has the interface to extract what you need very easily.This was also done in the original demo.', 'comment_created': datetime.datetime(2022, 10, 20, 10, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1000517632, 'comment_body': ""Hi thanks for your clarification\r\n1. I believe model reshaping will have impact on its accuracy, maybe this case is not included, but we do not recommend developer to change its height and width dimension;\r\n2. in this case, since the shape of input data is static, wont be changed ？, i think we can resize the input image to fit the model's input requirements. so the 'base_height' shall be equal to model's input shape. and we dont need to create the infer_request twice."", 'comment_created': datetime.datetime(2022, 10, 20, 11, 43, 47, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1000527587, 'comment_body': '```suggestion\r\nThis notebook has 2 examples: \r\n- the [406-3D-pose-estimation notebook](https://github.com/spencergotowork/openvino_notebooks/blob/master/notebooks/406-3D-pose-estimation-webcam/406-3D-pose-estimation.ipynb) displays 3D results to the browser using [Three.js python api](https://pythreejs.readthedocs.io/en/stable/installing.html). \r\n- The [406-opencv-3D-pose-estimation notebook](https://github.com/spencergotowork/openvino_notebooks/blob/master/notebooks/406-3D-pose-estimation-webcam/406-opencv-3D-pose-estimation.ipynb) uses the OpenCV toolkit to map and save the 3D result into a 2D image and display it in the notebook\r\n```', 'comment_created': datetime.datetime(2022, 10, 20, 11, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1000535308, 'comment_body': ""Could you help to design a table to list each notebook's name, introduction and gif example ? to make it more clear for our users.\r\nLike what we did in top README file:\r\nhttps://github.com/openvinotoolkit/openvino_notebooks/edit/main/README.md\r\notherwise users may mismatch the introduction and gif."", 'comment_created': datetime.datetime(2022, 10, 20, 12, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1002852432, 'comment_body': 'Pls help to check and remove the unused variables ', 'comment_created': datetime.datetime(2022, 10, 24, 3, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1002852486, 'comment_body': 'Pls help to check and remove the unused variables ', 'comment_created': datetime.datetime(2022, 10, 24, 3, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1008001329, 'comment_body': ""It shouldn't be here. Your notebook is 406, not 224."", 'comment_created': datetime.datetime(2022, 10, 28, 12, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008002977, 'comment_body': '```suggestion\r\n- The [406-3D-pose-estimation notebook](https://github.com/spencergotowork/openvino_notebooks/blob/master/notebooks/406-3D-pose-estimation-webcam/406-3D-pose-estimation.ipynb) displays 3D results to the browser using [Three.js python api](https://pythreejs.readthedocs.io/en/stable/installing.html). \r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 12, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008006999, 'comment_body': 'These 2 requirements should be in the main requirements.txt file instead of here', 'comment_created': datetime.datetime(2022, 10, 28, 12, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008008171, 'comment_body': '```suggestion\r\n| [401-object-detection-webcam](401-object-detection-webcam/)<br>[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks/HEAD?filepath=notebooks%2F401-object-detection-webcam%2F401-object-detection.ipynb) | [402-pose-estimation-webcam](402-pose-estimation-webcam/)<br>[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks/HEAD?filepath=notebooks%2F402-pose-estimation-webcam%2F402-pose-estimation.ipynb) | [403-action-recognition-webcam](403-action-recognition-webcam/)<br>[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks/HEAD?filepath=notebooks%2F403-action-recognition-webcam%2F403-action-recognition-webcam.ipynb) | [405-paddle-ocr-webcam](405-paddle-ocr-webcam/) | [406-3D-pose-estimation-webcam](406-3D-pose-estimation-webcam/) |\r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 12, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008008558, 'comment_body': 'Add ipywidgets here', 'comment_created': datetime.datetime(2022, 10, 28, 12, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008009258, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 12, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008028164, 'comment_body': 'You don\'t need this variable, you have the same specified in ""base_model_dir""', 'comment_created': datetime.datetime(2022, 10, 28, 12, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008028315, 'comment_body': 'If you don\'t use some parameters like ""precision"", please remove the lines with them instead of commenting out.', 'comment_created': datetime.datetime(2022, 10, 28, 12, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008028635, 'comment_body': 'This var should be specified in the last cell, not here', 'comment_created': datetime.datetime(2022, 10, 28, 12, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008030258, 'comment_body': 'Why is precision commented here?', 'comment_created': datetime.datetime(2022, 10, 28, 12, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008032556, 'comment_body': ""```suggestion\r\n```\r\nThis is unnecessary, you're not changing anything in this function"", 'comment_created': datetime.datetime(2022, 10, 28, 12, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008035039, 'comment_body': 'skip_first_frames cannot be hardcoded here, it must be passed as a parameter. Look at 401-object-detection on how to do it', 'comment_created': datetime.datetime(2022, 10, 28, 12, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008035970, 'comment_body': ""Please don't leave any commented code unless it's justified and explained"", 'comment_created': datetime.datetime(2022, 10, 28, 12, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008036471, 'comment_body': '```suggestion\r\n    ""                # escape = 27, use ESC to exit\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 12, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008037079, 'comment_body': ""Why is this resized here? It causes square image, which doesn't look good"", 'comment_created': datetime.datetime(2022, 10, 28, 12, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008038471, 'comment_body': 'What is line_tmp? Every var should has a meaningful name', 'comment_created': datetime.datetime(2022, 10, 28, 12, 59, 57, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008039386, 'comment_body': ""This doesn't work for Linux - there is an error"", 'comment_created': datetime.datetime(2022, 10, 28, 13, 0, 45, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008040969, 'comment_body': ""It cannot be skipped from tests. 401 nor 402 don't skip this cell and tests pass."", 'comment_created': datetime.datetime(2022, 10, 28, 13, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008041082, 'comment_body': ""It cannot be skipped from tests. 401 nor 402 don't skip this cell and tests pass."", 'comment_created': datetime.datetime(2022, 10, 28, 13, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008046757, 'comment_body': '```suggestion\r\n    ""> NOTE: _To use the webcam, you must run this Jupyter notebook on a computer with a webcam. If you run on a server, the webcam will not work. However, you can still do inference on a video in the final step. This notebook implements the rendering pipeline with OpenCV and provides some interfaces to handle geometry vertex data. And display the processed result in the notebook._""\r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 13, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008050138, 'comment_body': 'Why not markdown table?', 'comment_created': datetime.datetime(2022, 10, 28, 13, 12, 2, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008051848, 'comment_body': ""It should run in a popup every time. Otherwise, the control keys don't work. The webcam should be also in a popup if possible."", 'comment_created': datetime.datetime(2022, 10, 28, 13, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1009394914, 'comment_body': 'Yes, there is no problem on jupyter lab, but the [wrong formatting](https://github.com/openvinotoolkit/openvino_notebooks/pull/606#discussion_r998280356) on jupyter notebook. It is a bug, the recommended method is to use dom <table>.', 'comment_created': datetime.datetime(2022, 10, 31, 13, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1009398313, 'comment_body': 'I found that there is already this package at the [beginning of this file](https://github.com/spencergotowork/openvino_notebooks/blob/master/requirements.txt#L9), do I need to move it to the bottom of pythreejs in the file?', 'comment_created': datetime.datetime(2022, 10, 31, 13, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1033159578, 'comment_body': 'Suggested modification: ""This demo contains 3D multi-person pose estimation demo. Intel OpenVINO™ can be used to accelerate the inference on multiple devices, such as CPU, GPU and VPU. The model used in this demo is based on [Lightweight OpenPose](https://arxiv.org/abs/1811.12004) and [Single-Shot Multi-Person 3D Pose Estimation From Monocular RGB](https://arxiv.org/abs/1712.03453) papers. It detects 2D coordinates of up to 18 types of keypoints: ears, eyes, nose, neck, shoulders, elbows, wrists, hips, knees, and ankles, as well as their 3D coordinates. These 3D coordinates of the keypoints could be used to construct the 3D display of the human poses. Also, this 3D display method could be extended to display other 3D models...""', 'comment_created': datetime.datetime(2022, 11, 28, 6, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1033162310, 'comment_body': 'Please use docstring and type hints.', 'comment_created': datetime.datetime(2022, 11, 28, 6, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1033162455, 'comment_body': 'Please use docstring and type hints.', 'comment_created': datetime.datetime(2022, 11, 28, 6, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1033162528, 'comment_body': 'Please use docstring and type hints.', 'comment_created': datetime.datetime(2022, 11, 28, 6, 20, 46, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1033532215, 'comment_body': 'I assume this was committed by a mistake. It should be reverted to the previous state (main branch)', 'comment_created': datetime.datetime(2022, 11, 28, 13, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033532435, 'comment_body': 'I assume this was committed by a mistake. It should be reverted to the previous state (main branch)', 'comment_created': datetime.datetime(2022, 11, 28, 13, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033534328, 'comment_body': ""It should go to a new table which is introduced in #676. Let's wait for merging that PR before"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 20, 47, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033534588, 'comment_body': ""It should go to a new table which is introduced in #676. Let's wait for merging that PR before"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033535263, 'comment_body': ""It should go to a new table which is introduced in #676. Let's wait for merging that PR before"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033536520, 'comment_body': 'This binder link is incorrect. Please remove it. We will add the proper one later.', 'comment_created': datetime.datetime(2022, 11, 28, 13, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033539558, 'comment_body': ""Add additionally that these extensions don't work with Jupyter Notebook and Jupyter Lab must be used instead."", 'comment_created': datetime.datetime(2022, 11, 28, 13, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033541578, 'comment_body': 'This object should be created just before the first usage (before run_pose_estimation function)', 'comment_created': datetime.datetime(2022, 11, 28, 13, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033542910, 'comment_body': 'Is there any other model we could use? If not this sentence is unnecessary.', 'comment_created': datetime.datetime(2022, 11, 28, 13, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033546391, 'comment_body': 'Is onnx path really needed?', 'comment_created': datetime.datetime(2022, 11, 28, 13, 32, 14, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033546736, 'comment_body': ""Shouldn't be ir_model_path here?"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033547778, 'comment_body': '```suggestion\r\n    ""Only a few lines of code are required to run the model. First, we initialize the Inference Engine. Then we read the network architecture and model weights from the .bin and .xml files to compile them for the desired device. Creates an inference request object used to infer the compiled model. The created request has allocated input and output tensors.""\r\n```', 'comment_created': datetime.datetime(2022, 11, 28, 13, 33, 31, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033548933, 'comment_body': '```suggestion\r\n    ""The input is image data and the outputs are heatmaps, PAF (part affinity fields) and features""\r\n```', 'comment_created': datetime.datetime(2022, 11, 28, 13, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033549406, 'comment_body': '```suggestion\r\n    ""The image data is used as the input of the model to obtain the output heatmaps, PAF (part affinity fields) and features.""\r\n```', 'comment_created': datetime.datetime(2022, 11, 28, 13, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033551170, 'comment_body': ""If there is only one engine we don't have to pass it as a argument"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 36, 39, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033554468, 'comment_body': ""Please don't change popup size"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033556199, 'comment_body': 'Make the widget bigger if possible', 'comment_created': datetime.datetime(2022, 11, 28, 13, 41, 21, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033557133, 'comment_body': 'Rename it for something more meaningful e.g. focal_length', 'comment_created': datetime.datetime(2022, 11, 28, 13, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033560395, 'comment_body': ""I think it should be based on frame width instead of scaled_img, shouldn't it?"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 45, 5, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033561159, 'comment_body': 'Time should be measured only for inference', 'comment_created': datetime.datetime(2022, 11, 28, 13, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033563734, 'comment_body': ""Please don't change size of image"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 48, 15, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033564037, 'comment_body': 'Draw on frame, not on scaled_img', 'comment_created': datetime.datetime(2022, 11, 28, 13, 48, 28, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033564719, 'comment_body': 'Draw on frame, not scaled image', 'comment_created': datetime.datetime(2022, 11, 28, 13, 49, 5, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1034256261, 'comment_body': 'The process here is to convert pth model file to onnx and then to IR files. So the *onnx_path* variable records the location of the onnx file.', 'comment_created': datetime.datetime(2022, 11, 29, 3, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1034268245, 'comment_body': ""Yeah, it's actually restoring the original frame size, which we talked about [here](https://github.com/openvinotoolkit/openvino_notebooks/pull/606#discussion_r998268668). As mentioned in the notebook, it's not appropriate to change the size of the model input shape, so I had to change the original frame size and restore it later."", 'comment_created': datetime.datetime(2022, 11, 29, 3, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1034275353, 'comment_body': 'Here we treat scaled_img as frame because we cannot change the size of the input data defined in the model', 'comment_created': datetime.datetime(2022, 11, 29, 3, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1034628696, 'comment_body': 'Then ok', 'comment_created': datetime.datetime(2022, 11, 29, 11, 25, 2, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1034635518, 'comment_body': 'Yes. You should change the image size, but it should be like the following:\r\n1. You create a frame copy and resize it to fit the neural network input size (scaled image)\r\n2. You predict on the scaled image \r\n3. You scale the results (not the image) back to fit the original frame size\r\n4. You draw on the original frame\r\n\r\nOtherwise, the final image is warped, what I can observe now.', 'comment_created': datetime.datetime(2022, 11, 29, 11, 32, 28, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035581833, 'comment_body': 'will we use this function in our main loop ?', 'comment_created': datetime.datetime(2022, 11, 30, 6, 44, 15, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1035756075, 'comment_body': 'Removed, thanks', 'comment_created': datetime.datetime(2022, 11, 30, 9, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1035977069, 'comment_body': '```suggestion\r\n    ""**The Pythreejs extension may not display properly under the Jupyter Notebook now, so use the Jupyter Lab.**""\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035982948, 'comment_body': '```suggestion\r\n    ""Only a few lines of code are required to run the model. First, we initialize the Inference Engine. Then we read the network architecture and model weights from the .bin and .xml files to compile them for the desired device. We create an inference request object used to infer the compiled model. The created request has allocated input and output tensors.""\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 40, 59, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035983958, 'comment_body': '```suggestion\r\n    ""    Do the inference on the image\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035985341, 'comment_body': '```suggestion\r\n    ""### Main Processing Function\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 43, 1, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035992008, 'comment_body': '```suggestion\r\n    ""run_pose_estimation(source=0, flip=True, use_popup=False)""\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 48, 58, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035995511, 'comment_body': 'Why only for popups? It should be scaled anyway', 'comment_created': datetime.datetime(2022, 11, 30, 13, 52, 3, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035996158, 'comment_body': 'Url should be in the cell below', 'comment_created': datetime.datetime(2022, 11, 30, 13, 52, 33, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035999615, 'comment_body': '```suggestion\r\n    ""video_path = \\""https://github.com/intel-iot-devkit/sample-videos/raw/master/face-demographics-walking.mp4\\""""\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1036265094, 'comment_body': '```suggestion\r\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks.git/master?labpath=notebooks%2F406-3D-pose-estimation-webcam%2F406-3D-pose-estimation.ipynb)\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 17, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1036265605, 'comment_body': 'These changes cannot be comitted', 'comment_created': datetime.datetime(2022, 11, 30, 17, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1036265750, 'comment_body': 'These changes cannot be comitted', 'comment_created': datetime.datetime(2022, 11, 30, 17, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1036617444, 'comment_body': ""Thanks, I think it's because there is a problem with my vscode, when I saved it and vscode restored it to the original state."", 'comment_created': datetime.datetime(2022, 12, 1, 1, 53, 25, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1037095614, 'comment_body': '```suggestion\r\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks.git/main?labpath=notebooks%2F406-3D-pose-estimation-webcam%2F406-3D-pose-estimation.ipynb)\r\n```', 'comment_created': datetime.datetime(2022, 12, 1, 13, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1037112616, 'comment_body': 'Let\'s make it even bigger :)\r\n```suggestion\r\n    ""    windows_height = 600\\n"",\r\n    ""    windows_width = 800\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 1, 13, 32, 52, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1038661332, 'comment_body': 'We have merged notebook 404 into ""main"". Please commit your new changes on that.', 'comment_created': datetime.datetime(2022, 12, 3, 1, 47, 32, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038662445, 'comment_body': 'Suggested changes: ""This notebook contains a 3D multi-person pose estimation demo.The model used in this demo is based on [Lightweight OpenPose](https://arxiv.org/abs/1811.12004) and [Single-Shot Multi-Person 3D Pose Estimation From Monocular RGB](https://arxiv.org/abs/1712.03453). It detects 2D coordinates of up to 18 types of keypoints: ears, eyes, nose, neck, shoulders, elbows, wrists, hips, knees, and ankles, as well as their 3D coordinates, which could then be used to construct the 3D display of human poses.  OpenVINO™ is used to accelerate the inference on multiple devices, such as CPU, GPU and VPU.  Also, this 3D display method could be extended to display the inference results of other 3D models without much effort.""', 'comment_created': datetime.datetime(2022, 12, 3, 1, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038663565, 'comment_body': 'Suggested changes: ""This notebook uses the ""human-pose-estimation-3d-0001"" model from OpenVINO Open Model Zoo,  to estimate 3D human pose and draw them in 2D screen. Details of the model could be found [here](https://github.com/openvinotoolkit/open_model_zoo/tree/master/models/public/human-pose-estimation-3d-0001). The input source could be video files or webcam. It uses the [Three.js python api](https://pythreejs.readthedocs.io/en/stable/installing.html) to display 3D results in the web browsers. Note that to display the 3D inference results properly, for Windows and Ubuntu, Chrome is recommended to be used as the web browser. While for MacOS, Safari is recommended.""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038663607, 'comment_body': 'Delete ""You can find an introduction to the model [here](https://github.com/openvinotoolkit/open_model_zoo/tree/master/models/public/human-pose-estimation-3d-0001).""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038664041, 'comment_body': 'Because the proper installation of ""pythreejs"" is very important to the succuessful running of your notebook, it is suggested that you could summarze the main points of the steps for installing pythreejs, like ""step1"" , ""step2"".... here to draw people\'s attention on the installation of pythreejs.', 'comment_created': datetime.datetime(2022, 12, 3, 2, 10, 24, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038664803, 'comment_body': 'Suggested changes: ""The Pythreejs extension may not display properly under the Jupyter Notebook for its latest release (2.4.1), so it is recommended to use the Jupyter Lab.', 'comment_created': datetime.datetime(2022, 12, 3, 2, 15, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038665005, 'comment_body': 'Suggested changes: ""he selected model comes from the public directory, which means it must be converted into OpenVINO Intermediate Representation (OpenVINO IR). We use `omz_converter` to convert the ONNX format model to the OpenVINO format model.""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 17, 12, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038665069, 'comment_body': 'Suggested changes: ""he selected model comes from the public directory, which means it must be converted into OpenVINO Intermediate Representation (OpenVINO IR). We use omz_converter to convert the ONNX format model to the OpenVINO IR format.""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038665648, 'comment_body': 'Suggested changes ""First, we initialize the inference engine, OpenVINO Runtime. Then read the network architecture and model weights from the .bin and .xml files to compile them for the desired device. An inference request is then created to infer the compiled model.""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038665813, 'comment_body': 'Suggested changes ""Input of the model is the data of the input image and the outputs are heatmaps, PAF (part affinity fields) and features""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 25, 10, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038666366, 'comment_body': 'Suggestged changes ""Input image or frames captured from video files or live webcam is used as the input  of the 3D model to obtain the output heatmaps, PAF (part affinity fields) and features.""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038666470, 'comment_body': 'Run model inference on the input image.', 'comment_created': datetime.datetime(2022, 12, 3, 2, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038666573, 'comment_body': 'Suggested ""scaled_img: resized image according to the input size of the model \\n""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 31, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038666671, 'comment_body': 'Suggested "" # A set of three inference results is obtained\\n""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038666953, 'comment_body': 'Suggested changes ""We need to define some connections between the joints in advance, so that we can draw the structure of the human body in the result image when obtaining the inference results.\\n"".', 'comment_created': datetime.datetime(2022, 12, 3, 2, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038667239, 'comment_body': 'Suggested changes ""    :param frame: the input image\\n""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038667318, 'comment_body': 'I think engine_3D has been removed from your input parameters.', 'comment_created': datetime.datetime(2022, 12, 3, 2, 39, 5, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1044491854, 'comment_body': ""Let's use pythreejs directly here instead of requirements.txt. This is just one package :)"", 'comment_created': datetime.datetime(2022, 12, 9, 14, 12, 29, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1044492900, 'comment_body': 'Let\'s not skip frames here. Let\'s skip them only for tests. I provided the correct code below.\r\n```suggestion\r\n    ""run_pose_estimation(source=video_path, flip=False, use_popup=False, skip_frames=10)""\r\n```', 'comment_created': datetime.datetime(2022, 12, 9, 14, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1044494147, 'comment_body': 'Please just commit as it is. It will change the behavior only for tests.\r\n```suggestion\r\n   ""metadata"": {\r\n    ""test_replace"": {\r\n     ""skip_frames=10"": ""skip_frames=675""\r\n    }\r\n   },\r\n```', 'comment_created': datetime.datetime(2022, 12, 9, 14, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1053322789, 'comment_body': '```suggestion\r\n    ""This notebook demonstrates live 3D Human Pose Estimation via a webcam with OpenVINO. We utilize the model [human-pose-estimation-3d-0001](https://github.com/openvinotoolkit/open_model_zoo/tree/master/models/public/human-pose-estimation-3d-0001) from [Open Model Zoo](https://github.com/openvinotoolkit/open_model_zoo/). At the end of this notebook, you will see live inference results from your webcam (if available). Alternatively, you can also upload a video file to test out the algorithms.\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053323412, 'comment_body': '```suggestion\r\n    ""**Make sure you have properly installed the [Jupyter extension](https://github.com/jupyter-widgets/pythreejs#jupyterlab) and using Jupyterlab to run the demo as suggested in the README.md**\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 35, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053326267, 'comment_body': '```suggestion\r\n    ""> **NOTE**: _To use the webcam, you must run this Jupyter notebook on a computer with a webcam. If you run on a remote server, the webcam will not work. However, you can still do inference on a video file in the final step. This demo utilizes the Python interface in Three.js integrated with WebGL to process data from the model inference. These results are processed and displayed in the notebook._\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 38, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053327863, 'comment_body': '```suggestion\r\n    ""_To ensure that the results are displayed correctly, we recommend that you run the code in a browser on one of the following operating systems:_  \\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053328079, 'comment_body': '```suggestion\r\n    ""_macOS: Safari_""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 40, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053329258, 'comment_body': '```suggestion\r\n    ""**The Pythreejs extension may not display properly when using the latest Jupyter Notebook release (2.4.1), so it is recommended to use Jupyter Lab instead.**""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 41, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053331558, 'comment_body': '```suggestion\r\n    ""First, we initialize the inference engine, OpenVINO Runtime. Then read the network architecture and model weights from the .bin and .xml files to compile for the desired device. An inference request is then created to infer the compiled model.""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053332657, 'comment_body': '```suggestion\r\n    ""The input to the model is data from the input image and the outputs are heatmaps, PAF (part affinity fields) and features""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 44, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053333861, 'comment_body': '```suggestion\r\n    ""Frames captured from video files or the live webcam are used as the input to the 3D model. This is how we obtain the output heatmaps, PAF (part affinity fields) and features.""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053335144, 'comment_body': '```suggestion\r\n    ""We need to define some connections between the joints in advance, so that we can draw the structure of the human body in the resulting image after obtaining the inference results.\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053336940, 'comment_body': '```suggestion\r\n    ""Using the following method, you can click and move your mouse over the picture on the left to interact.""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053339628, 'comment_body': '```suggestion\r\nThis notebook uses the ""human-pose-estimation-3d-0001"" model from OpenVINO Open Model Zoo, to estimate 3D human pose and represent on a 2D screen. Details of the model can be found [here](https://github.com/openvinotoolkit/open_model_zoo/tree/master/models/public/human-pose-estimation-3d-0001). The input source could be video files or a webcam. It uses the [Three.js](https://pythreejs.readthedocs.io/en/stable/installing.html Python API to display 3D results in a web browser. Note that to display the 3D inference results properly, for Windows and Ubuntu, Chrome is recommended as the web browser. While on macOS, Safari is recommended.\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 51, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053975738, 'comment_body': '```suggestion\r\n Copyright (c) 2022 Intel Corporation\r\n```', 'comment_created': datetime.datetime(2022, 12, 21, 4, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'eaidova', 'type': 'User'}, {'comment_id': 1053976038, 'comment_body': '```suggestion\r\n Copyright (c) 2022 Intel Corporation\r\n```', 'comment_created': datetime.datetime(2022, 12, 21, 4, 38, 56, tzinfo=datetime.timezone.utc), 'commenter': 'eaidova', 'type': 'User'}]","[{'commit_sha': 'bbc50e8d71965b98a64240dcc1f7b97cd58342af', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ee229dd3b6898e33426efab2d0d64644cefb352', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d58145c5e6f90778a4493d006229c03f8a5feb4', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2c9f785d6d15fa46f54d8ef1648d7db0504ed5c', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd4ec2adba62214b4f3645cce093d7d77229cb5', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92731fef8bf11b0482e1b99be932ce4413a19163', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5015f88d831c18f17676434d43ee27eeda5eab6', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae3dd26f2d4051adf2091942be22f84e053bb69', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44ce4ec44c3da72480e0e5ffb5fc63effdfcf463', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '611058d6cb8b570bd8c120d3d6b05a2ac2e13ff1', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42908b108232a063027f8e9937cf76cdf8da8c5f', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f87c67b12805595b3cf1d5bc2e901a060aa326c', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf331dd4301c71910c6ac68c8cc781938bde3346', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4707b3c0a0d1a63dc5842b7735015c11a94f554', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79bdc1cdd3aa204dbe763882178db6a39f144e19', 'committer_username': 'raymondlo84', 'committer_name': 'Raymond Lo', 'committer_email': 'raymondlo84@gmail.com', 'commit_date': datetime.datetime(2012, 5, 9, 1, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd5b8a0ea3e381a2a2f86d91b58c61553d9c959f', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0b03f08f510a25576f93d860a9e144f0fc10cf5', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22e74c2aa0b964385d09af483f96c1e7673158c7', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f042348583db8237294c03cc07a9efd99fa28aa4', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c03c7667890a1f97328feb89ea565270a561f54', 'committer_username': 'raymondlo84', 'committer_name': 'Raymond Lo', 'committer_email': 'raymondlo84@gmail.com', 'commit_date': datetime.datetime(2012, 5, 9, 1, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd9aa946b71fa8ba61e439d68966691d76aba40', 'committer_username': 'raymondlo84', 'committer_name': 'Raymond Lo', 'committer_email': 'raymondlo84@gmail.com', 'commit_date': datetime.datetime(2012, 5, 9, 1, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8704431aca1d3b4a0b73ea9340fa82c1c2a660eb', 'committer_username': 'raymondlo84', 'committer_name': 'Raymond Lo', 'committer_email': 'raymondlo84@gmail.com', 'commit_date': datetime.datetime(2012, 5, 9, 1, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b5645b6b284329bb7731718963e3342857020fb', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5a23a72402c3200ba762f57e2372779f6830936', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db2c7cfba45dc5af331fbb31b40ccefba8d3a692', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a545db76c260bbb799b5c58a7e1eb2749a2c7380', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06c76b19fb9080057ad2e897347a689dc25c0df3', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d318a9cb712b7e2e4ebb88bd5b09b4ab3484d97', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca71078ddcd7c678fb1154f61e6d914351a7c179', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b1fe7e56acf6aaf898705d9ffd72cbaa4132c17', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bdf29ef6c87d9de4d4aeafe7e732359115487d5', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '361909f9e92b70aed4b2c81527e5541dfffbe949', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8451f1fdbb17b077bbd16ab846e122770dc7e74a', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05bc2774e4b9f2124750afb5d9e5a2d38b52dbd0', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7be1fce4d6ca42b2846d1d631e7a9148380acff2', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a2f28661cbce8ce4962249a11465c8bc1248033', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0741112a03d042939f766e8180e3876286badf8d', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ea21c51749a0695048e633fa69c3d56b5524407', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50e6c27410b06e2ee283b7cbecefa4115266021e', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72969619d594edda8c848071732ac216b71d0e6f', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19d8bee1c77a1f3763d69e22c28e134594c4a095', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58486e41d688e717b21894a311671b1e9fd3ef87', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '341d15e011e0cfc0eb37715b0927938c482670ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '90d647795bd3ba9ec522c39c8386376eb6bb2401', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8cfb3d6472426848a42885be390d0b0a34a76af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0f37ccb7963885e1231d2f2f519d05ced0f0c687', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0dcd3039a0d871722e8c5f35371b1b439c8b15d5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fd90bf3379824dbebdaefdccc980dc6d7d541b93', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '44d97fa720bd7df4fcad642ca00853e0501fb685', 'committer_username': 'adrianboguszewski', 'committer_name': 'Adrian Boguszewski', 'committer_email': 'adrian.boguszewski@intel.com', 'commit_date': datetime.datetime(2013, 5, 28, 9, 16, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a5af1527d1ad01a365a35feeef8f742ce69519b', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3890eed29d23fe9fbeb6ac8815364939460c094', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2344a9f77494560a7d3a20af9c0f074e6c950297', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b8344b0310734632887e65301d09de98d82b23c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bb271f63819e0f7fa46fed3e72841da697fb392b', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04a423b51122ad8f11a422feac7c5caf6d36dd89', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a8a2ac210497b6fdc2ef567e4f9148264d07937', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '097894db23f53a012e23b3862ba2d9e8d7db47ea', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db74ccfd48ac4cff15ee80694cf45de2a326849e', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62d85e7937925f876fdc6ec15e994e3cc63eddd6', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f33f94f76cd037aed8c0f43fefcf56a329f7d5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dc0d8f54abb03c00bce4d685f61f2d860f1a9d0d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6f80df8cb6d1b74a7518dc6e2f4a8a76ac54791e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '48bcf91b521a6872a16ef99cc558bd03416d739c', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cbfc6a46dcbf86d7a2f1b0baa02c94605c10d22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bdea21378f5960eb904e65123bffd72170cb705d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fad4f95c73c6a2309514ebd88951082738c0b0aa', 'committer_username': 'adrianboguszewski', 'committer_name': 'Adrian Boguszewski', 'committer_email': 'adrian.boguszewski@intel.com', 'commit_date': datetime.datetime(2013, 5, 28, 9, 16, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8093103a514cf8c6409822e21d492f7721bbff8b', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9ea1fecc842139aa32aa96a1b1798e3e7ee8f4a', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '653635e88398115617c58e8c63b74100eb1cf835', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '692f6f692385a6aa0bfb6bbd667a2eb3026f2158', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bdc94de77b863c6e667976136bab316904bb0047', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03fa54eca0448b88dabc65f0186ba56cfe7f2542', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6d8ccd790f0772ff47d065062e45fa9f858ef50', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b985ae05168c09f7f138924025bf089148e785d', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ce875d38d5b7aef74db3eafefec3e2a94903f91', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5148dc7c177bc35bdd2a8f9e17fa9c99c6110113', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6920fca6e553101c47ab5aac6514b1e6fcfa5b14', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5b483adb3b9a68be5700072c502637389fe6e6c', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56306b21ec9904c983328b027d499f4d7eb7b754', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8de26c12754bd88f3c41187692b45c7e1c09e122', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0fa6ad216c9e011fdace3a738ff504f7b7ddc949', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d4fdd005ff2aa566198f74c29cb137b8d996bc1', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fefda06903b6115e044d371b582dcd189e573e1b', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4da37cb638e6f93471fd7f7b442a9b0a3cb18f53', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3a7b01c0bafe48b8972e30c4f08b495316073c48', 'committer_username': 'adrianboguszewski', 'committer_name': 'Adrian Boguszewski', 'committer_email': 'adrian.boguszewski@intel.com', 'commit_date': datetime.datetime(2013, 5, 28, 9, 16, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8234cd94c043c754bbf2fb65769cfa39c14b368', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7eb0104c83c5aaad6712ad36817a204134359f07', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '176f8234c434d0a32b5d145404830ce2c0b6f6db', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f19dce05b4a2710e99a971dbec51a36aabc1959', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33eb37bc64b5539bfa41ef3b686d81ec8d0cf68a', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f02da7a2850d2fc6a447567ac11df22f9b495e81', 'committer_username': 'eaidova', 'committer_name': 'Ekaterina Aidova', 'committer_email': 'ekaterina.aidova@intel.com', 'commit_date': datetime.datetime(2017, 6, 15, 11, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd793e5121048405fc9992163443ba25b149cce', 'committer_username': 'eaidova', 'committer_name': 'Ekaterina Aidova', 'committer_email': 'ekaterina.aidova@intel.com', 'commit_date': datetime.datetime(2017, 6, 15, 11, 16, tzinfo=datetime.timezone.utc)}]",Rain Park,42672437,,User,,59,,9,1
1019714016,406 Human Pose Estimation 3D,"# 3D Human Pose Estimation with OpenVINO 

This demo contains 3D multi-person pose estimation demo. Intel OpenVINO™ backend can be used for fast inference on CPU. It is based on [Lightweight OpenPose](https://arxiv.org/abs/1811.12004) and [Single-Shot Multi-Person 3D Pose Estimation From Monocular RGB](https://arxiv.org/abs/1712.03453) papers. 
<br>
The implementation of this demo starts with the ideas I originally wrote about in my [blog](https://medium.com/@bagayonghuming/3d-jupyter-notebooks-and-webgl-integration-for-openvino-531784a04a52)
There are two options involved in this pull request. One is to use WebGL, which interacts with the browser, and the other is to use the less dependent OpenCV, which implements a basic 3D visual library.
## 406-human-pose-estimation-3d
![threejs](https://user-images.githubusercontent.com/42672437/183292131-576cc05a-a724-472c-8dc9-f6bc092190bf.gif)
This demo allows you to use the mouse to change the angle of view from which you view an object.

## 406-opencv-human-pose-estimation-3d
![OpenCV](https://user-images.githubusercontent.com/42672437/183285240-4ac00639-ceba-4b65-a783-be66a372ac8e.gif)
This example allows you to use the keyboard to move your camera and press ESC to exit.(You need to set _use_popup=True_ firstly)

",True,606,https://api.github.com/repos/openvinotoolkit/openvino_notebooks/pulls/606,https://github.com/openvinotoolkit/openvino_notebooks/pull/606,closed,1459,5,11,92,34,145,1,1,[{'name': 'new notebook'}],2022-08-08 01:59:12+00:00,2022-12-21 13:27:30+00:00,11705298.0,"135 days, 11:28:18","[{'comment_id': 991881022, 'comment_body': 'Since we have ""402-pose-estimation-webcam"", should we change the name of 406 to ""406-3D-pose-estimation-webcam"" to make the title clearer and consistent with the ""4XX"" series of notebooks that contains webcam?', 'comment_created': datetime.datetime(2022, 10, 11, 6, 54, 11, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 991882510, 'comment_body': 'Suggest to make the description here shorter and consistent with other ""4XX“ notebooks, like ""3D display of human pose estimation with a webcam or video file"".', 'comment_created': datetime.datetime(2022, 10, 11, 6, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 991883248, 'comment_body': '""三为”should be ""三维“', 'comment_created': datetime.datetime(2022, 10, 11, 6, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992198731, 'comment_body': ""what's the use of this command line here? If not, please delete it. If uncomment it could be further used for another purpose, please leave some comments."", 'comment_created': datetime.datetime(2022, 10, 11, 11, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992199095, 'comment_body': 'same here for the commented command line.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 31, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992199320, 'comment_body': 'same here for the commented command line.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992199426, 'comment_body': 'same here for the commented command line.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 31, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992199858, 'comment_body': 'same here for the commented command line and the following 2 lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992200411, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 32, 56, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992200626, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992201913, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992202262, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 34, 41, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992202643, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992203510, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 35, 36, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992204226, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 36, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992204503, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 36, 22, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992204868, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 36, 37, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992206010, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992206362, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992207288, 'comment_body': 'same here for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992210870, 'comment_body': 'Suggested changes : "" This notebook demonstrates a 3D display for human pose estimation with live webcam inferencing with OpenVINO. ""', 'comment_created': datetime.datetime(2022, 10, 11, 11, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992216328, 'comment_body': 'Suggested changes: ""If you want to try another model for pose estimation, please change the model name to what you choose from Open Model Zoo, and precision accordingly.""', 'comment_created': datetime.datetime(2022, 10, 11, 11, 47, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992217145, 'comment_body': 'What does ""PAF"" mean?', 'comment_created': datetime.datetime(2022, 10, 11, 11, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992219213, 'comment_body': 'Suggested changes: ""It could be either a webcam or a video file.""', 'comment_created': datetime.datetime(2022, 10, 11, 11, 50, 58, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992219779, 'comment_body': 'same here with the command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992222983, 'comment_body': ""Please change the description here accordingly. Also, please point out what's the difference between this notebook and the other notebook demo in the same repo, to make it more clearly to the developers."", 'comment_created': datetime.datetime(2022, 10, 11, 11, 54, 19, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 992224307, 'comment_body': 'same for the commented command lines.', 'comment_created': datetime.datetime(2022, 10, 11, 11, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 998268668, 'comment_body': 'Why do we need to reshape the model, but not resizing the input data ? And why should another infer request be created ?', 'comment_created': datetime.datetime(2022, 10, 18, 13, 55, 42, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 998276154, 'comment_body': 'Could you add some comments to explain the usage of these body edges ?  what do they stand for ?', 'comment_created': datetime.datetime(2022, 10, 18, 14, 1, 18, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 998280356, 'comment_body': 'the tables seems be mashed in the notebook', 'comment_created': datetime.datetime(2022, 10, 18, 14, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 998287270, 'comment_body': 'Whats the connection between this words and the code block below for normalization ? Could help to add some notes to explain this isolated code block as well？', 'comment_created': datetime.datetime(2022, 10, 18, 14, 9, 59, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 998293959, 'comment_body': 'Could you help to add some comments to illuminate the difference between these 2 notebooks ?', 'comment_created': datetime.datetime(2022, 10, 18, 14, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 998302271, 'comment_body': ""what's the propose of this notebook ?  Could you help to add a README file or explain more in this notebook ?"", 'comment_created': datetime.datetime(2022, 10, 18, 14, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1000451322, 'comment_body': 'Thank you very much for your review. On this question, I want to reduce the code part of the image data processing. In this notebook, the shape of the model is modified at least once, and it will be recreated only when the shape of the input image changes. First, if the image is compressed in the wrong proportion, the result will be biased, which will increase the code to process the coordinate data later. Second, because the output has three different properties, and get_tensor has the interface to extract what you need very easily.This was also done in the original demo.', 'comment_created': datetime.datetime(2022, 10, 20, 10, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1000517632, 'comment_body': ""Hi thanks for your clarification\r\n1. I believe model reshaping will have impact on its accuracy, maybe this case is not included, but we do not recommend developer to change its height and width dimension;\r\n2. in this case, since the shape of input data is static, wont be changed ？, i think we can resize the input image to fit the model's input requirements. so the 'base_height' shall be equal to model's input shape. and we dont need to create the infer_request twice."", 'comment_created': datetime.datetime(2022, 10, 20, 11, 43, 47, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1000527587, 'comment_body': '```suggestion\r\nThis notebook has 2 examples: \r\n- the [406-3D-pose-estimation notebook](https://github.com/spencergotowork/openvino_notebooks/blob/master/notebooks/406-3D-pose-estimation-webcam/406-3D-pose-estimation.ipynb) displays 3D results to the browser using [Three.js python api](https://pythreejs.readthedocs.io/en/stable/installing.html). \r\n- The [406-opencv-3D-pose-estimation notebook](https://github.com/spencergotowork/openvino_notebooks/blob/master/notebooks/406-3D-pose-estimation-webcam/406-opencv-3D-pose-estimation.ipynb) uses the OpenCV toolkit to map and save the 3D result into a 2D image and display it in the notebook\r\n```', 'comment_created': datetime.datetime(2022, 10, 20, 11, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1000535308, 'comment_body': ""Could you help to design a table to list each notebook's name, introduction and gif example ? to make it more clear for our users.\r\nLike what we did in top README file:\r\nhttps://github.com/openvinotoolkit/openvino_notebooks/edit/main/README.md\r\notherwise users may mismatch the introduction and gif."", 'comment_created': datetime.datetime(2022, 10, 20, 12, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1002852432, 'comment_body': 'Pls help to check and remove the unused variables ', 'comment_created': datetime.datetime(2022, 10, 24, 3, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1002852486, 'comment_body': 'Pls help to check and remove the unused variables ', 'comment_created': datetime.datetime(2022, 10, 24, 3, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1008001329, 'comment_body': ""It shouldn't be here. Your notebook is 406, not 224."", 'comment_created': datetime.datetime(2022, 10, 28, 12, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008002977, 'comment_body': '```suggestion\r\n- The [406-3D-pose-estimation notebook](https://github.com/spencergotowork/openvino_notebooks/blob/master/notebooks/406-3D-pose-estimation-webcam/406-3D-pose-estimation.ipynb) displays 3D results to the browser using [Three.js python api](https://pythreejs.readthedocs.io/en/stable/installing.html). \r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 12, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008006999, 'comment_body': 'These 2 requirements should be in the main requirements.txt file instead of here', 'comment_created': datetime.datetime(2022, 10, 28, 12, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008008171, 'comment_body': '```suggestion\r\n| [401-object-detection-webcam](401-object-detection-webcam/)<br>[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks/HEAD?filepath=notebooks%2F401-object-detection-webcam%2F401-object-detection.ipynb) | [402-pose-estimation-webcam](402-pose-estimation-webcam/)<br>[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks/HEAD?filepath=notebooks%2F402-pose-estimation-webcam%2F402-pose-estimation.ipynb) | [403-action-recognition-webcam](403-action-recognition-webcam/)<br>[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks/HEAD?filepath=notebooks%2F403-action-recognition-webcam%2F403-action-recognition-webcam.ipynb) | [405-paddle-ocr-webcam](405-paddle-ocr-webcam/) | [406-3D-pose-estimation-webcam](406-3D-pose-estimation-webcam/) |\r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 12, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008008558, 'comment_body': 'Add ipywidgets here', 'comment_created': datetime.datetime(2022, 10, 28, 12, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008009258, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 12, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008028164, 'comment_body': 'You don\'t need this variable, you have the same specified in ""base_model_dir""', 'comment_created': datetime.datetime(2022, 10, 28, 12, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008028315, 'comment_body': 'If you don\'t use some parameters like ""precision"", please remove the lines with them instead of commenting out.', 'comment_created': datetime.datetime(2022, 10, 28, 12, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008028635, 'comment_body': 'This var should be specified in the last cell, not here', 'comment_created': datetime.datetime(2022, 10, 28, 12, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008030258, 'comment_body': 'Why is precision commented here?', 'comment_created': datetime.datetime(2022, 10, 28, 12, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008032556, 'comment_body': ""```suggestion\r\n```\r\nThis is unnecessary, you're not changing anything in this function"", 'comment_created': datetime.datetime(2022, 10, 28, 12, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008035039, 'comment_body': 'skip_first_frames cannot be hardcoded here, it must be passed as a parameter. Look at 401-object-detection on how to do it', 'comment_created': datetime.datetime(2022, 10, 28, 12, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008035970, 'comment_body': ""Please don't leave any commented code unless it's justified and explained"", 'comment_created': datetime.datetime(2022, 10, 28, 12, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008036471, 'comment_body': '```suggestion\r\n    ""                # escape = 27, use ESC to exit\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 12, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008037079, 'comment_body': ""Why is this resized here? It causes square image, which doesn't look good"", 'comment_created': datetime.datetime(2022, 10, 28, 12, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008038471, 'comment_body': 'What is line_tmp? Every var should has a meaningful name', 'comment_created': datetime.datetime(2022, 10, 28, 12, 59, 57, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008039386, 'comment_body': ""This doesn't work for Linux - there is an error"", 'comment_created': datetime.datetime(2022, 10, 28, 13, 0, 45, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008040969, 'comment_body': ""It cannot be skipped from tests. 401 nor 402 don't skip this cell and tests pass."", 'comment_created': datetime.datetime(2022, 10, 28, 13, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008041082, 'comment_body': ""It cannot be skipped from tests. 401 nor 402 don't skip this cell and tests pass."", 'comment_created': datetime.datetime(2022, 10, 28, 13, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008046757, 'comment_body': '```suggestion\r\n    ""> NOTE: _To use the webcam, you must run this Jupyter notebook on a computer with a webcam. If you run on a server, the webcam will not work. However, you can still do inference on a video in the final step. This notebook implements the rendering pipeline with OpenCV and provides some interfaces to handle geometry vertex data. And display the processed result in the notebook._""\r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 13, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008050138, 'comment_body': 'Why not markdown table?', 'comment_created': datetime.datetime(2022, 10, 28, 13, 12, 2, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1008051848, 'comment_body': ""It should run in a popup every time. Otherwise, the control keys don't work. The webcam should be also in a popup if possible."", 'comment_created': datetime.datetime(2022, 10, 28, 13, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1009394914, 'comment_body': 'Yes, there is no problem on jupyter lab, but the [wrong formatting](https://github.com/openvinotoolkit/openvino_notebooks/pull/606#discussion_r998280356) on jupyter notebook. It is a bug, the recommended method is to use dom <table>.', 'comment_created': datetime.datetime(2022, 10, 31, 13, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1009398313, 'comment_body': 'I found that there is already this package at the [beginning of this file](https://github.com/spencergotowork/openvino_notebooks/blob/master/requirements.txt#L9), do I need to move it to the bottom of pythreejs in the file?', 'comment_created': datetime.datetime(2022, 10, 31, 13, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1033159578, 'comment_body': 'Suggested modification: ""This demo contains 3D multi-person pose estimation demo. Intel OpenVINO™ can be used to accelerate the inference on multiple devices, such as CPU, GPU and VPU. The model used in this demo is based on [Lightweight OpenPose](https://arxiv.org/abs/1811.12004) and [Single-Shot Multi-Person 3D Pose Estimation From Monocular RGB](https://arxiv.org/abs/1712.03453) papers. It detects 2D coordinates of up to 18 types of keypoints: ears, eyes, nose, neck, shoulders, elbows, wrists, hips, knees, and ankles, as well as their 3D coordinates. These 3D coordinates of the keypoints could be used to construct the 3D display of the human poses. Also, this 3D display method could be extended to display other 3D models...""', 'comment_created': datetime.datetime(2022, 11, 28, 6, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1033162310, 'comment_body': 'Please use docstring and type hints.', 'comment_created': datetime.datetime(2022, 11, 28, 6, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1033162455, 'comment_body': 'Please use docstring and type hints.', 'comment_created': datetime.datetime(2022, 11, 28, 6, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1033162528, 'comment_body': 'Please use docstring and type hints.', 'comment_created': datetime.datetime(2022, 11, 28, 6, 20, 46, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1033532215, 'comment_body': 'I assume this was committed by a mistake. It should be reverted to the previous state (main branch)', 'comment_created': datetime.datetime(2022, 11, 28, 13, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033532435, 'comment_body': 'I assume this was committed by a mistake. It should be reverted to the previous state (main branch)', 'comment_created': datetime.datetime(2022, 11, 28, 13, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033534328, 'comment_body': ""It should go to a new table which is introduced in #676. Let's wait for merging that PR before"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 20, 47, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033534588, 'comment_body': ""It should go to a new table which is introduced in #676. Let's wait for merging that PR before"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033535263, 'comment_body': ""It should go to a new table which is introduced in #676. Let's wait for merging that PR before"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033536520, 'comment_body': 'This binder link is incorrect. Please remove it. We will add the proper one later.', 'comment_created': datetime.datetime(2022, 11, 28, 13, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033539558, 'comment_body': ""Add additionally that these extensions don't work with Jupyter Notebook and Jupyter Lab must be used instead."", 'comment_created': datetime.datetime(2022, 11, 28, 13, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033541578, 'comment_body': 'This object should be created just before the first usage (before run_pose_estimation function)', 'comment_created': datetime.datetime(2022, 11, 28, 13, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033542910, 'comment_body': 'Is there any other model we could use? If not this sentence is unnecessary.', 'comment_created': datetime.datetime(2022, 11, 28, 13, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033546391, 'comment_body': 'Is onnx path really needed?', 'comment_created': datetime.datetime(2022, 11, 28, 13, 32, 14, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033546736, 'comment_body': ""Shouldn't be ir_model_path here?"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033547778, 'comment_body': '```suggestion\r\n    ""Only a few lines of code are required to run the model. First, we initialize the Inference Engine. Then we read the network architecture and model weights from the .bin and .xml files to compile them for the desired device. Creates an inference request object used to infer the compiled model. The created request has allocated input and output tensors.""\r\n```', 'comment_created': datetime.datetime(2022, 11, 28, 13, 33, 31, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033548933, 'comment_body': '```suggestion\r\n    ""The input is image data and the outputs are heatmaps, PAF (part affinity fields) and features""\r\n```', 'comment_created': datetime.datetime(2022, 11, 28, 13, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033549406, 'comment_body': '```suggestion\r\n    ""The image data is used as the input of the model to obtain the output heatmaps, PAF (part affinity fields) and features.""\r\n```', 'comment_created': datetime.datetime(2022, 11, 28, 13, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033551170, 'comment_body': ""If there is only one engine we don't have to pass it as a argument"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 36, 39, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033554468, 'comment_body': ""Please don't change popup size"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033556199, 'comment_body': 'Make the widget bigger if possible', 'comment_created': datetime.datetime(2022, 11, 28, 13, 41, 21, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033557133, 'comment_body': 'Rename it for something more meaningful e.g. focal_length', 'comment_created': datetime.datetime(2022, 11, 28, 13, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033560395, 'comment_body': ""I think it should be based on frame width instead of scaled_img, shouldn't it?"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 45, 5, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033561159, 'comment_body': 'Time should be measured only for inference', 'comment_created': datetime.datetime(2022, 11, 28, 13, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033563734, 'comment_body': ""Please don't change size of image"", 'comment_created': datetime.datetime(2022, 11, 28, 13, 48, 15, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033564037, 'comment_body': 'Draw on frame, not on scaled_img', 'comment_created': datetime.datetime(2022, 11, 28, 13, 48, 28, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1033564719, 'comment_body': 'Draw on frame, not scaled image', 'comment_created': datetime.datetime(2022, 11, 28, 13, 49, 5, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1034256261, 'comment_body': 'The process here is to convert pth model file to onnx and then to IR files. So the *onnx_path* variable records the location of the onnx file.', 'comment_created': datetime.datetime(2022, 11, 29, 3, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1034268245, 'comment_body': ""Yeah, it's actually restoring the original frame size, which we talked about [here](https://github.com/openvinotoolkit/openvino_notebooks/pull/606#discussion_r998268668). As mentioned in the notebook, it's not appropriate to change the size of the model input shape, so I had to change the original frame size and restore it later."", 'comment_created': datetime.datetime(2022, 11, 29, 3, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1034275353, 'comment_body': 'Here we treat scaled_img as frame because we cannot change the size of the input data defined in the model', 'comment_created': datetime.datetime(2022, 11, 29, 3, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1034628696, 'comment_body': 'Then ok', 'comment_created': datetime.datetime(2022, 11, 29, 11, 25, 2, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1034635518, 'comment_body': 'Yes. You should change the image size, but it should be like the following:\r\n1. You create a frame copy and resize it to fit the neural network input size (scaled image)\r\n2. You predict on the scaled image \r\n3. You scale the results (not the image) back to fit the original frame size\r\n4. You draw on the original frame\r\n\r\nOtherwise, the final image is warped, what I can observe now.', 'comment_created': datetime.datetime(2022, 11, 29, 11, 32, 28, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035581833, 'comment_body': 'will we use this function in our main loop ?', 'comment_created': datetime.datetime(2022, 11, 30, 6, 44, 15, tzinfo=datetime.timezone.utc), 'commenter': 'openvino-dev-samples', 'type': 'User'}, {'comment_id': 1035756075, 'comment_body': 'Removed, thanks', 'comment_created': datetime.datetime(2022, 11, 30, 9, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1035977069, 'comment_body': '```suggestion\r\n    ""**The Pythreejs extension may not display properly under the Jupyter Notebook now, so use the Jupyter Lab.**""\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035982948, 'comment_body': '```suggestion\r\n    ""Only a few lines of code are required to run the model. First, we initialize the Inference Engine. Then we read the network architecture and model weights from the .bin and .xml files to compile them for the desired device. We create an inference request object used to infer the compiled model. The created request has allocated input and output tensors.""\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 40, 59, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035983958, 'comment_body': '```suggestion\r\n    ""    Do the inference on the image\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035985341, 'comment_body': '```suggestion\r\n    ""### Main Processing Function\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 43, 1, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035992008, 'comment_body': '```suggestion\r\n    ""run_pose_estimation(source=0, flip=True, use_popup=False)""\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 48, 58, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035995511, 'comment_body': 'Why only for popups? It should be scaled anyway', 'comment_created': datetime.datetime(2022, 11, 30, 13, 52, 3, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035996158, 'comment_body': 'Url should be in the cell below', 'comment_created': datetime.datetime(2022, 11, 30, 13, 52, 33, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1035999615, 'comment_body': '```suggestion\r\n    ""video_path = \\""https://github.com/intel-iot-devkit/sample-videos/raw/master/face-demographics-walking.mp4\\""""\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 13, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1036265094, 'comment_body': '```suggestion\r\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks.git/master?labpath=notebooks%2F406-3D-pose-estimation-webcam%2F406-3D-pose-estimation.ipynb)\r\n```', 'comment_created': datetime.datetime(2022, 11, 30, 17, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1036265605, 'comment_body': 'These changes cannot be comitted', 'comment_created': datetime.datetime(2022, 11, 30, 17, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1036265750, 'comment_body': 'These changes cannot be comitted', 'comment_created': datetime.datetime(2022, 11, 30, 17, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1036617444, 'comment_body': ""Thanks, I think it's because there is a problem with my vscode, when I saved it and vscode restored it to the original state."", 'comment_created': datetime.datetime(2022, 12, 1, 1, 53, 25, tzinfo=datetime.timezone.utc), 'commenter': 'spencergotowork', 'type': 'User'}, {'comment_id': 1037095614, 'comment_body': '```suggestion\r\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks.git/main?labpath=notebooks%2F406-3D-pose-estimation-webcam%2F406-3D-pose-estimation.ipynb)\r\n```', 'comment_created': datetime.datetime(2022, 12, 1, 13, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1037112616, 'comment_body': 'Let\'s make it even bigger :)\r\n```suggestion\r\n    ""    windows_height = 600\\n"",\r\n    ""    windows_width = 800\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 1, 13, 32, 52, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1038661332, 'comment_body': 'We have merged notebook 404 into ""main"". Please commit your new changes on that.', 'comment_created': datetime.datetime(2022, 12, 3, 1, 47, 32, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038662445, 'comment_body': 'Suggested changes: ""This notebook contains a 3D multi-person pose estimation demo.The model used in this demo is based on [Lightweight OpenPose](https://arxiv.org/abs/1811.12004) and [Single-Shot Multi-Person 3D Pose Estimation From Monocular RGB](https://arxiv.org/abs/1712.03453). It detects 2D coordinates of up to 18 types of keypoints: ears, eyes, nose, neck, shoulders, elbows, wrists, hips, knees, and ankles, as well as their 3D coordinates, which could then be used to construct the 3D display of human poses.  OpenVINO™ is used to accelerate the inference on multiple devices, such as CPU, GPU and VPU.  Also, this 3D display method could be extended to display the inference results of other 3D models without much effort.""', 'comment_created': datetime.datetime(2022, 12, 3, 1, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038663565, 'comment_body': 'Suggested changes: ""This notebook uses the ""human-pose-estimation-3d-0001"" model from OpenVINO Open Model Zoo,  to estimate 3D human pose and draw them in 2D screen. Details of the model could be found [here](https://github.com/openvinotoolkit/open_model_zoo/tree/master/models/public/human-pose-estimation-3d-0001). The input source could be video files or webcam. It uses the [Three.js python api](https://pythreejs.readthedocs.io/en/stable/installing.html) to display 3D results in the web browsers. Note that to display the 3D inference results properly, for Windows and Ubuntu, Chrome is recommended to be used as the web browser. While for MacOS, Safari is recommended.""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038663607, 'comment_body': 'Delete ""You can find an introduction to the model [here](https://github.com/openvinotoolkit/open_model_zoo/tree/master/models/public/human-pose-estimation-3d-0001).""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038664041, 'comment_body': 'Because the proper installation of ""pythreejs"" is very important to the succuessful running of your notebook, it is suggested that you could summarze the main points of the steps for installing pythreejs, like ""step1"" , ""step2"".... here to draw people\'s attention on the installation of pythreejs.', 'comment_created': datetime.datetime(2022, 12, 3, 2, 10, 24, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038664803, 'comment_body': 'Suggested changes: ""The Pythreejs extension may not display properly under the Jupyter Notebook for its latest release (2.4.1), so it is recommended to use the Jupyter Lab.', 'comment_created': datetime.datetime(2022, 12, 3, 2, 15, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038665005, 'comment_body': 'Suggested changes: ""he selected model comes from the public directory, which means it must be converted into OpenVINO Intermediate Representation (OpenVINO IR). We use `omz_converter` to convert the ONNX format model to the OpenVINO format model.""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 17, 12, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038665069, 'comment_body': 'Suggested changes: ""he selected model comes from the public directory, which means it must be converted into OpenVINO Intermediate Representation (OpenVINO IR). We use omz_converter to convert the ONNX format model to the OpenVINO IR format.""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038665648, 'comment_body': 'Suggested changes ""First, we initialize the inference engine, OpenVINO Runtime. Then read the network architecture and model weights from the .bin and .xml files to compile them for the desired device. An inference request is then created to infer the compiled model.""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038665813, 'comment_body': 'Suggested changes ""Input of the model is the data of the input image and the outputs are heatmaps, PAF (part affinity fields) and features""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 25, 10, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038666366, 'comment_body': 'Suggestged changes ""Input image or frames captured from video files or live webcam is used as the input  of the 3D model to obtain the output heatmaps, PAF (part affinity fields) and features.""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038666470, 'comment_body': 'Run model inference on the input image.', 'comment_created': datetime.datetime(2022, 12, 3, 2, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038666573, 'comment_body': 'Suggested ""scaled_img: resized image according to the input size of the model \\n""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 31, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038666671, 'comment_body': 'Suggested "" # A set of three inference results is obtained\\n""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038666953, 'comment_body': 'Suggested changes ""We need to define some connections between the joints in advance, so that we can draw the structure of the human body in the result image when obtaining the inference results.\\n"".', 'comment_created': datetime.datetime(2022, 12, 3, 2, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038667239, 'comment_body': 'Suggested changes ""    :param frame: the input image\\n""', 'comment_created': datetime.datetime(2022, 12, 3, 2, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1038667318, 'comment_body': 'I think engine_3D has been removed from your input parameters.', 'comment_created': datetime.datetime(2022, 12, 3, 2, 39, 5, tzinfo=datetime.timezone.utc), 'commenter': 'zhuo-yoyowz', 'type': 'User'}, {'comment_id': 1044491854, 'comment_body': ""Let's use pythreejs directly here instead of requirements.txt. This is just one package :)"", 'comment_created': datetime.datetime(2022, 12, 9, 14, 12, 29, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1044492900, 'comment_body': 'Let\'s not skip frames here. Let\'s skip them only for tests. I provided the correct code below.\r\n```suggestion\r\n    ""run_pose_estimation(source=video_path, flip=False, use_popup=False, skip_frames=10)""\r\n```', 'comment_created': datetime.datetime(2022, 12, 9, 14, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1044494147, 'comment_body': 'Please just commit as it is. It will change the behavior only for tests.\r\n```suggestion\r\n   ""metadata"": {\r\n    ""test_replace"": {\r\n     ""skip_frames=10"": ""skip_frames=675""\r\n    }\r\n   },\r\n```', 'comment_created': datetime.datetime(2022, 12, 9, 14, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'adrianboguszewski', 'type': 'User'}, {'comment_id': 1053322789, 'comment_body': '```suggestion\r\n    ""This notebook demonstrates live 3D Human Pose Estimation via a webcam with OpenVINO. We utilize the model [human-pose-estimation-3d-0001](https://github.com/openvinotoolkit/open_model_zoo/tree/master/models/public/human-pose-estimation-3d-0001) from [Open Model Zoo](https://github.com/openvinotoolkit/open_model_zoo/). At the end of this notebook, you will see live inference results from your webcam (if available). Alternatively, you can also upload a video file to test out the algorithms.\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053323412, 'comment_body': '```suggestion\r\n    ""**Make sure you have properly installed the [Jupyter extension](https://github.com/jupyter-widgets/pythreejs#jupyterlab) and using Jupyterlab to run the demo as suggested in the README.md**\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 35, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053326267, 'comment_body': '```suggestion\r\n    ""> **NOTE**: _To use the webcam, you must run this Jupyter notebook on a computer with a webcam. If you run on a remote server, the webcam will not work. However, you can still do inference on a video file in the final step. This demo utilizes the Python interface in Three.js integrated with WebGL to process data from the model inference. These results are processed and displayed in the notebook._\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 38, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053327863, 'comment_body': '```suggestion\r\n    ""_To ensure that the results are displayed correctly, we recommend that you run the code in a browser on one of the following operating systems:_  \\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053328079, 'comment_body': '```suggestion\r\n    ""_macOS: Safari_""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 40, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053329258, 'comment_body': '```suggestion\r\n    ""**The Pythreejs extension may not display properly when using the latest Jupyter Notebook release (2.4.1), so it is recommended to use Jupyter Lab instead.**""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 41, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053331558, 'comment_body': '```suggestion\r\n    ""First, we initialize the inference engine, OpenVINO Runtime. Then read the network architecture and model weights from the .bin and .xml files to compile for the desired device. An inference request is then created to infer the compiled model.""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053332657, 'comment_body': '```suggestion\r\n    ""The input to the model is data from the input image and the outputs are heatmaps, PAF (part affinity fields) and features""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 44, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053333861, 'comment_body': '```suggestion\r\n    ""Frames captured from video files or the live webcam are used as the input to the 3D model. This is how we obtain the output heatmaps, PAF (part affinity fields) and features.""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053335144, 'comment_body': '```suggestion\r\n    ""We need to define some connections between the joints in advance, so that we can draw the structure of the human body in the resulting image after obtaining the inference results.\\n"",\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053336940, 'comment_body': '```suggestion\r\n    ""Using the following method, you can click and move your mouse over the picture on the left to interact.""\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053339628, 'comment_body': '```suggestion\r\nThis notebook uses the ""human-pose-estimation-3d-0001"" model from OpenVINO Open Model Zoo, to estimate 3D human pose and represent on a 2D screen. Details of the model can be found [here](https://github.com/openvinotoolkit/open_model_zoo/tree/master/models/public/human-pose-estimation-3d-0001). The input source could be video files or a webcam. It uses the [Three.js](https://pythreejs.readthedocs.io/en/stable/installing.html Python API to display 3D results in a web browser. Note that to display the 3D inference results properly, for Windows and Ubuntu, Chrome is recommended as the web browser. While on macOS, Safari is recommended.\r\n```', 'comment_created': datetime.datetime(2022, 12, 20, 13, 51, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ryanloney', 'type': 'User'}, {'comment_id': 1053975738, 'comment_body': '```suggestion\r\n Copyright (c) 2022 Intel Corporation\r\n```', 'comment_created': datetime.datetime(2022, 12, 21, 4, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'eaidova', 'type': 'User'}, {'comment_id': 1053976038, 'comment_body': '```suggestion\r\n Copyright (c) 2022 Intel Corporation\r\n```', 'comment_created': datetime.datetime(2022, 12, 21, 4, 38, 56, tzinfo=datetime.timezone.utc), 'commenter': 'eaidova', 'type': 'User'}]","[{'commit_sha': 'bbc50e8d71965b98a64240dcc1f7b97cd58342af', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ee229dd3b6898e33426efab2d0d64644cefb352', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d58145c5e6f90778a4493d006229c03f8a5feb4', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2c9f785d6d15fa46f54d8ef1648d7db0504ed5c', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd4ec2adba62214b4f3645cce093d7d77229cb5', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92731fef8bf11b0482e1b99be932ce4413a19163', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5015f88d831c18f17676434d43ee27eeda5eab6', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae3dd26f2d4051adf2091942be22f84e053bb69', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44ce4ec44c3da72480e0e5ffb5fc63effdfcf463', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '611058d6cb8b570bd8c120d3d6b05a2ac2e13ff1', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42908b108232a063027f8e9937cf76cdf8da8c5f', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f87c67b12805595b3cf1d5bc2e901a060aa326c', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf331dd4301c71910c6ac68c8cc781938bde3346', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4707b3c0a0d1a63dc5842b7735015c11a94f554', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79bdc1cdd3aa204dbe763882178db6a39f144e19', 'committer_username': 'raymondlo84', 'committer_name': 'Raymond Lo', 'committer_email': 'raymondlo84@gmail.com', 'commit_date': datetime.datetime(2012, 5, 9, 1, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd5b8a0ea3e381a2a2f86d91b58c61553d9c959f', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0b03f08f510a25576f93d860a9e144f0fc10cf5', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22e74c2aa0b964385d09af483f96c1e7673158c7', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f042348583db8237294c03cc07a9efd99fa28aa4', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c03c7667890a1f97328feb89ea565270a561f54', 'committer_username': 'raymondlo84', 'committer_name': 'Raymond Lo', 'committer_email': 'raymondlo84@gmail.com', 'commit_date': datetime.datetime(2012, 5, 9, 1, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd9aa946b71fa8ba61e439d68966691d76aba40', 'committer_username': 'raymondlo84', 'committer_name': 'Raymond Lo', 'committer_email': 'raymondlo84@gmail.com', 'commit_date': datetime.datetime(2012, 5, 9, 1, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8704431aca1d3b4a0b73ea9340fa82c1c2a660eb', 'committer_username': 'raymondlo84', 'committer_name': 'Raymond Lo', 'committer_email': 'raymondlo84@gmail.com', 'commit_date': datetime.datetime(2012, 5, 9, 1, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b5645b6b284329bb7731718963e3342857020fb', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5a23a72402c3200ba762f57e2372779f6830936', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db2c7cfba45dc5af331fbb31b40ccefba8d3a692', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a545db76c260bbb799b5c58a7e1eb2749a2c7380', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06c76b19fb9080057ad2e897347a689dc25c0df3', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d318a9cb712b7e2e4ebb88bd5b09b4ab3484d97', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca71078ddcd7c678fb1154f61e6d914351a7c179', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b1fe7e56acf6aaf898705d9ffd72cbaa4132c17', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bdf29ef6c87d9de4d4aeafe7e732359115487d5', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '361909f9e92b70aed4b2c81527e5541dfffbe949', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8451f1fdbb17b077bbd16ab846e122770dc7e74a', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05bc2774e4b9f2124750afb5d9e5a2d38b52dbd0', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7be1fce4d6ca42b2846d1d631e7a9148380acff2', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a2f28661cbce8ce4962249a11465c8bc1248033', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0741112a03d042939f766e8180e3876286badf8d', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ea21c51749a0695048e633fa69c3d56b5524407', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50e6c27410b06e2ee283b7cbecefa4115266021e', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72969619d594edda8c848071732ac216b71d0e6f', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19d8bee1c77a1f3763d69e22c28e134594c4a095', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58486e41d688e717b21894a311671b1e9fd3ef87', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '341d15e011e0cfc0eb37715b0927938c482670ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '90d647795bd3ba9ec522c39c8386376eb6bb2401', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8cfb3d6472426848a42885be390d0b0a34a76af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0f37ccb7963885e1231d2f2f519d05ced0f0c687', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0dcd3039a0d871722e8c5f35371b1b439c8b15d5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fd90bf3379824dbebdaefdccc980dc6d7d541b93', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '44d97fa720bd7df4fcad642ca00853e0501fb685', 'committer_username': 'adrianboguszewski', 'committer_name': 'Adrian Boguszewski', 'committer_email': 'adrian.boguszewski@intel.com', 'commit_date': datetime.datetime(2013, 5, 28, 9, 16, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a5af1527d1ad01a365a35feeef8f742ce69519b', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3890eed29d23fe9fbeb6ac8815364939460c094', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2344a9f77494560a7d3a20af9c0f074e6c950297', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b8344b0310734632887e65301d09de98d82b23c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bb271f63819e0f7fa46fed3e72841da697fb392b', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04a423b51122ad8f11a422feac7c5caf6d36dd89', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a8a2ac210497b6fdc2ef567e4f9148264d07937', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '097894db23f53a012e23b3862ba2d9e8d7db47ea', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db74ccfd48ac4cff15ee80694cf45de2a326849e', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62d85e7937925f876fdc6ec15e994e3cc63eddd6', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f33f94f76cd037aed8c0f43fefcf56a329f7d5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dc0d8f54abb03c00bce4d685f61f2d860f1a9d0d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6f80df8cb6d1b74a7518dc6e2f4a8a76ac54791e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '48bcf91b521a6872a16ef99cc558bd03416d739c', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cbfc6a46dcbf86d7a2f1b0baa02c94605c10d22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bdea21378f5960eb904e65123bffd72170cb705d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fad4f95c73c6a2309514ebd88951082738c0b0aa', 'committer_username': 'adrianboguszewski', 'committer_name': 'Adrian Boguszewski', 'committer_email': 'adrian.boguszewski@intel.com', 'commit_date': datetime.datetime(2013, 5, 28, 9, 16, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8093103a514cf8c6409822e21d492f7721bbff8b', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9ea1fecc842139aa32aa96a1b1798e3e7ee8f4a', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '653635e88398115617c58e8c63b74100eb1cf835', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '692f6f692385a6aa0bfb6bbd667a2eb3026f2158', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bdc94de77b863c6e667976136bab316904bb0047', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03fa54eca0448b88dabc65f0186ba56cfe7f2542', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6d8ccd790f0772ff47d065062e45fa9f858ef50', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b985ae05168c09f7f138924025bf089148e785d', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ce875d38d5b7aef74db3eafefec3e2a94903f91', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5148dc7c177bc35bdd2a8f9e17fa9c99c6110113', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6920fca6e553101c47ab5aac6514b1e6fcfa5b14', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5b483adb3b9a68be5700072c502637389fe6e6c', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56306b21ec9904c983328b027d499f4d7eb7b754', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8de26c12754bd88f3c41187692b45c7e1c09e122', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0fa6ad216c9e011fdace3a738ff504f7b7ddc949', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d4fdd005ff2aa566198f74c29cb137b8d996bc1', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fefda06903b6115e044d371b582dcd189e573e1b', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4da37cb638e6f93471fd7f7b442a9b0a3cb18f53', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3a7b01c0bafe48b8972e30c4f08b495316073c48', 'committer_username': 'adrianboguszewski', 'committer_name': 'Adrian Boguszewski', 'committer_email': 'adrian.boguszewski@intel.com', 'commit_date': datetime.datetime(2013, 5, 28, 9, 16, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8234cd94c043c754bbf2fb65769cfa39c14b368', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7eb0104c83c5aaad6712ad36817a204134359f07', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '176f8234c434d0a32b5d145404830ce2c0b6f6db', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f19dce05b4a2710e99a971dbec51a36aabc1959', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33eb37bc64b5539bfa41ef3b686d81ec8d0cf68a', 'committer_username': 'spencergotowork', 'committer_name': 'Rain Park', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 24, 11, 12, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f02da7a2850d2fc6a447567ac11df22f9b495e81', 'committer_username': 'eaidova', 'committer_name': 'Ekaterina Aidova', 'committer_email': 'ekaterina.aidova@intel.com', 'commit_date': datetime.datetime(2017, 6, 15, 11, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd793e5121048405fc9992163443ba25b149cce', 'committer_username': 'eaidova', 'committer_name': 'Ekaterina Aidova', 'committer_email': 'ekaterina.aidova@intel.com', 'commit_date': datetime.datetime(2017, 6, 15, 11, 16, tzinfo=datetime.timezone.utc)}]",Rain Park,42672437,,User,,59,,9,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
346639494,openvino_notebooks,openvinotoolkit/openvino_notebooks,Jupyter Notebook,787,2263,52,114,1894,19,18,5,"[{'id': 1093712326, 'number': 650, 'closed': datetime.datetime(2022, 10, 20, 12, 21, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 20, 12, 20, 55, tzinfo=datetime.timezone.utc), 'time_taken': 36.0, 'time_delta': '0:00:36', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1019714016, 'number': 606, 'closed': datetime.datetime(2022, 12, 21, 13, 27, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 8, 1, 59, 12, tzinfo=datetime.timezone.utc), 'time_taken': 11705298.0, 'time_delta': '135 days, 11:28:18', 'additions': 1459, 'deletions': 5, 'state': 'closed'}, {'id': 891032669, 'number': 508, 'closed': datetime.datetime(2022, 5, 11, 15, 53, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 27, 13, 21, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3897143.0, 'time_delta': '45 days, 2:32:23', 'additions': 78004, 'deletions': 11051, 'state': 'closed'}, {'id': 890891540, 'number': 505, 'closed': datetime.datetime(2022, 3, 27, 5, 46, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 27, 5, 44, 7, tzinfo=datetime.timezone.utc), 'time_taken': 127.0, 'time_delta': '0:02:07', 'additions': 771, 'deletions': 21, 'state': 'closed'}]"
