pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1406327128,merge baseurl and pattern for scraper clients,"as things are right now, while defining scraper-based dataretriever clients, the `baseurl` which we send to scraper, is a pattern in the strftime format and we also require a second `pattern` string which is the same thing but formatted in the `parse` format.
What this PR does is change this to requiring only one full parse-formatted `pattern` in the scraper and generating the strftime formatted `timepattern` from it.

Having the new parse-format `pattern` around will also help considerably help simplifying many existing functions like `_extractDateURL()` which are using regex for parsing and help with #4888.

closes #7073 

This PR is part of my Google Summer of Code 2023 project.",True,7077,https://api.github.com/repos/sunpy/sunpy/pulls/7077,https://github.com/sunpy/sunpy/pull/7077,closed,542,541,15,87,10,73,1,0,[{'name': 'net'}],2023-06-24 19:30:07+00:00,2023-10-09 20:09:48+00:00,9247181.0,"107 days, 0:39:41","[{'comment_id': 1251367675, 'comment_body': 'How does this work?', 'comment_created': datetime.datetime(2023, 7, 4, 0, 54, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1251368358, 'comment_body': 'We should remove the regex keyword if we plan for it to do nothing.', 'comment_created': datetime.datetime(2023, 7, 4, 0, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1252154649, 'comment_body': 'that was left in there by mistake, fixed it :100: ', 'comment_created': datetime.datetime(2023, 7, 4, 15, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1252154902, 'comment_body': 'yes, somehow missed that', 'comment_created': datetime.datetime(2023, 7, 4, 15, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1254686841, 'comment_body': 'This could be simplified to:\r\n```suggestion\r\n        return parse(self.pattern, url)\r\n```', 'comment_created': datetime.datetime(2023, 7, 6, 16, 44, 47, tzinfo=datetime.timezone.utc), 'commenter': 'dpshelio', 'type': 'User'}, {'comment_id': 1254687692, 'comment_body': 'I would be sorprised if any instrument/site uses a 12h format... and if so, this would need a way to input am/pm too.', 'comment_created': datetime.datetime(2023, 7, 6, 16, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dpshelio', 'type': 'User'}, {'comment_id': 1254691154, 'comment_body': '`%M` references to minutes, no months.', 'comment_created': datetime.datetime(2023, 7, 6, 16, 49, 17, tzinfo=datetime.timezone.utc), 'commenter': 'dpshelio', 'type': 'User'}, {'comment_id': 1257267493, 'comment_body': 'i knew i was missing a really cleaner way to do this, thanks!', 'comment_created': datetime.datetime(2023, 7, 8, 13, 26, 3, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1261114315, 'comment_body': '@Cadair how do you feel about this? ', 'comment_created': datetime.datetime(2023, 7, 12, 12, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271369431, 'comment_body': 'Does this happen in any of our current sources?', 'comment_created': datetime.datetime(2023, 7, 23, 2, 2, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271369564, 'comment_body': 'Do we need this method if all it calls is parse with a url? ', 'comment_created': datetime.datetime(2023, 7, 23, 2, 4, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271369892, 'comment_body': 'Just to check, if we wanted to make the scraper end its time range back at the previous day (like it is now), is this the only change we would need to undo?', 'comment_created': datetime.datetime(2023, 7, 23, 2, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271369939, 'comment_body': 'What client would hit this code block?', 'comment_created': datetime.datetime(2023, 7, 23, 2, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271369976, 'comment_body': '%I refers to what pattern?', 'comment_created': datetime.datetime(2023, 7, 23, 2, 9, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271369984, 'comment_body': 'Does a client hit this block of code?', 'comment_created': datetime.datetime(2023, 7, 23, 2, 9, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271370091, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 7, 23, 2, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271370132, 'comment_body': 'Is there a reason to define this here?', 'comment_created': datetime.datetime(2023, 7, 23, 2, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271370170, 'comment_body': 'This I think should be moved outside of the scarper class. ', 'comment_created': datetime.datetime(2023, 7, 23, 2, 10, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271371090, 'comment_body': 'yes, for example [here](https://github.com/sunpy/sunpy/blob/813592baab6181288d8d50d6676d585374554960/sunpy/net/tests/test_scraper.py#L255).', 'comment_created': datetime.datetime(2023, 7, 23, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1271371257, 'comment_body': ""i don't think we do, i wanted to just confirm since it does add slightly in terms of readability "", 'comment_created': datetime.datetime(2023, 7, 23, 2, 28, 21, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1271371264, 'comment_body': 'yes!', 'comment_created': datetime.datetime(2023, 7, 23, 2, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1271371533, 'comment_body': ""I've only come across clients only having the `month_name_abbr` / %b representation and no `month` / %m representation [here](https://github.com/sunpy/sunpy/blob/813592baab6181288d8d50d6676d585374554960/sunpy/net/tests/test_scraper.py#L198) and [here](https://github.com/sunpy/sunpy/blob/813592baab6181288d8d50d6676d585374554960/sunpy/net/tests/test_scraper.py#L65) .\r\n\r\nHaven't come across any just for the `month_name` condition so far."", 'comment_created': datetime.datetime(2023, 7, 23, 2, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1271371769, 'comment_body': '12-hour format hours as zero-padded decimal numbers as in 01, 02, ..., 12', 'comment_created': datetime.datetime(2023, 7, 23, 2, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1271372166, 'comment_body': 'yes, the [STEREO HET](https://github.com/sunpy/sunpy/blob/813592baab6181288d8d50d6676d585374554960/sunpy/net/tests/test_scraper.py#L198), the files look like [this](https://izw1.caltech.edu/STEREO/DATA/HET/Ahead/1minute/)', 'comment_created': datetime.datetime(2023, 7, 23, 2, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1271372634, 'comment_body': 'How so?', 'comment_created': datetime.datetime(2023, 7, 23, 2, 51, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1271372647, 'comment_body': 'yes, to hold the original value while we change the class variable `pattern` for the body of the function and then put back on in the end', 'comment_created': datetime.datetime(2023, 7, 23, 2, 51, 19, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1271372657, 'comment_body': 'Would it be possible to add a unit test for the scarper to ensure that this codeblock works as expected? ', 'comment_created': datetime.datetime(2023, 7, 23, 2, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1272709876, 'comment_body': 'i just realised my reply didnt make it somehow but i fixed that in a later commit!', 'comment_created': datetime.datetime(2023, 7, 24, 20, 15, 24, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1278082253, 'comment_body': ""This isn't needed now?"", 'comment_created': datetime.datetime(2023, 7, 28, 21, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1278084940, 'comment_body': 'Do you know what kwargs are passed and why?', 'comment_created': datetime.datetime(2023, 7, 28, 21, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1278085082, 'comment_body': 'Oh I see, its below.', 'comment_created': datetime.datetime(2023, 7, 28, 21, 8, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1278087979, 'comment_body': 'So we should restore this behaviour back to how main is.', 'comment_created': datetime.datetime(2023, 7, 28, 21, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1278259551, 'comment_body': 'yes, since these are values that we passed to the scraper before, and instead of parsing them out from the final url here, i included them in the output row/dict at the places directly where we call this helper function, which are [here](https://github.com/exitflynn/sunpy/blob/skyskraper/sunpy/net/dataretriever/sources/goes.py#L307-L311) and [here](https://github.com/exitflynn/sunpy/blob/skyskraper/sunpy/net/dataretriever/sources/goes.py#L138).\r\n', 'comment_created': datetime.datetime(2023, 7, 29, 6, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1278259988, 'comment_body': ""this was possible to do earlier since the parse pattern was a whole different thing and the base url's could be visited by the `baseurl` which had values like these filled in. We'll now need the pattern to have these filled in too instead of having placeholders which could extract this from the final url's. This was the initial motivation to do it, though now I think that it makes more sense to do it this way since we already have access to these values at these positions."", 'comment_created': datetime.datetime(2023, 7, 29, 6, 43, 17, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1278825061, 'comment_body': '(the change got reverted later on)', 'comment_created': datetime.datetime(2023, 7, 31, 6, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1278833559, 'comment_body': 'Is there a test to cover these lines of code? ', 'comment_created': datetime.datetime(2023, 7, 31, 6, 17, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1279247780, 'comment_body': 'yes, i included that like [this](https://github.com/sunpy/sunpy/pull/7077/files#diff-616d8052c8d92faa18682a0257432d6b0dfbd390d6efab4b4e55a8abca94871fR283-R287)', 'comment_created': datetime.datetime(2023, 7, 31, 12, 47, 58, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1283220360, 'comment_body': 'Are we are losing some of the formats supported by the previous `strptime` format? How were were these chosen, to match the existing clients? Bear in mind other packages e.g (radiospectra, stixpy) rely on scraper and my use additional/other formats.', 'comment_created': datetime.datetime(2023, 8, 3, 13, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'samaloney', 'type': 'User'}, {'comment_id': 1283254829, 'comment_body': 'Maybe also add an example showing the equivalent of the regex functionally I guess empty double braces `{{}}`', 'comment_created': datetime.datetime(2023, 8, 3, 14, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'samaloney', 'type': 'User'}, {'comment_id': 1283268474, 'comment_body': 'No sure if for this PR possibly a separate doc PR but I think one of the main issues has aways been a clear description of the scraper algorithm so something like.\r\n\r\n1. Given a pattern p the smallest unit of time (SUoT) is derived by xxx\r\n2. For each time between start and stop in units of SUoT the pattern is filled.\r\n3. The location given by the filled pattern is visited and a list of files at the location is obtained\r\n4. The name of each file is examined to determine if it matches the remaining pattern\r\n5. ....\r\n\r\nIdeally with an/some examples and links to relevant functions', 'comment_created': datetime.datetime(2023, 8, 3, 14, 12, 53, tzinfo=datetime.timezone.utc), 'commenter': 'samaloney', 'type': 'User'}, {'comment_id': 1284588902, 'comment_body': 'i figured that functionality could be seen in filelist, so i added the example [there](https://github.com/sunpy/sunpy/pull/7077/commits/be9dc75c7146d11e07a7128506df341903b6a5a1).', 'comment_created': datetime.datetime(2023, 8, 4, 15, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1284672466, 'comment_body': ""nope, we aren't losing any formats from before, and though i guess these are enough, i was wondering if we'd want to think of ways to support them all in the future? https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes"", 'comment_created': datetime.datetime(2023, 8, 4, 17, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1287427554, 'comment_body': '```suggestion\r\n# Parse expressions to convert into datetime format\r\n```', 'comment_created': datetime.datetime(2023, 8, 8, 17, 11, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287427816, 'comment_body': 'Is this comment true? If not, we should remove it.', 'comment_created': datetime.datetime(2023, 8, 8, 17, 11, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287536477, 'comment_body': 'yeah, it\'s true, we use that list for pattern -> timepattern conversions like parse patterns like ""{year:4d}"" to %Y', 'comment_created': datetime.datetime(2023, 8, 8, 19, 4, 26, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1287688342, 'comment_body': 'So if we do not need this here, I can resolve this conversation? ', 'comment_created': datetime.datetime(2023, 8, 8, 21, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287688899, 'comment_body': 'Will this be needed? If the wrong parse holder was added, I think we should error no?', 'comment_created': datetime.datetime(2023, 8, 8, 21, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287697371, 'comment_body': 'Should it be here and not be above line 32?', 'comment_created': datetime.datetime(2023, 8, 8, 21, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287697850, 'comment_body': 'I agree, we should add this, maybe as a topic guide? ', 'comment_created': datetime.datetime(2023, 8, 8, 21, 16, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287703651, 'comment_body': 'Is there no cleaner way than to define temp vars like this for pattern and timepattern?', 'comment_created': datetime.datetime(2023, 8, 8, 21, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287704630, 'comment_body': 'There seems to be a unit test coverage problem here, can you confirm and if so, add one please?', 'comment_created': datetime.datetime(2023, 8, 8, 21, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287704675, 'comment_body': 'There seems to be a unit test coverage problem here, can you confirm and if so, add one please?', 'comment_created': datetime.datetime(2023, 8, 8, 21, 25, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287704710, 'comment_body': 'There seems to be a unit test coverage problem here, can you confirm and if so, add one please?', 'comment_created': datetime.datetime(2023, 8, 8, 21, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287705010, 'comment_body': 'There seems to be a unit test coverage problem here, can you confirm and if so, add one please?', 'comment_created': datetime.datetime(2023, 8, 8, 21, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287705059, 'comment_body': 'There seems to be a unit test coverage problem here, can you confirm and if so, add one please?', 'comment_created': datetime.datetime(2023, 8, 8, 21, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287846030, 'comment_body': 'yes!', 'comment_created': datetime.datetime(2023, 8, 9, 1, 52, 26, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1287848573, 'comment_body': 'oh yes, the comment about adding milliseconds can be added right by where we mention it.', 'comment_created': datetime.datetime(2023, 8, 9, 1, 57, 35, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1287850518, 'comment_body': 'Yes, I think documentation about how the scraper works / the algorithm would be great to have too, do you think I should I add it in this PR itself or a separate one?', 'comment_created': datetime.datetime(2023, 8, 9, 2, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1287851461, 'comment_body': 'Do a separate one', 'comment_created': datetime.datetime(2023, 8, 9, 2, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1287853850, 'comment_body': 'This is no longer needed yes, I initially added this because when the pattern reached this stage, `format()` had already been called on it once for some clients. But instead of calling `format()` on pattern while passing it to the function, I had parameters passed as kwargs. So yeah I just double-checked, we can remove this', 'comment_created': datetime.datetime(2023, 8, 9, 2, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1291669456, 'comment_body': ""thanks, I've added them now"", 'comment_created': datetime.datetime(2023, 8, 11, 18, 35, 24, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1300187865, 'comment_body': '```suggestion\r\n* A class attribute ``pattern``; this is a string used to match the URLs supported by the client and extract metadata from the matched URLs.\r\n```', 'comment_created': datetime.datetime(2023, 8, 21, 14, 24, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1300216943, 'comment_body': '```suggestion\r\n        While writing the pattern, we can also leverage parse capabilities by using the ``{{}}`` notation to match parts of the filename that cannot be known beforehand:\r\n```', 'comment_created': datetime.datetime(2023, 8, 21, 14, 46, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1300304956, 'comment_body': 'Also, I should mention this here as well, the doc PR is [here](https://github.com/exitflynn/sunpy/pull/2)', 'comment_created': datetime.datetime(2023, 8, 21, 15, 45, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1306695888, 'comment_body': 'You need to add an __all__ here. That should fix the doc build.\r\n', 'comment_created': datetime.datetime(2023, 8, 27, 17, 10, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1306696037, 'comment_body': 'These should all be 4 spaces wide. ', 'comment_created': datetime.datetime(2023, 8, 27, 17, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1306696434, 'comment_body': '```suggestion\r\n\r\n```', 'comment_created': datetime.datetime(2023, 8, 27, 17, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1306696569, 'comment_body': 'Can we get an else here that raises an error?', 'comment_created': datetime.datetime(2023, 8, 27, 17, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1306696722, 'comment_body': 'This changelog is more of a summary of work. \r\n\r\nWe want our changelogs to be user facing, so we should detail what changed and how it breaks current workflows and how one would recover from that breaking changing.', 'comment_created': datetime.datetime(2023, 8, 27, 17, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1306699583, 'comment_body': ""I don't really follow how I should add an **all** here, can you please elaborate?"", 'comment_created': datetime.datetime(2023, 8, 27, 17, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1306699783, 'comment_body': 'In this format: `__all__ = [""function_name_1"", ""function_name_2"", ""funtion_name_3""]`', 'comment_created': datetime.datetime(2023, 8, 27, 17, 45, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1306700579, 'comment_body': ""ahh... got it, i was thinking that the issue must be something along those lines but couldn't put a finger on it, thanks!"", 'comment_created': datetime.datetime(2023, 8, 27, 17, 52, 2, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1306705185, 'comment_body': ""i've updated the changelog to reflect this, I wasn't sure whether to include the timerange case or not though (i did for now)"", 'comment_created': datetime.datetime(2023, 8, 27, 18, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}]","[{'commit_sha': '9925cbe96497111233e8f63c697c48323b9c79dd', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe491167451e75e222583c33279b52b483b77bcb', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '537cc25b9204c6b5df015876f12d952f0148012b', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1afa93ba60fb3bb21ad58a4b7095c835c9f88f8e', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6baa6fe952fd30ff6efdc82378818fdf48adb575', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c018adf5da26cb25808d47052b5ed39d9844f053', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d9b97a4d48f1a604f3123e5dbeecba9b1f08282', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e87c5a8c1ecdcd97367cfc0c1ece6e5319d168a3', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b56322147a0eb2877ffd320a45b77b124602c3b2', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd00feeaf04c0c711e6570a8654a58d34b4dda589', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbae70dd1b94738fc0ced89a058f707bef3d0253', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87a680b4a084e271d8dfcda690f44ccec87ce10e', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72a6ece65570d68f4f24c272a650b060361f4ceb', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17fdcfde484b2e8ce5183212d4cf13f6df370acf', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '759edbb84db812b6590568a402eba7418327fbd8', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70884ac1eb6de74594eb99cfa2f0051d406cd0d9', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2efafedbdfe8795e52cee647468c690bc4f7055f', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7d32d4a52b69d2c058675da50106266bc3732a3', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd3ede905b69cc3134c1931e5cdba0cbd3e21765', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e01ba938ea8898bef7f11cc98aaf75d43a678c7', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd827ed6c15249ad57ddbab25f22777a34aadf16c', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfab9d06b0afaa20e8d458c96e601fe5a1e37c1e', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8bd9c22c72fc43a7fbdf92b22fa379210435e57', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '349373d9ab9c0fac5a49a0b1949b94e524378ee8', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16c31e1f7f7109c53a1cccb875b359b52515f51d', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e842542b9a765e260d73b345b3805cda293bfebe', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9577d54ae76305fd13d124910a2cd2516ce9e90', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b79d87848c5f1c6ba1f420c0ce16be3d86c130d9', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21060612dea72a02295edf55d6dca066de952fba', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48a6ed2cd6310e81aa70189ec9c47afda9e23239', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '146df660312003fdec358e156bb37de7187a62e1', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '580552fdf439c48ae5e1c565aa7e3c96eab9c005', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23ff342660e9f6fcb036fb9fbd824947eba2b3d0', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2792d955e3f89fcc2c9f1d832ec09d41b31bfbf', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fcdf50827eeba408051fa43e05df9f15adeb61a', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe7ae88b8c5c26f7e2337216b705a45aa8d27fca', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d12b727e6cd41bd5e05a38b1efab6ff4991c5ef', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67272011d6c9bba626b916519473bb330fb1aa36', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be9dc75c7146d11e07a7128506df341903b6a5a1', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '897091ff86d4c48af54f6c891c8a73e9d489239a', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '028a373f635c631faa2fef0e7829072ff194b6fb', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed52776edc9e059cabe28a8d232031d5dd8c54a0', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a6547d355df4e7dcaf06b7386e5128b0f22c5a1', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ecfc810973d53e994ed0338308cc6768c710fd7', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98513778cab3e1050eb5e5702d073e7c54b84864', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf4b6238af53901fe24354bbb943ce9bb0ab3428', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '466492a5445a3dfa70c5c80b82b24c08f12d6d0b', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '931c9a044d7186d8db1fa60204b1a6a553f80601', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41c4db9540d6b3b691362797af46168defe3fcc8', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce7128a5326a28566ece3e71f7bbd973b1328d57', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7e79c006addea7ee7d7a080857a387758588fe9', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16b753775278e11fc4716a1926dda9fcc8716f3c', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ed773b67c83858af750dd9512f77cc43ac499d7', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae11150782fe49bf39874ff3fc6ddf94a45b14fc', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f06d59f2c9cef2dcf4aaa15d3691ca5d9790e185', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '965d2b7bc4c1d1739aa73ec4d69c595eddc9824a', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23caa18b0e6c7195151666f2a66aee3edc645b5b', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60b30096bb81e0cdbe7b43a92dc36afb868fbd9a', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a270451df9a9961b5b4a37b8cc6a0274f6e026c', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb506359a4ec61dbd9b18361b00eb7cc726c7f6f', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ac784f2415b844b3536c6fdf8e70b2413937be5', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5263956e884aa07bcf5c54ea405994efcb953c1', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a760f2379ab4db7a54aac4b07437ec5f49fdfc2', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13165e48b3d8bf78492d4faf8b723054cb30fede', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8e15e49cdbaeb015b17b4bacfac1f259a7fbab8', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd303341f75e8f22471cbbc7a482c358b648a8804', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2d2819b1c50ab4ea65ae8cd87bec58a2b868d27', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5e099f963f9eb1e2361048f7855820be580b633', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de46980e912eb9d51a0848536192f2ea35267b28', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca11eb2642cd39f5ce4f1ce237c78c3bd681df96', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bd668143c1caadea7567aa404eb06adad0360ea', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '621362a7543130e6b3c82ad4fd47eebe863a8e0f', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85d78d0f1afe920a5201861d6bc9843699c0255d', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad95127ec6e074b00d39a36f03edab7716585609', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f76bda7f679f4f2981e98bca6bb408ddcfabaebd', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32d717c3f7fd5315d2f5116d2b72d9c8095a495b', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63e5a93c3e1e75c6d46fae12ed993cf5305cf421', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '399e724a1b89db5e55e06c52cbd54fae3b29470a', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fee7b327a5d8b8932f0af26696750d12ef7017a0', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8a67ee3fa22ef3e8a9e3adb6e5500d5e221ed64', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46450dbe3730ae1a7a17dfdb5182042c40508532', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0fff8ae2ecd4f0998d38456d67b2203b6c603ed', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33277fe368886c71287923ef0e0b899d4f6e8c69', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4547f5002ac1e2ea88801d8ea3ce12f0434fb049', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f65b4fb0ae862d609823d40ec7b49369d529ac1', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '966b253e75c7010fb809061677d42b6fa056e77f', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13c33b26ce5ff1f939984f15d9835d17e70c25f4', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}]",Akshit Tyagi,37214399,,User,,67,,102,63
1463658559,moving scraper functions for better organisation,"possible locations are `net.scraper_utils`, `util.net` or outside the scraper class but still in `net.scraper`",True,1,https://api.github.com/repos/exitflynn/sunpy/pulls/1,https://github.com/exitflynn/sunpy/pull/1,closed,209,206,6,9,0,5,0,0,[],2023-08-05 04:25:55+00:00,2023-08-08 18:58:39+00:00,311564.0,"3 days, 14:32:44","[{'comment_id': 1285100758, 'comment_body': 'You will want to move any unit tests for these into a new file as well.', 'comment_created': datetime.datetime(2023, 8, 5, 18, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1285100850, 'comment_body': 'We should rename this to follow the Python naming style. ', 'comment_created': datetime.datetime(2023, 8, 5, 18, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1285100863, 'comment_body': 'Does this need to be in a try block?', 'comment_created': datetime.datetime(2023, 8, 5, 18, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 1285212685, 'comment_body': ""I don't think so, I'll revert it. I traced it back to the [second](https://github.com/sunpy/sunpy/commit/4469744d7718c97857b09d74b4ddb5a33055f7d5) scraper commit ever :P"", 'comment_created': datetime.datetime(2023, 8, 6, 12, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'exitflynn', 'type': 'User'}, {'comment_id': 1285233329, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 6, 15, 31, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}]","[{'commit_sha': '897091ff86d4c48af54f6c891c8a73e9d489239a', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '028a373f635c631faa2fef0e7829072ff194b6fb', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed52776edc9e059cabe28a8d232031d5dd8c54a0', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a6547d355df4e7dcaf06b7386e5128b0f22c5a1', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ecfc810973d53e994ed0338308cc6768c710fd7', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98513778cab3e1050eb5e5702d073e7c54b84864', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf4b6238af53901fe24354bbb943ce9bb0ab3428', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16b753775278e11fc4716a1926dda9fcc8716f3c', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ed773b67c83858af750dd9512f77cc43ac499d7', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}]",Akshit Tyagi,37214399,,User,,67,,102,63
1479415009,add docs explaining the whole scraper algorithm,,True,2,https://api.github.com/repos/exitflynn/sunpy/pulls/2,https://github.com/exitflynn/sunpy/pull/2,closed,71,33,2,4,0,0,0,0,[],2023-08-17 17:27:24+00:00,2023-08-26 03:44:47+00:00,728243.0,"8 days, 10:17:23",[],"[{'commit_sha': 'de46980e912eb9d51a0848536192f2ea35267b28', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca11eb2642cd39f5ce4f1ce237c78c3bd681df96', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '621362a7543130e6b3c82ad4fd47eebe863a8e0f', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f76bda7f679f4f2981e98bca6bb408ddcfabaebd', 'committer_username': 'exitflynn', 'committer_name': 'Akshit Tyagi', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 9, 12, 27, 57, tzinfo=datetime.timezone.utc)}]",Akshit Tyagi,37214399,,User,,67,,102,63

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
2165383,sunpy,sunpy/sunpy,Python,582,899,48,238,18496,290,4,19,"[{'id': 1908211057, 'number': 7664, 'closed': datetime.datetime(2024, 7, 5, 18, 22, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 6, 23, 40, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2486479.0, 'time_delta': '28 days, 18:41:19', 'additions': 1293, 'deletions': 998, 'state': 'closed'}, {'id': 1876439992, 'number': 7632, 'closed': datetime.datetime(2024, 5, 18, 0, 43, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 18, 0, 42, 6, tzinfo=datetime.timezone.utc), 'time_taken': 93.0, 'time_delta': '0:01:33', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1841033011, 'number': 7601, 'closed': datetime.datetime(2024, 4, 25, 15, 0, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 25, 14, 29, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1855.0, 'time_delta': '0:30:55', 'additions': 4, 'deletions': 5, 'state': 'closed'}, {'id': 1406327128, 'number': 7077, 'closed': datetime.datetime(2023, 10, 9, 20, 9, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 19, 30, 7, tzinfo=datetime.timezone.utc), 'time_taken': 9247181.0, 'time_delta': '107 days, 0:39:41', 'additions': 542, 'deletions': 541, 'state': 'closed'}, {'id': 1406326055, 'number': 7076, 'closed': datetime.datetime(2023, 6, 24, 19, 24, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 19, 23, 44, tzinfo=datetime.timezone.utc), 'time_taken': 24.0, 'time_delta': '0:00:24', 'additions': 67, 'deletions': 17, 'state': 'closed'}, {'id': 1239395267, 'number': 6779, 'closed': datetime.datetime(2023, 3, 29, 15, 45, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 13, 17, 55, 26, tzinfo=datetime.timezone.utc), 'time_taken': 3793798.0, 'time_delta': '43 days, 21:49:58', 'additions': 137, 'deletions': 0, 'state': 'closed'}, {'id': 1224804989, 'number': 6757, 'closed': datetime.datetime(2023, 2, 8, 20, 42, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 1, 12, 29, 39, tzinfo=datetime.timezone.utc), 'time_taken': 634391.0, 'time_delta': '7 days, 8:13:11', 'additions': 50, 'deletions': 0, 'state': 'closed'}, {'id': 1220434087, 'number': 6743, 'closed': datetime.datetime(2023, 2, 12, 20, 3, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 28, 23, 38, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1283090.0, 'time_delta': '14 days, 20:24:50', 'additions': 99, 'deletions': 4, 'state': 'closed'}, {'id': 1215232287, 'number': 6725, 'closed': datetime.datetime(2023, 2, 1, 22, 21, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 24, 14, 47, 38, tzinfo=datetime.timezone.utc), 'time_taken': 718455.0, 'time_delta': '8 days, 7:34:15', 'additions': 19, 'deletions': 0, 'state': 'closed'}, {'id': 1212459588, 'number': 6724, 'closed': datetime.datetime(2023, 3, 14, 19, 21, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 21, 23, 8, 13, tzinfo=datetime.timezone.utc), 'time_taken': 4479188.0, 'time_delta': '51 days, 20:13:08', 'additions': 45, 'deletions': 24, 'state': 'closed'}, {'id': 1212053484, 'number': 6722, 'closed': datetime.datetime(2023, 1, 28, 10, 10, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 20, 20, 47, 34, tzinfo=datetime.timezone.utc), 'time_taken': 652957.0, 'time_delta': '7 days, 13:22:37', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1211398089, 'number': 6721, 'closed': datetime.datetime(2023, 1, 20, 21, 15, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 20, 11, 17, 42, tzinfo=datetime.timezone.utc), 'time_taken': 35877.0, 'time_delta': '9:57:57', 'additions': 17, 'deletions': 0, 'state': 'closed'}, {'id': 1190010233, 'number': 6702, 'closed': datetime.datetime(2023, 1, 9, 1, 54, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 8, 23, 22, 51, tzinfo=datetime.timezone.utc), 'time_taken': 9072.0, 'time_delta': '2:31:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1187140460, 'number': 6693, 'closed': datetime.datetime(2023, 1, 7, 18, 42, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 5, 21, 26, 33, tzinfo=datetime.timezone.utc), 'time_taken': 162935.0, 'time_delta': '1 day, 21:15:35', 'additions': 12, 'deletions': 11, 'state': 'closed'}]"
585552428,sunpy,exitflynn/sunpy,Python,0,0,0,236,18412,16,24,16,"[{'id': 1479415009, 'number': 2, 'closed': datetime.datetime(2023, 8, 26, 3, 44, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 17, 17, 27, 24, tzinfo=datetime.timezone.utc), 'time_taken': 728243.0, 'time_delta': '8 days, 10:17:23', 'additions': 71, 'deletions': 33, 'state': 'closed'}, {'id': 1463658559, 'number': 1, 'closed': datetime.datetime(2023, 8, 8, 18, 58, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 5, 4, 25, 55, tzinfo=datetime.timezone.utc), 'time_taken': 311564.0, 'time_delta': '3 days, 14:32:44', 'additions': 209, 'deletions': 206, 'state': 'closed'}]"
