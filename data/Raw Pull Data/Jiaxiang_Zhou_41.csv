pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
437417143,RAnal SLEIGH plugin,"**Detailed description**

* Improve `pdgsd` result in RCore plugin.
* Port `SleighInstructionPrototype` from Ghidra's JAVA codebase to identify instruction's control flow type from underlying `Constructor`.
* Implement as-much-as-possible P-code to ESIL translation.
* Implement pattern-match on P-codes to identify type of single instruction.
* Improve processor and compiler spec file parse to extract reg info.
* Add `pdga` command to RCore plugin to enable this plugin.
* Enable plugin's compilation option as default.

**Test plan**

Has been tested on 8 cases in r2-testbins. Test cases will be added in next pr.
",True,120,https://api.github.com/repos/rizinorg/rz-ghidra/pulls/120,https://github.com/rizinorg/rz-ghidra/pull/120,closed,5788,560,11,48,18,33,0,0,[],2020-06-20 14:14:26+00:00,2020-09-02 10:58:42+00:00,6381856.0,"73 days, 20:44:16","[{'comment_id': 462166148, 'comment_body': 'Why just not use designated initializers instead of comments?', 'comment_created': datetime.datetime(2020, 7, 29, 9, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'XVilka', 'type': 'User'}, {'comment_id': 462166286, 'comment_body': 'Same here.', 'comment_created': datetime.datetime(2020, 7, 29, 9, 30, 15, tzinfo=datetime.timezone.utc), 'commenter': 'XVilka', 'type': 'User'}, {'comment_id': 462167079, 'comment_body': 'What about implementing the methods not in the header?', 'comment_created': datetime.datetime(2020, 7, 29, 9, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'XVilka', 'type': 'User'}, {'comment_id': 463476143, 'comment_body': 'They are not available in C++11.', 'comment_created': datetime.datetime(2020, 7, 31, 8, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 463477768, 'comment_body': ""It's a middle of 2020 though...\r\n\r\n*See https://en.cppreference.com/w/cpp/language/aggregate_initialization*"", 'comment_created': datetime.datetime(2020, 7, 31, 8, 31, 13, tzinfo=datetime.timezone.utc), 'commenter': 'XVilka', 'type': 'User'}, {'comment_id': 463481144, 'comment_body': 'Tell that to certain distributions ðŸ™ˆ', 'comment_created': datetime.datetime(2020, 7, 31, 8, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 463714021, 'comment_body': 'lol', 'comment_created': datetime.datetime(2020, 7, 31, 16, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'FXTi', 'type': 'User'}, {'comment_id': 475865778, 'comment_body': 'Too much code duplication here from `SleighAsm::init(RAsm *a)`. It will be better to merge in one function `SleighAsm::init(const char *sleigh_id, RIO *io, RConfig *cfg)`.', 'comment_created': datetime.datetime(2020, 8, 24, 20, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 475867061, 'comment_body': '```suggestion\r\n\t\telse if(elname == ""default_proto"")\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 20, 13, 46, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 475868995, 'comment_body': 'Is this debugging code? If you want to keep it, you can wrap it in `#if 0` to disable', 'comment_created': datetime.datetime(2020, 8, 24, 20, 17, 29, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 475870250, 'comment_body': 'Is this constructor used anywhere? Where do the `0x7fffffff` come from?', 'comment_created': datetime.datetime(2020, 8, 24, 20, 20, 3, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 475871238, 'comment_body': 'This and `size` should be `ut64` I think.', 'comment_created': datetime.datetime(2020, 8, 24, 20, 21, 58, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 475873852, 'comment_body': 'These structures have to be removed before merge. You can send a pr to https://github.com/thestr4ng3r/ghidra to expose things.', 'comment_created': datetime.datetime(2020, 8, 24, 20, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 475874374, 'comment_body': 'Better to use C++11 `enum class`, especially since you are already using the values scoped with `FlowType::`.', 'comment_created': datetime.datetime(2020, 8, 24, 20, 27, 53, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 475877636, 'comment_body': ""What's the reason for this?"", 'comment_created': datetime.datetime(2020, 8, 24, 20, 34, 20, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 475879420, 'comment_body': 'These frees on memory malloced in r2 can become problematic depending on the C++ compiler/lib. Better use `r_mem_free()` for those.', 'comment_created': datetime.datetime(2020, 8, 24, 20, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 477025364, 'comment_body': 'Yes, will do.', 'comment_created': datetime.datetime(2020, 8, 26, 4, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'FXTi', 'type': 'User'}, {'comment_id': 477026688, 'comment_body': ""This is constructor, used to specify it's uninitialized.\r\nI will remove this."", 'comment_created': datetime.datetime(2020, 8, 26, 4, 28, 56, tzinfo=datetime.timezone.utc), 'commenter': 'FXTi', 'type': 'User'}, {'comment_id': 477027172, 'comment_body': 'Yes', 'comment_created': datetime.datetime(2020, 8, 26, 4, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'FXTi', 'type': 'User'}, {'comment_id': 477030575, 'comment_body': 'To avoid unnecessary initialization when radare just try to guess what arch current binary is.', 'comment_created': datetime.datetime(2020, 8, 26, 4, 43, 52, tzinfo=datetime.timezone.utc), 'commenter': 'FXTi', 'type': 'User'}, {'comment_id': 479974366, 'comment_body': ""I don't think you have to optimize the switch on the string this hard. As the nicest solution I would recommend to do something like here:\r\nhttps://github.com/radareorg/r2ghidra-dec/blob/8e576eeadc211de4ac8d8c759cc368fa48cdfa99/src/ArchMap.cpp#L67-L79\r\nMaybe you can even re-use the Mapper classes there if you move them to the header and replace `RCore *` here by a template parameter:\r\nhttps://github.com/radareorg/r2ghidra-dec/blob/8e576eeadc211de4ac8d8c759cc368fa48cdfa99/src/ArchMap.cpp#L10-L14\r\n\r\nBut alternatively, a simple if/else would work too if you don't want to over-engineer it too much."", 'comment_created': datetime.datetime(2020, 8, 31, 8, 23, 58, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 479976114, 'comment_body': 'So ""x86"" in this case is because it\'s the default arch that r2 sets before knowing it from the binary? This could be problematic because the default arch in r2 is dependent on the host architecture, i.e. if you work on a raspberry pi or something, it would be ""arm"".\r\nIn any case, I think this needs at least a comment so it is clear why this check is there.', 'comment_created': datetime.datetime(2020, 8, 31, 8, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 479976805, 'comment_body': '```suggestion\r\n\t\tCMD_PREFIX""a"", """", ""# Switch to RAsm and RAnal plugins driven by SLEIGH from Ghidra"",\r\n```\r\nI think this is a bit more clear about what it does.', 'comment_created': datetime.datetime(2020, 8, 31, 8, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 479980390, 'comment_body': 'These throws in the esil handlers can be problematic since they crash the entire process if something is wrong in an esil string, which can theoretically always happen because the user can also supply esil. I think a simple print would be enough for now.', 'comment_created': datetime.datetime(2020, 8, 31, 8, 35, 32, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 479985554, 'comment_body': 'Also, it should not fail completely if the arch is not known. You should still be able to use the plugin at least with unrecognized BP and SN.', 'comment_created': datetime.datetime(2020, 8, 31, 8, 45, 33, tzinfo=datetime.timezone.utc), 'commenter': 'thestr4ng3r', 'type': 'User'}, {'comment_id': 480562118, 'comment_body': 'I will save this for next pr. Since current map is got from existing RAnal plugin source code, I think their result is not good enough. There must be something missing. I prepare to redo this in the future.', 'comment_created': datetime.datetime(2020, 9, 1, 1, 37, 18, tzinfo=datetime.timezone.utc), 'commenter': 'FXTi', 'type': 'User'}, {'comment_id': 481869262, 'comment_body': 'Probably a check with len < 0 should be added?', 'comment_created': datetime.datetime(2020, 9, 2, 8, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wargio', 'type': 'User'}, {'comment_id': 481873631, 'comment_body': 'I agree with both. Yes no need to optimize that and no need to make a new commit to address this now.', 'comment_created': datetime.datetime(2020, 9, 2, 8, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wargio', 'type': 'User'}, {'comment_id': 481874794, 'comment_body': 'Yes please add a comment.', 'comment_created': datetime.datetime(2020, 9, 2, 8, 19, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wargio', 'type': 'User'}, {'comment_id': 481876087, 'comment_body': 'I do not think using `long double` is a good idea.', 'comment_created': datetime.datetime(2020, 9, 2, 8, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wargio', 'type': 'User'}, {'comment_id': 481888814, 'comment_body': 'Not all compilers supports 64+ bits regs. I suggest to limit this to x64 via ifdef endif', 'comment_created': datetime.datetime(2020, 9, 2, 8, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wargio', 'type': 'User'}, {'comment_id': 481889352, 'comment_body': 'Same this ', 'comment_created': datetime.datetime(2020, 9, 2, 8, 35, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wargio', 'type': 'User'}, {'comment_id': 481914562, 'comment_body': 'Agree', 'comment_created': datetime.datetime(2020, 9, 2, 9, 2, 42, tzinfo=datetime.timezone.utc), 'commenter': 'FXTi', 'type': 'User'}]","[{'commit_sha': '5bbe4d76c4b4822061f48814f4747f694fa8051c', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5693f7edda1acf0122020ac17238d8d450753fb1', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5d1d7db60746d7a5657f9043510dc119463a97f', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3d7df8fac4f1d8596b20b5de8a0e1aee59760cc', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3832dc59590f3269b5d7990bcd1c47f492cef9c', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb9fd3c1658832c3572e67bc95535cf430232ecb', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a46dc91b6474520bdaa521086afc782a411d31b6', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc290b0b9046743d35e08286f62e1324d9a3a8a8', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d16b9da3c984ae840510cc26b4266863304f682', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ecd34102840e166b32f519c30efaa1a449f9058', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6c62a52d9c46df4888bb75002f36f01d511621', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '861c49431952beb9782f696c392d3063c2137f62', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5f135357b9d5bb39e6770306fffc661a62ffb8b', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1a1e3a9924aaeff0d7b38c487ff7a6e9172492b', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45454189bed0102456259a055d180c92b62b7a70', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38d8cf1c470d79d0a072f2d397ea21023ba3e7e6', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0748d5320aa90a0324589ed8159ba7b5723f08c0', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b55fba4b26549cac60b94d50f2c2a05058bffcec', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '309c11a704102f079e00bcbda19a7733542db42a', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '661e4cccfdf9d7a601a529952f8d1574fd474fe4', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f729a8a3ca175f2e9913d56c0c936922e5e1b6cd', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e3666fb0f0ea2e8c32003a1c2f39bca1b0a5ebe', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02d305d9c71e18f9069420052edbb4e9ffd57cc6', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9cc158d658e338a441562e3f2370d1a0a4de2de', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '657230079de67d2240a49a9e300a178ff5075593', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e3b59dcd59220f791922992caab71215621cf57', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e64e5e7c4317c66654c215cb640cee91c2399247', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2a1134965544486bd6a10c6996a6895a53987e', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df7ec8089bb18d69fa9b86fab4e256e68a0addf0', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78e86d4c9566f0c41d21ba87b4ed1b1f743a61c9', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeb8e1723248997f345908e2813024c8a8c57f81', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2f72fd497c1f86678a1059a5247fd4e13f5135c', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eeabd401d5e256ba97927b97952de26bbf99477', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0086f0775beae65e635f7fc47b136eb245229298', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79d36feb48dbefb0f8d80422b218b9bbd2f666c1', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ec9dab513baafe3b2a1076548410e44381586fa', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2332ba214dd9a70790dabfa00d9118dcb20e0e65', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48420ba126b9c4c29d14fccf216481c034ddc011', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '261d53b11ace08bdf4f8a33f9dd50412e802159d', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acbb01912ade9714f4d6608a0e7a3f86dd352173', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e20bfd2c0585829ef43dcc59d947f652ed6d7667', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce966323f831d7d6b19f69a2ae046377722fbba3', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44f5f28602e0f3678f0525f82410101900f0404a', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80bfbe547e75b39304123d1a57292786b6aa5588', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '332d79afab71b4b1785ff2ae504f4de5f3f4fe4f', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ada25a3967f1943a298382dfe382d0c69fd20e2', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c599a8e42626be16d35c49063ade718aba3a75a', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06aec38347637d6bec4e70a43769759a258941f9', 'committer_username': 'FXTi', 'committer_name': 'FXTi', 'committer_email': 'zjxiang1998@gmail.com', 'commit_date': datetime.datetime(2013, 1, 14, 0, 58, 35, tzinfo=datetime.timezone.utc)}]",FXTi,3260882,zjxiang1998@gmail.com,User,,48,,15,48

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
196547485,rz-ghidra,rizinorg/rz-ghidra,C++,87,811,26,30,354,52,13,4,"[{'id': 492575341, 'number': 161, 'closed': datetime.datetime(2020, 9, 26, 9, 25, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 24, 16, 50, 5, tzinfo=datetime.timezone.utc), 'time_taken': 146143.0, 'time_delta': '1 day, 16:35:43', 'additions': 43, 'deletions': 14, 'state': 'closed'}, {'id': 492569943, 'number': 160, 'closed': datetime.datetime(2020, 9, 24, 16, 49, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 24, 16, 40, 1, tzinfo=datetime.timezone.utc), 'time_taken': 556.0, 'time_delta': '0:09:16', 'additions': 53, 'deletions': 12, 'state': 'closed'}, {'id': 492301670, 'number': 159, 'closed': datetime.datetime(2020, 9, 24, 16, 9, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 24, 9, 9, 34, tzinfo=datetime.timezone.utc), 'time_taken': 25170.0, 'time_delta': '6:59:30', 'additions': 31, 'deletions': 8, 'state': 'closed'}, {'id': 491951644, 'number': 158, 'closed': datetime.datetime(2020, 9, 24, 8, 52, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 23, 18, 10, 57, tzinfo=datetime.timezone.utc), 'time_taken': 52884.0, 'time_delta': '14:41:24', 'additions': 18, 'deletions': 1, 'state': 'closed'}, {'id': 482217754, 'number': 144, 'closed': datetime.datetime(2020, 9, 15, 13, 47, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 18, 19, 43, tzinfo=datetime.timezone.utc), 'time_taken': 588476.0, 'time_delta': '6 days, 19:27:56', 'additions': 868, 'deletions': 607, 'state': 'closed'}, {'id': 437417143, 'number': 120, 'closed': datetime.datetime(2020, 9, 2, 10, 58, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 14, 14, 26, tzinfo=datetime.timezone.utc), 'time_taken': 6381856.0, 'time_delta': '73 days, 20:44:16', 'additions': 5788, 'deletions': 560, 'state': 'closed'}, {'id': 421177498, 'number': 106, 'closed': datetime.datetime(2020, 5, 23, 16, 56, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 21, 6, 33, 43, tzinfo=datetime.timezone.utc), 'time_taken': 210169.0, 'time_delta': '2 days, 10:22:49', 'additions': 1225, 'deletions': 3, 'state': 'closed'}]"
