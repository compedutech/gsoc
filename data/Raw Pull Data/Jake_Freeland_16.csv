pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1046904176,Added support for CONFIG_DEBUG_FS build flag,"This diff must be merged to SRC before compilation succeeds:
https://reviews.freebsd.org/D35883",True,199,https://api.github.com/repos/freebsd/drm-kmod/pulls/199,https://github.com/freebsd/drm-kmod/pull/199,closed,20,19,10,1,1,6,0,0,[],2022-09-05 22:41:27+00:00,2022-10-11 07:43:23+00:00,3056516.0,"35 days, 9:01:56","[{'comment_id': 963267410, 'comment_body': 'Why all these NULL initializers exist? Static variables are initialized to 0 by default by C specs', 'comment_created': datetime.datetime(2022, 9, 6, 5, 31, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wulf7', 'type': 'User'}, {'comment_id': 965374770, 'comment_body': ""Yes. I was encountering odd behavior in my testing of lindebugfs that prompted me to set all r/w fops to NULL. On second glance, you're definitely right. The drm-kmod BSS section gets zeroed out before load leaving static variables initialized to 0. I have removed the NULL assignments appropriately. Thank you for the advice."", 'comment_created': datetime.datetime(2022, 9, 7, 23, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jakesfreeland', 'type': 'User'}, {'comment_id': 967696455, 'comment_body': 'That is wrong. You can not skip mutex locking without skipping of unlocking and proving that race appeared is safe.\r\nOur LKPI already has down_write_killable() implementation. At first glance it looks like you need to replace xlock with slock in it to convert it to down_read_killable().\r\nP.S. Really LKPI down_write_killable() is a hack and matches Linux down_write_interruptible() rather than down_write_killable()', 'comment_created': datetime.datetime(2022, 9, 10, 19, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wulf7', 'type': 'User'}, {'comment_id': 967697134, 'comment_body': ""Don't use Linux values here as these constants are exposed to userworld which expects FreeBSD poll() compatibility.\r\nJust include sys/poll.h and aliase them to FreeBSD POLL* definitions.\r\nAlso this file should be linux/eventpoll.h rather than uapi/linux/eventpoll.h"", 'comment_created': datetime.datetime(2022, 9, 10, 20, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wulf7', 'type': 'User'}]","[{'commit_sha': '5ed8570cd822186374735be2a96a6f7e9abb2c85', 'committer_username': 'jakesfreeland', 'committer_name': 'Jake Freeland', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 4, 15, 55, 7, tzinfo=datetime.timezone.utc)}]",Jake Freeland,70768101,,User,,8,,1,4

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
261718139,drm-kmod,freebsd/drm-kmod,C,68,152,28,1661,41926,59,11,2,"[{'id': 1046904176, 'number': 199, 'closed': datetime.datetime(2022, 10, 11, 7, 43, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 5, 22, 41, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3056516.0, 'time_delta': '35 days, 9:01:56', 'additions': 20, 'deletions': 19, 'state': 'closed'}, {'id': 1006256453, 'number': 190, 'closed': datetime.datetime(2022, 9, 1, 23, 44, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 2, 42, 30, tzinfo=datetime.timezone.utc), 'time_taken': 3531715.0, 'time_delta': '40 days, 21:01:55', 'additions': 171, 'deletions': 20, 'state': 'closed'}]"
