pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
593860446,20210316 urlfetch to native python,"Merging this will close #1074 (Raised by @jrobbins )

- The repository has to be migrated to Python 3 from Python 2. For this, it was necessary to replace urlfetch to native python libraries. 
- I have used `requests` library of Python as suggested by [Google Cloud Docs ](https://cloud.google.com/appengine/docs/standard/python/migrate-to-python3/migrate-outbound-requests#making_simple_https_requests)",True,1205,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1205,https://github.com/GoogleChrome/chromium-dashboard/pull/1205,closed,140,166,11,7,0,0,0,0,[],2021-03-16 12:34:32+00:00,2021-03-16 19:18:49+00:00,24257.0,6:44:17,[],"[{'commit_sha': '54be5691ac2ac58e09d1a0650a5c7cb27dfe268b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3303c0b40856c506ac74d6eafe78928538695b9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5198c80f3bdab73d520fc65ad28319f758761c05', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f02396ae8d05b4306511c49e1df3be3ee5ba75eb', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11a10b2d7ecae9bf72d9c0210f40cc50d6ce46f8', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa6a3f6bd8ed096b373cf074c90fd6af064412d8', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8880d686937a3717280c83f0dd06b9f6f1ca8f1', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
617435217,20210418 google sign in,"Merging this should close #1201 

Also, the code added in this PR may need refactoring. Any feedbacks regarding the same are highly appreciated.

As @jrobbins had mentioned in the issue,  GAE 'users' library has to be replaced with Google Sign-In which is compatible with Python 3 Environment. 
As of now, the following has been done in this PR, 

- I have added the Google Sign-In button in the `header.html` and the necessary JS scripts in `_base.html`
- The Google Sign-In button is working and I am able to fetch the id_token.
- The id_token is being passed to the backend
- The backend is able to check the integrity of this token and fetch email id from the token generated using `google.oauth2.id_token` and `google.auth.transport.requests`

To eliminate the uses of GAE User's library without affecting the existing code, I have done the following
- I have created a new API endpoint - `/auth/v0/login` which is handled by a `API Handler` in `login_api.py` in `api` module. The purpose of this endpoint is to verify the token and then, store it in a session variable.
- Similarly, I have created a new API endpoint - `/auth/v0/logout` which is handled by a `API Handler` in the in `logout_api.py` in `api` module. The purpose of this endpoint is to clear the session.
- There were many methods that were using the following from GAE users' library
      - `User` Class
      - `get_current_user()`
   Hence, in `frameworks/users.py` I have created a new class called `User` which contains the same fields and methods as the GAE users' `User` class. I have also created a method called `get_current_user()`. This method returns an instance of the `User` class by fetching token from the session, verifying and decoding it to get the user details


Left to be done:-
- Removing uses of GAE User's library from *_tests.py
- Checking for users with admin privileges
- Handling the case when the token expires
- Refactor the code

Review Requested:- @jrobbins ",True,1275,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1275,https://github.com/GoogleChrome/chromium-dashboard/pull/1275,closed,433,42,24,32,10,16,0,0,[],2021-04-18 07:12:39+00:00,2021-05-06 23:37:31+00:00,1614292.0,"18 days, 16:24:52","[{'comment_id': 617874978, 'comment_body': 'I imagine that this environment variable is set by GAE based on a GAE session cookie.  With Google Sign-In, it will probably never be present.  You can leave this as-is or even just return the constant False.  I will figure out another way to represent system administrators and land that change separately.', 'comment_created': datetime.datetime(2021, 4, 21, 21, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 617875927, 'comment_body': 'This makes sense, but it raises the question of how a developer who is working on chromestatus can log in a test users when running locally.  Do you have an idea of how to support that?', 'comment_created': datetime.datetime(2021, 4, 21, 21, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 617880535, 'comment_body': 'This also looks pretty good.  However, we could not deploy this to the production server in a single step.  Existing users who have a browser tab open on our site and information typed into a form before the deployment would get an error if they submit the form after the deployment.   We need to check if the user is signed in with the old GAE users library.  I think that case should be supported for POST requests only.  If we continued to honor old GAE users sessions for GETs, then users would never realize that they need to sign in using the new method.', 'comment_created': datetime.datetime(2021, 4, 21, 21, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 617881715, 'comment_body': 'I have a recent CL that securely generates and stores a different server-side secret.  I will write a CL to populate this flask session secret key as well.', 'comment_created': datetime.datetime(2021, 4, 21, 21, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 617978019, 'comment_body': 'I now have this part waiting for review.\r\nhttps://github.com/GoogleChrome/chromium-dashboard/pull/1285', 'comment_created': datetime.datetime(2021, 4, 22, 0, 20, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 618983767, 'comment_body': 'Okay, I will add a comment stating the same and leave it as-is.', 'comment_created': datetime.datetime(2021, 4, 23, 6, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 619012348, 'comment_body': 'I read on [StackOverFlow](https://stackoverflow.com/questions/17657879/does-google-provide-test-users-for-integration-testing) that Google Sign-In does not support test users. So, the developer will have to log in atleast once by using a Google Account. \r\n\r\nOne idea ( but only if we HAVE to support test users) is we can create a separate login system only for the DEV environment.', 'comment_created': datetime.datetime(2021, 4, 23, 7, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 619074997, 'comment_body': 'Okay... Just to confirm that I understood correctly... We will allow POSTS requests sent by users logged in using the old GAE users library but for GET requests, they will have to login using the newer Google Sign-In ', 'comment_created': datetime.datetime(2021, 4, 23, 9, 24, 6, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 619079259, 'comment_body': 'Thank you for adding this... I will merge it in this PR', 'comment_created': datetime.datetime(2021, 4, 23, 9, 30, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 619752779, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 4, 25, 5, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 619752798, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 4, 25, 5, 26, 34, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 619858401, 'comment_body': '@jrobbins, I have implemented it. See `framework/basehandlers.py: line 75` and `framework/permissions.py: Line 33`. Please review. I checked the functionality on localhost as follows:- \r\n\r\n1. Deployed the main branch on localhost\r\n2. Logged in with an administrator account - test@example.com using the GAE Users Library. \r\n3. I filled the form for adding a new feature but did not submit it\r\n4. Stopped the server and deployed the Google-Sign-In branch (this PR) on localhost\r\n5. Submitted the form  \r\n6. The feature was added to the database indicating that the form was submitted successfully. As soon as the form was submitted, the user was asked to login again using Google Sign-In using a browser alert. \r\n\r\nI did the same process for testing the GET request (I did not submit form this time. Just tried to open a link after deploying this PR). I was asked to login again using Google Sign-In using a browser alert.  \r\n\r\nI have to use alert instead of redirecting the user to the login page because Google Sign-In requires that we mention the list of all the possible URLs in GCP console to which the user can be redirected after logging in. Adding only the domain in GCP console does not work. Since, there are many such URLs to which user can be redirected after logging in, inserting them in GCP will take alot of time. Hence, I had to use pop-up Sign-In instead of redirecting to Sign-In page. Since we also needed someway to tell the user that he needs to login to access a particular page, I used browser alert. This alert will be generated whenever the URL contains a query parameter called loginStatus. When the user logs in, this query parameter will be removed from the URL.', 'comment_created': datetime.datetime(2021, 4, 25, 18, 43, 24, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 621504892, 'comment_body': 'Your testing procedure sounds right to me.\r\n\r\nThe query string parameter to open a dialog also seems like a good solution.  Thanks for thinking through that.  It would be better to initiate the log-in process for the user rather than call alert(), but that can be improved in a later CL.', 'comment_created': datetime.datetime(2021, 4, 27, 18, 51, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 621508045, 'comment_body': ""Let's see how it works out to use real accounts in the development environment.  We might not need the complexity of adding a dev-only login system.  And, there is always a risk that a dev-only login system might somehow be enabled in prod by some mistake in the future."", 'comment_created': datetime.datetime(2021, 4, 27, 18, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 621873063, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2021, 4, 28, 7, 4, 51, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 625572713, 'comment_body': '@jrobbins, when a user will login using Google Sign In, the user will send a POST request to the backend to verify the Google Sign In token and store it in a session variable. Since, there is no logged in user when this POST request is made, `self.require_signed_in_and_xsrf_token()` will return a 403 response and user will not be able to login. Hence, I have bypassed this method if POST request is made to  `/api/v0/login` which handles login requests.', 'comment_created': datetime.datetime(2021, 5, 4, 7, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}]","[{'commit_sha': '54be5691ac2ac58e09d1a0650a5c7cb27dfe268b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e313cbe93850be22c173da9961e2b4426ffe35f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa0cd8aa2705796b6958a294eba3fced3bd1b3f2', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '219049961f6c630763129e7c0cff53df4e7af47c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e59ddfca2cdafbe8f3448f75273591cfdd8d8d06', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dfd814dafcdf16f6f7b44d868284d88a269106a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05a93a9825d792eeffe943b8a1e376958a8659df', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e3d2be315cf891421bc1d14901760617500a645', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cead3baa2a758a01dc13766d18a062d68a1c6977', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d283cdf2aab53bdbf6133e38e2fca00668d28ff', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10d922d7453ef32eb4d659e3d83b89fabae0070f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8fb105e8649a065102cfcf533d51e494d03c706', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca64f56e480427de3974c6a0cef3f88aa2136ed8', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f83a794dc8518112f6c62686cff2bcbf2455c16a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '240fcf0e50b5e576a1bcf0ad3de10b99e5a4b29b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2b6323cebd0389525a848492a33757a748fb444', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c097984b10b584c1292647205b0bce02625fd37', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcb7543708ffcd57ed5f72ffe9fa386229f96ce9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63c3f07913db1bf797fae4aa477d29c02a6e050a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6866514b820c7865befab4c0d27fbf718c245c90', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb50af3f7b6d83d61588e64f86dc80d84bbb3cb8', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb32fe322135c5068ad16237a04a803ab59c06fd', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39f6b3b354e4e5d852d6c00d044e29ee40cfeb0b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e31aa01711f2ce37da607e18a8f123e0f046f794', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b23fe17660f9fd41c1fdc1b5b4a090b46d431a5', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e5f64ed2f8a333fa217d23c5b50f6fd8fcd5c6f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6a2410b4baafd6058dacfd2e7360207a723d69d', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4bd6a275ae207564a64794640d8a445c8da7ad9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd97fc8ebb2cf276a9a4e16d241a9a02009f27496', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5fe799d4a1b01ad46b9389e866ce88037301ffb', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93d2641c33e3e284e942e497fd8794f972519418', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7fe4d43971a21e4f608affc722860c38604940b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
665064209,GAE DB Client to GAE NDB,"READY FOR MERGE !!!

This PR is a step in solving  #1075 and #1076
Merging this PR will replace DB Client Library with App Engine NDB. ",True,1352,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1352,https://github.com/GoogleChrome/chromium-dashboard/pull/1352,closed,480,423,40,39,6,44,0,0,[],2021-06-08 16:17:30+00:00,2021-06-17 20:47:03+00:00,793773.0,"9 days, 4:29:33","[{'comment_id': 647602243, 'comment_body': '`is_saved()` has been deprecated. These methods may be used to replace as mentioned in [this](https://cloud.google.com/appengine/docs/standard/python/ndb/db_to_ndb) article. \r\n\r\n> model_instance.is_saved() | No direct equivalent; see&nbsp;[Stack Overflow](https://stackoverflow.com/questions/12083254/is-it-possible-to-determine-with-ndb-if-model-is-persistent-in-the-datastore-or/12096066#12096066)&nbsp;for a possible solution.\r\n', 'comment_created': datetime.datetime(2021, 6, 8, 16, 23, 26, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 647604000, 'comment_body': 'The method signature of `query.filter()` has changed. Just to verify, I hope I have migrated this line correctly.', 'comment_created': datetime.datetime(2021, 6, 8, 16, 25, 33, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 647609873, 'comment_body': '`read_policy` has been deprecated is, now, a synonymn of `read_consistency`. Although the [document](https://googleapis.dev/python/python-ndb/latest/query.html?highlight=strong#google.cloud.ndb.query.Query.__iter__) suggests that we may use `read_consistency=ndb.STRONG` for strong consistency, I get the following error indicating that this library does not have any such constant.\r\n\r\n> Traceback (most recent call last):\r\n  File ""/mnt/c/Users/Shivam/ubuntu/chromium-dashboard/lib/flask/app.py"", line 2447, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File ""/mnt/c/Users/Shivam/ubuntu/chromium-dashboard/lib/flask/app.py"", line 1952, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File ""/mnt/c/Users/Shivam/ubuntu/chromium-dashboard/lib/flask/app.py"", line 1821, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File ""/mnt/c/Users/Shivam/ubuntu/chromium-dashboard/lib/flask/app.py"", line 1950, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File ""/mnt/c/Users/Shivam/ubuntu/chromium-dashboard/lib/flask/app.py"", line 1936, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File ""/mnt/c/Users/Shivam/ubuntu/chromium-dashboard/lib/flask/views.py"", line 89, in view\r\n    return self.dispatch_request(*args, **kwargs)\r\n  File ""/mnt/c/Users/Shivam/ubuntu/chromium-dashboard/lib/flask/views.py"", line 163, in dispatch_request\r\n    return meth(*args, **kwargs)\r\n  File ""/mnt/c/Users/Shivam/ubuntu/chromium-dashboard/framework/basehandlers.py"", line 325, in get\r\n    ramcache.check_for_distributed_invalidation()\r\n  File ""/mnt/c/Users/Shivam/ubuntu/chromium-dashboard/framework/ramcache.py"", line 191, in check_for_distributed_invalidation\r\n    SharedInvalidate.check_for_distributed_invalidation()\r\n  File ""/mnt/c/Users/Shivam/ubuntu/chromium-dashboard/framework/ramcache.py"", line 179, in check_for_distributed_invalidation\r\n    singleton = cls.SINGLETON_KEY.get(read_consistence=ndb.STRONG)\r\nAttributeError: \'module\' object has no attribute \'STRONG\'', 'comment_created': datetime.datetime(2021, 6, 8, 16, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 647783266, 'comment_body': 'OK that looks fine.', 'comment_created': datetime.datetime(2021, 6, 8, 20, 49, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 647787580, 'comment_body': ""I don't think that that can work because there is no 'filterby' field defined, so Feature.filterby will be an error.  The part before the operator needs to be a field defined in the entity class.\r\n\r\nThere is only one caller that uses the filterby= keyword parameter.  That is in featurelist.py and it only ever passes in ('category =', k).   So, you could take out the filterby= keyword and instead implement a category= keyword that does query.filter(Feature.category == category)."", 'comment_created': datetime.datetime(2021, 6, 8, 20, 56, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 647810028, 'comment_body': 'I think that a strongly consistent read can be achieved by using an ancestor query instead of get().  It would look something like:\r\nsingleton = cls.query(ancestor=PARENT_KEY).fetch(1)[0]\r\nI have not tried that in practice, so we will need to do some manual testing.', 'comment_created': datetime.datetime(2021, 6, 8, 21, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 648082331, 'comment_body': 'Thanks. I have committed this change.', 'comment_created': datetime.datetime(2021, 6, 9, 8, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 648083286, 'comment_body': 'okay. For the record, I see that you have implemented this in #1356 ', 'comment_created': datetime.datetime(2021, 6, 9, 8, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 648488583, 'comment_body': ""The properties `updated` and `created` are essentially of type `datetime.datetime`. Hence, if ever (although impossible while using old DB Client Library) there is change between `_old_updated` and `updated`, the following error will be raised if modifications in line 957 (above) are ignored.\r\n\r\n>  TypeError: datetime.datetime(2021, 6, 9, 10, 46, 8, 833823) is not JSON serializable\r\n\r\nAlthough the above case is impossible to happen if use the old DB Client Library, the same is not true for the not-so-old NDB Library. This is because the arguments `auto_add` and `auto_add_now` only assign the values once the entity is written to datastore. As this [link](https://cloud.google.com/appengine/docs/standard/python/ndb/entity-property-reference#Date_and_Time) says, \r\n\r\n>  The automatic value is not generated until the entity is written; that is, these options don't provide dynamic defaults. (These details differ from the old db API.)\r\n\r\nHence, in case of the not-so-old NDB Client Library, `_old_updated` and `updated` have the same value `None` initially but once the entity is written, the value of updated changes to the required value.\r\n "", 'comment_created': datetime.datetime(2021, 6, 9, 16, 41, 14, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 648648192, 'comment_body': 'Yep.  That has merged.   I will try deploying a version of the app with that change later today to tomorrow.  If any problems show up due to that specific change, we will know it independently of the larger change.', 'comment_created': datetime.datetime(2021, 6, 9, 20, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 648651660, 'comment_body': 'I think this line could be deleted.  It does not seem to be referenced in the file.', 'comment_created': datetime.datetime(2021, 6, 9, 20, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 648655788, 'comment_body': 'OK. I think I understand.  Thanks for working through that.', 'comment_created': datetime.datetime(2021, 6, 9, 20, 18, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 649103275, 'comment_body': 'Okay... I have removed it. Thank you', 'comment_created': datetime.datetime(2021, 6, 10, 11, 42, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 649111573, 'comment_body': ""The hook `_post_get_hook` only gets called when using `Key.get()` to fetch the entries. Since, we are using `query()` at many places (e.g. to fetch the list of all features), this hook will not be helpful to us. Hence, I have come up with a work-around. \r\n\r\nIn old DB Client Library `is_saved()` returns `True` if the model instance has been written (put) to the Datastore at least once. Also the following is mentioned [here](https://cloud.google.com/appengine/docs/standard/python/datastore/modelclass), \r\n> This method only checks that the instance has been written to the Datastore at least once since it was created. It does not check whether the instance's properties have been updated since the last time it was written.\r\n\r\nHence, we need someway to figure out if the data has been written to the datastore. Since we do not specify the key while creating an entity (except in the case of `SharedInvalidate`), the key is `None` until the entity is written (using `put()` ). Hence, checking if `key` is not `None` could mean that the entity has been written to the datastore.\r\n"", 'comment_created': datetime.datetime(2021, 6, 10, 11, 55, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 649300560, 'comment_body': 'Yes, that sounds like it would work.', 'comment_created': datetime.datetime(2021, 6, 10, 15, 37, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 650179766, 'comment_body': ""In `__init__`, we create properties with suffix `_old_`, so that we could know if they have changed when the user submitted a feature edit form from the frontend.\r\n\r\nThis won't work in the not-so-old ndb library as unlike the old DB Client Library, `__init__` creates instances with properties set to `None`. Hence, we could set up the old properties (`_old_prop_name`) in `_pre_put_hook()`. It seems to work properly."", 'comment_created': datetime.datetime(2021, 6, 11, 18, 10, 43, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 650180685, 'comment_body': 'The not-so-old NDB client library uses memcache by default for caching. Hence, we need it while running tests. However, the Cloud NDB library would not use memcache.', 'comment_created': datetime.datetime(2021, 6, 11, 18, 12, 29, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 650279256, 'comment_body': 'FYI, my change was deployed yesterday.  There are no obvious problems with it so far.', 'comment_created': datetime.datetime(2021, 6, 11, 21, 42, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 650279907, 'comment_body': 'So, you just need to merge main into your branch.', 'comment_created': datetime.datetime(2021, 6, 11, 21, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 650281218, 'comment_body': 'OK that makes sense.  I look forward to being able to remove this line again.', 'comment_created': datetime.datetime(2021, 6, 11, 21, 47, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 650286414, 'comment_body': 'Hmm, do you see diffs being generated when notification emails are logged to the console after you edit a feature?  You will need to start the feature with one account and then edit it with a different account.\r\n\r\nI might not be understanding when this hook is run, but I would think that the properties of the Feature object would have already been updated before put() is called, and thus before _pre_put_hook() is called.  That would cause the differences to always appear to be no difference.\r\n\r\nI am thinking that _post_get_hook() would be the right hook.  But, that thought is just based on the names of the hook.  Only testing it will let us know for sure.', 'comment_created': datetime.datetime(2021, 6, 11, 22, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 650479910, 'comment_body': '@jrobbins, can we mark this as resolved ?  ', 'comment_created': datetime.datetime(2021, 6, 13, 6, 55, 36, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 650480497, 'comment_body': ""I migrated line 748 incorrectly earlier. `order` is not a property of Feature. Instead, it is a parameter of the function which contain these lines. On investigating, I found that `order` will always have the value `'-updated'`. Hence, I have changed it to `-Feature.updated`"", 'comment_created': datetime.datetime(2021, 6, 13, 7, 1, 29, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 650481056, 'comment_body': 'If `self.blink_components` is an empty list, the line show `Index Out of Range` Error. Hence, I have changed it to this syntax. \r\n\r\nUPDATE: We may not need to check for the empty list case as I have figured out a way to assign default value to `Feature.blink_components` using the constructor. See  [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1352/commits/d67262c4b566b7cce2f6235ddb069ccb005fd57c) commit. ', 'comment_created': datetime.datetime(2021, 6, 13, 7, 7, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 650486025, 'comment_body': 'Based on PR #1356, I have made these changes so that we can ensure Strong Consistency here.', 'comment_created': datetime.datetime(2021, 6, 13, 7, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 650486348, 'comment_body': 'likewise for this query', 'comment_created': datetime.datetime(2021, 6, 13, 7, 55, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 650489594, 'comment_body': 'Also, in PR #1356, the change was made for replacing `singleton = cls.get(cls.SINGLETON_KEY)` in `invalidate` function which does not pass the argument `read_policy`. I missed this while reviewing the PR. Should not the change have been made to replce the line 179 in the above snippet ? ', 'comment_created': datetime.datetime(2021, 6, 13, 8, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 650496626, 'comment_body': 'Update:- See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1352#discussion_r650489594) link', 'comment_created': datetime.datetime(2021, 6, 13, 9, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 650807741, 'comment_body': 'I can see the following line showing ALL the properties of the  feature\r\n> Starting to notify subscribers for feature {..._properties and values_..}\r\n\r\nIs it the same diff that you were referring to ? \r\n\r\nI also tried to log to console the properties with and without the `_old_` suffix. It turns out that they have the same values. Hence, `_pre_put_hook()` will not work. Thank you for pointing this out. I did not notice it as there was one more error that was being caused by initializing properties in `__init()__` and the line `Starting to notify subscribers for feature` was same as the line generated by old DB Client Library. \r\n\r\n`_post_get_hook()` will not work as it is a class method unlike `_pre_put_hook()` which is an instance method. Hence, I have used the method `_from_pb()` which is responsible for assigning the values to the instance. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1352/commits/abae9bc0d889bed64289797502b8d3d7721b6c78) commit ', 'comment_created': datetime.datetime(2021, 6, 14, 9, 55, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 651207400, 'comment_body': 'You are right.  I should have been done in both places.  Thanks for catching that.', 'comment_created': datetime.datetime(2021, 6, 14, 19, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 651207772, 'comment_body': 'Yes, here too. ', 'comment_created': datetime.datetime(2021, 6, 14, 19, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 651208186, 'comment_body': 'The linked conversation was resolved.', 'comment_created': datetime.datetime(2021, 6, 14, 19, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 651208355, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2021, 6, 14, 19, 13, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 651210402, 'comment_body': 'OK, that looks like it will work.', 'comment_created': datetime.datetime(2021, 6, 14, 19, 16, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 651527316, 'comment_body': 'This change is for assigning the default value to the property `blink_components`', 'comment_created': datetime.datetime(2021, 6, 15, 7, 36, 41, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 653139805, 'comment_body': 'This includes obsolete fields from old entities in our staging datastore.  Trying to do getattr() with an obsolete field causes an exception.  As a fix, please add\r\n```\r\n    # Skip obsolete values that are still in our datastore\r\n    if not hasattr(self, key):\r\n      continue\r\n```', 'comment_created': datetime.datetime(2021, 6, 17, 0, 23, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 653140161, 'comment_body': 'That seems good.', 'comment_created': datetime.datetime(2021, 6, 17, 0, 24, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 653141775, 'comment_body': ""It's probably best to keep this here.  While your linked commit should prevent the error, it's still safer to use defensive coding here.\r\n\r\nWhat you have here is fine, or you could try using `and` and `or` for a more compact expression:\r\nparams = ['components=' + (self.blink_components and blink_components[0] or  BlinkComponent.DEFAULT_COMPONENT)]"", 'comment_created': datetime.datetime(2021, 6, 17, 0, 29, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 653141925, 'comment_body': 'This looks good.', 'comment_created': datetime.datetime(2021, 6, 17, 0, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 653348528, 'comment_body': 'Done. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1352/commits/8e90293e478439ae02516cb8c4c997f5b4b42bce) commit ', 'comment_created': datetime.datetime(2021, 6, 17, 8, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 653468096, 'comment_body': 'I have fixed the None vs Empty String case. However, there are some fields in the diff with the following old and new values:\r\n\r\n```\r\n<li>\r\n     <b>all_platforms:</b> <br/>\r\n     <b>old:</b> None <br/>\r\n     <b>new:</b> False<br/>\r\n</li><br/>\r\n<li>\r\n     <b>wpt:</b> <br/>\r\n     <b>old:</b> None <br/>\r\n     <b>new:</b> False<br/>\r\n</li><br/>\r\n<li>\r\n     <b>prefixed:</b> <br/>\r\n     <b>old:</b> None <br/>\r\n     <b>new:</b> False<br/>\r\n</li>\r\n```\r\nDo we have to skip over None vs False case also?', 'comment_created': datetime.datetime(2021, 6, 17, 11, 16, 11, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 653913963, 'comment_body': ""Yes I think that would be best.  I did not see that happening on our staging server, but I don't see any downside to handling that case because the diffs that you pasted are not helpful to users."", 'comment_created': datetime.datetime(2021, 6, 17, 20, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 653916791, 'comment_body': ""Since this is the last detail, I'll go ahead and merge this PR and send you a new tiny PR to make this last change.  That should allow you to resolve conflicts and dig into the Cloud NDB upgrade."", 'comment_created': datetime.datetime(2021, 6, 17, 20, 36, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 654163507, 'comment_body': 'Done. See PR #1364 ', 'comment_created': datetime.datetime(2021, 6, 18, 6, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}]","[{'commit_sha': 'a56e8f6746cd1c24d1b4105b5304dd3cee7897e4', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae5c5166f3ae6ac1e3dcac75038a4697d983f889', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bca98d9a0e530434d03aa512789d8951ac4da9d7', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddb149cd0ef48c713bdb2e2395433f4b322f3633', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd577f3c3190724140519aff1ada238b7030f88e3', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27c2cddacac75b7fc3736684ceff00d80871d10c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c76e0b998a933f5d18af7ba507096383a20bb185', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bff87e38314c2199af4cbbabe63531324aa56c75', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e178a7134223cdb2ad89dfd5658fb420a9bf8bb9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68e687800aaf4f3d45a592402bf5adf34e4a9a61', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8574682d94de9f5f585a321f538a70db962380b5', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97d38b9324b423b6fc4d490b526f0e5d93f417c0', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f6686ecf9af81aee0e94b92c98b609c64083828', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '653e643e6ebbafa9031c338cf77036195dda9bcd', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b63479fbf1794f6e546d0927eec58c921c709b8', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04808b41bfb4e64087cc5b21c4bd7988431f8b5e', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da8cbcb7e851b618ad733132a750eb26f8eaa564', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b0773c619bf29002162319febe965e8b5cd637f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '818f0bcb615a63336f9b43bc8c895f0846cb1cb3', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e89d045d7d78cdbadb8f1b2d8f7664b35b06c105', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67fa2ff7135afd9a933dad730d2f64b9d490da3a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8edbcddeb7b8d5a80780da577ed96c561ceddc3b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '781579ca2f2eaca2e30eb4b26f52af941a1b2e65', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b76b344a3b6485f88fedb67973fd345670a8a376', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2de8ee447a92605fb0e51c91fa2cd26e2f974e60', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af07f43cd19b32c09a24efbd85c867428f5f5615', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d5bc73bcd162896c5e07eef0f93ba4c7d5ee6e0', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18d2487d311edafb5d1abac8bae1553045a469de', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c50e683b961058b49a4d6c10be38c13d18cc1fb9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b7e66df3ff0f3f31e7bd4db894e04d310cb5db1', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd67262c4b566b7cce2f6235ddb069ccb005fd57c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2b44fab713c2b51e47bb95d54897960471831b9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd0138fb8b791403f2f6db6bb69fd12a3a80c22a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283ed8a0f67b16c44b44fc30a6051c46e78c9656', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abae9bc0d889bed64289797502b8d3d7721b6c78', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2aa2fd1c79dd736930bb8d83e65955adf809f643', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e90293e478439ae02516cb8c4c997f5b4b42bce', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b3bb15d2a33c2f48748c33c2883f66690bba210', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82d547d318f7a6e9e4877d07b37d9f1c0ca13224', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
673190868,20210618 follow up ndb migration,"Review Requested:- @jrobbins 

This is a follow up to #1352. 

In this PR,
* Ignore the None vs False case while generating diffs
* Updated Developer Documentation with the history of the project.
* Updated Developer Documentation with process to generate the diff after editing the feature",True,1364,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1364,https://github.com/GoogleChrome/chromium-dashboard/pull/1364,closed,14,2,2,3,0,0,0,0,[],2021-06-18 06:02:16+00:00,2021-06-18 15:45:29+00:00,34993.0,9:43:13,[],"[{'commit_sha': '07c825d16d5545c13b462097b28c33b1151d5fe3', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7cd636bc2972b7543df3aa7f132f4d73da4da9f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cacc02d04e25510fcc44884fc79ede5447dab89e', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
673402366,20210618 gae ndb to cloud ndb,"This PR is the second step in solving  #1075 and #1076. This PR is a follow up to #1352.

This PR will migrate our usage of  GAE NDB to Cloud NDB. ",True,1365,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1365,https://github.com/GoogleChrome/chromium-dashboard/pull/1365,closed,137,118,37,44,17,29,0,0,[],2021-06-18 11:38:49+00:00,2021-06-29 02:05:04+00:00,915975.0,"10 days, 14:26:15","[{'comment_id': 654362145, 'comment_body': 'See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1351#discussion_r645886479) link', 'comment_created': datetime.datetime(2021, 6, 18, 11, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 654370931, 'comment_body': '@jrobbins, We need to add this case as unlike the not-so-old NDB Client Library, the Cloud NDB does not use GAE Users Library for creating `User` Objects', 'comment_created': datetime.datetime(2021, 6, 18, 11, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 654534930, 'comment_body': 'That makes sense.', 'comment_created': datetime.datetime(2021, 6, 18, 15, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 654536336, 'comment_body': 'OK.', 'comment_created': datetime.datetime(2021, 6, 18, 15, 53, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 655290391, 'comment_body': 'We can use this method for stashing the old values. It seems to work fine. \r\n\r\nFIY, The diffs still show three extra fields that are not useful to the user. These fields belong to None vs False case. Hence, merging main branch in this PR, will solve this problem completely. ', 'comment_created': datetime.datetime(2021, 6, 21, 11, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 655291089, 'comment_body': 'Calling the stash_values() here as mentioned [here](https://github.com/GoogleChrome/chromium-dashboard/pull/1365#issuecomment-864134466). Thank you for letting me know there was only one place where this method call was required.', 'comment_created': datetime.datetime(2021, 6, 21, 11, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 655792195, 'comment_body': 'Sounds good.', 'comment_created': datetime.datetime(2021, 6, 22, 0, 28, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 656356356, 'comment_body': 'We can use this script to start the emulator. `--no-store-on-disk` will not store the entries on the disk. ', 'comment_created': datetime.datetime(2021, 6, 22, 15, 49, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 656358362, 'comment_body': 'These two environment variables are needed to be added while running tests. ', 'comment_created': datetime.datetime(2021, 6, 22, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 656496281, 'comment_body': 'Makes sense.', 'comment_created': datetime.datetime(2021, 6, 22, 18, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 656497286, 'comment_body': 'So, would the user need to run that command before running tests?  Can we put it into the `test` target?', 'comment_created': datetime.datetime(2021, 6, 22, 18, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 657245097, 'comment_body': '> So, would the user need to run that command before running tests?\r\n\r\nYes the developer will have to run the emulator before running any test.\r\n\r\n> Can we put it into the test target?\r\n\r\nOn executing the npm run emulator, the terminal will get busy with the emulator process. To run the tests, we will have to use another terminal.', 'comment_created': datetime.datetime(2021, 6, 23, 15, 53, 7, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 657304098, 'comment_body': 'OK, that sounds fine for now.   Later we can try running it in the background in the same npm target.', 'comment_created': datetime.datetime(2021, 6, 23, 17, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 657634951, 'comment_body': 'Some tests were failing because the default consistency of the emulator is 0.9. As mentioned [here](https://cloud.google.com/sdk/gcloud/reference/beta/emulators/datastore/start), \r\n\r\n> --consistency=CONSISTENCY; default=0.9\r\nFraction of eventually consistent operations that should succeed immediately. Setting to 1.0 can be useful for unit tests, but may mask incorrect assumptions about non-ancestor queries which are eventually consistent.\r\n\r\nSetting the consistency to 1.0 makes the test cases run successfully.  ', 'comment_created': datetime.datetime(2021, 6, 24, 5, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 657635343, 'comment_body': 'We do not require these two stubs. Hence, removed.', 'comment_created': datetime.datetime(2021, 6, 24, 5, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 657670451, 'comment_body': 'These targets are for starting and stopping the emulator. The steps to be executed for running the tests is\r\n\r\n1. `npm run start-emulator` \r\n2. `npm test` - reset the emulator and start runnning the tests. \r\n3. `npm run stop-emulator` ', 'comment_created': datetime.datetime(2021, 6, 24, 6, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 659084609, 'comment_body': 'You can remove this commented-out line now.', 'comment_created': datetime.datetime(2021, 6, 25, 23, 43, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 659091443, 'comment_body': 'These with-statements look correct, but they do get kind of repetitive.  Would it work to override the run() method in each test class like this?\r\n\r\n```\r\n  def run(self, result=None):\r\n    with client.context():\r\n      super(AccountsAPITest, self).run(result=result)\r\n```\r\n', 'comment_created': datetime.datetime(2021, 6, 26, 0, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 659092074, 'comment_body': 'This commented-out line can also be removed.', 'comment_created': datetime.datetime(2021, 6, 26, 0, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 659092130, 'comment_body': 'Same.', 'comment_created': datetime.datetime(2021, 6, 26, 0, 25, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 659092169, 'comment_body': 'Same.', 'comment_created': datetime.datetime(2021, 6, 26, 0, 25, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 659092365, 'comment_body': 'Same.', 'comment_created': datetime.datetime(2021, 6, 26, 0, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 659092787, 'comment_body': 'Great!', 'comment_created': datetime.datetime(2021, 6, 26, 0, 30, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 659120472, 'comment_body': 'Oops...I forgot to remove the commented out lines. Thank you for pointing that out. Done!', 'comment_created': datetime.datetime(2021, 6, 26, 5, 4, 27, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 659120505, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2021, 6, 26, 5, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 659120509, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2021, 6, 26, 5, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 659120534, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2021, 6, 26, 5, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 659120539, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2021, 6, 26, 5, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 659135249, 'comment_body': 'Yes, it seems to work fine. Also, as [suggested](https://github.com/GoogleChrome/chromium-dashboard/pull/1365#issuecomment-866246577) by you earlier, I have made a base class for the tests (See [these](https://github.com/GoogleChrome/chromium-dashboard/blob/718bff6e47091cb73159c37c2e87c16d3094ea45/testing_config.py#L128) lines). I have changed the baseclass of all the tests in [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1365/commits/718bff6e47091cb73159c37c2e87c16d3094ea45) commit\r\n\r\nThe tests work fine. Thank you for pointing out this method. I was unaware about this method as I have never used unittest before in any of my projects. ', 'comment_created': datetime.datetime(2021, 6, 26, 7, 46, 31, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}]","[{'commit_sha': '98b23cac2a1c590785e3790fddbb3cb5ea9accbc', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35b4bf615a2c94c160a513b0c6941168cd8f8da4', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c170f7f25caf96907b281a2c14f049c8ff366150', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f321c9802b6aa2692b88c46a7a451043a26ea2b4', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45406a904298a86e82950e737cd76ed18dc7748e', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6b82200b72f8698c0ed637152fe0ad59dd902ff', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b782cbed7b44aca846d17443dd25e2eada8727b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98879de703b0467a0b37e7a629a400db0912d199', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40fc6fc2a055a84e7ba7b585a22b0573082c7887', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f9faa6b30c8b038e420e348d463d5f4cca86e4a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd869f2e2aeab3a4cf4e3652d49f2e874b80659', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3d364636f5020d1ba82a13bfdc992176e3d13b9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c23b7c900ba6f025051d515012e4e07365bfad3f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c9211efa4af71e18bb29a2f7673997e130e10a9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64f70e18f7817b15e6b4c5d920d867daa0eb58f2', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f97cffee4bc85bea5cc3b13a17e7cb1f934fb1f6', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17ecd4986739614ae59513e71ef849b63a12de08', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc7b0df2ee6ecd80976c0784ae8a6e0b154ff916', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28d43ee9f90544be0cdd85f6f2c6842ed60f1137', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fef2976f52f5d2131d0c56af563aa1b56602d24d', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4a38ee7884ba48fd564c5fa02d2e1d637a23b62', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cfeb9fe4d6d0fe22dfa52337be7f65d566d4482', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dcf1c9578f15313b7b736f4584e84f74fc8dd21', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '438bed342d192479b59ca17537a3b7b9eb75533e', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cdc3175effc0f192668d6ae655a6aaa5ded2f6a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3a0b7274883644389dc8bc6fa20428377a128f6', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd99bf2b8e7ea3c78b0d38ba6b576b97c37a600db', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '349a32c0f55166fc05a6d259cddc0d0e51067232', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '506b8b24d554cc23cd2eb7ed43b114f13183c0f9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e915c5949d79839a435180f5dd138d0dd5b67747', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4108cff7b1eaa0513f7e04e08eb7ae9e7f8e0ea', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f10baf061da27b160fcf3f5afef05885740f3de', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '722a74234ffdc706110bae682b394cd392978d2b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7097f41aa7c33dbc47a26387f25d55a12f55e83d', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5863401d0243bb88c60df860e85fcec55a022ce7', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f97f4326d1fb81fc4068fe4191f9fbd55a271ad3', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd7a8e5aa033e13ee229d098aacf38039fb47834', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec4af9eeb18ffb8e241519e6c2fd74ed51fd104b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0eaee9114a5a6eae3e849c84029a5b6847502e1', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df7b56109dac92895c2f5b48794bcde6ed4c2af', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d3b6c884051d9b6574edfea04e2844c5e119185', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aebfa3f26db5687fab41a63463209e8f18b7339', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c0b29569da6e1856c26b4f773daa1151b11b8f7', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '718bff6e47091cb73159c37c2e87c16d3094ea45', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
683886115,20210702 new features api,"Review Requested: @jrobbins 

In this PR, 

- implemented get method for the features api
",True,1399,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1399,https://github.com/GoogleChrome/chromium-dashboard/pull/1399,closed,53,6,3,3,1,2,0,0,[],2021-07-05 18:59:33+00:00,2021-07-07 02:01:43+00:00,111730.0,"1 day, 7:02:10","[{'comment_id': 664092927, 'comment_body': ""The 'Releases Schedule' page fetches the list of features using JS. The key `features` defined in `template_data` is not used in the template `schedule.html`. Hence, it seems to be unnecessary to include the `features` key here.   "", 'comment_created': datetime.datetime(2021, 7, 5, 19, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 664986238, 'comment_body': 'Good point.', 'comment_created': datetime.datetime(2021, 7, 7, 2, 1, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}]","[{'commit_sha': '454a9a8c252e8847a264ff365baccce68c6f913a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d42020e03d7c1e1f1049842e26b34dcdb610e76', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c18fe715007c1c52c5ebac57f35bd3bbec61ba', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
684349824,Channels API,"Review Requested: @jrobbins 

In this PR,

- added API for channels.

`schedule.html` requires feattures list and channels with release schedule. This PR creates an API for channels. In a future PR, we will try to use this API for fetching the channels.   ",True,1400,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1400,https://github.com/GoogleChrome/chromium-dashboard/pull/1400,closed,189,1,4,3,0,3,0,0,[],2021-07-06 12:52:08+00:00,2021-07-07 18:50:13+00:00,107885.0,"1 day, 5:58:05","[{'comment_id': 664528133, 'comment_body': 'I have patched objects in the namespace where they are used. ', 'comment_created': datetime.datetime(2021, 7, 6, 12, 54, 39, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 664988373, 'comment_body': ""Hmm, I would expect it to be\r\n@mock.patch('internals.fetchchannels.get_omaha_data')\r\nIf you see tests passing, then I suppose it works either way, but I think specifying the location where a function is defined is more conventional."", 'comment_created': datetime.datetime(2021, 7, 7, 2, 8, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 665218709, 'comment_body': 'Yes the test was a success. Anyway, I have changed it to what you suggested thanks.', 'comment_created': datetime.datetime(2021, 7, 7, 9, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}]","[{'commit_sha': '3a5265cbc2cc370d0a62642ef98b9e84df135d23', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '032c67f7074f029ad1c790de98f6a234ba887887', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8ec0d197ea96116c980076fd1a15442e4e13656', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
691638806,Query-String Parameter for milestone in features api,"Review Requested: @jrobbins 

Merging this should close #1414 

In this PR,

- Added a Query-String Parameter for milestone in features API to fetch features in a specific milestone",True,1424,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1424,https://github.com/GoogleChrome/chromium-dashboard/pull/1424,closed,282,21,4,9,0,23,0,0,[],2021-07-16 17:21:03+00:00,2021-07-19 20:13:31+00:00,269548.0,"3 days, 2:52:28","[{'comment_id': 671413969, 'comment_body': '@jrobbins, Features with desktop or android milestones that are same as the queried milestone, will be returned by the API.', 'comment_created': datetime.datetime(2021, 7, 16, 17, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671414328, 'comment_body': 'If the query string is anything other than a number, the request will be aborted with error code 400.', 'comment_created': datetime.datetime(2021, 7, 16, 17, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671440724, 'comment_body': ""You could drop the version=2 argument and the parameter in the function because they are not used.  I think that was a left-over detail of some old upgrade to the chronological feature list feed.  We don't need that for new code, especially since we have a version number in the API URL path."", 'comment_created': datetime.datetime(2021, 7, 16, 18, 11, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 671440853, 'comment_body': 'That sounds right.', 'comment_created': datetime.datetime(2021, 7, 16, 18, 11, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 671441445, 'comment_body': 'The call to permissions.can_edit_feature(user, None) could be factored out to the top of the method.', 'comment_created': datetime.datetime(2021, 7, 16, 18, 12, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 671442569, 'comment_body': 'No longer sorting by milestone.', 'comment_created': datetime.datetime(2021, 7, 16, 18, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 671442943, 'comment_body': 'I think that this will be needed.', 'comment_created': datetime.datetime(2021, 7, 16, 18, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 671608889, 'comment_body': 'If we do not specify `version = 2`, then the API response for the new API will be different than what it is for `features.json` and `features_v2.json`. (Both `features.json` and `features_v2.json` use `version = 2` in the `format_for_template()`  method in `models.py` and hence, their response is same.) \r\n\r\n**_How is the response different ?_**\r\nSee this [issue](https://github.com/GoogleChrome/chromium-dashboard/issues/321) containing all the differences if we do not pass `version = 2` in the `format_for_template()` method.\r\n\r\n \r\n', 'comment_created': datetime.datetime(2021, 7, 17, 4, 46, 53, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671643273, 'comment_body': 'Should we make the `format_for_template()` method use `version = 2` by default ?  ', 'comment_created': datetime.datetime(2021, 7, 17, 8, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671644386, 'comment_body': 'Done. Thank you for pointing this out.', 'comment_created': datetime.datetime(2021, 7, 17, 8, 38, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671644604, 'comment_body': 'Oops... I forgot to make changes to this comment. \r\n\r\nDone. Thanks', 'comment_created': datetime.datetime(2021, 7, 17, 8, 41, 8, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671667315, 'comment_body': ""The `get_chronological()` method returns the list of all features such that features having similar implementation statuses are listed together. Note that the features that have shipped milestone field or shipped android milestone, are grouped together according to the chromium version number instead of the implementation status.\r\n\r\nHence, features with implementation statuses as `'Behind a flag'`, `'Enabled by default'`, `'Deprecated'`, `'Removed'`, `'Origin trial'` etc., which always have shipped milestone field or shipped android milestone, are always grouped according to the chromium version numbers.\r\n\r\nIt seems that `_annotate_first_of_milestones()` annotates the first feature of each implementation statuse (which IS NOT associated with version numbers) and each chromium version. It fails to annotate the first feature which is `behind the flag`, `removed`, `deprecated` etc. \r\n\r\nSince, all the features that are returned by the `get_in_milestone()` method belong to a certain version number and hence has one of the implementation statuses from `'Behind a flag'`, `'Enabled by default'`, `'Deprecated'`, `'Removed'`, `'Origin trial'` etc., the method `_annotate_first_of_milestones()` will not be of any use to us."", 'comment_created': datetime.datetime(2021, 7, 17, 10, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671667867, 'comment_body': 'I did not notice it earlier. To sort the features in the given chromium version according to the implementation status, we will have to use a new method.', 'comment_created': datetime.datetime(2021, 7, 17, 10, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671688528, 'comment_body': 'See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1424/commits/8f84d1147cd56a3adb440b35663c7b4f635c64bc) commit ', 'comment_created': datetime.datetime(2021, 7, 17, 11, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671726280, 'comment_body': ""Yeah, let's make version=2 the default, then it can be omitted from this code."", 'comment_created': datetime.datetime(2021, 7, 17, 18, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 671726661, 'comment_body': 'Good point.  That looks good now.', 'comment_created': datetime.datetime(2021, 7, 17, 18, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 671726935, 'comment_body': '""versions"" sounds like it would be milestones.  ""statuses"" would be a better name.', 'comment_created': datetime.datetime(2021, 7, 17, 18, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 671727027, 'comment_body': 'Looks good.', 'comment_created': datetime.datetime(2021, 7, 17, 18, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 671727067, 'comment_body': 'You could remove reverse=False here and on the next line.', 'comment_created': datetime.datetime(2021, 7, 17, 18, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 671782128, 'comment_body': 'Okay.\r\nDone\r\nSee [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1424/commits/8ce4987c4f193c24781d866a2a9449a44a40548a) commit', 'comment_created': datetime.datetime(2021, 7, 18, 4, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671782154, 'comment_body': 'Okay. Marking this conversation as resolved.', 'comment_created': datetime.datetime(2021, 7, 18, 4, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671783828, 'comment_body': 'True. Thanks for pointing this out. Done.', 'comment_created': datetime.datetime(2021, 7, 18, 5, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 671785730, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 18, 5, 39, 41, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}]","[{'commit_sha': 'e04e3ac785fbdab03d46008c9025d5f1f25ee331', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '020afd01bca9f29967a48ac39708fbec6062992b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73f3794b48013c427499288759c428ec4a2f7a65', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7698906a40ccfaae0ecb6950388cb1b4e351943a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f84d1147cd56a3adb440b35663c7b4f635c64bc', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f24ae465c9e0682f11b9a45a0e72e16ea1595aa', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ce4987c4f193c24781d866a2a9449a44a40548a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '814ed60678035a9cc174a684a9126d0d3056266b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83998f13344539ea23c73ed5c4601a9033c4361f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
692585587,New upcoming page,"Review Requested: @jrobbins 

Merging this should close #1415 

In this PR,

- Created a new page 'upcoming' which can be accessed by visiting '/upcoming'
- The new upcoming page shows schedule like the old releases page but uses Channels API and features API
- The features are fetched separately for each milestone.",True,1426,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1426,https://github.com/GoogleChrome/chromium-dashboard/pull/1426,closed,196,0,6,5,0,8,0,0,[],2021-07-19 13:01:59+00:00,2021-07-20 20:59:56+00:00,115077.0,"1 day, 7:57:57","[{'comment_id': 672608107, 'comment_body': 'Rather than defining the URLs and calling fetch() and stripping XSSI prefix in this file, it would be better to add API methods in static/js-src/cs-client.js.  If you follow the pattern of existing API calls in that file, your new functions will return a promise that you can use here.', 'comment_created': datetime.datetime(2021, 7, 19, 20, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 672608965, 'comment_body': 'Now I see what you mean about basing one PR on another.   Since this diff is pretty big, I will need you to rebase rather than me trying to resolve a small conflict.', 'comment_created': datetime.datetime(2021, 7, 19, 20, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 672614721, 'comment_body': ""I don't see where set is used."", 'comment_created': datetime.datetime(2021, 7, 19, 20, 38, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 672836786, 'comment_body': 'Yup... I updated the main in my fork and then rebased this branch with the updated main branch again. Now, the diff of this PR shows changes made in this PR only. ', 'comment_created': datetime.datetime(2021, 7, 20, 6, 19, 52, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 673197092, 'comment_body': 'Okay. I have made the change in [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1426/commits/44628b1afb0f948d05237d20fca1eb912b1bb7ba) commit. \r\n\r\nPlease review', 'comment_created': datetime.datetime(2021, 7, 20, 14, 51, 36, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 673250936, 'comment_body': 'It seems to be unreferenced even in the chromedash-schedule.js\r\n\r\nI have removed it in [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1426/commits/8dd8fa3e89b48b1ab7b2d9ad8981a3956cdabe87) commit.', 'comment_created': datetime.datetime(2021, 7, 20, 15, 52, 39, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 673488875, 'comment_body': 'Looks good', 'comment_created': datetime.datetime(2021, 7, 20, 20, 59, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 673489008, 'comment_body': 'Thanks', 'comment_created': datetime.datetime(2021, 7, 20, 20, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}]","[{'commit_sha': '9c666183526e4f07ffcff3274211764f437a302f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b061718bd1f73b8432d322490c53e383e07f3301', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6de6a27ff57a514e7895833448c5f7210dab3f1e', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44628b1afb0f948d05237d20fca1eb912b1bb7ba', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dd8fa3e89b48b1ab7b2d9ad8981a3956cdabe87', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
695531687,Using Webcomponent for each milestone card,"Review Requested:- @jrobbins 

Merging this should close #1416 and #1419 

This PR is an humble attempt at 

- using web-components for each milestone card in the upcoming page
- a parent web component (`chromedash-upcoming`) manages the state for all the child web component (`chromedash-upcoming-milestone-card`)

The basic principle that I have used is ""Properties Down, Events Up"" i.e. parent element share data with children by binding properties to them, and child elements share data with parents by raising an event with relevant data in the detail of the event.",True,1432,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1432,https://github.com/GoogleChrome/chromium-dashboard/pull/1432,closed,469,23,9,15,3,32,0,0,[],2021-07-22 21:47:01+00:00,2021-08-03 15:00:54+00:00,1012433.0,"11 days, 17:13:53","[{'comment_id': 675666735, 'comment_body': 'We no longer need this filter as we are already fetching features according to the milestone', 'comment_created': datetime.datetime(2021, 7, 23, 15, 49, 56, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 675670468, 'comment_body': 'Show Shipping Type replaces the Show Blink Components button. If you approve the UI, we can make the change to show the shipping types by default in a later PR.', 'comment_created': datetime.datetime(2021, 7, 23, 15, 55, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 676912058, 'comment_body': 'Is this computing a date or just formatting it differently?', 'comment_created': datetime.datetime(2021, 7, 26, 20, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 676914033, 'comment_body': ""The variable name `days` sounds like it would be a number.  A more conventional choice for this would be to use a variable named `plural`.\r\n\r\nInternationalization is not a priority for this project, but one tip for internationalization is to never have code that composes letters into words.  Also, zero days should have an 's'.  So, it could be like:\r\n`const dayWord = diff.days == 1 ? 'day' : 'days';`\r\n\r\nLikewise, you have a couple of variables here based on diff.future.  It might be more clear and a better practice to have one big conditional on that rather than compose words into a sentence:\r\n```\r\nif (diff.future) {\r\n  return `in ${diff.days} ${dayWord}`;\r\n} else {\r\n  return `${diff.days} ${dayWord} ago`;\r\n}"", 'comment_created': datetime.datetime(2021, 7, 26, 20, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 676928274, 'comment_body': 'This would probably be more clear if render() used one helper function to render the info at the top of the card, and a second helper function to render the feature list.  And, that feature list helped function might rely on a third helper function that renders one feature item along with the icons.', 'comment_created': datetime.datetime(2021, 7, 26, 20, 39, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 676930072, 'comment_body': 'It would be good to indicate that this is going to hold a Set.  Maybe you could just do that in a comment.', 'comment_created': datetime.datetime(2021, 7, 26, 20, 42, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 676934418, 'comment_body': 'Rather than convert objects to a string set attributes, I think you can set properties directly using a leading period.  For example, I think you could have\r\n  `.channel=${this.channels[type]}`\r\n\r\nOf course, what you have will work and it might be easier to debug, but it seems like it could create an opportunity for future defects if there is ever any value that cannot be serialized.\r\n\r\nSee: https://lit-html.polymer-project.org/guide/writing-templates#bind-to-properties', 'comment_created': datetime.datetime(2021, 7, 26, 20, 49, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 676935167, 'comment_body': 'looks good.', 'comment_created': datetime.datetime(2021, 7, 26, 20, 50, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 676936963, 'comment_body': ""I'd like to eventually phase out SASS and use lit-css instead.  Do you think that the CSS for each of these components could be specified in its .js file?  It's OK to still have a SASS file for the overall page for now."", 'comment_created': datetime.datetime(2021, 7, 26, 20, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 676939278, 'comment_body': 'OK.', 'comment_created': datetime.datetime(2021, 7, 26, 20, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 678549713, 'comment_body': 'FIY, This function was present in the OLD schedule page. I have not added anything to it. \r\n\r\nIt seems to convert date string obtained from API to a date object so that it is easier to perform date operations like subtracting two dates.', 'comment_created': datetime.datetime(2021, 7, 28, 18, 23, 20, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 678552559, 'comment_body': 'FIY, This function was being used as it is by OLD schedule page. \r\n\r\nOkay, I have noted these points. Will make the suggested changes, Thank you for letting me know.', 'comment_created': datetime.datetime(2021, 7, 28, 18, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 678566063, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 28, 18, 47, 14, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 678575804, 'comment_body': 'See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1432/commits/2fbca619fdf1f47b5e606241fd1da1b906a2cee9) commit ', 'comment_created': datetime.datetime(2021, 7, 28, 19, 1, 29, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 678577542, 'comment_body': 'Okay. Done. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1432/commits/6b0ee35dea11411c0a7eb5db5c9420a0bc7cae8d) commit.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 678582048, 'comment_body': 'The CSS file for these components import certain variables and styles from other css file. It seems possible to phase out our use of SASS and use lit-css instead. However, It would be better to have separate PRs for this KR.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 678599269, 'comment_body': 'Okay. Thanks for letting me know. \r\n\r\nDone. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1432/commits/8f2bfe4d221537bac662172628161ddf06c5d14c) commit', 'comment_created': datetime.datetime(2021, 7, 28, 19, 38, 55, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 678638509, 'comment_body': ""OK.  I think the name might be more clear with some other verb, but I don't feel strongly about it."", 'comment_created': datetime.datetime(2021, 7, 28, 20, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 678638825, 'comment_body': 'ok', 'comment_created': datetime.datetime(2021, 7, 28, 20, 44, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 678641226, 'comment_body': 'Why do some values still have single quotes around the expression?  Is that needed?', 'comment_created': datetime.datetime(2021, 7, 28, 20, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 679097512, 'comment_body': 'Okay. This seems to be the better approach. \r\n\r\nDone. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1432/commits/b77f2604c3870df414b27bfc7cb4e7026e96b161) commit.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 679112362, 'comment_body': 'Oops... I had removed them. But later, when I undo-ed some of the changes, I forgot to remove them again. Thanks for pointing it out. \r\n\r\nDone', 'comment_created': datetime.datetime(2021, 7, 29, 12, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 679118306, 'comment_body': 'I have renamed the `showBlink` variable to `showShippingType`', 'comment_created': datetime.datetime(2021, 7, 29, 12, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 679119993, 'comment_body': 'Earlier, the true condition would return the object `nothing` . This would show up in the html as `[Object object]`. Hence, I have replaced it with empty string.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 679583723, 'comment_body': ""Granting that I don't know how this constant is being used, 'deprecated' and 'no longer pursuing' aren't the same thing."", 'comment_created': datetime.datetime(2021, 7, 30, 1, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jpmedley', 'type': 'User'}, {'comment_id': 679731027, 'comment_body': ""Hmm... This constant is being used to display the tooltip and icon for 'deprecated' and 'no longer pursuing' features on the CURRENT (OLD) releases page. The developers, who developed the OLD releases page, used the same icon and tooltip for both the deprecated and no longer pursuing features. Hence, it  may be the reason for them to define the constant this way. \r\n\r\nAnyway, Is it correct and helpful for the users that the same icon be used for both the types of feature on the releases page? "", 'comment_created': datetime.datetime(2021, 7, 30, 8, 0, 51, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 679997016, 'comment_body': ""I think this is a problem. If I'm scrolling through the list with everything, this icon is the only thing that tells me the status of a feature. It provides incorrect information.\r\n\r\n@jrobbins should I open a ticket on this?"", 'comment_created': datetime.datetime(2021, 7, 30, 15, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jpmedley', 'type': 'User'}, {'comment_id': 680264184, 'comment_body': 'Would a feature that is no longer pursed belong on the roadmap view at all?\r\n\r\nI\'m thinking that this might be code that was copied-and-pasted a while back from the feature list page, where such a feature might appear in the section of the feature list for those features.  However, this code is only for the ""upcoming"" roadmap view.\r\n\r\nIf this logic case is needed for this page, then let\'s track a separate issue for it.', 'comment_created': datetime.datetime(2021, 7, 30, 23, 20, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 680983186, 'comment_body': ""@cwilso Please comment. I believe there is a reason to display this. The one that occurs to me is to have a record of things considered and rejected so that later engineers don't re-propose the same or similar ideas. I wonder if we should go so far as to require an explanation for why something is no longer being pursued. It might save someone from starting down a dead-end road."", 'comment_created': datetime.datetime(2021, 8, 2, 13, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jpmedley', 'type': 'User'}, {'comment_id': 681265539, 'comment_body': 'Looks good.', 'comment_created': datetime.datetime(2021, 8, 2, 20, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 681267107, 'comment_body': 'Looks good.', 'comment_created': datetime.datetime(2021, 8, 2, 20, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 681268196, 'comment_body': 'Features that are no-longer-pursued would still be in the feature list.  I just don\'t see a place for them on the ""Upcoming"" page because they are not part of any upcoming release.', 'comment_created': datetime.datetime(2021, 8, 2, 21, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}]","[{'commit_sha': '285c0c0913572a807fdde0b8171336230dd7f055', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34e6350e5dcea0f2a56e0cfb7c6ba36badade599', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '506027a2c3cf933600b0846856d6f742810b5f72', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e72d01e75dfc6aaba8f1e1add9301c3a0d5bf1c6', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e73b47b88708e110f9ba298e7b262747353caf44', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92dbc41ca2b4ffd7d9f33fc345580cd65889a6aa', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baec8db43d4ec80c826f92ced5e026fbf71444c7', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fbca619fdf1f47b5e606241fd1da1b906a2cee9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b0ee35dea11411c0a7eb5db5c9420a0bc7cae8d', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f2bfe4d221537bac662172628161ddf06c5d14c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fdd87c2b226ecd706b34965f3b72cbbe04a5e67', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b77f2604c3870df414b27bfc7cb4e7026e96b161', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8edc7a40108f87b5ccc82f09311b66412e9964c4', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63f74ce124031cd5c447c59efad5372d443e31c4', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09ff07ad919dd7e09bef02a4faa9740668093d9c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
703905784,Scroll Behaviour on upcoming page,"Review Requested:- @jrobbins 

In this PR, 

- added scroll behaviour in the new upcoming page
",True,1451,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1451,https://github.com/GoogleChrome/chromium-dashboard/pull/1451,closed,127,7,8,9,4,0,0,0,[],2021-08-04 19:29:55+00:00,2021-08-06 00:08:59+00:00,103144.0,"1 day, 4:39:04",[],"[{'commit_sha': '00d9d0d7e286d893e86d0980ce9fbd621375198d', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a3965b620cb00d0da57d4c709d1d584aca45038', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1eb33771519b95f57842ce9cc83c8c038a4ac87', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '718e412f45843c361cd1c7251d29d915f9fa9123', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18e1bdfb3a554d0f46806d5d43dd731e6e71156f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b81689873a3b0faa7c3ef85b9930d68ba56424b4', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '294ff03b8f7eeed091ae7602287fa92704e8a795', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6484a9c7178c33a2963c326c6de822d140a6ea0', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb396e5ff79d69715a3659febe8914efc0d44693', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
705447093,Responsive Scroll for narrow viewports,"Review Requested:- @jrobbins 

In this PR. 

- Added support for dynamically setting the number of cards to be displayed at once according to the viewport size.
- In narrow view ports, the UI will be same as that of the larger viewports. Only one milestone will be displayed at once.",True,1455,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1455,https://github.com/GoogleChrome/chromium-dashboard/pull/1455,closed,38,46,7,4,6,0,0,0,[],2021-08-06 12:30:22+00:00,2021-08-09 16:13:38+00:00,272596.0,"3 days, 3:43:16",[],"[{'commit_sha': '3ae09bbbf42873ddb247e287f6e21a53a20060eb', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b9702605257c20f40870cf3aac57d9d2e9fcb2', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b64d76f2ea936038b5b1a65e6113bf159f1971a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51f58ba837ad34fe93f72f9944a0bff3f8dacf35', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
706639658,Features API can return same feature with different implementation status in multiple milestones,"Review Requested:- @jrobbins

In this PR,

- the response of the Features API can return same feature with different implementation status in multiple milestones.
- the features API make use of OT_start/OT_end and DT_start/DT_end fields.",True,1457,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1457,https://github.com/GoogleChrome/chromium-dashboard/pull/1457,closed,50,35,1,3,0,23,0,0,[],2021-08-09 15:52:33+00:00,2021-08-13 15:46:46+00:00,345253.0,"3 days, 23:54:13","[{'comment_id': 686152365, 'comment_body': ""I don't think we should check imply_status_chrome because we want to show a feature as shipping in a future milestone even if it is not already shipping.  E.g., if the current milestone is 92, a feature that is estimated to ship in milestone 95 will likely have a current value for impl_status_chrome == BEHIND_A_FLAG.  But, we want to display it on the upcoming page for milestone 95 because it is estimated to have  impl_status_chrome == ENABLED_BY_DEFAULT by the time that that future milestone arrives.  In our meeting today, I had said that this case is OK as-is, but thinking about it more I think that this case also needs to have the condition removed."", 'comment_created': datetime.datetime(2021, 8, 10, 16, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686152827, 'comment_body': 'Likewise, remove this condition.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686153171, 'comment_body': 'Remove.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 54, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686154357, 'comment_body': 'This should be just == the ot_milestone_desktop_start.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686154639, 'comment_body': 'Remove.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686156712, 'comment_body': 'Just == the ot_milestone_android_start.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686161807, 'comment_body': ""I like the idea of adding in legacy features that do not have a DT milestone.  However, I don't think that this is the right logic.   For example, if the user scrolls back in time to previous milestones, the same BEHIND_A_FLAG features would appear again and again in every milestone.   I think the missing condition is that these legacy features should only be considered if the milestone in this API request is the one on the stable channel currently.  There is no need to check shipped_milestone."", 'comment_created': datetime.datetime(2021, 8, 10, 17, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 687446132, 'comment_body': ""Hmm...  I get it. We should remove this condition. This will also remove the need for querying the legacy dev trials separately as features with no dt field set will also be included automatically. \r\n\r\nAlso, as you said -  _'the feature is estimated to have impl_status_chrome == ENABLED_BY_DEFAULT by the time that that future milestone arrives'_, this makes me thinking that we will have to update each feature's  impl_status_chrome according to the future milestone as different feature types (ENABLED_BY_DEFAULT, DEPRECATED) all can have origin trials and dev trials. But when they are shipped, the field  `impl_status_chrome` will be different. Since the frontend uses `impl_status_chrome` for sorting according to shippingType, the API will have to return the correct status as per the milestone.\r\n "", 'comment_created': datetime.datetime(2021, 8, 12, 7, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687592775, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 12, 10, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687592843, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 12, 10, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687592951, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 12, 10, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687593054, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 12, 10, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687593131, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 12, 10, 36, 26, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687593845, 'comment_body': 'Okay. I get it. Done', 'comment_created': datetime.datetime(2021, 8, 12, 10, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687991046, 'comment_body': 'I think I see what you are doing with setting impl_status_chrome in each feature so that the list of features can be sorted by that field and then the first in each group can be annotated.  But, I think that there is a better way to do it.\r\n\r\nInstead of merging all the small lists of features into one big list and then sorting and annotating, it would be better to keep the small lists separate in the JSON response.  Instead of a flat list with annotations, the response could have a two-level structure with a keys for reasons why each feature is included in the response, and then a small list of the specific features that were included because of that reason (sorted by name).   It would look something like:\r\n```\r\n{\r\n  ""New dev trail"": [ {feature_1...}, {feature_2...}, ...],\r\n  ""New origin trail"": [ {feature_3...}, {feature_4...}, ...],\r\n  ""Shipping"": [ {feature_5...}, {feature_6...}, ...]\r\n}\r\n```\r\n\r\nThe features themselves would not be modified, so no need to change impl_status_chrome in them.  The frontend code would use distinct loops to render each reason that is present, rather than looking for annotations.\r\n\r\nI realize that the existing approach of using a flat, annotated list was there in the existing code that you are evolving.  That approach probably made more sense for the feature list page, but it always seemed a little hacky. ', 'comment_created': datetime.datetime(2021, 8, 12, 18, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 688009452, 'comment_body': ""FYI, as for why the old features.json response was structure as a flat list with annotations: it might have been evolved from the idea of serving an RSS feed, which is limited to being a flat list.   I don't know, that was before my time on the project."", 'comment_created': datetime.datetime(2021, 8, 12, 19, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 688231549, 'comment_body': 'Okay. I think I get it. It does seem to be a better way. I will make this change.', 'comment_created': datetime.datetime(2021, 8, 13, 4, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 688236147, 'comment_body': 'However, I would like to add that I am setting `impl_status_chrome` in each feature because the **FRONTEND maps** each feature to shipping type to create a JS object similar to JSON response suggested by you. In fact, we do not even have to annotate the list and hence do not have to sort the list by name or implementation status at the backend. ', 'comment_created': datetime.datetime(2021, 8, 13, 4, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 688241741, 'comment_body': 'Even the old releases page maps each feature to shipping type at the frontend although it receives the annotated flat list as it uses the `get_all_features()` API (also used by feature list page), instead of the new `get_features_in_milestone()` API.', 'comment_created': datetime.datetime(2021, 8, 13, 4, 53, 42, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 688244243, 'comment_body': 'So, all this means that the effect of the change (suggested by you) will be the following:- \r\n\r\n- the process of mapping features to shipping type will be done by backend instead of frontend. ', 'comment_created': datetime.datetime(2021, 8, 13, 5, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 688252196, 'comment_body': 'It still makes sense to make this change. However, it would be better to implement it in a separate PR after #1458 and this PR both have been merged. It is so because implementing this change involves making changes in the same files that #1458 changes. Since #1458 introduces structural changes, making changes in this PR would be like making changes without seeing the source code. ', 'comment_created': datetime.datetime(2021, 8, 13, 5, 27, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 688264952, 'comment_body': '@jrobbins, these operations are not required currently. Hence, I have removed them. I will add them back if required in the next PR implementing the change you suggested.', 'comment_created': datetime.datetime(2021, 8, 13, 6, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 688611446, 'comment_body': 'OK, that sounds fine.', 'comment_created': datetime.datetime(2021, 8, 13, 15, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}]","[{'commit_sha': '4683c7e375ad03408df9b98eb0db0dc3f4f57552', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e148bce50af304fe125fd81753ae7e433b6dae5', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '805c3185dd9efee2a9d703ce3c646459ace65270', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
706665166,Infinite scroll on upcoming page,"Review Requested:- @jrobbins 

Merging this should close #1417  and test if #1419

In this PR,

- Added Infinite Scroll support to view milestones and features in the future
- Pagination for fetching future milestones. Rendering of the **second last fetched** milestone will trigger fetching of **later three milestones** ",True,1458,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1458,https://github.com/GoogleChrome/chromium-dashboard/pull/1458,closed,178,68,6,22,3,32,0,0,[],2021-08-09 16:26:17+00:00,2021-08-13 15:48:29+00:00,343332.0,"3 days, 23:22:12","[{'comment_id': 685358043, 'comment_body': 'The Channels API can now return schedule for a range of milestones if the following query string is present\r\n`?start=92&&end=93`. Both start and end are inclusive.', 'comment_created': datetime.datetime(2021, 8, 9, 16, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 685377985, 'comment_body': '`cardsToFetchInAdvance` - no. of milestones to fetch in advance. Set to 3.\r\n`lastFetchedOn` - is the milestone number rendering of which caused fetching of later 3 milestones in advance. At the beginning, it is equal to milestone of the beta channel as we want to fetch when second last fetched milestone is rendered on screen. Also, changing the value of this variable will trigger fetching of 3 new milestones.\r\n`lastMilestoneVisible` - is the milestone visible on the center of the screen. It changes whenever user clicks on next or previous buttons. Also, if `lastMilestoneVisible - lastFetchedOn == 3 (cardsToFetchInAdvance)`, then later 3 items will be  fetched and `lastFetchedOn +=cardsToFetchInAdvance`', 'comment_created': datetime.datetime(2021, 8, 9, 17, 16, 21, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 685398758, 'comment_body': '`milestoneArray` - contains list of milestone fetched asynchronously\r\n`milestoneInfo` - contains features and other details of each milestone', 'comment_created': datetime.datetime(2021, 8, 9, 17, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 685417773, 'comment_body': 'Triggers fetching of features in advance', 'comment_created': datetime.datetime(2021, 8, 9, 18, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 686377220, 'comment_body': 'This looks good.\r\n\r\nPerformance is always a concern when doing a slow operation in a loop.  However, the request to fetch_milestone_schedule?mstone=N seems to respond in about 125ms, so doing 3 of them sequentially should be only about 375ms, which is OK.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686379219, 'comment_body': 'That information would be good to add as comments on these lines of code.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686380516, 'comment_body': 'In fact, you could write a source code comment for each property declaration.\r\n\r\ncardsToFetchInAdvance seems like it could be more clear as a JS const, unless there would ever be a reason to change it while the user is using the page.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686381671, 'comment_body': 'computeWidthofCard() should have a capital O for Of.  So it would be, this.computeWidthOfCard().', 'comment_created': datetime.datetime(2021, 8, 10, 23, 14, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686385373, 'comment_body': 'Words like ""temp"" can almost always be replaced by something more descriptive.  In fact, every variable in a program is temporary to some extent.  Also, this code deals with both milestone numbers and milestone metadata, so it would be good to clarify that this is milestone numbers.   Try something like milestoneNums.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 24, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686386110, 'comment_body': 'Again, since this code deals with both milestone numbers and milestone metadata, it would be good to clarify which type of value a given variable is expected to hold.  JS does not use type declarations so we should try to use the variable names to express that.   Instead of ""milestone"" as the loop variable, try ""milestoneNum"" or ""mNum"".', 'comment_created': datetime.datetime(2021, 8, 10, 23, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686387089, 'comment_body': 'Try changing ""tempMilestoneInfo"" to ""fetchedMilestoneInfo"" to make it more descriptive.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 29, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686387684, 'comment_body': 'Style: Only use a single blank line in the body of a method or function.  Use double blank lines between top-level declarations.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 31, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686388706, 'comment_body': '""component"" is probably left over from the old schedule page, try using variable name ""shippingType"".', 'comment_created': datetime.datetime(2021, 8, 10, 23, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686390352, 'comment_body': ""Try \r\nfeatures.sort((a, b) =>\r\n    a.localeCompare(b, 'en', {'sensitivity': 'base'}) \r\n);\r\nwhich is based off a comment in https://stackoverflow.com/questions/8996963/how-to-perform-case-insensitive-sorting-in-javascript\r\n\r\nI don't expect non-English feature names, but that code is shorter."", 'comment_created': datetime.datetime(2021, 8, 10, 23, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686394177, 'comment_body': '""&&"" -> ""&"".', 'comment_created': datetime.datetime(2021, 8, 10, 23, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 686394985, 'comment_body': 'Style: use spaces around operators.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 51, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 687032897, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2021, 8, 11, 17, 26, 47, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687033124, 'comment_body': 'Marking this conversation as resolved !!!', 'comment_created': datetime.datetime(2021, 8, 11, 17, 27, 7, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687379599, 'comment_body': 'Done. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/4cc0df65ad033941914fe8f9250e23d90f250158) commit', 'comment_created': datetime.datetime(2021, 8, 12, 4, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687379791, 'comment_body': 'Done. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/4cc0df65ad033941914fe8f9250e23d90f250158) commit.', 'comment_created': datetime.datetime(2021, 8, 12, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687382106, 'comment_body': 'Done. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/db9c13c1b104b58e98106b732604e3e28957ba5d) commit.', 'comment_created': datetime.datetime(2021, 8, 12, 4, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687387300, 'comment_body': 'Done. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/d8659bbca508ca50367ee7ce97f2579a8d3f5379) commit', 'comment_created': datetime.datetime(2021, 8, 12, 4, 55, 37, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687389743, 'comment_body': 'It would surely make JS code easier to read. Thank you for pointing that out and sharing this tip. \r\n\r\nDone. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/d8659bbca508ca50367ee7ce97f2579a8d3f5379) commit.', 'comment_created': datetime.datetime(2021, 8, 12, 5, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687391591, 'comment_body': 'As you suggested in one of the previous comments, I replaced `tempMilestoneInfo` with `newMilestonesInfo` in [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/d8659bbca508ca50367ee7ce97f2579a8d3f5379) commit. Is this okay ?', 'comment_created': datetime.datetime(2021, 8, 12, 5, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687394260, 'comment_body': 'Thanking you for pointing this out. \r\nDone. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/f4600559c8861551d9edaf934cfe2d075b855f7a) commit', 'comment_created': datetime.datetime(2021, 8, 12, 5, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687396672, 'comment_body': 'Oops... I must have left it by mistake. Thanks for pointing it out. \r\n\r\nDone. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/c8b6cdc9e8276fb78e5ab4babe3631140318c908) commit', 'comment_created': datetime.datetime(2021, 8, 12, 5, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687398657, 'comment_body': ""Okay. I have made this change. \r\nFor the record, the last two arguments `('en', {'sensitivity': 'base'})` are not supported by Webview Android and Opera for Android."", 'comment_created': datetime.datetime(2021, 8, 12, 5, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687401834, 'comment_body': 'Done. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/029a43766c4aa417347805ff73b3e37703e9c840) commit.', 'comment_created': datetime.datetime(2021, 8, 12, 5, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687402817, 'comment_body': 'Oops... Thank for pointing this out. \r\nDone. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/3d061ae21f43b4a5b1581d729418a29c769068eb) commit. ', 'comment_created': datetime.datetime(2021, 8, 12, 5, 39, 43, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 687404249, 'comment_body': 'Thank you for pointing this out. \r\nDone. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/8ef87954ddf5fbf7bf9daf5d8aa238c9c074dbdd) commit. ', 'comment_created': datetime.datetime(2021, 8, 12, 5, 43, 24, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 688003495, 'comment_body': ""I didn't know about the lack of support.  In that case, how about this?\r\n```\r\nfeatures.sort((a, b) =>\r\n    a.name.toLowerCase().localeCompare(b.name.toLowerCase())\r\n);\r\n```"", 'comment_created': datetime.datetime(2021, 8, 12, 18, 53, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 688228939, 'comment_body': 'Done. See [this](https://github.com/GoogleChrome/chromium-dashboard/pull/1458/commits/9881f927610b11f5577ad1a8183fa7918686b639) commit', 'comment_created': datetime.datetime(2021, 8, 13, 4, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}]","[{'commit_sha': '012fc3cc6296fd6bd5bf9b41c5ea528aa42955cd', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '015279ef4a24f3fa6bb209c2b7d21eace3b5e389', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fea21e4ebb88d39c71720186954b0490c298861', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cfd3b59e1f71dbcafc857ee0349b5fd9483f8a5', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2edf8bccb4ba5fdb801faa6fd90ef85574a1238', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fd92e71bf6658646cfd14e052fdc72d7f12a01c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05842cff87ec9de928d375cfb926007baa9329a4', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '303ff3c19db512d07aa2f3395d629dacad61e044', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a44ccd55019cf6b3098c6919ab6f27502135a1b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e94e7004db37049f56728f33c38d35dfc3d01ce', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9555fcdfe6e4e48fdee40eaab3905d5e5e1fef8f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ac2e146cab2cf4a157453fc9c45765a083b62f0', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '608843e3c647a0a8e462218717b2dcfd9c5ac988', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cc0df65ad033941914fe8f9250e23d90f250158', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db9c13c1b104b58e98106b732604e3e28957ba5d', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8659bbca508ca50367ee7ce97f2579a8d3f5379', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4600559c8861551d9edaf934cfe2d075b855f7a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8b6cdc9e8276fb78e5ab4babe3631140318c908', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '029a43766c4aa417347805ff73b3e37703e9c840', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d061ae21f43b4a5b1581d729418a29c769068eb', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ef87954ddf5fbf7bf9daf5d8aa238c9c074dbdd', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9881f927610b11f5577ad1a8183fa7918686b639', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
712539139,Map feature to Shipping Milestone on backend instead of frontend,"Review Requested:- @jrobbins 

In this PR,

- Map feature to Shipping Milestone will be done on backend instead of frontend
- If a milestone release has no features, a string stating the same will be displayed on the frontend
- Fixed failing tests ",True,1464,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1464,https://github.com/GoogleChrome/chromium-dashboard/pull/1464,closed,115,96,7,4,0,1,0,0,[],2021-08-13 18:03:14+00:00,2021-08-13 19:26:22+00:00,4988.0,1:23:08,"[{'comment_id': 688734456, 'comment_body': ""I was thinking that the features would be grouped by the milestone that matched the requested milestone, not by the current status of the feature.  However, let's go ahead with what you have here.  We can always come back to it."", 'comment_created': datetime.datetime(2021, 8, 13, 19, 26, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}]","[{'commit_sha': '9fe89568979f1530084ae40b4eb74294c37cf694', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90db3ad66d8a7068b87d6e7469003d9d060bb411', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30c5ec57ba7d051efd6956c59459a9468f1793db', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7fadd93b4b445db5ae9996b965601452c91c792', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
712472685,Added support for highlighting on hovering over a feature,"Review Requested:- @jrobbins 

Merging this should close #1420 

In this PR,

- Feature will be highlighted in all the milestones containing the feature when user hovers over the feature.",True,1462,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1462,https://github.com/GoogleChrome/chromium-dashboard/pull/1462,closed,33,1,3,16,2,0,0,0,[],2021-08-13 15:59:04+00:00,2021-08-13 19:32:45+00:00,12821.0,3:33:41,[],"[{'commit_sha': '012fc3cc6296fd6bd5bf9b41c5ea528aa42955cd', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '015279ef4a24f3fa6bb209c2b7d21eace3b5e389', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fea21e4ebb88d39c71720186954b0490c298861', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cfd3b59e1f71dbcafc857ee0349b5fd9483f8a5', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2edf8bccb4ba5fdb801faa6fd90ef85574a1238', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fd92e71bf6658646cfd14e052fdc72d7f12a01c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05842cff87ec9de928d375cfb926007baa9329a4', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '303ff3c19db512d07aa2f3395d629dacad61e044', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a44ccd55019cf6b3098c6919ab6f27502135a1b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e94e7004db37049f56728f33c38d35dfc3d01ce', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9555fcdfe6e4e48fdee40eaab3905d5e5e1fef8f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ac2e146cab2cf4a157453fc9c45765a083b62f0', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '608843e3c647a0a8e462218717b2dcfd9c5ac988', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958bdf208051cf991efbece51161b4eed3c38363', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f02178a61b7e5e0b193ed67fb01d1361a3449ec1', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccc3a6b344c2971ab63684bb96c878b7ed48032f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
712743451,Added Aria-Label attributes,"Review Requested:- @jrobbins 

Merging this should close #1421.

In this PR,

- Added some aria-labels for the newly added elements.",True,1467,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1467,https://github.com/GoogleChrome/chromium-dashboard/pull/1467,closed,3,2,1,1,1,0,0,0,[],2021-08-14 08:25:02+00:00,2021-08-14 15:24:31+00:00,25169.0,6:59:29,[],"[{'commit_sha': '33c567e59c93578c4d26f717b8b31adf35fa481b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
712819689,Added support for scrolling to previous releases,"Review Requested:- @jrobbins 

In this PR,

- Added support for scrolling to previous release.
- While scrolling to future milestones, first 3 future milestones on loading of the page but subsequently fetch 1 milestone at a time. This would result in a better UX as decreased fetching time will enable faster scrolling.  ",True,1468,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1468,https://github.com/GoogleChrome/chromium-dashboard/pull/1468,closed,156,42,5,3,0,0,0,0,[],2021-08-14 18:13:20+00:00,2021-08-14 19:08:31+00:00,3311.0,0:55:11,[],"[{'commit_sha': '8e1e1e669ab844aa2f060630c2f70b29d113da80', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c46b31dca3f23c8436d83390b8bc85b522c59d2', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f366ad8d4b543924243746ffbf74b0c18b150da', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
594423931,20210317 fix failing tests in travis,"@jrobbins 
`npm run test` was failing in Travis CI (but not in local machine) after enabling `requests` library to use `URLFetch`. Following line was present in the logs generated by Travis CI -
`ImportError: No module named requests_toolbelt.adapters.appengine`

The error was raised as `requests_toolbelt` was not mentioned in the `requirements.travis.txt` which is used by travis to install dependencies. ",True,1211,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1211,https://github.com/GoogleChrome/chromium-dashboard/pull/1211,closed,3,0,1,3,0,0,0,0,[],2021-03-17 05:50:06+00:00,2021-03-17 16:09:56+00:00,37190.0,10:19:50,[],"[{'commit_sha': '54be5691ac2ac58e09d1a0650a5c7cb27dfe268b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e313cbe93850be22c173da9961e2b4426ffe35f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f574a62e9f9e3e0363e24ffbd4978371232e075c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
595943445,20210319 fix timeline narrrow ports,"Merging this will close #302 
As @jrobbins suggested [here](https://github.com/GoogleChrome/chromium-dashboard/issues/302#issuecomment-802165384), there are two common approaches to fix the issue:-
(1) introducing a hamburger menu to the site or some button that would show the side nav temporarily overlapping other content on the page, or
(2) displaying the side-nav items in a a horizontal layout across the top of the main content area.

I have followed the second approach. 

Snapshots:-



On wide viewport
![w](https://user-images.githubusercontent.com/44562091/111697793-022ffc00-885c-11eb-9175-88308b73f10d.PNG)

On narrow viewport
![n](https://user-images.githubusercontent.com/44562091/111697915-31466d80-885c-11eb-9121-323c718ea852.PNG)


**Note**

1. The All Properties horizontal row will only appear for the routes `metrics/css/popularity` and `/metrics/css/timeline/popularity`",True,1220,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1220,https://github.com/GoogleChrome/chromium-dashboard/pull/1220,closed,28,1,5,5,1,8,0,0,[],2021-03-18 21:04:07+00:00,2021-03-19 21:52:18+00:00,89291.0,"1 day, 0:48:11","[{'comment_id': 597314442, 'comment_body': ""This could be useful on other pages too.  Let's generalize the name of this element ID.  Let's try something like #horizontal-sub-nav.\r\n"", 'comment_created': datetime.datetime(2021, 3, 18, 23, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 597315158, 'comment_body': 'I don\'t think that we need ""smaller"".  Does it look OK with regular-sized text?', 'comment_created': datetime.datetime(2021, 3, 18, 23, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 597315582, 'comment_body': 'The phrase ""All properties"" is redundant because it already appears in the heading line just below this nav.  Try ""View as:"" instead.', 'comment_created': datetime.datetime(2021, 3, 18, 23, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 597316732, 'comment_body': 'For this link and the others, please remove the style attributes and add CSS rules instead.  You could put it in metrics.scss after .description.    Also, rather than padding as a %, try using var(--content-padding-quarter) or just 4px.', 'comment_created': datetime.datetime(2021, 3, 18, 23, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 597346239, 'comment_body': 'I made it smaller so that it looks  different than the other text elements on the same page. However, I will remove it as you have suggested. ', 'comment_created': datetime.datetime(2021, 3, 19, 1, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 597346375, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 3, 19, 1, 24, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 597346549, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 3, 19, 1, 25, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 597351277, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 3, 19, 1, 40, 29, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}]","[{'commit_sha': '54be5691ac2ac58e09d1a0650a5c7cb27dfe268b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e313cbe93850be22c173da9961e2b4426ffe35f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa0cd8aa2705796b6958a294eba3fced3bd1b3f2', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1667684e2bf7e5d287f2f71a949f2f563a03f1e7', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1768700d3700ad501b5c0d1aeeb66b669c2a11a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
609465725,20210406 fix stack rank timeline narrow viewports for all properties,"Merging this should close #302 

As pointed out by @jrobbins, we needed to add the new links (see CL #1220) to the animated properties pages and the all features pages. 
Also, on narrow viewports, there was no link to access animated properties from all properties and vice-versa. Hence, a new link for the same, was also required. 

Snapshots:-
On wide viewports:-
![Capture](https://user-images.githubusercontent.com/44562091/113662460-c8694d00-96c5-11eb-8be5-1e3dbb0488a2.PNG)

On Narrow ViewPorts:-
All Properties Page & Animated Properties Page
![Capture1](https://user-images.githubusercontent.com/44562091/113662985-cbb10880-96c6-11eb-8be6-d3358b22ad95.PNG)



All Features Page:-
![Capture3](https://user-images.githubusercontent.com/44562091/113662991-cd7acc00-96c6-11eb-9f51-f99bc80cf66d.PNG)







",True,1256,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1256,https://github.com/GoogleChrome/chromium-dashboard/pull/1256,closed,207,146,7,8,0,0,0,0,[],2021-04-06 05:22:37+00:00,2021-04-06 20:43:22+00:00,55245.0,15:20:45,[],"[{'commit_sha': '54be5691ac2ac58e09d1a0650a5c7cb27dfe268b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e313cbe93850be22c173da9961e2b4426ffe35f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa0cd8aa2705796b6958a294eba3fced3bd1b3f2', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '219049961f6c630763129e7c0cff53df4e7af47c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e59ddfca2cdafbe8f3448f75273591cfdd8d8d06', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dfd814dafcdf16f6f7b44d868284d88a269106a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05a93a9825d792eeffe943b8a1e376958a8659df', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6b93aeb33c17dce5c9038f837edeeb2dace5fc8', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
594635706,20210317 fix npm run coverage,"Merging this will close #1208 (raised by @jrobbins) 

`npm run converge` now exits without failures & errors 

Many problems occurred when `npm run coverage` was executed:-
- `npm run coverage`  runs `coverage.py` using the local installation of python ( as evident from package.json). Hence, before running this command, one must ensure that coverage is present inside the local installation of python. As suggested by @jrobbins and implemented by @whoanuragverma in #1203 , this can be done using `npm run dev-deps` if coverage is added to  `requirements.dev.txt`
- Even if coverage was present in the local installation of Python, the following errors were raised during the execution of `npm run coverage`.
1. Import Error
```
======================================================================
ERROR: api.cues_api_test (unittest.loader.ModuleImportFailure)
----------------------------------------------------------------------
ImportError: Failed to import test module: api.cues_api_test
Traceback (most recent call last):
  File ""/usr/lib/python2.7/unittest/loader.py"", line 254, in _find_tests
    module = self._get_module_from_name(name)
  File ""/usr/lib/python2.7/unittest/loader.py"", line 232, in _get_module_from_name
    __import__(name)
  File ""/mnt/c/Users/Shivam/ubuntu/GSOC/chromium-dashboard/tests/api/cues_api_test.py"", line 25, in <module>
    from api import cues_api
ImportError: cannot import name cues_api


======================================================================
ERROR: api.stars_api_test (unittest.loader.ModuleImportFailure)
----------------------------------------------------------------------
ImportError: Failed to import test module: api.stars_api_test
Traceback (most recent call last):
  File ""/usr/lib/python2.7/unittest/loader.py"", line 254, in _find_tests
    module = self._get_module_from_name(name)
  File ""/usr/lib/python2.7/unittest/loader.py"", line 232, in _get_module_from_name
    __import__(name)
  File ""/mnt/c/Users/Shivam/ubuntu/GSOC/chromium-dashboard/tests/api/stars_api_test.py"", line 25, in <module>
    from api import register
ImportError: cannot import name register
```

These errors were caused as there was a name conflict between `api` and `tests/api` modules for python files inside `tests` directory. Hence, I rename the `api` to `apio` and kept `tests/api` intact.


2. Assertion Error
```
FAIL: test_get_client__unit_tests (cloud_tasks_helpers_test.CloudTasksHelpersTest)
During unit testing, we are using a fake object.
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/mnt/c/Users/Shivam/ubuntu/GSOC/chromium-dashboard/tests/cloud_tasks_helpers_test.py"", line 66, in test_get_client__unit_tests
    type(actual))
AssertionError: <class 'testing_config.FakeCloudTasksClient'> != <class 'tests.testing_config.FakeCloudTasksClient'>
```

This error was caused as `assert.equal()` returned false while comparing `testing_config.FakeCloudTasksClient` & `tests.testing_config.FakeCloudTasksClient`. A closer inspection of the two will reveal that later has `tests.` which is the outer package name. The former did not have `tests.` This was due to importing`testing_config` as `import testing_config`. Importing `testing_config`  using `from tests import testing_config` solved the issue.",True,1212,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1212,https://github.com/GoogleChrome/chromium-dashboard/pull/1212,closed,107,140,4,4,6,4,0,0,[],2021-03-17 11:38:30+00:00,2021-03-24 16:45:26+00:00,623216.0,"7 days, 5:06:56","[{'comment_id': 595945293, 'comment_body': ""Hard Coding secrets in the code itself doesn't make sense. Also this is not a good practise. "", 'comment_created': datetime.datetime(2021, 3, 17, 11, 51, 36, tzinfo=datetime.timezone.utc), 'commenter': 'whoanuragverma', 'type': 'User'}, {'comment_id': 595946729, 'comment_body': 'I forgot not to add this change. Thank you @whoanuragverma. I will change it', 'comment_created': datetime.datetime(2021, 3, 17, 11, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}, {'comment_id': 599983173, 'comment_body': 'I think you need to remove the `-s tests` because we no longer have a tests directory.\r\n\r\nAlso, today I landed a change that uses `-p ""*_tests.py""` in quotes to avoid shell wildcard expansion if there happens to be a match in the current directory.  So, you just need to have that same change.', 'comment_created': datetime.datetime(2021, 3, 23, 21, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jrobbins', 'type': 'User'}, {'comment_id': 600366352, 'comment_body': '@jrobbins I have made the above-mentioned changes', 'comment_created': datetime.datetime(2021, 3, 24, 10, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'shivamag00', 'type': 'User'}]","[{'commit_sha': '5935ffc1fdd789767c1bd987c4b6f61651e82959', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4750ba506df0fb542145d516d653898ce4809e1a', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0d3ad2d002352c8486439a07c5c4fe37ad5d98b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c1eecd5869bb896f5ab31d390f92ca0f58e6bb7', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
607301379,Bug Fix: Edit feature complains about multiple contact emails,"Merging this will close #1148 

As suggested by @jrobbins, The following approach has been followed: -

- A new class called `MultiEmailField` has been created by extending the django's `form.Field` class. 
- In this new class, the input string is split into a list of emails. 
- Then, each email is being validated using the method `django.core.validators.validate_email`",True,1248,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1248,https://github.com/GoogleChrome/chromium-dashboard/pull/1248,closed,124,140,2,5,1,0,0,0,[],2021-04-01 10:41:33+00:00,2021-04-12 23:13:58+00:00,995545.0,"11 days, 12:32:25",[],"[{'commit_sha': '1cb9058a1aaed6fd896aaa148a0dea2e685ee3ca', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91515445c48f4f1eb9a89f65a51366ab9dfa4d56', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8ef14f3bdacb7dd7723f0e6a6dcd346c4adde8d', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67c5dccea26c8c81027d91c17e6183d543711161', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28b57810e26347246d90941830a512debeee76c4', 'committer_username': 'jrobbins', 'committer_name': 'Jason Robbins', 'committer_email': 'jrobbins@gmail.com', 'commit_date': datetime.datetime(2008, 7, 17, 18, 11, 32, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
632348443,"Updated Developer Documentation: Django & Flask Combination, Google Sign-In","Updated Developer Documentaion. 

Mentioned how this web app uses a combination of Django & Flask and Google Sign-In",True,1311,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1311,https://github.com/GoogleChrome/chromium-dashboard/pull/1311,closed,7,1,1,1,2,0,0,0,[],2021-05-07 06:58:10+00:00,2021-05-11 01:47:17+00:00,326947.0,"3 days, 18:49:07",[],"[{'commit_sha': 'f579be6b5b5814c3c999e7ca2f040a9792f88582', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
656059849,Updated ReadMe with solutions to installation problems and creating an admin user,"I tried a fresh installation today after uninstalling all the packages installed by pip and encountered three errors. Three packages viz - `enum, six, protobuf` are required to be installed locally in the system instead of the `lib` folder. Hence, I have added the instructions for the same.

Review Requested:- @jrobbins ",True,1339,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1339,https://github.com/GoogleChrome/chromium-dashboard/pull/1339,closed,16,1,2,2,1,0,0,0,[],2021-05-28 08:31:27+00:00,2021-05-28 22:00:53+00:00,48566.0,13:29:26,[],"[{'commit_sha': 'e48ac8747f03493a9c141ff4d14475bb8bc2885c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f07af31ce5b65b413bed3937d6b5d377367567b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
681451003,Updated README,"Review Requested:- @jrobbins 

Updated README with info about Cloud NDB.",True,1383,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1383,https://github.com/GoogleChrome/chromium-dashboard/pull/1383,closed,1,1,1,1,0,0,0,0,[],2021-07-01 04:39:33+00:00,2021-07-01 20:15:15+00:00,56142.0,15:35:42,[],"[{'commit_sha': 'c6bc6be275346c65ea6b3cf01903c7116532fbb1', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
647567882,Replaced Left Hand Navigation with a dropdown menu,"This PR should close #1240. 
Review Requested: @jrobbins 

We will have to use JS to add the strings `canary` `dev` `beta` `stable` and others instead of CSS as `content` property will not work with option tag. This is still left to be done. 

In this PR, 

- the left-hand navigation is replaced by a drop-down menu
- all chromium statuses which were not directly accessible by the left hand navigation, have also been added to the drop-down list. This was requested in #1113 

The following image illustrates how left hand navigation now looks:-

The first option is disabled because it is used as a placeholder.
![1](https://user-images.githubusercontent.com/44562091/118806248-7589d480-b8c4-11eb-9bac-a5a1e5392c03.jpg)

![2](https://user-images.githubusercontent.com/44562091/118846497-6289fb00-b8ea-11eb-845c-c1aca75c21e2.jpg)





",True,1325,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1325,https://github.com/GoogleChrome/chromium-dashboard/pull/1325,closed,34,75,3,6,6,0,0,0,[],2021-05-19 11:37:11+00:00,2021-05-21 18:07:48+00:00,196237.0,"2 days, 6:30:37",[],"[{'commit_sha': '0d5a5ebd490fdf7a1e0d0b9356795d8c0bcfb11c', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a18564836fe98a2298a1ce5b3435145b129b1658', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '542c1a5dd3043ee9af6a52e87b815bd020e38300', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd89ed7f1187f29f35379d97959a56fe4022d042', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2668f5ec5548490686ca55507c3b3d510464c6c7', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '041ebe6cfb87b28798cdb5d59f3bedd0f85d7f53', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
650591542,Added the dropdown in narrow viewports,"Merging this should close #1242 
Review Requested:- @jrobbins 

This PR is a follow up to #1325. As suggested by @jrobbins, this PR displays the `Filter By` dropdown field above the search box but below the banner. It now looks like the following:- 

On Wide ViewPorts:-
![1](https://user-images.githubusercontent.com/44562091/119220171-cd178280-bb06-11eb-8ab4-73fbffd24fcd.jpg)

On Narrow ViewPorts:-
![2](https://user-images.githubusercontent.com/44562091/119220255-42835300-bb07-11eb-927a-2fbc46c58ade.jpg)


",True,1334,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1334,https://github.com/GoogleChrome/chromium-dashboard/pull/1334,closed,8,4,3,1,2,0,0,0,[],2021-05-22 08:39:27+00:00,2021-05-25 21:49:02+00:00,306575.0,"3 days, 13:09:35",[],"[{'commit_sha': 'd9c02d855a49ac3b36fba51b03b0cbfdf4b8508b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
656392066,Web Page title on edit feature page will display the Feature name,"Merging this should close #1336 

The web page title for edit features page will be displayed in the following format when deployed on production server.
`Feature Name - Chrome Platform Status`

Review Requested:- @jrobbins ",True,1340,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1340,https://github.com/GoogleChrome/chromium-dashboard/pull/1340,closed,1,1,1,1,0,0,0,0,[],2021-05-28 12:21:29+00:00,2021-05-28 22:02:50+00:00,34881.0,9:41:21,[],"[{'commit_sha': '26dc4353ae8194f55e32e72ae59038f793e2590f', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
660238832,Made Drawer Column responsive,"Merging this should close #1345 

In this PR,

- The HTML code for vertical navigation menu and the horizontal navigation menu is moved to `templates/metrics/css/_css_metric_nav.html` for CSS properties and `templates/metrics/feature/_feature_metric_nav.html` for JavaScript features. Consequently, the block `horizontalsubnav` has been removed. This also keeps the HTML code for navigation menus together unlike the previous approach.
- The vertical navigation menu will be only displayed in wider view ports using CSS Media Query.
- The horizontal navigation menu will be only displayed in narrow view ports using CSS Media Query.

**Review Requested** - @jrobbins ",True,1346,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1346,https://github.com/GoogleChrome/chromium-dashboard/pull/1346,closed,50,111,10,2,2,0,0,0,[],2021-06-02 17:01:36+00:00,2021-06-02 17:55:08+00:00,3212.0,0:53:32,[],"[{'commit_sha': '314edabb3886150b2bf27fd707ab42027e148974', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a08dbddf68cb857d3cf7e09c34d3c9ca1a67145b', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
679830894,20210628 UI enhancements,"Review Requested:- @jrobbins 

In this PR, 

- UI Improvements for Narrow View Ports
- Implemented Custom Google Sign In Button - 


Currently, the flow for signing in, as seen by the user, is -
1. There is a button with the text `Sign In`. The User clicks on it. A pop-up appears and the user selects the gmail id to be used.
2. The pop-up disappears and button now reads `Signed In`. Let's say this is `intermediate stage`. 
3. The page is refreshed and in place of button, the gmail id used for logging in is displayed. It means the logging in process is completed.

The intermediate stage may be source of confusion for the user (as mentioned in this issue #1370 . Since we were using the in-built Google Sign In button, we could not change the text of the button. Also, the button was not getting wrapped properly in narrow viewports because of the default CSS. Hence, we needed to use a custom google sign in button.

UI Changes:-
![Picture1](https://user-images.githubusercontent.com/44562091/123786245-1a9dc100-d8f7-11eb-84e9-c9b9ea203b60.png)
 

",True,1376,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1376,https://github.com/GoogleChrome/chromium-dashboard/pull/1376,closed,140,36,6,6,1,0,0,0,[],2021-06-29 11:00:41+00:00,2021-07-19 20:00:13+00:00,1760372.0,"20 days, 8:59:32",[],"[{'commit_sha': '51252aa685f10d6d591ce8e1dd3bcfe357269817', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd021663d3465b1823e80c35aff3e44279acd31d9', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd451a5da5f0963b2ff088060a1ae28df5c481719', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2354f0ce066e951cd361ea2a3105a9f0d380fb46', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9df6384cd1659834e94045c57deb0f774dda885', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11db7af6d03437098ea9c76343823f66890078d', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
696835401,Bug Fix: Star would toggle in UI but not at the backend,"Review Requested: @jrobbins 

In this PR,
- Fixed Bug: Star would toggle in the UI irrespective of the CS client promise being fulfilled or not. ",True,1436,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1436,https://github.com/GoogleChrome/chromium-dashboard/pull/1436,closed,23,16,2,2,0,0,0,0,[],2021-07-26 09:05:53+00:00,2021-07-26 19:12:06+00:00,36373.0,10:06:13,[],"[{'commit_sha': 'f7be7105ef2b7c083c7cc34680bdb1a2a4c6b2ad', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aef0d067c904b7182466c7db2c20e635e28f50f4', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22
603440126,"Fixed Bug: ""additional fields by process phase"" widget is not keyboard-accessible","Merging this will close #1155.

As suggested by @sersorrel, a custom element was not required to make the widget keyboard accessible. Adding a button element inside the header tag did the job. The UI remains the same but the ""additional fields by process phase"" widget"" is now keyboard accessible.

In the following snapshot, a black border is visible around the ""additional fields by process phase"" widget which is used by Google Chrome to represent that the widget is currently in focus and is accessible by keyboard. Also, one can note that the UI still remains the same

![Capture](https://user-images.githubusercontent.com/44562091/112949851-4a51f700-9157-11eb-9f70-142a4b12a7e5.PNG)


",True,1244,https://api.github.com/repos/GoogleChrome/chromium-dashboard/pulls/1244,https://github.com/GoogleChrome/chromium-dashboard/pull/1244,closed,11,4,1,3,0,0,0,0,[],2021-03-30 07:08:44+00:00,2021-03-30 23:00:41+00:00,57117.0,15:51:57,[],"[{'commit_sha': '0e3211315f25f7f8749276f8111414edd88f1e64', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a43035481c288d4f3228918e3f253007a467dd33', 'committer_username': 'shivamag00', 'committer_name': 'Shivam Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2018, 10, 29, 4, 15, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88f670f8e747c03a07b6a2b206297f08b18f3973', 'committer_username': 'jrobbins', 'committer_name': 'Jason Robbins', 'committer_email': 'jrobbins@gmail.com', 'commit_date': datetime.datetime(2008, 7, 17, 18, 11, 32, tzinfo=datetime.timezone.utc)}]",Shivam Agarwal,44562091,,User,,25,,10,22

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
8633551,chromium-dashboard,GoogleChrome/chromium-dashboard,Python,363,633,91,68,3639,479,115,15,"[{'id': 712819689, 'number': 1468, 'closed': datetime.datetime(2021, 8, 14, 19, 8, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 18, 13, 20, tzinfo=datetime.timezone.utc), 'time_taken': 3311.0, 'time_delta': '0:55:11', 'additions': 156, 'deletions': 42, 'state': 'closed'}, {'id': 712743451, 'number': 1467, 'closed': datetime.datetime(2021, 8, 14, 15, 24, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 8, 25, 2, tzinfo=datetime.timezone.utc), 'time_taken': 25169.0, 'time_delta': '6:59:29', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 712539139, 'number': 1464, 'closed': datetime.datetime(2021, 8, 13, 19, 26, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 18, 3, 14, tzinfo=datetime.timezone.utc), 'time_taken': 4988.0, 'time_delta': '1:23:08', 'additions': 115, 'deletions': 96, 'state': 'closed'}, {'id': 712472685, 'number': 1462, 'closed': datetime.datetime(2021, 8, 13, 19, 32, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 15, 59, 4, tzinfo=datetime.timezone.utc), 'time_taken': 12821.0, 'time_delta': '3:33:41', 'additions': 33, 'deletions': 1, 'state': 'closed'}, {'id': 706665166, 'number': 1458, 'closed': datetime.datetime(2021, 8, 13, 15, 48, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 16, 26, 17, tzinfo=datetime.timezone.utc), 'time_taken': 343332.0, 'time_delta': '3 days, 23:22:12', 'additions': 178, 'deletions': 68, 'state': 'closed'}, {'id': 706639658, 'number': 1457, 'closed': datetime.datetime(2021, 8, 13, 15, 46, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 15, 52, 33, tzinfo=datetime.timezone.utc), 'time_taken': 345253.0, 'time_delta': '3 days, 23:54:13', 'additions': 50, 'deletions': 35, 'state': 'closed'}, {'id': 706626778, 'number': 1456, 'closed': datetime.datetime(2021, 8, 9, 15, 36, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 15, 34, 40, tzinfo=datetime.timezone.utc), 'time_taken': 86.0, 'time_delta': '0:01:26', 'additions': 277, 'deletions': 103, 'state': 'closed'}, {'id': 705447093, 'number': 1455, 'closed': datetime.datetime(2021, 8, 9, 16, 13, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 12, 30, 22, tzinfo=datetime.timezone.utc), 'time_taken': 272596.0, 'time_delta': '3 days, 3:43:16', 'additions': 38, 'deletions': 46, 'state': 'closed'}, {'id': 703905784, 'number': 1451, 'closed': datetime.datetime(2021, 8, 6, 0, 8, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 19, 29, 55, tzinfo=datetime.timezone.utc), 'time_taken': 103144.0, 'time_delta': '1 day, 4:39:04', 'additions': 127, 'deletions': 7, 'state': 'closed'}, {'id': 701523966, 'number': 1446, 'closed': datetime.datetime(2021, 8, 2, 22, 32, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 14, 36, 5, tzinfo=datetime.timezone.utc), 'time_taken': 28579.0, 'time_delta': '7:56:19', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 696835401, 'number': 1436, 'closed': datetime.datetime(2021, 7, 26, 19, 12, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 9, 5, 53, tzinfo=datetime.timezone.utc), 'time_taken': 36373.0, 'time_delta': '10:06:13', 'additions': 23, 'deletions': 16, 'state': 'closed'}, {'id': 695531687, 'number': 1432, 'closed': datetime.datetime(2021, 8, 3, 15, 0, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 21, 47, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1012433.0, 'time_delta': '11 days, 17:13:53', 'additions': 469, 'deletions': 23, 'state': 'closed'}, {'id': 692585587, 'number': 1426, 'closed': datetime.datetime(2021, 7, 20, 20, 59, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 13, 1, 59, tzinfo=datetime.timezone.utc), 'time_taken': 115077.0, 'time_delta': '1 day, 7:57:57', 'additions': 196, 'deletions': 0, 'state': 'closed'}, {'id': 691638806, 'number': 1424, 'closed': datetime.datetime(2021, 7, 19, 20, 13, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 17, 21, 3, tzinfo=datetime.timezone.utc), 'time_taken': 269548.0, 'time_delta': '3 days, 2:52:28', 'additions': 282, 'deletions': 21, 'state': 'closed'}, {'id': 684349824, 'number': 1400, 'closed': datetime.datetime(2021, 7, 7, 18, 50, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 12, 52, 8, tzinfo=datetime.timezone.utc), 'time_taken': 107885.0, 'time_delta': '1 day, 5:58:05', 'additions': 189, 'deletions': 1, 'state': 'closed'}, {'id': 683886115, 'number': 1399, 'closed': datetime.datetime(2021, 7, 7, 2, 1, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 18, 59, 33, tzinfo=datetime.timezone.utc), 'time_taken': 111730.0, 'time_delta': '1 day, 7:02:10', 'additions': 53, 'deletions': 6, 'state': 'closed'}, {'id': 681451003, 'number': 1383, 'closed': datetime.datetime(2021, 7, 1, 20, 15, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 4, 39, 33, tzinfo=datetime.timezone.utc), 'time_taken': 56142.0, 'time_delta': '15:35:42', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 679830894, 'number': 1376, 'closed': datetime.datetime(2021, 7, 19, 20, 0, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 11, 0, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1760372.0, 'time_delta': '20 days, 8:59:32', 'additions': 140, 'deletions': 36, 'state': 'closed'}, {'id': 673402366, 'number': 1365, 'closed': datetime.datetime(2021, 6, 29, 2, 5, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 11, 38, 49, tzinfo=datetime.timezone.utc), 'time_taken': 915975.0, 'time_delta': '10 days, 14:26:15', 'additions': 137, 'deletions': 118, 'state': 'closed'}, {'id': 673190868, 'number': 1364, 'closed': datetime.datetime(2021, 6, 18, 15, 45, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 6, 2, 16, tzinfo=datetime.timezone.utc), 'time_taken': 34993.0, 'time_delta': '9:43:13', 'additions': 14, 'deletions': 2, 'state': 'closed'}, {'id': 665064209, 'number': 1352, 'closed': datetime.datetime(2021, 6, 17, 20, 47, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 16, 17, 30, tzinfo=datetime.timezone.utc), 'time_taken': 793773.0, 'time_delta': '9 days, 4:29:33', 'additions': 480, 'deletions': 423, 'state': 'closed'}, {'id': 661664450, 'number': 1351, 'closed': datetime.datetime(2021, 6, 29, 2, 39, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 4, 10, 50, 11, tzinfo=datetime.timezone.utc), 'time_taken': 2130560.0, 'time_delta': '24 days, 15:49:20', 'additions': 216, 'deletions': 156, 'state': 'closed'}, {'id': 660238832, 'number': 1346, 'closed': datetime.datetime(2021, 6, 2, 17, 55, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 17, 1, 36, tzinfo=datetime.timezone.utc), 'time_taken': 3212.0, 'time_delta': '0:53:32', 'additions': 50, 'deletions': 111, 'state': 'closed'}, {'id': 656392066, 'number': 1340, 'closed': datetime.datetime(2021, 5, 28, 22, 2, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 12, 21, 29, tzinfo=datetime.timezone.utc), 'time_taken': 34881.0, 'time_delta': '9:41:21', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 656059849, 'number': 1339, 'closed': datetime.datetime(2021, 5, 28, 22, 0, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 8, 31, 27, tzinfo=datetime.timezone.utc), 'time_taken': 48566.0, 'time_delta': '13:29:26', 'additions': 16, 'deletions': 1, 'state': 'closed'}, {'id': 650591542, 'number': 1334, 'closed': datetime.datetime(2021, 5, 25, 21, 49, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 8, 39, 27, tzinfo=datetime.timezone.utc), 'time_taken': 306575.0, 'time_delta': '3 days, 13:09:35', 'additions': 8, 'deletions': 4, 'state': 'closed'}, {'id': 647567882, 'number': 1325, 'closed': datetime.datetime(2021, 5, 21, 18, 7, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 19, 11, 37, 11, tzinfo=datetime.timezone.utc), 'time_taken': 196237.0, 'time_delta': '2 days, 6:30:37', 'additions': 34, 'deletions': 75, 'state': 'closed'}, {'id': 632348443, 'number': 1311, 'closed': datetime.datetime(2021, 5, 11, 1, 47, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 6, 58, 10, tzinfo=datetime.timezone.utc), 'time_taken': 326947.0, 'time_delta': '3 days, 18:49:07', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 631355675, 'number': 1308, 'closed': datetime.datetime(2021, 5, 7, 3, 0, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 6, 11, 21, 35, tzinfo=datetime.timezone.utc), 'time_taken': 56357.0, 'time_delta': '15:39:17', 'additions': 451, 'deletions': 42, 'state': 'closed'}, {'id': 617435217, 'number': 1275, 'closed': datetime.datetime(2021, 5, 6, 23, 37, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 18, 7, 12, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1614292.0, 'time_delta': '18 days, 16:24:52', 'additions': 433, 'deletions': 42, 'state': 'closed'}, {'id': 609465725, 'number': 1256, 'closed': datetime.datetime(2021, 4, 6, 20, 43, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 6, 5, 22, 37, tzinfo=datetime.timezone.utc), 'time_taken': 55245.0, 'time_delta': '15:20:45', 'additions': 207, 'deletions': 146, 'state': 'closed'}, {'id': 607301379, 'number': 1248, 'closed': datetime.datetime(2021, 4, 12, 23, 13, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 1, 10, 41, 33, tzinfo=datetime.timezone.utc), 'time_taken': 995545.0, 'time_delta': '11 days, 12:32:25', 'additions': 124, 'deletions': 140, 'state': 'closed'}, {'id': 603440126, 'number': 1244, 'closed': datetime.datetime(2021, 3, 30, 23, 0, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 30, 7, 8, 44, tzinfo=datetime.timezone.utc), 'time_taken': 57117.0, 'time_delta': '15:51:57', 'additions': 11, 'deletions': 4, 'state': 'closed'}, {'id': 595943445, 'number': 1220, 'closed': datetime.datetime(2021, 3, 19, 21, 52, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 18, 21, 4, 7, tzinfo=datetime.timezone.utc), 'time_taken': 89291.0, 'time_delta': '1 day, 0:48:11', 'additions': 28, 'deletions': 1, 'state': 'closed'}, {'id': 594635706, 'number': 1212, 'closed': datetime.datetime(2021, 3, 24, 16, 45, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 11, 38, 30, tzinfo=datetime.timezone.utc), 'time_taken': 623216.0, 'time_delta': '7 days, 5:06:56', 'additions': 107, 'deletions': 140, 'state': 'closed'}, {'id': 594423931, 'number': 1211, 'closed': datetime.datetime(2021, 3, 17, 16, 9, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 5, 50, 6, tzinfo=datetime.timezone.utc), 'time_taken': 37190.0, 'time_delta': '10:19:50', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 593860446, 'number': 1205, 'closed': datetime.datetime(2021, 3, 16, 19, 18, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 16, 12, 34, 32, tzinfo=datetime.timezone.utc), 'time_taken': 24257.0, 'time_delta': '6:44:17', 'additions': 140, 'deletions': 166, 'state': 'closed'}, {'id': 592515320, 'number': 1202, 'closed': datetime.datetime(2021, 3, 18, 17, 56, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 14, 10, 14, 13, tzinfo=datetime.timezone.utc), 'time_taken': 373337.0, 'time_delta': '4 days, 7:42:17', 'additions': 107, 'deletions': 140, 'state': 'closed'}]"
