pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
672604757,Adding function to check for mergeability and also to get composite change list between two versions. Milestone 1.1,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR is for [Improve exploration save flow project.](https://docs.google.com/document/d/1Wu2ZKAEhUdi95P3zwiji4PYPsMdlQeRGMBu8IGxY3eY/edit?usp=sharing) [Milestone 1.1]
2. This PR does the following: Adds the function which will check for the mergeability of the change list when the user is making changes to the old version of any exploration. Also Adds the function to return the composite change list between two versions.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
No proof of changes needed because this PR is not making any changes in the functionality for now. It is just adding two functions that will be connected to the functionality in the later PRs of this milestone.
<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13116,https://api.github.com/repos/oppia/oppia/pulls/13116,https://github.com/oppia/oppia/pull/13116,closed,5779,5,3,50,13,120,1,1,[{'name': 'PR: LGTM'}],2021-06-17 12:54:37+00:00,2021-06-30 01:57:37+00:00,1083780.0,"12 days, 13:03:00","[{'comment_id': 654668516, 'comment_body': 'It is unclear what ""old_version"" and ""new_version"" refer to here. Please clarify here.', 'comment_created': datetime.datetime(2021, 6, 18, 20, 44, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654669113, 'comment_body': '""changes are being made"" seem a bit vague. Can you please elaborate?', 'comment_created': datetime.datetime(2021, 6, 18, 20, 46, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654669648, 'comment_body': 'Since we are referring to this as the ""backend"" version. Should we name it accordingly? Ditto for ""old_serviosn"" e.g. would it be ""frontend"" version?', 'comment_created': datetime.datetime(2021, 6, 18, 20, 47, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654670686, 'comment_body': 'Would it make sense to call this the ""latest frontend version"" then?', 'comment_created': datetime.datetime(2021, 6, 18, 20, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654671166, 'comment_body': '```suggestion\r\n        boolean. Whether the changes are mergeable.\r\n```', 'comment_created': datetime.datetime(2021, 6, 18, 20, 51, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654672201, 'comment_body': 'Here and below: Move the actual variable below the relevant comment.', 'comment_created': datetime.datetime(2021, 6, 18, 20, 53, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654672617, 'comment_body': '""Names of the states .. ""', 'comment_created': datetime.datetime(2021, 6, 18, 20, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654673545, 'comment_body': 'nit: newest -> latest name', 'comment_created': datetime.datetime(2021, 6, 18, 20, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654674036, 'comment_body': 'Are these referring to exploration domain objects? If so, please name them accordingly.', 'comment_created': datetime.datetime(2021, 6, 18, 20, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654680075, 'comment_body': 'Is this correct? Next statement just `returns False`', 'comment_created': datetime.datetime(2021, 6, 18, 21, 16, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654680924, 'comment_body': 'Here and below: Avoid using pragmas. You can find ways to break the statement into multiple lines if required -- this is true in most cases. For example, here you can do:\r\n```py\r\nstate_names_of_renamed_states[new_state_name] = (\r\n    old_state_name)\r\n```', 'comment_created': datetime.datetime(2021, 6, 18, 21, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654681372, 'comment_body': 'Can you please explain what this variable represents? It seems a bit confusing.', 'comment_created': datetime.datetime(2021, 6, 18, 21, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654686652, 'comment_body': 'What are ""properties related to the interaction"" here? Should we list them?', 'comment_created': datetime.datetime(2021, 6, 18, 21, 37, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654687862, 'comment_body': 'affectiong -> affecting', 'comment_created': datetime.datetime(2021, 6, 18, 21, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654688096, 'comment_body': 're-name -> rename', 'comment_created': datetime.datetime(2021, 6, 18, 21, 41, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654689061, 'comment_body': 'What about:\r\n\r\n```suggestion\r\n        # This includes changes related to renaming a state in order to check that \r\n        # changes are applied even if states are renamed.\r\n```', 'comment_created': datetime.datetime(2021, 6, 18, 21, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654690418, 'comment_body': '```suggestion\r\n        # Checking that old changes that could not be\r\n        # merged previously remain unmergable after addition or\r\n        # deletion of state.\r\n```', 'comment_created': datetime.datetime(2021, 6, 18, 21, 50, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654692083, 'comment_body': 'This sound like a function name. Can we call it ""changes_are_mergeable""?', 'comment_created': datetime.datetime(2021, 6, 18, 21, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654692842, 'comment_body': 'This is the first time we use the term ""second user"" -- it may be confusing to a reader. Also, where in this test do we check that a user is not able to make changes? Does this just mean the changes will not be mergeable -- if so, please rename accordingly?', 'comment_created': datetime.datetime(2021, 6, 18, 21, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654693608, 'comment_body': '```suggestion\r\n        # Add changes to the content of first state to check\r\n        # that changes to the translations in the second state.\r\n```', 'comment_created': datetime.datetime(2021, 6, 18, 22, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654693742, 'comment_body': '```suggestion\r\n        # the changes are in different states.\r\n```', 'comment_created': datetime.datetime(2021, 6, 18, 22, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654694260, 'comment_body': '```suggestion\r\n        # Changes to all state properties other than the hints.\r\n```', 'comment_created': datetime.datetime(2021, 6, 18, 22, 4, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654694591, 'comment_body': 'What are ""related properties""? Please list them.', 'comment_created': datetime.datetime(2021, 6, 18, 22, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654825272, 'comment_body': 'Made the changes.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 21, 49, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825313, 'comment_body': 'Done.\r\n', 'comment_created': datetime.datetime(2021, 6, 19, 18, 21, 59, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825321, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 22, 9, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825330, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 22, 17, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825342, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 22, 25, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825362, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825380, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825399, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825458, 'comment_body': ""Here I haven't written that part yet. I thought of pushing that part along with the complete functionality."", 'comment_created': datetime.datetime(2021, 6, 19, 18, 23, 38, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825467, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825471, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 23, 55, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825478, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 24, 2, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825484, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 24, 7, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825518, 'comment_body': 'Done.\r\n', 'comment_created': datetime.datetime(2021, 6, 19, 18, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825562, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654825567, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 25, 6, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654826631, 'comment_body': '> Also, where in this test do we check that a user is not able to make changes? Does this just mean the changes will not be mergeable -- if so, please rename accordingly?\r\n\r\nOn line number 8865 we check when the changes are not mergeable. Also the name of the test ```test_changes_are_not_mergeable_when_state_added_or_deleted```, which implies the same.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654826651, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 36, 1, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654826668, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 36, 6, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654826671, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 19, 18, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 654826892, 'comment_body': 'Related here means the properties which are affected by or affecting the solutions of the property. I have changed the statement so that it can be more clear. Still, do I need to mention the list of the properties?', 'comment_created': datetime.datetime(2021, 6, 19, 18, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 658315824, 'comment_body': ""Maybe rephrase it to 'Stores newest names of added states'? Currently, it seems like it is only storing a single str value."", 'comment_created': datetime.datetime(2021, 6, 24, 22, 10, 24, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 658316832, 'comment_body': 'Just to confirm, snapshots_metadata are returned, sorted by version, right?\r\nEven so, I think it might be better to use the ID of the snapshots instead of depending on the sorting of the list. I think snapshot IDs are in the form `<exp_id>-<exp_version>`, which might be easier, and if anything is missing there, throw an exception or log the error. @atpug22 @kevintab95 What do you think?', 'comment_created': datetime.datetime(2021, 6, 24, 22, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 658318557, 'comment_body': ""This is already fetched at the top, right? Can't we use the same object?"", 'comment_created': datetime.datetime(2021, 6, 24, 22, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 658320926, 'comment_body': 'we -> be.\r\nAlso, how does the calling function distinguish this specific case, since it returns false later on as well, or are all instances where this function returns false escalated to admins?', 'comment_created': datetime.datetime(2021, 6, 24, 22, 22, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 658710288, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 25, 12, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 658710347, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 25, 12, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 658710383, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 25, 12, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 658792927, 'comment_body': ""Here this get_exploration_snapshots_metadata returns the list according to the version number only in an increasing order one by one. They pass the version numbers to the get_snapshots_metadata function in exp_models and there they check for each version and then send otherwise raise the error. So the list which we are receiving is already checked and sorted on the basis of version number. So I don't think so we really need to check it again.\r\n"", 'comment_created': datetime.datetime(2021, 6, 25, 14, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 659148574, 'comment_body': 'Can we use a named constant for this list?', 'comment_created': datetime.datetime(2021, 6, 26, 10, 6, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 659148587, 'comment_body': 'ditto: use named constant', 'comment_created': datetime.datetime(2021, 6, 26, 10, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 659148596, 'comment_body': 'here and below.', 'comment_created': datetime.datetime(2021, 6, 26, 10, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 659148676, 'comment_body': 'Add clear comments indicating what the lists represent and when/how they should be modified.', 'comment_created': datetime.datetime(2021, 6, 26, 10, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 659149055, 'comment_body': 'Here and elsewhere it seems like `*_version_exploration.states[..]` makes the lines too long. Can we use a new variable for the states? e.g. frontend_exp_states = frontend_version_exploration.states[..] and backend_exp_states = ..?', 'comment_created': datetime.datetime(2021, 6, 26, 10, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 659149212, 'comment_body': 'Not done? Also, please do not resolve comments. It makes it harder for the reviewers to look at.', 'comment_created': datetime.datetime(2021, 6, 26, 10, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 659225893, 'comment_body': 'Yep. Made the changes.', 'comment_created': datetime.datetime(2021, 6, 26, 21, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 659225930, 'comment_body': 'Made the changes.', 'comment_created': datetime.datetime(2021, 6, 26, 21, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 659225936, 'comment_body': 'Made the changes.', 'comment_created': datetime.datetime(2021, 6, 26, 21, 30, 16, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 659225965, 'comment_body': 'Now changed it.', 'comment_created': datetime.datetime(2021, 6, 26, 21, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 659487831, 'comment_body': ""Aren't these the same list? If so, can we use a single list with an appropriate name."", 'comment_created': datetime.datetime(2021, 6, 28, 5, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 659489667, 'comment_body': '""state_names_of_renamed_states"" renamed states sounds like it will be a list of state names. If it has to be a dict, what is the structure of the dict (i.e. what are the keys and what are the values)? Please explain in comments.', 'comment_created': datetime.datetime(2021, 6, 28, 5, 34, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 659714828, 'comment_body': ""These lists are the same but they are for different properties so if in the future any property is added which is affected by solution only then in that case we'll add that property name in properties_related_to_solution only. So I don't think so we should keep the common list. "", 'comment_created': datetime.datetime(2021, 6, 28, 11, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 659720219, 'comment_body': ""Sounds good, can you please explicitly mention this in the comments so future devs don't combine the lists accidentally? Thanks!"", 'comment_created': datetime.datetime(2021, 6, 28, 11, 56, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 659721498, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 28, 11, 58, 27, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 659725636, 'comment_body': 'Explained it.', 'comment_created': datetime.datetime(2021, 6, 28, 12, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 659741298, 'comment_body': 'Instead of this, maybe at the top (before Line 1798) you can say ""Note: List X, Y, Z should remain separate lists irrespective of its content. This is because <explanation about why they are closely associated to a property>.""?\r\n\r\n"".. other two lists .."" is a bit vague. Avoid refering to things in a relative manner (like ""just below"") because it is possible that the position of the variables change.\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 12, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 659774730, 'comment_body': 'Agreed. Done.\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 13, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663443295, 'comment_body': 'Why are we having 500 lines big function?', 'comment_created': datetime.datetime(2021, 7, 4, 4, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663443343, 'comment_body': 'Remove extra newline*', 'comment_created': datetime.datetime(2021, 7, 4, 4, 17, 15, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663443416, 'comment_body': 'Do we need this else? (Removing this else will help us avoid 400 lines of left-oriented nested code)', 'comment_created': datetime.datetime(2021, 7, 4, 4, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663444653, 'comment_body': 'Instead of fronted and backed terms, I think we should make the service layer more general something around `intended exploration version of changes_list is not same as the current exploration version?', 'comment_created': datetime.datetime(2021, 7, 4, 4, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663444850, 'comment_body': 'def get_composite_change_list(exp_id, from_version, to_version):', 'comment_created': datetime.datetime(2021, 7, 4, 4, 37, 18, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663444935, 'comment_body': '[MINOR] Is it expected as a user-facing instruction message? If yes, I think these kinda message should be written in controller layer* ', 'comment_created': datetime.datetime(2021, 7, 4, 4, 38, 36, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663445049, 'comment_body': 'should we change the `get_exploration_snapshots_metadata` to have keyword_params `from_version` and `to_version` and only fetch the required snapshots?', 'comment_created': datetime.datetime(2021, 7, 4, 4, 40, 29, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663445217, 'comment_body': 'why backend_version_exploration? why not exploration or current_exploration?', 'comment_created': datetime.datetime(2021, 7, 4, 4, 42, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663445400, 'comment_body': 'use the constants defined in the domain layer*', 'comment_created': datetime.datetime(2021, 7, 4, 4, 45, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663445434, 'comment_body': 'why not written_translations?\r\n', 'comment_created': datetime.datetime(2021, 7, 4, 4, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663445451, 'comment_body': 'Ditto here and elsewhere*', 'comment_created': datetime.datetime(2021, 7, 4, 4, 46, 11, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663445571, 'comment_body': 'Maybe have property_linkages dict in the domain layer (state_domain)?', 'comment_created': datetime.datetime(2021, 7, 4, 4, 47, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663445634, 'comment_body': 'Re we expecting recorded_voiceovers to have in this list?', 'comment_created': datetime.datetime(2021, 7, 4, 4, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663447343, 'comment_body': 'it should be `if` instead of `elif`? (not sure!)\r\n\r\nConsidering the following situation:\r\n```\r\n1. Add state (A) [Appends A to added_state_names ]\r\n2. Rename state (A -> B) [Replaces A to B in added_state_names, adds ` B, A` in new_to_old_state_names]\r\n3. Rename state (B -> C) [Replaces B to C in added_state_names, will not ""adds ` C, B` in new_to_old_state_names""]\r\n```\r\n(Also add a test for the same!)', 'comment_created': datetime.datetime(2021, 7, 4, 5, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663448569, 'comment_body': 'The statename in `changed_properties` will be an outdated name? Considering added_state_name and other fields are only going to store the latest state_name should we also have the latest state_names in the `changed_properties`?', 'comment_created': datetime.datetime(2021, 7, 4, 5, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663448677, 'comment_body': 'Can we use default dict for `changed_properties` and avoid these extra if-else?', 'comment_created': datetime.datetime(2021, 7, 4, 5, 25, 47, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663449104, 'comment_body': 'Please not rely on the strings, I would suggest the following:\r\n\r\nHave get_properties_content_ids in the state class which will call get_content_id on each properties and return `{property_name: [content_ids]}`', 'comment_created': datetime.datetime(2021, 7, 4, 5, 30, 41, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663456770, 'comment_body': 'OR directly use:\r\nexp_models.ExplorationModel.get_snapshots_metadata( exploration_id, [from_sersion ... to_version], allow_deleted=allow_deleted)', 'comment_created': datetime.datetime(2021, 7, 4, 6, 52, 55, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663658808, 'comment_body': ""I'm not sure why we are relying on old statename?"", 'comment_created': datetime.datetime(2021, 7, 5, 6, 2, 34, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663660065, 'comment_body': 'The translation is only dependent on the content of the exploration which is indexed by content_id and the content_ids are unique throughout the exploration version. So, instead of relying on state properties we should check the changes in content. Is it possible to check the changes in content/contentIds for merging translation changes?\r\n\r\nNote: This is important as we allow multiple translators to work on translating exploration in multiple languages.', 'comment_created': datetime.datetime(2021, 7, 5, 6, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663661189, 'comment_body': 'reviewed for?', 'comment_created': datetime.datetime(2021, 7, 5, 6, 9, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663662528, 'comment_body': 'For line 1940*\r\n\r\nHow is this diffenert from old_state_to_nes_state_names variable?', 'comment_created': datetime.datetime(2021, 7, 5, 6, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663670816, 'comment_body': ""Some of these codes looks duplicate. \r\n\r\nAfter taking a full pass, I think it would be better to have a separate ExplorationChangMergeVerifier class which will have the following properties:\r\n```\r\nExplorationChangMergeVerifier:\r\n  init(composite_change_list)\r\n  state_name_change_map\r\n  new_state_name\r\n  changed_properties\r\n  changed_translation etc.\r\n  are_change_list_mergable(new_change_list_to_merge)\r\n```\r\nI'm not sure whether we can reuse the ExplorationChangMergeVerifier for new_change_list_to_merge in the `are_change_list_mergable` function. I think that depends on the algorithm but I also see some duplicate fields and steps. I can help to finalize the class structure if needed.\r\n\r\nI would suggest creating the new class in exp_domain or in a separate file.\r\n\r\nAt the end the exp_services.are_changes_mergeable should look something around:\r\n```\r\nSome basic check\r\nreturn ExplorationChangMergeVerifier(compostie_change_list).are_change_list_mergeable(change_lis)\r\n```"", 'comment_created': datetime.datetime(2021, 7, 5, 6, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663672007, 'comment_body': ""I'm not reviewing the function below this line as I'm finding it hard to keep the context of every variable above and read another 250+ lines with that weightage. [I'll review the extra lines once the code structure is optimized.]"", 'comment_created': datetime.datetime(2021, 7, 5, 6, 35, 19, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663675851, 'comment_body': 'I found we have an `ExplorationVersionsDiff` class you also use this class in the `are_change_list_mergeable` function if needed.', 'comment_created': datetime.datetime(2021, 7, 5, 6, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663814305, 'comment_body': 'Also, can we compare state-specific changes separately? i.e, there will be a base ExplorationChangeMergeVerifier which will internally use StateChangeMergeVerifier for cmd edit_state_property for all changes corresponding to a given state_name.', 'comment_created': datetime.datetime(2021, 7, 5, 10, 15, 21, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 666526943, 'comment_body': 'Resolved this in the latest PR.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666526986, 'comment_body': 'Resolved this in the latest PR.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666527022, 'comment_body': 'Resolved this in the latest PR.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 22, 46, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666527071, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666527135, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666527289, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 23, 17, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666527369, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 23, 26, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666527495, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666527583, 'comment_body': 'Removed them.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 23, 47, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666527826, 'comment_body': 'Because we are handling them in a different way. We discussed this offline.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666527931, 'comment_body': 'Ditto Same as above.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666528816, 'comment_body': ""Discussed this offline and it's not possible because these don't include all the related properties and are specific to this function only."", 'comment_created': datetime.datetime(2021, 7, 8, 21, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666529386, 'comment_body': 'Yeah because the changes in the same properties too are not mergeable.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666529966, 'comment_body': 'Removed this in the second PR.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 28, 23, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666530086, 'comment_body': 'Removed this in the second PR.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 28, 38, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666530767, 'comment_body': 'Actually, we need that thing so we can not remove it. I mean if there is no change in a particular state then we can simply return true and skip this part.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 29, 53, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666531272, 'comment_body': ""Discussed this offline. It's not possible here because we don't have any particular state here to get the content ids, we are iterating through the composite change list here."", 'comment_created': datetime.datetime(2021, 7, 8, 21, 30, 49, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666531724, 'comment_body': 'We want that to get the name of the state what was in the frontend_version.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 31, 46, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666532033, 'comment_body': 'Changed this in the second PR.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666532498, 'comment_body': 'This is for the present change list which we want to merge. old_to_new_state_names was for the composite_change_list.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666532553, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666532635, 'comment_body': 'Answered all the comments.', 'comment_created': datetime.datetime(2021, 7, 8, 21, 33, 28, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}]","[{'commit_sha': '441e7bee59c48fae7fbaccb867b1007852ac9a23', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2971f257abd0815edaf9655ad60a4e04a095d2dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b443665dd55ccdb465f4cd38f4b43b45e2e6d2c5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e8c5ef43f21405c9084aaaa1769c48ce86d8850', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b4272d6194b699a468ca9f94195b7cda7917b8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '674183f4b108e3f582f08c8b5eb7908f04118d7d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4560290c80103a3f3936d4a219b72c384a2ed2e4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b756dc95ddb1c7d3ead374fd21ad090b0898e8e5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea8f427de565f8508b09b3f7b8983566789b6ed7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e0ad8bc8296466f371e52a0718611037d2bb9ae', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12406c5834808b0355eaa9320a3e2baa22deaa40', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a13bd98251a5b2e4a1d5582a9a68bd7e07693e7b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6da64925d3aa53edde82176af6074f1c33fb276', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c931e7435eae3f647f59071c1969ecd4b7d74e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bdd8949d5988b738fe75efcc9c3da0232dff66c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f23449d57476473a684faa86f83d6de8b955891a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e52c316dbc7416a23d70e14a9c28968bbd71f3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09a6676a321ae7432f734591b1d3bbfe67fe6242', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2df9705fd4ad551a88222e9b9bf543b4d81e58d9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '762bf13f0e574c1f2ed050e07e23bae43e9dc82d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa0598bca1e79eeff84f8ae6e86705917bb134bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58eaa875a5c03455b1bb605275306342d8dff310', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '056d27d093a18428ed56519fccdce1fec269d936', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '441ff7853f315396e9e27542fee4ef9f9c29ead5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9be47fefb4b8c564a01a0aea7e8a4fc8ccb97b8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e791ab874c2140d472abdec8c5031b95a39762d7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efeea9fea50fb31554df9b285a8153c629f78d85', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ced0822cc0253bbe6e8a1a5603bf64bc2909f7e8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6afb14779bb91f57673b4ceccb3d856c6ea67abb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03b3aec541d39889e8f1e53bbb3e31e5adb7c020', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43950fd2492d1da59ff9a8f0e7cc22e296a8041b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20d5e46a37f4c6b1d4a163625bb99b4240822dac', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '730444ce9b926ed949a953f25848cb4269ed3254', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a721c282a0f29d19c755bdd8df865cf56cb921bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f55d8836a1a384eaafb2e08f4f60df790cceef4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0251e38df1ac9fe00e20bbe2d2d441aad6193cfa', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57b6c59c8f197828cb2ec7cb2c3cf1a795122511', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77fba229560c687f0e1b0943bfd1a4cb318d5e3f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f3cffe1ca2184bc3f2c4c67dfc2c93ab418132f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32a1b804d0cffbd5d7977a26636dd88ca1439b73', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b172b44937e7517778d6147dceb36f17923f98f1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '935928aa069fe79602b03ff840fa463dfdce4685', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd442269bf3cf27894158036d0f760219bd3701eb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd085b6046c7261bd1983479ea7f2820aad05da24', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea7fe5e35ff7e96297cdff38159a6eeebf9071fc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41dc5b87c6be3ebc7110bedb9880909ee6776bd9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce818063ebf19e36c93867f48432b13c3b0c8211', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed9fe80e7c49a171502ca94e78bceb00a480b301', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86cc7d906fdc6788782ac1f55a82773600952ff9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82f29b52fa5472cd586f4be1393d16710b675707', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}]",Aryaman Gupta,56637531,guptaaryaman22@gmail.com,User,,30,,10,67
678507746,Multiple users can make the changes to the exploration simultaneously when their changes are not conflicting. Milestone1.2,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of [Improve exploration save flow project](https://docs.google.com/document/d/1Wu2ZKAEhUdi95P3zwiji4PYPsMdlQeRGMBu8IGxY3eY/edit?usp=sharing). [Milestone 1.2]
2. This PR does the following: Introducing functionality such that edits made to exploration by a user are propagated to all clients. More specifically, an editor’s changes can be applied to the saved exploration if their changes are unrelated to existing edits that had been committed since their last draft was started. Otherwise, the user will be informed of the merge conflict and they will be able to see and export their lost changes.
3.  This PR also consists of the changes of PR [#13116](https://github.com/oppia/oppia/pull/13116) as it is not merged yet in the develop.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13233,https://api.github.com/repos/oppia/oppia/pulls/13233,https://github.com/oppia/oppia/pull/13233,closed,1967,312,20,121,21,130,0,1,[],2021-06-27 12:24:38+00:00,2021-07-08 13:30:14+00:00,954336.0,"11 days, 1:05:36","[{'comment_id': 662564738, 'comment_body': ""Can we call the variable `changes_are_mergable` to differentiate it from the function? Here and else where the variable is used. Let's do this in the HTTP response dicts too."", 'comment_created': datetime.datetime(2021, 7, 1, 20, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662566097, 'comment_body': '""not possible"" is a bit vague. Explain why it is ""not possible"".', 'comment_created': datetime.datetime(2021, 7, 1, 20, 18, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662566920, 'comment_body': 'This function name looks a bit odd. Can you rephrase it so it is more readable?', 'comment_created': datetime.datetime(2021, 7, 1, 20, 20, 1, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662568675, 'comment_body': 'Would ""The exploration version number on the client side."" make sense here?', 'comment_created': datetime.datetime(2021, 7, 1, 20, 22, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662572110, 'comment_body': 'Can you add some explanation above this if condition please e.g. why do we need it and how is it different from the else part? Should both blocks be kept ""in sync"" when a field is added / modified? ', 'comment_created': datetime.datetime(2021, 7, 1, 20, 27, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662573003, 'comment_body': 'In what scenario will frontend_version be None?', 'comment_created': datetime.datetime(2021, 7, 1, 20, 29, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662575162, 'comment_body': 'Can you explain this change please?', 'comment_created': datetime.datetime(2021, 7, 1, 20, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662575628, 'comment_body': 'Can you please add a comment about why this is required i.e. why we want to catch these errors?', 'comment_created': datetime.datetime(2021, 7, 1, 20, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662575822, 'comment_body': 'Why this change?', 'comment_created': datetime.datetime(2021, 7, 1, 20, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662577587, 'comment_body': 'Seems like we are loosing some information here. We seem to be printing more details regarding ""added answer groups"" in the old code but the new one just says ""Added answer group""? Please explain this change.', 'comment_created': datetime.datetime(2021, 7, 1, 20, 37, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662577944, 'comment_body': 'Ditto: losing lot of info compared to previous version implementation.', 'comment_created': datetime.datetime(2021, 7, 1, 20, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662578651, 'comment_body': 'Content id might not make sense to a user since it is an internal field, right?', 'comment_created': datetime.datetime(2021, 7, 1, 20, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662578996, 'comment_body': 'Users may not know the associated language given the language code. Should we map the language name and show it?', 'comment_created': datetime.datetime(2021, 7, 1, 20, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662579177, 'comment_body': 'What\'s an ""initiating state name""?', 'comment_created': datetime.datetime(2021, 7, 1, 20, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662579401, 'comment_body': 'Should we map the language code to the language so it is readable to the user?', 'comment_created': datetime.datetime(2021, 7, 1, 20, 41, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662580621, 'comment_body': 'Please make sure this test suite does not result in flakiness (we seem to be using global ""document"" in this test). Feel free to talk to @aishwary023 if you need any help in verifying this.', 'comment_created': datetime.datetime(2021, 7, 1, 20, 43, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662581016, 'comment_body': 'Ditto: We seem to be using some globals here (windowRef and document). Please make sure these changes do not introduce flakiness of fe tests.', 'comment_created': datetime.datetime(2021, 7, 1, 20, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662582526, 'comment_body': '```suggestion\r\n    // - Changes are not mergeable when a version mismatch occurs.\r\n```', 'comment_created': datetime.datetime(2021, 7, 1, 20, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 662895550, 'comment_body': ""But the ```changes_are_mergeable``` sound like that it is always true. This case is similar to the ```is_version_of_draft_valid``` where the function name and variable name both are the same, even in the HTTP response dicts. ```are_changes_mergable``` will store both true and false depending upon whether the changes are mergeable or not. That's why I kept this name. If it still needs to be changed then I'll update it."", 'comment_created': datetime.datetime(2021, 7, 2, 10, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662897780, 'comment_body': 'When we read the whole error which is returned then this ""not possible"" makes sense. Like the whole error will be ""Trying to update version 1 of exploration from version 4 which is not possible. Please reload the page and try again."".\r\nSo this means that we can not pass the change list from version 4 to update version 1. Does the full statement makes sense or do I still need to make the changes.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662925053, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662925141, 'comment_body': 'Changed it. ', 'comment_created': datetime.datetime(2021, 7, 2, 10, 53, 14, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662925243, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 53, 26, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662925593, 'comment_body': 'Frontend_version will be none sometimes when the user is working on the latest version.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 54, 11, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662928194, 'comment_body': ""It's the name of the first card in the exploration properties. Changed it now."", 'comment_created': datetime.datetime(2021, 7, 2, 10, 59, 21, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662928254, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 59, 27, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662928326, 'comment_body': 'Will do this.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662928376, 'comment_body': 'Will do this.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662928418, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662931687, 'comment_body': ""Actually, that was an error. Here new_state_name use to refer to the changed state name in the latest version after the rename changes applied. But here backend_version_exploration is the exploration before the change list applied so that changed state name doesn't exist here. So fixed this error and used old_state_name."", 'comment_created': datetime.datetime(2021, 7, 2, 11, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662931719, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 2, 11, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662932394, 'comment_body': 'Yeah, actually I got a lint error where I cannot use more than 6 returns in a function. Therefore change this last return to break as the break will do the same job here.', 'comment_created': datetime.datetime(2021, 7, 2, 11, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662933998, 'comment_body': ""These details which we were showing here were according to the very old version of the answer groups. Since then the answer groups have changed significantly and this template was returning errors. Now the answer groups occur in the list so at present we are not handling these cases. That's why fixed the errors by changing the way the changes in answer group can be shown."", 'comment_created': datetime.datetime(2021, 7, 2, 11, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662934118, 'comment_body': 'Ditto same as above.', 'comment_created': datetime.datetime(2021, 7, 2, 11, 10, 48, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662935070, 'comment_body': ""But content-id usually contains the property which is changed, so it can give the idea to the user. Otherwise, how we'll show the user that this property translation is added or changed. "", 'comment_created': datetime.datetime(2021, 7, 2, 11, 12, 34, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 662935222, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 2, 11, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663224327, 'comment_body': 'See note about boolean variables here: https://github.com/oppia/oppia/wiki/Coding-style-guide#javascript\r\n\r\nIt is fine to call it changes_are_mergable and can represent true/false.', 'comment_created': datetime.datetime(2021, 7, 2, 20, 2, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 663224385, 'comment_body': 'Ah, I see. Thanks for explaining.', 'comment_created': datetime.datetime(2021, 7, 2, 20, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 663225111, 'comment_body': 'What about this:\r\n\r\n```suggestion\r\n    def test_draft_does_not_update_for_invalid_version(self):\r\n```', 'comment_created': datetime.datetime(2021, 7, 2, 20, 5, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 663226681, 'comment_body': 'Too vague..\r\n\r\n""the conditions"" - what conditions do you refer to here?\r\n\r\n""the changes can be done"" - what changes? done where?\r\n\r\n""those cases"" - which cases?\r\n', 'comment_created': datetime.datetime(2021, 7, 2, 20, 9, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 663227965, 'comment_body': 'Ah, I see. Thanks for clarifying!', 'comment_created': datetime.datetime(2021, 7, 2, 20, 12, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 663228660, 'comment_body': 'Need not show that the content id changed. When there is an update to the id, maybe we can show the corresponding content instead.', 'comment_created': datetime.datetime(2021, 7, 2, 20, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 663278635, 'comment_body': '> But content-id usually contains the property which is changed, so it can give the idea to the user. Otherwise, how we\'ll show the user that this property translation is added or changed.\r\n\r\nHere ""property which is changed"" implies the property for which translation is added or changed. I guess I didn\'t explain it properly in the previous comment. Sorry for this.\r\nBut here we don\'t have the content. We only have the content id for which the translation is added or deleted. So if we\'ll not show the content id then the user will never know that for which property this translation was. I hope it\'s clear now.', 'comment_created': datetime.datetime(2021, 7, 2, 23, 6, 59, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663278739, 'comment_body': 'Explained it more clearly now.', 'comment_created': datetime.datetime(2021, 7, 2, 23, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663278774, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 2, 23, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663278895, 'comment_body': 'Got it. Done.', 'comment_created': datetime.datetime(2021, 7, 2, 23, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663435083, 'comment_body': 'As per the comment above we keep the store the changelist even if the changelist is not mergeable, right? Is it still true?', 'comment_created': datetime.datetime(2021, 7, 4, 2, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663435341, 'comment_body': 'Assert the new key-values added in the response*', 'comment_created': datetime.datetime(2021, 7, 4, 2, 32, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663435454, 'comment_body': 'The user will lose the data in case the draft is invalid? Currently, we allow users to view the changes before discarding the changes manually, are we removing that feature?', 'comment_created': datetime.datetime(2021, 7, 4, 2, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663435663, 'comment_body': 'Remove extra line*', 'comment_created': datetime.datetime(2021, 7, 4, 2, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663435753, 'comment_body': 'is this a duplicate datastore call (I see a similar call on line 367)? if yes, then make one db call on top and use it in all other places.', 'comment_created': datetime.datetime(2021, 7, 4, 2, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663436967, 'comment_body': 'Instead of making this a huge function with a big ""if-else"" block, I have few suggestions:\r\n\r\n1. Maybe have separate APPLY_METHODS and APPLY_OLD_CHANGES_METHOD in `ExplorationChange` class?\r\n```\r\nAPPLY_METHODS = { each change cmd: function(exp, change)}\r\nAPPLY_OLD_CHANGES_METHOD = {possible change cmd: function}\r\n\r\nFor correct version:\r\n  for change in chaneList:\r\n       use APPLY_METHODS\r\n       \r\nFor incorrect version:\r\n    for change in changeList:\r\n         if cmd in APPLY_OLD_CHANGES_METHOD:\r\n             use APPLY_OLD_CHANGES_METHOD\r\n         else:\r\n              use APPLY_METHODS\r\n```  \r\nReasons:\r\n1. Avoid duplicate code\r\n2. Moving domain-related changes in domain files\r\n3. Avoid having a big 500+ lines of function\r\n4. More general structure for applying change lists in domain objects (i.e, the changes don\'t need to depend on the service layer).\r\n\r\nNote: Most of the update-related functions are there in the Exploration class but we still want to APPLY* field to be a part of the ExpChange class because  APPLY* methods are tied to commands and the function in the APPLY* can use domain object properties/methods as needed so having it in the *Change class would be better.\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 4, 2, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663442416, 'comment_body': 'should we call it `change_list_for_exploration_version` or `change_list_for_version`? [This will make the function parameter more generic i.e, apply_changelist sounds like a general function, and having a general parameter name would be better!]', 'comment_created': datetime.datetime(2021, 7, 4, 4, 5, 52, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663461515, 'comment_body': 'If we are not expecting to store the ""not-mergeable"" drafts then do the followings:\r\n1. Remove the above comments\r\n2. Show a clear message ""letting the user know that the draft changes are not saved"" (something around that) in the frontend-modal', 'comment_created': datetime.datetime(2021, 7, 4, 7, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663465875, 'comment_body': 'use `change_list_for_exp_version` or `changes_for_version`', 'comment_created': datetime.datetime(2021, 7, 4, 8, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663466239, 'comment_body': 'Optional: Addition/deletion of state should not affect changes related to translation, right? (Also, it should only affect the answer groups, right? (not sure!))', 'comment_created': datetime.datetime(2021, 7, 4, 8, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663466705, 'comment_body': 'Can you leave a github-comment here and elsewhere explaining a few known situations where it can be complicated to handle? [This will help reviewers to quickly understand the situation.]', 'comment_created': datetime.datetime(2021, 7, 4, 8, 20, 16, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663534905, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663535064, 'comment_body': 'This is not a response returned from editorautosavehandler so it doesn\'t contain that ""are_changes_mergeable"" key. But I have tested it wherever I am returning that key.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 37, 11, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663535188, 'comment_body': 'Yes the user will lose data but we are still showing him the changes before discarding and now we are even giving him an option to export those discarded changes.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 38, 18, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663535200, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663535201, 'comment_body': 'Can you add information about the expected behavior and what changes you have made? [Asking this as this thread is different and needs clear information, this will help other reviewers as well.]', 'comment_created': datetime.datetime(2021, 7, 4, 17, 38, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663535257, 'comment_body': 'Here I now I have changed this function fully. Explained the reason in the next comment. PTAL.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 39, 3, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663535497, 'comment_body': 'Now I have changed the apply_change_list function to how it initially was. There were no differences in the two blocks except for one condition for which I have written the generalized solution now. Now the number of lines has been reduced in a function and there is no duplicate code. PTAL.\r\n', 'comment_created': datetime.datetime(2021, 7, 4, 17, 41, 13, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663535537, 'comment_body': 'The function is changed as explained in the comment above. PTAL.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663535564, 'comment_body': 'Ditto: The function is changed as explained in the comment above. PTAL.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 41, 51, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663536224, 'comment_body': 'After this PR, the draft will not be saved whenever the changes coming from an old version from the frontend are not mergeable to the latest version at the backend. So initially comment was an old one where we used to save the draft in case of version invalid. Now I changed the comment to explain the current situation.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663537004, 'comment_body': ""Actually, it may affect and it may not affect. At present we don't have a way to know what else changed in an answer group like maybe the feedback is also changed when adding/deleting the state so we cannot let translations being added in such cases. Also, it may be a case that rule is changed in the answer group along with the addition and deletion of the so that affects the solution. And we cannot make changes in the interaction id if someone has changed the answer group. So these properties are interrelated and are complex to handle now, that's why we are rejecting the changes in these cases. So Sean told me to send the change list to the admin in such cases so that they can be reviewed and if possible can be handled in the future. I have covered all the scenarios in my proposal. You can take a look at it [here](https://docs.google.com/document/d/1Wu2ZKAEhUdi95P3zwiji4PYPsMdlQeRGMBu8IGxY3eY/edit?usp=sharing)."", 'comment_created': datetime.datetime(2021, 7, 4, 17, 55, 15, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663556560, 'comment_body': 'Why remove this function?', 'comment_created': datetime.datetime(2021, 7, 4, 21, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 663557221, 'comment_body': ""This was merged in your previous PR, right? The fact that this got merged probably means that the backend tests don't handle all edge cases. Make sure to handle all edge cases as well in backend tests cases and not just go for coverage. Especially for this function, since it's quite a large and complicated function.\r\n@kevintab95 Can you make sure all edge cases are handled?"", 'comment_created': datetime.datetime(2021, 7, 4, 21, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 663565302, 'comment_body': ""@aks681 Yeah, this was merged in my previous PR. But the error wasn't that I used the wrong value here. The error was related to handling the state name renames encountered after completing the functionality during the manual testing. The error was related to the frontend where the exploration diff service couldn't handle the state renames if someone opened the editor with an existing unsaved draft after a long time and there is a state rename in the backend. So when someone opens the editor with an existing unsaved draft, the editor contains the latest version of an exploration. Therefore if there were any state renaming in the backend, the editor includes the states with the latest names but the unsaved draft change list still contains the changes according to the old state names. So if we wanted to merge it in the backend, it was possible to handle state renames cases. Still, when we try to save them, an error was thrown by the exploration diff service because it could not show the changes because of the different state names as there is no tracking of states in the frontend. So after looking into the codebase to try to handle these cases and after discussing it with @kevintab95, we decided that for now, we'll discard the changes if any state is renamed in the backend and the changes are made in that state in the frontend, and we'll inform the admin about this scenario so that these cases can be reviewed and appropriately handled. \r\nSo in my previous PR, we were handling the state renames; hence there were two variables, first is the old_state_name, which used to store the state name from the frontend_version, and the second was new_state_name which used to store the latest name of a state after multiple renames in the backend version. But after we stopped tracking the backend version state rename changes, we no longer needed new_state_name, and as both new_state_name and old_state_name are the same now, I entirely removed new_state_name and replaced it with the old_state_name. "", 'comment_created': datetime.datetime(2021, 7, 4, 22, 35, 5, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663565387, 'comment_body': ""I have explained the scenario here in this comment https://github.com/oppia/oppia/pull/13233/files#r663565302 that why are we doing this. I hope it's clear."", 'comment_created': datetime.datetime(2021, 7, 4, 22, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663565602, 'comment_body': 'This function use to return an error whenever there was a version mismatch, but now as we are handling the cases when the changes are done from the old version to the new version, I removed this function.', 'comment_created': datetime.datetime(2021, 7, 4, 22, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 663709024, 'comment_body': ""Please follow the existing pattern i.e, the email template should exist in email_manager.py file within a specific function to send this email.]\r\n\r\nAlso, the email needs better wording + structure. [I have less context about this PR, I would suggest working with your mentor to finalize a better email structure.]\r\n\r\nNote: Change_lst can have 1000s items and can be of size 3 MBs we cannot write the whole change_list in the email. Also, the change_list is a list(object), so how is it going to be sent via email, have you tested the email locally? (by logging) I also don't see any test for the email, can you please add a test?"", 'comment_created': datetime.datetime(2021, 7, 5, 7, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663712321, 'comment_body': 'Ditto as above*', 'comment_created': datetime.datetime(2021, 7, 5, 7, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663757690, 'comment_body': 'Are you sure, cause I see the same response dict here?', 'comment_created': datetime.datetime(2021, 7, 5, 8, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663758288, 'comment_body': ""I don't see any test for `changes_are_mergeable` in the response*"", 'comment_created': datetime.datetime(2021, 7, 5, 8, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663831445, 'comment_body': 'is this an expected removal?', 'comment_created': datetime.datetime(2021, 7, 5, 10, 43, 20, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663833487, 'comment_body': 'if changes are not mergeable then are we expecting to raise an error? ', 'comment_created': datetime.datetime(2021, 7, 5, 10, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663833882, 'comment_body': 'Do we still need the `draft_upgrade_services.try_upgrading_draft_to_exp_version`?', 'comment_created': datetime.datetime(2021, 7, 5, 10, 47, 33, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663886833, 'comment_body': 'As per our offline discussion, we are going to have the following user journey for AutoSaveChange feature:\r\n```\r\nUser A creates 10 draft (for exp v5)→ User B publishes new changes (exp v6) → User A adds more 11th change changes through AutoSave handler \r\n\r\nIf mergeable\r\n  The draft_change_list_exp_version should automatically get updated to 6\r\n  The new change should be added in the datastore.\r\n  The UI should be updated with v6 of exploration.\r\nElse:\r\n  The draft change_list should be saved.\r\n  Show the discard modal (Allowing users to discard the changes)\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 12, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664077725, 'comment_body': 'Undo this changes*', 'comment_created': datetime.datetime(2021, 7, 5, 18, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664078327, 'comment_body': ""Why extracting lost changes from a DOM? Can't we use this.lostChanges?"", 'comment_created': datetime.datetime(2021, 7, 5, 18, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664116354, 'comment_body': 'For the part about ""wording"", I would suggest something along these lines:\r\n\r\n```\r\nSome draft changes were rejected in exploration xxx because state(s) were added/deleted to the exploration before the draft could be saved. This resulted in a conflict. Please see the rejected change list below:\r\n\r\nDiscarded changelist: zzz\r\n\r\nFrontend version: xxx\r\nBakend version: yyy\r\n```\r\n   ', 'comment_created': datetime.datetime(2021, 7, 5, 20, 26, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 664134281, 'comment_body': 'Made the changes.\r\n', 'comment_created': datetime.datetime(2021, 7, 5, 21, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664134311, 'comment_body': 'Made the changes.', 'comment_created': datetime.datetime(2021, 7, 5, 21, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664134346, 'comment_body': 'Made the changes.', 'comment_created': datetime.datetime(2021, 7, 5, 21, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664134446, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 7, 5, 21, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664134689, 'comment_body': 'This is related to the changes we made in the are_changes_mergeable function and so yes this is an expected removal.', 'comment_created': datetime.datetime(2021, 7, 5, 21, 42, 9, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664134959, 'comment_body': ""No, because earlier we had is_version_of_draft_valid here which use to return True or False. And this are_changes_mergeable function also do the same so we don't expect an error here."", 'comment_created': datetime.datetime(2021, 7, 5, 21, 43, 30, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664135261, 'comment_body': ""Sorry, I didn't get this but I guess it is resolved after I added the changes requested in [this comment](https://github.com/oppia/oppia/pull/13233#discussion_r663886833)."", 'comment_created': datetime.datetime(2021, 7, 5, 21, 45, 5, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664135875, 'comment_body': ""this.lostChanges returns the JSON dictionary but we need to show the lostChanges in the exported file in the exact same way as we are showing in the modal and that's why extracting the template from the DOM."", 'comment_created': datetime.datetime(2021, 7, 5, 21, 47, 57, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664136188, 'comment_body': 'Sorry, that was a mistake from my side. Now I added it.', 'comment_created': datetime.datetime(2021, 7, 5, 21, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664242395, 'comment_body': 'If changes are not mergeable we should raise an error instead of sending 200 responses, right? Also, are we going to show a modal in UI if the `changes_are_mergeable` is False?', 'comment_created': datetime.datetime(2021, 7, 6, 5, 20, 4, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664242742, 'comment_body': 'Is this an expected change?', 'comment_created': datetime.datetime(2021, 7, 6, 5, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664243451, 'comment_body': ""Is the updated code-comment correct? I think we need to revert it back to the same? (not sure!)\r\n\r\nAlso, I don't see changes for `The draft_change_list_exp_version should automatically get updated to 6`, is it handled?"", 'comment_created': datetime.datetime(2021, 7, 6, 5, 23, 5, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664243704, 'comment_body': 'Do we still need this value in the response?', 'comment_created': datetime.datetime(2021, 7, 6, 5, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664244595, 'comment_body': 'Do we have a test for the following case for AutoSave handler: version of the draft is less than exploration but the changes are mergable?', 'comment_created': datetime.datetime(2021, 7, 6, 5, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664244710, 'comment_body': 'Remove this line*', 'comment_created': datetime.datetime(2021, 7, 6, 5, 26, 58, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664244834, 'comment_body': 'is this resolved?', 'comment_created': datetime.datetime(2021, 7, 6, 5, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664245743, 'comment_body': 'Move this check to email_manager file i.e, let email_manager decide whether the email should be sent or not, exp_service should just make request to email_manager ', 'comment_created': datetime.datetime(2021, 7, 6, 5, 29, 34, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664246063, 'comment_body': '```suggestion\r\n                (\r\n                     email_manager\r\n                     .send_not_mergeable_change_list_to_admin_for_review_email( \r\n```\r\n\r\nCan we do this^? (And avoid having bypass flag)', 'comment_created': datetime.datetime(2021, 7, 6, 5, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664289763, 'comment_body': ""I don't think these changes will fix the bug I've mentioned [here](https://github.com/oppia/oppia/pull/13116#discussion_r663447343)? Can you confirm?"", 'comment_created': datetime.datetime(2021, 7, 6, 7, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664290235, 'comment_body': 'Can we user method from existing LanguageUtils service?', 'comment_created': datetime.datetime(2021, 7, 6, 7, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664291536, 'comment_body': 'Is this an expected change?', 'comment_created': datetime.datetime(2021, 7, 6, 7, 9, 28, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664293819, 'comment_body': 'Is it possible to generate a human-readable formataed dict here and use it in json + HTML? [It will be better than manipulating/creating DOM!]', 'comment_created': datetime.datetime(2021, 7, 6, 7, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664296945, 'comment_body': ""I'm okay with the existing format if the frontend team approves the changes from a security and structure perspective.\r\n\r\n/cc @srijanreddy98 Can you please check this function and let is know whether it's fine to have it as-is? If not, do you have any suggestions?"", 'comment_created': datetime.datetime(2021, 7, 6, 7, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664297694, 'comment_body': 'Can we do this.discard() here?', 'comment_created': datetime.datetime(2021, 7, 6, 7, 19, 27, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664298635, 'comment_body': 'When changes are mergeable we are expecting the version_of_draft to be valid, right?', 'comment_created': datetime.datetime(2021, 7, 6, 7, 20, 54, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664357748, 'comment_body': 'Yes, we are testing that in exp_services_test.py and those tests were included in the first PR.', 'comment_created': datetime.datetime(2021, 7, 6, 8, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664363358, 'comment_body': 'Yes, because changes_are_mergeable returns true when the versions are the same. So we just need to check sometimes that changes_are_mergeable returns true when the versions are invalid like we did on line 117 of change-list.service.ts', 'comment_created': datetime.datetime(2021, 7, 6, 8, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664364191, 'comment_body': 'That was removed in the previous version only. They showed up late in the PR.', 'comment_created': datetime.datetime(2021, 7, 6, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664365254, 'comment_body': ""This was resolved in the previous version only. The changes showed up late in the PR or maybe you didn't refresh the file changed section at that time."", 'comment_created': datetime.datetime(2021, 7, 6, 8, 52, 21, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664366172, 'comment_body': ""No, I don't think so that we should raise an error when the changes are not mergeable because we are already showing the UI modal directly.\r\nYea we show a modal in UI if the ```changes_are_mergeable``` is False."", 'comment_created': datetime.datetime(2021, 7, 6, 8, 53, 35, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664366351, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 6, 8, 53, 50, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664366442, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 6, 8, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664366535, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 6, 8, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664368658, 'comment_body': ""These changes are different as you can see they are in the different sections of that function. Also, that's not a bug that you reported. Multiple if conditions can not be executed there as that loop checks one change at a time, so it's either going to be the if condition or the elif condition."", 'comment_created': datetime.datetime(2021, 7, 6, 8, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664371365, 'comment_body': ""I tried that but the problem is that type of this newValue as defined in general can be anything else too other than the string, although here we are getting the string only that language utils service function needs only string type values. So I guess it's better to use a separate function. And also then we will need to import languageUtilsService in the lost change dict which is not needed except for this small function here. So I guess we can keep it as it is."", 'comment_created': datetime.datetime(2021, 7, 6, 9, 0, 16, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664371472, 'comment_body': 'No. Removed it.', 'comment_created': datetime.datetime(2021, 7, 6, 9, 0, 26, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664371640, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 6, 9, 0, 39, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664372751, 'comment_body': ""Yes, but we kept this check of is_version_of_draft_valid because changes_are_mergeable even if the versions are same and we don't need a reload when the versions are the same. That's why I used this."", 'comment_created': datetime.datetime(2021, 7, 6, 9, 2, 1, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664377424, 'comment_body': ""No, actually I don't see a way where I can use this functionality to directly get the updated next_content_id_index because this change is coming from the frontend and in the frontend, we don't have the latest version to store the max value.  Also, this change doesn't affect the existing functionality, it in fact improves it that we always keep the greater next_content_id_index if by mistake we get a new value from the existing one. So I would suggest that we keep it here only as it is. "", 'comment_created': datetime.datetime(2021, 7, 6, 9, 8, 30, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664377738, 'comment_body': '@srijanreddy98 can you PTAL?', 'comment_created': datetime.datetime(2021, 7, 6, 9, 8, 57, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664397180, 'comment_body': 'For some background: We parse and display the lostChanges object in a particular way in the template. The intention here is to let the user save a copy of what they are seeing in the modal (so that they can use this data later on to manually replicate their changes).\r\n\r\nWe are only reading from the DOM for this so I don\'t think it is a security issue. The ""download"" operation in lines 61-64 is a common technique to save data as a file without making a server call. One thing we can do to improve this is a cleanup -- e.g. remove the A tag and revoke the object URL (example: https://gist.github.com/danallison/3ec9d5314788b337b682#file-downloadstring-js-L11-L12). But I don\'t expect this to be a blocker.', 'comment_created': datetime.datetime(2021, 7, 6, 9, 34, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 664716483, 'comment_body': 'In that case, can we change `is_version_of_draft_valid` to `version_of_draft_updated`? (Which will help us know whether in the last autoSave call the version of the draft was updated?)', 'comment_created': datetime.datetime(2021, 7, 6, 16, 40, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 664719421, 'comment_body': ""But we don't want to check that whether the version of the draft is updated or not, we are just checking that at present is the version in the frontend same as the version in the backend, therefore I guess the name which we are using at present is suitable for it. "", 'comment_created': datetime.datetime(2021, 7, 6, 16, 44, 18, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 664720038, 'comment_body': ""This is fine... my initial concern was to avoid nativeElement usage (and it can be done too) but it's fine. Can you create an issue and assign this to me so that we can keep track of this."", 'comment_created': datetime.datetime(2021, 7, 6, 16, 45, 8, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 665553737, 'comment_body': ""I would suggest updating the draft_version at AutoSaveHandler if the changes_are_mergable. I'll approve the PR but let's create an issue and discuss it further. (This comment should not block the PR as the overall user journey is working fine!)"", 'comment_created': datetime.datetime(2021, 7, 7, 17, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 665561133, 'comment_body': ""Yeah, I guess there is some confusion regarding this. I'll create an issue and there we'll discuss and proceed further. Thanks! "", 'comment_created': datetime.datetime(2021, 7, 7, 17, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}]","[{'commit_sha': '441e7bee59c48fae7fbaccb867b1007852ac9a23', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2971f257abd0815edaf9655ad60a4e04a095d2dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b443665dd55ccdb465f4cd38f4b43b45e2e6d2c5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e8c5ef43f21405c9084aaaa1769c48ce86d8850', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b4272d6194b699a468ca9f94195b7cda7917b8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '674183f4b108e3f582f08c8b5eb7908f04118d7d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4560290c80103a3f3936d4a219b72c384a2ed2e4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b756dc95ddb1c7d3ead374fd21ad090b0898e8e5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea8f427de565f8508b09b3f7b8983566789b6ed7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e0ad8bc8296466f371e52a0718611037d2bb9ae', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12406c5834808b0355eaa9320a3e2baa22deaa40', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a13bd98251a5b2e4a1d5582a9a68bd7e07693e7b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6da64925d3aa53edde82176af6074f1c33fb276', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c931e7435eae3f647f59071c1969ecd4b7d74e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bdd8949d5988b738fe75efcc9c3da0232dff66c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f23449d57476473a684faa86f83d6de8b955891a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e52c316dbc7416a23d70e14a9c28968bbd71f3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09a6676a321ae7432f734591b1d3bbfe67fe6242', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2df9705fd4ad551a88222e9b9bf543b4d81e58d9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '762bf13f0e574c1f2ed050e07e23bae43e9dc82d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa0598bca1e79eeff84f8ae6e86705917bb134bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58eaa875a5c03455b1bb605275306342d8dff310', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '056d27d093a18428ed56519fccdce1fec269d936', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '441ff7853f315396e9e27542fee4ef9f9c29ead5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9be47fefb4b8c564a01a0aea7e8a4fc8ccb97b8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd12fef95c1711ef62c6b5ef83a9bb136b251c5a1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e720631ec5260d010d6de88f4277ba88765d8c6', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e791ab874c2140d472abdec8c5031b95a39762d7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efeea9fea50fb31554df9b285a8153c629f78d85', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '458c330625b2ab0684610d9503ef25cc5066c20d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b27a1f16a0415cc3b8368025600c5a5deeb81a4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ced0822cc0253bbe6e8a1a5603bf64bc2909f7e8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6afb14779bb91f57673b4ceccb3d856c6ea67abb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a76eb69f33d70753ea0517687a079624877c7da', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03b3aec541d39889e8f1e53bbb3e31e5adb7c020', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a644eab29e97dbefadc66ec2e6e2c741ae316e90', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43950fd2492d1da59ff9a8f0e7cc22e296a8041b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffa7d28e7ece1bad38be648fdb888fe782510f58', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37fef0e55bfbd4110f7f40c27ba502ab7998896d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20d5e46a37f4c6b1d4a163625bb99b4240822dac', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '730444ce9b926ed949a953f25848cb4269ed3254', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff0ade8a50d90dc477cff80ce135d15f0200e188', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d5e9a2211cee301041a9a6519e64310d9f57d84', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ab70f57de0bf2fd62e9775fa17d8730b1ee310c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c5afcd5d64bb5f2f2cd384a0523439524f7d7f0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a721c282a0f29d19c755bdd8df865cf56cb921bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f55d8836a1a384eaafb2e08f4f60df790cceef4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0251e38df1ac9fe00e20bbe2d2d441aad6193cfa', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57b6c59c8f197828cb2ec7cb2c3cf1a795122511', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77fba229560c687f0e1b0943bfd1a4cb318d5e3f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b874a4d774d32e331ecc25c20b605339ec69a803', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f31d144717e4842b519ebfbc995c1a6dd854ceb8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c33db2c9708aaa487d420b23955ca5e74e7cfd81', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83629fece13304e381f60f94e2e714a625b9573d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e2c0d744dc2a6cf6c2708c2a6ee2b39c36f28a4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f3cffe1ca2184bc3f2c4c67dfc2c93ab418132f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '817d5285524d30740414e62b896215c2caf38895', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c240ede246c347d9f06091b74f052b267474f553', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e48860ad178283155de0d6803d950adcfeb3b834', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '781cfe83b06acbf79daa447b22bb60adee6bd6cc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32a1b804d0cffbd5d7977a26636dd88ca1439b73', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b172b44937e7517778d6147dceb36f17923f98f1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '935928aa069fe79602b03ff840fa463dfdce4685', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bf757b826bebdd216945ef89621e2823e950d94', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bce3056cd77e072544809ca9ab5976910f5edf8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9cc2a554319243fa75a3af9dfc7318a6bfbd200', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2aa2c23a100065cc28d6f06d312cfb812abb5968', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8df443536ff2944bd1327000a0116d3612bcd7b5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cc9acf9401c1fcc174bc2fe7139471efd7df38f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fde63548876cc557642dea9e5caf4154df5e8bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaaa67c600a154f8f6d22e2f6fd222d5f8d511d1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5ca5b94d9f43fae38835d8f4d76ff4a5abce401', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48ede7f991b4ded0e104c63ce2ac042252954e79', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd442269bf3cf27894158036d0f760219bd3701eb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd085b6046c7261bd1983479ea7f2820aad05da24', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56578c43f1c73746f902fdc80658fe69fec09547', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea7fe5e35ff7e96297cdff38159a6eeebf9071fc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41dc5b87c6be3ebc7110bedb9880909ee6776bd9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad8cc7718cd6e355a93a994cb799a399da6c98d2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e93333e396ef201321df06290912ff3fe6335d0d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce818063ebf19e36c93867f48432b13c3b0c8211', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59656274e6ce5de9d25dbb8064e90989cb108778', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24de6a7832c03afe02ac728364129fb9e8135f42', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56d9038060a0b48de3ca5897e8f20b87839285dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '972a75646381282bf1dea1564c0b26771b037f3b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3801b5977bb2919d51d915797f9f028708e2cd64', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc76fd3fed6d3fe384dd15ebc5e3359b6d6b974d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed9fe80e7c49a171502ca94e78bceb00a480b301', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86cc7d906fdc6788782ac1f55a82773600952ff9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82f29b52fa5472cd586f4be1393d16710b675707', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1110dd7715681b1056145f632882b59c68249fb0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '579ca6e691fdd3d35b4fe56b516ffd437d76969e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45f67e90252f40e2864aa78f5d6643b5233ed5b0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '175151e6ac26a541bddc463b1f15e98eac2b016b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dfe0e832e97d4acb8eb974a98d625dc0c076d5c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6838b917e949bd949851068ebb98ec2d3c84bcb1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77aa8635861e492e580882a126d7601123df7dc3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '346e19cf7c99a2410a5fde5eab51b579b32595e9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17f24ca0e3dccb7cd2bc0abe99eeecc7c99da447', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '424b25fd895c082659dddb53c3240fd568382a1c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80c2ad747f05ebf28dd24e633e22e79b0b5d87af', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa1627baf8930724e18643ee193ed67781ea4998', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c08718a1e2bd3df6cb629139024fe9ed820c398', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0ad844a98b8259b407c100e6ce851c20a7ee818', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f929b6a0978bdca8dc9b80c645dcffa0edd8cb7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd6ab2dac5c949c22516497842f1edd036674705', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22a916f25f16f9a1915479edda98d1af242a98b7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0de33276dddbcdeed4b6ae7a6800ecfe78220792', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44dbcedf936f9dbd724f3ab74b86fd9dadc3ec8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4657926426fe33baee48cf66ccb94c510d7feaa8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76005da56cf6892a1e3828a8debf941a7436c49a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fae1843285fa6e9c92ec2958b02ff24231d7b399', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0db303a12e9a6173a15f575e23d7a80718751187', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8a824cda8cc4d2fea4b4db73b742aa07bc75c8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '575b5a7d4cc3b43cbf67198f2caa3b000f04cbdd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd0c8261472a8ea3b35e4628ab3bd4c9571d7fae', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0c86cdbf73a6fe8105dc4886c4f88193bb145fe', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4ceac3bd2df6554142681c1e19c348418560c75', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7296d9505e3a8fb3fc2746ab6bea0a1ea32a30cc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad2318763526911feffb9c8c060467110784ec2e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70b166d711b8b93b89abeeb4a7d2133f29fb5647', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}]",Aryaman Gupta,56637531,guptaaryaman22@gmail.com,User,,30,,10,67
684638044,Introduce E2E tests to test allowing multiple collaborators to work on the exploration.,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR is for [Improve exploration save flow project](https://docs.google.com/document/d/1Wu2ZKAEhUdi95P3zwiji4PYPsMdlQeRGMBu8IGxY3eY/edit?usp=sharing). [Part of Milestone 1.2]
2. This PR does the following: Adds the e2e tests to test the feature of allowing multiple collaborators to work on the exploration.
The tests added here test these features:
* When the changes from the old version are not conflicting with the latest version of an exploration then the changes should be merged.
* When the changes from the old version are conflicting with the latest version of an exploration then the discard lost changes modal shown.
* When the changes from the old version are conflicting with the latest version of an exploration then the discard lost changes modal shown and the user should be able to download the lost changes file.
* When there are more than 50 changes in the draft then the user should see a recommendation modal recommending him to save the changes.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
No proof of changes needed because I am adding e2e tests here.
<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13325,https://api.github.com/repos/oppia/oppia/pulls/13325,https://github.com/oppia/oppia/pull/13325,closed,467,24,8,135,12,36,0,2,[],2021-07-06 19:53:52+00:00,2021-07-09 11:46:01+00:00,229929.0,"2 days, 15:52:09","[{'comment_id': 665511040, 'comment_body': 'Why are these needed?', 'comment_created': datetime.datetime(2021, 7, 7, 16, 3, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665511478, 'comment_body': 'What do you mean by ""show merge changes"" here? I\'m not able to understand the description here.', 'comment_created': datetime.datetime(2021, 7, 7, 16, 3, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665512963, 'comment_body': 'Here and below, can we try to write statements in fewer lines if it is possible to do so? e.g. you can do `expect(await audioLanguageSelector.getText()).not.toEqual(language);` here without hitting the max line limit. ', 'comment_created': datetime.datetime(2021, 7, 7, 16, 5, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665515111, 'comment_body': 'Why are we using a generic `modal-content` class here? This is used for all modals. E.g. even the ""welcome modal"" uses this. Can we make it more specific for the ""lost changes modal"" please?', 'comment_created': datetime.datetime(2021, 7, 7, 16, 8, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665519226, 'comment_body': 'Maybe before switching users and performing actions below, can we have a small description so that it is clear what the test is doing as a particular user?', 'comment_created': datetime.datetime(2021, 7, 7, 16, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665521600, 'comment_body': 'Should we expect that no ""lost changes"" is shown (since merge is handled)?', 'comment_created': datetime.datetime(2021, 7, 7, 16, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665522917, 'comment_body': ""```suggestion\r\n    'should show discard changes modal when the changes are conflicting',\r\n```"", 'comment_created': datetime.datetime(2021, 7, 7, 16, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665523544, 'comment_body': ""```suggestion\r\n    'should show discard changes modal and allow downloading of lost changes',\r\n```"", 'comment_created': datetime.datetime(2021, 7, 7, 16, 19, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665523957, 'comment_body': 'Ditto: please use a more specific class.', 'comment_created': datetime.datetime(2021, 7, 7, 16, 20, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665525096, 'comment_body': 'Please move this to the bottom of this file.', 'comment_created': datetime.datetime(2021, 7, 7, 16, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665527375, 'comment_body': 'Unclear what prompt is referred to here.', 'comment_created': datetime.datetime(2021, 7, 7, 16, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665529186, 'comment_body': 'Is this actually required?', 'comment_created': datetime.datetime(2021, 7, 7, 16, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 665713449, 'comment_body': 'I guess these were added by mistake. Sorry for not checking these before asking for a review.', 'comment_created': datetime.datetime(2021, 7, 7, 21, 19, 50, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665713564, 'comment_body': 'Changed the description.', 'comment_created': datetime.datetime(2021, 7, 7, 21, 20, 3, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665713612, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 21, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665713663, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 21, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665713709, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 21, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665713972, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 21, 20, 47, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665714028, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 21, 20, 53, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665714077, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 21, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665714117, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 21, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665714232, 'comment_body': 'Explained it now.', 'comment_created': datetime.datetime(2021, 7, 7, 21, 21, 15, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665746524, 'comment_body': 'That was my mistake. Removed it.', 'comment_created': datetime.datetime(2021, 7, 7, 22, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 665779292, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 7, 23, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666008184, 'comment_body': 'Create an exploration as user AAA with X, Y, Z set and add user BBB as a collaborator.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 666009755, 'comment_body': '""Login as collaborator and make changes that do not conflict with the user AAA\'s unsaved changes""\r\n\r\nExplain what the changes are and why they are not considered conflicting for the sake of completeness.\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 8, 9, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 666019901, 'comment_body': 'Should we use a variable for the CSS selector here?  ', 'comment_created': datetime.datetime(2021, 7, 8, 9, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 666029473, 'comment_body': 'What does version refer to here -- version of what?', 'comment_created': datetime.datetime(2021, 7, 8, 9, 31, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 666031495, 'comment_body': 'We use this a few times in this file. Can we store it in a variable and reuse it?', 'comment_created': datetime.datetime(2021, 7, 8, 9, 34, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 666040565, 'comment_body': 'Should this be handled in `saveChangesAfterPrompt`?', 'comment_created': datetime.datetime(2021, 7, 8, 9, 46, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 666146059, 'comment_body': 'This is used here to check whether the modal appears or not and the ```saveChangeAfterPrompt``` is used to test the save button on that modal. So I guess we should handle this separately.\r\nBtw I renamed ```saveChangeAfterPrompt``` to ```acceptSaveRecommendationPrompt```.', 'comment_created': datetime.datetime(2021, 7, 8, 12, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666146216, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 12, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666146359, 'comment_body': 'Explained it now.', 'comment_created': datetime.datetime(2021, 7, 8, 12, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666146454, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 12, 29, 10, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666146495, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 12, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 666146548, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 12, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}]","[{'commit_sha': '441e7bee59c48fae7fbaccb867b1007852ac9a23', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2971f257abd0815edaf9655ad60a4e04a095d2dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b443665dd55ccdb465f4cd38f4b43b45e2e6d2c5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e8c5ef43f21405c9084aaaa1769c48ce86d8850', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b4272d6194b699a468ca9f94195b7cda7917b8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '674183f4b108e3f582f08c8b5eb7908f04118d7d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4560290c80103a3f3936d4a219b72c384a2ed2e4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b756dc95ddb1c7d3ead374fd21ad090b0898e8e5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea8f427de565f8508b09b3f7b8983566789b6ed7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e0ad8bc8296466f371e52a0718611037d2bb9ae', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12406c5834808b0355eaa9320a3e2baa22deaa40', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a13bd98251a5b2e4a1d5582a9a68bd7e07693e7b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6da64925d3aa53edde82176af6074f1c33fb276', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c931e7435eae3f647f59071c1969ecd4b7d74e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bdd8949d5988b738fe75efcc9c3da0232dff66c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f23449d57476473a684faa86f83d6de8b955891a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e52c316dbc7416a23d70e14a9c28968bbd71f3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09a6676a321ae7432f734591b1d3bbfe67fe6242', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2df9705fd4ad551a88222e9b9bf543b4d81e58d9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '762bf13f0e574c1f2ed050e07e23bae43e9dc82d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa0598bca1e79eeff84f8ae6e86705917bb134bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58eaa875a5c03455b1bb605275306342d8dff310', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '056d27d093a18428ed56519fccdce1fec269d936', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '441ff7853f315396e9e27542fee4ef9f9c29ead5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9be47fefb4b8c564a01a0aea7e8a4fc8ccb97b8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd12fef95c1711ef62c6b5ef83a9bb136b251c5a1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e720631ec5260d010d6de88f4277ba88765d8c6', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e791ab874c2140d472abdec8c5031b95a39762d7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efeea9fea50fb31554df9b285a8153c629f78d85', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '458c330625b2ab0684610d9503ef25cc5066c20d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b27a1f16a0415cc3b8368025600c5a5deeb81a4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ced0822cc0253bbe6e8a1a5603bf64bc2909f7e8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6afb14779bb91f57673b4ceccb3d856c6ea67abb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a76eb69f33d70753ea0517687a079624877c7da', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03b3aec541d39889e8f1e53bbb3e31e5adb7c020', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a644eab29e97dbefadc66ec2e6e2c741ae316e90', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43950fd2492d1da59ff9a8f0e7cc22e296a8041b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffa7d28e7ece1bad38be648fdb888fe782510f58', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37fef0e55bfbd4110f7f40c27ba502ab7998896d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20d5e46a37f4c6b1d4a163625bb99b4240822dac', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '730444ce9b926ed949a953f25848cb4269ed3254', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff0ade8a50d90dc477cff80ce135d15f0200e188', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d5e9a2211cee301041a9a6519e64310d9f57d84', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ab70f57de0bf2fd62e9775fa17d8730b1ee310c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c5afcd5d64bb5f2f2cd384a0523439524f7d7f0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a721c282a0f29d19c755bdd8df865cf56cb921bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f55d8836a1a384eaafb2e08f4f60df790cceef4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0251e38df1ac9fe00e20bbe2d2d441aad6193cfa', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57b6c59c8f197828cb2ec7cb2c3cf1a795122511', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77fba229560c687f0e1b0943bfd1a4cb318d5e3f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b874a4d774d32e331ecc25c20b605339ec69a803', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f31d144717e4842b519ebfbc995c1a6dd854ceb8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c33db2c9708aaa487d420b23955ca5e74e7cfd81', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83629fece13304e381f60f94e2e714a625b9573d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e2c0d744dc2a6cf6c2708c2a6ee2b39c36f28a4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f3cffe1ca2184bc3f2c4c67dfc2c93ab418132f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '817d5285524d30740414e62b896215c2caf38895', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c240ede246c347d9f06091b74f052b267474f553', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e48860ad178283155de0d6803d950adcfeb3b834', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '781cfe83b06acbf79daa447b22bb60adee6bd6cc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32a1b804d0cffbd5d7977a26636dd88ca1439b73', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b172b44937e7517778d6147dceb36f17923f98f1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '935928aa069fe79602b03ff840fa463dfdce4685', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bf757b826bebdd216945ef89621e2823e950d94', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bce3056cd77e072544809ca9ab5976910f5edf8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9cc2a554319243fa75a3af9dfc7318a6bfbd200', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2aa2c23a100065cc28d6f06d312cfb812abb5968', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8df443536ff2944bd1327000a0116d3612bcd7b5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cc9acf9401c1fcc174bc2fe7139471efd7df38f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fde63548876cc557642dea9e5caf4154df5e8bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaaa67c600a154f8f6d22e2f6fd222d5f8d511d1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5ca5b94d9f43fae38835d8f4d76ff4a5abce401', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48ede7f991b4ded0e104c63ce2ac042252954e79', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd442269bf3cf27894158036d0f760219bd3701eb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd085b6046c7261bd1983479ea7f2820aad05da24', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56578c43f1c73746f902fdc80658fe69fec09547', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea7fe5e35ff7e96297cdff38159a6eeebf9071fc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41dc5b87c6be3ebc7110bedb9880909ee6776bd9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad8cc7718cd6e355a93a994cb799a399da6c98d2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e93333e396ef201321df06290912ff3fe6335d0d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce818063ebf19e36c93867f48432b13c3b0c8211', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59656274e6ce5de9d25dbb8064e90989cb108778', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24de6a7832c03afe02ac728364129fb9e8135f42', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56d9038060a0b48de3ca5897e8f20b87839285dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '972a75646381282bf1dea1564c0b26771b037f3b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3801b5977bb2919d51d915797f9f028708e2cd64', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc76fd3fed6d3fe384dd15ebc5e3359b6d6b974d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed9fe80e7c49a171502ca94e78bceb00a480b301', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86cc7d906fdc6788782ac1f55a82773600952ff9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82f29b52fa5472cd586f4be1393d16710b675707', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1110dd7715681b1056145f632882b59c68249fb0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '579ca6e691fdd3d35b4fe56b516ffd437d76969e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b54992b91a1917a6940a393e563dfbddd667e7c2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c55ff1323add716345a23970d044dac5fd4bd4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45f67e90252f40e2864aa78f5d6643b5233ed5b0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '175151e6ac26a541bddc463b1f15e98eac2b016b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dfe0e832e97d4acb8eb974a98d625dc0c076d5c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13972b75d7611bbca3e2c5f52a005f80e533d618', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0d2af8fd035e8d88f1b196e688078e0ad5090b0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6838b917e949bd949851068ebb98ec2d3c84bcb1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff7e3a7bf3de3062f92d4142bac03cb9f7fdcfca', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77aa8635861e492e580882a126d7601123df7dc3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '346e19cf7c99a2410a5fde5eab51b579b32595e9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17f24ca0e3dccb7cd2bc0abe99eeecc7c99da447', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '882dc547992084fa0cbb7d884937b7238ed82343', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1b8ba73d37d9c266c131b2595f53719a202f043', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '424b25fd895c082659dddb53c3240fd568382a1c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80c2ad747f05ebf28dd24e633e22e79b0b5d87af', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa1627baf8930724e18643ee193ed67781ea4998', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c08718a1e2bd3df6cb629139024fe9ed820c398', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0ad844a98b8259b407c100e6ce851c20a7ee818', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f929b6a0978bdca8dc9b80c645dcffa0edd8cb7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd6ab2dac5c949c22516497842f1edd036674705', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22a916f25f16f9a1915479edda98d1af242a98b7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0de33276dddbcdeed4b6ae7a6800ecfe78220792', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44dbcedf936f9dbd724f3ab74b86fd9dadc3ec8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4657926426fe33baee48cf66ccb94c510d7feaa8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76005da56cf6892a1e3828a8debf941a7436c49a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fae1843285fa6e9c92ec2958b02ff24231d7b399', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0db303a12e9a6173a15f575e23d7a80718751187', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8a824cda8cc4d2fea4b4db73b742aa07bc75c8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '575b5a7d4cc3b43cbf67198f2caa3b000f04cbdd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23852e4b51f3e927ff5ab7c470b62bc7a9479340', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7208bc6e3ac22752a798320c5da303f94cc7682', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7ac0dfc83cad025247533616975e3c4656cff4a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c152789ebcd28ca2fa1a403b132ad116d982a573', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc12644f65bb00c34f495b5fda151a4ff89c2c3a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '631f765f4f085ddc5773f8ca10ebc26212abee92', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3357ff4c3e4713f91aee98d9d674462d1aa58790', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d020c5ae96aafab146c39b0af4758085f27cfdb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3253afdcbd23598c25dce6df3fb35521cc580fca', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a67a67f9f4c5dba1367d61f552973abd62cec24f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e56fcebe5077118356882f6858d5c88151f9a5d7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c665d9a359ead5d68673a3f4313562bde0888a1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55d25e194baa6839ebece57fbc16dd953167acc4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}]",Aryaman Gupta,56637531,guptaaryaman22@gmail.com,User,,30,,10,67
686131075,Changes in the functions added in #13116,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR includes the changes requested by @DubeySandeep on the merged PR #13116.
2. This PR does the following: Improves the code quality of the functions added in #13116.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
No proof of changes needed because the PR includes the changes requested by the reviewer in the functions and does not change any feature.
<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13342,https://api.github.com/repos/oppia/oppia/pulls/13342,https://github.com/oppia/oppia/pull/13342,closed,6056,6059,4,131,14,81,1,1,[{'name': 'PR: LGTM'}],2021-07-08 15:44:52+00:00,2021-07-12 22:04:30+00:00,368378.0,"4 days, 6:19:38","[{'comment_id': 666487371, 'comment_body': '```suggestion\r\n        self.added_state_names = []\r\n        ....\r\n        for change in composite_change_list:\r\n               self._parse_change(change)\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 20, 11, 41, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 666505118, 'comment_body': 'Apply method is in the domain layer\r\nCMD: function\r\n```\r\ncurrent_ex\r\ncl_exp (object)\r\n\r\nfor ocl in changeList:\r\n   if ocl.cmd = !Translation:\r\n        asdasd\r\n        asdasdasd\r\n        apply_([ocl], cl_exp)\r\n   if ocl == Translation:\r\n        ic the content in cureent_exp and cl_exp for the given content_id is same\r\n   if ocl == VOICEOVER:\r\n       ic the content in cureent_exp and cl_exp for the given content_id is same\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 20, 42, 39, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 666508021, 'comment_body': 'change_is_mergeable = (\r\nexp_at_change_list_version.getattr(property_name) == current_exploration.gaatr(change.property_name))', 'comment_created': datetime.datetime(2021, 7, 8, 20, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 666511849, 'comment_body': 'Can be improved*', 'comment_created': datetime.datetime(2021, 7, 8, 20, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 666977378, 'comment_body': '```suggestion\r\n            change: ExplorationChange. A change from the\r\n```', 'comment_created': datetime.datetime(2021, 7, 9, 14, 8, 13, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 666977563, 'comment_body': '```suggestion\r\n    def _parse_exp_change(self, change):\r\n```', 'comment_created': datetime.datetime(2021, 7, 9, 14, 8, 27, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 666983122, 'comment_body': ""Instead of a dict, can't you just do `return changes_are_mergeable, send_email`?"", 'comment_created': datetime.datetime(2021, 7, 9, 14, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 666985296, 'comment_body': '```suggestion\r\n        return changes_are_mergeable, False\r\n```', 'comment_created': datetime.datetime(2021, 7, 9, 14, 19, 18, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 666987176, 'comment_body': 'Add properties explanation comment in class docstring in `Attributes` section.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 22, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 666992542, 'comment_body': '```suggestion\r\n    PROPERTIES_CONFLICTING_CUST_ARGS_CHANGES = [\r\n```\r\n\r\n(Ditto elsewhere)', 'comment_created': datetime.datetime(2021, 7, 9, 14, 29, 1, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667015294, 'comment_body': 'have `_get_property_name_from_content_id` which will return property_name based on the given content_id.\r\n\r\n```\r\nproperty_name = self._get_property_name_from_content_id(change.content_id)\r\n\r\nif property_name not in (changed_properties[state_name] + changed_translations[state_name]):\r\n     change_is_mergeable = True\r\n```', 'comment_created': datetime.datetime(2021, 7, 9, 14, 59, 57, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667018438, 'comment_body': ""Create `_get_property_name_from_content_id`\r\n```\r\nPROPERTY_NAME_TO_CONTENT_ID_IDENTIFIER = {\r\n   STATE_PROPERTY_INTERACTION_ANSWER_GROUPS: lamda(x): x[:8] == 'feedback',\r\n   \r\n}\r\n```\r\n```\r\ndef _get_property_name_from_content_id(self, contnet_id):\r\n    for prop_name, identfier_function in PROPERTY_NAME_TO_CONTENT_ID_IDENTIFIER:\r\n        if  identfier_function(content_id) \r\n               return True\r\n```"", 'comment_created': datetime.datetime(2021, 7, 9, 15, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667020552, 'comment_body': '```\r\nif not ...:\r\n   something\r\n   continue\r\nif ....:\r\n```', 'comment_created': datetime.datetime(2021, 7, 9, 15, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667023479, 'comment_body': 'Can we add a `continue` here?', 'comment_created': datetime.datetime(2021, 7, 9, 15, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667025384, 'comment_body': 'Do not have separate variables for the object properties*', 'comment_created': datetime.datetime(2021, 7, 9, 15, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667026902, 'comment_body': 'return False, True', 'comment_created': datetime.datetime(2021, 7, 9, 15, 16, 30, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667032556, 'comment_body': '```suggestion\r\n    if current_exploration.version < change_list_version:\r\n```', 'comment_created': datetime.datetime(2021, 7, 9, 15, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667129849, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 12, 15, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667130222, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 12, 57, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667130286, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 13, 3, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667130386, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667131821, 'comment_body': 'No, because it may be the case when translation is not changed in that state but content containing property is changed. So we can not skip this case.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 15, 50, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667132343, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 16, 48, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667132465, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 17, 1, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667132623, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667132728, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 17, 31, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667132775, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667132799, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667132848, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667132905, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 17, 53, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667133012, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 18, 4, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667133160, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 9, 18, 18, 19, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667389108, 'comment_body': '**Improvment:** Use state object to find the property name for the given content-id instead of relying on id-pattern*', 'comment_created': datetime.datetime(2021, 7, 10, 21, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667389240, 'comment_body': '```suggestion\r\n        for prop_name, identifier_function in property_name_to_content_id_identifier.items():\r\n            if identifier_function(content_id):\r\n                return prop_name\r\n```', 'comment_created': datetime.datetime(2021, 7, 10, 21, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667389589, 'comment_body': '**Improvement:** Duplicate code from ExplorationVersionsDiff, find a way to avoid duplicate code*', 'comment_created': datetime.datetime(2021, 7, 10, 21, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667389791, 'comment_body': 'Use defaultdict(set) for self.changed_properties [I had asked this earlier]', 'comment_created': datetime.datetime(2021, 7, 10, 22, 0, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667390119, 'comment_body': 'Please update the docstring accordingly!', 'comment_created': datetime.datetime(2021, 7, 10, 22, 4, 25, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667390309, 'comment_body': 'Use defaultdict(set)t for self.changed_translations [I had asked this earlier]\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 10, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667390549, 'comment_body': '```suggestion\r\n            state_name = self._get_original_state_name(self, change.state_name)\r\n```\r\n\r\n**Improvement**: The above state_name assignment is done in multiple places, this will help avoid duplicate code + a better function name will explain what we are doing here*', 'comment_created': datetime.datetime(2021, 7, 10, 22, 9, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667390757, 'comment_body': 'Ditto all the nested if-else can be avoid if we use `defaultdict(set)`', 'comment_created': datetime.datetime(2021, 7, 10, 22, 11, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667390806, 'comment_body': 'Remove newline*', 'comment_created': datetime.datetime(2021, 7, 10, 22, 11, 41, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667390830, 'comment_body': 'Remove this comment*', 'comment_created': datetime.datetime(2021, 7, 10, 22, 12, 3, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667390965, 'comment_body': '```suggestion\r\n        if self.added_state_names or self.deleted_state_names:\r\n```', 'comment_created': datetime.datetime(2021, 7, 10, 22, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667391265, 'comment_body': ""Why can't we just use `changes_are_mergeable`?"", 'comment_created': datetime.datetime(2021, 7, 10, 22, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667391325, 'comment_body': '```suggestion\r\n            elif change.cmd == CMD_MARK_WRITTEN_TRANSLATIONS_AS_NEEDING_UPDATE:\r\n```', 'comment_created': datetime.datetime(2021, 7, 10, 22, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667391573, 'comment_body': '```suggestion\r\n                state_name = state_names_of_renamed_states.get(\r\n                    change.state_name) or change.state_name\r\n```\r\n\r\nDItto in all other similar places above*', 'comment_created': datetime.datetime(2021, 7, 10, 22, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667392015, 'comment_body': '**Improvement**: Simplify the usage of `changes_are_mergeable` and `changes_is_mergeable`. Maybe we can remove these flags completely?\r\n\r\n(It would be great if we can do it in this PR!)\r\nI see we can improve the structure of lots of places if we avoid having these variables and use break/continue/return.', 'comment_created': datetime.datetime(2021, 7, 10, 22, 27, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667392273, 'comment_body': '**Improvment**: Have seperate self._check_change_mergable(change) function*\r\n\r\n(If possible do it in this PR!)', 'comment_created': datetime.datetime(2021, 7, 10, 22, 30, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667394888, 'comment_body': '**Improvement:** Find a consistent way to handle conflict properties (I see multiple duplicate structures of if-else case in al the PROPERTIES_CONFLICTING_*)', 'comment_created': datetime.datetime(2021, 7, 10, 23, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667394984, 'comment_body': '**Improvement**: FInd a better and more structural way to handle `CMD_EDIT_STATE_PROPERTY`. (Maybe have separate  StateChangeMergeVerifier in state_domain)', 'comment_created': datetime.datetime(2021, 7, 10, 23, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667395154, 'comment_body': ""Why aren't we having PROPERTY_CONFLICTING_INTERACTION_ID_CHANGE?"", 'comment_created': datetime.datetime(2021, 7, 10, 23, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667395411, 'comment_body': 'As changed_properties is going to be dict(set), use interaction i.e, self.changed_properties[state_name] intersection [\r\nSTATE_PROPERTY_INTERACTION_CUST_ARGS, ...]', 'comment_created': datetime.datetime(2021, 7, 10, 23, 11, 10, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667395859, 'comment_body': 'Can we handle not in the case and break early? (this will help us avoid more branching below this line* and I see this pattern in multiple places)', 'comment_created': datetime.datetime(2021, 7, 10, 23, 16, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667395957, 'comment_body': 'I see this pattern for multiple commands, please create NON_CONFLICTING_PROPERTIES or have change.property_name in [...., ..., ...].', 'comment_created': datetime.datetime(2021, 7, 10, 23, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667396015, 'comment_body': 'Can be removed if we are setting changed_translations to dict(set)? (Ditto in other places)', 'comment_created': datetime.datetime(2021, 7, 10, 23, 20, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667405013, 'comment_body': 'Add docstring for function.', 'comment_created': datetime.datetime(2021, 7, 11, 1, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 667478758, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667478778, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667480763, 'comment_body': 'I added all these properties in PROPERTY_CONFLICTING_INTERACTION_ID_CHANGE.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667480783, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 18, 52, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667480797, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667480822, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 19, 13, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667480838, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 19, 22, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667480883, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 19, 46, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667480939, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 20, 6, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667480950, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667480977, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 20, 20, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667481023, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667481032, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667481050, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667481745, 'comment_body': ""This can not be done for now because we use the default reject technique for every change so suppose if we remove change_is_mergeable and then we'll need to use continue so if we use continue and if the last change is not mergeable then we'll exit the loop and how we'll now whether the last changes was mergeable or not? I'll create an issue for this and we'll improve this in the future versions of this functionality."", 'comment_created': datetime.datetime(2021, 7, 11, 13, 26, 10, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667482182, 'comment_body': ""No, we can not handle not in the case and break early because suppose if the last change is not mergeable and if we continue then the loop will be skipped and we'll never know whether the last change was mergeable or not. We can do this after we change the structure here https://github.com/oppia/oppia/pull/13342#discussion_r667391265"", 'comment_created': datetime.datetime(2021, 7, 11, 13, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667483017, 'comment_body': ""I tried doing this change in this PR only but the problem is that we'll need some extra variables like exp_at_change_list_version and current_exploration for every change and if we'll pass those variables then it will be just the same as is_change_list_mergeable() function, so I didn't change that. Will create an issue."", 'comment_created': datetime.datetime(2021, 7, 11, 13, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667515948, 'comment_body': 'Please user `.get(..) or ...` pattern', 'comment_created': datetime.datetime(2021, 7, 11, 18, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 667522598, 'comment_body': 'Link to the issue: #13373 ', 'comment_created': datetime.datetime(2021, 7, 11, 19, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667522616, 'comment_body': 'Link to the issue: #13373 ', 'comment_created': datetime.datetime(2021, 7, 11, 19, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667522637, 'comment_body': 'Link to the issue: #13373 ', 'comment_created': datetime.datetime(2021, 7, 11, 19, 2, 12, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667522657, 'comment_body': 'Link to the issue: #13373 ', 'comment_created': datetime.datetime(2021, 7, 11, 19, 2, 26, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667522675, 'comment_body': 'Link to the issue: #13373 ', 'comment_created': datetime.datetime(2021, 7, 11, 19, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 667522706, 'comment_body': 'Link to the issue: #13373 ', 'comment_created': datetime.datetime(2021, 7, 11, 19, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 668260191, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 12, 21, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}]","[{'commit_sha': '441e7bee59c48fae7fbaccb867b1007852ac9a23', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2971f257abd0815edaf9655ad60a4e04a095d2dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b443665dd55ccdb465f4cd38f4b43b45e2e6d2c5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e8c5ef43f21405c9084aaaa1769c48ce86d8850', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b4272d6194b699a468ca9f94195b7cda7917b8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '674183f4b108e3f582f08c8b5eb7908f04118d7d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4560290c80103a3f3936d4a219b72c384a2ed2e4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b756dc95ddb1c7d3ead374fd21ad090b0898e8e5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea8f427de565f8508b09b3f7b8983566789b6ed7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e0ad8bc8296466f371e52a0718611037d2bb9ae', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12406c5834808b0355eaa9320a3e2baa22deaa40', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a13bd98251a5b2e4a1d5582a9a68bd7e07693e7b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6da64925d3aa53edde82176af6074f1c33fb276', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c931e7435eae3f647f59071c1969ecd4b7d74e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bdd8949d5988b738fe75efcc9c3da0232dff66c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f23449d57476473a684faa86f83d6de8b955891a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e52c316dbc7416a23d70e14a9c28968bbd71f3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09a6676a321ae7432f734591b1d3bbfe67fe6242', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2df9705fd4ad551a88222e9b9bf543b4d81e58d9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '762bf13f0e574c1f2ed050e07e23bae43e9dc82d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa0598bca1e79eeff84f8ae6e86705917bb134bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58eaa875a5c03455b1bb605275306342d8dff310', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '056d27d093a18428ed56519fccdce1fec269d936', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '441ff7853f315396e9e27542fee4ef9f9c29ead5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9be47fefb4b8c564a01a0aea7e8a4fc8ccb97b8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd12fef95c1711ef62c6b5ef83a9bb136b251c5a1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e720631ec5260d010d6de88f4277ba88765d8c6', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e791ab874c2140d472abdec8c5031b95a39762d7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efeea9fea50fb31554df9b285a8153c629f78d85', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '458c330625b2ab0684610d9503ef25cc5066c20d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b27a1f16a0415cc3b8368025600c5a5deeb81a4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ced0822cc0253bbe6e8a1a5603bf64bc2909f7e8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6afb14779bb91f57673b4ceccb3d856c6ea67abb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a76eb69f33d70753ea0517687a079624877c7da', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03b3aec541d39889e8f1e53bbb3e31e5adb7c020', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a644eab29e97dbefadc66ec2e6e2c741ae316e90', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43950fd2492d1da59ff9a8f0e7cc22e296a8041b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffa7d28e7ece1bad38be648fdb888fe782510f58', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37fef0e55bfbd4110f7f40c27ba502ab7998896d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20d5e46a37f4c6b1d4a163625bb99b4240822dac', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '730444ce9b926ed949a953f25848cb4269ed3254', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff0ade8a50d90dc477cff80ce135d15f0200e188', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d5e9a2211cee301041a9a6519e64310d9f57d84', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ab70f57de0bf2fd62e9775fa17d8730b1ee310c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c5afcd5d64bb5f2f2cd384a0523439524f7d7f0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a721c282a0f29d19c755bdd8df865cf56cb921bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f55d8836a1a384eaafb2e08f4f60df790cceef4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0251e38df1ac9fe00e20bbe2d2d441aad6193cfa', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57b6c59c8f197828cb2ec7cb2c3cf1a795122511', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77fba229560c687f0e1b0943bfd1a4cb318d5e3f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b874a4d774d32e331ecc25c20b605339ec69a803', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f31d144717e4842b519ebfbc995c1a6dd854ceb8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c33db2c9708aaa487d420b23955ca5e74e7cfd81', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83629fece13304e381f60f94e2e714a625b9573d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e2c0d744dc2a6cf6c2708c2a6ee2b39c36f28a4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f3cffe1ca2184bc3f2c4c67dfc2c93ab418132f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '817d5285524d30740414e62b896215c2caf38895', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c240ede246c347d9f06091b74f052b267474f553', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e48860ad178283155de0d6803d950adcfeb3b834', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '781cfe83b06acbf79daa447b22bb60adee6bd6cc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32a1b804d0cffbd5d7977a26636dd88ca1439b73', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b172b44937e7517778d6147dceb36f17923f98f1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '935928aa069fe79602b03ff840fa463dfdce4685', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bf757b826bebdd216945ef89621e2823e950d94', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bce3056cd77e072544809ca9ab5976910f5edf8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9cc2a554319243fa75a3af9dfc7318a6bfbd200', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2aa2c23a100065cc28d6f06d312cfb812abb5968', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8df443536ff2944bd1327000a0116d3612bcd7b5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cc9acf9401c1fcc174bc2fe7139471efd7df38f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fde63548876cc557642dea9e5caf4154df5e8bd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaaa67c600a154f8f6d22e2f6fd222d5f8d511d1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5ca5b94d9f43fae38835d8f4d76ff4a5abce401', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48ede7f991b4ded0e104c63ce2ac042252954e79', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd442269bf3cf27894158036d0f760219bd3701eb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd085b6046c7261bd1983479ea7f2820aad05da24', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56578c43f1c73746f902fdc80658fe69fec09547', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea7fe5e35ff7e96297cdff38159a6eeebf9071fc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41dc5b87c6be3ebc7110bedb9880909ee6776bd9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad8cc7718cd6e355a93a994cb799a399da6c98d2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e93333e396ef201321df06290912ff3fe6335d0d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce818063ebf19e36c93867f48432b13c3b0c8211', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59656274e6ce5de9d25dbb8064e90989cb108778', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24de6a7832c03afe02ac728364129fb9e8135f42', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56d9038060a0b48de3ca5897e8f20b87839285dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '972a75646381282bf1dea1564c0b26771b037f3b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3801b5977bb2919d51d915797f9f028708e2cd64', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc76fd3fed6d3fe384dd15ebc5e3359b6d6b974d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed9fe80e7c49a171502ca94e78bceb00a480b301', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86cc7d906fdc6788782ac1f55a82773600952ff9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82f29b52fa5472cd586f4be1393d16710b675707', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1110dd7715681b1056145f632882b59c68249fb0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '579ca6e691fdd3d35b4fe56b516ffd437d76969e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45f67e90252f40e2864aa78f5d6643b5233ed5b0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '175151e6ac26a541bddc463b1f15e98eac2b016b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dfe0e832e97d4acb8eb974a98d625dc0c076d5c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6838b917e949bd949851068ebb98ec2d3c84bcb1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77aa8635861e492e580882a126d7601123df7dc3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '346e19cf7c99a2410a5fde5eab51b579b32595e9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17f24ca0e3dccb7cd2bc0abe99eeecc7c99da447', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '424b25fd895c082659dddb53c3240fd568382a1c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80c2ad747f05ebf28dd24e633e22e79b0b5d87af', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa1627baf8930724e18643ee193ed67781ea4998', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c08718a1e2bd3df6cb629139024fe9ed820c398', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0ad844a98b8259b407c100e6ce851c20a7ee818', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f929b6a0978bdca8dc9b80c645dcffa0edd8cb7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd6ab2dac5c949c22516497842f1edd036674705', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22a916f25f16f9a1915479edda98d1af242a98b7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0de33276dddbcdeed4b6ae7a6800ecfe78220792', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44dbcedf936f9dbd724f3ab74b86fd9dadc3ec8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4657926426fe33baee48cf66ccb94c510d7feaa8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76005da56cf6892a1e3828a8debf941a7436c49a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fae1843285fa6e9c92ec2958b02ff24231d7b399', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0db303a12e9a6173a15f575e23d7a80718751187', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8a824cda8cc4d2fea4b4db73b742aa07bc75c8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '575b5a7d4cc3b43cbf67198f2caa3b000f04cbdd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '604cd8fa7f2a96b9aaf8e50de68ea9c57aec9f2b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a295e3c4186790f53fc6795a486713ce92b1de78', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8446c1751d1482ac569c010b5c10ea1a52a640d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88052ac4d361ab9de9074f3aaa1faa2d9ab2a1e4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4966098d2b44b7b771a3c1699c85a47df88249b9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57942e6595350744acd6d0bd218239bb3f49e666', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2de1c8229da89724f9ee2647dec53036b6d7b48e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b7b62add4026de29b3454b13fcf3f2604207130', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd4a69eb6d76aa0c76cf1bdc7ff6c23d542d887e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '510b6eacdbe4987b965688b3414f58f5323b3e19', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55556e4552783bb8649d4b1cffa01189b78fe45f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7181a814319034b15a64d73e2c763e437e71911a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6bc2e1cf8c42ff8b49cab7b92d24d5a88816e2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de44016d59d84c88bfd7f20d4590bdba2d700ed4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b4691b1714df0001b30003b306e78d9db8b02fd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf28529d1073a8cacc0e194b88d14136ed3e75cf', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}]",Aryaman Gupta,56637531,guptaaryaman22@gmail.com,User,,30,,10,67
691112184,Components and modals on the exploration editor page will be preloaded. [Milestone2.1],"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR is for [Improve exploration save flow project.](https://docs.google.com/document/d/1Wu2ZKAEhUdi95P3zwiji4PYPsMdlQeRGMBu8IGxY3eY/edit?usp=sharing) [Milestone 2.1].
2. This PR does the following: This PR preloads the components and modals needed in the exploration editor so that they can be opened even if we are offline.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
No proof of changes needed because it's not adding any functionality or changing any functionality.
<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13407,https://api.github.com/repos/oppia/oppia/pulls/13407,https://github.com/oppia/oppia/pull/13407,closed,268,240,55,24,12,2,0,3,[],2021-07-16 00:28:17+00:00,2021-07-23 15:37:20+00:00,659343.0,"7 days, 15:09:03","[{'comment_id': 671749758, 'comment_body': '@vojtechjelinek Can you PTAL at this along with the code owner files.\r\nHere I am preloading the thumbnails of the rte-components in CKEditor so that when we open the CKEditor while being offline, these images can be rendered. The problem with this is that these images are in png format only and as I am preloading these in the exploration-editor-mainpage.html, [this lighthouse test is failing ](https://github.com/oppia/oppia/pull/13407/checks?check_run_id=3089509442) showing this error:\r\n![image](https://user-images.githubusercontent.com/56637531/126050209-b07bfa68-7c30-4b7a-a336-ce00f61d5cf3.png)\r\nI am not sure what count 3 indicates here as the images I am preloading are more than 3.\r\n\r\nI tried solving this error by using the webp image format but for that the only possible way is to check using the javascript whether the browser supports webp, if yes then preload webp otherwise preload png format images. It would be similar to [this.](https://stackoverflow.com/questions/66857139/webp-jpg-preloading-only-the-needed-type-in-a-html-file). But this method does not seem ideal. \r\nSo is it fine to skip the check for these specific images? And also these images are loaded and used in png format only at present.\r\n\r\n/cc @kevintab95 ', 'comment_created': datetime.datetime(2021, 7, 17, 22, 14, 14, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 672265431, 'comment_body': 'Replied to this through email.', 'comment_created': datetime.datetime(2021, 7, 19, 12, 47, 39, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}]","[{'commit_sha': '441e7bee59c48fae7fbaccb867b1007852ac9a23', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2971f257abd0815edaf9655ad60a4e04a095d2dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '038fbd1bfd5a890125a5efec7d7580fa1cb44063', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '462fffcc0b74baa3ee0403a2c8bbab2e069317cc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0648d545246c47080b3a5f8c527f7bde2f1ac4cd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '473241a91d4e88d693c4d7b434efb3c9046bc30e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95516e1b96825cdb9a476ad2ac2c7b51c20a0fd8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc2117745a7e1909dfde902941fb9c9bfbf08d09', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6c71fdde4f294d2badbf21fcbf3c1d770ba6b56', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '177256b34195908a88757261fc6edd2d6dc8d391', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd68ab7bcf1c7734291dcb971a8f5e3dbc46bea4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eead94e3bdf2f1a95c7ef33a3cd6b78cdc12cb96', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea262c80ca79aa27bb1fd40b3e9ed355e1123246', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '698e0ac9d40a19d93248ee90f814fcc68f51adc3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11d6920155d522c75b4e6d79f725da225710fbbe', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9ab751571fd9964a0699ad8c9ef028f3fff85b7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc24d87d0a65bc2a3ed231502b86957cf61d8bc8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c21db6634330b6773f1fc3dfd7a295ec5368947a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ec51e3112c25472a44c953420325d8ed1e7e0e9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b911dcc43fdcd232ace3a046b6bdb3f0bca4644', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67d87428dc8ed65aee781327da71e7479822b013', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd72d41ae874821a9251840a21b8e1f5bc14372b5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b301ddb8d194c7f176c38eef4aed90cb5ffc52be', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90d8a61208601350bb6d9580e42d3b92c2ad8bd7', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}]",Aryaman Gupta,56637531,guptaaryaman22@gmail.com,User,,30,,10,67
700962584,Enabling editor tab to work offline and save changes when there is reliable network source. ,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR is for GSoC Project [Improve exploration save flow project](https://docs.google.com/document/d/1Wu2ZKAEhUdi95P3zwiji4PYPsMdlQeRGMBu8IGxY3eY/edit?usp=sharing). [Milestone 2.2&2.3].
2. This PR does the following: This PR enables the feature for the creators to work and save their progress in case of flaky connection or no connection.
3. Here I ran the fe test suit multiple times to check for flake. https://github.com/atpug22/oppia/pull/11/checks?check_run_id=3273179902

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

https://user-images.githubusercontent.com/56637531/127783228-e2a1defc-f8a3-4814-998a-1a52f673ca84.mov


<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13544,https://api.github.com/repos/oppia/oppia/pulls/13544,https://github.com/oppia/oppia/pull/13544,closed,678,53,23,63,32,189,1,1,[{'name': 'PR: LGTM'}],2021-08-01 18:45:31+00:00,2021-08-12 00:35:37+00:00,885006.0,"10 days, 5:50:06","[{'comment_id': 680551094, 'comment_body': 'Why are we skipping the mypy check here?', 'comment_created': datetime.datetime(2021, 8, 1, 18, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680551132, 'comment_body': 'This description is unclear.', 'comment_created': datetime.datetime(2021, 8, 1, 18, 55, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680551532, 'comment_body': 'Not sure about the terminology here, is it an observer or an observable?', 'comment_created': datetime.datetime(2021, 8, 1, 18, 58, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680551614, 'comment_body': 'Why not just use this inline?\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 1, 18, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680551934, 'comment_body': 'Please add a detailed docstring for this method. Ditto for other methods in this service.\r\n\r\nAlso, please comments as necessary in this method to explain how it works.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680552045, 'comment_body': 'It checks the networks state too, right?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680552085, 'comment_body': 'Why is this required?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 3, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680552317, 'comment_body': 'Sorry, I don\'t understand what ""heartbeat system"" means here. Please explain.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 4, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680552613, 'comment_body': '""stateChange"" part can be a bit confusing in the context of an exploration. Can we change this to be more specific about what ""state"" in this context means please? ', 'comment_created': datetime.datetime(2021, 8, 1, 19, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680553055, 'comment_body': 'This seems a bit odd.. when offline, why are we ""enabling"" icons. Did you mean disable certain icons? Or perhaps the ""status"" refers to the previous state of connection?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680553129, 'comment_body': '""status"" is too generic in this context. Can we have better naming for this?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 11, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680553178, 'comment_body': ""Also, could we use named constants for 'OFFLINE' and 'ONLINE'?"", 'comment_created': datetime.datetime(2021, 8, 1, 19, 11, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680553507, 'comment_body': 'Is this check required if the previous check is for \'OFFLINE\'? Can ""status"" take other values too?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 14, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680553611, 'comment_body': 'Please avoid skipping checks. This string can be broken into multiple lines.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 15, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680553739, 'comment_body': 'Also, here and below, I am not sure if we allow new jQuery methods to manipulate the DOM... Is there an alternative?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 16, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680553868, 'comment_body': 'Please undo.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680553913, 'comment_body': 'Are these added in the correct sorted order for imports?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680554041, 'comment_body': 'while being -> when', 'comment_created': datetime.datetime(2021, 8, 1, 19, 19, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680554271, 'comment_body': ""Unclear what 'status' refers to here."", 'comment_created': datetime.datetime(2021, 8, 1, 19, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680554326, 'comment_body': 'Please use a named constant for strings like this.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 22, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680554447, 'comment_body': 'Please avoid using jQuery DOM manipulation here and below. We should have existing ways to enable/disable the publish buttons, please use that.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 23, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680554484, 'comment_body': 'Use a named constant.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680554508, 'comment_body': 'Avoid skipping lint checks.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680554513, 'comment_body': 'Use a constant for `5000`.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680554595, 'comment_body': 'What are `tempChanges`? Also, we can use full English words when possible.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680554873, 'comment_body': ""```suggestion\r\n      let {hasNetworkConnection, hasInternetAccess} = currentState;\r\n```\r\n\r\nI don't see `this.hasNetworkConnection` and `this.hasInternetAccess` used anywhere else.\r\n"", 'comment_created': datetime.datetime(2021, 8, 1, 19, 28, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680555539, 'comment_body': 'Is this testing the network state or internet state?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 34, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680555550, 'comment_body': 'Ditto: what is state here?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680555806, 'comment_body': ""```suggestion\r\n  it('should report internet status as online when internet is available', fakeAsync(() => {\r\n```"", 'comment_created': datetime.datetime(2021, 8, 1, 19, 36, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680555857, 'comment_body': 'Ditto: test description.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 36, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680556006, 'comment_body': 'Can you please add inline comments here to describe the test steps please so that it is clearer?', 'comment_created': datetime.datetime(2021, 8, 1, 19, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680556386, 'comment_body': 'Would `req.flush(..)` work here? If so we can delete L128-129.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680556667, 'comment_body': 'Here and else where please use named constants.', 'comment_created': datetime.datetime(2021, 8, 1, 19, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 680896196, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 34, 44, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680899202, 'comment_body': 'No ```req.flush(..)``` was not working here. It showed that canceled requests can not be flushed.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680899283, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680899406, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 40, 12, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680899507, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680900885, 'comment_body': 'Changed the description.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680901046, 'comment_body': 'network state. Changed the description.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 42, 55, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680901118, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680901545, 'comment_body': 'changed the variable to ```temporaryListOfChanges``` and also added a comment to explain it.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680901618, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 43, 56, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680901669, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 44, 1, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680901711, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 44, 5, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680901769, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 44, 13, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680901837, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 44, 18, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680903140, 'comment_body': 'changed it to ```connectionStatus```.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680903222, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 2, 11, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680903319, 'comment_body': 'Changed the order.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680903387, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680904337, 'comment_body': ""Removed skipping checks comment. Also for the ckeditor we don't have pre defined component template so here we'll need to use jquery to disable using class name."", 'comment_created': datetime.datetime(2021, 8, 2, 11, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680907362, 'comment_body': 'No, but as we send requests continuously the emitter will emit offline event again and again periodically, therefore we need this check to ensure that we are applying changes only when we get the first offline event and not after emit.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 53, 51, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680907452, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680907784, 'comment_body': 'this check is for the previous state of the connection.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 54, 34, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680908111, 'comment_body': 'Changed it to ```_connectionStateChangeEventEmitter```.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680908250, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 8, 2, 11, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680911409, 'comment_body': ""I used this because if we are using httpclient then we should name the file as backend api service but that name does not suit this service that's why used this check. This check is used in two more places. So still should I rename it?"", 'comment_created': datetime.datetime(2021, 8, 2, 12, 0, 53, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680911552, 'comment_body': 'yes, Changed it.', 'comment_created': datetime.datetime(2021, 8, 2, 12, 1, 3, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680911633, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 2, 12, 1, 7, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680911757, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 2, 12, 1, 20, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680911837, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 8, 2, 12, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680912009, 'comment_body': 'Changed it. Should be observable.', 'comment_created': datetime.datetime(2021, 8, 2, 12, 1, 46, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 680913102, 'comment_body': 'Is this a skip comment. I am not much aware of mypy checks and therefore copied this from the similar functions used later in the file.', 'comment_created': datetime.datetime(2021, 8, 2, 12, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 681349477, 'comment_body': '```suggestion\r\n/core/templates/services/connection-service.service*.ts @srijanreddy98\r\n\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 0, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681464952, 'comment_body': 'Please do add the schema for the handler. You can use this [wiki](https://github.com/oppia/oppia/wiki/Writing-schema-for-handler-args) to add the schema. Thanks.', 'comment_created': datetime.datetime(2021, 8, 3, 6, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rohitkatlaa', 'type': 'User'}, {'comment_id': 681469590, 'comment_body': 'Are these async? Or do they hold up the website?', 'comment_created': datetime.datetime(2021, 8, 3, 6, 25, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 681469737, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 8, 3, 6, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 681587104, 'comment_body': 'These functions should be async. They should not hold up the website. But I guess they are holding up the website because all the e2e tests are failing with an error scripts timeout. As this is my first time writing such async functions in angular, so I am not much aware. I will look into this.', 'comment_created': datetime.datetime(2021, 8, 3, 9, 19, 6, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 681638146, 'comment_body': 'This handler does not require the schema. This handler is similar to ```FrontendErrorHandler```  and handles only a single get request to check that server is connected to the frontend. I added this handler to ```HANDLER_CLASS_NAMES_WHICH_DO_NOT_REQUIRE_SCHEMAS```.', 'comment_created': datetime.datetime(2021, 8, 3, 10, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 681919521, 'comment_body': 'Now I have added ```ngZone.runOutsideAngular``` inside this function covering the timer so now it will not hold up the website and the timer will be async.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 28, 14, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 681920004, 'comment_body': 'This does not hold up the website and gets called only when the network connection changes.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 681936889, 'comment_body': 'Thank you for the clarification.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rohitkatlaa', 'type': 'User'}, {'comment_id': 682524919, 'comment_body': 'Thanks for confirming... This sounds good!', 'comment_created': datetime.datetime(2021, 8, 4, 11, 22, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 682905891, 'comment_body': 'Hey, can you not use jquery here but instead use an ElementRef using ViewChild decorator. The issue with jquery is that it queries all elements in the dom with the class name and performs the changes to all of them.\r\n\r\nThis becomes an issue when you have two rte editors on a single page and they keep updating each other.\r\n\r\nThis comment applies for `.cke_inner`, not sure for `#offline-warning`', 'comment_created': datetime.datetime(2021, 8, 4, 19, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 682906217, 'comment_body': 'ditto here', 'comment_created': datetime.datetime(2021, 8, 4, 19, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 682911286, 'comment_body': 'In such a case, you are expected to create an additional `connection-backend-api.service.ts` which only handles HTTP requests and returns promises which can be used in this service. Eg. `admin-backend-api.service.ts` and `admin-data.service.ts`.', 'comment_created': datetime.datetime(2021, 8, 4, 19, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 682912588, 'comment_body': 'Not required, `UpgradedServices.ts` is a stale file in the frontend. It is not used anywhere (not sure). So, no need to make changes to this file (very sure).', 'comment_created': datetime.datetime(2021, 8, 4, 19, 50, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 682919005, 'comment_body': "">> This handler does not require the schema. This handler is similar to FrontendErrorHandler and handles only a single get request to check that server is connected to the frontend. I added this handler to HANDLER_CLASS_NAMES_WHICH_DO_NOT_REQUIRE_SCHEMAS.\r\n\r\nDoesn't feel like a sufficient explanation. I think schema validation can be done.\r\n```\r\n    URL_PATH_ARGS_SCHEMAS = {}\r\n    HANDLER_ARGS_SCHEMAS = {\r\n        'GET': {}\r\n    }\r\n```\r\n\r\n"", 'comment_created': datetime.datetime(2021, 8, 4, 20, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 682922680, 'comment_body': 'If they are going to be private, please use `_` prefix for names.', 'comment_created': datetime.datetime(2021, 8, 4, 20, 7, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 682986492, 'comment_body': 'I think so, but if this is a standard practice I am fine with using it here. Perhaps @hardikkat24 can confirm the expected pattern here.', 'comment_created': datetime.datetime(2021, 8, 4, 21, 55, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 682987940, 'comment_body': '```suggestion\r\n      let { hasNetworkConnection, hasInternetAccess } = currentState;\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 21, 58, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 682993740, 'comment_body': 'Actually, I think a minor correction might be sufficient.  \r\n`    """"""Returns whether the client is connected to the Internet.""""""`', 'comment_created': datetime.datetime(2021, 8, 4, 22, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 682994570, 'comment_body': 'nit:\r\n```suggestion\r\n * @fileoverview Service to check for the network & Internet connection.\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 22, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 682996961, 'comment_body': '```suggestion\r\n  // object\'s ""ononline"" / ""onoffline"" events.\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 22, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 683161103, 'comment_body': '@atpug22 is this comment resolved? [Also, in general, leave it for the reviewer to mark resolve!)', 'comment_created': datetime.datetime(2021, 8, 5, 6, 20, 54, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683161480, 'comment_body': 'Why is there two consecutive ""service"" in the filename? I have less context of the usage of this service, can we rename it to connection-status.service.ts or internet-connectivity.service.ts? ', 'comment_created': datetime.datetime(2021, 8, 5, 6, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683162536, 'comment_body': 'We are not expecting to add new items to this list!\r\n\r\n/cc @rohitkatlaa @vojtechjelinek (as codeowner)', 'comment_created': datetime.datetime(2021, 8, 5, 6, 24, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683168387, 'comment_body': '@kevintab95 It is fine to use ignore:[no-untyped-call]. It means that the function we are calling has not been type annotated yet. As our codebase is not fully type annotated, this is acceptable. Thanks!!', 'comment_created': datetime.datetime(2021, 8, 5, 6, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'hardikkat24', 'type': 'User'}, {'comment_id': 683170697, 'comment_body': ""I'm finding it difficult to read so many nested if-else, can we write it cleaner?\r\nSome suggestions:\r\n1. Why not the connectionService handles the current status of the connection? that way we will just have: \r\n\r\n```\r\nthis.connectionStatus = currentStatus;\r\nif connectionService.isOnline():\r\n    this.enableRTEicons();\r\nelse:\r\n    this.disableRTEicons();\r\n```\r\nAlso, if we are going to have this structure^, do we need the `this.connectionStatus` in this component? (we can use connectionService.isOnline() wherever needed)\r\n\r\nAlso, can we add `this.connectionService.onStateChange` in the CkEditorInitializerService around line 89 and use editor.widget.addClass(`disabled-component-icon`) if the connection is offline?  Let me know if you need any help? (I think this will help you remove all the jquery and organize the structure in a way such that while adding new rte_compoenent developers have to define whether the component works offline or not!)\r\n\r\n"", 'comment_created': datetime.datetime(2021, 8, 5, 6, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683172206, 'comment_body': 'Is there any specific reason for not doing it right now instead of creating TODO?', 'comment_created': datetime.datetime(2021, 8, 5, 6, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683174929, 'comment_body': '`disableOnOfflineNames` this have two issues:\r\n1. Variable name starting with a verb (So it sounds like a function).\r\n2. Does not explain that it stores component names.\r\n\r\nI believe this component is independent/unaware of these external rte_comonents names, can we define whether the component works offline or not in `assets/rich_text_components_definitions.ts`?', 'comment_created': datetime.datetime(2021, 8, 5, 6, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683189876, 'comment_body': 'use snake_case*', 'comment_created': datetime.datetime(2021, 8, 5, 7, 14, 27, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683194044, 'comment_body': ""```suggestion\r\n        r'/internetconnectivityhandler', InternetConnectivityHandler),\r\n```"", 'comment_created': datetime.datetime(2021, 8, 5, 7, 20, 53, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683195877, 'comment_body': 'Do not start the name for the property with a verb, maybe `connectedToNetwork & internetAccessible`', 'comment_created': datetime.datetime(2021, 8, 5, 7, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683197076, 'comment_body': 'is this the `windowRef`?', 'comment_created': datetime.datetime(2021, 8, 5, 7, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683198560, 'comment_body': 'Should we pass the copy of `this.currentState`? (ditto below)', 'comment_created': datetime.datetime(2021, 8, 5, 7, 27, 45, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683199490, 'comment_body': 'unused `result`?', 'comment_created': datetime.datetime(2021, 8, 5, 7, 29, 3, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683203486, 'comment_body': ""Any specific reason for having two public functions for checkInternet and checkNetwork? (I'm expecting both to be checkers to start to do a full internet connection check, right? I'm fine with having these two private functions but there should only be one public function to enable these checks, right?)"", 'comment_created': datetime.datetime(2021, 8, 5, 7, 34, 46, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683203803, 'comment_body': '```suggestion\r\n  private currentConectionState: ConnectionState = {\r\n```', 'comment_created': datetime.datetime(2021, 8, 5, 7, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 683406327, 'comment_body': 'Yes, @atpug22  why is this added?', 'comment_created': datetime.datetime(2021, 8, 5, 12, 29, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 683412890, 'comment_body': ""After reading first two lines of this section https://github.com/oppia/oppia/wiki/Writing-schema-for-handler-args#introduction, I thought we write schema for the handlers of domain layer, and this handler was in main.py only to check whether server receives request or not and other similar handlers like Frontend error handler too doesn't have schema so I added the handler in this section. But if it is needed then I'll add the schema. @vojtechjelinek "", 'comment_created': datetime.datetime(2021, 8, 5, 12, 38, 52, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683421374, 'comment_body': ""Hmm, I'm not sure what the plan for handlers in main.py is but if it is easy to add a schema for this one, please just add it. I have also modified the wiki."", 'comment_created': datetime.datetime(2021, 8, 5, 12, 50, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 683810791, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683811159, 'comment_body': ""It actually collects the promise from the HTTP request but since we don't want to use it so left it unused."", 'comment_created': datetime.datetime(2021, 8, 5, 21, 52, 55, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683811239, 'comment_body': 'Changed this.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 53, 4, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683811330, 'comment_body': 'Changed it.\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 21, 53, 17, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683811397, 'comment_body': 'changed it.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 53, 28, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683811594, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 53, 52, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683811660, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 54, 2, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683811709, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 54, 6, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683811799, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683811870, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 54, 26, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683811911, 'comment_body': 'Removed it.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 54, 32, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683812042, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 54, 48, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 683812735, 'comment_body': 'As for now we can not remove the jquery for ```.cke_button_oppia``` because these classes and tags including these classes are added dynamically in the template. There is no such predefined template for ckeditor.', 'comment_created': datetime.datetime(2021, 8, 5, 21, 56, 20, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 684512385, 'comment_body': 'Changed it.', 'comment_created': datetime.datetime(2021, 8, 6, 21, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 684512446, 'comment_body': 'Discussed offline.', 'comment_created': datetime.datetime(2021, 8, 6, 21, 28, 5, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 684512466, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 6, 21, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 684512535, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 6, 21, 28, 21, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 684648682, 'comment_body': 'Maybe `componentsThatRequireInternet`?', 'comment_created': datetime.datetime(2021, 8, 7, 15, 58, 5, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 684648687, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 8, 7, 15, 58, 21, tzinfo=datetime.timezone.utc), 'commenter': 'aks681', 'type': 'User'}, {'comment_id': 684649503, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 7, 16, 6, 26, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 684649507, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 7, 16, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 684658734, 'comment_body': 'You can, using elementRef with ViewChild decorators can cover the dynamically added elements too.\r\nYou can take help from this: https://github.com/ashutoshc8101/oppia/commit/2f050a9cf15a99bc00e375fc572239cc97e6f2ff', 'comment_created': datetime.datetime(2021, 8, 7, 17, 35, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 684684429, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 7, 22, 26, 6, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 684684503, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 7, 22, 27, 7, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685151159, 'comment_body': 'Not sure about the discussion points, can you please leave a comment with discussion points?', 'comment_created': datetime.datetime(2021, 8, 9, 12, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685153970, 'comment_body': ""This looks too bad (accessing so many nested children and creating a simple text dom this way, why can't we do it directly in the component template?)"", 'comment_created': datetime.datetime(2021, 8, 9, 12, 36, 5, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685154728, 'comment_body': 'I had suggested changing the name of the file, right? (`service. service` looks unexpected!)', 'comment_created': datetime.datetime(2021, 8, 9, 12, 37, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685155381, 'comment_body': 'I actually changed it now and removed the use of JQuery so now we not creating a TODO.', 'comment_created': datetime.datetime(2021, 8, 9, 12, 38, 17, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685157354, 'comment_body': 'why this change?', 'comment_created': datetime.datetime(2021, 8, 9, 12, 41, 15, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685157823, 'comment_body': 'is this comment resolved?', 'comment_created': datetime.datetime(2021, 8, 9, 12, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685159030, 'comment_body': 'Agree with @ashutoshc8101 ! If this service does more than https call then have a separate file which only makes HTTP call and leave this as-is! @atpug22 is this comment resolved?', 'comment_created': datetime.datetime(2021, 8, 9, 12, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685159940, 'comment_body': 'IIRC, I had suggested to change the filename!', 'comment_created': datetime.datetime(2021, 8, 9, 12, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685161252, 'comment_body': '```suggestion\r\n        if (internetAccessible && this.temporaryListOfChanges.length > 0) {\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 12, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685165180, 'comment_body': '```suggestion\r\n    if (!this.connectionService.isOnline()) {\r\n      this.temporaryListOfChanges.push(changeDict);\r\n      return;\r\n    }\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 12, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685168499, 'comment_body': 'addChange Internally checks `isOnlne` so do we need the above check? Also, do we need `.length` check?', 'comment_created': datetime.datetime(2021, 8, 9, 12, 56, 58, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685169989, 'comment_body': ""don't start a variable nmae with verb `is`, maybe connectedToInternet or something around that?"", 'comment_created': datetime.datetime(2021, 8, 9, 12, 58, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685170872, 'comment_body': '```suggestion\r\n            \r\n              $scope.isOffline = !internetAccessible;\r\n              $scope.$applyAsync();\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 13, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685171170, 'comment_body': 'Add a newline above*', 'comment_created': datetime.datetime(2021, 8, 9, 13, 0, 40, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685172463, 'comment_body': 'Should we show a tooltip explaining why this button is disabled?', 'comment_created': datetime.datetime(2021, 8, 9, 13, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685172794, 'comment_body': 'Ditto*', 'comment_created': datetime.datetime(2021, 8, 9, 13, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685173229, 'comment_body': 'why this change?', 'comment_created': datetime.datetime(2021, 8, 9, 13, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685173344, 'comment_body': 'Ditto*', 'comment_created': datetime.datetime(2021, 8, 9, 13, 3, 49, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685174838, 'comment_body': 'Add a newline above*', 'comment_created': datetime.datetime(2021, 8, 9, 13, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685175394, 'comment_body': 'ANy specific reason for these changes?', 'comment_created': datetime.datetime(2021, 8, 9, 13, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685177351, 'comment_body': '@atpug22 is this comment resolved?', 'comment_created': datetime.datetime(2021, 8, 9, 13, 9, 15, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685503254, 'comment_body': 'This require actually pre-push the template in the form of string so the modals can be rendered easily while being offline. This preloads the template.', 'comment_created': datetime.datetime(2021, 8, 9, 20, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685548034, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 9, 21, 55, 52, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685548114, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 9, 21, 56, 2, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685548720, 'comment_body': 'This preloads the thumbnail which appears when any interaction is added. I forgot to add this image in my previous PR so I added it now.', 'comment_created': datetime.datetime(2021, 8, 9, 21, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685548970, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 9, 21, 57, 51, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685552038, 'comment_body': 'The place where we are adding the text is created dynamically when the component is loaded. Therefore I have added like this. \r\nAnd if we add it in some other place in the component template then it looks very weird. \r\nSo I discussed with @kevintab95, and we finalized what we do now. \r\n\r\nIn the place where I have added it\r\n![image](https://user-images.githubusercontent.com/56637531/128780155-c6cf70f2-6968-46a2-b5fb-b115e38bb3b3.png)\r\n\r\nIn the component template\r\n![image](https://user-images.githubusercontent.com/56637531/128780012-05862c35-95e3-440c-a85a-0fabe47afc18.png)\r\n', 'comment_created': datetime.datetime(2021, 8, 9, 22, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685552525, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685552580, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685552814, 'comment_body': 'Removed it as it was needed before but not now.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685553071, 'comment_body': 'Removed it as it was needed before but not now.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 6, 50, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685553167, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 7, 7, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685553265, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685553341, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685554144, 'comment_body': ""This file's main function is to send the request and check for internet connection and for that also if we are creating separate file then I don't think a need of two separate files. Maybe we can skip this check for this file only. What do you think?"", 'comment_created': datetime.datetime(2021, 8, 9, 22, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685554320, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685554360, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 9, 28, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685829852, 'comment_body': '@atpug22 is this resolved?', 'comment_created': datetime.datetime(2021, 8, 10, 8, 59, 4, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685830046, 'comment_body': '@atpug22 is this thread resolved?', 'comment_created': datetime.datetime(2021, 8, 10, 8, 59, 18, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685832841, 'comment_body': 'I see, thanks for the explanation!', 'comment_created': datetime.datetime(2021, 8, 10, 9, 2, 55, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685834444, 'comment_body': 'Do we need all these spyon here?', 'comment_created': datetime.datetime(2021, 8, 10, 9, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685834997, 'comment_body': 'WHy do we need this spyOn here?', 'comment_created': datetime.datetime(2021, 8, 10, 9, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685836211, 'comment_body': 'Yes', 'comment_created': datetime.datetime(2021, 8, 10, 9, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685836569, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2021, 8, 10, 9, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685837971, 'comment_body': 'Yes we need this check because what addChange function gets called only when someone makes some changes. What if someone has already made changes when offline and then they were reconnected. Then we need to make calls to push the existing changes.', 'comment_created': datetime.datetime(2021, 8, 10, 9, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685838133, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 9, 10, 3, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685838660, 'comment_body': 'Yes. ', 'comment_created': datetime.datetime(2021, 8, 10, 9, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685840098, 'comment_body': 'Yes, Inorder to spy all the other services going to run when we call this init function.', 'comment_created': datetime.datetime(2021, 8, 10, 9, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 685908193, 'comment_body': 'As startCheckingConnection is a periodic timer so we need this spyon to catch that timer in fakyAsync functions.', 'comment_created': datetime.datetime(2021, 8, 10, 10, 51, 23, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 686190089, 'comment_body': 'I would suggest these (following our existing structure)):\r\n1. Have server-connection-backend-api.service.ts [We have backend API service for all HTTP requests]\r\n2. Have internet-connectivity.service.ts [To handle all the logics to running timer, having isOnline function, using server-connection-backend-api.service, having observables, etc.]\r\n\r\nIn general, we are not expected to use the bypass flag!', 'comment_created': datetime.datetime(2021, 8, 10, 17, 43, 20, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 686225766, 'comment_body': ""![image](https://user-images.githubusercontent.com/24855641/128915477-76399a81-86d9-4386-8b05-ab7f1eb00a93.png)\r\n\r\nThe element you are targetting has an id `cke_editor1`\r\n\r\nI guess\r\n```typescript\r\nthis.elementRef.nativeElement.querySelector('#cke_editor1')\r\n\r\n```\r\n\r\nshould work.\r\n\r\n@atpug22 @kevintab95 @DubeySandeep PTAL\r\n"", 'comment_created': datetime.datetime(2021, 8, 10, 18, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 686234386, 'comment_body': ""@ashutoshc8101 But it's not always #cke_editor1. For second ckeditor on same page it is #cke_editor2 and more."", 'comment_created': datetime.datetime(2021, 8, 10, 18, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 686246295, 'comment_body': '@ashutoshc8101 @srijanreddy98 Can you confirm that is it fine to use nativeElement here?', 'comment_created': datetime.datetime(2021, 8, 10, 19, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 686247965, 'comment_body': 'What about classes `cke`, `cke_reset_all`, `cke_shared` and `cke_detached`.\r\n\r\nI guess class `cke` will fit best.\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 10, 19, 7, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 686249084, 'comment_body': '> Can you confirm that is it fine to use nativeElement here?\r\n\r\nNot sure if this is the recommended approach but can be used in this scenario.\r\n@srijanreddy98, Please confirm.', 'comment_created': datetime.datetime(2021, 8, 10, 19, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ashutoshc8101', 'type': 'User'}, {'comment_id': 686390370, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 23, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 687027903, 'comment_body': '```suggestion\r\n    <span class=""oppia-cke-offline-warning"" *ngIf=""!connectedToInternet"">* Tools with dark background can not be used when offline.</span>\r\n```\r\n\r\nSpecifying that this is oppia-specific class*', 'comment_created': datetime.datetime(2021, 8, 11, 17, 19, 35, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 687027980, 'comment_body': 'this.connectedToInternet = internetAccessible;', 'comment_created': datetime.datetime(2021, 8, 11, 17, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 687030467, 'comment_body': 'Why do we need to this check here and setting these values?', 'comment_created': datetime.datetime(2021, 8, 11, 17, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 687092495, 'comment_body': ""This check is run when CKEditor is initialized. If we'll not check this then it will always take default values. "", 'comment_created': datetime.datetime(2021, 8, 11, 18, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 687111541, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 19, 25, 8, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 687111595, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 19, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}]","[{'commit_sha': '441e7bee59c48fae7fbaccb867b1007852ac9a23', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2971f257abd0815edaf9655ad60a4e04a095d2dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '038fbd1bfd5a890125a5efec7d7580fa1cb44063', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '462fffcc0b74baa3ee0403a2c8bbab2e069317cc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0648d545246c47080b3a5f8c527f7bde2f1ac4cd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '473241a91d4e88d693c4d7b434efb3c9046bc30e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95516e1b96825cdb9a476ad2ac2c7b51c20a0fd8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa70cc68ad29c8385f4638fdac3560816f785190', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '399b0b7991b8e0e749b65e1a0afbc582d092b554', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b82a1b2d05f48077fa8f5ea856ba66393223f6a3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6b6a37fac2c8f596efcbd88f3f9c204a8cc2c36', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55e1fb908c258423de6c4c82d7dfa5466ead56eb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4af033fc1d4657dcd3b222dc89258a862831e077', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '201fc6b80d580553a6404ea718ff6fcc04f4e56e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43799d6911c5e6775a94c129597866500a283c8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f400b1321b795f3f1c309383832e41b84e77a26', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfa9262141998b5b9b30bb917ee567a67a6cc242', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83b733f5d2905b5febbffe5b60d9c6f2d00696ad', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba74340d53cf3a44db434b83d866f8a7e272c7da', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa86f7ddcbfc312a1224504d10d7554def3afd4c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '275c519309104069bac55d3ac8640ffdbdd724f6', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b61a8f606e4df7aae1a867de7c8cd380d28f999', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7478537de2c3b294d54183e94b675546a2ed3c71', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6afaa8a4c3b233bf8c7394bf56c071e2770e68d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37c2b3c642281dbc8d6acb7ebcadf4cbc9630f1a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b796977d5802758a39af24dd209945e8454d8237', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdc549781effd8551327a9161a1e34d720aff8fc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb41da2acc9c16bbdef5ffef2feb1c63586a15e4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00ca7a594dee755586f274cbcac779bc0f0d2ad5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f01cb9cff7f9cf34ba21d4da73c1eea4a5d96e3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb074da8c492039a80a1812740f2f6f5f73367fd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae1137e59f56b0d3661dc60fe438c37c1b204666', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82a0490583b31826ed7a82dd1a918cd658b548f9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec7f89251ca7664a3fd9059b5b7d970414e55b3e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd14a7272b41eb766adcb6c427740e2867861ac43', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf600933ca762db914d056e5a45327fcfa8092dc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da711992ccc57e9289531f0914bb98dc7456d7be', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '342ffb119dbf7effaf86747469f7ee5b09e48b4c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3a320728c366a646f056e4bcb934831de5049d2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36b315b00eae84bdf5b4435bc3f3b28e8eedf2f9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1c47fbfab6d81fd07bec7c12552116f53a58846', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '418d574c44d8bc64269eeb284e50fd861f6a3d8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48df4797a383028675eed65e1d6aa6cb224d44aa', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0a5884fb3d4c19a3789c6a18e83fb866e01cc18', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ea0bc179480add466ab7dcb8cc74350afcb7169', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58647eb4853e0988778dd8baaecd1ce0771037c9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e119f06c7d9e82b0d134e80822231098ea231fa2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b2ace97ebbd349e82c4c665ab75e732bdf6d1b6', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51d8b3c1e3259b6676835db6bb103d784a2ddc8e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42f9637494b0b40722a3b5fb8d2dbc0d03ba287a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '512df455beea38dcef204d284ec6050782fa5e6b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3cae10d1b5d4954b7c192914e8d0547b3babd69', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5886ce5d8939b560b7375e0240c04b225cb0f9e2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6ad82b5bcad722bae20623383dbf9d789e21da2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5d66e97336424557b03499c25be0cdf9032a5d1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '967f0159fb9f2ea7d37fb9cd19414861f4b603cb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50fba5995ab3c5b4608594b7147e3ffb3970de1e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9633746a9aa33fcb60240c35d95135d9a48da0d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96efa8ed3dce6354744d8b390bd8c542680d9e33', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef866643f2528349b9472f37327cbb91cdb9473a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2a764e7aec54b6db82693632e58b801ee07d6ed', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ea1c51e293f9d7fe0cbc1f52b57c28f9ac4a7fe', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33dd27236aa03ed679b29483cbbf8e28b2e1210a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}]",Aryaman Gupta,56637531,guptaaryaman22@gmail.com,User,,30,,10,67
705914969,Added E2E to check the feature that enable offline exploration editing.,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR is for [Improve exploration save flow project](https://docs.google.com/document/d/1Wu2ZKAEhUdi95P3zwiji4PYPsMdlQeRGMBu8IGxY3eY/edit?usp=sharing). [Part of Milestone 2.4]
2. This PR does the following: Adds the e2e tests to test the offline, online toasts message and to check that the changes can be applied when offline and saved when online.
3. This PR is build over #13544.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
Proof that tests are not flaky 
https://github.com/atpug22/oppia/pull/12/checks?check_run_id=3326602643
![image](https://user-images.githubusercontent.com/56637531/129440017-7631f430-8734-4abb-a8e3-829bc489bde6.png)


<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13597,https://api.github.com/repos/oppia/oppia/pulls/13597,https://github.com/oppia/oppia/pull/13597,closed,124,1,5,79,15,47,1,1,[{'name': 'PR: LGTM'}],2021-08-07 16:33:47+00:00,2021-08-15 07:06:43+00:00,657176.0,"7 days, 14:32:56","[{'comment_id': 685056578, 'comment_body': 'Since the ""pre-check"" is ""expect(await saveChangesButton.isEnabled()).toEqual(false);"" should we do the opposite of it here in the ""post-check""?\r\n\r\ni.e. ""expect(await saveChangesButton.isEnabled()).toEqual(true);""', 'comment_created': datetime.datetime(2021, 8, 9, 9, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 687522785, 'comment_body': 'We can not use this because the button takes some micro seconds to get enabled after the user is online. So we need to wait for the element to get clickable instead of just checking if it is clickable or not.', 'comment_created': datetime.datetime(2021, 8, 12, 8, 57, 53, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 687573512, 'comment_body': '```suggestion\r\n      // Check that the save changes button is not clickable when offline.\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 10, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SAEb-ai', 'type': 'User'}, {'comment_id': 687577428, 'comment_body': 'Can we also check for the visiblilty of offline toast message here?', 'comment_created': datetime.datetime(2021, 8, 12, 10, 12, 15, tzinfo=datetime.timezone.utc), 'commenter': 'SAEb-ai', 'type': 'User'}, {'comment_id': 687578910, 'comment_body': 'Ditto visibility of offline toast message?', 'comment_created': datetime.datetime(2021, 8, 12, 10, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SAEb-ai', 'type': 'User'}, {'comment_id': 687582039, 'comment_body': ""```suggestion\r\n    'should show a toast message to inform when the user is offline or online',\r\n```"", 'comment_created': datetime.datetime(2021, 8, 12, 10, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'SAEb-ai', 'type': 'User'}, {'comment_id': 687585231, 'comment_body': 'I think we are doing two things in this.\r\n\r\n         1. Checking for the disability of the save draft button when offline.\r\n         2. Checking for the enability of the save draft button when online.\r\n\r\nCan you please update the statement accordingly?\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 10, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SAEb-ai', 'type': 'User'}, {'comment_id': 688112425, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 12, 21, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688112496, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 12, 21, 58, 21, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688112603, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 12, 21, 58, 34, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688418414, 'comment_body': ""```suggestion\r\n  it(\r\n    'should disable and enable the save draft button when the user is' +\r\n    'offline or online respectively',\r\n```"", 'comment_created': datetime.datetime(2021, 8, 13, 10, 41, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SAEb-ai', 'type': 'User'}, {'comment_id': 688418980, 'comment_body': ""```suggestion\r\n    'should be able to save the changes when the user is offline',\r\n```"", 'comment_created': datetime.datetime(2021, 8, 13, 10, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SAEb-ai', 'type': 'User'}, {'comment_id': 688686927, 'comment_body': 'E2E test files should never interact with the page directly ([source](https://github.com/oppia/oppia/wiki/End-to-End-Tests#writing-the-test)). All page interactions should go through a utility file under `protractor_utils/` instead\r\n\r\nditto elsewhere', 'comment_created': datetime.datetime(2021, 8, 13, 17, 54, 14, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688687272, 'comment_body': 'Where do these numbers come from? Please add a comment to explain', 'comment_created': datetime.datetime(2021, 8, 13, 17, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688687894, 'comment_body': 'Can you also check that the toast message has the correct text? For example, if the toast message here says `You are offline`, the test should fail', 'comment_created': datetime.datetime(2021, 8, 13, 17, 55, 53, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688688609, 'comment_body': ""```suggestion\r\n    'should be able to save changes when the user is offline',\r\n```"", 'comment_created': datetime.datetime(2021, 8, 13, 17, 57, 9, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688689190, 'comment_body': 'Can you move this into a utility function? You could put it in `general.js` since it might apply to other tests too\r\n\r\nditto for when going online', 'comment_created': datetime.datetime(2021, 8, 13, 17, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688690675, 'comment_body': ""This doesn't actually check that the changes are autosaved since `wiatForAutosave` just waits for the autosave indicator to disappear. This will be a no-op if the autosave indicator isn't present in the first place\r\n\r\nhttps://github.com/oppia/oppia/blob/e41fb8a901eff98e44546d300275e549b150377b/core/tests/protractor_utils/action.js#L25-L28"", 'comment_created': datetime.datetime(2021, 8, 13, 18, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688691103, 'comment_body': ""I don't think this needs to be its own test. These checks could be incorporated into one of your tests above instead"", 'comment_created': datetime.datetime(2021, 8, 13, 18, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688691609, 'comment_body': ""This doesn't need to be its own test either. If you combine the tests, you can avoid the setup steps of creating an exploration and user, which will make the tests more efficient"", 'comment_created': datetime.datetime(2021, 8, 13, 18, 2, 36, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688900531, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 8, 22, 17, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688900703, 'comment_body': 'Yeah I get it. But that autosave will always appear so we are just checking if it has disappeared to move forward and also at last we are checking that whether the changes made offline are applied or not.', 'comment_created': datetime.datetime(2021, 8, 14, 8, 24, 11, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688900707, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 8, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688900725, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 8, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688900744, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 8, 24, 33, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688900824, 'comment_body': 'These values are just implying download and upload speed. I have added the comment. Thanks!', 'comment_created': datetime.datetime(2021, 8, 14, 8, 25, 7, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688900837, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 8, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688970065, 'comment_body': ""We shouldn't be selecting elements in test files. All page interactions should go through the utilities in `protractor_utils/`"", 'comment_created': datetime.datetime(2021, 8, 14, 17, 9, 27, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688970432, 'comment_body': 'Thanks for adding the comment! I\'m still unclear on why you chose these particular numbers though. For example, why not an upload throughput of 200 * 1024? Can you explain why you chose these numbers in the comment? I imagine that the exact numbers aren\'t that important, in which case you could explain what the constraints are.\r\n\r\nTo add some context, I\'m asking for this because we want to avoid ""magic numbers"" that appear without explanation. Imagine that a year from now, someone reading the code is wondering whether it\'s okay to change these numbers. We want the comments to answer their question', 'comment_created': datetime.datetime(2021, 8, 14, 17, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688970564, 'comment_body': 'Do these alerts appear on any other pages? If not, then they should go in the page-specific utility file, not `general`', 'comment_created': datetime.datetime(2021, 8, 14, 17, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688970645, 'comment_body': ""```suggestion\r\n    'Offline warning toast message taking too long to disappear.');\r\n```"", 'comment_created': datetime.datetime(2021, 8, 14, 17, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688970760, 'comment_body': 'Functions should be named as verbs instead of nouns. For example `waitForOfflineAlert`', 'comment_created': datetime.datetime(2021, 8, 14, 17, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688970798, 'comment_body': 'Why do we wait for the offline alert to disappear but not the online alert?', 'comment_created': datetime.datetime(2021, 8, 14, 17, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688970807, 'comment_body': ""```suggestion\r\n    'Online warning toast message taking too long to appear.');\r\n```"", 'comment_created': datetime.datetime(2021, 8, 14, 17, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688970855, 'comment_body': 'ditto: move to page utility file\r\nditto: name as verb', 'comment_created': datetime.datetime(2021, 8, 14, 17, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688971037, 'comment_body': 'The comment explaining the upload and download speeds should go with the first occurrence. I see two options:\r\n\r\n1. Put goOnline above goOffline\r\n2. In goOffline explain what download_throughput and upload_throughput mean. In goOnline, explain where the numbers come from (since in goOffline the 0s are pretty self-explanatory)', 'comment_created': datetime.datetime(2021, 8, 14, 17, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688971153, 'comment_body': ""I thought we didn't let users save changes when offline (the save changes button gets disabled). Instead, we let users make changes while offline and then save them when they're back online, right?"", 'comment_created': datetime.datetime(2021, 8, 14, 17, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 688995385, 'comment_body': 'yes right, Changed the description.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 45, 24, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688995387, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 45, 28, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688995388, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 45, 32, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688995390, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 14, 21, 45, 38, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688995395, 'comment_body': 'Nothing Specific. Now added to the online too.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 45, 42, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688995427, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688995428, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688995442, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688995446, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}, {'comment_id': 688998738, 'comment_body': ""```suggestion\r\n    'should be saved when online.',\r\n```"", 'comment_created': datetime.datetime(2021, 8, 14, 22, 25, 33, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}]","[{'commit_sha': '441e7bee59c48fae7fbaccb867b1007852ac9a23', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2971f257abd0815edaf9655ad60a4e04a095d2dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '038fbd1bfd5a890125a5efec7d7580fa1cb44063', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '462fffcc0b74baa3ee0403a2c8bbab2e069317cc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0648d545246c47080b3a5f8c527f7bde2f1ac4cd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '473241a91d4e88d693c4d7b434efb3c9046bc30e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95516e1b96825cdb9a476ad2ac2c7b51c20a0fd8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa70cc68ad29c8385f4638fdac3560816f785190', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '399b0b7991b8e0e749b65e1a0afbc582d092b554', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b82a1b2d05f48077fa8f5ea856ba66393223f6a3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6b6a37fac2c8f596efcbd88f3f9c204a8cc2c36', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55e1fb908c258423de6c4c82d7dfa5466ead56eb', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4af033fc1d4657dcd3b222dc89258a862831e077', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '201fc6b80d580553a6404ea718ff6fcc04f4e56e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43799d6911c5e6775a94c129597866500a283c8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f400b1321b795f3f1c309383832e41b84e77a26', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfa9262141998b5b9b30bb917ee567a67a6cc242', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83b733f5d2905b5febbffe5b60d9c6f2d00696ad', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba74340d53cf3a44db434b83d866f8a7e272c7da', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa86f7ddcbfc312a1224504d10d7554def3afd4c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '275c519309104069bac55d3ac8640ffdbdd724f6', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b61a8f606e4df7aae1a867de7c8cd380d28f999', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7478537de2c3b294d54183e94b675546a2ed3c71', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6afaa8a4c3b233bf8c7394bf56c071e2770e68d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37c2b3c642281dbc8d6acb7ebcadf4cbc9630f1a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b796977d5802758a39af24dd209945e8454d8237', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdc549781effd8551327a9161a1e34d720aff8fc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb41da2acc9c16bbdef5ffef2feb1c63586a15e4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00ca7a594dee755586f274cbcac779bc0f0d2ad5', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f01cb9cff7f9cf34ba21d4da73c1eea4a5d96e3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb074da8c492039a80a1812740f2f6f5f73367fd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae1137e59f56b0d3661dc60fe438c37c1b204666', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82a0490583b31826ed7a82dd1a918cd658b548f9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec7f89251ca7664a3fd9059b5b7d970414e55b3e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd14a7272b41eb766adcb6c427740e2867861ac43', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf600933ca762db914d056e5a45327fcfa8092dc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da711992ccc57e9289531f0914bb98dc7456d7be', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '342ffb119dbf7effaf86747469f7ee5b09e48b4c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2550649c382b14aae6be84241c091bb0d718fe3c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3a320728c366a646f056e4bcb934831de5049d2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36b315b00eae84bdf5b4435bc3f3b28e8eedf2f9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1c47fbfab6d81fd07bec7c12552116f53a58846', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '418d574c44d8bc64269eeb284e50fd861f6a3d8f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48df4797a383028675eed65e1d6aa6cb224d44aa', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0a5884fb3d4c19a3789c6a18e83fb866e01cc18', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ea0bc179480add466ab7dcb8cc74350afcb7169', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58647eb4853e0988778dd8baaecd1ce0771037c9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e119f06c7d9e82b0d134e80822231098ea231fa2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b2ace97ebbd349e82c4c665ab75e732bdf6d1b6', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '339401b04362365d60ff55e543e91117f3ac50bf', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51d8b3c1e3259b6676835db6bb103d784a2ddc8e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90eec4e554699c8cdd6f30e8fb4aba7d45000e0e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d22506a06e3deb3b60a558ededb364c9e9f9f21', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f277bf191647bde3eeeac242487dcae728b60255', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42f9637494b0b40722a3b5fb8d2dbc0d03ba287a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '512df455beea38dcef204d284ec6050782fa5e6b', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a8df8d06135e435c5fdffcbb76006b0b315ca80', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16f8750f76d51d18c5a6453a2d0b90128c8300aa', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce03d62e3216f530abc5f35e5d87c2373f1a6040', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd0934808d2178a20412c9596270dde9fed0a501', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c89545f82b127f2e06205096286225a5628798a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9a9f2feefd209e735a22bc6bf3f4c6365ad438d', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ad4d2d2a4efa3cc5390c1f412abf48de5dac806', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a555c1f092383470c65f530aa96badd5b51cc518', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4080010042f9996b22b0207efce13caed9cd9bf', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '729434ac4b0712508214ae799d5b7e68c383f667', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1f0d5eab94b1947f8c14c32e915bae619df1056', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84d06fa7b770b33f6f69bbbd3c65828f042c81c9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87b9afe13aea9cb984d609afbb34de84a2e8eb40', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c14443bd416399ac81b238e08fa3c84abbac9ee4', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7533b0090de0e702e625a92529254db26b79f605', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a10dfba525c8c5f4d6e5a766d0f2bfae2d24aafd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b9cdf30c0df59e8e67c7a009b0e3edfa33d9b75', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6df86c1cadb7a4eba83ad9e89a87c2726098e59', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fed910d421e2c4c6f850818c830b294c440beac', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21f5b87a1628306949e3c5609662ba8429cf1a80', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abba42a097e1b2ed0b22dac42fc9babc387011b0', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbb6b8e06459b20f5937981311efffa8d880796f', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca016f1735ea120ff64131c6186f743467b5b5f2', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}]",Aryaman Gupta,56637531,guptaaryaman22@gmail.com,User,,30,,10,67
714620970,Added event listener to avoid navigation when offline and disable tabs which are not workable offline.,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes some of the issues of exploration editor when offline.
2. This PR does the following: This PR adds the event listener to avoid navigation/reload from the exploration editor page. This also starts disabling the tabs such as statistics, history, etc. which are not workable offline.

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

https://user-images.githubusercontent.com/56637531/129976313-2af580cf-ecfd-4e21-8d64-bc5021b515b2.mov


<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13698,https://api.github.com/repos/oppia/oppia/pulls/13698,https://github.com/oppia/oppia/pull/13698,closed,50,17,3,26,7,2,1,1,[{'name': 'PR: LGTM'}],2021-08-17 23:08:38+00:00,2021-08-19 08:32:37+00:00,120239.0,"1 day, 9:23:59","[{'comment_id': 691577484, 'comment_body': 'For disabled tabs, could we show a tooltip to let the user know that the functionality is disabled because there is no connectivity?', 'comment_created': datetime.datetime(2021, 8, 18, 20, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 691626548, 'comment_body': 'Done. Thanks!', 'comment_created': datetime.datetime(2021, 8, 18, 21, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'atpug22', 'type': 'User'}]","[{'commit_sha': '441e7bee59c48fae7fbaccb867b1007852ac9a23', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2971f257abd0815edaf9655ad60a4e04a095d2dd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '038fbd1bfd5a890125a5efec7d7580fa1cb44063', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '462fffcc0b74baa3ee0403a2c8bbab2e069317cc', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0648d545246c47080b3a5f8c527f7bde2f1ac4cd', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '473241a91d4e88d693c4d7b434efb3c9046bc30e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95516e1b96825cdb9a476ad2ac2c7b51c20a0fd8', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa70cc68ad29c8385f4638fdac3560816f785190', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '399b0b7991b8e0e749b65e1a0afbc582d092b554', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b82a1b2d05f48077fa8f5ea856ba66393223f6a3', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '201fc6b80d580553a6404ea718ff6fcc04f4e56e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa86f7ddcbfc312a1224504d10d7554def3afd4c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c53dd434fb93db7a46f49a3c8c67f2e51313460', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c9d919bcc17f216788dffb71ac8c3d651dcaa13', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5736a455867dbe35afe5755973eb52e8144db615', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca8260b7ea6b7aad5a7b2d78aeac7c457e71afff', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d7091cbb71c7b5cf7d81dbe35190d3f0e3b5a49', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76f3dd309d35384afc4e020f375807fc3d6a698c', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa28840a203e6f85f3f323be8bc2e2766792b88a', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7da77bf65375a2055dbe70ebdb0bcfaf4e95bf5e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ec97931ea334ddc342b6a1e2088d8e94f442c19', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'add78adbb8abb9b37fe8c3b75fedaa2c355ffe5e', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cf3974a959779bc7c3da7052094de75b8f80adf', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a0340a7f51a89cecfb775496e6518f28db62bd9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7f568ef06a5ff94b095fb056b2c3c3c455a02b9', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db6ba333da73d53412b5ea5ed96e5041bbcc0aa1', 'committer_username': 'atpug22', 'committer_name': 'Aryaman Gupta', 'committer_email': 'guptaaryaman22@gmail.com', 'commit_date': datetime.datetime(2019, 10, 16, 12, 10, 28, tzinfo=datetime.timezone.utc)}]",Aryaman Gupta,56637531,guptaaryaman22@gmail.com,User,,30,,10,67

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3839,5716,240,775,15750,1416,417,25,"[{'id': 714620970, 'number': 13698, 'closed': datetime.datetime(2021, 8, 19, 8, 32, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 23, 8, 38, tzinfo=datetime.timezone.utc), 'time_taken': 120239.0, 'time_delta': '1 day, 9:23:59', 'additions': 50, 'deletions': 17, 'state': 'closed'}, {'id': 705914969, 'number': 13597, 'closed': datetime.datetime(2021, 8, 15, 7, 6, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 7, 16, 33, 47, tzinfo=datetime.timezone.utc), 'time_taken': 657176.0, 'time_delta': '7 days, 14:32:56', 'additions': 124, 'deletions': 1, 'state': 'closed'}, {'id': 700962584, 'number': 13544, 'closed': datetime.datetime(2021, 8, 12, 0, 35, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 18, 45, 31, tzinfo=datetime.timezone.utc), 'time_taken': 885006.0, 'time_delta': '10 days, 5:50:06', 'additions': 678, 'deletions': 53, 'state': 'closed'}, {'id': 700962091, 'number': 13543, 'closed': datetime.datetime(2021, 8, 1, 18, 41, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 18, 41, 20, tzinfo=datetime.timezone.utc), 'time_taken': 5.0, 'time_delta': '0:00:05', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 694413101, 'number': 13445, 'closed': datetime.datetime(2021, 7, 21, 22, 30, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 14, 19, 21, tzinfo=datetime.timezone.utc), 'time_taken': 29463.0, 'time_delta': '8:11:03', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 691112184, 'number': 13407, 'closed': datetime.datetime(2021, 7, 23, 15, 37, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 0, 28, 17, tzinfo=datetime.timezone.utc), 'time_taken': 659343.0, 'time_delta': '7 days, 15:09:03', 'additions': 268, 'deletions': 240, 'state': 'closed'}, {'id': 686131075, 'number': 13342, 'closed': datetime.datetime(2021, 7, 12, 22, 4, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 15, 44, 52, tzinfo=datetime.timezone.utc), 'time_taken': 368378.0, 'time_delta': '4 days, 6:19:38', 'additions': 6056, 'deletions': 6059, 'state': 'closed'}, {'id': 684638044, 'number': 13325, 'closed': datetime.datetime(2021, 7, 9, 11, 46, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 19, 53, 52, tzinfo=datetime.timezone.utc), 'time_taken': 229929.0, 'time_delta': '2 days, 15:52:09', 'additions': 467, 'deletions': 24, 'state': 'closed'}, {'id': 678507746, 'number': 13233, 'closed': datetime.datetime(2021, 7, 8, 13, 30, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 27, 12, 24, 38, tzinfo=datetime.timezone.utc), 'time_taken': 954336.0, 'time_delta': '11 days, 1:05:36', 'additions': 1967, 'deletions': 312, 'state': 'closed'}, {'id': 672604757, 'number': 13116, 'closed': datetime.datetime(2021, 6, 30, 1, 57, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 12, 54, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1083780.0, 'time_delta': '12 days, 13:03:00', 'additions': 5779, 'deletions': 5, 'state': 'closed'}, {'id': 657169809, 'number': 12938, 'closed': datetime.datetime(2021, 7, 6, 22, 54, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 22, 14, 6, tzinfo=datetime.timezone.utc), 'time_taken': 3372048.0, 'time_delta': '39 days, 0:40:48', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 645137906, 'number': 12814, 'closed': datetime.datetime(2021, 7, 6, 22, 54, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 15, 12, 24, 30, tzinfo=datetime.timezone.utc), 'time_taken': 4530625.0, 'time_delta': '52 days, 10:30:25', 'additions': 15, 'deletions': 7, 'state': 'closed'}, {'id': 592549607, 'number': 12204, 'closed': datetime.datetime(2021, 3, 16, 23, 20, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 14, 14, 5, 44, tzinfo=datetime.timezone.utc), 'time_taken': 206067.0, 'time_delta': '2 days, 9:14:27', 'additions': 37, 'deletions': 2, 'state': 'closed'}, {'id': 592535983, 'number': 12201, 'closed': datetime.datetime(2021, 3, 14, 12, 49, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 14, 12, 46, 17, tzinfo=datetime.timezone.utc), 'time_taken': 218.0, 'time_delta': '0:03:38', 'additions': 60, 'deletions': 51, 'state': 'closed'}, {'id': 589934213, 'number': 12157, 'closed': datetime.datetime(2021, 3, 26, 19, 20, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 10, 17, 31, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1388917.0, 'time_delta': '16 days, 1:48:37', 'additions': 229, 'deletions': 0, 'state': 'closed'}, {'id': 583062979, 'number': 12072, 'closed': datetime.datetime(2021, 3, 3, 17, 8, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 2, 14, 11, 10, tzinfo=datetime.timezone.utc), 'time_taken': 97048.0, 'time_delta': '1 day, 2:57:28', 'additions': 292, 'deletions': 156, 'state': 'closed'}, {'id': 582978171, 'number': 12071, 'closed': datetime.datetime(2021, 3, 15, 2, 31, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 2, 12, 4, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1088802.0, 'time_delta': '12 days, 14:26:42', 'additions': 582, 'deletions': 469, 'state': 'closed'}, {'id': 565809090, 'number': 11844, 'closed': datetime.datetime(2021, 2, 12, 18, 50, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 2, 9, 40, 43, tzinfo=datetime.timezone.utc), 'time_taken': 897014.0, 'time_delta': '10 days, 9:10:14', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 552732059, 'number': 11665, 'closed': datetime.datetime(2021, 1, 28, 19, 39, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 11, 13, 12, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1492032.0, 'time_delta': '17 days, 6:27:12', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 552319326, 'number': 11656, 'closed': datetime.datetime(2021, 1, 14, 1, 34, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 10, 17, 35, 54, tzinfo=datetime.timezone.utc), 'time_taken': 287940.0, 'time_delta': '3 days, 7:59:00', 'additions': 1, 'deletions': 6, 'state': 'closed'}, {'id': 551847671, 'number': 11638, 'closed': datetime.datetime(2021, 1, 14, 22, 43, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 8, 16, 52, 19, tzinfo=datetime.timezone.utc), 'time_taken': 539488.0, 'time_delta': '6 days, 5:51:28', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 547620078, 'number': 11570, 'closed': datetime.datetime(2021, 1, 3, 20, 31, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 1, 12, 5, 56, tzinfo=datetime.timezone.utc), 'time_taken': 203132.0, 'time_delta': '2 days, 8:25:32', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 547066574, 'number': 11551, 'closed': datetime.datetime(2021, 1, 2, 6, 27, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 30, 19, 48, 39, tzinfo=datetime.timezone.utc), 'time_taken': 211148.0, 'time_delta': '2 days, 10:39:08', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 546230605, 'number': 11524, 'closed': datetime.datetime(2021, 1, 5, 22, 47, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 28, 20, 38, 3, tzinfo=datetime.timezone.utc), 'time_taken': 698967.0, 'time_delta': '8 days, 2:09:27', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 545854990, 'number': 11516, 'closed': datetime.datetime(2020, 12, 28, 19, 40, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 27, 20, 42, 39, tzinfo=datetime.timezone.utc), 'time_taken': 82688.0, 'time_delta': '22:58:08', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 545843522, 'number': 11515, 'closed': datetime.datetime(2020, 12, 28, 19, 52, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 27, 18, 41, tzinfo=datetime.timezone.utc), 'time_taken': 90684.0, 'time_delta': '1 day, 1:11:24', 'additions': 46, 'deletions': 2, 'state': 'closed'}, {'id': 543498806, 'number': 11460, 'closed': datetime.datetime(2021, 1, 5, 15, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 21, 13, 56, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1301578.0, 'time_delta': '15 days, 1:32:58', 'additions': 16, 'deletions': 15, 'state': 'closed'}, {'id': 540762368, 'number': 11408, 'closed': datetime.datetime(2020, 12, 26, 9, 52, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 15, 22, 35, 54, tzinfo=datetime.timezone.utc), 'time_taken': 904591.0, 'time_delta': '10 days, 11:16:31', 'additions': 228, 'deletions': 100, 'state': 'closed'}]"
