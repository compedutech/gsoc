pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1403033881,"Remove Vue.js, replaced by Qt in the library","Fixes #683 
Fixes #410
Fixes #554",True,946,https://api.github.com/repos/kiwix/kiwix-desktop/pulls/946,https://github.com/kiwix/kiwix-desktop/pull/946,closed,1856,13365,45,29,17,61,0,0,[],2023-06-22 07:46:17+00:00,2023-08-01 10:31:46+00:00,3465929.0,"40 days, 2:45:29","[{'comment_id': 1259696098, 'comment_body': 'You set the css from `:css/_contentManager.css` but the commit remove it.', 'comment_created': datetime.datetime(2023, 7, 11, 12, 55, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259697215, 'comment_body': ""If we inherit from `QTreeView`, we don't need a `m_view` which is a `QTreeView`"", 'comment_created': datetime.datetime(2023, 7, 11, 12, 56, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259700099, 'comment_body': 'If the book is not found, we should now return something else that an QMap with empty values.\r\n(It was needed as the output was used by js code, but now it would be better to have better error handling)', 'comment_created': datetime.datetime(2023, 7, 11, 12, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259846589, 'comment_body': 'We should avoid using raw pointer.\r\nCpp smart pointer (`std::unique_ptr` or `std::shared_ptr`) or a `QPointer`.', 'comment_created': datetime.datetime(2023, 7, 11, 14, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259851354, 'comment_body': 'No need for a ""common"" archive.\r\n`auto archive = app->getLibrary()->getArchive(bookId)` in the loop is ok.', 'comment_created': datetime.datetime(2023, 7, 11, 14, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259853470, 'comment_body': '`getArchive` means that we open the zim file.\r\nIt should be ok to work on the `Book` with `getBookById()`', 'comment_created': datetime.datetime(2023, 7, 11, 14, 48, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259861513, 'comment_body': 'libkiwix has [beautifyFileSize](https://github.com/kiwix/libkiwix/blob/main/src/tools/stringTools.h#L34)\r\nIt would be better to make this function public in libkiwix instead of implementing it here.', 'comment_created': datetime.datetime(2023, 7, 11, 14, 53, 6, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259863094, 'comment_body': '`m_data` is used only in `setupNodes` and in `rowCount`.\r\nIt would be better to store only `rowCount` and pass `data` to `setupNodes` as argument.', 'comment_created': datetime.datetime(2023, 7, 11, 14, 54, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259865202, 'comment_body': 'This configuration should be made in the view.', 'comment_created': datetime.datetime(2023, 7, 11, 14, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259870880, 'comment_body': 'I hesitate between ""Nice hack"" and ""We should not do that, we should have only one node that can be displayed differently (but I don\'t know if it is possible)""', 'comment_created': datetime.datetime(2023, 7, 11, 14, 58, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259878724, 'comment_body': ""This is also part of the view configuration, so it should be done there.\r\n\r\n---\r\n\r\nNot related to this lines, but I don't know where to put the following comment :\r\nCould we use the `ContentManagerDelegate` to draw the description instead of relying on a sub node ?"", 'comment_created': datetime.datetime(2023, 7, 11, 15, 4, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259881518, 'comment_body': 'The `else` is useless here as we have a return at the end of the `if` block.', 'comment_created': datetime.datetime(2023, 7, 11, 15, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259882895, 'comment_body': 'It seems to me that it is part of the view.\r\nIt should be to the delegate to display the placeholder if the node is empty.', 'comment_created': datetime.datetime(2023, 7, 11, 15, 7, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259884346, 'comment_body': 'Why this test ?', 'comment_created': datetime.datetime(2023, 7, 11, 15, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259885722, 'comment_body': 'Why limiting to 5 ?', 'comment_created': datetime.datetime(2023, 7, 11, 15, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259888894, 'comment_body': 'Why do we need that ?\r\nContentManagerModel do not access private thing of `Node` (at least not in this commit)', 'comment_created': datetime.datetime(2023, 7, 11, 15, 12, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259900965, 'comment_body': 'This become a bit complex to follow. \r\nWe could create a static method on `Node` which create corresponding `Node`(s) using the right argument for us.\r\nSomething like:\r\n\r\n```cpp\r\nstatic Node createNode(Book& bookItem, Node rootNode) {\r\n   const auto node = new Node({bookItem[""icon""], bookItem[""name""], date, ...}, rootNode, bookItem[""id""], false);\r\n   const auto child = new Node({"""", bookItem[""description""], """", """", """", """"}, node, """", true);\r\n  return node;\r\n}\r\n```\r\n\r\n(And remove default argument on the Node constructor)', 'comment_created': datetime.datetime(2023, 7, 11, 15, 21, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259929489, 'comment_body': '`addPair` is about the implementation.\r\nThis method start add a new download, it should be named `addDownload(QString url, QModelIndex index)`', 'comment_created': datetime.datetime(2023, 7, 11, 15, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259931831, 'comment_body': 'Do we need to connect this handler everytime we start a download ? We could connect it only a initialization of the `ThumbnailDownloader`', 'comment_created': datetime.datetime(2023, 7, 11, 15, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259933994, 'comment_body': 'I have the feeling that this cache should be handle at the level of the downloader.', 'comment_created': datetime.datetime(2023, 7, 11, 15, 47, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259937731, 'comment_body': ""Shouldn't we remove the `library-icon.svg` ? Or we use it somewhere else ?"", 'comment_created': datetime.datetime(2023, 7, 11, 15, 50, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259951418, 'comment_body': 'What happens if someone is using the remote Library while this function is running in a different thread ?\r\nWe should probably but a lock somewhere.', 'comment_created': datetime.datetime(2023, 7, 11, 16, 1, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259957644, 'comment_body': 'Default parameter is can be a mess when there is too much of them. Please remove the default valoe of okDialog.', 'comment_created': datetime.datetime(2023, 7, 11, 16, 6, 45, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1268221620, 'comment_body': 'https://github.com/kiwix/libkiwix/pull/971 needs this', 'comment_created': datetime.datetime(2023, 7, 19, 15, 10, 49, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1268222988, 'comment_body': ""I am also using it in `refreshIcons`, don't see a way to access it there without storing `m_data`."", 'comment_created': datetime.datetime(2023, 7, 19, 15, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1268223818, 'comment_body': ""> Could we use the ContentManagerDelegate to draw the description instead of relying on a sub node ?\r\n\r\nI don't believe this is possible, the model needs to know all data and nodes "", 'comment_created': datetime.datetime(2023, 7, 19, 15, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1268225252, 'comment_body': 'Just a small number to not fetch too many, is there a better limit?', 'comment_created': datetime.datetime(2023, 7, 19, 15, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1268226928, 'comment_body': 'Will require discussion. @kelson42 what should be shown if there are no books in library?\r\n\r\nSome text like ""Add books using the downloader, etc.""?', 'comment_created': datetime.datetime(2023, 7, 19, 15, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1268230476, 'comment_body': ""The inner node (description node) doesn't need to fetch rows?"", 'comment_created': datetime.datetime(2023, 7, 19, 15, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1268232538, 'comment_body': 'Welp, this took a lot of time. Lesson to myself: dont use raw pointers from start :)\r\n\r\n', 'comment_created': datetime.datetime(2023, 7, 19, 15, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1268234240, 'comment_body': 'App crashes whenever i move this to view, seems like it requires the model to be added prior to these settings', 'comment_created': datetime.datetime(2023, 7, 19, 15, 20, 32, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1268235154, 'comment_body': 'Created an abstract class Node\r\nand splitted the nodes into 2: RowNode and DescriptionNode. Hopefully a better structure now.', 'comment_created': datetime.datetime(2023, 7, 19, 15, 21, 16, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1272442932, 'comment_body': 'It is not the same question.\r\nI speaking about the api of the content manager. Your question is interesting and need to be answered but it would be the same, what ever the function returns when you want information about a specific book and the book is not found.', 'comment_created': datetime.datetime(2023, 7, 24, 15, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273101354, 'comment_body': ""Indeed.\r\nIn fact, we should not store a `m_data` but directly reference a `kiwix::Book`. But it will be for the refactoring.\r\nLet's keep `m_data` for now. "", 'comment_created': datetime.datetime(2023, 7, 25, 7, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273105971, 'comment_body': 'It is because if `parent` is the root, `isValid` return false ?\r\n\r\nAnyway, please add a small comment around the test to know why we do that.', 'comment_created': datetime.datetime(2023, 7, 25, 7, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273109491, 'comment_body': 'Ok. So now the question is ""from what are we fetching"".\r\nIf we are fetching from the local library, there is no ""too many"" book to fetch.\r\nFor the remote library, it depends of how we manage it. If we fetch all book in the opds request, it would be useless to limit here. If we fetch only what we display, this is good.\r\n\r\nBut there is no real problem to keep this limit. We can keep it for now and advance on the PR. (Please open a issue to remember we have to think about this at a time)', 'comment_created': datetime.datetime(2023, 7, 25, 7, 21, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273120168, 'comment_body': ""This lock protect against to update of the remote library in the same time.\r\nBut it doesn't protect from a usage of the library (by the UI/ContentManager for example) while we are updating the library.\r\nWe should put the (same) lock also when we want to access `m_remoteLibrary`."", 'comment_created': datetime.datetime(2023, 7, 25, 7, 31, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273141366, 'comment_body': 'If you put the `getBookId()` method in the abstract class `Node`, you can simply use it without casting first.', 'comment_created': datetime.datetime(2023, 7, 25, 7, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273272735, 'comment_body': 'Do we really need this here ? Could it be put in `RowNode` ?\r\nAt which moment we us it (and do we know at this time if node is a `RowNode` or a `DescriptionNode`) ?\r\n\r\nBy definition `DescriptionNode` has no child so it may be better to declare the method in `RowNode`. But it depends of its usage.', 'comment_created': datetime.datetime(2023, 7, 25, 9, 37, 6, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273277659, 'comment_body': 'Having a shared pointer is useful only when we store it.\r\nWhen we want to access method of a `Node`, we can directly use the raw pointer.', 'comment_created': datetime.datetime(2023, 7, 25, 9, 40, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273279974, 'comment_body': 'This can simply be tested with `if (!item)`.\r\n\r\nBut more important, when do we have item null ? By definition we should have a shared pointer if we have a raw pointer.', 'comment_created': datetime.datetime(2023, 7, 25, 9, 42, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273283545, 'comment_body': 'Shared from this is probably better than this implementation : https://en.cppreference.com/w/cpp/memory/enable_shared_from_this', 'comment_created': datetime.datetime(2023, 7, 25, 9, 46, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273284447, 'comment_body': 'Same here, no need for shared pointer.', 'comment_created': datetime.datetime(2023, 7, 25, 9, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273285348, 'comment_body': 'Same here, no need for shared pointer. We never store parentItem.', 'comment_created': datetime.datetime(2023, 7, 25, 9, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273285914, 'comment_body': 'Same here, no need for shared pointer. We never store childItem', 'comment_created': datetime.datetime(2023, 7, 25, 9, 48, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273286516, 'comment_body': 'Same here, no need for shared pointer.', 'comment_created': datetime.datetime(2023, 7, 25, 9, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273286905, 'comment_body': 'Same here, no need for shared pointer.', 'comment_created': datetime.datetime(2023, 7, 25, 9, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273287732, 'comment_body': ""Same here, no need for shared pointer. (I will stop pointing it, every time we have a raw pointer we don't store, we are ok with it)"", 'comment_created': datetime.datetime(2023, 7, 25, 9, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273290385, 'comment_body': ""Here we need it (I had to mention it :))\r\nWe store the rootNode, and we don't want it to be deleted as we are pointing on it (so we are the (shared) owner of the pointer).\r\nAnd we also want to delete the rootNode when we don't use it any more (and shared_ptr does it for us when the last owner is deleted)"", 'comment_created': datetime.datetime(2023, 7, 25, 9, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273295569, 'comment_body': ""Directly use `m_parentItem.lock()`.\r\nThe shared_ptr may be deleted between the call to `expired` and `lock`. So let's use lock directly."", 'comment_created': datetime.datetime(2023, 7, 25, 9, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273296058, 'comment_body': 'Test if `temp` is null before accessing it.', 'comment_created': datetime.datetime(2023, 7, 25, 9, 56, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273298235, 'comment_body': 'Test if temp is not null before using it', 'comment_created': datetime.datetime(2023, 7, 25, 9, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273298449, 'comment_body': 'Test if temp is not null before using it', 'comment_created': datetime.datetime(2023, 7, 25, 9, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273303005, 'comment_body': 'Don\'t use `make_shared` must directly init a std::shared_ptr with a pointer:\r\n```cpp\r\nauto rowNodePtr = std::shared_ptr<RowNode>(new RowNode([...]));\r\n```\r\n\r\n(Does like in the ""best"" example of the `shared_from_this` doc)', 'comment_created': datetime.datetime(2023, 7, 25, 10, 2, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273304705, 'comment_body': 'When ContentManagerModel need to access private member of RowNode ?', 'comment_created': datetime.datetime(2023, 7, 25, 10, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273305435, 'comment_body': 'I think it would be better to have `Node` itself inheriting from `std::enable_shared_from_this`', 'comment_created': datetime.datetime(2023, 7, 25, 10, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1278592231, 'comment_body': 'Fair point. Done it.', 'comment_created': datetime.datetime(2023, 7, 30, 16, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1278592255, 'comment_body': 'Done. \r\nKept childCount because `hasChildren` uses it to display open/close indicators', 'comment_created': datetime.datetime(2023, 7, 30, 16, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1278593562, 'comment_body': ""I think we do need it here. timer owns the pointer and it'll free when the download is finished?\r\n"", 'comment_created': datetime.datetime(2023, 7, 30, 17, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1279276154, 'comment_body': 'Better with :\r\n\r\n```cpp\r\nif (!parentItem || parentItem == rootNode) {\r\n    return QModelIndex();\r\n}\r\n```', 'comment_created': datetime.datetime(2023, 7, 31, 13, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1279334500, 'comment_body': '@juuz0 Please fix/improve last detail and I will merge.', 'comment_created': datetime.datetime(2023, 7, 31, 13, 55, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kelson42', 'type': 'User'}]","[{'commit_sha': '8f61b418f9b86d47bfa9a195fda3c58c10986e39', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c69c1a5c1397994cd6e97cac7966240b81476cf', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5c8a31ec037d657e46a82f0f9f0758c607546f3', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f968a24adcc86e8585044e4e828b2f865a1c7959', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bddda5cb2b0210484ba66954b5e8d05bc89f6ecc', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f33d86340266531ebbce25261a105e4c7945265', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0e3bf8daf99eb7ba8927248ae7a463a28d15c3d', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e5f187f9eecdf3ae217361dfb01f56a6917ecd8', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f4e7f95b860b1334cf7f7021a3c45175a652767', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd95347fc882d1c81fb8cd842913417c246f1fa56', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24117ea581e753f5200c347846fc3f2220c5f8e2', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f082f73b5f9faf86adbbd40f34a79e361b87e6', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f72af494eccc291a80745891a5dd348fc8700e8', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef0227b08c73ae76dc8afb2573f4b701f1e2640f', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff5f022cd65dbb672f1b1a454d9c4b49f049f533', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2d0c18929fa95eb37db7b3be55795ccd38ae615', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb49cb6a1a4759fde0fc5c26983a8d9971675055', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd90158b7898e225f10c10f02be8e61223464283e', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3431fd38daa5eeebabcfe24e1cc1189caa8637b1', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3abb4b4b4cb4118f9e22307ce767dda8bac04365', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2061a69a59ae952d88e64e0cb996208068fbb92', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '078dd8ebe4f9609872285068f998719147ec9498', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '797aceebbe556306e864b895f5200b290d5b1c86', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db5b69b034329362c7fd79652ccd181040136fff', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '512af3cdc22477f2647388cae16fecfba3cc33d6', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75132af39642a21f6191edad1651cd1008853c98', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf1c317f10d61ac8b6da4e686fd62e2e6da2d514', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddb24106285b0610acc585fab528c0c31f87582c', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe7d9f5ad5c50f84a6ad322148507ef85cb2e179', 'committer_username': 'kelson42', 'committer_name': 'Kelson', 'committer_email': 'kelson@kiwix.org', 'commit_date': datetime.datetime(2011, 9, 6, 11, 0, 27, tzinfo=datetime.timezone.utc)}]",Nikhil Tanwar,26814569,2002nikhiltanwar@gmail.com,User,,29,,31,33
1429174168,Functions to read OPDS streams - languages and categories,"Fixes #968 
Requirement for: https://github.com/kiwix/kiwix-desktop/pull/960",True,967,https://api.github.com/repos/kiwix/libkiwix/pulls/967,https://github.com/kiwix/libkiwix/pull/967,closed,348,60,9,5,13,10,0,0,[],2023-07-11 10:24:46+00:00,2023-07-26 12:00:06+00:00,1301720.0,"15 days, 1:35:20","[{'comment_id': 1259989467, 'comment_body': 'urlHost is never used, so no need to pass it to the function.', 'comment_created': datetime.datetime(2023, 7, 11, 16, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1261228871, 'comment_body': 'This is not related about `LibraryDumper` neither, please move it (and its implementation) in tools', 'comment_created': datetime.datetime(2023, 7, 12, 14, 1, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1261272010, 'comment_body': 'Did in https://github.com/kiwix/libkiwix/pull/967/commits/09739c8374325cb96613a32429266fe4e93f8225\r\nRemoved the commit making getLanguageSelfName static.\r\nTrying not to do so much history rewriting, instead wanted to use fixup commit here - but this looked necessary.', 'comment_created': datetime.datetime(2023, 7, 12, 14, 32, 14, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1270744128, 'comment_body': 'Please give a better description.', 'comment_created': datetime.datetime(2023, 7, 21, 14, 30, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1270744393, 'comment_body': 'Indentation', 'comment_created': datetime.datetime(2023, 7, 21, 14, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1270744584, 'comment_body': 'Indentation', 'comment_created': datetime.datetime(2023, 7, 21, 14, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1270869658, 'comment_body': 'Fixed in commit, no fixup', 'comment_created': datetime.datetime(2023, 7, 21, 16, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1273370037, 'comment_body': 'It should be better to add this directly in the iso639_3 instead of adding a specific case.', 'comment_created': datetime.datetime(2023, 7, 25, 11, 5, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1273807711, 'comment_body': 'Do you think Undetermined is a better name than ""und""? It\'s more meaningful and will look better in kiwix-serve\r\nhttps://iso639-3.sil.org/code/und', 'comment_created': datetime.datetime(2023, 7, 25, 16, 25, 22, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1274761687, 'comment_body': 'Done in the commit', 'comment_created': datetime.datetime(2023, 7, 26, 10, 33, 18, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}]","[{'commit_sha': '7feb89c30e32f9c0ab9ecf720b29859473b98e31', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a28c2973e98a235797d385ab3280acf901a4fd29', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94d6bef402afca218c83c7c7d945e48c054b131e', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8726de494ce3ffa84c004adeb9b4742797530ce4', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '385931f2291df559d8ec93e42d04f3f6f66b50ac', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}]",Nikhil Tanwar,26814569,2002nikhiltanwar@gmail.com,User,,29,,31,33
1429171707,OPDS based languages and categories,"Fixes #934 
Requires libkiwix from: https://github.com/kiwix/libkiwix/pull/967",True,960,https://api.github.com/repos/kiwix/kiwix-desktop/pulls/960,https://github.com/kiwix/kiwix-desktop/pull/960,closed,196,257,10,6,3,12,0,0,[],2023-07-11 10:23:15+00:00,2023-08-02 12:50:42+00:00,1909647.0,"22 days, 2:27:27","[{'comment_id': 1259768612, 'comment_body': 'Why passing through the `LibraryDumper` ?\r\n`LibraryDumper` is to dump the library in a file. `getCategoryData()` is to get a mustache data to be dump with a mustache template.\r\nHere we could have the `category.get(""name"")  directly from `mp_library->getKiwixLibrary()->getBookCategories()` ', 'comment_created': datetime.datetime(2023, 7, 11, 13, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1259772107, 'comment_body': 'Same here. \r\nWe may need to make `getLanguageSelfName` public to have the `selfName` but we should not use the libraryDumper.', 'comment_created': datetime.datetime(2023, 7, 11, 13, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1261430790, 'comment_body': 'Was hesitant with doing changes in libkiwix but done now!', 'comment_created': datetime.datetime(2023, 7, 12, 16, 26, 7, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1280698739, 'comment_body': 'This re initialize the`m_remoteLibrary`. Why we need this ?\r\nIf we update categories after languages, we will lost the known languages.', 'comment_created': datetime.datetime(2023, 8, 1, 14, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1280703911, 'comment_body': 'Could we set the builded url (before this line) with `opdsResponseFromPath` ?', 'comment_created': datetime.datetime(2023, 8, 1, 14, 8, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1280708603, 'comment_body': 'This line should probably be in another commit (or none?)', 'comment_created': datetime.datetime(2023, 8, 1, 14, 11, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1280713157, 'comment_body': 'This comment is for the commit message, not this line.\r\n\r\nCommit message say : `If local library is displayed, we get the categories from LibraryDumper`\r\nIt is false as the categories are taken from Library itself (and it is a good thing)', 'comment_created': datetime.datetime(2023, 8, 1, 14, 15, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1281803795, 'comment_body': 'This is what happens when I forget things to remove while editing commits in a rebase.\r\nThanks and fixed.', 'comment_created': datetime.datetime(2023, 8, 2, 11, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1281805875, 'comment_body': 'Im divided on whats the better way here\r\n1. Have 2 functions:\r\n`opdsResponseFromPath(path)` (which calls the next one with an empty query)\r\n`opdsResponseFromPath(path, query)`\r\n\r\n2. Have a default empty query parameter\r\n`opdsResponseFromPath(path, query = """")`\r\n\r\nI went with the 2nd one for now', 'comment_created': datetime.datetime(2023, 8, 2, 12, 2, 1, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1281809285, 'comment_body': 'None. Forgot to remove while changing methods ', 'comment_created': datetime.datetime(2023, 8, 2, 12, 5, 41, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1281829688, 'comment_body': 'Fixed in history', 'comment_created': datetime.datetime(2023, 8, 2, 12, 24, 2, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1281841146, 'comment_body': ""Yes, the second is better.\r\n\r\nThe first option is useful when you have a function `foo(bar)` existing and you want to add a optional parameter without breaking the ABI. If you add a parameter with a default value, you change the signature of the function and so you break the ABI. By adding a second method `foo(bar, baz)` and changing the implementation of `foo(bar)`, you don't break the ABI."", 'comment_created': datetime.datetime(2023, 8, 2, 12, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}]","[{'commit_sha': '28532d5dcac7dd75f04e1f8673e8da3fff30a6d1', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce140d2aa57bf476898b9566533d3145c59cb65c', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '574d1e2a296d7b853d00d7a45599b472d7b54ee3', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71f8c2f8f43cbab757e4482d2611c440c7251172', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cf40eccde22ca60d7c4921d0a9193b042965995', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5da7609cde33bc3b598f893e250de7439eb0261d', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}]",Nikhil Tanwar,26814569,2002nikhiltanwar@gmail.com,User,,29,,31,33
1445646612,Improved filters panel,"Fixes #958
Fixes #973 as well
Fixes #974 

This PR provides a new filter panel which:
 - allows multiple selections
 - allows to search on categories
 - clearly shows current selected choice
 - distinction between selected and unselected items
 
 
Multiple selections work for languages (both local and remote) and categories (requires https://github.com/kiwix/libkiwix/pull/974, remote filtering will obviously require that PR to be merged)
",True,965,https://api.github.com/repos/kiwix/kiwix-desktop/pulls/965,https://github.com/kiwix/kiwix-desktop/pull/965,closed,1679,434,37,17,28,52,0,0,[],2023-07-23 15:48:28+00:00,2023-10-04 15:48:53+00:00,6307225.0,"73 days, 0:00:25","[{'comment_id': 1321245442, 'comment_body': 'It seems we must add the above copyright somewhere (About page ?)', 'comment_created': datetime.datetime(2023, 9, 11, 9, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321260095, 'comment_body': 'Why not using `adjustSize()` method ?', 'comment_created': datetime.datetime(2023, 9, 11, 9, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321260924, 'comment_body': 'Why +2 ?\r\nIs it for the border ?\r\nPlease put a small comment to track what it is.', 'comment_created': datetime.datetime(2023, 9, 11, 9, 31, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321265523, 'comment_body': 'Do we need to change the PlaceHolder ?\r\nPlace holder should be handled by the LineEdit widget for us (displayed if no input, hidden if input)', 'comment_created': datetime.datetime(2023, 9, 11, 9, 33, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321266433, 'comment_body': ""Shouldn't be to `clearSelection` to emit the signal ?"", 'comment_created': datetime.datetime(2023, 9, 11, 9, 34, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321269072, 'comment_body': 'Why this remove and add searcher ?', 'comment_created': datetime.datetime(2023, 9, 11, 9, 36, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321280743, 'comment_body': ""We should probably clear `m_defaultItem` somewhere to be sure we don't keep a pointer to a previous selections."", 'comment_created': datetime.datetime(2023, 9, 11, 9, 43, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321298572, 'comment_body': ""I had (and probably still have) difficulties to get the difference between `m_choiceItems` and `choiceSelector`.\r\nBoth seems to contains a Widget and their purpose is not evident.\r\n\r\nI understand that `m_choiceItems` is about the current selected items. If it is the case, it would be better to rename it `m_selectedItems`. And why storing a `ChoiceItem` (which is a `QWidget`) in this list ?\r\nIsn't a duplication with `currentChoicesLayout` ?"", 'comment_created': datetime.datetime(2023, 9, 11, 9, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321300951, 'comment_body': ""This is already defined in `KiwixChoiceBox`, we shouldn't have two definition for the same thing."", 'comment_created': datetime.datetime(2023, 9, 11, 9, 58, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321305715, 'comment_body': 'Aren\'t we losing the ""other"" category ?', 'comment_created': datetime.datetime(2023, 9, 11, 10, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321306974, 'comment_body': 'This four lines seems to be copied a lot of time, I wonder if it is time to move them in a helper function.', 'comment_created': datetime.datetime(2023, 9, 11, 10, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321309979, 'comment_body': 'We should be prepared for list containing the same categories but in different orders.', 'comment_created': datetime.datetime(2023, 9, 11, 10, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321310399, 'comment_body': 'We lost the early exist if the languages is not actually changed.', 'comment_created': datetime.datetime(2023, 9, 11, 10, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321313072, 'comment_body': '`m_defaultItem` is not changed anymore.\r\nEither we remove it from the class or we have to handle it somehow.', 'comment_created': datetime.datetime(2023, 9, 11, 10, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321316193, 'comment_body': 'As this is used as placeholder, I would name them `language-searcher-placeholder`', 'comment_created': datetime.datetime(2023, 9, 11, 10, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321321931, 'comment_body': 'Is this really necessary ?', 'comment_created': datetime.datetime(2023, 9, 11, 10, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321326430, 'comment_body': 'Why we need a loop here ?\r\nIn which context we want to move more than one step above ?', 'comment_created': datetime.datetime(2023, 9, 11, 10, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321332115, 'comment_body': 'This comment is about the commit message.\r\n`Moved as per suggestion` is definitively not a good commit message.\r\nIt is nice to discard you about the choice made but it will not help us to understand the choice in few months.\r\nThe reason why you made this change is not ""It has been suggested to me"".\r\nThe suggestion come for a reason (and you have agree with it, else you would not do the change), it is better to directly write the reason.', 'comment_created': datetime.datetime(2023, 9, 11, 10, 26, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321333671, 'comment_body': 'Almost (all?) toolkit generate a click event on `release` mouse button. Why changing this ?', 'comment_created': datetime.datetime(2023, 9, 11, 10, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321340936, 'comment_body': 'All the things about the `all` or `*` is important. It would be better to have a specific commit instead of hidding it behind a ""Also made a few structural changes making everything consistent.""', 'comment_created': datetime.datetime(2023, 9, 11, 10, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1321345842, 'comment_body': ""I put a comment here because it is the only line I don't know the exact purpose but it is for the whole commit.\r\n\r\nThe commit is about removing item widget if corresponding choice is not valid (switch to local library with less choices). But how do you check the choice is valid ? You seem to never check the choice against the actual library displayed."", 'comment_created': datetime.datetime(2023, 9, 11, 10, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1322193053, 'comment_body': 'Yes we need to, when there are some items selected and the search is empty, it should not show up ', 'comment_created': datetime.datetime(2023, 9, 11, 23, 54, 23, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1322194408, 'comment_body': ""Searcher needs to be the last widget always, so i remove it and add again after adding a new widget. I could've use `insertWidget` too, was that better?\r\n\r\n[Widget] [Widget] [Searcher]\r\n\r\n*new widget is added*\r\n\r\n[Widget] [Widget] [New Widget] [Searcher]"", 'comment_created': datetime.datetime(2023, 9, 11, 23, 57, 20, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1322194852, 'comment_body': ""Yes, it's for a little border/margin. Will add a comment"", 'comment_created': datetime.datetime(2023, 9, 11, 23, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1322650471, 'comment_body': ""`insertWidget` is more consistent (at least it express what you intend. We don't want to remove the searcher, so let's not remove it)"", 'comment_created': datetime.datetime(2023, 9, 12, 8, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1322790454, 'comment_body': ""I'm concerned about that. We do have to integrate this third party piece of code?"", 'comment_created': datetime.datetime(2023, 9, 12, 10, 3, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kelson42', 'type': 'User'}, {'comment_id': 1323535025, 'comment_body': ""I thought of `clearSelections()` as just a utlity to remove everything (also used in `setSelections`) so went against putting a signal. Haven't added it yet but i'll do it if its needed/better structure"", 'comment_created': datetime.datetime(2023, 9, 12, 20, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1323535910, 'comment_body': 'In future commits, I did away from using m_defaultItem so this was removed', 'comment_created': datetime.datetime(2023, 9, 12, 20, 37, 14, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1323538023, 'comment_body': ""Honestly, right. thanks. It felt messy and duplicate - my initial thought was keeping a map so I can check selected items and remove/delete them easily.\r\nI've gone and completely removed `m_choiceItems` and using just the `choiceSelector` and `ui->currentChoices` instead - using object names. Hope this looks better?"", 'comment_created': datetime.datetime(2023, 9, 12, 20, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1323539762, 'comment_body': 'list is sorted before setting values now. So if there are same values, the order should be same and it equality check will work', 'comment_created': datetime.datetime(2023, 9, 12, 20, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1323540306, 'comment_body': ""Wasn't, was a consequence of overlooking after a rebase"", 'comment_created': datetime.datetime(2023, 9, 12, 20, 41, 22, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1323540737, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 12, 20, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1323541241, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 9, 12, 20, 42, 25, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1323555317, 'comment_body': ""Yep, I went big brain on this.\r\n\r\n`defaultSelection` will contain the current values set (in settings).\r\nWhat we know is the elements in `selections` should contain all of elements in `defaultSelection`. so whenever we get that an element exists in both, we remove that element from `defaultSelections`.\r\n\r\nIn the end, if there's any element left in `defaultSelection`,  it means that isnt available in `selections` (current list of languages/categories) - it must've come from online library.\r\n\r\nAt this point, sending the signal to update choices with new values will do 2 things:\r\n1. refresh library with our choices\r\n2. set the correct filter in settings (that was common to `defaultSelection` and `selections`)"", 'comment_created': datetime.datetime(2023, 9, 12, 20, 56, 36, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1323573574, 'comment_body': 'When the searcher is used with some term - only those elements are shown which match that term (others are not removed but hidden) so while navigating with keyboard to get to the actual element i need to skip the hidden ones', 'comment_created': datetime.datetime(2023, 9, 12, 21, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1323578848, 'comment_body': ""It's a pretty good example layout from QT - better than reinventing the wheel. I understand if adding this is a problem though but it's BSD licensed so maybe it's permissive enough?"", 'comment_created': datetime.datetime(2023, 9, 12, 21, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1323589212, 'comment_body': 'Is ""other"" not a real category?\r\nIn my experience, some books have ""other"" category and libkiwix will provide that entry', 'comment_created': datetime.datetime(2023, 9, 12, 21, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1324109157, 'comment_body': 'Indeed. We had to implement ""other"" on kiwix-desktop side has we were using a fixed list of categories. But now ""other"" is a real category.', 'comment_created': datetime.datetime(2023, 9, 13, 7, 43, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1327951248, 'comment_body': ""When the `lineEdit` is currently focused,\r\nif the outer widget is *pressed*, `lineEdit` loses focus and hides the options.\r\nIf I use `mouseRelease`, it will create a flicker effect: Pressing causes the `lineEdit` to lose focus and hide the options - Release causes the options to show up again.\r\n\r\nshowing the options on a `mousePress` doesn't allow this"", 'comment_created': datetime.datetime(2023, 9, 16, 11, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1332816777, 'comment_body': '`m_choiceItems` is never used now. We should remove it from the class.', 'comment_created': datetime.datetime(2023, 9, 21, 10, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1332822691, 'comment_body': ""Shouldn't we handle the case when `ui->currentChoices` doesn't contain `item->text()` ?"", 'comment_created': datetime.datetime(2023, 9, 21, 10, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1332824687, 'comment_body': '`chItem->deleteLater()` ?', 'comment_created': datetime.datetime(2023, 9, 21, 10, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1332828444, 'comment_body': 'It is ', 'comment_created': datetime.datetime(2023, 9, 21, 10, 17, 2, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1332829616, 'comment_body': 'Please add this explanation as a comment in the source code.', 'comment_created': datetime.datetime(2023, 9, 21, 10, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1332829978, 'comment_body': 'Ok', 'comment_created': datetime.datetime(2023, 9, 21, 10, 18, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1332830062, 'comment_body': 'Ok', 'comment_created': datetime.datetime(2023, 9, 21, 10, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1332843635, 'comment_body': ""> Yep, I went big brain on this.\r\n\r\nGoing big brain is a tricky way :)\r\nIf your reviewer don't understand what you do, you can be sure that you will not be able to understand it if few months. (And if you cannot, no one will do)\r\n\r\nWhy not going the basic way ?\r\n\r\n---\r\n\r\nIn fact, I even wonder if the commit is useful.\r\nIf I have selected `wikipedia` category when browsing a remote library, I make sens to still have the filtering when a go to the local library, even if I don't have local wikipedia books.\r\nAnd if we remove it, when I go back to the remote library, my filters will be changed automatically (and so I loose theme)\r\n\r\nFrom a UI\xa0perspective, I would say that we clear all filters or none when we move from a library to the other.\r\n"", 'comment_created': datetime.datetime(2023, 9, 21, 10, 30, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1334510247, 'comment_body': 'I had started with a `deleteLater` early on but seems like it doesn\'t delete just then. Later on, adding selection creates duplicates if the old aren\'t deleted, hence the `delete` usage.\r\nIt\'s also not inside a slot and sort of ""independent"", so I think it\'s safe to use delete. \r\n\r\n', 'comment_created': datetime.datetime(2023, 9, 22, 15, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1334515920, 'comment_body': ""We can surely do it, but is that condition even possible?\r\n\r\n`removeSelection` is called when the cross (x) button is clicked, `ui->currentChoices` should always contain that (since that's where the widget for cross would be placed?)"", 'comment_created': datetime.datetime(2023, 9, 22, 15, 12, 32, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1334582723, 'comment_body': 'Thank you, I agree about the tricky way :)\r\nI went with keeping the old list of values when changing catalog. https://github.com/kiwix/kiwix-desktop/pull/965/commits/df9873feb5dc8eaf9c45c10dc16c895a71e57292\r\n\r\nI think another way could be that we keep the settings as a map of values like\r\n{\r\nEnglish: eng\r\nFrench: fra\r\n}', 'comment_created': datetime.datetime(2023, 9, 22, 16, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}, {'comment_id': 1344279248, 'comment_body': 'This `QList<QPair<QString, QString>>` is a bit ugly (and everywhere).\r\nWe should rename it to something more meaningful. I suggest would `FilterList` (until I realize we have already `SelectionList` which does the same 😄 )\r\n\r\nBut we can keep a different name to help us remember that it may be different kind of things:\r\n- FilterList : A list of (potential) filters.\r\n- SelectionList: A list of selected filters.', 'comment_created': datetime.datetime(2023, 10, 3, 15, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mgautierfr', 'type': 'User'}, {'comment_id': 1345647949, 'comment_body': 'Done :>', 'comment_created': datetime.datetime(2023, 10, 4, 11, 34, 23, tzinfo=datetime.timezone.utc), 'commenter': 'juuz0', 'type': 'User'}]","[{'commit_sha': 'e6cb442dc6124dc62aef0b07a8b1bf62f31c6886', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22aa0ec56aae8e24df2aedd477367c3bc887e252', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bca0bb3a7adf87bd64dce4b449f06623a9fbed2a', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd371d2a47fa152cd70cecec97aae403834b5531', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccf1e505a182f0b4acdc6ee34b9d4ae801164509', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '146705ba931e6801214b23d6ea65b6764ce0a07f', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3a0542ba75632eea93112bfbd813442f8b6ace0', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00392aebfdf48dc83da06e07759cba0ec9896d9f', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '907a225abdaf014c95027b2bd05c18affe8ef9e2', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '877352d3bd575107cb836f595e27406a3d3392d0', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fce5b004b48ef94845b6a3c3e329cc450e7f031f', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c5bb8345e11dec589fd45a700a2a3bd6186f8fc', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c16f795d48aa33529f0cbd2967592a50cd46787', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cadac0a1e9c215a0b40369cff63d39bdc506aeb9', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a50f1e73be799fbcd48dcf17e43c568f9237a7ba', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2a6098eca733fbc19da2a5a968ba607a5520e9d', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f61635e7ca10133d7e4673659d64f1e13fab2bb7', 'committer_username': 'juuz0', 'committer_name': 'Nikhil Tanwar', 'committer_email': '2002nikhiltanwar@gmail.com', 'commit_date': datetime.datetime(2017, 3, 31, 9, 47, 14, tzinfo=datetime.timezone.utc)}]",Nikhil Tanwar,26814569,2002nikhiltanwar@gmail.com,User,,29,,31,33

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
112927375,kiwix-desktop,kiwix/kiwix-desktop,C++,97,740,19,34,1378,71,29,12,"[{'id': 1903152181, 'number': 1123, 'closed': None, 'created': datetime.datetime(2024, 6, 4, 14, 34, 6, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 322, 'deletions': 171, 'state': 'open'}, {'id': 1478266486, 'number': 989, 'closed': datetime.datetime(2023, 9, 11, 11, 49, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 17, 2, 11, 21, tzinfo=datetime.timezone.utc), 'time_taken': 2194676.0, 'time_delta': '25 days, 9:37:56', 'additions': 27, 'deletions': 5, 'state': 'closed'}, {'id': 1466256772, 'number': 981, 'closed': datetime.datetime(2023, 8, 10, 13, 8, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 8, 5, 35, 18, tzinfo=datetime.timezone.utc), 'time_taken': 199964.0, 'time_delta': '2 days, 7:32:44', 'additions': 8, 'deletions': 3, 'state': 'closed'}, {'id': 1466226128, 'number': 980, 'closed': datetime.datetime(2023, 8, 9, 18, 32, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 8, 4, 52, 25, tzinfo=datetime.timezone.utc), 'time_taken': 135623.0, 'time_delta': '1 day, 13:40:23', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1459629032, 'number': 970, 'closed': datetime.datetime(2023, 8, 4, 9, 2, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 2, 11, 35, 40, tzinfo=datetime.timezone.utc), 'time_taken': 163613.0, 'time_delta': '1 day, 21:26:53', 'additions': 39, 'deletions': 13, 'state': 'closed'}, {'id': 1445646612, 'number': 965, 'closed': datetime.datetime(2023, 10, 4, 15, 48, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 23, 15, 48, 28, tzinfo=datetime.timezone.utc), 'time_taken': 6307225.0, 'time_delta': '73 days, 0:00:25', 'additions': 1679, 'deletions': 434, 'state': 'closed'}, {'id': 1436383065, 'number': 963, 'closed': datetime.datetime(2023, 8, 11, 18, 8, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 16, 21, 20, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2234870.0, 'time_delta': '25 days, 20:47:50', 'additions': 156, 'deletions': 30, 'state': 'closed'}, {'id': 1434827163, 'number': 962, 'closed': datetime.datetime(2023, 7, 17, 9, 45, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 14, 13, 51, 51, tzinfo=datetime.timezone.utc), 'time_taken': 244427.0, 'time_delta': '2 days, 19:53:47', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1429171707, 'number': 960, 'closed': datetime.datetime(2023, 8, 2, 12, 50, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 11, 10, 23, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1909647.0, 'time_delta': '22 days, 2:27:27', 'additions': 196, 'deletions': 257, 'state': 'closed'}, {'id': 1424580368, 'number': 955, 'closed': datetime.datetime(2023, 7, 22, 8, 49, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 7, 12, 6, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1284236.0, 'time_delta': '14 days, 20:43:56', 'additions': 28, 'deletions': 18, 'state': 'closed'}, {'id': 1403033881, 'number': 946, 'closed': datetime.datetime(2023, 8, 1, 10, 31, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 22, 7, 46, 17, tzinfo=datetime.timezone.utc), 'time_taken': 3465929.0, 'time_delta': '40 days, 2:45:29', 'additions': 1856, 'deletions': 13365, 'state': 'closed'}, {'id': 1318371087, 'number': 936, 'closed': datetime.datetime(2023, 4, 19, 13, 38, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 18, 13, 37, 13, tzinfo=datetime.timezone.utc), 'time_taken': 86486.0, 'time_delta': '1 day, 0:01:26', 'additions': 0, 'deletions': 18, 'state': 'closed'}, {'id': 1271074194, 'number': 928, 'closed': datetime.datetime(2023, 3, 30, 13, 19, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 10, 12, 7, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1732334.0, 'time_delta': '20 days, 1:12:14', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1024516031, 'number': 870, 'closed': datetime.datetime(2022, 9, 18, 14, 55, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 12, 3, 46, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3236956.0, 'time_delta': '37 days, 11:09:16', 'additions': 8, 'deletions': 4, 'state': 'closed'}, {'id': 1019292623, 'number': 867, 'closed': datetime.datetime(2022, 8, 11, 6, 20, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 6, 8, 9, 12, tzinfo=datetime.timezone.utc), 'time_taken': 425469.0, 'time_delta': '4 days, 22:11:09', 'additions': 44, 'deletions': 7, 'state': 'closed'}, {'id': 1006386000, 'number': 865, 'closed': datetime.datetime(2023, 8, 12, 13, 46, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 16, 54, 16, tzinfo=datetime.timezone.utc), 'time_taken': 33252758.0, 'time_delta': '384 days, 20:52:38', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 994148047, 'number': 859, 'closed': datetime.datetime(2022, 7, 24, 10, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 12, 11, 7, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1033728.0, 'time_delta': '11 days, 23:08:48', 'additions': 40, 'deletions': 2, 'state': 'closed'}, {'id': 985486804, 'number': 855, 'closed': datetime.datetime(2022, 7, 2, 9, 58, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 2, 8, 42, 21, tzinfo=datetime.timezone.utc), 'time_taken': 4596.0, 'time_delta': '1:16:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 979935367, 'number': 853, 'closed': datetime.datetime(2022, 6, 27, 14, 4, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 11, 26, 50, tzinfo=datetime.timezone.utc), 'time_taken': 9470.0, 'time_delta': '2:37:50', 'additions': 13, 'deletions': 3, 'state': 'closed'}, {'id': 907155226, 'number': 831, 'closed': datetime.datetime(2022, 6, 16, 14, 4, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 12, 7, 13, 49, tzinfo=datetime.timezone.utc), 'time_taken': 5640646.0, 'time_delta': '65 days, 6:50:46', 'additions': 151, 'deletions': 89, 'state': 'closed'}, {'id': 876138370, 'number': 816, 'closed': datetime.datetime(2022, 3, 11, 15, 58, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 10, 8, 32, 57, tzinfo=datetime.timezone.utc), 'time_taken': 113108.0, 'time_delta': '1 day, 7:25:08', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 870276601, 'number': 811, 'closed': datetime.datetime(2022, 3, 5, 16, 24, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 3, 7, 1, 28, tzinfo=datetime.timezone.utc), 'time_taken': 206593.0, 'time_delta': '2 days, 9:23:13', 'additions': 6, 'deletions': 3, 'state': 'closed'}, {'id': 864733174, 'number': 803, 'closed': datetime.datetime(2022, 3, 3, 7, 2, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 26, 15, 18, 57, tzinfo=datetime.timezone.utc), 'time_taken': 402194.0, 'time_delta': '4 days, 15:43:14', 'additions': 18, 'deletions': 12, 'state': 'closed'}, {'id': 863548081, 'number': 800, 'closed': datetime.datetime(2022, 2, 25, 16, 55, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 25, 15, 10, 50, tzinfo=datetime.timezone.utc), 'time_taken': 6253.0, 'time_delta': '1:44:13', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 863385442, 'number': 799, 'closed': datetime.datetime(2022, 2, 25, 13, 16, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 25, 12, 15, 55, tzinfo=datetime.timezone.utc), 'time_taken': 3625.0, 'time_delta': '1:00:25', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 835487107, 'number': 777, 'closed': datetime.datetime(2022, 7, 12, 11, 10, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 30, 19, 29, 54, tzinfo=datetime.timezone.utc), 'time_taken': 14053224.0, 'time_delta': '162 days, 15:40:24', 'additions': 49, 'deletions': 13, 'state': 'closed'}, {'id': 830603345, 'number': 774, 'closed': datetime.datetime(2022, 2, 25, 11, 37, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 24, 16, 36, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2746892.0, 'time_delta': '31 days, 19:01:32', 'additions': 37, 'deletions': 1, 'state': 'closed'}, {'id': 828614263, 'number': 769, 'closed': datetime.datetime(2022, 1, 21, 17, 5, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 21, 15, 7, 22, tzinfo=datetime.timezone.utc), 'time_taken': 7115.0, 'time_delta': '1:58:35', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 824289008, 'number': 765, 'closed': datetime.datetime(2022, 1, 17, 8, 52, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 17, 8, 13, 4, tzinfo=datetime.timezone.utc), 'time_taken': 2352.0, 'time_delta': '0:39:12', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 813095310, 'number': 760, 'closed': datetime.datetime(2022, 1, 19, 19, 45, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 3, 12, 2, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1410217.0, 'time_delta': '16 days, 7:43:37', 'additions': 37, 'deletions': 8, 'state': 'closed'}, {'id': 800373534, 'number': 743, 'closed': datetime.datetime(2022, 2, 8, 20, 25, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 11, 4, 56, 4, tzinfo=datetime.timezone.utc), 'time_taken': 5153386.0, 'time_delta': '59 days, 15:29:46', 'additions': 293, 'deletions': 27, 'state': 'closed'}, {'id': 792411330, 'number': 735, 'closed': datetime.datetime(2022, 1, 5, 14, 22, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 1, 7, 46, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3047770.0, 'time_delta': '35 days, 6:36:10', 'additions': 190, 'deletions': 160, 'state': 'closed'}, {'id': 789536316, 'number': 730, 'closed': datetime.datetime(2021, 11, 30, 7, 39, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 26, 12, 42, 34, tzinfo=datetime.timezone.utc), 'time_taken': 327406.0, 'time_delta': '3 days, 18:56:46', 'additions': 4, 'deletions': 6, 'state': 'closed'}, {'id': 779676059, 'number': 721, 'closed': datetime.datetime(2021, 11, 15, 12, 9, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 12, 19, 35, 4, tzinfo=datetime.timezone.utc), 'time_taken': 232493.0, 'time_delta': '2 days, 16:34:53', 'additions': 28, 'deletions': 9, 'state': 'closed'}, {'id': 779043024, 'number': 719, 'closed': datetime.datetime(2021, 11, 16, 9, 28, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 12, 2, 42, 20, tzinfo=datetime.timezone.utc), 'time_taken': 369988.0, 'time_delta': '4 days, 6:46:28', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 772579615, 'number': 717, 'closed': datetime.datetime(2021, 11, 4, 9, 38, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 3, 16, 55, 17, tzinfo=datetime.timezone.utc), 'time_taken': 60215.0, 'time_delta': '16:43:35', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 772552631, 'number': 716, 'closed': datetime.datetime(2021, 11, 4, 9, 57, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 3, 16, 28, 59, tzinfo=datetime.timezone.utc), 'time_taken': 62929.0, 'time_delta': '17:28:49', 'additions': 11, 'deletions': 6, 'state': 'closed'}, {'id': 770482896, 'number': 712, 'closed': datetime.datetime(2021, 12, 11, 4, 57, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 1, 12, 34, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3428636.0, 'time_delta': '39 days, 16:23:56', 'additions': 33, 'deletions': 0, 'state': 'closed'}, {'id': 754459290, 'number': 702, 'closed': datetime.datetime(2021, 10, 9, 7, 6, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 9, 6, 55, 37, tzinfo=datetime.timezone.utc), 'time_taken': 644.0, 'time_delta': '0:10:44', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 730514584, 'number': 696, 'closed': datetime.datetime(2021, 10, 19, 9, 1, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 9, 12, 3, 9, tzinfo=datetime.timezone.utc), 'time_taken': 3445117.0, 'time_delta': '39 days, 20:58:37', 'additions': 472, 'deletions': 298, 'state': 'closed'}, {'id': 727448015, 'number': 689, 'closed': datetime.datetime(2021, 9, 7, 9, 24, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 5, 18, 38, 27, tzinfo=datetime.timezone.utc), 'time_taken': 139551.0, 'time_delta': '1 day, 14:45:51', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 727367971, 'number': 686, 'closed': datetime.datetime(2021, 9, 5, 20, 36, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 5, 9, 26, 1, tzinfo=datetime.timezone.utc), 'time_taken': 40225.0, 'time_delta': '11:10:25', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 722721788, 'number': 684, 'closed': datetime.datetime(2021, 9, 1, 9, 12, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 30, 18, 33, 40, tzinfo=datetime.timezone.utc), 'time_taken': 139140.0, 'time_delta': '1 day, 14:39:00', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 720740863, 'number': 682, 'closed': datetime.datetime(2021, 9, 18, 13, 58, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 26, 18, 15, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1971809.0, 'time_delta': '22 days, 19:43:29', 'additions': 33, 'deletions': 50, 'state': 'closed'}]"
72375068,libkiwix,kiwix/libkiwix,C++,56,116,10,46,2835,69,26,9,"[{'id': 1445621107, 'number': 974, 'closed': datetime.datetime(2023, 7, 26, 12, 57, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 23, 14, 26, 32, tzinfo=datetime.timezone.utc), 'time_taken': 253858.0, 'time_delta': '2 days, 22:30:58', 'additions': 90, 'deletions': 24, 'state': 'closed'}, {'id': 1441229219, 'number': 971, 'closed': datetime.datetime(2023, 7, 21, 17, 10, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 15, 9, 57, tzinfo=datetime.timezone.utc), 'time_taken': 180029.0, 'time_delta': '2 days, 2:00:29', 'additions': 9, 'deletions': 1, 'state': 'closed'}, {'id': 1429174168, 'number': 967, 'closed': datetime.datetime(2023, 7, 26, 12, 0, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 11, 10, 24, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1301720.0, 'time_delta': '15 days, 1:35:20', 'additions': 348, 'deletions': 60, 'state': 'closed'}, {'id': 1316680697, 'number': 934, 'closed': datetime.datetime(2023, 4, 18, 14, 58, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 17, 13, 51, 34, tzinfo=datetime.timezone.utc), 'time_taken': 90413.0, 'time_delta': '1 day, 1:06:53', 'additions': 9, 'deletions': 4, 'state': 'closed'}, {'id': 1281475883, 'number': 920, 'closed': datetime.datetime(2023, 3, 27, 20, 26, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 19, 4, 1, 24, tzinfo=datetime.timezone.utc), 'time_taken': 750321.0, 'time_delta': '8 days, 16:25:21', 'additions': 95, 'deletions': 37, 'state': 'closed'}, {'id': 1265212809, 'number': 907, 'closed': datetime.datetime(2023, 3, 15, 16, 13, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 6, 21, 41, 50, tzinfo=datetime.timezone.utc), 'time_taken': 757895.0, 'time_delta': '8 days, 18:31:35', 'additions': 34, 'deletions': 24, 'state': 'closed'}, {'id': 1238196907, 'number': 897, 'closed': datetime.datetime(2023, 3, 29, 14, 15, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 12, 23, 15, 5, tzinfo=datetime.timezone.utc), 'time_taken': 3855638.0, 'time_delta': '44 days, 15:00:38', 'additions': 996, 'deletions': 132, 'state': 'closed'}, {'id': 1237797093, 'number': 896, 'closed': datetime.datetime(2023, 3, 6, 11, 56, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 11, 17, 34, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1966937.0, 'time_delta': '22 days, 18:22:17', 'additions': 51, 'deletions': 28, 'state': 'closed'}, {'id': 1235357886, 'number': 891, 'closed': datetime.datetime(2023, 2, 10, 8, 33, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 9, 15, 59, 8, tzinfo=datetime.timezone.utc), 'time_taken': 59667.0, 'time_delta': '16:34:27', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 1229422933, 'number': 882, 'closed': datetime.datetime(2023, 2, 9, 15, 43, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 5, 12, 2, 43, tzinfo=datetime.timezone.utc), 'time_taken': 358869.0, 'time_delta': '4 days, 3:41:09', 'additions': 42, 'deletions': 4, 'state': 'closed'}, {'id': 1026650702, 'number': 808, 'closed': None, 'created': datetime.datetime(2022, 8, 15, 16, 45, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 72, 'deletions': 13, 'state': 'open'}, {'id': 1014092705, 'number': 805, 'closed': datetime.datetime(2022, 8, 3, 14, 11, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 1, 16, 30, 53, tzinfo=datetime.timezone.utc), 'time_taken': 164461.0, 'time_delta': '1 day, 21:41:01', 'additions': 109, 'deletions': 0, 'state': 'closed'}, {'id': 1002778039, 'number': 800, 'closed': datetime.datetime(2022, 7, 20, 19, 19, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 19, 6, 59, tzinfo=datetime.timezone.utc), 'time_taken': 723.0, 'time_delta': '0:12:03', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 998462557, 'number': 797, 'closed': None, 'created': datetime.datetime(2022, 7, 16, 16, 57, 37, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 309, 'deletions': 22, 'state': 'open'}, {'id': 995912300, 'number': 796, 'closed': datetime.datetime(2022, 8, 1, 13, 15, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 13, 20, 26, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1615722.0, 'time_delta': '18 days, 16:48:42', 'additions': 256, 'deletions': 26156, 'state': 'closed'}, {'id': 987562776, 'number': 794, 'closed': datetime.datetime(2022, 7, 6, 15, 5, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 15, 20, 33, tzinfo=datetime.timezone.utc), 'time_taken': 85508.0, 'time_delta': '23:45:08', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 978907472, 'number': 790, 'closed': datetime.datetime(2022, 6, 25, 5, 38, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 25, 4, 19, 22, tzinfo=datetime.timezone.utc), 'time_taken': 4746.0, 'time_delta': '1:19:06', 'additions': 3, 'deletions': 5, 'state': 'closed'}, {'id': 976910933, 'number': 786, 'closed': datetime.datetime(2022, 7, 20, 17, 41, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 23, 9, 54, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2360865.0, 'time_delta': '27 days, 7:47:45', 'additions': 23, 'deletions': 22, 'state': 'closed'}, {'id': 936506941, 'number': 772, 'closed': datetime.datetime(2022, 5, 15, 8, 2, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 14, 10, 26, 9, tzinfo=datetime.timezone.utc), 'time_taken': 77757.0, 'time_delta': '21:35:57', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 933462952, 'number': 770, 'closed': datetime.datetime(2022, 5, 14, 15, 5, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 11, 10, 25, 5, tzinfo=datetime.timezone.utc), 'time_taken': 276000.0, 'time_delta': '3 days, 4:40:00', 'additions': 17, 'deletions': 5, 'state': 'closed'}, {'id': 867777634, 'number': 721, 'closed': datetime.datetime(2022, 3, 9, 13, 33, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 1, 11, 45, 55, tzinfo=datetime.timezone.utc), 'time_taken': 697636.0, 'time_delta': '8 days, 1:47:16', 'additions': 26, 'deletions': 2, 'state': 'closed'}, {'id': 862602200, 'number': 717, 'closed': datetime.datetime(2022, 2, 25, 14, 52, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 24, 16, 12, 28, tzinfo=datetime.timezone.utc), 'time_taken': 81609.0, 'time_delta': '22:40:09', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 847840758, 'number': 711, 'closed': datetime.datetime(2022, 6, 25, 14, 22, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 11, 16, 33, 1, tzinfo=datetime.timezone.utc), 'time_taken': 11569746.0, 'time_delta': '133 days, 21:49:06', 'additions': 134, 'deletions': 60, 'state': 'closed'}, {'id': 842822444, 'number': 706, 'closed': datetime.datetime(2022, 2, 8, 20, 31, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 8, 13, 37, 49, tzinfo=datetime.timezone.utc), 'time_taken': 24850.0, 'time_delta': '6:54:10', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 840905848, 'number': 701, 'closed': datetime.datetime(2022, 3, 5, 16, 7, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 5, 17, 24, 21, tzinfo=datetime.timezone.utc), 'time_taken': 2414608.0, 'time_delta': '27 days, 22:43:28', 'additions': 57, 'deletions': 7, 'state': 'closed'}, {'id': 840862870, 'number': 700, 'closed': datetime.datetime(2022, 2, 6, 14, 12, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 5, 13, 11, 12, tzinfo=datetime.timezone.utc), 'time_taken': 90080.0, 'time_delta': '1 day, 1:01:20', 'additions': 11, 'deletions': 3, 'state': 'closed'}, {'id': 834666157, 'number': 697, 'closed': datetime.datetime(2022, 1, 29, 9, 1, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 28, 17, 28, 14, tzinfo=datetime.timezone.utc), 'time_taken': 55987.0, 'time_delta': '15:33:07', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 830431100, 'number': 691, 'closed': datetime.datetime(2022, 1, 24, 14, 43, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 24, 13, 56, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2824.0, 'time_delta': '0:47:04', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 828741528, 'number': 687, 'closed': datetime.datetime(2022, 1, 23, 19, 39, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 21, 17, 26, 37, tzinfo=datetime.timezone.utc), 'time_taken': 180792.0, 'time_delta': '2 days, 2:13:12', 'additions': 8, 'deletions': 3, 'state': 'closed'}, {'id': 822564483, 'number': 676, 'closed': datetime.datetime(2022, 1, 14, 15, 31, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 14, 11, 44, 40, tzinfo=datetime.timezone.utc), 'time_taken': 13596.0, 'time_delta': '3:46:36', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 817938735, 'number': 672, 'closed': datetime.datetime(2022, 1, 11, 14, 39, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 10, 19, 9, 26, tzinfo=datetime.timezone.utc), 'time_taken': 70223.0, 'time_delta': '19:30:23', 'additions': 70, 'deletions': 1, 'state': 'closed'}, {'id': 813284923, 'number': 668, 'closed': datetime.datetime(2022, 1, 9, 19, 16, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 3, 17, 8, 2, tzinfo=datetime.timezone.utc), 'time_taken': 526135.0, 'time_delta': '6 days, 2:08:55', 'additions': 56, 'deletions': 15, 'state': 'closed'}, {'id': 812585119, 'number': 666, 'closed': datetime.datetime(2022, 1, 3, 8, 46, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 1, 14, 33, 37, tzinfo=datetime.timezone.utc), 'time_taken': 151954.0, 'time_delta': '1 day, 18:12:34', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 809926441, 'number': 664, 'closed': datetime.datetime(2021, 12, 28, 19, 35, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 25, 19, 33, 6, tzinfo=datetime.timezone.utc), 'time_taken': 259331.0, 'time_delta': '3 days, 0:02:11', 'additions': 9, 'deletions': 8, 'state': 'closed'}, {'id': 761300879, 'number': 622, 'closed': datetime.datetime(2021, 12, 22, 17, 35, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 19, 10, 45, 18, tzinfo=datetime.timezone.utc), 'time_taken': 5554217.0, 'time_delta': '64 days, 6:50:17', 'additions': 146, 'deletions': 3, 'state': 'closed'}]"
