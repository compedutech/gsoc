pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
665175437,added assortativity/correlation,,True,42,https://api.github.com/repos/networkx/nx-guides/pulls/42,https://github.com/networkx/nx-guides/pull/42,closed,2176,0,12,15,4,29,0,0,[],2021-06-08 18:47:48+00:00,2021-08-02 21:54:04+00:00,4763176.0,"55 days, 3:06:16","[{'comment_id': 658044844, 'comment_body': ""Maybe a little more precise wording here to give readers a better idea of what's coming, something like:\r\n\r\n```suggestion\r\nIn this tutorial, we will go through the theory of assortativity and its measures.\r\nSpecifically, we'll focus on assortativity measures implemented in networkx:\r\ndegree assortativity, numeric assortativity, and attribute assortativity - as well\r\nas mixing matrices, which are closely releated to assortativity measures.\r\n```\r\n\r\nIn a perfect world we'd link all these back to the NX documentation with intersphinx, but since we're only using features supported in Jupyter notebook, we're limited to traditional external markdown links."", 'comment_created': datetime.datetime(2021, 6, 24, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 658060373, 'comment_body': ""Maybe a little more precise wording here to give readers a better idea of what's coming, something like:\r\n\r\n```suggestion\r\nSpecifically, we'll focus on assortativity measures implemented in networkx:\r\ndegree assortativity, numeric assortativity, and attribute assortativity - as well\r\nas mixing matrices, which are closely releated to assortativity measures.\r\n```\r\n\r\nIn a perfect world we'd link all these back to the NX documentation with intersphinx, but since we're only using features supported in Jupyter notebook, we're limited to traditional external markdown links."", 'comment_created': datetime.datetime(2021, 6, 24, 15, 35, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 658065667, 'comment_body': 'This might be a good section to mention some concrete examples. For example, IIRC the Newman paper has an example about a group of students with age and gender as node attributes to explain attribute assortativity; or using a social network to explain degree assortativity.\r\n\r\nNote that it doesn\'t need to be a detailed example (no code required), but any sort of example to give readers a better ""feel"" for assortativity measures would be an improvement I think!', 'comment_created': datetime.datetime(2021, 6, 24, 15, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 658067457, 'comment_body': 'It seems like ""similarity"" and ""sameness"" have been mashed together here a bit --- parameters don\'t have to be exactly the same to be considered similar correct? For example, a node with degree 8 is more similar to a node with degree 7 than a node with degree 3.', 'comment_created': datetime.datetime(2021, 6, 24, 15, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 658074588, 'comment_body': '`assortativity in networks` and maybe link to the wikipedia article? https://en.wikipedia.org/wiki/Assortativity', 'comment_created': datetime.datetime(2021, 6, 24, 15, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658075258, 'comment_body': '```suggestion\r\n$$ a[i] = \\sum\\limits_{j}e[i][j] $$\r\n```', 'comment_created': datetime.datetime(2021, 6, 24, 15, 52, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 658075400, 'comment_body': '```suggestion\r\n$$ b[i] = \\sum\\limits_{j}e[j][i]$$\r\n```', 'comment_created': datetime.datetime(2021, 6, 24, 15, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 658076445, 'comment_body': 'We will also see how to use these algorithms available in NetworkX at\r\n `algorithms/assortativity/correlation.py`.', 'comment_created': datetime.datetime(2021, 6, 24, 15, 54, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658079748, 'comment_body': ""This is another section that I think could benefit greatly from an example. The mathematical notations is very rigorous, but I think a simple code example of these terms on a mixing matrix would go a long way. I'm willing to bet that `a = m.sum(axis=0)` would help cement $$ a[i] = \\sum\\limits\\_{j}e[i][j] $$ for a lot of readers!"", 'comment_created': datetime.datetime(2021, 6, 24, 15, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 658080770, 'comment_body': 'from structural properties like the degree of a node to other properties like weight, capacity of a node.', 'comment_created': datetime.datetime(2021, 6, 24, 15, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658081135, 'comment_body': 'The subscript notation has already been used for indexing up to this point, so maybe this note should be moved higher up in the document.', 'comment_created': datetime.datetime(2021, 6, 24, 15, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 658082114, 'comment_body': 'Can you also define the set V and E?', 'comment_created': datetime.datetime(2021, 6, 24, 16, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658082692, 'comment_body': 'Let the property', 'comment_created': datetime.datetime(2021, 6, 24, 16, 1, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658083219, 'comment_body': 'the mixing matrix of this network', 'comment_created': datetime.datetime(2021, 6, 24, 16, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658084553, 'comment_body': 'We can normalize the mixing matrix with the number of ordered edges', 'comment_created': datetime.datetime(2021, 6, 24, 16, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658086262, 'comment_body': 'Using the normalised mixing matrix we can define,', 'comment_created': datetime.datetime(2021, 6, 24, 16, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658087009, 'comment_body': 'Can you check if the rendered math equation correct on circle ci?\r\nhttps://53-40210422-gh.circle-artifacts.com/0/site/_build/html/content/algorithms/assortativity/correlation.html#mixing-matrix', 'comment_created': datetime.datetime(2021, 6, 24, 16, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658088137, 'comment_body': 'maybe write in the Pearson correlation coefficient?', 'comment_created': datetime.datetime(2021, 6, 24, 16, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658088797, 'comment_body': 'implemented', 'comment_created': datetime.datetime(2021, 6, 24, 16, 9, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658089193, 'comment_body': 'implemented', 'comment_created': datetime.datetime(2021, 6, 24, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658090544, 'comment_body': 'Could you check the output at https://53-40210422-gh.circle-artifacts.com/0/site/_build/html/content/algorithms/assortativity/correlation.html#degree-assortativity-coefficient ?\r\n\r\nMaybe we can use markdown specific list, the tabbed ordered list seems to be a creating a code box.', 'comment_created': datetime.datetime(2021, 6, 24, 16, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658093640, 'comment_body': '.... compared to assortativity as a node in a directed network can have two distinct degrees, in-degree and out-degree of a node. (maybe link to G.in_degree and G.out_degree in networkx)', 'comment_created': datetime.datetime(2021, 6, 24, 16, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658094654, 'comment_body': 'implemented', 'comment_created': datetime.datetime(2021, 6, 24, 16, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658094831, 'comment_body': 'or available ', 'comment_created': datetime.datetime(2021, 6, 24, 16, 17, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658096894, 'comment_body': 'maybe use `blue` and `orange` instead of hex codes? makes it less ""scary"" IMO', 'comment_created': datetime.datetime(2021, 6, 24, 16, 20, 10, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658098833, 'comment_body': ""It would be nice to have some inline comments about what's happening here?\r\n"", 'comment_created': datetime.datetime(2021, 6, 24, 16, 22, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658101747, 'comment_body': '> Nodes are colored by the cluster property and labeled by num_prop property. We can observe that the initial network on the left side is completely assortative and its complement on the right side is completely disassortative. As we add edges between nodes of different (similar) attributes in the assortative (disassortative) network, the network tends to a non-assortative network, and the value of both the assortativity coefficients tends to 0', 'comment_created': datetime.datetime(2021, 6, 24, 16, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658104364, 'comment_body': ""They don't seems to be properly referenced at https://53-40210422-gh.circle-artifacts.com/0/site/_build/html/content/algorithms/assortativity/correlation.html"", 'comment_created': datetime.datetime(2021, 6, 24, 16, 26, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}, {'comment_id': 658104611, 'comment_body': 'Could you also run black through the code blocks in this notebook?', 'comment_created': datetime.datetime(2021, 6, 24, 16, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MridulS', 'type': 'User'}]","[{'commit_sha': '1eea6879d6d3c6eabaf5ef8cb7249500591af19a', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15c1c9b7bc3b58cf40f429908e9de5f648c133e4', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43d8ef740bd926843c0ddd3969d960945365bdf6', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b822b5b9286dd0af473f7eebf587485c429cbd12', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06b1792003b7cddd159b0d4e3b9173a5294fb79c', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5ebb370d4d0a513b38093f0d9387b2115a39b18', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14c791a7831b88d3bfd88df1c46307e2e2debbe6', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2218e9eadd7bcc43b0f8760d20dacc06fa0c9241', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9ac6cb1304404a37d8d5c611ba26d8e3217f981', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '591bc9bde2c9c207a0a0802f69b760f172627d6b', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6589a2b7ed9e3534fa9b4b855901975b94644644', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9ddb00d3bafa893d11a1031779d0c2880adcf66', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87938e7c75a8e714d6af764f96e2eb24a1b02ef0', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9cec8c76fbfedb201ad4db886e1bff5cb94c936', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a7cac2ac4d36b5f3f70cbfbda55c4cde7127677', 'committer_username': 'MridulS', 'committer_name': 'Mridul Seth', 'committer_email': 'github@mriduls.com', 'commit_date': datetime.datetime(2013, 9, 2, 10, 9, 44, tzinfo=datetime.timezone.utc)}]",Harshal Dupare,52428908,,User,,39,,85,54
689797502,Adding tutorial for dinitz algorithm,,True,46,https://api.github.com/repos/networkx/nx-guides/pulls/46,https://github.com/networkx/nx-guides/pull/46,closed,1257,1,9,54,2,17,0,1,[],2021-07-14 10:45:54+00:00,2022-01-18 19:06:41+00:00,16273247.0,"188 days, 8:20:47","[{'comment_id': 682649227, 'comment_body': '````suggestion\r\n```{code-cell} ipython3\r\n---\r\ntags: [hide-input]\r\n---\r\n# code to generate the first image goes here!\r\n```\r\n````', 'comment_created': datetime.datetime(2021, 8, 4, 14, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693839129, 'comment_body': ""```suggestion\r\nLet's say you want to send your friend some data over a peer-to-peer network.\r\nA peer-to-peer network allows you to send data specified paths subject to limits on\r\nthe amount of data per second that you can send between a pair of nodes in this network.\r\n```\r\nJust a suggestion to simplify wording - feel free to ignore!"", 'comment_created': datetime.datetime(2021, 8, 23, 10, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693841802, 'comment_body': ""Consider altering the wording here to tie this back to the maximum flow problem, e.g.\r\n\r\nThis is an example of the maximum flow problem --- we'd like to find the path through the network that maximizes the flow of information from us to our friend, subject to the bandwidth constraints between nodes in the network."", 'comment_created': datetime.datetime(2021, 8, 23, 10, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693881442, 'comment_body': ""```suggestion\r\nLet's say $N=(V, E)$ represents this peer-to-peer network with $V$ as the set of nodes \r\nwhere nodes are computers and $E$ as the set of edges where edge $uv \\in E$ if there is \r\na connection from node $u$ to node $v$ across which we can send data. There are also  \r\n2 special nodes: the ones representing you and your friend, let's label them $s$ & $t$\r\n(or the ***source*** and ***sink*** nodes), respectively.\r\n```\r\nJust a suggestion to condense the wording about s/t and source/sink.\r\n\r\nI think there should be some mention about the difference for Graphs/DiGraphs. The example used in this notebook is obviously directed, but is the max flow problem defined for the undirected case?"", 'comment_created': datetime.datetime(2021, 8, 23, 11, 17, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693889220, 'comment_body': ""```suggestion\r\nIn order to begin planning the paths on which we will be sending the data packets, \r\nwe need some way to represent this plan on the network. Observe that any plan will have \r\nto take up some capacity of the edges, so we can represent the plan by the values of \r\nthe capacity taken by it for each edge in E, let's call the plan as **flow**.Formally, \r\nwe can define flow as $f: E \\to \\mathbb{R}$ i.e. a mapping from edges $E$ to real numbers \r\ndenoting that we are sending data at rate $f(uv)$ through edge $uv\\in E$.\r\n```\r\nMinor suggestion to fix up some grammar"", 'comment_created': datetime.datetime(2021, 8, 23, 11, 30, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693889668, 'comment_body': '```suggestion\r\nNote that for a flow to be valid it must satisfy the following constraints:\r\n```\r\nMight as well use the more formal terminology that we just defined in the previous paragraph', 'comment_created': datetime.datetime(2021, 8, 23, 11, 31, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693890659, 'comment_body': ""```suggestion\r\n    The rate at which we send data from one node to another doesn't exceed\r\n    the capacity of the edge, formally $f_{uv} \\le c_{uv}$\r\n```"", 'comment_created': datetime.datetime(2021, 8, 23, 11, 32, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693894439, 'comment_body': ""I'd consider this the formal problem statement, so I think this sentence deserves special attention. Maybe something like:\r\n\r\nGiven this definition for flow and the p2p network connecting you and your friend, what is the maximum rate at which you can send data to your friend through the network?"", 'comment_created': datetime.datetime(2021, 8, 23, 11, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693895071, 'comment_body': '```suggestion\r\nfrom its neighbors so if we sum over the data rates from flow from those neighbors to \r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 11, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693897424, 'comment_body': ""Though it's pretty strongly implied, it might be nice to add an introductory sentence here just to relate the Dinitz algorithm to the maximum flow problem. E.g. `The [Dinitz algorthm](https://en.wikipedia.org/wiki/Dinic%27s_algorithm) is an algorithm that can be used to solve the maximum flow problem.`"", 'comment_created': datetime.datetime(2021, 8, 23, 11, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693902264, 'comment_body': 'This sentence was a little unclear to me and the grammar is a bit off I think', 'comment_created': datetime.datetime(2021, 8, 23, 11, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693903969, 'comment_body': 'Maybe a little preamble here:\r\n\r\n```suggestion\r\n### Algorithm\r\n\r\nGiven the above definitions, we can describe the Dinitz algorithm as follows:\r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 11, 54, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693909287, 'comment_body': ""```suggestion\r\nNote that dinitz works in $O(n^2m)$ strongly polynomial time, that is to say it \r\ndoesn't depend on the value of flow. It is noteworthy that its performance of biparted \r\n```\r\nThe wording here was a bit off... I *think* the suggestion captures what you were trying to say, but I could be wrong. Please correct me as you see fit!"", 'comment_created': datetime.datetime(2021, 8, 23, 12, 2, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693910313, 'comment_body': '```suggestion\r\nLets consider the example of shipping packages from warehouse to customers.\r\nThe packages must be routed through some \r\nintermediate shipping points, and we can only ship so many packages per day through \r\nany given point.\r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 12, 4, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693911521, 'comment_body': '```suggestion\r\nGiven these constraints, the shipping company would like to assign intermediate shipping points to customers so that the maximum number of packages are shipped each day.\r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 12, 6, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693913119, 'comment_body': '```suggestion\r\nThe number below each intermediate shipping point is the maximum number of shipments that \r\ncan be processed per day, and the edges represent which customers can be reached from a\r\ngiven shipping point.\r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 12, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693914817, 'comment_body': ""```suggestion\r\nLet's label the original warehouse $W$, the intermediate shipping points as \r\n$lw1, lw2, lw3$, and customers as $c1,c2...c20$.\r\n```"", 'comment_created': datetime.datetime(2021, 8, 23, 12, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}]","[{'commit_sha': '15c610a0270c11562cdf2af82ea65a5c28bb4d9c', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db6ead79d654c699e2d273a2f7a6fc8aae152f84', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f943c3d699e9a5f38ec136bb00cd51f84f5929c', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3889fc7df8768884ae627c5c6b598dfbcbd98c9e', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '705b0dfd1296ce529a61574870145b94bcd2fa6f', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76a63dddeff4cd08c8c1d87fc5bbec51d5122112', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcad358184b59ff87d7e2bdb8724f86aad17402e', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4158ebd38d7c223c73dd0616cfd628714f8abd50', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e38d3d4ef6f7e63676edfd455516cd32219c3741', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'babaca5fa406f95d2f46d2c810f2ee27c26e3e09', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '695b0e612fa585c7dfb4d24a6fadbd19565d1420', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d08f08091bd368220fb8993aec8164ae5176675', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c81ee2cb71d4455efa371c859ebac6e965b1404', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '227d84ac9df0074b6f5dd87b0a532bc0ceb24427', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec410ad90bedc1e070435df04c82c2fbc092b585', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35635aadac1b12221cd36b00bcc1f97e4e7e18a3', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce155489d12afb9bca7e28ba7669cbb567d2a5ed', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f652f697d778e2099e0b3e8e415417ec271ab2f', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ddcf6610eb755dee2cd4e56508f4354de7d98d', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba1bb72d4235ca1d2e50f834501e121a4238171a', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '841d0b5d521b44d70fcc62e3c6bb7b5cba6950e4', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '955afb0f30f9cfb3418bea674fcb3e88643c6a2a', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93b07be1f42f5f8ead9df6599e17cabfaca80b3f', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6496e851a7939594618cac80dc4397a24f3bf1f', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e98c9f4748fab57a33c7da46fc6f175b112d7ae', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93cdd4999c5000db355f1e5a3acade27798a97ba', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1491d22f3c256b8665271610f2d43368c0c5caaf', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c956506f6ce9f03a6715a2f493dddaf01fa3eb88', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca6acb6d3ee0648c041f2f45d3e30a5a0a0bdfe1', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0b363508b19a4c47ae4b0bd97da59e205213de7', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86fccc93e28f8259fd9639b2435c00b3d6b2313d', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b16da0693bb1ab029fa09c6e9dc1619c59945868', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27515b14b72184fb7b29148b882c936e94701657', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb213072cc744a49408b37cac803f022df202d3e', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b2e690d6252672f52e37187837e3b4a1cc5cee1', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21c5e042fd5977692ce06ea5b7ee04331c4aa092', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3ac081c5a0b427bcd1541e684bd284bb1aea66b', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95497c6118cd71d81daec7c8fa1f2c8887a06f8c', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f1d8e34a813dbfe58b2f442f27435c12bf23863', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '970276198b8fc7ea1cfb25725b87dbd9b35de788', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ddfd87c7edc419709cebc2467e3708e378ca34b', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6285db2045276104510deb5a3758fb66055e8bd', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '214cae7f80d57d544cc07eb2ed26ecb8a8d387b5', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54547ce3f133388bdb37ce30c131e458ac199664', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de893df4cb99c574406f9986307656a3c882c57f', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fd88cb76d32243a5fe8b8c5fac2603a27696471', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ed1197a2d7a00955553053a9fa31544b54e2423', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbe76db6b30937729d9254088b5ca4addf731ac8', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6a707aad752d7822f8ac39bb1bf67fbc10dd98f', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93f4f0f3694db592737289c94b2a3213f94b38bf', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67df750fdaad42f2f297787cfe7b721a8094bdb6', 'committer_username': 'MridulS', 'committer_name': 'Mridul Seth', 'committer_email': 'github@mriduls.com', 'commit_date': datetime.datetime(2013, 9, 2, 10, 9, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bd15e422762d117b04edf57aef51afab3e270fd', 'committer_username': 'MridulS', 'committer_name': 'Mridul Seth', 'committer_email': 'github@mriduls.com', 'commit_date': datetime.datetime(2013, 9, 2, 10, 9, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57b978fa7152db55a096c62d556fb6843873e437', 'committer_username': 'MridulS', 'committer_name': 'Mridul Seth', 'committer_email': 'github@mriduls.com', 'commit_date': datetime.datetime(2013, 9, 2, 10, 9, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40452d62828e68f3dd3b704dfed5975c827b38f9', 'committer_username': 'MridulS', 'committer_name': 'Mridul Seth', 'committer_email': 'github@mriduls.com', 'commit_date': datetime.datetime(2013, 9, 2, 10, 9, 44, tzinfo=datetime.timezone.utc)}]",Harshal Dupare,52428908,,User,,39,,85,54
689797502,Adding tutorial for dinitz algorithm,,True,46,https://api.github.com/repos/networkx/nx-guides/pulls/46,https://github.com/networkx/nx-guides/pull/46,closed,1257,1,9,54,2,17,0,1,[],2021-07-14 10:45:54+00:00,2022-01-18 19:06:41+00:00,16273247.0,"188 days, 8:20:47","[{'comment_id': 682649227, 'comment_body': '````suggestion\r\n```{code-cell} ipython3\r\n---\r\ntags: [hide-input]\r\n---\r\n# code to generate the first image goes here!\r\n```\r\n````', 'comment_created': datetime.datetime(2021, 8, 4, 14, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693839129, 'comment_body': ""```suggestion\r\nLet's say you want to send your friend some data over a peer-to-peer network.\r\nA peer-to-peer network allows you to send data specified paths subject to limits on\r\nthe amount of data per second that you can send between a pair of nodes in this network.\r\n```\r\nJust a suggestion to simplify wording - feel free to ignore!"", 'comment_created': datetime.datetime(2021, 8, 23, 10, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693841802, 'comment_body': ""Consider altering the wording here to tie this back to the maximum flow problem, e.g.\r\n\r\nThis is an example of the maximum flow problem --- we'd like to find the path through the network that maximizes the flow of information from us to our friend, subject to the bandwidth constraints between nodes in the network."", 'comment_created': datetime.datetime(2021, 8, 23, 10, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693881442, 'comment_body': ""```suggestion\r\nLet's say $N=(V, E)$ represents this peer-to-peer network with $V$ as the set of nodes \r\nwhere nodes are computers and $E$ as the set of edges where edge $uv \\in E$ if there is \r\na connection from node $u$ to node $v$ across which we can send data. There are also  \r\n2 special nodes: the ones representing you and your friend, let's label them $s$ & $t$\r\n(or the ***source*** and ***sink*** nodes), respectively.\r\n```\r\nJust a suggestion to condense the wording about s/t and source/sink.\r\n\r\nI think there should be some mention about the difference for Graphs/DiGraphs. The example used in this notebook is obviously directed, but is the max flow problem defined for the undirected case?"", 'comment_created': datetime.datetime(2021, 8, 23, 11, 17, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693889220, 'comment_body': ""```suggestion\r\nIn order to begin planning the paths on which we will be sending the data packets, \r\nwe need some way to represent this plan on the network. Observe that any plan will have \r\nto take up some capacity of the edges, so we can represent the plan by the values of \r\nthe capacity taken by it for each edge in E, let's call the plan as **flow**.Formally, \r\nwe can define flow as $f: E \\to \\mathbb{R}$ i.e. a mapping from edges $E$ to real numbers \r\ndenoting that we are sending data at rate $f(uv)$ through edge $uv\\in E$.\r\n```\r\nMinor suggestion to fix up some grammar"", 'comment_created': datetime.datetime(2021, 8, 23, 11, 30, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693889668, 'comment_body': '```suggestion\r\nNote that for a flow to be valid it must satisfy the following constraints:\r\n```\r\nMight as well use the more formal terminology that we just defined in the previous paragraph', 'comment_created': datetime.datetime(2021, 8, 23, 11, 31, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693890659, 'comment_body': ""```suggestion\r\n    The rate at which we send data from one node to another doesn't exceed\r\n    the capacity of the edge, formally $f_{uv} \\le c_{uv}$\r\n```"", 'comment_created': datetime.datetime(2021, 8, 23, 11, 32, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693894439, 'comment_body': ""I'd consider this the formal problem statement, so I think this sentence deserves special attention. Maybe something like:\r\n\r\nGiven this definition for flow and the p2p network connecting you and your friend, what is the maximum rate at which you can send data to your friend through the network?"", 'comment_created': datetime.datetime(2021, 8, 23, 11, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693895071, 'comment_body': '```suggestion\r\nfrom its neighbors so if we sum over the data rates from flow from those neighbors to \r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 11, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693897424, 'comment_body': ""Though it's pretty strongly implied, it might be nice to add an introductory sentence here just to relate the Dinitz algorithm to the maximum flow problem. E.g. `The [Dinitz algorthm](https://en.wikipedia.org/wiki/Dinic%27s_algorithm) is an algorithm that can be used to solve the maximum flow problem.`"", 'comment_created': datetime.datetime(2021, 8, 23, 11, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693902264, 'comment_body': 'This sentence was a little unclear to me and the grammar is a bit off I think', 'comment_created': datetime.datetime(2021, 8, 23, 11, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693903969, 'comment_body': 'Maybe a little preamble here:\r\n\r\n```suggestion\r\n### Algorithm\r\n\r\nGiven the above definitions, we can describe the Dinitz algorithm as follows:\r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 11, 54, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693909287, 'comment_body': ""```suggestion\r\nNote that dinitz works in $O(n^2m)$ strongly polynomial time, that is to say it \r\ndoesn't depend on the value of flow. It is noteworthy that its performance of biparted \r\n```\r\nThe wording here was a bit off... I *think* the suggestion captures what you were trying to say, but I could be wrong. Please correct me as you see fit!"", 'comment_created': datetime.datetime(2021, 8, 23, 12, 2, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693910313, 'comment_body': '```suggestion\r\nLets consider the example of shipping packages from warehouse to customers.\r\nThe packages must be routed through some \r\nintermediate shipping points, and we can only ship so many packages per day through \r\nany given point.\r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 12, 4, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693911521, 'comment_body': '```suggestion\r\nGiven these constraints, the shipping company would like to assign intermediate shipping points to customers so that the maximum number of packages are shipped each day.\r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 12, 6, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693913119, 'comment_body': '```suggestion\r\nThe number below each intermediate shipping point is the maximum number of shipments that \r\ncan be processed per day, and the edges represent which customers can be reached from a\r\ngiven shipping point.\r\n```', 'comment_created': datetime.datetime(2021, 8, 23, 12, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}, {'comment_id': 693914817, 'comment_body': ""```suggestion\r\nLet's label the original warehouse $W$, the intermediate shipping points as \r\n$lw1, lw2, lw3$, and customers as $c1,c2...c20$.\r\n```"", 'comment_created': datetime.datetime(2021, 8, 23, 12, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rossbar', 'type': 'User'}]","[{'commit_sha': '15c610a0270c11562cdf2af82ea65a5c28bb4d9c', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db6ead79d654c699e2d273a2f7a6fc8aae152f84', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f943c3d699e9a5f38ec136bb00cd51f84f5929c', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3889fc7df8768884ae627c5c6b598dfbcbd98c9e', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '705b0dfd1296ce529a61574870145b94bcd2fa6f', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76a63dddeff4cd08c8c1d87fc5bbec51d5122112', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcad358184b59ff87d7e2bdb8724f86aad17402e', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4158ebd38d7c223c73dd0616cfd628714f8abd50', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e38d3d4ef6f7e63676edfd455516cd32219c3741', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'babaca5fa406f95d2f46d2c810f2ee27c26e3e09', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '695b0e612fa585c7dfb4d24a6fadbd19565d1420', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d08f08091bd368220fb8993aec8164ae5176675', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c81ee2cb71d4455efa371c859ebac6e965b1404', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '227d84ac9df0074b6f5dd87b0a532bc0ceb24427', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec410ad90bedc1e070435df04c82c2fbc092b585', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35635aadac1b12221cd36b00bcc1f97e4e7e18a3', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce155489d12afb9bca7e28ba7669cbb567d2a5ed', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f652f697d778e2099e0b3e8e415417ec271ab2f', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ddcf6610eb755dee2cd4e56508f4354de7d98d', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba1bb72d4235ca1d2e50f834501e121a4238171a', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '841d0b5d521b44d70fcc62e3c6bb7b5cba6950e4', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '955afb0f30f9cfb3418bea674fcb3e88643c6a2a', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93b07be1f42f5f8ead9df6599e17cabfaca80b3f', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6496e851a7939594618cac80dc4397a24f3bf1f', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e98c9f4748fab57a33c7da46fc6f175b112d7ae', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93cdd4999c5000db355f1e5a3acade27798a97ba', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1491d22f3c256b8665271610f2d43368c0c5caaf', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c956506f6ce9f03a6715a2f493dddaf01fa3eb88', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca6acb6d3ee0648c041f2f45d3e30a5a0a0bdfe1', 'committer_username': 'harshal-dupare', 'committer_name': 'Harshal Dupare', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 1, 21, 9, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0b363508b19a4c47ae4b0bd97da59e205213de7', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86fccc93e28f8259fd9639b2435c00b3d6b2313d', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b16da0693bb1ab029fa09c6e9dc1619c59945868', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27515b14b72184fb7b29148b882c936e94701657', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb213072cc744a49408b37cac803f022df202d3e', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b2e690d6252672f52e37187837e3b4a1cc5cee1', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21c5e042fd5977692ce06ea5b7ee04331c4aa092', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3ac081c5a0b427bcd1541e684bd284bb1aea66b', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95497c6118cd71d81daec7c8fa1f2c8887a06f8c', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f1d8e34a813dbfe58b2f442f27435c12bf23863', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '970276198b8fc7ea1cfb25725b87dbd9b35de788', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ddfd87c7edc419709cebc2467e3708e378ca34b', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6285db2045276104510deb5a3758fb66055e8bd', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '214cae7f80d57d544cc07eb2ed26ecb8a8d387b5', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54547ce3f133388bdb37ce30c131e458ac199664', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de893df4cb99c574406f9986307656a3c882c57f', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fd88cb76d32243a5fe8b8c5fac2603a27696471', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ed1197a2d7a00955553053a9fa31544b54e2423', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbe76db6b30937729d9254088b5ca4addf731ac8', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6a707aad752d7822f8ac39bb1bf67fbc10dd98f', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93f4f0f3694db592737289c94b2a3213f94b38bf', 'committer_username': 'rossbar', 'committer_name': 'Ross Barnowski', 'committer_email': 'rossbar@caltech.edu', 'commit_date': datetime.datetime(2011, 12, 17, 0, 8, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67df750fdaad42f2f297787cfe7b721a8094bdb6', 'committer_username': 'MridulS', 'committer_name': 'Mridul Seth', 'committer_email': 'github@mriduls.com', 'commit_date': datetime.datetime(2013, 9, 2, 10, 9, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bd15e422762d117b04edf57aef51afab3e270fd', 'committer_username': 'MridulS', 'committer_name': 'Mridul Seth', 'committer_email': 'github@mriduls.com', 'commit_date': datetime.datetime(2013, 9, 2, 10, 9, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57b978fa7152db55a096c62d556fb6843873e437', 'committer_username': 'MridulS', 'committer_name': 'Mridul Seth', 'committer_email': 'github@mriduls.com', 'commit_date': datetime.datetime(2013, 9, 2, 10, 9, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40452d62828e68f3dd3b704dfed5975c827b38f9', 'committer_username': 'MridulS', 'committer_name': 'Mridul Seth', 'committer_email': 'github@mriduls.com', 'commit_date': datetime.datetime(2013, 9, 2, 10, 9, 44, tzinfo=datetime.timezone.utc)}]",Harshal Dupare,52428908,,User,,39,,85,54

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40210422,nx-guides,networkx/nx-guides,Python,105,188,26,19,118,29,4,12,"[{'id': 689797502, 'number': 46, 'closed': datetime.datetime(2022, 1, 18, 19, 6, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 10, 45, 54, tzinfo=datetime.timezone.utc), 'time_taken': 16273247.0, 'time_delta': '188 days, 8:20:47', 'additions': 1257, 'deletions': 1, 'state': 'closed'}, {'id': 665175437, 'number': 42, 'closed': datetime.datetime(2021, 8, 2, 21, 54, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 18, 47, 48, tzinfo=datetime.timezone.utc), 'time_taken': 4763176.0, 'time_delta': '55 days, 3:06:16', 'additions': 2176, 'deletions': 0, 'state': 'closed'}]"
