pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1009644897,zebra: add basic traffic control API,"This PR is supposed to add traffic control netlink APIs, contexts, and its main handling parts to zebra.",True,11694,https://api.github.com/repos/FRRouting/frr/pulls/11694,https://github.com/FRRouting/frr/pull/11694,closed,1602,0,15,3,16,26,2,0,"[{'name': 'zebra'}, {'name': 'master'}]",2022-07-27 13:08:15+00:00,2022-08-16 15:21:04+00:00,1735969.0,"20 days, 2:12:49","[{'comment_id': 931112161, 'comment_body': 'Need other types here', 'comment_created': datetime.datetime(2022, 7, 27, 14, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931112729, 'comment_body': ""I don't think this is the correct dump? You will need to write a new one for each RTM_* type you are adding likely"", 'comment_created': datetime.datetime(2022, 7, 27, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931113581, 'comment_body': 'Do we need to include this?', 'comment_created': datetime.datetime(2022, 7, 27, 14, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931113777, 'comment_body': 'Do we need to include this?', 'comment_created': datetime.datetime(2022, 7, 27, 14, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931114228, 'comment_body': ""To clarify, we don't make any other changes in this file so not sure why we need an include"", 'comment_created': datetime.datetime(2022, 7, 27, 14, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931115677, 'comment_body': 'Avoid changing the formatting here if possible and only touch code you are changing', 'comment_created': datetime.datetime(2022, 7, 27, 14, 12, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931116389, 'comment_body': 'does the header need to be added at the bottom here as well?', 'comment_created': datetime.datetime(2022, 7, 27, 14, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931117039, 'comment_body': 'spacing in this file is off, use `git clang format`', 'comment_created': datetime.datetime(2022, 7, 27, 14, 13, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931117453, 'comment_body': 'What is this pbr include here?', 'comment_created': datetime.datetime(2022, 7, 27, 14, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931119778, 'comment_body': 'You will likely need to make a `zebra/tc_socket.c/h`\r\n\r\nTake a look at `zebra/rule_socket.c/h` as an example', 'comment_created': datetime.datetime(2022, 7, 27, 14, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931120132, 'comment_body': 'Basically just servers as a way to make sure it complies on BSD.', 'comment_created': datetime.datetime(2022, 7, 27, 14, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931120967, 'comment_body': 'remove', 'comment_created': datetime.datetime(2022, 7, 27, 14, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931121064, 'comment_body': 'remove', 'comment_created': datetime.datetime(2022, 7, 27, 14, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931121269, 'comment_body': 'remove these logs', 'comment_created': datetime.datetime(2022, 7, 27, 14, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931121806, 'comment_body': 'remove this?', 'comment_created': datetime.datetime(2022, 7, 27, 14, 17, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931122595, 'comment_body': 'Add some more info to this debug', 'comment_created': datetime.datetime(2022, 7, 27, 14, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931123372, 'comment_body': 'break needed here?', 'comment_created': datetime.datetime(2022, 7, 27, 14, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931124375, 'comment_body': 'Remove ?', 'comment_created': datetime.datetime(2022, 7, 27, 14, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931126471, 'comment_body': 'I would remove this handler for now and just put the `dplane_ctx_fini()` in the calling function of this\r\n\r\nWe will add this handler back to another file when we have code to maintain internal state there', 'comment_created': datetime.datetime(2022, 7, 27, 14, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931127102, 'comment_body': 'yea just put dplane_ctx_fini() here FOR NOW', 'comment_created': datetime.datetime(2022, 7, 27, 14, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931127334, 'comment_body': 'Remove', 'comment_created': datetime.datetime(2022, 7, 27, 14, 22, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931127616, 'comment_body': 'Remove', 'comment_created': datetime.datetime(2022, 7, 27, 14, 22, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931127746, 'comment_body': 'Remove?', 'comment_created': datetime.datetime(2022, 7, 27, 14, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 931127979, 'comment_body': 'Remove', 'comment_created': datetime.datetime(2022, 7, 27, 14, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 934585504, 'comment_body': 'Can you post some output to show what this looks like when debugging?', 'comment_created': datetime.datetime(2022, 8, 1, 14, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 938887104, 'comment_body': '2022/08/05 14:39:49 ZEBRA: [PZNF6-7DWEC]  tcm [type=qdisc family=AF_UNSPEC (0) ifindex=7 handle=1007:0000]\r\n2022/08/05 14:39:49 ZEBRA: [PZNF6-7DWEC]  tcm [type=tclass family=AF_UNSPEC (0) ifindex=7 handle=1007:0001]\r\n2022/08/05 14:39:49 ZEBRA: [PZNF6-7DWEC]  tcm [type=tfilter family=AF_UNSPEC (0) ifindex=7 handle=0000:0001]', 'comment_created': datetime.datetime(2022, 8, 5, 14, 41, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sigeryang', 'type': 'User'}]","[{'commit_sha': 'e8b9bece855b2f48d08f3898c127da67dc872588', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '449a30edf6c91045f1419536672608519daec1b9', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8e718ce1f2ebf2769ae02883c85149ae61973c9', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}]",Siger Yang,13887988,,User,,58,,363,123
1028690640,zebra: fix deadcodes in tc dplane & netlink,zebra: fix deadcodes in tc dplane & netlink,True,11824,https://api.github.com/repos/FRRouting/frr/pulls/11824,https://github.com/FRRouting/frr/pull/11824,closed,2,3,2,2,2,0,3,0,"[{'name': 'zebra'}, {'name': 'bugfix'}, {'name': 'master'}]",2022-08-17 11:07:35+00:00,2022-08-17 13:59:37+00:00,10322.0,2:52:02,[],"[{'commit_sha': 'ec195c6603fbc94097a7d9a65886e6f9dd3368e0', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c9b85ac7a6b9fa3c55228b31071185e39c4c6f7', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}]",Siger Yang,13887988,,User,,58,,363,123
1030158633,zebra: trim unused tc dplane result values,zebra: trim unused tc dplane result values,True,11832,https://api.github.com/repos/FRRouting/frr/pulls/11832,https://github.com/FRRouting/frr/pull/11832,closed,1,1,1,1,1,0,2,0,"[{'name': 'zebra'}, {'name': 'master'}]",2022-08-18 15:38:01+00:00,2022-08-19 14:16:56+00:00,81535.0,22:38:55,[],"[{'commit_sha': '366eb2d0865d781250798d7bc9a9678fc75c9fe8', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}]",Siger Yang,13887988,,User,,58,,363,123
1046906721,zebra: traffic control state management & ZAPI,"This allows Zebra to manage QDISC, TCLASS, TFILTER in kernel and do cleaning
jobs when it starts up. Daemons are able to manage them through ZAPI messages.

### New ZAPI messages

```
ZEBRA_TC_QDISC_INSTALL
ZEBRA_TC_QDISC_UNINSTALL
ZEBRA_TC_CLASS_ADD
ZEBRA_TC_CLASS_DELETE
ZEBRA_TC_FILTER_ADD
ZEBRA_TC_FILTER_DELETE
```

### New state hashes on `zrouter`

```
qdisc_hash
class_hash
filter_hash
```

### ZAPI sample usage

* QDISC
```c
struct tc_qdisc q;
q.ifindex = ifidx;
q.kind = TC_QDISC_HTB;
zapi_tc_qdisc_encode(ZEBRA_TC_QDISC_INSTALL, s, &q);
```

* CLASS
```c
struct tc_class c;
c.ifindex = ifidx;
c.handle = 0x5678; // unique per interface, is in fact uint32_t, but the high 16 bits are fixed
c.kind = TC_QDISC_HTB;
c.u.htb.rate = 2500000; // bytes per sec
c.u.htb.ceil = 2500000; // bytes per sec
zapi_tc_class_encode(ZEBRA_TC_CLASS_ADD, s, &c);
```

* FILTER
```c
struct tc_filter f;
f.ifindex = 7; // interface index
f.handle = 0x1234abcd; // unique per interface
f.kind = TC_FILTER_FLOWER;
f.priority = 1;
f.protocol = ETH_P_IP;
f.u.flower.classid = 0x5678; // points to the class
f.u.flower.filter_bm = TC_FLOWER_DST_IP;
f.u.flower.dst_ip.prefixlen = 24;
f.u.flower.dst_ip.family = AF_INET;
inet_aton(""10.1.16.0"", &f.u.flower.dst_ip.u.prefix4);
zapi_tc_filter_encode(ZEBRA_TC_FILTER_ADD, s, &f);
```

### New topotests on `sharpd`:

Run `vtysh` command:
```
sharp tc dev r1-eth0 source 192.168.100.0/24 destination 192.168.101.0/24 ip-protocol tcp src-port 8000 dst-port 8001 rate 20mbit
```
and check whether TC components are installed successfully via iproute2 `tc`.",True,11908,https://api.github.com/repos/FRRouting/frr/pulls/11908,https://github.com/FRRouting/frr/pull/11908,closed,2527,311,32,6,31,30,5,0,"[{'name': 'tests'}, {'name': 'zebra'}, {'name': 'bugfix'}, {'name': 'sharp'}, {'name': 'master'}]",2022-09-05 22:50:53+00:00,2022-11-22 17:02:15+00:00,6718282.0,"77 days, 18:11:22","[{'comment_id': 963311937, 'comment_body': 'This was an idea occurred to me that let qdisc self include 2 hashes, and it also helps qdisc uninstall and isolate class,filter handle space between interfaces.\r\n\r\nNot sure whether it will look good if carried out.', 'comment_created': datetime.datetime(2022, 9, 6, 6, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sigeryang', 'type': 'User'}, {'comment_id': 963314967, 'comment_body': 'This is not correct indeed because handles are unique only per interface but not globally.', 'comment_created': datetime.datetime(2022, 9, 6, 6, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sigeryang', 'type': 'User'}, {'comment_id': 963323555, 'comment_body': 'I did these like what was done in pbr.\r\n\r\nIn fact I think a maybe better way to do these lookups is: `hash_key = jhash(class.interface, class.handle)`, and `hash_equal` also only tells the difference of these two fields. Then by interface & handle we can locate the class by hash immediately. We do extra `deep equal` to check equality and decide whether it is updated or newly added. Since from the viewpoint of kernel, `(interface/qdisc, handle)` should determine the unique class.\r\n\r\nSimilarly on filters. For qdiscs now we only support exact one per interface so only ifindex will be hashed.', 'comment_created': datetime.datetime(2022, 9, 6, 6, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sigeryang', 'type': 'User'}, {'comment_id': 963582367, 'comment_body': 'I decided to put filter bitmask here which is different from [PBR](https://github.com/FRRouting/frr/pull/11908/commits/dbb438bbc53f64d8adbbc7f3dadd096731e3b4cb#diff-8e201155f5dddc9da6c8e814185d401c7395e5a3e165fe235f9e3e614741b155L3178). I think it will be better if we know the precise filter conditions from daemons instead of checking whether they are the default values?', 'comment_created': datetime.datetime(2022, 9, 6, 11, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'sigeryang', 'type': 'User'}, {'comment_id': 963584971, 'comment_body': 'will it look fine if we ignore the first `ret`? since static analyzer is complaining this.', 'comment_created': datetime.datetime(2022, 9, 6, 11, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sigeryang', 'type': 'User'}, {'comment_id': 963647739, 'comment_body': 'seems folded by git clang-format, maybe i should change it?', 'comment_created': datetime.datetime(2022, 9, 6, 12, 31, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sigeryang', 'type': 'User'}, {'comment_id': 967119563, 'comment_body': 'yes ignore clang-format for these', 'comment_created': datetime.datetime(2022, 9, 9, 14, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sworleys', 'type': 'User'}, {'comment_id': 968649596, 'comment_body': 'Wrong copyright header\r\nhttps://docs.frrouting.org/projects/dev-guide/en/latest/workflow.html#source-file-header', 'comment_created': datetime.datetime(2022, 9, 12, 16, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968652837, 'comment_body': ""I'd recommend renaming this to something like `TC_STR`, that way it can easily be grepped for; in addition it gives a little more information about what the symbol might be used for, `TC` isn't very representative."", 'comment_created': datetime.datetime(2022, 9, 12, 16, 51, 56, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968711729, 'comment_body': 'Can this be removed?', 'comment_created': datetime.datetime(2022, 9, 12, 17, 32, 37, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968712895, 'comment_body': 'This is pretty big for inlining, perhaps it should be moved into a utility source file?', 'comment_created': datetime.datetime(2022, 9, 12, 17, 33, 27, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968713691, 'comment_body': 'delete', 'comment_created': datetime.datetime(2022, 9, 12, 17, 34, 1, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968795312, 'comment_body': ""Shouldn't we use a function to generate a handle, or if we have to hardcode it, used a named constant with a meaningful value?"", 'comment_created': datetime.datetime(2022, 9, 12, 18, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968795472, 'comment_body': 'As before', 'comment_created': datetime.datetime(2022, 9, 12, 18, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968796337, 'comment_body': ""Unless you work for VMWare, I don't think you can disclaim their copyright for them :)\r\n\r\nPlease use an appropriate license header."", 'comment_created': datetime.datetime(2022, 9, 12, 18, 49, 19, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968800842, 'comment_body': 'Can you undo the style change here? I know `clang-format` complains about it and/or changes it, but this one is an exception. It should be wrapped with comment pragmas like this:\r\n```\r\n/* clang-format off */\r\n...\r\n/* clang-format on */\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 18, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968810458, 'comment_body': 'Please fix the copyright header to use the one mentioned in the developer guide', 'comment_created': datetime.datetime(2022, 9, 12, 18, 57, 15, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968823217, 'comment_body': '`ceil = MAX(rate, ceil)`', 'comment_created': datetime.datetime(2022, 9, 12, 19, 3, 43, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968831144, 'comment_body': 'Please fix the copyright header', 'comment_created': datetime.datetime(2022, 9, 12, 19, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968833430, 'comment_body': 'Is it worth making a specific `MTYPE` for this?', 'comment_created': datetime.datetime(2022, 9, 12, 19, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 968834926, 'comment_body': 'No need to null check this, `XFREE` will do it', 'comment_created': datetime.datetime(2022, 9, 12, 19, 15, 17, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 970179451, 'comment_body': 'We generally try to avoid checking in commented code, can you remove this?', 'comment_created': datetime.datetime(2022, 9, 14, 0, 2, 57, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 970180309, 'comment_body': 'This in-place update suggests that not all fields relevant to class uniqueness relative to the `class_hash` are being hashed as part of the key function - otherwise, why would we need to re-insert the class that we have just found in the hash table?\r\n\r\nCan you explain what this code is doing?', 'comment_created': datetime.datetime(2022, 9, 14, 0, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 970180413, 'comment_body': 'Remove', 'comment_created': datetime.datetime(2022, 9, 14, 0, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 970180860, 'comment_body': 'This is the same hash insertion that happens in the other side of the branch - it looks like it can be removed from the branch entirely, and the branch collapsed to just control whether `dplane_tc_class_update` or `dplane_tc_class_add` is called.', 'comment_created': datetime.datetime(2022, 9, 14, 0, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 970181215, 'comment_body': 'Merge this `if` with the previous one', 'comment_created': datetime.datetime(2022, 9, 14, 0, 7, 51, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 970181596, 'comment_body': ""As before - 1) the `filter` is unconditionally inserted into `filter_hash` and thus can be removed from the branch entirely, and 2) in the positive side of the branch this is duplicated work since it's just been found in `hash_lookup` - why would we need to insert it again? Some explanation is needed here."", 'comment_created': datetime.datetime(2022, 9, 14, 0, 8, 50, tzinfo=datetime.timezone.utc), 'commenter': 'qlyoung', 'type': 'User'}, {'comment_id': 970764956, 'comment_body': ""The `hash_key` for `class` only involves its `ifindex` and `handle` (also holds true for `hash_equal`), since this is what the kernel treated as its uniqueness. \r\n\r\nSuppose that the hash already contains `class(ifindex=0, handle=0xa, rate=40Mbit)` and we want to add `class'(ifindex=0, handle=0xa, rate=60Mbit)`.\r\nFinding `class'` in hash (a class where `ifindex = class'.ifindex` and `handle = class'.handle`) will get us `class(ifindex=0, handle=0xa, rate=40Mbit)`, then we know it's an update; if we cannot find then it's a brand-new one. To sync this update, we inserted it so `class` is replaced by `class'` in the hash."", 'comment_created': datetime.datetime(2022, 9, 14, 12, 50, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sigeryang', 'type': 'User'}, {'comment_id': 970778387, 'comment_body': ""This line was originally put here in case we need some info from the old one to get update done, but it's now unnecessary:\r\n```c\r\nold = tc_filter_release(found, false);\r\n```\r\nSo good to put `hash_get` out of the branch.\r\n\r\nIn terms of the re-insertion, it would be explained similarly as class.\r\n"", 'comment_created': datetime.datetime(2022, 9, 14, 13, 2, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sigeryang', 'type': 'User'}, {'comment_id': 970789738, 'comment_body': 'Is there any way to use `ETH_P_IP` on BSD so such lines can be removed?', 'comment_created': datetime.datetime(2022, 9, 14, 13, 12, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sigeryang', 'type': 'User'}]","[{'commit_sha': '28ed33e40f785d391b96735436fe1edab612505b', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'daa602b593dc80b011a2355844c4cc7528f7a90d', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c317d3f246769e8261df0f9d1eb787bea7b5da06', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfacea4ae7001346ea5e21fce485db5255e809f6', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04bc334e7a2e08229000d208f3a5df970172dcd0', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2ae263bb70b76274e7df9cd0fe5472f0597bf3c', 'committer_username': 'sigeryang', 'committer_name': 'Siger Yang', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 20, 13, 53, 9, tzinfo=datetime.timezone.utc)}]",Siger Yang,13887988,,User,,58,,363,123

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
76599439,frr,FRRouting/frr,C,1221,3169,156,636,36249,535,57,189,"[{'id': 1135291279, 'number': 12390, 'closed': datetime.datetime(2022, 12, 6, 13, 57, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 24, 20, 14, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1014154.0, 'time_delta': '11 days, 17:42:34', 'additions': 147, 'deletions': 25, 'state': 'closed'}, {'id': 1046906721, 'number': 11908, 'closed': datetime.datetime(2022, 11, 22, 17, 2, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 5, 22, 50, 53, tzinfo=datetime.timezone.utc), 'time_taken': 6718282.0, 'time_delta': '77 days, 18:11:22', 'additions': 2527, 'deletions': 311, 'state': 'closed'}, {'id': 1030158633, 'number': 11832, 'closed': datetime.datetime(2022, 8, 19, 14, 16, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 18, 15, 38, 1, tzinfo=datetime.timezone.utc), 'time_taken': 81535.0, 'time_delta': '22:38:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1028690640, 'number': 11824, 'closed': datetime.datetime(2022, 8, 17, 13, 59, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 17, 11, 7, 35, tzinfo=datetime.timezone.utc), 'time_taken': 10322.0, 'time_delta': '2:52:02', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 1009644897, 'number': 11694, 'closed': datetime.datetime(2022, 8, 16, 15, 21, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 13, 8, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1735969.0, 'time_delta': '20 days, 2:12:49', 'additions': 1602, 'deletions': 0, 'state': 'closed'}]"
