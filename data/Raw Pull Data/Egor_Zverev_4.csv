pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
685555216,Add new osm datasets,"Incorporating changes made by @egozverev to date. These include extracting from OSM using the Overpass API:
* airports,
* seaports, 
* places, 
* rivers and lakes",False,42,https://api.github.com/repos/mapaction/pipeline_mvp/pulls/42,https://github.com/mapaction/pipeline_mvp/pull/42,closed,909,102,33,4,1,0,0,0,[],2021-07-07 22:36:01+00:00,2021-07-15 08:53:09+00:00,641828.0,"7 days, 10:17:08",[],"[{'commit_sha': '1dada85656a6db83370ebeee3e24e75c648c5621', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7c0a787f8cfa2079f927875cd17d119ca129ba5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76467281a721bbc34a641bb0a7d904886ba1c87f', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f62a1e76cc086c30eee666be74d9807a519baf2a', 'committer_username': 'andrewphilipsmith', 'committer_name': 'Andy Smith', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 30, 10, 38, 18, tzinfo=datetime.timezone.utc)}]",Andy Smith,5346065,,User,,24,,3,7
689776015,Refactoring,"This pull request is the first in the series of refactoring steps. Here the focus is on ""local"" changes. The overall architecture of the pipeline has not been changed yet. 

This pull request incorporates the changes from #42:

Added new osm datasets: 

* rivers
* lakes 
* airports 
* seaports
* places

After adding new osm datasets, a series of problems was discovered. Refactoring Stage 1 is a response to those problems. 

Refactoring Stage 1 Details:

* Separated output format validation schemas from the overpass request configs (they were both called schemas, which brought inconsistency to the code).
* Optimized config_parser.py  by generalizing most of the function there(reduced 523 strings of code to 250)
* Refactored operators: combined all (except for adm0 and adm1) transform operators into generic DefaultTransformOperator and all admin transform operators into generic admin transform operator.
* Refactored transforms (combined most of the transforms into generic default_transform)
* Refactored osm dags. Defined a united procedure to create osm dags (now there is only one file for osm dags).
* Allowed dag creation by countries rather than only data types.
* Fixed osm extract and made it robust. Previously, osm extracts often failed after reaching the quota of  osm overpass api requests. Now upon failing the extract tasks will be launched multiple times with an exponential delay. 
* Rewrote osm_query to support more sophisticated queries. Previously, only simple OR queries were supported. Now it is possible to create AND queries as well. 

Also, at this stage, a few new datasets were added:
* osm seas 
* admin2 and admin3 polygon boundaries. 

The work on this pull request was done entirely through Google Summer of Code 2021 program and corresponds to   [Extend Data Pipelines to cover more data products](https://summerofcode.withgoogle.com/projects/#6021028314087424) project.
",True,47,https://api.github.com/repos/mapaction/pipeline_mvp/pulls/47,https://github.com/mapaction/pipeline_mvp/pull/47,closed,2065,1123,103,60,1,14,0,1,[],2021-07-14 10:14:42+00:00,2021-08-12 00:19:31+00:00,2469889.0,"28 days, 14:04:49","[{'comment_id': 685567489, 'comment_body': 'Some more details (even if only very brief) about the contents of this PR, should be added to this file.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685569046, 'comment_body': 'Is the intention to have a collection of ""per-country"" dags and a collection of ""per-dataset"" dags? And then allow the user to select whichever option is most suitable for them? I like this in principle. At some point in the future, we might need to think about how this appears to the user in the Airflow environment.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 43, 30, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685569332, 'comment_body': 'A docstring would be helpful here. I had to check what ""catchup"" meant in this context.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 44, 22, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685570213, 'comment_body': 'This is a big improvement. However, it still feels like there ought to be a way to further generalise the calls to `HDXAdmTransformOperator` for these values `adm0_transform, adm1_transform, adm2_transform`\r\n\r\n```\r\n# Possible generalisation\r\nadm_params = [""adm0"", ""adm1"", ""adm2"", ""adm3""]\r\nadm_transforms = []\r\nfor admx in adm_params:\r\n\tadm_transforms.append(HDXAdmTransformOperator(\r\n\t\t...\r\n\t))\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 22, 46, 39, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685570977, 'comment_body': 'I like making the ""output"" explicit in the `output_schema_filename` üëç üòÑ ', 'comment_created': datetime.datetime(2021, 8, 9, 22, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685571730, 'comment_body': 'Two comments on this:\r\n* ""postprocess"" is not a very descriptive name for this method. ""common_adm_transform"" might be better (as far as I can see these are transform steps that are applied to all sources of admin data.)\r\n* Also can this method re-use `pipeline_plugin.transform.general_transformers.transform_to_crs` ? It seems to repeat a little.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685572154, 'comment_body': 'I don\'t think this is an ideal name. It isn\'t really a ""default"" transform as it contains source-specific behaviour. Though I\'m not sure what a better name would be.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685572892, 'comment_body': 'This comment is unclear. Does this mean that the purpose of the next line (line8) is to filter out any rows where the geometry is null? Is this the desired behaviour?', 'comment_created': datetime.datetime(2021, 8, 9, 22, 53, 36, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685953170, 'comment_body': 'I added very detailed log to #51 that contains all the changes introduced this summer. ', 'comment_created': datetime.datetime(2021, 8, 10, 12, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'egozverev', 'type': 'User'}, {'comment_id': 685955862, 'comment_body': 'Absolutely correct! Previously, it was possible to schedule only the dags related to some specific data type (like ""give me all railways for all the countries we have""). That is unusable in the emergency context, though, since you usually need the data for some specific country. ', 'comment_created': datetime.datetime(2021, 8, 10, 12, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'egozverev', 'type': 'User'}, {'comment_id': 687249732, 'comment_body': 'üëç ', 'comment_created': datetime.datetime(2021, 8, 11, 22, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687249927, 'comment_body': 'üëç ', 'comment_created': datetime.datetime(2021, 8, 11, 23, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687251389, 'comment_body': 'Now a JIRA issue here https://mapaction.atlassian.net/browse/DATAPIPE-95', 'comment_created': datetime.datetime(2021, 8, 11, 23, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687270003, 'comment_body': 'Not in this JIRA ticket https://mapaction.atlassian.net/browse/DATAPIPE-96', 'comment_created': datetime.datetime(2021, 8, 11, 23, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}]","[{'commit_sha': '1dada85656a6db83370ebeee3e24e75c648c5621', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7c0a787f8cfa2079f927875cd17d119ca129ba5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76467281a721bbc34a641bb0a7d904886ba1c87f', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '390335f25f362ef62b9cd48b395b99ce5c20bccf', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0ae303d2769c1ad6f5da6635b7acafd0e136b71', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48b8eab121f89d9a468fc3685799f1f94bc2072a', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c774239a921a188a77631f07575d85e87d9f2113', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e93418c01e39520b11bbd99563be7fe79d5ba3f', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b273d3bae72fe63758f5359c3f562c2548b8630', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f42872cbbb32ca972e96a9d9f79699b56dd7bfc4', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b24c3e8843b3adb1805555f77973b4a4f329fe4', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2605302d5e07b0a2140daa63b58642d93edb922', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aad7ca19b348db7ffc02721802f61ab42fef8563', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6067990af062cf94c0b2253ddb495437d6564854', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c70dfda90cb5010e4984a1dd6455929eab9aa8a', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe0b794b68708ee39dbc95518d7b678556ce724b', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfea43c0019a95bcb41400102bf31f37e643659f', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6a28cc63bf6fb717c69e4120a66a76ddddee1ae', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98fea8c3b235b510c438bb43bd6d456ddaeb12ee', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cebf49e2c57741c746d319f51e6ba66e94d32bfd', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70496ab0d731da0533ad372a1f78f158de3c7db', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea6316c8e7266b0c3ce0cda7439ff52cbf159b62', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd088b35f46e32685d285c538135dd52dc34948f6', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf7b389bce97f5302157d1b52fb29600b5af2dbe', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4ee362565f675eddba40ba5bea60389845a24f3', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '614d6af68ff283a440d2bf526b9f36167f807992', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '441d7cce703bf7a1d21f913084824e78f2e75469', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c315a7953ae9e06f181332e19f705b9ad7194d3', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9c14800636e804e60ac6d5b3257bbbfff2f4d98', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a51332875298452df3f3af23c787d53a4445cfde', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3672409ae79018fcaa146aa2b38df215f5e289ce', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81de6446d31d391ea9b22099c35863c24e8ceb8d', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94f753101c29625b770dd0a4cc6d82cb971ae285', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8524a9637d5242a53ef418df061d7818857fe055', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc9530d92f8d81fc03f27d9a7e4ad04152d6045d', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c77a3ff9c6d2e47ba8c5ba8a5c605d1bc648be5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cbb95a0a3a247190c99021a5f6b5b24c8209cf0', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0172b5b18234bfb8cbc895552b5d6cd106e9afa', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac7acd82ddd294ea7725b869f59e8e770b9baa21', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39414a762415e1870b9454f8497bd21c2b178657', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32c77eaa9fc8cf61f38a17310b4fe8eb7e1efd3c', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f61fc8e0f003b65347e74f36dfb70f3cf2fd8da', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1f490eb93dcfe2ea34a20155d9d3c7a1fe1385c', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de32879d8915f35cae786074556319133a7b683e', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea7b472a6e1ae50dd308fd4931801598f60856e3', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95c0f03d3bc9d9a91f31dd06b971320400e7a619', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8144b09fe37ee327a9b1ba934fb86338d4a11ed5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad6d7b2f5fc96e80c589e62dc4d56d63632df5b8', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '398340e0ad23cda6e1ce8aae3ec3832737bbb251', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3ac194ef83087a55977917cc4536559f4165ee', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ef297c8a152bb0375fcedba04bc2b6db845c982', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f76af4db44af58f45318d7131d64f860350de774', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51db1e3b99c0782a1f262131a99886707f54aedf', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e692c754d501c8bc5d780f670fd5212a6e98a3e8', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7692df08c63241e854fe7bd90db1e5daf03bc2', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '187eb258f48cf5334c2c5937339c5c3daa677f70', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60acef97d31181c5c8d9acef1505932fc71ad685', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbed346c957d1b034eda26d66a6d475de9337dc', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82950b7b80312ec66de3918ae5fbda6d83f6ee7b', 'committer_username': 'andrewphilipsmith', 'committer_name': 'Andy Smith', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 30, 10, 38, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05b70f52d5ebda27896ab934c1594457184a7513', 'committer_username': 'andrewphilipsmith', 'committer_name': 'Andy Smith', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 30, 10, 38, 18, tzinfo=datetime.timezone.utc)}]",Egor Zverev,37687005,,User,,14,,2,6
689776015,Refactoring,"This pull request is the first in the series of refactoring steps. Here the focus is on ""local"" changes. The overall architecture of the pipeline has not been changed yet. 

This pull request incorporates the changes from #42:

Added new osm datasets: 

* rivers
* lakes 
* airports 
* seaports
* places

After adding new osm datasets, a series of problems was discovered. Refactoring Stage 1 is a response to those problems. 

Refactoring Stage 1 Details:

* Separated output format validation schemas from the overpass request configs (they were both called schemas, which brought inconsistency to the code).
* Optimized config_parser.py  by generalizing most of the function there(reduced 523 strings of code to 250)
* Refactored operators: combined all (except for adm0 and adm1) transform operators into generic DefaultTransformOperator and all admin transform operators into generic admin transform operator.
* Refactored transforms (combined most of the transforms into generic default_transform)
* Refactored osm dags. Defined a united procedure to create osm dags (now there is only one file for osm dags).
* Allowed dag creation by countries rather than only data types.
* Fixed osm extract and made it robust. Previously, osm extracts often failed after reaching the quota of  osm overpass api requests. Now upon failing the extract tasks will be launched multiple times with an exponential delay. 
* Rewrote osm_query to support more sophisticated queries. Previously, only simple OR queries were supported. Now it is possible to create AND queries as well. 

Also, at this stage, a few new datasets were added:
* osm seas 
* admin2 and admin3 polygon boundaries. 

The work on this pull request was done entirely through Google Summer of Code 2021 program and corresponds to   [Extend Data Pipelines to cover more data products](https://summerofcode.withgoogle.com/projects/#6021028314087424) project.
",True,47,https://api.github.com/repos/mapaction/pipeline_mvp/pulls/47,https://github.com/mapaction/pipeline_mvp/pull/47,closed,2065,1123,103,60,1,14,0,1,[],2021-07-14 10:14:42+00:00,2021-08-12 00:19:31+00:00,2469889.0,"28 days, 14:04:49","[{'comment_id': 685567489, 'comment_body': 'Some more details (even if only very brief) about the contents of this PR, should be added to this file.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685569046, 'comment_body': 'Is the intention to have a collection of ""per-country"" dags and a collection of ""per-dataset"" dags? And then allow the user to select whichever option is most suitable for them? I like this in principle. At some point in the future, we might need to think about how this appears to the user in the Airflow environment.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 43, 30, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685569332, 'comment_body': 'A docstring would be helpful here. I had to check what ""catchup"" meant in this context.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 44, 22, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685570213, 'comment_body': 'This is a big improvement. However, it still feels like there ought to be a way to further generalise the calls to `HDXAdmTransformOperator` for these values `adm0_transform, adm1_transform, adm2_transform`\r\n\r\n```\r\n# Possible generalisation\r\nadm_params = [""adm0"", ""adm1"", ""adm2"", ""adm3""]\r\nadm_transforms = []\r\nfor admx in adm_params:\r\n\tadm_transforms.append(HDXAdmTransformOperator(\r\n\t\t...\r\n\t))\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 22, 46, 39, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685570977, 'comment_body': 'I like making the ""output"" explicit in the `output_schema_filename` üëç üòÑ ', 'comment_created': datetime.datetime(2021, 8, 9, 22, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685571730, 'comment_body': 'Two comments on this:\r\n* ""postprocess"" is not a very descriptive name for this method. ""common_adm_transform"" might be better (as far as I can see these are transform steps that are applied to all sources of admin data.)\r\n* Also can this method re-use `pipeline_plugin.transform.general_transformers.transform_to_crs` ? It seems to repeat a little.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685572154, 'comment_body': 'I don\'t think this is an ideal name. It isn\'t really a ""default"" transform as it contains source-specific behaviour. Though I\'m not sure what a better name would be.', 'comment_created': datetime.datetime(2021, 8, 9, 22, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685572892, 'comment_body': 'This comment is unclear. Does this mean that the purpose of the next line (line8) is to filter out any rows where the geometry is null? Is this the desired behaviour?', 'comment_created': datetime.datetime(2021, 8, 9, 22, 53, 36, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685953170, 'comment_body': 'I added very detailed log to #51 that contains all the changes introduced this summer. ', 'comment_created': datetime.datetime(2021, 8, 10, 12, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'egozverev', 'type': 'User'}, {'comment_id': 685955862, 'comment_body': 'Absolutely correct! Previously, it was possible to schedule only the dags related to some specific data type (like ""give me all railways for all the countries we have""). That is unusable in the emergency context, though, since you usually need the data for some specific country. ', 'comment_created': datetime.datetime(2021, 8, 10, 12, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'egozverev', 'type': 'User'}, {'comment_id': 687249732, 'comment_body': 'üëç ', 'comment_created': datetime.datetime(2021, 8, 11, 22, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687249927, 'comment_body': 'üëç ', 'comment_created': datetime.datetime(2021, 8, 11, 23, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687251389, 'comment_body': 'Now a JIRA issue here https://mapaction.atlassian.net/browse/DATAPIPE-95', 'comment_created': datetime.datetime(2021, 8, 11, 23, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687270003, 'comment_body': 'Not in this JIRA ticket https://mapaction.atlassian.net/browse/DATAPIPE-96', 'comment_created': datetime.datetime(2021, 8, 11, 23, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}]","[{'commit_sha': '1dada85656a6db83370ebeee3e24e75c648c5621', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7c0a787f8cfa2079f927875cd17d119ca129ba5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76467281a721bbc34a641bb0a7d904886ba1c87f', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '390335f25f362ef62b9cd48b395b99ce5c20bccf', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0ae303d2769c1ad6f5da6635b7acafd0e136b71', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48b8eab121f89d9a468fc3685799f1f94bc2072a', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c774239a921a188a77631f07575d85e87d9f2113', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e93418c01e39520b11bbd99563be7fe79d5ba3f', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b273d3bae72fe63758f5359c3f562c2548b8630', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f42872cbbb32ca972e96a9d9f79699b56dd7bfc4', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b24c3e8843b3adb1805555f77973b4a4f329fe4', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2605302d5e07b0a2140daa63b58642d93edb922', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aad7ca19b348db7ffc02721802f61ab42fef8563', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6067990af062cf94c0b2253ddb495437d6564854', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c70dfda90cb5010e4984a1dd6455929eab9aa8a', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe0b794b68708ee39dbc95518d7b678556ce724b', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfea43c0019a95bcb41400102bf31f37e643659f', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6a28cc63bf6fb717c69e4120a66a76ddddee1ae', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98fea8c3b235b510c438bb43bd6d456ddaeb12ee', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cebf49e2c57741c746d319f51e6ba66e94d32bfd', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70496ab0d731da0533ad372a1f78f158de3c7db', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea6316c8e7266b0c3ce0cda7439ff52cbf159b62', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd088b35f46e32685d285c538135dd52dc34948f6', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf7b389bce97f5302157d1b52fb29600b5af2dbe', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4ee362565f675eddba40ba5bea60389845a24f3', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '614d6af68ff283a440d2bf526b9f36167f807992', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '441d7cce703bf7a1d21f913084824e78f2e75469', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c315a7953ae9e06f181332e19f705b9ad7194d3', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9c14800636e804e60ac6d5b3257bbbfff2f4d98', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a51332875298452df3f3af23c787d53a4445cfde', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3672409ae79018fcaa146aa2b38df215f5e289ce', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81de6446d31d391ea9b22099c35863c24e8ceb8d', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94f753101c29625b770dd0a4cc6d82cb971ae285', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8524a9637d5242a53ef418df061d7818857fe055', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc9530d92f8d81fc03f27d9a7e4ad04152d6045d', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c77a3ff9c6d2e47ba8c5ba8a5c605d1bc648be5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cbb95a0a3a247190c99021a5f6b5b24c8209cf0', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0172b5b18234bfb8cbc895552b5d6cd106e9afa', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac7acd82ddd294ea7725b869f59e8e770b9baa21', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39414a762415e1870b9454f8497bd21c2b178657', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32c77eaa9fc8cf61f38a17310b4fe8eb7e1efd3c', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f61fc8e0f003b65347e74f36dfb70f3cf2fd8da', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1f490eb93dcfe2ea34a20155d9d3c7a1fe1385c', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de32879d8915f35cae786074556319133a7b683e', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea7b472a6e1ae50dd308fd4931801598f60856e3', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95c0f03d3bc9d9a91f31dd06b971320400e7a619', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8144b09fe37ee327a9b1ba934fb86338d4a11ed5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad6d7b2f5fc96e80c589e62dc4d56d63632df5b8', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '398340e0ad23cda6e1ce8aae3ec3832737bbb251', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3ac194ef83087a55977917cc4536559f4165ee', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ef297c8a152bb0375fcedba04bc2b6db845c982', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f76af4db44af58f45318d7131d64f860350de774', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51db1e3b99c0782a1f262131a99886707f54aedf', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e692c754d501c8bc5d780f670fd5212a6e98a3e8', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7692df08c63241e854fe7bd90db1e5daf03bc2', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '187eb258f48cf5334c2c5937339c5c3daa677f70', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60acef97d31181c5c8d9acef1505932fc71ad685', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbed346c957d1b034eda26d66a6d475de9337dc', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82950b7b80312ec66de3918ae5fbda6d83f6ee7b', 'committer_username': 'andrewphilipsmith', 'committer_name': 'Andy Smith', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 30, 10, 38, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05b70f52d5ebda27896ab934c1594457184a7513', 'committer_username': 'andrewphilipsmith', 'committer_name': 'Andy Smith', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 30, 10, 38, 18, tzinfo=datetime.timezone.utc)}]",Egor Zverev,37687005,,User,,14,,2,6
686138248,added pipeline architecture visualization ,"In this pull request, I introduce a visualization of pipeline architecture.

This aims to reach several goals:

1. I've created a holistic picture of what each and single piece of the pipeline code does for myself. But besides that also would be so much less painful for new developers to start working on the pipeline if they could reference to the architecture doc.
2. Prepare to code refactoring. After understanding how pipeline parts interact with each other it's worth thinking if there is some sense in changing something about fundamental nature of this interaction. It's important to think about that right now when the pipeline is still a baby since bringing any fundamental changes years later will become a problem.
3. Find possible bugs in the pipeline architecture. I've found at least one such bug. Schema folder contains two types of schemas that mean completely different things. First one is output format for hdx transform. Second one is request format for osm extract. These entities must be separated.",True,43,https://api.github.com/repos/mapaction/pipeline_mvp/pulls/43,https://github.com/mapaction/pipeline_mvp/pull/43,closed,750,0,7,6,2,0,1,1,[{'name': 'documentation'}],2021-07-08 15:54:29+00:00,2021-08-09 08:23:07+00:00,2737718.0,"31 days, 16:28:38",[],"[{'commit_sha': '65720fc49dc9274de7654924b3e103416e65c24e', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '182a830d01dfe49a3b2f0ad278e564082e387629', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62e535f2515fdacb181457b4b8bc9e6351cfbbae', 'committer_username': 'felnne', 'committer_name': 'Felix Fennell', 'committer_email': None, 'commit_date': datetime.datetime(2014, 6, 10, 9, 29, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc928aef42e7b15871b63a6c0d67ce91f277696e', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '333e293e35c48785b225efe58b7eb1ad5c11cc9e', 'committer_username': 'andrewphilipsmith', 'committer_name': 'Andy Smith', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 30, 10, 38, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc55e8a908608692be654556c5fbce994bc42f7b', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}]",Egor Zverev,37687005,,User,,14,,2,6
699368608,Refactoring Stage 2 (Restructuring + Testing),"Insights gained from working on adding new osm datasets and first refactoring stage  showed that the pipeline overall architecture needs to be redesigned completely. New architecture was proposed in #43. This pull request contains restructuring changes as well as new unit tests.

Restructuring details:
* Created new folder structure that includes airflow_logic, map_action_logic, auxiliary_modules, configs. 
* Rewrote docker-compose and Dockerfile to make the new structure accessible to the airflow server. 
* Refactored dags and operators and moved them, as well as the files associated with them, to airflow_logic. 
* Moved files related to MapAction specific logic, such as transform and extract logic implementation, to map_action_logic. 
* Edited flake8 scripts as well as github CI to cover new entities. 
* Refactored requests api module and moved it to the auxiliary_modules folder.
* Refactored requests storage access and moved it to the auxiliary_modules folder.
* Refactored requests gcp access and moved it to the auxiliary_modules folder.
* Refactored requests config access module and moved it to the auxiliary_modules folder.

Tests details:
* Implemented 9 tests for request API. No problems found. 
* Implemented 21 tests for Fallback Dictionary class. An important error that leads to incorrect behavior of the config parser was revealed by one of the tests. 
* Implemented a test for yaml api. No problems found. 
* Implemented 87 tests for config parser. 10 of them fail, revealing various bugs that exist in config parser code. 

The work on this pull request was done entirely through Google Summer of Code 2021 program and corresponds to [Extend Data Pipelines to cover more data products](https://summerofcode.withgoogle.com/projects/#6021028314087424) project.",True,51,https://api.github.com/repos/mapaction/pipeline_mvp/pulls/51,https://github.com/mapaction/pipeline_mvp/pull/51,closed,1015,226,91,30,0,21,0,1,[],2021-07-29 09:34:31+00:00,2021-08-11 22:48:24+00:00,1170833.0,"13 days, 13:13:53","[{'comment_id': 685801626, 'comment_body': 'Should we check the paths of these dirs too?\r\n```\r\nauxiliary_modules\r\nconfigs\r\nmap_action_logic\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 8, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685802700, 'comment_body': ""I don't think it is necessary to still copy the `dags` dir.\r\n\r\nHowever, I think it is necessary to copy these dirs:\r\n```\r\nauxiliary_modules\r\nconfigs\r\nmap_action_logic\r\n```"", 'comment_created': datetime.datetime(2021, 8, 10, 8, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685902592, 'comment_body': 'This should assert that the file does not exist before the download. Is there a chance that this is testing the remains of a previous run of the test?\r\n\r\nWhat happens if `download_url` is called twice? Does the second file silently overwrite the first one? Does it throw an error on the second call if the local file already exists?', 'comment_created': datetime.datetime(2021, 8, 10, 10, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685909373, 'comment_body': 'I might be missing something, but I think that this can be done in a single line:\r\n```\r\nreturn len(union(self.default_values,keys(), self.custom_values.keys()))\r\n```\r\n\r\n**_nitpicking point_**: I would avoid using the variable name `value` in the for loop. You are iterating through the dictionaries keys, not the values.', 'comment_created': datetime.datetime(2021, 8, 10, 10, 53, 16, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685920988, 'comment_body': 'I think I\'m missing something - why are there three cases here? There is ""running on GCP"" and ""running in local docker image"". What is the third case?\r\n\r\nAlso, wouldn\'t it be possible to get the path to `gcp_settings`, relative to the current file? This would avoid needing to hard coding any paths. eg:\r\n```\r\n# Using https://stackoverflow.com/a/2860193\r\npath = Path(__file__).parent.absolute()', 'comment_created': datetime.datetime(2021, 8, 10, 11, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685924355, 'comment_body': 'When this test is called, how is the `tmp_path` parameter set?', 'comment_created': datetime.datetime(2021, 8, 10, 11, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685975846, 'comment_body': ""I can't find the code which implements this. Please could you point me to it?"", 'comment_created': datetime.datetime(2021, 8, 10, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 686032699, 'comment_body': 'I have not reviewed every test in this file in detail. But I am happy to _assume_ that most of the failing tests are due to bugs in `config_parser.py`, not bugs in the tests themselves. \r\n\r\nTherefore I am happy that we take this approach:\r\n* Merge this PR with failing tests in `config_parser_test.py`\r\n* Agree on a collective approach to this problem; https://mapaction.atlassian.net/browse/DATAPIPE-4\r\n* Then create a new branch/PR to fix any bugs in the config_parser as required.\r\n\r\nThe same approach should apply to `fallback_dict_test.py`\r\n', 'comment_created': datetime.datetime(2021, 8, 10, 13, 43, 47, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 686034321, 'comment_body': 'This is the same comment here as with `auxiliary_modules/config_access/config_parser_test.py`\r\n\r\nI have not reviewed every test in this file in detail. But I am happy to _assume_ that most of the failing tests are due to bugs in `config_parser.py`, not bugs in the tests themselves. \r\n\r\nTherefore I am happy that we take this approach:\r\n* Merge this PR with failing tests in `config_parser_test.py`\r\n* Agree on a collective approach to this problem; https://mapaction.atlassian.net/browse/DATAPIPE-4\r\n* Then create a new branch/PR with fix any bugs in the config_parser as required.\r\n', 'comment_created': datetime.datetime(2021, 8, 10, 13, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 686083935, 'comment_body': '`tmp_path` is a [fixture](https://docs.pytest.org/en/6.2.x/tmpdir.html) provided by pytest. A very useful one I must admit. It helped me to avoid creating new directories manually. ', 'comment_created': datetime.datetime(2021, 8, 10, 14, 38, 7, tzinfo=datetime.timezone.utc), 'commenter': 'egozverev', 'type': 'User'}, {'comment_id': 686095722, 'comment_body': ""Sure, that was added [here](https://github.com/mapaction/pipeline_mvp/pull/47/commits/fe0b794b68708ee39dbc95518d7b678556ce724b). \r\n\r\nSurprisingly, these changes are for some reasons not reflected in the current code. They might have been possibly overwritten by some of the newer commits. That's honestly very strange. "", 'comment_created': datetime.datetime(2021, 8, 10, 14, 50, 49, tzinfo=datetime.timezone.utc), 'commenter': 'egozverev', 'type': 'User'}, {'comment_id': 687205610, 'comment_body': 'üëç ', 'comment_created': datetime.datetime(2021, 8, 11, 21, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687226079, 'comment_body': 'Added to JIRA here https://mapaction.atlassian.net/browse/DATAPIPE-92', 'comment_created': datetime.datetime(2021, 8, 11, 22, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687226150, 'comment_body': 'Added to JIRA here https://mapaction.atlassian.net/browse/DATAPIPE-92', 'comment_created': datetime.datetime(2021, 8, 11, 22, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687233833, 'comment_body': 'Now referenced in https://mapaction.atlassian.net/browse/DATAPIPE-93', 'comment_created': datetime.datetime(2021, 8, 11, 22, 19, 40, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687234325, 'comment_body': 'OK - I will try and ensure that this change gets merged into master too.', 'comment_created': datetime.datetime(2021, 8, 11, 22, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687238560, 'comment_body': 'Now covered in this JIRA ticket https://mapaction.atlassian.net/browse/DATAPIPE-94', 'comment_created': datetime.datetime(2021, 8, 11, 22, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687238677, 'comment_body': 'Now covered in this JIRA ticket https://mapaction.atlassian.net/browse/DATAPIPE-94', 'comment_created': datetime.datetime(2021, 8, 11, 22, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687239316, 'comment_body': 'Now referenced in this JIRA ticket https://mapaction.atlassian.net/browse/DATAPIPE-94', 'comment_created': datetime.datetime(2021, 8, 11, 22, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687245330, 'comment_body': 'If possible it would still be helpful to have an answer to this question please?', 'comment_created': datetime.datetime(2021, 8, 11, 22, 48, 8, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687511320, 'comment_body': 'This section of code was present even before the start of GSOC. \r\n\r\nFrom my perspective, it covers two scenarios: \r\n\r\n`os.environ.get(""ENVIRONMENT"") == ""LOCAL"":` corresponds to executing the pipeline in the local environment (using docker and stuff). \r\n\r\nThe second option is for using the pipeline in GCP. It is divided in two options, however. One is when we\'re using the kubernetes, the other is when we don\'t. To the best of my knowledge we are always using kubernetes, so the third option is probably redundant. ', 'comment_created': datetime.datetime(2021, 8, 12, 8, 42, 46, tzinfo=datetime.timezone.utc), 'commenter': 'egozverev', 'type': 'User'}]","[{'commit_sha': 'b9c14800636e804e60ac6d5b3257bbbfff2f4d98', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a51332875298452df3f3af23c787d53a4445cfde', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3672409ae79018fcaa146aa2b38df215f5e289ce', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81de6446d31d391ea9b22099c35863c24e8ceb8d', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94f753101c29625b770dd0a4cc6d82cb971ae285', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8524a9637d5242a53ef418df061d7818857fe055', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc9530d92f8d81fc03f27d9a7e4ad04152d6045d', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c77a3ff9c6d2e47ba8c5ba8a5c605d1bc648be5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cbb95a0a3a247190c99021a5f6b5b24c8209cf0', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0172b5b18234bfb8cbc895552b5d6cd106e9afa', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac7acd82ddd294ea7725b869f59e8e770b9baa21', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39414a762415e1870b9454f8497bd21c2b178657', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32c77eaa9fc8cf61f38a17310b4fe8eb7e1efd3c', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f61fc8e0f003b65347e74f36dfb70f3cf2fd8da', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1f490eb93dcfe2ea34a20155d9d3c7a1fe1385c', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de32879d8915f35cae786074556319133a7b683e', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea7b472a6e1ae50dd308fd4931801598f60856e3', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95c0f03d3bc9d9a91f31dd06b971320400e7a619', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8144b09fe37ee327a9b1ba934fb86338d4a11ed5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad6d7b2f5fc96e80c589e62dc4d56d63632df5b8', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '398340e0ad23cda6e1ce8aae3ec3832737bbb251', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3ac194ef83087a55977917cc4536559f4165ee', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ef297c8a152bb0375fcedba04bc2b6db845c982', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f76af4db44af58f45318d7131d64f860350de774', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51db1e3b99c0782a1f262131a99886707f54aedf', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e692c754d501c8bc5d780f670fd5212a6e98a3e8', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7692df08c63241e854fe7bd90db1e5daf03bc2', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '187eb258f48cf5334c2c5937339c5c3daa677f70', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60acef97d31181c5c8d9acef1505932fc71ad685', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbed346c957d1b034eda26d66a6d475de9337dc', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}]",Egor Zverev,37687005,,User,,14,,2,6
699368608,Refactoring Stage 2 (Restructuring + Testing),"Insights gained from working on adding new osm datasets and first refactoring stage  showed that the pipeline overall architecture needs to be redesigned completely. New architecture was proposed in #43. This pull request contains restructuring changes as well as new unit tests.

Restructuring details:
* Created new folder structure that includes airflow_logic, map_action_logic, auxiliary_modules, configs. 
* Rewrote docker-compose and Dockerfile to make the new structure accessible to the airflow server. 
* Refactored dags and operators and moved them, as well as the files associated with them, to airflow_logic. 
* Moved files related to MapAction specific logic, such as transform and extract logic implementation, to map_action_logic. 
* Edited flake8 scripts as well as github CI to cover new entities. 
* Refactored requests api module and moved it to the auxiliary_modules folder.
* Refactored requests storage access and moved it to the auxiliary_modules folder.
* Refactored requests gcp access and moved it to the auxiliary_modules folder.
* Refactored requests config access module and moved it to the auxiliary_modules folder.

Tests details:
* Implemented 9 tests for request API. No problems found. 
* Implemented 21 tests for Fallback Dictionary class. An important error that leads to incorrect behavior of the config parser was revealed by one of the tests. 
* Implemented a test for yaml api. No problems found. 
* Implemented 87 tests for config parser. 10 of them fail, revealing various bugs that exist in config parser code. 

The work on this pull request was done entirely through Google Summer of Code 2021 program and corresponds to [Extend Data Pipelines to cover more data products](https://summerofcode.withgoogle.com/projects/#6021028314087424) project.",True,51,https://api.github.com/repos/mapaction/pipeline_mvp/pulls/51,https://github.com/mapaction/pipeline_mvp/pull/51,closed,1015,226,91,30,0,21,0,1,[],2021-07-29 09:34:31+00:00,2021-08-11 22:48:24+00:00,1170833.0,"13 days, 13:13:53","[{'comment_id': 685801626, 'comment_body': 'Should we check the paths of these dirs too?\r\n```\r\nauxiliary_modules\r\nconfigs\r\nmap_action_logic\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 8, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685802700, 'comment_body': ""I don't think it is necessary to still copy the `dags` dir.\r\n\r\nHowever, I think it is necessary to copy these dirs:\r\n```\r\nauxiliary_modules\r\nconfigs\r\nmap_action_logic\r\n```"", 'comment_created': datetime.datetime(2021, 8, 10, 8, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685902592, 'comment_body': 'This should assert that the file does not exist before the download. Is there a chance that this is testing the remains of a previous run of the test?\r\n\r\nWhat happens if `download_url` is called twice? Does the second file silently overwrite the first one? Does it throw an error on the second call if the local file already exists?', 'comment_created': datetime.datetime(2021, 8, 10, 10, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685909373, 'comment_body': 'I might be missing something, but I think that this can be done in a single line:\r\n```\r\nreturn len(union(self.default_values,keys(), self.custom_values.keys()))\r\n```\r\n\r\n**_nitpicking point_**: I would avoid using the variable name `value` in the for loop. You are iterating through the dictionaries keys, not the values.', 'comment_created': datetime.datetime(2021, 8, 10, 10, 53, 16, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685920988, 'comment_body': 'I think I\'m missing something - why are there three cases here? There is ""running on GCP"" and ""running in local docker image"". What is the third case?\r\n\r\nAlso, wouldn\'t it be possible to get the path to `gcp_settings`, relative to the current file? This would avoid needing to hard coding any paths. eg:\r\n```\r\n# Using https://stackoverflow.com/a/2860193\r\npath = Path(__file__).parent.absolute()', 'comment_created': datetime.datetime(2021, 8, 10, 11, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685924355, 'comment_body': 'When this test is called, how is the `tmp_path` parameter set?', 'comment_created': datetime.datetime(2021, 8, 10, 11, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 685975846, 'comment_body': ""I can't find the code which implements this. Please could you point me to it?"", 'comment_created': datetime.datetime(2021, 8, 10, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 686032699, 'comment_body': 'I have not reviewed every test in this file in detail. But I am happy to _assume_ that most of the failing tests are due to bugs in `config_parser.py`, not bugs in the tests themselves. \r\n\r\nTherefore I am happy that we take this approach:\r\n* Merge this PR with failing tests in `config_parser_test.py`\r\n* Agree on a collective approach to this problem; https://mapaction.atlassian.net/browse/DATAPIPE-4\r\n* Then create a new branch/PR to fix any bugs in the config_parser as required.\r\n\r\nThe same approach should apply to `fallback_dict_test.py`\r\n', 'comment_created': datetime.datetime(2021, 8, 10, 13, 43, 47, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 686034321, 'comment_body': 'This is the same comment here as with `auxiliary_modules/config_access/config_parser_test.py`\r\n\r\nI have not reviewed every test in this file in detail. But I am happy to _assume_ that most of the failing tests are due to bugs in `config_parser.py`, not bugs in the tests themselves. \r\n\r\nTherefore I am happy that we take this approach:\r\n* Merge this PR with failing tests in `config_parser_test.py`\r\n* Agree on a collective approach to this problem; https://mapaction.atlassian.net/browse/DATAPIPE-4\r\n* Then create a new branch/PR with fix any bugs in the config_parser as required.\r\n', 'comment_created': datetime.datetime(2021, 8, 10, 13, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 686083935, 'comment_body': '`tmp_path` is a [fixture](https://docs.pytest.org/en/6.2.x/tmpdir.html) provided by pytest. A very useful one I must admit. It helped me to avoid creating new directories manually. ', 'comment_created': datetime.datetime(2021, 8, 10, 14, 38, 7, tzinfo=datetime.timezone.utc), 'commenter': 'egozverev', 'type': 'User'}, {'comment_id': 686095722, 'comment_body': ""Sure, that was added [here](https://github.com/mapaction/pipeline_mvp/pull/47/commits/fe0b794b68708ee39dbc95518d7b678556ce724b). \r\n\r\nSurprisingly, these changes are for some reasons not reflected in the current code. They might have been possibly overwritten by some of the newer commits. That's honestly very strange. "", 'comment_created': datetime.datetime(2021, 8, 10, 14, 50, 49, tzinfo=datetime.timezone.utc), 'commenter': 'egozverev', 'type': 'User'}, {'comment_id': 687205610, 'comment_body': 'üëç ', 'comment_created': datetime.datetime(2021, 8, 11, 21, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687226079, 'comment_body': 'Added to JIRA here https://mapaction.atlassian.net/browse/DATAPIPE-92', 'comment_created': datetime.datetime(2021, 8, 11, 22, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687226150, 'comment_body': 'Added to JIRA here https://mapaction.atlassian.net/browse/DATAPIPE-92', 'comment_created': datetime.datetime(2021, 8, 11, 22, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687233833, 'comment_body': 'Now referenced in https://mapaction.atlassian.net/browse/DATAPIPE-93', 'comment_created': datetime.datetime(2021, 8, 11, 22, 19, 40, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687234325, 'comment_body': 'OK - I will try and ensure that this change gets merged into master too.', 'comment_created': datetime.datetime(2021, 8, 11, 22, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687238560, 'comment_body': 'Now covered in this JIRA ticket https://mapaction.atlassian.net/browse/DATAPIPE-94', 'comment_created': datetime.datetime(2021, 8, 11, 22, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687238677, 'comment_body': 'Now covered in this JIRA ticket https://mapaction.atlassian.net/browse/DATAPIPE-94', 'comment_created': datetime.datetime(2021, 8, 11, 22, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687239316, 'comment_body': 'Now referenced in this JIRA ticket https://mapaction.atlassian.net/browse/DATAPIPE-94', 'comment_created': datetime.datetime(2021, 8, 11, 22, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687245330, 'comment_body': 'If possible it would still be helpful to have an answer to this question please?', 'comment_created': datetime.datetime(2021, 8, 11, 22, 48, 8, tzinfo=datetime.timezone.utc), 'commenter': 'andrewphilipsmith', 'type': 'User'}, {'comment_id': 687511320, 'comment_body': 'This section of code was present even before the start of GSOC. \r\n\r\nFrom my perspective, it covers two scenarios: \r\n\r\n`os.environ.get(""ENVIRONMENT"") == ""LOCAL"":` corresponds to executing the pipeline in the local environment (using docker and stuff). \r\n\r\nThe second option is for using the pipeline in GCP. It is divided in two options, however. One is when we\'re using the kubernetes, the other is when we don\'t. To the best of my knowledge we are always using kubernetes, so the third option is probably redundant. ', 'comment_created': datetime.datetime(2021, 8, 12, 8, 42, 46, tzinfo=datetime.timezone.utc), 'commenter': 'egozverev', 'type': 'User'}]","[{'commit_sha': 'b9c14800636e804e60ac6d5b3257bbbfff2f4d98', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a51332875298452df3f3af23c787d53a4445cfde', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3672409ae79018fcaa146aa2b38df215f5e289ce', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81de6446d31d391ea9b22099c35863c24e8ceb8d', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94f753101c29625b770dd0a4cc6d82cb971ae285', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8524a9637d5242a53ef418df061d7818857fe055', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc9530d92f8d81fc03f27d9a7e4ad04152d6045d', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c77a3ff9c6d2e47ba8c5ba8a5c605d1bc648be5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cbb95a0a3a247190c99021a5f6b5b24c8209cf0', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0172b5b18234bfb8cbc895552b5d6cd106e9afa', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac7acd82ddd294ea7725b869f59e8e770b9baa21', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39414a762415e1870b9454f8497bd21c2b178657', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32c77eaa9fc8cf61f38a17310b4fe8eb7e1efd3c', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f61fc8e0f003b65347e74f36dfb70f3cf2fd8da', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1f490eb93dcfe2ea34a20155d9d3c7a1fe1385c', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de32879d8915f35cae786074556319133a7b683e', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea7b472a6e1ae50dd308fd4931801598f60856e3', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95c0f03d3bc9d9a91f31dd06b971320400e7a619', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8144b09fe37ee327a9b1ba934fb86338d4a11ed5', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad6d7b2f5fc96e80c589e62dc4d56d63632df5b8', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '398340e0ad23cda6e1ce8aae3ec3832737bbb251', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3ac194ef83087a55977917cc4536559f4165ee', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ef297c8a152bb0375fcedba04bc2b6db845c982', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f76af4db44af58f45318d7131d64f860350de774', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51db1e3b99c0782a1f262131a99886707f54aedf', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e692c754d501c8bc5d780f670fd5212a6e98a3e8', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7692df08c63241e854fe7bd90db1e5daf03bc2', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '187eb258f48cf5334c2c5937339c5c3daa677f70', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60acef97d31181c5c8d9acef1505932fc71ad685', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbed346c957d1b034eda26d66a6d475de9337dc', 'committer_username': 'egozverev', 'committer_name': 'Egor Zverev', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 23, 6, 56, 51, tzinfo=datetime.timezone.utc)}]",Egor Zverev,37687005,,User,,14,,2,6

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
279620162,pipeline_mvp,mapaction/pipeline_mvp,Python,5,2,21,12,326,6,15,3,"[{'id': 695223727, 'number': 50, 'closed': None, 'created': datetime.datetime(2021, 7, 22, 14, 15, 56, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 13, 'deletions': 12, 'state': 'open'}, {'id': 694694546, 'number': 49, 'closed': datetime.datetime(2021, 7, 21, 20, 52, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 20, 41, 46, tzinfo=datetime.timezone.utc), 'time_taken': 629.0, 'time_delta': '0:10:29', 'additions': 40, 'deletions': 0, 'state': 'closed'}, {'id': 689328858, 'number': 45, 'closed': datetime.datetime(2021, 7, 14, 10, 9, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 19, 5, tzinfo=datetime.timezone.utc), 'time_taken': 54269.0, 'time_delta': '15:04:29', 'additions': 449, 'deletions': 532, 'state': 'closed'}, {'id': 685555216, 'number': 42, 'closed': datetime.datetime(2021, 7, 15, 8, 53, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 22, 36, 1, tzinfo=datetime.timezone.utc), 'time_taken': 641828.0, 'time_delta': '7 days, 10:17:08', 'additions': 909, 'deletions': 102, 'state': 'closed'}, {'id': 682733445, 'number': 40, 'closed': datetime.datetime(2021, 7, 2, 15, 58, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 15, 58, 31, tzinfo=datetime.timezone.utc), 'time_taken': 12.0, 'time_delta': '0:00:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 682457877, 'number': 39, 'closed': datetime.datetime(2021, 7, 2, 8, 58, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 8, 58, 42, tzinfo=datetime.timezone.utc), 'time_taken': 7.0, 'time_delta': '0:00:07', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 681065611, 'number': 37, 'closed': datetime.datetime(2021, 7, 2, 8, 37, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 17, 25, 45, tzinfo=datetime.timezone.utc), 'time_taken': 141126.0, 'time_delta': '1 day, 15:12:06', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 681034782, 'number': 36, 'closed': datetime.datetime(2021, 7, 1, 20, 53, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 16, 39, 6, tzinfo=datetime.timezone.utc), 'time_taken': 101688.0, 'time_delta': '1 day, 4:14:48', 'additions': 58, 'deletions': 1, 'state': 'closed'}, {'id': 612290096, 'number': 26, 'closed': datetime.datetime(2021, 4, 9, 9, 5, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 9, 9, 3, 52, tzinfo=datetime.timezone.utc), 'time_taken': 78.0, 'time_delta': '0:01:18', 'additions': 179, 'deletions': 3, 'state': 'closed'}, {'id': 575224533, 'number': 22, 'closed': None, 'created': datetime.datetime(2021, 2, 17, 21, 28, 52, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 215, 'deletions': 3, 'state': 'open'}]"
