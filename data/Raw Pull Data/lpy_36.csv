pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1490945338,vittrack(gsoc realtime object tracking model),"Vit tracker(vision transformer tracker) is a much better model for real-time object tracking. Vit tracker can achieve speeds exceeding nanotrack by 20% in single-threaded mode with ARM chip, and the advantage becomes even more pronounced in multi-threaded mode. In addition, on the dataset, vit tracker demonstrates better performance compared to nanotrack. Moreover, vit trackerprovides confidence values during the tracking process, which can be used to determine if the tracking is currently lost.
opencv_zoo: https://github.com/opencv/opencv_zoo/pull/194
opencv_extra: [https://github.com/opencv/opencv_extra/pull/1088](https://github.com/opencv/opencv_extra/pull/1088)

# Performance comparison is as follows:
NOTE: The speed below is tested by **onnxruntime** because opencv has poor support for the transformer architecture for now.

ONNX speed test on ARM platform(apple M2)(ms):
| thread nums | 1| 2| 3| 4|
|--------|--------|--------|--------|--------|
| nanotrack| 5.25| 4.86| 4.72| 4.49|
| vit tracker| 4.18| 2.41| 1.97| **1.46 (3X)**|

ONNX speed test on x86 platform(intel i3 10105)(ms):
| thread nums | 1| 2| 3| 4|
|--------|--------|--------|--------|--------|
| nanotrack|3.20|2.75|2.46|2.55|
| vit tracker|3.84|2.37|2.10|2.01|

opencv speed test on x86 platform(intel i3 10105)(ms):
| thread nums | 1| 2| 3| 4|
|--------|--------|--------|--------|--------|
| vit tracker|31.3|31.4|31.4|31.4|

preformance test on lasot dataset(AUC is the most important data. Higher AUC means better tracker):

|LASOT | AUC| P| Pnorm|
|--------|--------|--------|--------|
| nanotrack| 46.8| 45.0| 43.3|
| vit tracker| 48.6| 44.8| 54.7|

[https://youtu.be/MJiPnu1ZQRI](https://youtu.be/MJiPnu1ZQRI)
 In target tracking tasks, the score is an important indicator that can indicate whether the current target is lost. In the video, vit tracker can track the target and display the current score in the upper left corner of the video. When the target is lost, the score drops significantly. While nanotrack will only return 0.9 score in any situation, so that we cannot determine whether the target is lost.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake
",True,24201,https://api.github.com/repos/opencv/opencv/pulls/24201,https://github.com/opencv/opencv/pull/24201,closed,448,1,5,14,1,18,2,1,"[{'name': 'category: video'}, {'name': 'GSoC'}]",2023-08-27 12:02:50+00:00,2023-09-19 12:36:39+00:00,1989229.0,"23 days, 0:33:49","[{'comment_id': 1307029257, 'comment_body': 'vt tracker -> Vit tracker', 'comment_created': datetime.datetime(2023, 8, 28, 7, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'zihaomu', 'type': 'User'}, {'comment_id': 1307030147, 'comment_body': 'vt tracker -> Vit tracker', 'comment_created': datetime.datetime(2023, 8, 28, 7, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'zihaomu', 'type': 'User'}, {'comment_id': 1307030705, 'comment_body': 'vt tracker -> vittrack', 'comment_created': datetime.datetime(2023, 8, 28, 7, 40, 59, tzinfo=datetime.timezone.utc), 'commenter': 'zihaomu', 'type': 'User'}, {'comment_id': 1307031549, 'comment_body': 'Please revise the comment.', 'comment_created': datetime.datetime(2023, 8, 28, 7, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'zihaomu', 'type': 'User'}, {'comment_id': 1319448322, 'comment_body': 'The link should be replaced with the model zoo one.', 'comment_created': datetime.datetime(2023, 9, 8, 6, 57, 49, tzinfo=datetime.timezone.utc), 'commenter': 'fengyuentau', 'type': 'User'}, {'comment_id': 1319738286, 'comment_body': 'vit is abbreviation, right? Should it be uppercase?', 'comment_created': datetime.datetime(2023, 9, 8, 11, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1319738584, 'comment_body': 'The same.', 'comment_created': datetime.datetime(2023, 9, 8, 11, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1319742140, 'comment_body': 'M.b. make it the class parameters?', 'comment_created': datetime.datetime(2023, 9, 8, 11, 27, 50, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1319745565, 'comment_body': 'I propose to move it to parameters. In case if users re-trained the model they can use custom pre-proc params.', 'comment_created': datetime.datetime(2023, 9, 8, 11, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1320472808, 'comment_body': 'Use opencv_zoo too to avoid mess of different sources\r\n\r\nAlso it makes sense to dump suggested model path in `--help` mode.', 'comment_created': datetime.datetime(2023, 9, 9, 3, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'opencv-alalek', 'type': 'User'}, {'comment_id': 1320473178, 'comment_body': 'Avoid `cv::` usage in OpenCV .cpp files (there is already `namespace cv`)', 'comment_created': datetime.datetime(2023, 9, 9, 3, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'opencv-alalek', 'type': 'User'}, {'comment_id': 1320474137, 'comment_body': 'Unconditional call of `.getTrackingScore()` breaks demo with other trackers.', 'comment_created': datetime.datetime(2023, 9, 9, 3, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'opencv-alalek', 'type': 'User'}, {'comment_id': 1320517093, 'comment_body': ' Is there any sample code available for reference?', 'comment_created': datetime.datetime(2023, 9, 9, 8, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'lpylpy0514', 'type': 'User'}, {'comment_id': 1322667101, 'comment_body': 'Actually these parameters are from the classic ImageNet image classification. Basically everybody uses these params by default. I dont see anyone changing them in any practical sense.', 'comment_created': datetime.datetime(2023, 9, 12, 8, 44, 34, tzinfo=datetime.timezone.utc), 'commenter': 'fengyuentau', 'type': 'User'}, {'comment_id': 1322672228, 'comment_body': 'Link to the directory is enough in case the model name changes, e.g. `https://github.com/opencv/opencv_zoo/tree/main/models/object_tracking_vittrack`', 'comment_created': datetime.datetime(2023, 9, 12, 8, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'fengyuentau', 'type': 'User'}, {'comment_id': 1325716376, 'comment_body': ""It's still relevant."", 'comment_created': datetime.datetime(2023, 9, 14, 10, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1325720655, 'comment_body': 'The model may be re-trained for YUV or use-cases that are not classical RGB imaging in science, medicine, etc.', 'comment_created': datetime.datetime(2023, 9, 14, 10, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 1325919953, 'comment_body': 'This most probably affects Python and Java Bindings. Please define them as `CV_PROP_RW Scalar meanvalue` and move initialization to the constructor implementation.', 'comment_created': datetime.datetime(2023, 9, 14, 13, 4, 1, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}]","[{'commit_sha': '9ff5ecbd623ba2115aca9830bce3f1aadc8fe751', 'committer_username': 'Onlybyuse', 'committer_name': 'Raywit', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 17, 2, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abaff2fab9d0e05c8096bbf075594c30f46f4b06', 'committer_username': 'Onlybyuse', 'committer_name': 'Raywit', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 17, 2, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '959d003c6b8af1b4058062633c5ff44ed5546b22', 'committer_username': 'Onlybyuse', 'committer_name': 'Raywit', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 17, 2, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81d0e087494b3bf0672a4c5f00a4405ad659ba6c', 'committer_username': 'Onlybyuse', 'committer_name': 'Raywit', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 17, 2, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffaa2c597d20cedfc637ac0a0d50370971b46846', 'committer_username': 'Onlybyuse', 'committer_name': 'Raywit', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 17, 2, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e19794b22f8aafa0d923bd582db0d5e1392fc7ff', 'committer_username': 'Onlybyuse', 'committer_name': 'Raywit', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 17, 2, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b580c9983d1aed401bc2c43b13883bb0e61ff8', 'committer_username': 'Onlybyuse', 'committer_name': 'Raywit', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 17, 2, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cafad0da10e6c1d1c5ee6b2d22a1ff40d05b308e', 'committer_username': 'Onlybyuse', 'committer_name': 'Raywit', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 17, 2, 9, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02187df2c227e18c6874fe15c7f56a442221019', 'committer_username': 'lpylpy0514', 'committer_name': 'Liu Pengyu', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 29, 3, 9, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37c0cc8c0b901015d8871ba7ba3dba8f9c340a30', 'committer_username': 'lpylpy0514', 'committer_name': 'Liu Pengyu', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 29, 3, 9, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0665098738d66186f44e58af89ce6042f806c0e', 'committer_username': 'lpylpy0514', 'committer_name': 'Liu Pengyu', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 29, 3, 9, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66d03b12487d9deb61276f2df7d82abd1d5756eb', 'committer_username': 'lpylpy0514', 'committer_name': 'Liu Pengyu', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 29, 3, 9, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e09b6f8ac063dd3c961a51ec45ec6ee1995330b', 'committer_username': 'lpylpy0514', 'committer_name': 'Liu Pengyu', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 29, 3, 9, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04403186c079a5aae830de742933cb6d0d6cdb78', 'committer_username': 'lpylpy0514', 'committer_name': 'Liu Pengyu', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 29, 3, 9, 20, tzinfo=datetime.timezone.utc)}]",Liu Pengyu,67569760,,User,,48,,3,3

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
5108051,opencv,opencv/opencv,C++,55710,77539,2656,2194,34481,2608,6,138,"[{'id': 1788837790, 'number': 25264, 'closed': datetime.datetime(2024, 3, 28, 6, 53, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 25, 7, 42, 7, tzinfo=datetime.timezone.utc), 'time_taken': 256283.0, 'time_delta': '2 days, 23:11:23', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1490945338, 'number': 24201, 'closed': datetime.datetime(2023, 9, 19, 12, 36, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 27, 12, 2, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1989229.0, 'time_delta': '23 days, 0:33:49', 'additions': 448, 'deletions': 1, 'state': 'closed'}]"
