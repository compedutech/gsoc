pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
675076490,Initial implementation for validating two WCS,"### Description

Fixes #428.

An initial implementation of the validate function for checking if two WCS objects are compatible with each other to reproject an `NDCube` on top of another.

",True,433,https://api.github.com/repos/sunpy/ndcube/pulls/433,https://github.com/sunpy/ndcube/pull/433,closed,55,1,3,11,3,10,0,0,[],2021-06-22 04:59:03+00:00,2021-07-07 16:49:34+00:00,1338631.0,"15 days, 11:50:31","[{'comment_id': 656099091, 'comment_body': 'I would name this something more descriptive like `compare_wcs_physical_types`', 'comment_created': datetime.datetime(2021, 6, 22, 10, 44, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 656099562, 'comment_body': 'I would simplify both of these to just this:\r\n```suggestion\r\n    source_wcs : `astropy.wcs.wcsapi.BaseHighLevelWCS` or `astropy.wcs.wcsapi.BaseLowLevelWCS`\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 10, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 656335796, 'comment_body': 'I came to this conversation late and I know @adwaitbhope has already made this change.  But I think the function name should say what is wants to do, rather than how it does it.  If not `validate_wcs`, then something like `assert_wcs_compatible`.\r\n\r\nIn the future we may want to do this comparison in a more sophisticated way, e.g. taking into account invariant axes, or comparing against the axes object types.  If the function name does not refer to its implementation but rather the role it performs, changing how we validate should have minimal impact on the code outside this function.', 'comment_created': datetime.datetime(2021, 6, 22, 15, 28, 36, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 656336700, 'comment_body': '```suggestion\r\n    assert utils.wcs.compare_wcs_physical_types(wcs_4d_t_l_lt_ln, wcs_4d_t_l_lt_ln) is True\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 15, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 656337064, 'comment_body': '```suggestion\r\n    utils.wcs.compare_wcs_physical_types(wcs_4d_t_l_lt_ln, wcs_3d_l_lt_ln) is False\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 15, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 656428266, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2021, 6, 22, 17, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 656428362, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2021, 6, 22, 17, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 659781227, 'comment_body': 'I suspect that any further questions we are going to want to ask of the WCSes, i.e. invariant axes etc are going to want to be different functions. Also by convention functions which start `assert_` tend to raise assertion errors if the comparison fails.\r\n\r\nMaybe the best thing to do here is change the first line of the docstring to make the scope of this function clear?', 'comment_created': datetime.datetime(2021, 6, 28, 13, 22, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 661443420, 'comment_body': 'Sounds fine to me.', 'comment_created': datetime.datetime(2021, 6, 30, 12, 52, 21, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 663913090, 'comment_body': '```suggestion\r\n    Checks to see if two WCS objects have the same physical types in the same order.\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 12, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}]","[{'commit_sha': 'de1ccfece0afc138a0ba6d4dfedc7914a806097b', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '467ad0cd8c97dca3e2dd030071b4765865c770dc', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce8f814220344b7ed677a355ede3360f2851102b', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a78b8bd6d47dafb6d256081e2e18d3735cc2b3fb', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '072b13f462edf2e1f52fbcd7375bf7e72863ddc8', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6861119591b555fbf91a2684f5fcca7089d18f0b', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8426b1801e81adf35c8ec386dd05ea0373d0d38d', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02895f98877f2f7b71bbbad50d86378ea480b1b3', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05dc63ff1169e92e3882a694128cbcc6908aa51c', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac2b262de1a29e23c344a3ce19f66e2889159a83', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fe57c2f6926bc36763bf4a978cbe9a1b45f12cb', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}]",Adwait Bhope,32306983,adwaitbhope@gmail.com,User,,22,,37,38
675619903,Reproject implementation,"### Description

Fixes #429.

For now, this is basically a wrapper around reproject, will add tests later.
Trying to figure out a way to compute `shape_out` from available data.",True,434,https://api.github.com/repos/sunpy/ndcube/pulls/434,https://github.com/sunpy/ndcube/pull/434,closed,147,0,4,40,4,55,1,0,[{'name': 'Resample'}],2021-06-22 17:18:15+00:00,2021-07-21 10:16:26+00:00,2480291.0,"28 days, 16:58:11","[{'comment_id': 657276582, 'comment_body': 'Does `meta` and `global_coords` have to be deepcopies here?', 'comment_created': datetime.datetime(2021, 6, 23, 16, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 657277730, 'comment_body': 'The check of `return_footprint` needs to be made here.  According to docstring, only when `return_footprint=True` will `footprint` be returned.', 'comment_created': datetime.datetime(2021, 6, 23, 16, 33, 41, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 657278410, 'comment_body': 'Handling of `return_footprints` needs to be done here.', 'comment_created': datetime.datetime(2021, 6, 23, 16, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 659464212, 'comment_body': 'Right, missed that. In that case, should we handle this similar to reproject, or should we return `resampled_cube, None` if `return_footprint=False`?', 'comment_created': datetime.datetime(2021, 6, 28, 4, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 659467429, 'comment_body': ""Well, I thought it would be better to not have any references to the original cube's attributes."", 'comment_created': datetime.datetime(2021, 6, 28, 4, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 659476955, 'comment_body': ""I've added a commit that handles it like reproject for now."", 'comment_created': datetime.datetime(2021, 6, 28, 4, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 659621456, 'comment_body': ""I would call this method reproject. We can add a `resample` later which can re-grid to a different pixel size.\r\n\r\n```suggestion\r\n    def reproject(self, target_wcs, shape_out, order='bilinear', output_array=None, return_footprint=True):\r\n```"", 'comment_created': datetime.datetime(2021, 6, 28, 9, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 659621780, 'comment_body': ""This doesn't seem right?"", 'comment_created': datetime.datetime(2021, 6, 28, 9, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 659623385, 'comment_body': ""```suggestion\r\n    def resample(self, target_wcs, shape_out=None, order='bilinear', output_array=None, return_footprint=True):\r\n```\r\n\r\nShape out can be not specified if the target WCS has the [`pixel_shape` property](https://docs.astropy.org/en/stable/api/astropy.wcs.wcsapi.BaseLowLevelWCS.html#astropy.wcs.wcsapi.BaseLowLevelWCS.pixel_shape) (only on low level) and it is not `None`. If both `shape_out` and `target_wcs.pixel_shape` are `None` then an exception should be raised."", 'comment_created': datetime.datetime(2021, 6, 28, 9, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 659624380, 'comment_body': ""This docstring needs a `Notes` section detailing the things it doesn't do. Like extra_coords, uncertainly, mask etc."", 'comment_created': datetime.datetime(2021, 6, 28, 9, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 659628922, 'comment_body': ""This seems overly complex, why not just always generate the footprint and only conditionally return it. Given [the code](https://github.com/astropy/reproject/blob/9f8ec7b6bf51ed2c1516b45c7336f1fbdff9510d/reproject/interpolation/core.py#L95-L98) in reproject this wouldn't be much of a performance overhead. (and only a small memory one).\r\n\r\nThat being said, for interpolation I really question the value of the footprint *at all* so maybe we just skip it.\r\n\r\n---\r\n\r\nThe other option is this:\r\n```suggestion\r\n        data = reproject_interp(self, output_projection=target_wcs,\r\n                                shape_out=shape_out, order=order,\r\n                                output_array=output_array,\r\n                                return_footprint=return_footprint)\r\n                                                         \r\n        if return_footprint:\r\n            data, footprint = data\r\n```"", 'comment_created': datetime.datetime(2021, 6, 28, 9, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 659649228, 'comment_body': 'yeah probably wise.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 659652740, 'comment_body': 'You should add a test which raises this exception.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 5, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 659949727, 'comment_body': 'Oops, sorry. Copied parts of the docstring from elsewhere, fixed it now.', 'comment_created': datetime.datetime(2021, 6, 28, 16, 45, 50, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 659949860, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 6, 28, 16, 46, 3, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 659976709, 'comment_body': ""Yeah, this does look much cleaner. I'll make this change now, perhaps we could make a call about the footprint later?\r\nAlso, if we're going to calculate the footprint anyway, would it be better to return it as well?"", 'comment_created': datetime.datetime(2021, 6, 28, 17, 23, 4, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 659980020, 'comment_body': 'yeah the more I think about it exposing the option like this is probably the best way.', 'comment_created': datetime.datetime(2021, 6, 28, 17, 28, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 659983343, 'comment_body': 'Maybe we could set the default argument to `False`?', 'comment_created': datetime.datetime(2021, 6, 28, 17, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 660834803, 'comment_body': 'In case both are available, should we treat `shape_out` as an override or go with `.pixel_shape` anyway?', 'comment_created': datetime.datetime(2021, 6, 29, 17, 42, 41, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 663913715, 'comment_body': 'I would take `shape_out` to be an override. Explicit things should generally always override implicit things.', 'comment_created': datetime.datetime(2021, 7, 5, 13, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 663913888, 'comment_body': 'sounds good.', 'comment_created': datetime.datetime(2021, 7, 5, 13, 0, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667880087, 'comment_body': '```suggestion\r\n        Reprojects this NDCube to the coordinates described by another WCS object.\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 12, 18, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667880355, 'comment_body': '```suggestion\r\n            The WCS object on which the ``NDCube`` is to be reprojected.\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 12, 19, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667881188, 'comment_body': '```suggestion\r\n            The shape of the output data. If not specified, `~astropy.wcs.wcsapi.BaseLowLevelWCS.pixel_shape` attribute (if available)\r\n            from the low level API of the ``target_wcs`` is used.\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 12, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667881585, 'comment_body': '```suggestion\r\n        order: `int` or `str`\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 12, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667881756, 'comment_body': '```suggestion\r\n        output_array: `numpy.ndarray`, optional\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 12, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667882312, 'comment_body': '```suggestion\r\n            A new resultant NDCube object, the supplied ``target_wcs`` will be the ``.wcs`` attribute of the output ``NDCube``.\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 12, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667882792, 'comment_body': ""```suggestion\r\n        This method doesn't support handling of the ``mask``, ``extra_coords``, and ``uncertainty`` attributes yet.\r\n        However, ``meta`` and ``global_coords`` are copied to the output ``NDCube``.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 12, 12, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667883093, 'comment_body': ""```suggestion\r\n            raise Exception('Given target_wcs is not compatible with this NDCube, the physical types do not match.')\r\n```"", 'comment_created': datetime.datetime(2021, 7, 12, 12, 23, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667883559, 'comment_body': ""You need to do the `is not None` any time you are comparing to a thing which could be an iterable.\r\n```suggestion\r\n            if hasattr(low_level_target_wcs, 'pixel_shape') and low_level_target_wcs.pixel_shape is not None:\r\n```"", 'comment_created': datetime.datetime(2021, 7, 12, 12, 24, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667891424, 'comment_body': '```suggestion\r\n                raise Exception(""shape_out must be specified if target_wcs\'s low level API ""\r\n                                ""does not have the pixel_shape attribute."")\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 12, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667914390, 'comment_body': 'Could you move these lines to another test that just tests that the correct exception is raised when the WCS is incompatible?', 'comment_created': datetime.datetime(2021, 7, 12, 13, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 667996806, 'comment_body': 'Got it', 'comment_created': datetime.datetime(2021, 7, 12, 14, 45, 56, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 673016333, 'comment_body': 'I think we should also allow a dict / `fits.Header` instance here as well and turn it into a WCS?', 'comment_created': datetime.datetime(2021, 7, 20, 10, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673016807, 'comment_body': 'We should return the type of ourselves so that when people subclass us they get the class back they are expecting.\r\n```suggestion\r\n        resampled_cube = type(self)(data, wcs=target_wcs, meta=deepcopy(self.meta))\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 10, 53, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673118770, 'comment_body': 'From sunpy/sunpy#5470 Albert called this `reproject_to` I kind of like that name, thoughts on changing it?', 'comment_created': datetime.datetime(2021, 7, 20, 13, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673127000, 'comment_body': '\r\n```\r\nisinstance(target_wcs, collections.abc.Mapping):\r\n    target_wcs = astropy.wcs.WCS(target_wcs)\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 13, 34, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673158543, 'comment_body': 'Please move this into the reproject method.', 'comment_created': datetime.datetime(2021, 7, 20, 14, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673158845, 'comment_body': 'move this into a new `reproject` extra in the block below.', 'comment_created': datetime.datetime(2021, 7, 20, 14, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673311591, 'comment_body': 'I believe these should all be `array_shape` instead of `pixel_shape`', 'comment_created': datetime.datetime(2021, 7, 20, 17, 4, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ayshih', 'type': 'User'}, {'comment_id': 673311741, 'comment_body': ""```suggestion\r\n            The order of the interpolation. This can be any of: 'nearest-neighbor', 'bilinear',\r\n```\r\nPresumably?"", 'comment_created': datetime.datetime(2021, 7, 20, 17, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ayshih', 'type': 'User'}, {'comment_id': 673311965, 'comment_body': '```suggestion\r\n            Whether to return the footprint in addition to the output NDCube.\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 17, 5, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ayshih', 'type': 'User'}, {'comment_id': 673313881, 'comment_body': 'You should specify that the ordering of dimensions needs to be NumPy ordering', 'comment_created': datetime.datetime(2021, 7, 20, 17, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ayshih', 'type': 'User'}, {'comment_id': 673314800, 'comment_body': '```suggestion\r\n            The WCS object to which the ``NDCube`` is to be reprojected.\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 17, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ayshih', 'type': 'User'}, {'comment_id': 673717901, 'comment_body': '```suggestion\r\nAdds functionality to reproject `NDCube` to coordinates described by another WCS or FITS Header.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 7, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 673719119, 'comment_body': ""```suggestion\r\n            target_wcs = WCS(header=target_wcs)\r\n```\r\nI don't think a `try...except``` is needed here.  If the header is invalid, `WCS` will raise an error with a more informative traceback."", 'comment_created': datetime.datetime(2021, 7, 21, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 673719619, 'comment_body': ""```suggestion\r\n            raise ValueError('Given target_wcs is not compatible with this NDCube, the physical types do not match.')\r\n```"", 'comment_created': datetime.datetime(2021, 7, 21, 7, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 673719801, 'comment_body': '```suggestion\r\n                raise ValueError(""shape_out must be specified if target_wcs\'s low level API ""\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 7, 15, 9, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 673727381, 'comment_body': 'Yes, looking back at it, I think it should be `array_shape`. Will change it.', 'comment_created': datetime.datetime(2021, 7, 21, 7, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 673728597, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2021, 7, 21, 7, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 673732068, 'comment_body': ""Should we use a better name for `target_wcs` now that we're accepting `fits.Header`? Maybe `target_projection` or something."", 'comment_created': datetime.datetime(2021, 7, 21, 7, 35, 31, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 673774075, 'comment_body': ""I think it's fine."", 'comment_created': datetime.datetime(2021, 7, 21, 8, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 673832816, 'comment_body': '```suggestion\r\nAdds functionality to reproject an `~.NDCube` object to coordinates described by another WCS or FITS Header by calling the new `~.NDCube.reproject_to` method.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 9, 56, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673834872, 'comment_body': '```suggestion\r\n            raise ImportError(""The NDCube.reproject_to method requires the optional package `reproject`."")\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 9, 59, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673836046, 'comment_body': '```suggestion\r\n                raise ValueError(""shape_out must be specified if target_wcs does not have the array_shape attribute."")\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 10, 1, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}]","[{'commit_sha': '2e5141b03326e5320c5a5f79fc957c23aaa01ee1', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62bab7283caccd5c95068bc76eaeb04193180bd0', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53357e1c97a600cd6ba151872740b00820240611', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a47d16fa57d426a152a964b6ebc87de6a175c83', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e04c35d111c9c368bc4cfc9b6cc334c48a28a32', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59593a56cc060b77eafe68f05e83b968329893c4', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0e1e46ae06f3723ede09fb2d6a149101f9e82d2', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbe8262f0b3d9e9e3b57eae46b9be0367aa730e5', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec82a8e2fd7d45683bc14b1cec21a86f2b08de94', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07f339c0861bf96d676e20358c2ef133ae79005f', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00e30ed16f72cf6741431e1dbc13ec3f0047b380', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75ab41ff65f2763f8c716948c8f4d6ae4ce83fe6', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc17919c1426e1954ff8b2080a4cb57236c879db', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '017364b1f492165b044d7508201cbc7f882d659a', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4afb79db5612992b1a39031874fad9b066b6b3bf', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b989b32144871cb6d53658b3bd04fcae99f5b95', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '201fc0abff106a38adfb8f3faa413cd705affcd4', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cded8b7770b566f75475674459d26bc85d97c81', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebdd3db0dbd14cb274ac3f83a485498b35804389', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b77f475d7b4297703b31767680e9080709359d6', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c30f124173f95d082025bd49a1d10b09e192d303', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49e5c2c341b4f1c0738434185e3b581280f48ab7', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7082d517d0f780dcaff7ed7a15686a92ec270caf', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9fcd1b4e38a4dff9869d355b747332533c5261a', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6994ecc943998e83b39dc35d71cc9e8a38a414de', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f143fce08f5501da13a8b478bb015dd9bb9d0577', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78593a7427694f7048067d3e23726d4fa86a5c8c', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1af69c4a0e1c59e3b31154bceb8957e49413f74', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c1390bb6b0940120db93aea2ed6229d5b113c11', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92db8b9367fbc4e4790975e4a479df3b5ceb79a9', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c71db8a63b084c25207e4cf42096dae231dfdf0', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9c9c928bdfea36c97c79258e1112c1a96aad83b', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2010c263de1b38993a19291674c8d801a37f07c1', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e26b3a582bb94d92e4dabda5213bf286804b39e', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49a319955184bddefb5563e9f5893b253f9fe2ae', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4909991bc13a6edd744e493c1643cfe49195826b', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '543571de0d8dc192bee205378170a20bdd8f3ae5', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b3dc71921fee3f76a93fe5419064f22beb4185', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd1450fcd1644941dd55931255d20692ad284a7f', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09b99228fc645bd1aa1b8b0d0b3fdedbb16d83e1', 'committer_username': 'Cadair', 'committer_name': 'Stuart Mumford', 'committer_email': 'stuart@cadair.com', 'commit_date': datetime.datetime(2012, 1, 30, 10, 33, 34, tzinfo=datetime.timezone.utc)}]",Adwait Bhope,32306983,adwaitbhope@gmail.com,User,,22,,37,38
691863364,Reproject NDCube Documentation,"### Description

Added docs for reprojecting `NDCube` (supports #434).",True,439,https://api.github.com/repos/sunpy/ndcube/pulls/439,https://github.com/sunpy/ndcube/pull/439,closed,62,0,2,8,0,6,2,0,"[{'name': 'No Changelog Entry Needed'}, {'name': 'documentation'}]",2021-07-17 07:04:41+00:00,2021-07-23 12:06:12+00:00,536491.0,"6 days, 5:01:31","[{'comment_id': 674691852, 'comment_body': '```suggestion\r\nUsing this feature it is possible to regrid ND Objects by providing an appropriate target WCS, for operations such as resampling or alignment. It also enables removing differences between similar `~ndcube.NDCube` objects to get them onto the same grid.\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 10, 52, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 674692658, 'comment_body': 'Mostly you have done this but rst files should have one sentence per line:\r\n\r\n```suggestion\r\nThe ``target_wcs`` must be compatible with the WCS that is already associated with your `~ndcube.NDCube`. \r\nThis means that it should represent the same physical axes and in the same order.\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 10, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 674996831, 'comment_body': 'Ah okay', 'comment_created': datetime.datetime(2021, 7, 22, 17, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 675462680, 'comment_body': '```suggestion\r\nIt also enables putting similar `~ndcube.NDCube` objects onto the same grid for more direct comparison.\r\n```', 'comment_created': datetime.datetime(2021, 7, 23, 10, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 675463024, 'comment_body': '```suggestion\r\nReprojecting allows you to transform your ND Objects to a coordinate grid described by another WCS object.\r\n```', 'comment_created': datetime.datetime(2021, 7, 23, 10, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 675463648, 'comment_body': '```suggestion\r\nThe wavelength axis goes last since the aray shape and WCS shape are represented in opposite directions.\r\n```', 'comment_created': datetime.datetime(2021, 7, 23, 10, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}]","[{'commit_sha': '993489f05f2c170ba6184508fac6f2ad0a38f53f', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8545ba8081a7c5df307aeebf24a58e1a560fea59', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd433b158d87356659cf32a7b1f205b894860dc13', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1dd9c81c7cb69769d4f31711ef3cb484639da26a', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '957c96bccf64fdb71e7cb27b89a35650c5258f76', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '591bc1832f67f59961339d96b2d4fe25f6061782', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c549d4aa4ae64cbffa127f4ac00c5c26106b458e', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2208a9df174b1160779888294756a2be60ac8003', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}]",Adwait Bhope,32306983,adwaitbhope@gmail.com,User,,22,,37,38
699277966,Support adaptive and exact algorithms for reproject,"### Description

Fixes #440.
",True,448,https://api.github.com/repos/sunpy/ndcube/pulls/448,https://github.com/sunpy/ndcube/pull/448,closed,137,15,3,17,4,11,0,0,[],2021-07-29 07:23:15+00:00,2021-08-21 19:26:48+00:00,2030613.0,"23 days, 12:03:33","[{'comment_id': 678897524, 'comment_body': 'Instead of returning just a boolean, do we want this function to return/raise more details like whether or not the WCS is 2D, or if it is then are those axes celestial?', 'comment_created': datetime.datetime(2021, 7, 29, 7, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 679071976, 'comment_body': 'You can combine these checks together:\r\n```suggestion\r\n            if order_compatibility[algorithm] and order not in order_compatibility[algorithm]:\r\n                raise ValueError(f""For \'{algorithm}\' algorithm, the \'order\' argument must be ""\r\n                                 f""one of {\', \'.join(order_compatibility[algorithm])}."")\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 11, 39, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 679082386, 'comment_body': 'I would refactor this helper, to only check if there the WCS contains celestial axes and move the (hopefully temporary) ""only 2D"" check into the reproject method itself. (or another helper function).\r\n\r\nI say this for two reasons, one is that hopefully we can relax the 2D only in the future and secondly that keeping these helper functions tightly scoped means they are more useful over the code base.', 'comment_created': datetime.datetime(2021, 7, 29, 11, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 679085082, 'comment_body': 'I think this logic is reversed from what I think is the optimum way, so that we can use this function to see if a many-D cube contains spatial axes or not.\r\n\r\n```suggestion\r\n    for world_axis_class in wcs.world_axis_object_classes.values():\r\n        if issubclass(world_axis_class[0], SkyCoord):\r\n            return True\r\n\r\n    return False\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 11, 59, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 679085261, 'comment_body': '```suggestion\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 12, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 679085358, 'comment_body': '```suggestion\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 12, 0, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 679648722, 'comment_body': 'Ah right!', 'comment_created': datetime.datetime(2021, 7, 30, 4, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 679649648, 'comment_body': ""But wouldn't we want all axes to be celestial in this case?\r\nOtherwise I think we could make use of https://github.com/astropy/reproject/blob/master/reproject/wcs_utils.py#L203 directly."", 'comment_created': datetime.datetime(2021, 7, 30, 5, 2, 41, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 679650990, 'comment_body': ""Okay, thanks! I'll move that check outside."", 'comment_created': datetime.datetime(2021, 7, 30, 5, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 681019424, 'comment_body': ""I think we need clarification from @Cadair here.  It seems if we want @Cadair's logic than using `has_celestial` is the was to go.  But you're right that if we are restricting this to 2-D celestial cubes only, then the above logic looks correct."", 'comment_created': datetime.datetime(2021, 8, 2, 14, 28, 40, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 688862426, 'comment_body': 'Updated the code to use `has_celestial`.', 'comment_created': datetime.datetime(2021, 8, 14, 4, 38, 41, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}]","[{'commit_sha': '3680df2d4eab3c90e507c7a9ded46e714344fa61', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de2a002058af3d48a0da8d162851b955bf9008cd', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c6b204ea99284a795a092738d297aca3207ed60', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b40b1c4329f94bccb79ca5ad99f081a1086d8c47', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8651d31d4e384b0ec623ab3e4660588b2eb49c57', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe2dd56a682517c815e8ae55db9e9a2cb9b79e12', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c2b9e8116b21733e0432e6ae8c99dae58e93a27', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7c3815fa527bddbe07ec73a7fc1d3a379ab5f4b', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0afb066d7e14f460ef8d558a9b6e32aefc23592', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5ef160569e537417dce62676057ea598c07d633', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b42e13622474153efedfa37a406f9a937f00966', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceb63628efd3024e220b209dcf26b7e78120aeef', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdb931496c3f403598a8608089237e8700749a6a', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f575a493b7ec39da8d5fead7eff9da3c018c3010', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a0c546f6c54f39c7b05c5252df3e29e8ae76f6d', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7dc5e8a12f7d9426aea0a7a8b2d7f3db6b898bb', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9eaa463fa8a737c180b59be3aa704e3032fff13', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}]",Adwait Bhope,32306983,adwaitbhope@gmail.com,User,,22,,37,38
716590247,Add util for identifying invariant axes in a WCS,"### Description

Fixes #432.",True,459,https://api.github.com/repos/sunpy/ndcube/pulls/459,https://github.com/sunpy/ndcube/pull/459,closed,53,0,3,7,5,4,0,0,[],2021-08-20 09:36:15+00:00,2021-08-23 12:32:42+00:00,269787.0,"3 days, 2:56:27","[{'comment_id': 692815379, 'comment_body': 'Do we need to have an `input_shape` here? Could we just use `pixel_n_dim` from the WCS and pass some static number to `np.arange()` below?', 'comment_created': datetime.datetime(2021, 8, 20, 9, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 692836054, 'comment_body': '```suggestion\r\n   return [np.allclose(input_coord, output_coord, atol=1e-6)\r\n            for input_coord, output_coord in zip(input_pixel_coords, output_pixel_coords)]\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 10, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 692836878, 'comment_body': 'I think we do need the `input_shape` here.', 'comment_created': datetime.datetime(2021, 8, 20, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 692945774, 'comment_body': 'Why atol? It might be worth exposing atol and rtol as kwargs in this function :thinking: ', 'comment_created': datetime.datetime(2021, 8, 20, 13, 27, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}]","[{'commit_sha': '24ec94da340f25de131d75afa146ec05c4b740fd', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2efcede756ed4d0d3508c5dfdfca2f4faaf5091e', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5078155297166ee247169c370aad87ed44c6ae4', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c4c5a369c55f3f3e53837dd3db2b5f589b750ae', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f12394d49287a230f766527e79728e49d0c8fe2', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39229f726eec68bc553c29866103a67a04211438', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b3e53d329d68df0a06df885ec73caf3f218710e', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}]",Adwait Bhope,32306983,adwaitbhope@gmail.com,User,,22,,37,38
683188069,Combine cubes from NDCubeSequence using reproject,"### Description

Fixes #430.

I'm currently only assuming one sequence axis, that part needs to be handled better.
I'm also exposing an `axis` parameter for stacking data which will affect the `mapping` passed on to the `CompoundLowLevelWCS`.",False,436,https://api.github.com/repos/sunpy/ndcube/pulls/436,https://github.com/sunpy/ndcube/pull/436,closed,190,0,3,29,7,31,1,0,[{'name': 'stale'}],2021-07-04 14:57:50+00:00,2022-08-28 05:14:41+00:00,36253011.0,"419 days, 14:16:51","[{'comment_id': 663936922, 'comment_body': 'I think you want to dispatch on type here. Depending on what type the `sequence_axis_coords` are will depend on what type of table coordinate you want to make.', 'comment_created': datetime.datetime(2021, 7, 5, 13, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 663940865, 'comment_body': ""I would expect that you would need to involve `axis` in this computation. If you haven't put the new pixel axis first then the new WCS axis doesn't want to be last?"", 'comment_created': datetime.datetime(2021, 7, 5, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 663942425, 'comment_body': ""I don't really see any reason why we should only use the first world axis along the sequence here? What about if there is two coords along the sequence axis?\r\n\r\n@DanRyanIrish is this a thing which can even happen?"", 'comment_created': datetime.datetime(2021, 7, 5, 13, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 663942663, 'comment_body': 'The fact you drop to `values()` and then rebuild a quantity here is not good. I think the fix is to dispatch on type of table coordinate like I mention on the line below.', 'comment_created': datetime.datetime(2021, 7, 5, 13, 43, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 663944335, 'comment_body': 'This is a little confusing. What this is is the *array* axis we are stacking along.\r\n\r\nI do wonder if we even want this to be a configurable parameter. If we are being purists about it then the slowest varying coordinate should go last (which it is a safe assumption is the sequence dimension). I would propose maybe just dropping this parameter all together. I wonder if @DanRyanIrish or @wtbarnes have differing opinions on that though.', 'comment_created': datetime.datetime(2021, 7, 5, 13, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 663944603, 'comment_body': ""I would put this parameter first, it's definitely the most important one."", 'comment_created': datetime.datetime(2021, 7, 5, 13, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 663953061, 'comment_body': 'Yeah, this computation needs to be improved. It would also depend on whether we want to drop the axis parameter entirely as you mentioned in the other comment.', 'comment_created': datetime.datetime(2021, 7, 5, 13, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 663955855, 'comment_body': ""I've used the first world axis just to simplify things for getting a working prototype.\n\nSince `sequence_axis_coords` extracts coordinates from the `global_coords` of every cube, I think it's possible to have more than one world axis. The construction of a compound WCS would be a little more complicated in that case."", 'comment_created': datetime.datetime(2021, 7, 5, 14, 2, 46, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 663957610, 'comment_body': 'Yup, will be doing that.', 'comment_created': datetime.datetime(2021, 7, 5, 14, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 663960497, 'comment_body': ""`values()` actually still returns a list of astropy objects like `Time` or `Quantity`. I'm then wrapping it in one single `Quantity` object (where type checking needs to be done)."", 'comment_created': datetime.datetime(2021, 7, 5, 14, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 667130956, 'comment_body': ""I've made some updates that can handle multiple coords along the sequence axis."", 'comment_created': datetime.datetime(2021, 7, 9, 18, 14, 14, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 667132061, 'comment_body': ""For now, I've dropped the axis parameter to make things a little simpler while computing the pixel to world axis mapping."", 'comment_created': datetime.datetime(2021, 7, 9, 18, 16, 13, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 667919457, 'comment_body': '```suggestion\r\n        mapping =list(range(target_wcs.pixel_n_dim))\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 13, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 667963734, 'comment_body': ""Don't think the double underscore is really needed.\r\n\r\n```suggestion\r\n    def _get_sequence_axes_wcs(self):\r\n```"", 'comment_created': datetime.datetime(2021, 7, 12, 14, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 667964439, 'comment_body': 'This probably needs an `else: get angry` clause.', 'comment_created': datetime.datetime(2021, 7, 12, 14, 9, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673136399, 'comment_body': 'convert this to a warning.', 'comment_created': datetime.datetime(2021, 7, 20, 13, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673139477, 'comment_body': '```\r\nif not table_coords:\r\n    table_coords.append(QuantityTableCoordinate(u.Quantity(np.arange(length_of_sequence)),\r\n                                                names=axis_name))', 'comment_created': datetime.datetime(2021, 7, 20, 13, 48, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673140907, 'comment_body': '```suggestion\r\n            if isinstance(axis_coords[0], (u.Quantity, numbers.Number)):\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 13, 50, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673144853, 'comment_body': '```suggestion\r\nfrom astropy.coordinates import SkyCoord\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 13, 54, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 673724134, 'comment_body': 'Insert a check here to ensure all cubes have the same shape.  For now, if cubes have different shapes, raise a `ValueError`.\r\n\r\n(`NDCubeSequence` supports some limited cases were cubes are of different shapes.)', 'comment_created': datetime.datetime(2021, 7, 21, 7, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 680998767, 'comment_body': ""Set `physical_type='meta.obs.sequence'`"", 'comment_created': datetime.datetime(2021, 8, 2, 14, 3, 12, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 681001465, 'comment_body': 'In each case, try to pull the `physical_type` of each coord from the first cube in the sequence and use it to set the `physical_type` of each `TableCoordinate`.', 'comment_created': datetime.datetime(2021, 8, 2, 14, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 682791992, 'comment_body': '@adwaitbhope Any progress on this?', 'comment_created': datetime.datetime(2021, 8, 4, 16, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 683598859, 'comment_body': ""I have now. I'm extracting the physical type from `global_coords`. But since we're iterating through `.items()` of the `sequence_axis_coords` dictionary, their order doesn't seem to be the same at every run.\r\n\r\nI'm sorting the `wcs.world_axis_physical_types` [in the tests](https://github.com/sunpy/ndcube/pull/436/files#diff-59b4a166f134d0edaa011c2f0169836eacf9e39ba10d06222610b19b9823aa19R223-R228) due to this, is that alright?"", 'comment_created': datetime.datetime(2021, 8, 5, 16, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 684222632, 'comment_body': '```suggestion\r\nAdds functionality to stack cubes of an `~.NDCubeSequence` object together into a single `.NDCube` object, by reprojecting them to a common WCS and adding an extra dimension corresponding to the sequence axis.\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 13, 10, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 684223973, 'comment_body': ""Isn't this backwards? We have one pixel axis (the sequence axis) but can have many world coordinates (the sequence axis coords)"", 'comment_created': datetime.datetime(2021, 8, 6, 13, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 684224554, 'comment_body': ""Not all global coords are in `_internal_coords`, i.e. ones sliced out of a WCS. I don't think this is the best way to do this.\r\n\r\nWouldn't just `self[0].global_coords.physical_types[axis_name]` work?"", 'comment_created': datetime.datetime(2021, 8, 6, 13, 13, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 684395068, 'comment_body': ""Right, yes (I'm gonna go check if there are more such instances!)"", 'comment_created': datetime.datetime(2021, 8, 6, 17, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 684397567, 'comment_body': 'It does - I think I missed this property while going through the code. Updated it now.', 'comment_created': datetime.datetime(2021, 8, 6, 17, 32, 58, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 757571705, 'comment_body': '```suggestion\r\n        Reprojects all `~ndcube.NDCube` objects in the `~ndcube.NDCubeSequence` to a common WCS, and stacks the data together\r\n```', 'comment_created': datetime.datetime(2021, 11, 26, 15, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'hayesla', 'type': 'User'}, {'comment_id': 757572622, 'comment_body': 'maybe a warning or something should be flagged here if this reproject is going to take a long time. Imagine a user has a sequence of a hundred 4Kx4K AIA images and then tried to run this, it will take a looonng time', 'comment_created': datetime.datetime(2021, 11, 26, 15, 10, 39, tzinfo=datetime.timezone.utc), 'commenter': 'hayesla', 'type': 'User'}]","[{'commit_sha': 'eaf6a1a4d4258bc5ae48b2c53dc8d0750835a69a', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1750aefa3dff2c45cfa8ce5180b49fa8b8660eb', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22d4de0afaacce719fce54a367d22ba3bfded9cf', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43c4f0dc04f4a6a1f9b625f0c99f7ced8bf4f185', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32690bfb8f34ee22a0f2cbdc1908d90152cee538', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8f0d1cad5374e04754a73e8b353a6a9506d6347', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8970f718e256351aeffae8f2fcedd573f880118a', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97f75ea8d3446029728ff17426b47ae30c322dc0', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8533f65a7dc195eeb0efc2a0339229b7866dff2c', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '264e7f618e55211b421aa82c9e0f0c1ac2fd1f5c', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6beb6bbb95f8c22e68510f59d92060aedf6a131', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b0ff019489ff71d381b6daa79238ae05d80e969', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bb06d0dc2e4e9298399cfcf0c8cbe4af2e01e5b', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5946d33b585dbbab0a85a7ab7c4a4d9587e8a1d1', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bea7c4f8c18123ced7d217e9266f85f1100d84e2', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '603a270c69c952e5905c424a32b64ed620e60cfd', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92fd8543bb29ea794454639dc64465ddfa0a5983', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '060ec4cab7e53d4a00eb1f4a6a6fe5f5b721fbf9', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00524b11cfe9138ee3df788c3dba79e6468be814', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b0e350057bef3a2af1dcac68997adcda2a2cb2c', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '247fd875e43e8dcd5c7b7479bc40a5ffc407d35d', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '905bb580edf355e42e76e96b41a24a6095b58670', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf4a365ded25d66da2fce5407a4f20fc75250e0a', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6786314ece486e9f1679bbeceabe4cb0c67b636a', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88500eab3862fb3982c197e1100969ade977210d', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa6595f7c47f76784ffe3d8e5f32324024c76e2c', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cb9c519297f6506eed57f6d3c131e56353fb3e7', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a95305abc9404479f4cfbbfe784dd3ee5386d0b', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cc4451a21d62b255eb0440160c358b4e597ff4c', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}]",Adwait Bhope,32306983,adwaitbhope@gmail.com,User,,22,,37,38
694154363,Reproject NDCubeSequence Documentation,"### Description

Added docs for reprojecting `NDCubeSequence` (#436).",False,441,https://api.github.com/repos/sunpy/ndcube/pulls/441,https://github.com/sunpy/ndcube/pull/441,closed,115,0,2,4,4,4,4,0,"[{'name': 'No Changelog Entry Needed'}, {'name': 'stale'}, {'name': 'documentation'}, {'name': 'Resample'}]",2021-07-21 08:17:46+00:00,2022-02-06 16:03:24+00:00,17307938.0,"200 days, 7:45:38","[{'comment_id': 673765035, 'comment_body': 'These three WCS objects are still essentially the same coordinates. Should we initialize the cubes with the same object or introduce some changes in the WCS?\r\n\r\nI think passing on the same WCS instance will not highlight that `combine_cubes()` reprojects the cubes.', 'comment_created': datetime.datetime(2021, 7, 21, 8, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}, {'comment_id': 674694114, 'comment_body': 'Yeah I think we should probably change them. Maybe change the crpix values around a bit? (Also the HPLN/LT coordinates should really have CRVAL be 0,0).', 'comment_created': datetime.datetime(2021, 7, 22, 10, 56, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 682793548, 'comment_body': 'Any updates on this @adwaitbhope?', 'comment_created': datetime.datetime(2021, 8, 4, 16, 53, 24, tzinfo=datetime.timezone.utc), 'commenter': 'DanRyanIrish', 'type': 'User'}, {'comment_id': 683610018, 'comment_body': 'Added a commit now', 'comment_created': datetime.datetime(2021, 8, 5, 16, 29, tzinfo=datetime.timezone.utc), 'commenter': 'adwaitbhope', 'type': 'User'}]","[{'commit_sha': 'fa9a0a17ec30b1d6d06db7c643380185f035c9c1', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf9d0b4f5130a92174a9c586961f53824f8e8de0', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e9539a0f6814ad3128718f6e766d282bec2edd4', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e0b15ea2730ed5f8047dbce30ac2f24657ac421', 'committer_username': 'adwaitbhope', 'committer_name': 'Adwait Bhope', 'committer_email': 'adwaitbhope@gmail.com', 'commit_date': datetime.datetime(2017, 9, 26, 16, 52, 12, tzinfo=datetime.timezone.utc)}]",Adwait Bhope,32306983,adwaitbhope@gmail.com,User,,22,,37,38

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
100395296,ndcube,sunpy/ndcube,Python,47,44,12,31,2598,69,3,7,"[{'id': 716590247, 'number': 459, 'closed': datetime.datetime(2021, 8, 23, 12, 32, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 9, 36, 15, tzinfo=datetime.timezone.utc), 'time_taken': 269787.0, 'time_delta': '3 days, 2:56:27', 'additions': 53, 'deletions': 0, 'state': 'closed'}, {'id': 699277966, 'number': 448, 'closed': datetime.datetime(2021, 8, 21, 19, 26, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 7, 23, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2030613.0, 'time_delta': '23 days, 12:03:33', 'additions': 137, 'deletions': 15, 'state': 'closed'}, {'id': 694154363, 'number': 441, 'closed': datetime.datetime(2022, 2, 6, 16, 3, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 8, 17, 46, tzinfo=datetime.timezone.utc), 'time_taken': 17307938.0, 'time_delta': '200 days, 7:45:38', 'additions': 115, 'deletions': 0, 'state': 'closed'}, {'id': 691863364, 'number': 439, 'closed': datetime.datetime(2021, 7, 23, 12, 6, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 7, 4, 41, tzinfo=datetime.timezone.utc), 'time_taken': 536491.0, 'time_delta': '6 days, 5:01:31', 'additions': 62, 'deletions': 0, 'state': 'closed'}, {'id': 683188069, 'number': 436, 'closed': datetime.datetime(2022, 8, 28, 5, 14, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 14, 57, 50, tzinfo=datetime.timezone.utc), 'time_taken': 36253011.0, 'time_delta': '419 days, 14:16:51', 'additions': 190, 'deletions': 0, 'state': 'closed'}, {'id': 675619903, 'number': 434, 'closed': datetime.datetime(2021, 7, 21, 10, 16, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 17, 18, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2480291.0, 'time_delta': '28 days, 16:58:11', 'additions': 147, 'deletions': 0, 'state': 'closed'}, {'id': 675076490, 'number': 433, 'closed': datetime.datetime(2021, 7, 7, 16, 49, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 4, 59, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1338631.0, 'time_delta': '15 days, 11:50:31', 'additions': 55, 'deletions': 1, 'state': 'closed'}, {'id': 611563087, 'number': 419, 'closed': datetime.datetime(2021, 4, 26, 10, 30, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 8, 13, 34, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1544211.0, 'time_delta': '17 days, 20:56:51', 'additions': 2, 'deletions': 2, 'state': 'closed'}]"
