pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
679442104,[feature] Implemented get text like translations #235,"Used ttag js to implement get text like translations.

Closes #235
Fixes #304 
Closes #308 ",True,287,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/287,https://github.com/openwisp/openwisp-wifi-login-pages/pull/287,closed,4669,2975,79,26,6,87,1,1,[{'name': 'enhancement'}],2021-06-28 22:16:14+00:00,2021-07-20 05:31:25+00:00,1840511.0,"21 days, 7:15:11","[{'comment_id': 664079561, 'comment_body': ""shouldn't this be `!i18n/*.po`?\r\nOtherwise we would include only english translations."", 'comment_created': datetime.datetime(2021, 7, 5, 18, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664079761, 'comment_body': ""shouldn't we be able to remove this text from here?"", 'comment_created': datetime.datetime(2021, 7, 5, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664079800, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 7, 5, 18, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664079869, 'comment_body': 'Translation > Translations?', 'comment_created': datetime.datetime(2021, 7, 5, 18, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664079977, 'comment_body': 'translations are\r\nwere compiled instead of were made', 'comment_created': datetime.datetime(2021, 7, 5, 18, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664080728, 'comment_body': ""let's flag as yaml to get the colored syntax"", 'comment_created': datetime.datetime(2021, 7, 5, 18, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664081600, 'comment_body': 'why npx?', 'comment_created': datetime.datetime(2021, 7, 5, 18, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664122931, 'comment_body': 'since these variables names cannot be shrinked by webpack, we should put extra care in shortening them to keep size under control.\r\n\r\nThis one for example could simply be: `PWD_REVEAL`.\r\n\r\nI will leave more examples of how we could rename these below.', 'comment_created': datetime.datetime(2021, 7, 5, 20, 52, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664122950, 'comment_body': '`PWD_HIDE`', 'comment_created': datetime.datetime(2021, 7, 5, 20, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664123346, 'comment_body': 'this could be `ACCT_ACTIVE` and everything related to sessions can be prefixed with `ACCT` (radius accounting) or `SESS`, we could even change the code to use `accounting` instead of `session` to make this clearer. Accounting is more generally used as term.', 'comment_created': datetime.datetime(2021, 7, 5, 20, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664123482, 'comment_body': 'maybe in this case and other similar cases we can simply use `LOGOUT`, what do you think?', 'comment_created': datetime.datetime(2021, 7, 5, 20, 54, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664123777, 'comment_body': 'eg: `ACCT_START_TIME`', 'comment_created': datetime.datetime(2021, 7, 5, 20, 55, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664123953, 'comment_body': 'can we use just `STATUS`?', 'comment_created': datetime.datetime(2021, 7, 5, 20, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664124054, 'comment_body': 'can we use just `LOGGED_IN`?', 'comment_created': datetime.datetime(2021, 7, 5, 20, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664124094, 'comment_body': 'just `EMAIL` and reuse the same string elsewhere?', 'comment_created': datetime.datetime(2021, 7, 5, 20, 56, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664124280, 'comment_body': 'same concept applies here and anywhere common words are used', 'comment_created': datetime.datetime(2021, 7, 5, 20, 57, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664124585, 'comment_body': ""what's going on here? I guess if the translatable text has to be defined in the configuration, we may just avoid this translation string here.\r\nThe same applies to other occurrences of the same issue."", 'comment_created': datetime.datetime(2021, 7, 5, 20, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664124771, 'comment_body': 'maybe we can have a separate string just for `(optional)` and then just use `LAST_NAME + OPTIONAL`?', 'comment_created': datetime.datetime(2021, 7, 5, 20, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664124855, 'comment_body': 'do you see the same word being repeated multiple time? Can we avoid it?\r\nI doubt that if anyone wants to change it in one place they will not want to change it everywhere.', 'comment_created': datetime.datetime(2021, 7, 5, 20, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664125659, 'comment_body': ':man_facepalming:  :facepalm:  :face_with_head_bandage:  :face_with_thermometer: \r\nthese kind of things should always be configuration... Applies to any other organization specifc detail.', 'comment_created': datetime.datetime(2021, 7, 5, 21, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664125891, 'comment_body': ""how did this end up here? Does not look like a translatable string, it's just the language code, can you point out at what part of the code is generating this please?"", 'comment_created': datetime.datetime(2021, 7, 5, 21, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664126399, 'comment_body': 'mmm...\r\n\r\nWhat if a user wants to add a new link and translate it in multiple languages?\r\nCan they do it somehow?', 'comment_created': datetime.datetime(2021, 7, 5, 21, 5, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664126968, 'comment_body': 'What about the possibility of changing/customizing translations?', 'comment_created': datetime.datetime(2021, 7, 5, 21, 8, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 666913779, 'comment_body': ""I also don't want to define it here, but In configuration, I saw email is also defined for multiple languages i.e. old getText is used in the code for email value also."", 'comment_created': datetime.datetime(2021, 7, 9, 12, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 666913932, 'comment_body': 'I am making email for english language only and removing it from translation', 'comment_created': datetime.datetime(2021, 7, 9, 12, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 667493755, 'comment_body': 'Used previous getText', 'comment_created': datetime.datetime(2021, 7, 11, 14, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 667493937, 'comment_body': 'In status page for account start and stop time. Basically it translates the time to be in the format of that locale', 'comment_created': datetime.datetime(2021, 7, 11, 14, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 667498064, 'comment_body': 'updated readme for this.', 'comment_created': datetime.datetime(2021, 7, 11, 15, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 667619079, 'comment_body': '```suggestion\r\n    expect(mapRoutes(wrapper)[""/default/status""]).toBe(Suspense);\r\n```\r\nThis is not giving Suspense when I tried. Do you know how to fix this?\r\nAlso, the component.find(Routes) returns empty but routes are present in that.\r\nThis is the only test where I faced problems in fixing.', 'comment_created': datetime.datetime(2021, 7, 12, 4, 40, 13, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 668353083, 'comment_body': 'can you reply to this question please? :point_up: ', 'comment_created': datetime.datetime(2021, 7, 13, 1, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668354064, 'comment_body': 'It looks like this file is the one that process translation files, right?\r\nIf so, can you please give it a more descriptive name and add some comments explaining what kind of operations are done on a general level?\r\n\r\nFor example, the name could be something like `build_translations.js` or `make_translations.js`.\r\n\r\nThe comments could be added at the beginning of the file, no need to be long and super detailed, just a summary and any important note to keep in mind.', 'comment_created': datetime.datetime(2021, 7, 13, 1, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668354502, 'comment_body': 'it looks like something is not working here', 'comment_created': datetime.datetime(2021, 7, 13, 1, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668354620, 'comment_body': 'why is thi suppercase?', 'comment_created': datetime.datetime(2021, 7, 13, 1, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668356984, 'comment_body': 'this title is going to be different for each organization and should not be in the language file', 'comment_created': datetime.datetime(2021, 7, 13, 1, 14, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668363119, 'comment_body': ""is lodash used only during build or also in the frontend code? If it's used only during build, are you sure that this doesn't increase the webpack build size which is downloaded by the browser?"", 'comment_created': datetime.datetime(2021, 7, 13, 1, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668364532, 'comment_body': ""also here and in other snapshots it looks like the translations aren't working"", 'comment_created': datetime.datetime(2021, 7, 13, 1, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668365208, 'comment_body': 'any `PATTERN_DESCRIPTION` you can shorten to `PATTERN_DESC`', 'comment_created': datetime.datetime(2021, 7, 13, 1, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668366491, 'comment_body': '``` \r\nThe custom files need not to be duplicate of the default file i.e. translation\r\n   can be defined as the custom strings.\r\n```\r\n\r\nThis part is not clear to me. Are you trying to say that only the customizations have to be defined and that there\'s no need to duplicate the whole file?\r\n\r\nIf so, please simplify and link to the example section which you added below in ""Customizing Translations"".', 'comment_created': datetime.datetime(2021, 7, 13, 1, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668366637, 'comment_body': 'for single organisation > for a specific organization.', 'comment_created': datetime.datetime(2021, 7, 13, 1, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668366876, 'comment_body': 'Translation > translations', 'comment_created': datetime.datetime(2021, 7, 13, 1, 44, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668367354, 'comment_body': ""is the default language option still supported right?\r\n\r\nThat's a good thing to have, not everyone will want the default language to be english.\r\n\r\nIt would be good to mention that here."", 'comment_created': datetime.datetime(2021, 7, 13, 1, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668367529, 'comment_body': 'this is very nice, please can you divide this section in 2 (have 2 headings) so we can have an internal link which we can use from the earlier part?', 'comment_created': datetime.datetime(2021, 7, 13, 1, 46, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668367801, 'comment_body': 'also here would be good to link to the example section below', 'comment_created': datetime.datetime(2021, 7, 13, 1, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668368220, 'comment_body': 'this could be an heading on its own:\r\n\r\n`Customizing translations for a specific organization`', 'comment_created': datetime.datetime(2021, 7, 13, 1, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668368417, 'comment_body': '`Customize translations for a specific language`', 'comment_created': datetime.datetime(2021, 7, 13, 1, 49, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668372809, 'comment_body': 'we should ignore custom translations though', 'comment_created': datetime.datetime(2021, 7, 13, 2, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668378592, 'comment_body': 'I would also invert the order, I would explain how to do general language customizations first and then org specific customizations.\r\n\r\nBTW: have you tried to make general language customizations for several translation strings and then do only 1 or 2 lanaguage customizations for a specific org?\r\n\r\nDo they play well together?\r\nThe org specific customizations should be merged with (and override) the lang customizations which should in turn be merged with (and override) the default lang translations. Let me know if this is clear.', 'comment_created': datetime.datetime(2021, 7, 13, 2, 20, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668381186, 'comment_body': ""One more question regarding the whole section.\r\n\r\nWhy are you dividing the section in numbered items?\r\n\r\nWouldn't it be better to the have specific sections with their own headings?\r\n\r\nEg:\r\n\r\n### Translations\r\n\r\nTranslations are loaded at runtime from the JSON files that were compiled during the build process according to the available languages defined and taking into account any customization of the translations (more on that in [link] and [link]).\r\n\r\n#### Defining available languages\r\n\r\n....\r\n\r\n(BTW why is this subject at number 7 in your text? Probably this should be explained as one of the first things, what do you think?)\r\n\r\n#### Creating new translations for a language\r\n\r\n....\r\n\r\n#### Updating existing translations\r\n\r\n....\r\n\r\n#### Customizing translations for a specific language\r\n\r\nExplanation...\r\n\r\nExample...\r\n\r\n#### Customizing translations for a specific organization and language\r\n\r\nExplanation ...\r\n\r\nExample ..."", 'comment_created': datetime.datetime(2021, 7, 13, 2, 28, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668381544, 'comment_body': 'what about `translations-add`?\r\n\r\nI tried this command with:\r\n\r\n```\r\nyarn create-translation it i18n/it.po\r\n```\r\n\r\nOutput I got is:\r\n\r\n``` \r\nmsgid """"\r\nmsgstr """"\r\n""Content-Type: text/plain; charset=UTF-8\\n""\r\n""Plural-Forms: nplurals = 2; plural = (n != 1);\\n""\r\n""Language: it\\n""\r\n""MIME-Version: 1.0\\n""\r\n""Content-Transfer-Encoding: 8bit\\n""\r\n```\r\n\r\nI had to run the update translation command to get all the translation strings added, but I think this should be done automatically.\r\n', 'comment_created': datetime.datetime(2021, 7, 13, 2, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668381671, 'comment_body': 'what about `translations-update`?\r\nIs the `client/` arg really needed or can you modify the definition of this command to include it automatically without the need of having the user specify that?', 'comment_created': datetime.datetime(2021, 7, 13, 2, 30, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668384270, 'comment_body': 'when I ran this command after creating the translation file, I got a lot of repeated output like:\r\n\r\n```\r\nThough the ""loose"" option was set to ""false"" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-methods since the ""loose"" mode option was set to ""true"" for @babel/plugin-proposal-class-properties.\r\nThe ""loose"" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding\r\n\t[""@babel/plugin-proposal-private-methods"", { ""loose"": true }]\r\nto the ""plugins"" section of your Babel config.\r\n```\r\n\r\nWhy is this? Can we avoid this?', 'comment_created': datetime.datetime(2021, 7, 13, 2, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668385664, 'comment_body': 'have you looked at https://github.com/openwisp/openwisp-wifi-login-pages/issues/308, it deals with this setting. I think we can pass the language code directly without the need of repeating it.', 'comment_created': datetime.datetime(2021, 7, 13, 2, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668386979, 'comment_body': 'The pattern can be set as null here. But setting it to required here breaks this. Why did you do this change?', 'comment_created': datetime.datetime(2021, 7, 13, 2, 46, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 668700013, 'comment_body': 'I added a test for rendering with placeholder tags, so that in the future if placeholder tags are changed then the snapshot must fail, and updating `po` files are required. Same reason for other occurences also.', 'comment_created': datetime.datetime(2021, 7, 13, 12, 7, 53, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 668700109, 'comment_body': 'https://github.com/openwisp/openwisp-wifi-login-pages/pull/287/files/a01cc6ef3e9b24ce067fdec5ed3377da0384e60e#r668700013', 'comment_created': datetime.datetime(2021, 7, 13, 12, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 669436061, 'comment_body': 'for custom po files, all the msg-id is not required, so  I thought to add a script just to create a translation file with content headers.', 'comment_created': datetime.datetime(2021, 7, 14, 9, 12, 39, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 669629574, 'comment_body': 'I will solve this in this.', 'comment_created': datetime.datetime(2021, 7, 14, 13, 45, 13, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 669629780, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2021, 7, 14, 13, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 669640404, 'comment_body': ""Yes, it's still supported."", 'comment_created': datetime.datetime(2021, 7, 14, 13, 57, 20, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 669641189, 'comment_body': 'Like it will use the default if browser returns none in `navigator.language`', 'comment_created': datetime.datetime(2021, 7, 14, 13, 58, 15, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 669642268, 'comment_body': ""It's used in the build process only."", 'comment_created': datetime.datetime(2021, 7, 14, 13, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 670567563, 'comment_body': 'I removed it.', 'comment_created': datetime.datetime(2021, 7, 15, 15, 26, 1, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 670597854, 'comment_body': '@codesankalp it sounds like we should make two separate commands, one for adding general translations and one for adding custom translations, then document these differently and explain the difference, how does this sound?', 'comment_created': datetime.datetime(2021, 7, 15, 15, 59, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670611684, 'comment_body': ""well, we should make this part smarter. I see two problems here:\r\n\r\n1. we already have the list of supported languages, why do we have to try to fetch it before knowing we don't have that language?\r\n2. the preferred languages can be multiple, so if the app doesn't have the translation for the first language but has the translation for the second language we should return it\r\n\r\nCan you try improving this part please?"", 'comment_created': datetime.datetime(2021, 7, 15, 16, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670613289, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2021, 7, 15, 16, 15, 17, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 670696412, 'comment_body': 'please add this to the table of contents', 'comment_created': datetime.datetime(2021, 7, 15, 18, 6, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670696526, 'comment_body': 'please cite the default language as well', 'comment_created': datetime.datetime(2021, 7, 15, 18, 6, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670708987, 'comment_body': ""There is a problem here.\r\n\r\nThe system can be configured in different ways.\r\nIn some systems, the username will be the email, in others, the phone number.\r\nIn some systems, RADIUS realms are used, which are identified with `@` so email cannot be used.\r\nWhen the user subscribes using credit card verification, they are allowed to select a username for the reason of the RADIUS realms.\r\n\r\nAnyway, long story short, this is one of the places in which being able to specify this in the configuration would be great, can we do something like:\r\n\r\n- check if there's any custom label\r\n- if yes, use that\r\n- if no, use the default translation"", 'comment_created': datetime.datetime(2021, 7, 15, 18, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670744978, 'comment_body': ""why can't this be `yarn translations-update path-to-po-file`?"", 'comment_created': datetime.datetime(2021, 7, 15, 19, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670824070, 'comment_body': 'is this really used?', 'comment_created': datetime.datetime(2021, 7, 15, 21, 41, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670852879, 'comment_body': ""I think we can remove these default values at the end right? Let's try to shorten the code a bit where the old code is not necessary anymore, keep in mind we have to start thinking in reducing the size of the build."", 'comment_created': datetime.datetime(2021, 7, 15, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670855896, 'comment_body': '@codesankalp I verified that having ""en-US"" as preferred language breaks this code.\r\nPlease ensure the code plays well with language codes like ""en-US"", ""en-AU"", ""es-PE"", etc..', 'comment_created': datetime.datetime(2021, 7, 15, 22, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 671112031, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2021, 7, 16, 9, 41, 4, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 671123979, 'comment_body': 'I think No, because these default values are used on those URL where organization-slug is missing like `http://0.0.0.0:8080/error/` as setOrganization is not called. Also 404 page of organization and without organization is different.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 0, 41, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 671239100, 'comment_body': 'Because the first argument needs to be the path to po file and the second argument needs to be src files.\r\n\r\nhttps://github.com/ttag-org/ttag-cli/blob/76b340e87b550193da03b9a3f88dbe88b648fc93/src/index.ts#L226-L236', 'comment_created': datetime.datetime(2021, 7, 16, 13, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 671280218, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 7, 16, 14, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 671595030, 'comment_body': ""I guess we can remove this since it's already present in the translations right?"", 'comment_created': datetime.datetime(2021, 7, 17, 2, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 671595031, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 7, 17, 2, 25, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 671595409, 'comment_body': ""does this `true` and do the above `false` values returned here make any difference?\r\nIt's a bit confusing."", 'comment_created': datetime.datetime(2021, 7, 17, 2, 29, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 671595579, 'comment_body': ""why should we get this from localStorage? Don't we have it in the conf?"", 'comment_created': datetime.datetime(2021, 7, 17, 2, 30, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 671595731, 'comment_body': ""It's just to break the iteration."", 'comment_created': datetime.datetime(2021, 7, 17, 2, 32, 43, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 671595861, 'comment_body': 'I added it here because if the user wants a custom label then he can add it for the username field.', 'comment_created': datetime.datetime(2021, 7, 17, 2, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 671595988, 'comment_body': 'Ok, I will change this to not to use local storage.', 'comment_created': datetime.datetime(2021, 7, 17, 2, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 671758194, 'comment_body': 'then you should be able to simply use `return`, the last 2 return statements should not be needed, or is the linter complaining? Alternatively just use `else if` insead of the second `if` in which case you should be able to avoid the return completely and no ambiguity is left. ', 'comment_created': datetime.datetime(2021, 7, 18, 0, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 671839426, 'comment_body': 'https://github.com/openwisp/openwisp-wifi-login-pages/pull/287#discussion_r671595861', 'comment_created': datetime.datetime(2021, 7, 18, 13, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 671890509, 'comment_body': 'nice :+1: \r\nis this to disable the warning?', 'comment_created': datetime.datetime(2021, 7, 18, 20, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 672052797, 'comment_body': 'Yes', 'comment_created': datetime.datetime(2021, 7, 19, 7, 32, 11, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}]","[{'commit_sha': '83a2d036c27392266f3e350cb9c2781fe1c1b597', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a7b43a7affe6bb1cd072c2251815084b21a1508', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '618ddc5f542253a93f477dc353480ff065aa7b9e', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c499a7316bebba1d6793557e110faccb30540009', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd53889ce4394564744b07792320494628f2218c8', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b45ad16171a9ba1165af7faa02081479e7c8522c', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a723319492466c2379d31f32ff65bcecd772692', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4fb60f8b2d202d2e908bf83e4e9840763259231', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bd1fb95954de931a80b3d3befacd335cd3a4e1a', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67ccc7f1f17a1e96b9e50e48a8ca3e2ae78e8523', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1764d83225393246fbf869e1d6558bd03a36c210', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b3fa8512073c9cd46df7f5f33fc671d6a3388a7', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf663c34462886d55cee5a319d7633c12b12036b', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c77ea607d6334efa72ffd98eca3b61ee8f0b7f33', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c3b75735a58af65a150315694ef18d1d461c165', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b746b1a28ea2fe324d764f58fa4ae36c284eab4', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '995a6c7fd97ecfc836735445118bd129f600dd3f', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae1b4c5e6c74de2ac38452b674b39fbff8da8a67', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2749bcfb983ae46bcc2f3151fc7fe9c6e28744b3', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be86adf4c968f09ceddda7450277f088842fbaa8', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fb10d8a0468fea3b7f605e3e6b8aa771f30286a', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8be2646bd172584ba629a06621d3221174364dea', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f29c2f511febc95a7573836300592375d0d0e5c8', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ae5e596472e15b4f6809f243e7e62d0d5845abc', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21a2f535c32493ccd51ec93c9f8c62814abfdaaa', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42ef851df152ce78c4a4a4e8680cb3ea443ce9ea', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
717061259,[Fix] Browserlang selection bug fixed #350,"Added a check for prevProps.language must not be empty strings.
Force re-render of child components to update translations.

Fixes #350",True,352,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/352,https://github.com/openwisp/openwisp-wifi-login-pages/pull/352,closed,25,7,2,1,1,0,0,1,[],2021-08-21 00:46:44+00:00,2021-08-21 01:01:25+00:00,881.0,0:14:41,[],"[{'commit_sha': '5d83357b6f9ddc7d304535fcc52b67ae8b863737', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
685086459,[feature] Added support for default organization and reduce boilerplate #236,"Closes #236 
Closes #59 
Closes #313 ",True,303,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/303,https://github.com/openwisp/openwisp-wifi-login-pages/pull/303,closed,795,635,36,3,4,38,0,1,[],2021-07-07 10:54:13+00:00,2021-08-02 17:31:30+00:00,2270237.0,"26 days, 6:37:17","[{'comment_id': 667143613, 'comment_body': 'this name already exists > this slug already exists', 'comment_created': datetime.datetime(2021, 7, 9, 18, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 667145005, 'comment_body': 'I think it would be good to put this question after the UUID.\r\n\r\nWe could change it to ""What is the Organization RADIUS settings Token of this organization? You can get this information from the organization details in OpenWISP.""', 'comment_created': datetime.datetime(2021, 7, 9, 18, 41, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 667145121, 'comment_body': 'Also here I would add ""You can get this information from the organization details in OpenWISP.""', 'comment_created': datetime.datetime(2021, 7, 9, 18, 41, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 667146273, 'comment_body': 'the default value is hardly readable, is there any way to change its color?\r\n\r\n![Screenshot from 2021-07-09 13-42-24](https://user-images.githubusercontent.com/841044/125122814-859b8480-e0bb-11eb-8f2b-72075a0b3505.png)\r\n', 'comment_created': datetime.datetime(2021, 7, 9, 18, 43, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674424715, 'comment_body': ""one of the goals is to avoid this list of URLs.\r\nAccording to a comment from some time ago, this should not be necessary: https://github.com/openwisp/openwisp-wifi-login-pages/issues/59\r\n\r\nThe ideal solution is to have these URLs defined only once for all organizations, without the need of redefining these URLs in each configuration of each organization, not only in the YAML, but I think we can avoid to having them defined in the config.json as well because that occupies space and needs to be downloaded, it doesn't make sense to repeat this over and over because it's always going to be the same."", 'comment_created': datetime.datetime(2021, 7, 22, 0, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674425779, 'comment_body': 'can we find a way to use `{org_slug}` here too? This would allow copying this part between orgs easier.', 'comment_created': datetime.datetime(2021, 7, 22, 0, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674426090, 'comment_body': 'looks like this link is missing: https://github.com/openwisp/openwisp-wifi-login-pages/blob/7b74c90fa4960b53cd1776f476f138fbb0554fff/internals/generators/organization/config.yml.hbs#L86-L92', 'comment_created': datetime.datetime(2021, 7, 22, 0, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674426351, 'comment_body': ""I noticed that here it's named `{orgSlug}`, but above `{org_slug}`, do you know why?"", 'comment_created': datetime.datetime(2021, 7, 22, 0, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674426856, 'comment_body': 'I guess we should be able to avoid all of this block', 'comment_created': datetime.datetime(2021, 7, 22, 0, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674426872, 'comment_body': 'I guess we should be able to avoid all of this block', 'comment_created': datetime.datetime(2021, 7, 22, 0, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674426934, 'comment_body': 'I guess we should be able to avoid all of this block', 'comment_created': datetime.datetime(2021, 7, 22, 0, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674427177, 'comment_body': 'I guess we can live without input_fields, additional_info_text, buttons, links', 'comment_created': datetime.datetime(2021, 7, 22, 0, 22, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674427196, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 7, 22, 0, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674427223, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 7, 22, 0, 22, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674427246, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 7, 22, 0, 22, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674427285, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 7, 22, 0, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674427722, 'comment_body': ""I'd specify `/internals/generators/config.yml.hbs` just for the sake of explicitness.."", 'comment_created': datetime.datetime(2021, 7, 22, 0, 24, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 674430167, 'comment_body': 'maybe this section and ""settings"" can be merged?', 'comment_created': datetime.datetime(2021, 7, 22, 0, 33, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 675006131, 'comment_body': 'Because it is replaced in the client code.', 'comment_created': datetime.datetime(2021, 7, 22, 17, 24, 11, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 678689863, 'comment_body': '`proxyURLs` is inconsisent naming, please be consistent and change it to `proxy-urls`', 'comment_created': datetime.datetime(2021, 7, 28, 22, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678694325, 'comment_body': ""There's a lot of repetition here.\r\nWhat about having a single function that reads an object instead?\r\n\r\nEg:\r\n\r\n```javascript\r\nconst prefix = '/api/v1/{orgSlug}/';\r\nconst paths = {\r\n   password_change: 'account/password/change',\r\n   password_reset: 'account/password/reset',\r\n   // ... etc\r\n}\r\n\r\nconst reverse = (name, orgSlug) => {\r\n  const path = paths[name];\r\n  if (!path) {\r\n    // throw error\r\n  }\r\n  `${prefix.replace('{orgSlug}', orgSlug)}${path}`;\r\n}\r\n```\r\n\r\nYou can then import only 1 function (reverse) in each file and call it like `reverse('password_change', orgSlug)`."", 'comment_created': datetime.datetime(2021, 7, 28, 22, 28, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678753445, 'comment_body': ""I have reasoned a bit about these default configurations and I thought the following:\r\n\r\nthese default config are going to be downloaded anyway by the user right?\r\nit doesn't make sense to add some details like these ones in the default.\r\nI think we should keep most of these details empty (empty lists or empty strings), while we should keep these in the generator because it will serve as an example, then the user can remove the sections they don't need. It would me a lot more practical than having to set null to each option not needed. It should result also in smaller size.\r\nWhat do you think?"", 'comment_created': datetime.datetime(2021, 7, 29, 1, 17, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678753628, 'comment_body': 'same applies to these links', 'comment_created': datetime.datetime(2021, 7, 29, 1, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678754041, 'comment_body': ""this link should be removed because it doesn't work when mobile verification is not enabled, but it's shown anyway, which is not good.\r\n\r\nI think we could even go as far as have zero links by default."", 'comment_created': datetime.datetime(2021, 7, 29, 1, 18, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678754220, 'comment_body': 'same here, we could have zero links by default', 'comment_created': datetime.datetime(2021, 7, 29, 1, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678754477, 'comment_body': ""always on the concern of size, we could change these files to have only a few words in them because they're not going to be used anyway."", 'comment_created': datetime.datetime(2021, 7, 29, 1, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678756309, 'comment_body': 'I think we should merge this section with https://github.com/openwisp/openwisp-wifi-login-pages/blob/e5792c332c4758c5391cbcbbf6366c2f1aa90b72/README.md#add-organization-configuration.', 'comment_created': datetime.datetime(2021, 7, 29, 1, 25, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678758749, 'comment_body': 'BTW, why aren\'t you using articles? I would change this to ""The configuration of organizations is generated ..."".', 'comment_created': datetime.datetime(2021, 7, 29, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678759634, 'comment_body': 'The part on removing sections can be kept here (with a dedicated heading) but I guess that if we go with the proposed changes it will have to be updated. ', 'comment_created': datetime.datetime(2021, 7, 29, 1, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678759788, 'comment_body': 'also here: Default configuration > The default configuration', 'comment_created': datetime.datetime(2021, 7, 29, 1, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 679235444, 'comment_body': ""Should I change the content of these files? \r\nAlso, the whole content is present in the configuration, Can we use express to serve these files' content?"", 'comment_created': datetime.datetime(2021, 7, 29, 15, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 679522408, 'comment_body': 'are you sure this section is still relevant after the latest changes?', 'comment_created': datetime.datetime(2021, 7, 29, 22, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 679526783, 'comment_body': 'can we please eliminate all `type` attributes of all inputs?\r\nThis thing is only adding overhead and increasing the size of configurations with no benefits, so I think we can get rid of it.', 'comment_created': datetime.datetime(2021, 7, 29, 22, 31, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 679527059, 'comment_body': ""let's have null here as default please (both)"", 'comment_created': datetime.datetime(2021, 7, 29, 22, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 679527658, 'comment_body': ""> Should I change the content of these files?\r\n\r\nYes.\r\n\r\n> Also, the whole content is present in the configuration, Can we use express to serve these files' content?\r\n\r\nDefinitely! That's a great idea! :+1: "", 'comment_created': datetime.datetime(2021, 7, 29, 22, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 679801097, 'comment_body': 'Yes, because if we want to remove all the links section then we can remove it by using null there instead of removing those lines. The point is that we can remove any field by making it `null` in the org config', 'comment_created': datetime.datetime(2021, 7, 30, 9, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 679809409, 'comment_body': 'Do I have to remove type attributes from the whole code or just from the `default.yml` file?', 'comment_created': datetime.datetime(2021, 7, 30, 10, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 679961376, 'comment_body': 'we can hardcode the type attributes of form inputs in the HTML and remove any reference from them in default.yml, the YAML generator and everything else.\r\n\r\nThe same could apply for any other property which does not make sense to allow to be configurable, for example: why should we allow to change the type attribute of the remember me checkbox? If you find any other occurrence of the same concept let me know.', 'comment_created': datetime.datetime(2021, 7, 30, 14, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': '4b54ac38af67779004009093e9fe3e6eaea8bd2b', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0a16d9103340799be547f3db5214a9c5d303f9b', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76f3d531f90fb5ee035a17cfc85ea714a0d85a9a', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
696153024,[change] Avoided loading config of all organizations #238,"Used dynamic import of config files.

Closes #238",True,315,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/315,https://github.com/openwisp/openwisp-wifi-login-pages/pull/315,closed,113,64,23,1,1,0,0,1,[],2021-07-23 19:02:28+00:00,2021-07-29 20:00:58+00:00,521910.0,"6 days, 0:58:30",[],"[{'commit_sha': 'da616b844412cfc0c1a285ab4f5534f07eed283c', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
701406813, [change] Reduced size of main chunk #321,"Closes #321
Closes #341 ",True,332,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/332,https://github.com/openwisp/openwisp-wifi-login-pages/pull/332,closed,1744,769,40,13,9,0,0,1,[],2021-08-02 12:07:19+00:00,2021-08-20 22:16:25+00:00,1591746.0,"18 days, 10:09:06",[],"[{'commit_sha': 'e9a8b06f24100635330e9def3b38d4f62ad9e05e', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd5f5dc261f0026dfc6609409171887fce513099', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '938494b651e3a44b5e4da3b30107bc3d18b2a20f', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6e4cec7eed9de5b16ddc05c418bc33828549770', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4daecc203a7515c08769317d3788824cccad004', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fde237e0e822a6e367d766c5793597f4a2b8d38', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f94f58a576cfe28c6ee16eaa57926d5b246da2b0', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dfe093235d20d34329a4c1d247acc2c7dac054f', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17df04e14e6a713a4f7d242edd7750f58f7e7a7f', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd002b905b8519804dcee3557258035ac7198c7e2', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac66e0f5ffedceca2a45ea7041e4905cd11bc99a', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '461713ab20921a8bbc03ad8f60e1145fde38db8a', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2ed45bb040075538fac773988c3d3f8f5d4f8ca', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
651857808,[feature] Added server side logging,"Closes #82

Tasks done:

- Added Winston for logging
- Integrated morgan with Winston to log HTTP requests
- Removed checking for status code to handle timeout error and connection refused error.",True,244,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/244,https://github.com/openwisp/openwisp-wifi-login-pages/pull/244,closed,326,60,18,3,0,4,0,1,[],2021-05-25 05:01:55+00:00,2021-05-28 19:29:36+00:00,311261.0,"3 days, 14:27:41","[{'comment_id': 639365062, 'comment_body': '> The available values are `warn` and `debug`.\r\n\r\nWhat about `info` and `error`?', 'comment_created': datetime.datetime(2021, 5, 26, 2, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 639365132, 'comment_body': 'Make sure that by default everything goes to one file.', 'comment_created': datetime.datetime(2021, 5, 26, 2, 52, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 639607175, 'comment_body': 'By default, all the logs goes to `logs/all.log`', 'comment_created': datetime.datetime(2021, 5, 26, 10, 42, 36, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 639607217, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 5, 26, 10, 42, 41, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}]","[{'commit_sha': '23b3ea28e1e49821609d9b02723ba50310c874a1', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c47229db58424549fbecfd14ad994c14892927f', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b932ecdadcbdc3ee12ba1186737f5e494f058e9c', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
660145152,[fix] Added support for stack trace of errors,Fixes #258 ,True,260,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/260,https://github.com/openwisp/openwisp-wifi-login-pages/pull/260,closed,47,17,3,4,1,0,0,0,[],2021-06-02 14:56:05+00:00,2021-06-14 21:00:52+00:00,1058687.0,"12 days, 6:04:47",[],"[{'commit_sha': '52818895e04b1f60f578b5ec3356fe966e5bd8b6', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b9ebd2f3d1dfd68e4c22a7d9cd832455e85c6a7', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '188f0343e6ec8a67a3531ca2e908f7568258a992', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19355415d77fcb5e6da6f9c2d03c5a549afbc405', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
697686241,[feature] Added browser based tests using selenium #237,"Added password-change.test.js

Closes #237",True,319,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/319,https://github.com/openwisp/openwisp-wifi-login-pages/pull/319,closed,644,10,17,9,4,9,0,1,[],2021-07-27 09:21:25+00:00,2021-08-30 18:41:30+00:00,2971205.0,"34 days, 9:20:05","[{'comment_id': 684498039, 'comment_body': 'BTW I noticed an unfinished sentence here, can you please remove the unfinished part?', 'comment_created': datetime.datetime(2021, 8, 6, 20, 51, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 696203464, 'comment_body': 'can you rename this script `get_phone_token` for clarity? We have several type of tokens (rest auth token, radius token, phone token)', 'comment_created': datetime.datetime(2021, 8, 26, 0, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 697728197, 'comment_body': ""in order to make this more maintainable, why don't we define this as an object and then convert it with string with `JSON.stringify()`?"", 'comment_created': datetime.datetime(2021, 8, 27, 21, 28, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 697728977, 'comment_body': ""are you sure there's no other CSS selector which may be more robust to changes to the HTML structure?"", 'comment_created': datetime.datetime(2021, 8, 27, 21, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 697729213, 'comment_body': ""are you sure there's no other CSS selector which may be more robust to changes to the HTML structure?"", 'comment_created': datetime.datetime(2021, 8, 27, 21, 30, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 697729811, 'comment_body': 'I don\'t understand this test, what is it testing?\r\n\r\nI see ""not found"" below, it\'s quite strange.', 'comment_created': datetime.datetime(2021, 8, 27, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 698286708, 'comment_body': 'It tests the failure of password-confirm when uid and token are invalid.', 'comment_created': datetime.datetime(2021, 8, 30, 8, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 698518269, 'comment_body': 'I tried but this is the one that was working.', 'comment_created': datetime.datetime(2021, 8, 30, 14, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 698518362, 'comment_body': 'I tried but this is the one that was working.', 'comment_created': datetime.datetime(2021, 8, 30, 14, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}]","[{'commit_sha': '8e91b3a0fab57f23683f6011fcbee09577bd2e20', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2059f87e76e2ec007b1da2df82e9e4c3e87a23df', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12cec1f981df0669459dde0cc2a6a4676495056a', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df4c2d577dd063c10e892f25bbae36b1841b95dd', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa95c1e814b49648d285405caab3899757fe1d20', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d1d2adcc5ef5e68f6c711b2fadeed3e1d0d1106', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29dfd0d2e25f659d85e0976b16d14058e2c75de9', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fffc0cab1c08f62de5650e212819aad3db9e66d', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4137b8a49e92e75c2ea749b9f950d1f2bf6c3cfc', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
660783711,[feature] Added selenium tests for login and signup,"Closes #213 
Closes #229 ",True,261,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/261,https://github.com/openwisp/openwisp-wifi-login-pages/pull/261,closed,440,21,11,10,0,25,0,0,[],2021-06-03 10:21:50+00:00,2021-06-25 03:16:46+00:00,1875296.0,"21 days, 16:54:56","[{'comment_id': 646970730, 'comment_body': ""what about calling this command `yarn browser-test`?\r\nIf we ever need to change the browser testing engine we won't need to rename the command."", 'comment_created': datetime.datetime(2021, 6, 7, 22, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 646972092, 'comment_body': 'There should be a better way to do this. \r\nLast time I used selenium, I used a method that allowed to wait until a specific element on the page was visible/present, with a timeout. \r\nSee FluentWait in this page: https://www.selenium.dev/documentation/en/webdriver/waits/ for more info.\r\nApplies to all other occurrences of `sleep`.', 'comment_created': datetime.datetime(2021, 6, 7, 22, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 646974114, 'comment_body': 'The first attempt at running this failed with:\r\n\r\n```\r\nThe geckodriver executable could not be found on the current PATH. Please download the latest version from https://github.com/mozilla/geckodriver/releases/ and ensure it can be found on your PATH.\r\n```\r\n\r\nPlease specify that this dependency needs to be installed before running browser based tests. Also separate the two test examples in two different code samples, eg:\r\n\r\n```\r\nyarn test\r\n\r\nIt is also possible to run browser based tests, before trying this please install ..., then run:\r\n\r\nyarn browser-test\r\n```\r\n\r\nOnce installed, the second attempt fails because the data I have in my openwisp radius doesn\'t match the test.\r\n**We need a way to allow developers to prepare the test env easily, quickly and automatically**.\r\n\r\nWe could do this with python/shell scripts that are called at the beginning of each browser test.\r\n\r\nEg:\r\n\r\n```bash\r\n#!/bin/bash\r\necho ""User.objects.create_user(.....)"" | {OPENWISP_RADIUS_PATH}/manage.py shell_plus\r\n```\r\n\r\n`OPENWISP_RADIUS_PATH` could be an environment varable.', 'comment_created': datetime.datetime(2021, 6, 7, 22, 9, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 648739811, 'comment_body': 'can you find a way to call the initialization python script from here?\r\nI am not sure if the virtualenv would be used if activated, you could try.', 'comment_created': datetime.datetime(2021, 6, 9, 23, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 648739947, 'comment_body': 'I think we will need a clean up python script to be called when tests are finished, to clear up any data which is created by the tests', 'comment_created': datetime.datetime(2021, 6, 9, 23, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 655636517, 'comment_body': 'why a timeout of 30 seconds? This operation should not take so long.', 'comment_created': datetime.datetime(2021, 6, 21, 19, 8, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 655637530, 'comment_body': ""why 20 secs? Looks too much to me. My tests were failing because env issues and it took too long to know what's going on. "", 'comment_created': datetime.datetime(2021, 6, 21, 19, 9, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 655642029, 'comment_body': 'this assumes there\'s an org named ""default"" which may not be true, so the script can fail because of this, which is ok if we get a good error message, but no error message is being given.\r\n\r\nIf you try to delete the default organization you should then see:\r\n\r\n```\r\nTimeoutError: Waiting element to become stale\r\nWait timed out after 5084ms\r\n```\r\n\r\nI lowered the timeout to 5 secs, I guess it could be lower as well.\r\n\r\nPlease make sure that if this case happens a proper error message is printed out, also double check this timeout thing which seems too big, 20/30 seconds is definitely annoying to work with, I put it to 5 secs but I am wondering why do we need such a long timeout in the first place? Ensure it\'s as low as possible, tests should fail fast if there\'s an issue like that. The faster they fail the better.\r\n ', 'comment_created': datetime.datetime(2021, 6, 21, 19, 17, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 655643116, 'comment_body': ""If I do not set `$OPENWISP_RADIUS_PATH`, I get:\r\n\r\n```\r\nTimeoutError: Waiting element to become stale\r\nWait timed out after 5084ms\r\n```\r\n\r\n(I lowered the timeout to 5 secs as mentioned in my prev comment)\r\n\r\nI was expecting to see this error message, but that's not happening, so this part of the code is not working as expected.\r\n\r\nPlease ensure the error message is shown if the variable is not set."", 'comment_created': datetime.datetime(2021, 6, 21, 19, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 655643320, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 6, 21, 19, 19, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 655657090, 'comment_body': ""In the CI, if I used 5 seconds as timeout then it's failing because it takes time in initialization and running-test. Can I make it 15 seconds?"", 'comment_created': datetime.datetime(2021, 6, 21, 19, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 656646928, 'comment_body': ""There are so many issues with this code I don't know where to start.\r\nThis isn't improving, let's ditch this.\r\n\r\nForget this code and use `django.setup()` as it's done here: https://github.com/openwisp/ansible-openwisp2/blob/master/templates/load_initial_data.py\r\n\r\nThen please do something like:\r\n\r\n```python\r\ntry:\r\n    from openwisp_users.models import User\r\nexcept ImportError:\r\n    print('OpenWISP RADIUS is not installed or python virtualenvironment is not activated correctly', file=sys.stderr)\r\n    sys.exit(1)\r\n\r\n# rest of code\r\n# do the same: wrap code in try/except block and if it fails\r\n# print to stderr and exit with a progressive non zero exit code\r\n```\r\n\r\nApplies also to the other script.\r\n\r\nSetting the env var then will not be necessary and we can remove that from the README.\r\n\r\nPlease ensure that if anything fails, a non zero exit code is returned.\r\n\r\nThen in the nodejs code, ensure that if non zero exit code is returned the tests fail."", 'comment_created': datetime.datetime(2021, 6, 22, 23, 25, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 656653802, 'comment_body': ""nodejs [docs say that an exit code should be passed](https://nodejs.dev/learn/how-to-exit-from-a-nodejs-program), not a message, this looks wrong to me.\r\n\r\nI tried printing to standard error with `process.stderr.write()` but it doesn't work, probably because this is an asynchronous function.\r\n\r\nI think this part needs to be changed in a way that the error message is printed correctly to standard error and the process exits with an exit code as indicated in the nodeJS docs."", 'comment_created': datetime.datetime(2021, 6, 22, 23, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 656657843, 'comment_body': 'why did you add this to be executed before the tests start?\r\nIn my environment this is not working, the script fails because the user does not exist.\r\n\r\nHowever, even though the python script fails, the nodejs tests keep running, which is wrong.\r\nEnsure that if non zero exit code is returned from the python scripts, the tests fail.', 'comment_created': datetime.datetime(2021, 6, 22, 23, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 656663891, 'comment_body': 'let\'s avoid duplicating code like:\r\n\r\n```javascript\r\nawait executeCommand(""./browser-test/initialize_data.py"", (message) => {\r\n  console.log(message);\r\n});\r\n\r\n```\r\n\r\nIn every test file, please create 2 reusable test functions: `initializeData` and `clearData`.', 'comment_created': datetime.datetime(2021, 6, 23, 0, 12, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 656664798, 'comment_body': 'again, this is completely unnecessary, please remove it, if you need to get the github actions build to wait, please use the linux `sleep` command in the github actions workflow. Try to see if 5-7 seconds are enough though. If we had to pay for these builds, this would be money thrown out of the window.', 'comment_created': datetime.datetime(2021, 6, 23, 0, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 656664939, 'comment_body': 'same here for timeout', 'comment_created': datetime.datetime(2021, 6, 23, 0, 15, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 656665169, 'comment_body': 'same here for `clearData()` and `initializeData()`', 'comment_created': datetime.datetime(2021, 6, 23, 0, 16, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 657507099, 'comment_body': 'Environment variable is still used in django.setup()', 'comment_created': datetime.datetime(2021, 6, 23, 22, 40, 23, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 657564811, 'comment_body': 'this whole block can be simplified to `User.objects.filter(username=test_user_email).delete()`', 'comment_created': datetime.datetime(2021, 6, 24, 1, 38, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 657567052, 'comment_body': 'There\'s a couple of issues:\r\n\r\n1. The name attribute is not unique, use ""slug""\r\n2. This can fail if the org does not exist, please catch the exception, print an informative message and `sys.exit(2)`\r\n    Please test it manually to ensure an human readable and meaningful error is printed out when this happens. \r\n\r\nSomething like: \r\n```\r\nThe organization <slug> does not exist in the OpenWISP Radius environment specified (<openwisp_env_var>), please create it and repeat the tests.\r\n```', 'comment_created': datetime.datetime(2021, 6, 24, 1, 45, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 657568450, 'comment_body': 'simply check if the exit code is not 0 and pass the exit code to `process.exit`, please rename `code` to `exit_code` which is more explicit.', 'comment_created': datetime.datetime(2021, 6, 24, 1, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 657568697, 'comment_body': ""Please simplify:\r\n\r\n```python\r\nUser.objects.filter(username=test_data['testuser']['email']).delete()\r\n``` "", 'comment_created': datetime.datetime(2021, 6, 24, 1, 51, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 657569860, 'comment_body': ""do not write to standard error if there's no error, only if exit code is not zero."", 'comment_created': datetime.datetime(2021, 6, 24, 1, 55, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 657634906, 'comment_body': ""break this line over two lines please and we're ready to go"", 'comment_created': datetime.datetime(2021, 6, 24, 5, 24, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': 'bfd4f9f48f7159f40129bd28d5ef66a6995228f4', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d4bb4e6c8dc96bf9900967645bb791ba898ea7f', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77944909dcb78980b85732eb126064a5ab6ce4c0', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0c3618d4d9b384ddd1144a3384c111cb3ba4424', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6358615619f7d7a6b5c2563e65f82f832b4d928', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62772c0d26d689b7693bcce22ffab533b9fc55aa', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb00a1f4ef2be60b3b2c1cfda38c7a5970fa2c2d', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd34551705b9aebaa39e9834b3805b39665a751cb', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b1672ae6721a15c02241e6ec256ca7646850497', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28dd62d46a1bb021e528b769e755950c5348c9c3', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
651182512,[feature] Reusable auth token validation logic,"Closes #100 
Fixes #217
Fixes #222
Fixes #251",True,242,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/242,https://github.com/openwisp/openwisp-wifi-login-pages/pull/242,closed,741,643,27,5,3,31,0,1,[],2021-05-24 09:32:25+00:00,2021-06-08 18:08:19+00:00,1326954.0,"15 days, 8:35:54","[{'comment_id': 638279061, 'comment_body': 'I think we need to define this further, at least the required attributes we need for the code to work', 'comment_created': datetime.datetime(2021, 5, 24, 21, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 638279717, 'comment_body': 'I think that now that we are introducing this, we should be able to migrate everything to use `setUserData` and get rid of `verifyMobileNumber` and `setIsActive`.\r\nTo do that we should make sure that `setUserData` can edit one specific attribute (eg: `setUserData({""is_active"": true} merge=true)`.', 'comment_created': datetime.datetime(2021, 5, 24, 21, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 638280125, 'comment_body': ""this line is not clear, now I get it, it's being reset.. I wonder if there's a more readable way to write this"", 'comment_created': datetime.datetime(2021, 5, 24, 21, 27, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 638280749, 'comment_body': 'I am not convinced we should add this kind of logic in every component, looks duplicated', 'comment_created': datetime.datetime(2021, 5, 24, 21, 28, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 638282143, 'comment_body': 'what is HOC?', 'comment_created': datetime.datetime(2021, 5, 24, 21, 30, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 638282420, 'comment_body': 'when is this supposed to happen?', 'comment_created': datetime.datetime(2021, 5, 24, 21, 30, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 638459215, 'comment_body': 'Higher order component where this `validateToken` is used.', 'comment_created': datetime.datetime(2021, 5, 25, 5, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 638459521, 'comment_body': ""Actually, on the status page, we have to handle session logout for the captive portal also. That's why I thought to handle logout from the component itself."", 'comment_created': datetime.datetime(2021, 5, 25, 5, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 638460091, 'comment_body': 'When the user data is already present i.e.so it will skip API calling for validating token.\r\nTo skip multiple API calls for validating token.', 'comment_created': datetime.datetime(2021, 5, 25, 5, 16, 14, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 640032740, 'comment_body': 'we can provide a callable which can default to this action, then if any component needs to customize it can pass a more complex callable', 'comment_created': datetime.datetime(2021, 5, 26, 18, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 640032975, 'comment_body': 'please add a comment that explains this', 'comment_created': datetime.datetime(2021, 5, 26, 18, 44, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 641222497, 'comment_body': 'why was this test removed? Shouldn\'t we check that the mobile verification is initiated as expected because `setUserData` is called with `{method: ""mobile_phone"", is_verified: false}`?', 'comment_created': datetime.datetime(2021, 5, 28, 3, 35, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 641224132, 'comment_body': 'can you check that it gets called with the right arguments please?', 'comment_created': datetime.datetime(2021, 5, 28, 3, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 641226219, 'comment_body': 'pay attention, the name of the file is not consistent with the rest of the codebase', 'comment_created': datetime.datetime(2021, 5, 28, 3, 39, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 642663386, 'comment_body': 'why did you move this here? It seems like an unnecessary change.', 'comment_created': datetime.datetime(2021, 5, 31, 20, 16, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 642663770, 'comment_body': ""why can't we simply call this earlier and avoid having it both here and in `handleAuthentication`?"", 'comment_created': datetime.datetime(2021, 5, 31, 20, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 642664185, 'comment_body': ""here, it could be called here. Why did you opt for not doing this and instead call `setUserData()` both in `handleAuthentication` and then below? Isn't this redundant?\r\n\r\nKeep in mind redundancy like this is what we have to get rid of. We need to simplify the code and make it easier to deal with. These minor details are not helping us in achieving the goal.\r\n\r\nI want to hear your justification for such code changes before deciding what to do with them."", 'comment_created': datetime.datetime(2021, 5, 31, 20, 19, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 642664568, 'comment_body': ""this is definitely very weird. Why do you need to do this? It's really confusing. Aren't we getting the response from the server? Why would we need to override it?"", 'comment_created': datetime.datetime(2021, 5, 31, 20, 21, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 642664779, 'comment_body': ""why is this needed? What problem does it solve?\r\nIf the user is inactive, won't they just be logged out? Then why would we need to set the username as empty string?"", 'comment_created': datetime.datetime(2021, 5, 31, 20, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 642666396, 'comment_body': 'when does this case happen? Can you please add a comment?', 'comment_created': datetime.datetime(2021, 5, 31, 20, 28, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 642882703, 'comment_body': 'I added a test for username error in this test case when user is not active.', 'comment_created': datetime.datetime(2021, 6, 1, 8, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 642884445, 'comment_body': 'This is the test for captive login I have added previously.', 'comment_created': datetime.datetime(2021, 6, 1, 8, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 643474034, 'comment_body': ""this is a bit cryptic.\r\n\r\nIf it wasn't working before, now that you added the new solution why is this second condition needed and are you sure it works?\r\n\r\nIf it's needed and you're sure it works, please add a comment."", 'comment_created': datetime.datetime(2021, 6, 1, 20, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 643476525, 'comment_body': 'I see that in the same method `componentDidMount` you add this entry to `sessionStorage` and then remove it straightaway, so I wonder why use `sessionStorage` then and not use any other solution based on pure JS?\r\n\r\nIn some corner cases `sessionStorage` may fail or may not be implemented properly (think about mini browsers, android web views, only God knows on what kind of browsers this will be run), why do we want to depend on something that is optional and can fail if this feature is the key that must not fail?\r\n\r\nI recommend avoiding session storage here and use pure JS (either react state, a global variable, whatever you like).', 'comment_created': datetime.datetime(2021, 6, 1, 21, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 643479569, 'comment_body': ""this test doesn't fail without the rest of the changes in this commit. Did you know this?\r\n\r\nWe must ensure tests fail with a clear message without the changes we introduce. Tests are the canary in the coal mine, please ensure the canary will save a human's life or their death will be pointless :joy: \r\n\r\nTherefore, please make sure:\r\n\r\n1. the test fails without your changes\r\n2. the test fails if you break the captive portal login feature on purpose by removing key parts and ensuring with manual testing the feature is broken\r\n\r\nWithout these 2 points, this code is pointless and we're just adding bloat to an already bloated codebase, please keep these suggestions in mind for any future tests you will be writing."", 'comment_created': datetime.datetime(2021, 6, 1, 21, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 643480016, 'comment_body': 'please rename this to something more explicit, eg: `should perform captive portal login (submit loginFormRef)`', 'comment_created': datetime.datetime(2021, 6, 1, 21, 8, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 643480774, 'comment_body': 'I think this line should be removed so the `componentDidMount` method should be called automatically without the need of us calling it here.', 'comment_created': datetime.datetime(2021, 6, 1, 21, 10, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 643482311, 'comment_body': ""this test does fail without the fixes but the message shown (`should store token in sessionStorage when remember me is unchecked and rememberMe in localstorage`) doesn't reflect the real issue.\r\nThat's why I suggest ensuring the other test is the one that should alert us if anything goes wrong with the captive portal login feature."", 'comment_created': datetime.datetime(2021, 6, 1, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 644061641, 'comment_body': 'I have to use sessionStorage because I want to get the status of just_authenticated from the login component. Another possible solution is using redux but I thought it would be too long for this solution. Should I implement this using redux?', 'comment_created': datetime.datetime(2021, 6, 2, 15, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 644064064, 'comment_body': 'It works.\r\nI added the condition check for session storage because I want to know if a user is just authenticated or not i.e. if the user came after login then just authenticated will be true in the status page. Please see this https://github.com/openwisp/openwisp-wifi-login-pages/pull/242#discussion_r644061641', 'comment_created': datetime.datetime(2021, 6, 2, 15, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}, {'comment_id': 646988523, 'comment_body': ""why didn't you update this test description too? Please avoid the need of me telling you everything, If I ask you to make descriptions more explicit in one place, I'm assuming you're smart enough to understand you have to maintain consistency and make it explicit everywhere. Make this description consistent with the one below."", 'comment_created': datetime.datetime(2021, 6, 7, 22, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': '0f0121d29541af2dd6d6a950698e7b51c9e62104', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92fc106eeddfc222660f05c7529c10a2c74a05a3', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e66fdcd84c75b2e5b85349f815853c9fd7bba9b', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86f1c5c16e6b19f12fb6a6c743bc3e3b744b65cb', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0caf7ddeb0eb126a1eb35104f7638ec8bd8f5aea', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
663593235,[feature] Password with eye icon,Closes #263 ,True,264,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/264,https://github.com/openwisp/openwisp-wifi-login-pages/pull/264,closed,382,2,18,3,1,7,0,1,[],2021-06-07 14:00:41+00:00,2021-06-08 18:58:54+00:00,104293.0,"1 day, 4:58:13","[{'comment_id': 646959287, 'comment_body': ""are you sure it wouldn't better to explicitly specify the eye icons? Otherwise don't we risk someone to commit their own SVG files into this repo?"", 'comment_created': datetime.datetime(2021, 6, 7, 21, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 646964588, 'comment_body': 'the width can be made a bit smaller', 'comment_created': datetime.datetime(2021, 6, 7, 21, 50, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 646964737, 'comment_body': 'we can increase a bit margin on the right to increase whitespace', 'comment_created': datetime.datetime(2021, 6, 7, 21, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 646964792, 'comment_body': 'same on this icon', 'comment_created': datetime.datetime(2021, 6, 7, 21, 50, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 646966045, 'comment_body': ""can you please add a `title` attribute so that if the user leaves the mouse on the icon a hint will appear?\r\n\r\nEg:\r\n\r\n- reveal password\r\n- hide password\r\n\r\nThe only problem is how to make this strings translatable, with the current system we'd have to define it in the YAML, maybe defining it just once and passing that value to the component is enough for now, but for sure soon we'll have to start working on the [translation issue](https://github.com/openwisp/openwisp-wifi-login-pages/issues/235)."", 'comment_created': datetime.datetime(2021, 6, 7, 21, 52, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 646968624, 'comment_body': ""are you sure it wouldn't better to explicitly specify the eye icons? Otherwise don't we risk someone to commit their own SVG files into this repo?"", 'comment_created': datetime.datetime(2021, 6, 7, 21, 57, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 647688115, 'comment_body': ""Just to make you understand why reworking the conf will be important I'm leaving this comment:\r\nnow that I tested this branch on a config that was created before this, the piece of code which calls this fails because it doesn't find it.\r\n\r\nThere's not action to do here, it's good enough for now, we'll improve these aspects in https://github.com/openwisp/openwisp-wifi-login-pages/issues/236 and https://github.com/openwisp/openwisp-wifi-login-pages/issues/235."", 'comment_created': datetime.datetime(2021, 6, 8, 18, 16, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': '125de740294e594d920e78977baa93c1b61eafbf', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95a09c19720155907e8316604e3fe45191a6fd21', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7555d07d92164245f24dcb87429c6d1b12d8122e', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
705433689,[ux] Improvements to reveal password feature #323,"Used another reference as second ref to toggle the fields and focus
on the selected one.

Closes #323",True,340,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/340,https://github.com/openwisp/openwisp-wifi-login-pages/pull/340,closed,330,16,12,2,0,0,0,1,[],2021-08-06 12:08:26+00:00,2021-08-15 00:27:15+00:00,735529.0,"8 days, 12:18:49",[],"[{'commit_sha': 'eb660c1b71ec22e6e29f195a901f14e32654938a', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a82cbbe568dd8c049d6122628e05c2518d5529c', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
698759967,[tests] Increase test coverage,Closes #58,True,320,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/320,https://github.com/openwisp/openwisp-wifi-login-pages/pull/320,closed,1489,51,21,20,0,0,0,0,[],2021-07-28 14:43:55+00:00,2021-08-05 02:56:26+00:00,648751.0,"7 days, 12:12:31",[],"[{'commit_sha': '12820c6e86e454b0f2371b025385b16ff87e0ac5', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18285fbd7ac09517a3942159d621d36d398caf3b', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c34c8c3f5c7d7587d473a84230c6db588c4a82bb', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c17a9a99c66c37bc2b8e16f7cfb657afa611330f', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '845f23bc34b66fc55dd42cce727e51dd84b942aa', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69631ed34f703de39447eec5263ec8a53019cbc1', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e977e4800cc82ae24326d97aa986f3151f17f26', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a917524b93b7776a2822c385529ae1100d2fde91', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ca70c20c93c212a2a352f4c95eced3267e36a04', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf7e1167c04b974e4948ad553c44660151f81479', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11079d86f412c77770a498620b406e0e75143574', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d889cc829679eba6493156eac414cbbea3f3c1d', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f4be7538e60e882465d0cfd7abebe9399a2ae48', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bee9d68e62fc6bdf435d6bb683a2ab0cf6499a35', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2f663d484e95dd6b6ea1a0a9eb2a30cddf3c385', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '298532eaac2c7086f32b38553c3473375528dce7', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f4b3df8eb5d094b30b2dad218826717ae8ecee9', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72e427ab22adee3d4e5e8bbe2c52d61b36d07da8', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e14b449827ddb65cb92459cea8bc816d6a0686d7', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14223fe7d49634d08d099dc98e355f33721c85c4', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
717118594,[feature] Added sticky message #347,"Added custom html support for sticky message

Closes #347",True,356,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/356,https://github.com/openwisp/openwisp-wifi-login-pages/pull/356,closed,290,2,6,3,0,4,0,1,[],2021-08-21 08:40:20+00:00,2021-08-24 16:53:35+00:00,288795.0,"3 days, 8:13:15","[{'comment_id': 693542571, 'comment_body': 'why footer?', 'comment_created': datetime.datetime(2021, 8, 22, 18, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 693542611, 'comment_body': 'the style can be defined with the custom org CSS if needed, we should just ensure the default style works well.\r\n\r\nI would simplify this to be:\r\n\r\n``` yaml\r\nsticky_message:\r\n en: ...\r\n```', 'comment_created': datetime.datetime(2021, 8, 22, 18, 58, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 693542731, 'comment_body': ""I'd avoid this and be consistent with the other custom HTML sections."", 'comment_created': datetime.datetime(2021, 8, 22, 18, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 693542941, 'comment_body': 'I think this should be called ""Sticky message"" and should be listed after ""Second logo"" above.', 'comment_created': datetime.datetime(2021, 8, 22, 19, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': '1dc39aed91582c49558520b51ea7c102ea46a485', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '172ea1677bc1a7dc26c62c5d93035fac00aa63e0', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1121d38b0dd151a1c733b083f5c3e4bcd30ce11', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
708559059,[fix] Added setUserData to called after logout #343,"If the session is active then setUserData is not called after captive
portal logout. Added setUserData with initialData.userData after
performing captive portal logout.

Fixes #343
Closes #306 ",True,344,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/344,https://github.com/openwisp/openwisp-wifi-login-pages/pull/344,closed,178,51,14,2,2,3,0,1,[],2021-08-11 09:14:34+00:00,2021-08-24 16:54:18+00:00,1150784.0,"13 days, 7:39:44","[{'comment_id': 693542337, 'comment_body': ""it's not super clear what happens here, I think we should add some comments.\r\n\r\nI think the user should always be logged out from the captive portal if is_verified is true or if the method used is bank_card or unspecified (regardless of is_verified)."", 'comment_created': datetime.datetime(2021, 8, 22, 18, 55, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 693542491, 'comment_body': ""why is this an error? Can you add some comments please?\r\nAnd if this is an error, does it means that if the if block above is triggered that's not an error? Shouldn't a return statement be present at the end of the if block above then?"", 'comment_created': datetime.datetime(2021, 8, 22, 18, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 693684398, 'comment_body': ""It's an error because either the token is wrong or user data is empty."", 'comment_created': datetime.datetime(2021, 8, 23, 6, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'codesankalp', 'type': 'User'}]","[{'commit_sha': 'feae157161156591e4083e9dadabbacefcd3f39e', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '802853fd610db356b640d50e1b149e436d74830f', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
703347562,[change] Made TOS and PP modal like logout modal #322,"Used logout modal CSS to for all other modals

Closes #322",True,337,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/337,https://github.com/openwisp/openwisp-wifi-login-pages/pull/337,closed,133,139,7,1,0,0,0,1,[],2021-08-04 11:44:14+00:00,2021-08-05 03:00:57+00:00,55003.0,15:16:43,[],"[{'commit_sha': '4e2672c4abafd8b319eda0e070bb4822fbae2314', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50
668756774,[feature] Set page title for each page #155,"Added translatable support for page title in each page.

Closes #155",True,268,https://api.github.com/repos/openwisp/openwisp-wifi-login-pages/pulls/268,https://github.com/openwisp/openwisp-wifi-login-pages/pull/268,closed,736,36,46,3,0,4,0,0,[],2021-06-12 04:38:15+00:00,2021-06-23 01:00:49+00:00,937354.0,"10 days, 20:22:34","[{'comment_id': 655734578, 'comment_body': 'pay attention, I removed `userData` and `setUserData` from this component, I centralized all the operations in the status component to simplify and avoid duplication, therefore these lines should not be added back.', 'comment_created': datetime.datetime(2021, 6, 21, 22, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 655734622, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 6, 21, 22, 5, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 655734660, 'comment_body': 'and here', 'comment_created': datetime.datetime(2021, 6, 21, 22, 5, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 655751333, 'comment_body': ""Why don't we change the `setTitle` function to accept different parameters?\r\n\r\neg: \r\n\r\n```\r\nsetTitle(component, language, orgName)\r\n```\r\n\r\nThis allows to avoid compiling the title string in many different places so if we want to change its general structure we can do it from one place."", 'comment_created': datetime.datetime(2021, 6, 21, 22, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': 'd6df0781d3458b3586e21620bb01e9a41d443e72', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc731370721657875dd50e5e3aa813311c69fd41', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f8e5832e33d3bac761f00a8d6c91dcfaf9f278e', 'committer_username': 'codesankalp', 'committer_name': 'Sankalp', 'committer_email': 'sankalp123427@gmail.com', 'commit_date': datetime.datetime(2019, 10, 1, 15, 1, 59, tzinfo=datetime.timezone.utc)}]",Sankalp,56037184,sankalp123427@gmail.com,User,,80,,28,50

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
186425209,openwisp-wifi-login-pages,openwisp/openwisp-wifi-login-pages,JavaScript,74,123,13,22,619,18,26,7,"[{'id': 1101575065, 'number': 624, 'closed': datetime.datetime(2024, 7, 5, 17, 45, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 27, 11, 43, 18, tzinfo=datetime.timezone.utc), 'time_taken': 53330556.0, 'time_delta': '617 days, 6:02:36', 'additions': 760, 'deletions': 8, 'state': 'closed'}, {'id': 998397551, 'number': 606, 'closed': datetime.datetime(2022, 7, 22, 11, 28, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 16, 10, 16, 31, tzinfo=datetime.timezone.utc), 'time_taken': 522692.0, 'time_delta': '6 days, 1:11:32', 'additions': 22, 'deletions': 2, 'state': 'closed'}, {'id': 961952655, 'number': 591, 'closed': datetime.datetime(2022, 6, 8, 23, 4, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 8, 17, 26, 36, tzinfo=datetime.timezone.utc), 'time_taken': 20277.0, 'time_delta': '5:37:57', 'additions': 11, 'deletions': 9, 'state': 'closed'}, {'id': 945269157, 'number': 568, 'closed': datetime.datetime(2022, 5, 24, 13, 54, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 24, 7, 35, 50, tzinfo=datetime.timezone.utc), 'time_taken': 22721.0, 'time_delta': '6:18:41', 'additions': 22, 'deletions': 10, 'state': 'closed'}, {'id': 879129470, 'number': 554, 'closed': datetime.datetime(2022, 5, 26, 15, 57, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 14, 26, 53, tzinfo=datetime.timezone.utc), 'time_taken': 6312611.0, 'time_delta': '73 days, 1:30:11', 'additions': 2363, 'deletions': 1921, 'state': 'closed'}, {'id': 845683220, 'number': 542, 'closed': datetime.datetime(2022, 2, 15, 21, 10, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 17, 31, 8, tzinfo=datetime.timezone.utc), 'time_taken': 445176.0, 'time_delta': '5 days, 3:39:36', 'additions': 45, 'deletions': 17, 'state': 'closed'}, {'id': 845394005, 'number': 541, 'closed': datetime.datetime(2022, 2, 15, 21, 43, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 14, 46, 45, tzinfo=datetime.timezone.utc), 'time_taken': 456977.0, 'time_delta': '5 days, 6:56:17', 'additions': 29, 'deletions': 34, 'state': 'closed'}, {'id': 845367401, 'number': 539, 'closed': datetime.datetime(2022, 2, 10, 14, 46, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 14, 32, 16, tzinfo=datetime.timezone.utc), 'time_taken': 881.0, 'time_delta': '0:14:41', 'additions': 12, 'deletions': 24, 'state': 'closed'}, {'id': 843099323, 'number': 537, 'closed': datetime.datetime(2022, 2, 9, 18, 26, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 8, 18, 1, 7, tzinfo=datetime.timezone.utc), 'time_taken': 87939.0, 'time_delta': '1 day, 0:25:39', 'additions': 35, 'deletions': 28, 'state': 'closed'}, {'id': 840224186, 'number': 534, 'closed': datetime.datetime(2022, 2, 4, 18, 27, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 4, 12, 43, 16, tzinfo=datetime.timezone.utc), 'time_taken': 20639.0, 'time_delta': '5:43:59', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 838340059, 'number': 532, 'closed': datetime.datetime(2022, 2, 4, 18, 20, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 2, 14, 4, 45, tzinfo=datetime.timezone.utc), 'time_taken': 188141.0, 'time_delta': '2 days, 4:15:41', 'additions': 66, 'deletions': 79, 'state': 'closed'}, {'id': 833752669, 'number': 517, 'closed': datetime.datetime(2022, 2, 1, 19, 50, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 27, 18, 6, 46, tzinfo=datetime.timezone.utc), 'time_taken': 438250.0, 'time_delta': '5 days, 1:44:10', 'additions': 7, 'deletions': 6, 'state': 'closed'}, {'id': 796147510, 'number': 488, 'closed': datetime.datetime(2021, 12, 9, 13, 47, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 6, 18, 18, 39, tzinfo=datetime.timezone.utc), 'time_taken': 242909.0, 'time_delta': '2 days, 19:28:29', 'additions': 49, 'deletions': 16, 'state': 'closed'}, {'id': 791592308, 'number': 479, 'closed': datetime.datetime(2022, 1, 12, 20, 12, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 30, 11, 27, 33, tzinfo=datetime.timezone.utc), 'time_taken': 3746682.0, 'time_delta': '43 days, 8:44:42', 'additions': 74, 'deletions': 16, 'state': 'closed'}, {'id': 781829064, 'number': 477, 'closed': datetime.datetime(2021, 11, 29, 18, 8, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 16, 15, 57, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1131059.0, 'time_delta': '13 days, 2:10:59', 'additions': 67, 'deletions': 14, 'state': 'closed'}, {'id': 771999430, 'number': 475, 'closed': datetime.datetime(2021, 11, 3, 23, 22, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 3, 3, 46, 40, tzinfo=datetime.timezone.utc), 'time_taken': 70539.0, 'time_delta': '19:35:39', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 771409068, 'number': 474, 'closed': datetime.datetime(2022, 1, 20, 13, 54, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 2, 13, 0, 18, tzinfo=datetime.timezone.utc), 'time_taken': 6828851.0, 'time_delta': '79 days, 0:54:11', 'additions': 31, 'deletions': 3, 'state': 'closed'}, {'id': 766739568, 'number': 457, 'closed': datetime.datetime(2021, 11, 1, 21, 11, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 26, 18, 35, 11, tzinfo=datetime.timezone.utc), 'time_taken': 527764.0, 'time_delta': '6 days, 2:36:04', 'additions': 1352, 'deletions': 144, 'state': 'closed'}, {'id': 763341278, 'number': 454, 'closed': datetime.datetime(2021, 10, 22, 16, 35, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 21, 14, 29, 49, tzinfo=datetime.timezone.utc), 'time_taken': 93939.0, 'time_delta': '1 day, 2:05:39', 'additions': 24, 'deletions': 6, 'state': 'closed'}, {'id': 762260709, 'number': 453, 'closed': datetime.datetime(2021, 10, 27, 0, 41, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 20, 11, 36, 56, tzinfo=datetime.timezone.utc), 'time_taken': 565475.0, 'time_delta': '6 days, 13:04:35', 'additions': 157, 'deletions': 2, 'state': 'closed'}, {'id': 760457338, 'number': 450, 'closed': datetime.datetime(2022, 1, 27, 14, 18, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 18, 13, 18, 17, tzinfo=datetime.timezone.utc), 'time_taken': 8729998.0, 'time_delta': '101 days, 0:59:58', 'additions': 200, 'deletions': 72, 'state': 'closed'}, {'id': 760101634, 'number': 449, 'closed': datetime.datetime(2021, 10, 18, 23, 5, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 18, 6, 13, 59, tzinfo=datetime.timezone.utc), 'time_taken': 60703.0, 'time_delta': '16:51:43', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 754322414, 'number': 447, 'closed': datetime.datetime(2021, 10, 12, 1, 8, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 8, 20, 39, 48, tzinfo=datetime.timezone.utc), 'time_taken': 275345.0, 'time_delta': '3 days, 4:29:05', 'additions': 158, 'deletions': 3, 'state': 'closed'}, {'id': 746912173, 'number': 431, 'closed': datetime.datetime(2021, 9, 30, 18, 6, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 30, 17, 38, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1708.0, 'time_delta': '0:28:28', 'additions': 0, 'deletions': 6, 'state': 'closed'}, {'id': 745625257, 'number': 430, 'closed': datetime.datetime(2021, 9, 30, 1, 45, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 29, 11, 0, 13, tzinfo=datetime.timezone.utc), 'time_taken': 53120.0, 'time_delta': '14:45:20', 'additions': 41, 'deletions': 6, 'state': 'closed'}, {'id': 742405726, 'number': 428, 'closed': datetime.datetime(2021, 9, 28, 1, 28, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 24, 17, 52, 38, tzinfo=datetime.timezone.utc), 'time_taken': 286534.0, 'time_delta': '3 days, 7:35:34', 'additions': 559, 'deletions': 255, 'state': 'closed'}, {'id': 740373436, 'number': 427, 'closed': datetime.datetime(2021, 9, 23, 0, 39, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 11, 28, 47, tzinfo=datetime.timezone.utc), 'time_taken': 47461.0, 'time_delta': '13:11:01', 'additions': 9, 'deletions': 2, 'state': 'closed'}, {'id': 737476200, 'number': 423, 'closed': datetime.datetime(2021, 9, 21, 1, 46, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 20, 11, 13, 47, tzinfo=datetime.timezone.utc), 'time_taken': 52345.0, 'time_delta': '14:32:25', 'additions': 37, 'deletions': 1, 'state': 'closed'}, {'id': 736262521, 'number': 422, 'closed': datetime.datetime(2021, 9, 17, 16, 29, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 17, 10, 32, 59, tzinfo=datetime.timezone.utc), 'time_taken': 21402.0, 'time_delta': '5:56:42', 'additions': 43, 'deletions': 4, 'state': 'closed'}, {'id': 732461334, 'number': 418, 'closed': datetime.datetime(2021, 9, 15, 23, 40, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 13, 7, 23, 35, tzinfo=datetime.timezone.utc), 'time_taken': 231442.0, 'time_delta': '2 days, 16:17:22', 'additions': 3, 'deletions': 6, 'state': 'closed'}, {'id': 732410582, 'number': 417, 'closed': datetime.datetime(2021, 9, 15, 1, 3, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 13, 6, 0, 26, tzinfo=datetime.timezone.utc), 'time_taken': 154996.0, 'time_delta': '1 day, 19:03:16', 'additions': 21, 'deletions': 10, 'state': 'closed'}, {'id': 731380601, 'number': 415, 'closed': datetime.datetime(2021, 11, 2, 15, 1, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 10, 11, 35, 12, tzinfo=datetime.timezone.utc), 'time_taken': 4591575.0, 'time_delta': '53 days, 3:26:15', 'additions': 285, 'deletions': 133, 'state': 'closed'}, {'id': 730462908, 'number': 414, 'closed': datetime.datetime(2021, 9, 9, 15, 31, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 9, 10, 57, 12, tzinfo=datetime.timezone.utc), 'time_taken': 16471.0, 'time_delta': '4:34:31', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 727724685, 'number': 404, 'closed': datetime.datetime(2021, 9, 6, 16, 15, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 6, 8, 6, 25, tzinfo=datetime.timezone.utc), 'time_taken': 29317.0, 'time_delta': '8:08:37', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 727243328, 'number': 403, 'closed': datetime.datetime(2021, 9, 6, 17, 28, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 4, 13, 43, 23, tzinfo=datetime.timezone.utc), 'time_taken': 186335.0, 'time_delta': '2 days, 3:45:35', 'additions': 51, 'deletions': 5, 'state': 'closed'}, {'id': 727189425, 'number': 402, 'closed': datetime.datetime(2021, 9, 6, 17, 8, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 4, 6, 31, 4, tzinfo=datetime.timezone.utc), 'time_taken': 211029.0, 'time_delta': '2 days, 10:37:09', 'additions': 74, 'deletions': 17, 'state': 'closed'}, {'id': 726225819, 'number': 397, 'closed': datetime.datetime(2021, 9, 3, 20, 7, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 2, 19, 39, 29, tzinfo=datetime.timezone.utc), 'time_taken': 88061.0, 'time_delta': '1 day, 0:27:41', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 726200700, 'number': 396, 'closed': datetime.datetime(2021, 9, 2, 22, 44, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 2, 19, 3, 44, tzinfo=datetime.timezone.utc), 'time_taken': 13244.0, 'time_delta': '3:40:44', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 725763866, 'number': 395, 'closed': datetime.datetime(2021, 9, 3, 20, 32, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 2, 11, 17, 3, tzinfo=datetime.timezone.utc), 'time_taken': 119708.0, 'time_delta': '1 day, 9:15:08', 'additions': 177, 'deletions': 170, 'state': 'closed'}, {'id': 724707024, 'number': 393, 'closed': datetime.datetime(2021, 9, 1, 21, 28, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 1, 17, 24, 27, tzinfo=datetime.timezone.utc), 'time_taken': 14619.0, 'time_delta': '4:03:39', 'additions': 12, 'deletions': 2, 'state': 'closed'}, {'id': 722286963, 'number': 377, 'closed': datetime.datetime(2021, 8, 30, 18, 39, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 30, 8, 42, 25, tzinfo=datetime.timezone.utc), 'time_taken': 35835.0, 'time_delta': '9:57:15', 'additions': 5, 'deletions': 17, 'state': 'closed'}, {'id': 721146303, 'number': 371, 'closed': datetime.datetime(2021, 8, 31, 15, 19, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 27, 8, 48, 28, tzinfo=datetime.timezone.utc), 'time_taken': 369035.0, 'time_delta': '4 days, 6:30:35', 'additions': 274, 'deletions': 129, 'state': 'closed'}, {'id': 720447005, 'number': 365, 'closed': datetime.datetime(2021, 8, 28, 0, 34, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 26, 11, 53, 10, tzinfo=datetime.timezone.utc), 'time_taken': 132073.0, 'time_delta': '1 day, 12:41:13', 'additions': 124, 'deletions': 19, 'state': 'closed'}, {'id': 718853369, 'number': 361, 'closed': datetime.datetime(2021, 8, 24, 18, 2, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 15, 33, 27, tzinfo=datetime.timezone.utc), 'time_taken': 8915.0, 'time_delta': '2:28:35', 'additions': 50, 'deletions': 214, 'state': 'closed'}, {'id': 718744627, 'number': 360, 'closed': datetime.datetime(2021, 8, 24, 18, 35, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 13, 25, 28, tzinfo=datetime.timezone.utc), 'time_taken': 18591.0, 'time_delta': '5:09:51', 'additions': 57, 'deletions': 11, 'state': 'closed'}, {'id': 717118594, 'number': 356, 'closed': datetime.datetime(2021, 8, 24, 16, 53, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 8, 40, 20, tzinfo=datetime.timezone.utc), 'time_taken': 288795.0, 'time_delta': '3 days, 8:13:15', 'additions': 290, 'deletions': 2, 'state': 'closed'}, {'id': 717091931, 'number': 355, 'closed': datetime.datetime(2021, 8, 22, 18, 19, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 4, 56, 39, tzinfo=datetime.timezone.utc), 'time_taken': 134590.0, 'time_delta': '1 day, 13:23:10', 'additions': 35, 'deletions': 35, 'state': 'closed'}, {'id': 717087745, 'number': 354, 'closed': datetime.datetime(2021, 8, 22, 18, 43, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 4, 18, 13, tzinfo=datetime.timezone.utc), 'time_taken': 138338.0, 'time_delta': '1 day, 14:25:38', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 717061259, 'number': 352, 'closed': datetime.datetime(2021, 8, 21, 1, 1, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 0, 46, 44, tzinfo=datetime.timezone.utc), 'time_taken': 881.0, 'time_delta': '0:14:41', 'additions': 25, 'deletions': 7, 'state': 'closed'}, {'id': 710595428, 'number': 346, 'closed': datetime.datetime(2021, 8, 13, 1, 50, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 9, 54, 1, tzinfo=datetime.timezone.utc), 'time_taken': 57383.0, 'time_delta': '15:56:23', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 708559059, 'number': 344, 'closed': datetime.datetime(2021, 8, 24, 16, 54, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 9, 14, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1150784.0, 'time_delta': '13 days, 7:39:44', 'additions': 178, 'deletions': 51, 'state': 'closed'}, {'id': 705433689, 'number': 340, 'closed': datetime.datetime(2021, 8, 15, 0, 27, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 12, 8, 26, tzinfo=datetime.timezone.utc), 'time_taken': 735529.0, 'time_delta': '8 days, 12:18:49', 'additions': 330, 'deletions': 16, 'state': 'closed'}, {'id': 703347562, 'number': 337, 'closed': datetime.datetime(2021, 8, 5, 3, 0, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 11, 44, 14, tzinfo=datetime.timezone.utc), 'time_taken': 55003.0, 'time_delta': '15:16:43', 'additions': 133, 'deletions': 139, 'state': 'closed'}, {'id': 701406813, 'number': 332, 'closed': datetime.datetime(2021, 8, 20, 22, 16, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 12, 7, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1591746.0, 'time_delta': '18 days, 10:09:06', 'additions': 1744, 'deletions': 769, 'state': 'closed'}, {'id': 698759967, 'number': 320, 'closed': datetime.datetime(2021, 8, 5, 2, 56, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 14, 43, 55, tzinfo=datetime.timezone.utc), 'time_taken': 648751.0, 'time_delta': '7 days, 12:12:31', 'additions': 1489, 'deletions': 51, 'state': 'closed'}, {'id': 697686241, 'number': 319, 'closed': datetime.datetime(2021, 8, 30, 18, 41, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 9, 21, 25, tzinfo=datetime.timezone.utc), 'time_taken': 2971205.0, 'time_delta': '34 days, 9:20:05', 'additions': 644, 'deletions': 10, 'state': 'closed'}, {'id': 697457847, 'number': 318, 'closed': datetime.datetime(2021, 7, 29, 20, 3, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 1, 20, 24, tzinfo=datetime.timezone.utc), 'time_taken': 240160.0, 'time_delta': '2 days, 18:42:40', 'additions': 49, 'deletions': 35, 'state': 'closed'}, {'id': 696386570, 'number': 317, 'closed': datetime.datetime(2021, 7, 24, 23, 12, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 18, 8, 21, tzinfo=datetime.timezone.utc), 'time_taken': 18228.0, 'time_delta': '5:03:48', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 696153024, 'number': 315, 'closed': datetime.datetime(2021, 7, 29, 20, 0, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 19, 2, 28, tzinfo=datetime.timezone.utc), 'time_taken': 521910.0, 'time_delta': '6 days, 0:58:30', 'additions': 113, 'deletions': 64, 'state': 'closed'}, {'id': 691524987, 'number': 311, 'closed': datetime.datetime(2021, 7, 17, 1, 49, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 14, 15, 57, tzinfo=datetime.timezone.utc), 'time_taken': 41619.0, 'time_delta': '11:33:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 685086459, 'number': 303, 'closed': datetime.datetime(2021, 8, 2, 17, 31, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 10, 54, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2270237.0, 'time_delta': '26 days, 6:37:17', 'additions': 795, 'deletions': 635, 'state': 'closed'}, {'id': 679442104, 'number': 287, 'closed': datetime.datetime(2021, 7, 20, 5, 31, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 22, 16, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1840511.0, 'time_delta': '21 days, 7:15:11', 'additions': 4669, 'deletions': 2975, 'state': 'closed'}, {'id': 678165178, 'number': 281, 'closed': datetime.datetime(2021, 6, 25, 22, 56, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 20, 33, 17, tzinfo=datetime.timezone.utc), 'time_taken': 8571.0, 'time_delta': '2:22:51', 'additions': 643, 'deletions': 8, 'state': 'closed'}, {'id': 673668297, 'number': 277, 'closed': datetime.datetime(2021, 6, 26, 20, 49, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 18, 57, 49, tzinfo=datetime.timezone.utc), 'time_taken': 697911.0, 'time_delta': '8 days, 1:51:51', 'additions': 22, 'deletions': 1, 'state': 'closed'}, {'id': 669615997, 'number': 269, 'closed': datetime.datetime(2021, 6, 23, 0, 45, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 14, 27, 27, tzinfo=datetime.timezone.utc), 'time_taken': 728281.0, 'time_delta': '8 days, 10:18:01', 'additions': 145, 'deletions': 25, 'state': 'closed'}, {'id': 668756774, 'number': 268, 'closed': datetime.datetime(2021, 6, 23, 1, 0, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 4, 38, 15, tzinfo=datetime.timezone.utc), 'time_taken': 937354.0, 'time_delta': '10 days, 20:22:34', 'additions': 736, 'deletions': 36, 'state': 'closed'}, {'id': 664949774, 'number': 266, 'closed': datetime.datetime(2021, 6, 8, 14, 4, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 14, 4, 33, tzinfo=datetime.timezone.utc), 'time_taken': 8.0, 'time_delta': '0:00:08', 'additions': 741, 'deletions': 643, 'state': 'closed'}, {'id': 663593235, 'number': 264, 'closed': datetime.datetime(2021, 6, 8, 18, 58, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 14, 0, 41, tzinfo=datetime.timezone.utc), 'time_taken': 104293.0, 'time_delta': '1 day, 4:58:13', 'additions': 382, 'deletions': 2, 'state': 'closed'}, {'id': 660783711, 'number': 261, 'closed': datetime.datetime(2021, 6, 25, 3, 16, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 3, 10, 21, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1875296.0, 'time_delta': '21 days, 16:54:56', 'additions': 440, 'deletions': 21, 'state': 'closed'}, {'id': 660145152, 'number': 260, 'closed': datetime.datetime(2021, 6, 14, 21, 0, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 14, 56, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1058687.0, 'time_delta': '12 days, 6:04:47', 'additions': 47, 'deletions': 17, 'state': 'closed'}, {'id': 660096633, 'number': 259, 'closed': datetime.datetime(2021, 6, 8, 18, 34, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 14, 0, 54, tzinfo=datetime.timezone.utc), 'time_taken': 534818.0, 'time_delta': '6 days, 4:33:38', 'additions': 41, 'deletions': 11, 'state': 'closed'}, {'id': 655314867, 'number': 249, 'closed': datetime.datetime(2021, 5, 28, 19, 41, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 20, 4, 58, tzinfo=datetime.timezone.utc), 'time_taken': 84978.0, 'time_delta': '23:36:18', 'additions': 13, 'deletions': 4, 'state': 'closed'}, {'id': 651860271, 'number': 245, 'closed': datetime.datetime(2021, 5, 31, 20, 13, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 25, 5, 5, 55, tzinfo=datetime.timezone.utc), 'time_taken': 572834.0, 'time_delta': '6 days, 15:07:14', 'additions': 56, 'deletions': 8, 'state': 'closed'}, {'id': 651857808, 'number': 244, 'closed': datetime.datetime(2021, 5, 28, 19, 29, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 25, 5, 1, 55, tzinfo=datetime.timezone.utc), 'time_taken': 311261.0, 'time_delta': '3 days, 14:27:41', 'additions': 326, 'deletions': 60, 'state': 'closed'}, {'id': 651184912, 'number': 243, 'closed': datetime.datetime(2021, 5, 24, 18, 42, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 9, 36, 29, tzinfo=datetime.timezone.utc), 'time_taken': 32756.0, 'time_delta': '9:05:56', 'additions': 12, 'deletions': 5, 'state': 'closed'}, {'id': 651182512, 'number': 242, 'closed': datetime.datetime(2021, 6, 8, 18, 8, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 9, 32, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1326954.0, 'time_delta': '15 days, 8:35:54', 'additions': 741, 'deletions': 643, 'state': 'closed'}, {'id': 648762204, 'number': 239, 'closed': datetime.datetime(2021, 5, 24, 18, 41, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 11, 27, 28, tzinfo=datetime.timezone.utc), 'time_taken': 371649.0, 'time_delta': '4 days, 7:14:09', 'additions': 326, 'deletions': 60, 'state': 'closed'}, {'id': 645927527, 'number': 234, 'closed': datetime.datetime(2021, 5, 20, 1, 27, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 17, 14, 45, 1, tzinfo=datetime.timezone.utc), 'time_taken': 211372.0, 'time_delta': '2 days, 10:42:52', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 645194964, 'number': 232, 'closed': datetime.datetime(2021, 5, 15, 19, 3, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 15, 18, 9, 30, tzinfo=datetime.timezone.utc), 'time_taken': 3248.0, 'time_delta': '0:54:08', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 641291971, 'number': 225, 'closed': datetime.datetime(2021, 5, 15, 18, 51, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 11, 18, 14, 51, tzinfo=datetime.timezone.utc), 'time_taken': 347797.0, 'time_delta': '4 days, 0:36:37', 'additions': 213, 'deletions': 31, 'state': 'closed'}, {'id': 632631868, 'number': 224, 'closed': datetime.datetime(2021, 5, 9, 19, 37, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 11, 55, tzinfo=datetime.timezone.utc), 'time_taken': 200526.0, 'time_delta': '2 days, 7:42:06', 'additions': 36, 'deletions': 26, 'state': 'closed'}, {'id': 631872067, 'number': 221, 'closed': datetime.datetime(2021, 5, 6, 20, 53, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 6, 20, 31, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1300.0, 'time_delta': '0:21:40', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 631744871, 'number': 219, 'closed': datetime.datetime(2021, 5, 21, 21, 24, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 6, 18, 41, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1305762.0, 'time_delta': '15 days, 2:42:42', 'additions': 511, 'deletions': 23, 'state': 'closed'}, {'id': 629146039, 'number': 216, 'closed': datetime.datetime(2021, 5, 6, 18, 42, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 3, 14, 33, 14, tzinfo=datetime.timezone.utc), 'time_taken': 274169.0, 'time_delta': '3 days, 4:09:29', 'additions': 523, 'deletions': 13, 'state': 'closed'}, {'id': 618640891, 'number': 201, 'closed': datetime.datetime(2021, 9, 3, 19, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 19, 22, 32, 35, tzinfo=datetime.timezone.utc), 'time_taken': 11826865.0, 'time_delta': '136 days, 21:14:25', 'additions': 85, 'deletions': 82, 'state': 'closed'}, {'id': 616310983, 'number': 199, 'closed': datetime.datetime(2021, 4, 29, 17, 7, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 15, 19, 34, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1200820.0, 'time_delta': '13 days, 21:33:40', 'additions': 30, 'deletions': 4, 'state': 'closed'}, {'id': 615320147, 'number': 198, 'closed': datetime.datetime(2021, 4, 19, 14, 40, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 14, 15, 6, 9, tzinfo=datetime.timezone.utc), 'time_taken': 430439.0, 'time_delta': '4 days, 23:33:59', 'additions': 1636, 'deletions': 1468, 'state': 'closed'}, {'id': 595953176, 'number': 186, 'closed': datetime.datetime(2021, 4, 29, 17, 42, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 18, 21, 18, 13, tzinfo=datetime.timezone.utc), 'time_taken': 3615857.0, 'time_delta': '41 days, 20:24:17', 'additions': 245, 'deletions': 23, 'state': 'closed'}, {'id': 577002463, 'number': 173, 'closed': datetime.datetime(2021, 2, 23, 0, 55, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 20, 20, 33, 8, tzinfo=datetime.timezone.utc), 'time_taken': 188525.0, 'time_delta': '2 days, 4:22:05', 'additions': 62, 'deletions': 42, 'state': 'closed'}]"
