pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
706578402,feat(probe): add blockdevice size change detection using udev,,False,1,https://api.github.com/repos/z0marlin/node-disk-manager/pulls/1,https://github.com/z0marlin/node-disk-manager/pull/1,closed,188,39,12,18,0,0,0,0,[],2021-08-09 14:35:09+00:00,2021-09-03 04:25:40+00:00,2123431.0,"24 days, 13:50:31",[],"[{'commit_sha': 'a5e8d7f6382b5372cfd56680e32f97e793555e88', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72a4c8d3d55440d4e00b3dfe6f8cba43a87a2b92', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e5da673aacd14cf129ab4c489f76a5fe9bcd466', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20280f31bc4f3a4383eab282639a469f33b2910a', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '331042782343e7ed1bcc44bfb0aa04b805f9b11d', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36a98a91e42f76c33f768bcd44b7353354fe4a03', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdf9be9165e8dfcde2201fbfdff59f552c4f73ea', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8a106016ea43262dabd638665830c9ebd87b9a1', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d1b7a4cc2b7fbac694ed31a02482324801dad98', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60cd0d1e4435042e48029663fb837e53de63724b', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48dc7feda7cde73f5bc8e222d7d13deab267d284', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4774957f7b6dd1d26ea7c1229484cc27a0993395', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8da5fc20875bf5c7375a7c6907b837cc132208a2', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc72e3da322bd24005c75e73ad98755561f35bac', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47833ce7399196e1eaf38f6d08cd9f34ed641f3e', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5346774c5bc42afdb7dc099f722ef843a06fee88', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f86471fb956355144208685a9c2df0be0738350', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b84ed5b1346284bcf3e23eeed098165298d03bdd', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}]",Aditya Jain,31250892,,User,,24,,13,22
709087950,feat(probe): add size change detection using sysfs polling,size change detection using sysfs size file polling.,False,2,https://api.github.com/repos/z0marlin/node-disk-manager/pulls/2,https://github.com/z0marlin/node-disk-manager/pull/2,closed,408,14,7,7,0,11,0,0,[],2021-08-11 14:55:30+00:00,2021-09-03 04:25:27+00:00,1949397.0,"22 days, 13:29:57","[{'comment_id': 687428613, 'comment_body': 'How many new go routines are we launching?', 'comment_created': datetime.datetime(2021, 8, 12, 6, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 687429058, 'comment_body': 'Are we having the separation between files that need to be checksumed and just comparing the contents', 'comment_created': datetime.datetime(2021, 8, 12, 6, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 687430336, 'comment_body': 'Where are we sending the changes to the main event message channel?', 'comment_created': datetime.datetime(2021, 8, 12, 6, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 687430721, 'comment_body': 'Was this introduced so that we get errors though channel instead of logging. Or is there some other purpose for this?', 'comment_created': datetime.datetime(2021, 8, 12, 6, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 687606626, 'comment_body': 'two reasons for having a separate err channel:\r\n1. the err channel will be used to detect files that have been removed. this will allow us to remove them from further monitoring\r\n2. avoid logging in pkg.', 'comment_created': datetime.datetime(2021, 8, 12, 10, 58, 23, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 687607201, 'comment_body': 'one per instance of watchman. Since only sysfs probe is going to use it, we will be launching one go routine', 'comment_created': datetime.datetime(2021, 8, 12, 10, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 687608247, 'comment_body': 'Yes. The File struct has a reader field which is used to read the file and return the data which can be anything - the file content, the checksum, or anything else. This field can be configured by passing an option to the `NewFile` function.', 'comment_created': datetime.datetime(2021, 8, 12, 11, 1, 6, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 687614099, 'comment_body': 'there will be one more go routine in sysfs probe that will be listening for these events. so 2 in total', 'comment_created': datetime.datetime(2021, 8, 12, 11, 10, 37, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 689228499, 'comment_body': 'WHy should this be done in the FIllDevice() method?', 'comment_created': datetime.datetime(2021, 8, 16, 4, 13, 2, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 689229296, 'comment_body': 'ok', 'comment_created': datetime.datetime(2021, 8, 16, 4, 16, 56, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 689231063, 'comment_body': 'Is this required to be in the go routine?', 'comment_created': datetime.datetime(2021, 8, 16, 4, 24, 46, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}]","[{'commit_sha': '4a9ce66e99ab86dcb4d3c35f4836091031142e6a', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '666702df2c24a77521553d7fd18122c56ce6035a', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf06e60ea11fafb5b4c9e48f03af7feb81184262', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d0aca3760f7aae814e84985ad9a619aa3da1a68', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9905e0f1d295aa86534f29957dc27148b21deb1', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9f2eef32124ca5fd9b644da4c9c60bd7195f6d7', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ea753740142ceab59ca99eafa225589e35af845', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}]",Aditya Jain,31250892,,User,,24,,13,22
702107653,docs: add design docs for device size change detection,"**Checklist:**
- [ ] Related issues - openebs/openebs#3135
- [x] PR Title follows the convention of  `<type>(<scope>): <subject>`
- [ ] Has the change log section been updated? 

",True,611,https://api.github.com/repos/openebs-archive/node-disk-manager/pulls/611,https://github.com/openebs-archive/node-disk-manager/pull/611,closed,40,0,1,3,1,7,0,0,[],2021-08-03 09:20:27+00:00,2021-09-09 06:14:42+00:00,3185655.0,"36 days, 20:54:15","[{'comment_id': 682069909, 'comment_body': '```suggestion\r\nblockdevices in NDM.\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 20, 13, 58, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 682072389, 'comment_body': 'Are we planning to put any filtering mechanism to check if the device/size was changed,? and then send the event message.', 'comment_created': datetime.datetime(2021, 8, 3, 20, 17, 48, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 682073212, 'comment_body': 'Also, can we have multiple subscribers to the udev event package? \r\n\r\nIf two probes subscribe to udev event we need to make sure, if at some point, udev probe also decides to subscribe, it should exclude the sysfs probe, other wise it will result in same probe being run twice for the same data.', 'comment_created': datetime.datetime(2021, 8, 3, 20, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 682074715, 'comment_body': 'Can we set polling to listen only on files for which blockdevices were actually created instead of the detected blockdevices on the system.\r\n\r\neg: `/dev/sda` is present on the system where `/` is installed. But it is filtered out and blockdevice is not created for this disk. In this case, we do not need to listen for `size` file changes on `sda`.', 'comment_created': datetime.datetime(2021, 8, 3, 20, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 682808976, 'comment_body': 'this can be done', 'comment_created': datetime.datetime(2021, 8, 4, 17, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 682810322, 'comment_body': 'yes, it is possible to have multiple subscribers to the udev events. But the subscription can also filter out events based on the type (add, remove, change). I planned to let the udevprobe only listen to add/remove events and the sysfs probe only to change events. This would prevent any overlap.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 683273707, 'comment_body': 'sure. that sounds good.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}]","[{'commit_sha': '90bd9fed930013a04908a2146056f19c57bf2f06', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a58bf79c3174a8727ceff60bfc71519ef708a029', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c23a1c9fda537205fc8b37598b6caee5267adddf', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}]",Aditya Jain,31250892,,User,,24,,13,22
657961027,docs: add mount change detection design,"
**Checklist:**
- [ ] Fixes #<issue number>
- [x] PR Title follows the convention of  `<type>(<scope>): <subject>`
- [ ] Has the change log section been updated? 
- [ ] Commit has unit tests
- [ ] Commit has integration tests
",True,594,https://api.github.com/repos/openebs-archive/node-disk-manager/pulls/594,https://github.com/openebs-archive/node-disk-manager/pull/594,closed,94,0,1,3,0,6,0,0,[],2021-05-31 05:17:15+00:00,2021-07-14 09:31:09+00:00,3816834.0,"44 days, 4:13:54","[{'comment_id': 642243639, 'comment_body': ""I checked the `findmnt` manual page and it says it looks for mount points in `/etc/fstab` ,  `/etc/mtab` and  `/proc/self/mountinfo` . Just wondering if there's a reason NDM should look at fstab or mtab too. "", 'comment_created': datetime.datetime(2021, 5, 31, 6, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'RealHarshThakur', 'type': 'User'}, {'comment_id': 643994557, 'comment_body': 'When the fs type changes, there is no change in the mounts file. `mounts` file reflect only about changes of devices that are mounted.\r\n\r\nYou can use the [`Start()`](https://github.com/openebs/node-disk-manager/blob/master/cmd/ndm_daemonset/probe/mountprobe.go#L89) in mountprobe itself right? instead of a new probe? Similar way how udevprobe does monitoring?', 'comment_created': datetime.datetime(2021, 6, 2, 14, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 644752456, 'comment_body': '> When the fs type changes, there is no change in the mounts file. `mounts` file reflect only about changes of devices that are mounted.\r\n\r\n👍🏽 will add note\r\n\r\n> You can use the [`Start()`](https://github.com/openebs/node-disk-manager/blob/master/cmd/ndm_daemonset/probe/mountprobe.go#L89) in mountprobe itself right? instead of a new probe? Similar way how udevprobe does monitoring?\r\n\r\nTure. This looks like the cleaner way to do it. ', 'comment_created': datetime.datetime(2021, 6, 3, 12, 32, 36, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 646152972, 'comment_body': 'Not sure if we should be watching fstab/mtab. I took a look at `findmnt` though. It provides an option to watch for changes (`-p`). To implement this, it also [uses the linux polling api](https://github.com/karelzak/util-linux/blob/059ba3dd76c9d6cf45ce01e01bb03091a14a48a9/misc-utils/findmnt.c#L1145) and by default watches for changes in `/proc/self/mountinfo`.', 'comment_created': datetime.datetime(2021, 6, 6, 16, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 646182884, 'comment_body': ""Cool, that's good validation. We can add watching fstab/mtab if the need ever arises I suppose. Right now, don't see a reason we need it"", 'comment_created': datetime.datetime(2021, 6, 6, 20, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'RealHarshThakur', 'type': 'User'}, {'comment_id': 667438614, 'comment_body': '```suggestion\r\nFor every blockdevice listed in the `EventMessage`, the change handler first fetches the latest copy of the blockdevice from the controller blockdevice cache (`controller.BDHierarchyCache`) and then runs the it though the requested probes which are also provided in the message. Once the blockdevice is run through all the probes, the cache is updated and an update request is send to the kuebrnetes api server to upate the corresponding blocdevice CR.\r\n```\r\ntypo', 'comment_created': datetime.datetime(2021, 7, 11, 7, 44, 47, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}]","[{'commit_sha': '59f4faf3411b230b351bf7d9b8c12c2af4205556', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae38492dc7a1253097c4594d39cdb4fb84a0273', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec7580158305f9febde3b85e47fbf430f31bc60', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}]",Aditya Jain,31250892,,User,,24,,13,22
664587331,feat(probe): add mount change detection to mount probe,"Detect mount point and filesystem changes.
The corresponding design document for this PR can be found in #594 

Signed-off-by: Aditya Jain <aditya.jainadityajain.jain@gmail.com>

**Checklist:**
- [x] fixes partially openebs/openebs#3135
- [x] PR Title follows the convention of  `<type>(<scope>): <subject>`
- [x] Has the change log section been updated? 
- [x] Commit has unit tests
- [x] Commit has integration tests


",True,595,https://api.github.com/repos/openebs-archive/node-disk-manager/pulls/595,https://github.com/openebs-archive/node-disk-manager/pull/595,closed,2045,16,23,29,24,120,0,0,[],2021-06-08 09:36:33+00:00,2021-07-08 09:49:48+00:00,2592795.0,"30 days, 0:13:15","[{'comment_id': 649045541, 'comment_body': '*G601:*  Implicit memory aliasing in for loop.\n(at-me [in a reply](https://docs.muse.dev/docs/talk-to-muse/) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 6, 10, 10, 10, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 649112205, 'comment_body': '*G104:*  Errors unhandled.\n(at-me [in a reply](https://docs.muse.dev/docs/talk-to-muse/) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 6, 10, 11, 55, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 649698317, 'comment_body': 'Why is a variable created here? Cant the struct be directly used?', 'comment_created': datetime.datetime(2021, 6, 11, 5, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 649698620, 'comment_body': '```suggestion\r\n\tMountEA EventAction = ""mount-change""\r\n```\r\nBetter to have meaningful names so we dont confuse it later.', 'comment_created': datetime.datetime(2021, 6, 11, 5, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 649698966, 'comment_body': 'Didnt understand the logic being implemented here.', 'comment_created': datetime.datetime(2021, 6, 11, 5, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 649699117, 'comment_body': ':+1: ', 'comment_created': datetime.datetime(2021, 6, 11, 5, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 649699489, 'comment_body': 'Can we have full variable names. Dont need to unnecessarily trim the names. Will go for readability than variable name length', 'comment_created': datetime.datetime(2021, 6, 11, 5, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 649700007, 'comment_body': '```suggestion\r\n\t\t\tprobeEvent.changeBlockDeviceEvent(msg)\r\n```\r\nWDYT?', 'comment_created': datetime.datetime(2021, 6, 11, 5, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 649700363, 'comment_body': 'Can this file be called `changehandler.go`?', 'comment_created': datetime.datetime(2021, 6, 11, 5, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 649700866, 'comment_body': '```suggestion\r\n\t\t\treturn errors.New(""could not identify device uniquely"")\r\n```\r\ntypo', 'comment_created': datetime.datetime(2021, 6, 11, 5, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 649701391, 'comment_body': 'This package is great. :100: ', 'comment_created': datetime.datetime(2021, 6, 11, 5, 33, 42, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650548124, 'comment_body': 'so we have a variable in blockdevice.go named `AllBlockDevices`. When we want to denote that check all existing block devices, we just pass the address of that variable in the device slice. The same is being checked here.', 'comment_created': datetime.datetime(2021, 6, 13, 16, 26, 2, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 650548267, 'comment_body': ""using a variable since we'll need to refer to its address in other parts of the code. I'm not sure what you mean by direct struct."", 'comment_created': datetime.datetime(2021, 6, 13, 16, 27, 28, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 650551084, 'comment_body': 'ignore', 'comment_created': datetime.datetime(2021, 6, 13, 16, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 650653461, 'comment_body': 'Then we should declare the  variable at some other part of the code. The `blockdevice.go` file is meant for only definitions.', 'comment_created': datetime.datetime(2021, 6, 14, 5, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650653751, 'comment_body': 'Is this meant to be addressed in this PR? or kept for a later one.', 'comment_created': datetime.datetime(2021, 6, 14, 5, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650657424, 'comment_body': 'I see. But I feel it would be better to have it in the blockdevice package so that all other parts of the code can use the same variable uniformly. If it will be used by probe package alone, then yes, it will be better to declare the variable in the probe package ', 'comment_created': datetime.datetime(2021, 6, 14, 5, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 650658838, 'comment_body': 'Also, why is the update in the cache required here?', 'comment_created': datetime.datetime(2021, 6, 14, 5, 36, 28, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650660567, 'comment_body': 'Nope. All parts of the code having equal access to modify is risky. Since we are accessing it from multiple go routines we need to make sure the modifications happen only in the intended way. You can see the same with BDHierarchy, if it was present along with the struct definitions it would be easy to access but maintaining the concurrent access becomes difficult. So declare it closest to where it is being used.', 'comment_created': datetime.datetime(2021, 6, 14, 5, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650660796, 'comment_body': ""Oh this is because the block device stored in the cached does not have the uuid set even though we have generated one in this part of the code. If you notice [here](https://github.com/openebs/node-disk-manager/pull/595/files#diff-a58c9edd278ce8e7038021bcb3215de629d9262064dd13c69933bfa5aebc5cd6R29) in `changeBlockDevice`, I am generating the uuid if its not set. This is happening because the bd in cache doesn't have the uuid field set since while adding we are generating the uuid after updating the cache."", 'comment_created': datetime.datetime(2021, 6, 14, 5, 43, 14, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 650661066, 'comment_body': ""I assume this is a separate issue, but I can fix it in this PR if it's fine to do so."", 'comment_created': datetime.datetime(2021, 6, 14, 5, 44, 1, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 650663915, 'comment_body': 'Also, instead of comparing addresses can some other approach be used.', 'comment_created': datetime.datetime(2021, 6, 14, 5, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650664451, 'comment_body': ""> Nope. All parts of the code having equal access to modify is risky. Since we are accessing it from multiple go routines we need to make sure the modifications happen only in the intended way.\r\n\r\nOh, so this variable is more of a placeholder. It is meant to be read-only since we only care about the address of the variable. The content stored inside doesn't matter and that why I have simply declared it. \r\n\r\n> So declare it closest to where it is being used.\r\n\r\nAll right. Though I feel that since its read-only, it will be safe from concurrent patterns."", 'comment_created': datetime.datetime(2021, 6, 14, 5, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 650664756, 'comment_body': 'Can use `mount.HostMountsFilePath` here, since for checking the mount points on the host machine we need the procfs of the host. `/proc/1/mounts` inside the container will only give the mounts inside the container.', 'comment_created': datetime.datetime(2021, 6, 14, 5, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650667683, 'comment_body': 'We can also check for a particular field in the block device, say the dev path. If the dev path is set to a particular value, then we can say that it means All block devices.\r\n', 'comment_created': datetime.datetime(2021, 6, 14, 6, 4, 30, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 650778655, 'comment_body': 'Why are these args required. We will be always checking for EPOLLERR and EPOLLPRI right?', 'comment_created': datetime.datetime(2021, 6, 14, 9, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650780373, 'comment_body': ""yes. had put these for testing purposes but they aren't required. will be removed in the next revision."", 'comment_created': datetime.datetime(2021, 6, 14, 9, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 650817483, 'comment_body': 'What is the purpose of ranging over the channel here? \r\n\r\nThis causes to read from the channel which is not needed.', 'comment_created': datetime.datetime(2021, 6, 14, 10, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650818032, 'comment_body': '```suggestion\r\n\tErrWatcherNotFound    error = errors.New(""watcher not found"")\r\n```', 'comment_created': datetime.datetime(2021, 6, 14, 10, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650824401, 'comment_body': 'Why is the size of 2 required here? Can we just create the array instead of specifying the size.', 'comment_created': datetime.datetime(2021, 6, 14, 10, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650825332, 'comment_body': 'Why is a buffered channel used?', 'comment_created': datetime.datetime(2021, 6, 14, 10, 21, 40, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 650826973, 'comment_body': 'nvm. Understood the logic after going through the epoll package. A message to scan all devices will be sent on the udev channel whenever a change is detected in mounts file (this change is detected and send over eventCh)? right?', 'comment_created': datetime.datetime(2021, 6, 14, 10, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 651468697, 'comment_body': 'yes. ', 'comment_created': datetime.datetime(2021, 6, 15, 5, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 651471544, 'comment_body': 'oh, so the length of the slice is still 0. I specified a capacity of 2 because users of the package will at least add one watcher. so, just kept a non-zero capacity.', 'comment_created': datetime.datetime(2021, 6, 15, 6, 0, 42, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 651472653, 'comment_body': 'just a precaution in case the readers are slow. Should I remove the buffer?', 'comment_created': datetime.datetime(2021, 6, 15, 6, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 651473685, 'comment_body': 'should I change to this approach? @akhilerm \r\n', 'comment_created': datetime.datetime(2021, 6, 15, 6, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 651474110, 'comment_body': '@akhilerm wdyt?\r\n', 'comment_created': datetime.datetime(2021, 6, 15, 6, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 651539509, 'comment_body': 'Can we have some other field, rather than depending on the fields in blockdevice struct.', 'comment_created': datetime.datetime(2021, 6, 15, 7, 52, 46, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 651540617, 'comment_body': 'yep. separate PR is good.', 'comment_created': datetime.datetime(2021, 6, 15, 7, 54, 16, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 651542431, 'comment_body': 'but we are appending to watcher slice right. So even if its zero size, it will get updated. 0 size should be fine. Because any integer that you keep in code, you will have to provide suitable explanation why it is being used.', 'comment_created': datetime.datetime(2021, 6, 15, 7, 56, 30, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 651542799, 'comment_body': 'yes, use an unbuffered channel.', 'comment_created': datetime.datetime(2021, 6, 15, 7, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 651631854, 'comment_body': 'instead of using a variable and its address.', 'comment_created': datetime.datetime(2021, 6, 15, 9, 50, 20, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 651631928, 'comment_body': 'add comment doc to explain timeout and its unit.', 'comment_created': datetime.datetime(2021, 6, 15, 9, 50, 26, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 651635435, 'comment_body': 'will update', 'comment_created': datetime.datetime(2021, 6, 15, 9, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 652359693, 'comment_body': '```suggestion\r\n\tAllBlockDevices bool                       // If true, ignore Devices list and iterate through all known block devices present  in the hierarchy cache\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 5, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 652363052, 'comment_body': 'Can you do a small refactoring here, similar like in [udeprobe](https://github.com/openebs/node-disk-manager/blob/master/cmd/ndm_daemonset/probe/udevprobe.go#L82-L116) to make sure we maintain the same pattern.', 'comment_created': datetime.datetime(2021, 6, 16, 5, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 652368113, 'comment_body': 'Do we need both FD and file to watchers?', 'comment_created': datetime.datetime(2021, 6, 16, 5, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 653353818, 'comment_body': ""I added them so that I don't have to iterate through the watcher slice again and again. "", 'comment_created': datetime.datetime(2021, 6, 17, 8, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 653355274, 'comment_body': 'Both are needed.\r\n1. When adding/deleting a watcher we search for watcher based on the file name.\r\n2. When syscall.EpollWait returns any events, the events are mapped to fd. so we need to search for the watcher based on the fd.', 'comment_created': datetime.datetime(2021, 6, 17, 8, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 653503245, 'comment_body': '@z0marlin You need to also apply the filter here. Otherwise the following can happen:\r\n1. Detected a device for eg: /dev/loop1, which is ignored by the filter\r\n2. User formatted the loop device and mounted it, \r\n3. Changehandler picks it up, fills the details, but while trying to update finds that the device resource does not exist and error out. This causes continuous erroring out and log flooding.', 'comment_created': datetime.datetime(2021, 6, 17, 12, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 653521706, 'comment_body': 'is this happening because the cache stores all detected devices regardless of filters? the cache has loop devices too right?\r\nOne question though. I assumed UpdateBlockDevice will fail in case the bd is not found in etcd. What exactly is causing the log floods then?', 'comment_created': datetime.datetime(2021, 6, 17, 12, 35, 6, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 653524049, 'comment_body': 'Can you add additional logs to know about which device is getting processed etc. Ref the `addBlockDeviceEvent()`', 'comment_created': datetime.datetime(2021, 6, 17, 12, 38, 8, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 654773780, 'comment_body': '*G307:*  Deferring unsafe method ""Close"" on type ""*os.File""\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 6, 19, 9, 30, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 654773782, 'comment_body': '*SA5001:*  should check returned error before deferring d.File.Close()\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 6, 19, 9, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 659279295, 'comment_body': '@z0marlin Please add this log, so that its easier to see the events processed from the logs.', 'comment_created': datetime.datetime(2021, 6, 27, 7, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662234022, 'comment_body': '*G104:*  Errors unhandled.\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234045, 'comment_body': '*G104:*  Errors unhandled.\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234059, 'comment_body': '*G307:*  Deferring unsafe method ""Close"" on type ""*os.File""\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234071, 'comment_body': '*G307:*  Deferring unsafe method ""Close"" on type ""*os.File""\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234091, 'comment_body': '*G601:*  Implicit memory aliasing in for loop.\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234110, 'comment_body': '*SA5001:*  should check returned error before deferring d.File.Close()\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234126, 'comment_body': '*ST1012:*  error var InvalidTokenError should have name of the form ErrFoo\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234143, 'comment_body': '*U1000:*  field attrs is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234153, 'comment_body': '*U1000:*  field bindSrc is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234159, 'comment_body': '*U1000:*  field comment is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234181, 'comment_body': '*U1000:*  field devno is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234195, 'comment_body': '*U1000:*  field flags is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234215, 'comment_body': '*U1000:*  field freq is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234234, 'comment_body': '*U1000:*  field options is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234252, 'comment_body': '*U1000:*  field parent is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234267, 'comment_body': '*U1000:*  field passNo is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234282, 'comment_body': '*U1000:*  field priority is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234291, 'comment_body': '*U1000:*  field root is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234311, 'comment_body': '*U1000:*  field size is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234322, 'comment_body': '*U1000:*  field swapType is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234344, 'comment_body': '*U1000:*  field tid is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662234358, 'comment_body': '*U1000:*  field usedSize is unused\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 1, 12, 12, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662428336, 'comment_body': ""I've recorded this as ignored for this pull request. If you change your mind, just comment `@sonatype-lift unignore`."", 'comment_created': datetime.datetime(2021, 7, 1, 16, 18, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 662754736, 'comment_body': ':+1:', 'comment_created': datetime.datetime(2021, 7, 2, 5, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662757433, 'comment_body': 'Can this functionality also be moved to libmount package?', 'comment_created': datetime.datetime(2021, 7, 2, 6, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662759757, 'comment_body': 'Can you refer the util-linux package here, we need to give proper attribution that this package was inspired from util-linux libmount.', 'comment_created': datetime.datetime(2021, 7, 2, 6, 7, 53, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662761412, 'comment_body': 'Please correct / fix these.', 'comment_created': datetime.datetime(2021, 7, 2, 6, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662787014, 'comment_body': 'Can you also add test cases to the methods in this package.  Also, what do you think of having the `libmount` package inside `mount` package.', 'comment_created': datetime.datetime(2021, 7, 2, 7, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662789074, 'comment_body': 'use descriptive variable names.', 'comment_created': datetime.datetime(2021, 7, 2, 7, 11, 11, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662805747, 'comment_body': 'unused fileds can be removed.', 'comment_created': datetime.datetime(2021, 7, 2, 7, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662821750, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 7, 2, 8, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662833364, 'comment_body': 'Do we need to add `/var/lib/docker` also here, or is it under the overlay target.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662838181, 'comment_body': 'Why is this empty struct needed here?', 'comment_created': datetime.datetime(2021, 7, 2, 8, 31, 28, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662839737, 'comment_body': 'Just the listing of devices in the libmount package and the rest of functionality related to sending messages can be here.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 33, 48, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662842741, 'comment_body': 'there is already a function called createNDMDaemonSet. Since this function also waits for pod to come into running state, can choose a different func name.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662844313, 'comment_body': 'same comment as above.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662845019, 'comment_body': 'Can you remove the unused fields from this struct.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 41, 42, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662848323, 'comment_body': 'Do we need to handle the error here?', 'comment_created': datetime.datetime(2021, 7, 2, 8, 46, 35, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662852584, 'comment_body': 'define this type before using it in the constants.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662854847, 'comment_body': 'we are not parsing mtab or fstab right?', 'comment_created': datetime.datetime(2021, 7, 2, 8, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662917883, 'comment_body': 'A change is needed in this file [here](https://github.com/openebs/node-disk-manager/blob/master/cmd/ndm_daemonset/probe/addhandler.go#L46-L47) about the log messages used. As change can also now trigger the adding device to cache', 'comment_created': datetime.datetime(2021, 7, 2, 10, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662919679, 'comment_body': 'Also this item also needs to be filtered out, I am seeing the below messages in one of the nodes in my cluster.\r\n```\r\nmount      /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.UsP2mq /dev/sda5[/usr/bin/runc] ext4   rw,relatime,errors=remount-ro\r\nremount    /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.UsP2mq /dev/sda5[/usr/bin/runc] ext4   ro,relatime,errors=remount-ro\r\numount     /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.UsP2mq /dev/sda5[/usr/bin/runc] ext4   ro,relatime,errors=remount-ro\r\nmount      /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.gXCAMA /dev/sda5[/usr/bin/runc] ext4   rw,relatime,errors=remount-ro\r\nremount    /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.gXCAMA /dev/sda5[/usr/bin/runc] ext4   ro,relatime,errors=remount-ro\r\numount     /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.gXCAMA /dev/sda5[/usr/bin/runc] ext4   ro,relatime,errors=remount-ro\r\nmount      /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.j7g4kS /dev/sda5[/usr/bin/runc] ext4   rw,relatime,errors=remount-ro\r\nremount    /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.j7g4kS /dev/sda5[/usr/bin/runc] ext4   ro,relatime,errors=remount-ro\r\numount     /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.j7g4kS /dev/sda5[/usr/bin/runc] ext4   ro,relatime,errors=remount-ro\r\nmount      /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.W6lDe6 /dev/sda5[/usr/bin/runc] ext4   rw,relatime,errors=remount-ro\r\nremount    /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.W6lDe6 /dev/sda5[/usr/bin/runc] ext4   ro,relatime,errors=remount-ro\r\numount     /run/docker/runtime-runc/moby/2fa14e717b0d77a91d990b02158fb78f9a7c64dc61d1064507c3ff26c4812779/runc.W6lDe6 /dev/sda5[/usr/bin/runc] ext4   ro,relatime,errors=remount-ro\r\n```\r\n\r\nThe corresponding processing takes place in the mount probe, but gets ignored by os disk filter since its happening on the root disk (`/dev/sda5` is the root disk). We need to move this filtering into the mountab filter.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 662924721, 'comment_body': 'Only the mount points needs to be cleared. The filesystem can still be present, even if the disk is unmounted.', 'comment_created': datetime.datetime(2021, 7, 2, 10, 52, 23, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 663806350, 'comment_body': 'I feel it should stay here. this is because the task of processing the changes and sending an appropriate event to the `UdevEventMessageChannel` should be the task of the probe package. `libmount` should be agnostic of this as a package according to me. Some other applications might use the difference for taking some other kind of action.', 'comment_created': datetime.datetime(2021, 7, 5, 10, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 663808469, 'comment_body': 'I need the functionality of a set here. A single diff may have multiple changes related to a device. For example, say a device is mounted at some point A. Now it can be moved to B and also be mounted at a new point C. These are two different changes, but the underlying device is the same. Hence we would want to only capture unique occurrences of the devices. ', 'comment_created': datetime.datetime(2021, 7, 5, 10, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 663822424, 'comment_body': 'So the same function is used to parse proc/mounts, mtab, and fstab file. The C library does the same.', 'comment_created': datetime.datetime(2021, 7, 5, 10, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 663839338, 'comment_body': 'since this is related to operations with the mount, I feel libmount should have it. Also the correct separation of functionality should be there,  this function should just process the diff and return the changed devices with the action. Then those set of devices can be passed on to the channel from the caller of the diff function.', 'comment_created': datetime.datetime(2021, 7, 5, 10, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 663840036, 'comment_body': 'got it. But still why do we need an empty struct{}, that is not used.', 'comment_created': datetime.datetime(2021, 7, 5, 10, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 663866700, 'comment_body': ""oh, that is to satisfy the golang requirements. we need to specify a type for the value in the map right. So I just use an empty struct since we don't really care about the value and only see if the key is set"", 'comment_created': datetime.datetime(2021, 7, 5, 11, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 663873594, 'comment_body': 'oh ok, you mean the processing which devices changed part. So that too should be a part of the mountprobe maybe, since the diff generated by `libmount` is complete in the sense that it tells what filesystems changed (device, mount-point, and the action). The processing of diff in mount probe is only done because we are not concerned about the mount-point component, and just want to extract the devices that changed. But having said that, I think we can have a utility method for `MountTabDiff` to give a list of changed devices.', 'comment_created': datetime.datetime(2021, 7, 5, 11, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 663918224, 'comment_body': 'so there should be a filter for target `/run/docker/` too?', 'comment_created': datetime.datetime(2021, 7, 5, 13, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 663926657, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2021, 7, 5, 13, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 664240698, 'comment_body': 'yes, we need to. in the case of the `FromFile` option, an error is returned if the file is not found. have added code to return on error.', 'comment_created': datetime.datetime(2021, 7, 6, 5, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 664409724, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 6, 9, 52, 14, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 664412436, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 6, 9, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 664412510, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 6, 9, 56, 4, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 664413162, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 6, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 664413357, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 6, 9, 57, 17, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 664428330, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 6, 10, 20, 1, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 664432745, 'comment_body': '*G307:*  Deferring unsafe method ""Close"" on type ""*os.File""\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 6, 10, 27, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 664432759, 'comment_body': '*ST1012:*  error var InvalidTokenError should have name of the form ErrFoo\n(at-me [in a reply](https://help.sonatype.com/lift) with `help` or `ignore`)', 'comment_created': datetime.datetime(2021, 7, 6, 10, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sonatype-lift[bot]', 'type': 'Bot'}, {'comment_id': 664802674, 'comment_body': '@z0marlin The unused fields can be removed here.', 'comment_created': datetime.datetime(2021, 7, 6, 18, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 665848402, 'comment_body': '```suggestion\r\n\t\t\tklog.V(4).Info(""could not find bd in hierarchy cache.  Trying to recover."")\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 3, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 665848453, 'comment_body': 'typo/', 'comment_created': datetime.datetime(2021, 7, 8, 3, 45, 45, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 665848626, 'comment_body': 'Need to run `make manifests` after adding this, So that the ndm-operator.yaml also gets updated.', 'comment_created': datetime.datetime(2021, 7, 8, 3, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}]","[{'commit_sha': '6ee1d9663695fa7f3130a7053d2bf0ba4a2ceb48', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78297046fa763658330ad907a3d30bd1c8ba123d', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76dac3dfcb87c46297f88858eb2a42ce2773309e', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a349536eb329b83ecd50710028664d8af9ca9fa9', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03f85f7dad7489f1e168184f518255145ecbfc3d', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75dd43ee1ad67fd3c4c1a0a81396f89e8d8ae727', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce5d610b4477ca8a421b0cdf8a62fb3e38c4d915', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cea70b84d495e23d53a87fe350a977552c0d854', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13bf1ef64e18a3ae9210bda178eb826837e8aa12', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ed7fd455c28a94a2e6054dd58c7ec5357e63e6e', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0253441bd4971c0221aa88985f1f4ec1730c49d', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9e3ba27301b8f358693496d1ea8644433e16ab4', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7cfbb0932b73fb717cb088163756f3c30a9e62d', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b1eee6f3e125269ac73c59d23fb87cf62d010f4', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f60f2923ff365752a493497ced38fef9f317d27', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e995ea61a1cf83080da098851513b400f57f57ad', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e153dc32c8ea0b3b2b16e1e2a3aec63eb798cce', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc7f99373d7e93dcf993277059681219a6b8912b', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f81416e0d136921062144f051777461ecf64260', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ffd5ba910bd74489315fda9d8f88e6cde9c11a0', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15cdfaf6e676ba3586d9eec385738e5583bb7470', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90c7a8ac69d58943e5f462d7a733df47b9402fc2', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0c9e0c394204e66917134af186f9d430b94994b', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6532b54997c49ddf950d184db947e35ed0796af2', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '141ac18791cbf8044fe3e70feabcaf705b1322c1', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '803dee9ca3534d8ee10be16f71947e1ee8fac6c3', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '586fa67709e2ae660837347da115df923da89237', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '596f40b354d7d4311735903482c0400ec2fbb958', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2cf87a38853d7c51ba57439faa2632a5224e129', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}]",Aditya Jain,31250892,,User,,24,,13,22
676865025,feat(controller): selectively run probes using allowlist in event msg,"event messages passed in the `UdevEventMessageChannel` channel are used
to trigger actions in the controller to add/update/delete blockdevices.
In case of addition, the controller runs all the registered probes to
fill certain details of the blockdevice. While all probes need to be run
when adding a new blockdevice, in case of updates, the list of probes to
be run can be narrowed down based on the type of update. For example,
when the mount points of a partition change, mount probe alone is enough
to fetch the new information.
add an allowlist for probes in the event message to inform the
controller what probes are to be run. the controller then runs only the
probes that are enabled and available in the allowlist. leaving the
allowlist empty causes default behaviour which is to run all the enabled
probes.

Signed-off-by: Aditya Jain <aditya.jainadityajain.jain@gmail.com>

**Any additional information for your reviewer?** : 
This PR is a continuation of #595 and works towards fixing openebs/openebs#3135.


**Checklist:**
- [x] Fixes  openebs/openebs#3135 (partially)
- [x] PR Title follows the convention of  `<type>(<scope>): <subject>`
- [x] Has the change log section been updated? 
- [x] Commit has unit tests
- [ ] Commit has integration tests
",True,601,https://api.github.com/repos/openebs-archive/node-disk-manager/pulls/601,https://github.com/openebs-archive/node-disk-manager/pull/601,closed,49,15,4,2,2,6,0,0,[],2021-06-24 07:34:21+00:00,2021-06-28 11:23:09+00:00,359328.0,"4 days, 3:48:48","[{'comment_id': 659306081, 'comment_body': 'Refer to the probe names in `probe` package. Also we may need to export the probe names as they are currently unexported. [Ref](https://github.com/openebs/node-disk-manager/blob/master/cmd/ndm_daemonset/probe/mountprobe.go#L42)', 'comment_created': datetime.datetime(2021, 6, 27, 11, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 659307323, 'comment_body': 'The logic can be made much simpler by writing like this.\r\n```golang\r\nfunc (c *Controller) ListProbe(requestedProbes ...string) []*Probe {\r\n\tc.Lock()\r\n\tdefer c.Unlock()\r\n\tallProbes := false\r\n\tif len(requestedProbes) == 0 {\r\n\t\tallProbes = true\r\n\t}\r\n\tlistProbe := make([]*Probe, 0)\r\n\tfor _, probe := range c.Probes {\r\n\t\tif probe.State {\r\n\t\t\tif allProbes || util.Contains(requestedProbes, probe.Name) {\r\n\t\t\t\tlistProbe = append(listProbe, probe)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn listProbe\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 6, 27, 11, 34, 5, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 659307415, 'comment_body': 'How does the variable name `requestedProbes` sound to you?', 'comment_created': datetime.datetime(2021, 6, 27, 11, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 659307546, 'comment_body': 'Same change w.r.t variable name can be made here. RequestedProbes instead of AllowedProbes.', 'comment_created': datetime.datetime(2021, 6, 27, 11, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 659330405, 'comment_body': 'Do we need to export them? The only other place outside the probe package where events are pushed to the event channel is the udevevent package. most of the usage will be internal to the probe package I feel. Wdyt?', 'comment_created': datetime.datetime(2021, 6, 27, 14, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 659334267, 'comment_body': 'yep. no need to export. I got it clear now.', 'comment_created': datetime.datetime(2021, 6, 27, 14, 58, 47, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}]","[{'commit_sha': 'e24e829ca894e07e645ad3e733bca5ad88774906', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65ebcc10a09e9d62f4a6aec95046f65bfe46096c', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}]",Aditya Jain,31250892,,User,,24,,13,22
685079472,fix(probe): update bd cache after generating uuid,"when adding a blockdevice, the information stroed in the controller
cache does not contain the the up to date uuid of the bd generated while
adding the bd. Update the bd cache with the new uuid after generation.

Signed-off-by: Aditya Jain <aditya.jainadityajain.jain@gmail.com>

**Checklist:**
- [ ] Fixes #<issue number>
- [x] PR Title follows the convention of  `<type>(<scope>): <subject>`
- [x] Has the change log section been updated? 
- [ ] Commit has unit tests
- [ ] Commit has integration tests
- [ ] (Optional) Are upgrade changes included in this PR? If not, mention the issue/PR to track: 
- [ ] (Optional) If documentation changes are required, which issue on https://github.com/openebs/openebs-docs is used to track them
",True,602,https://api.github.com/repos/openebs-archive/node-disk-manager/pulls/602,https://github.com/openebs-archive/node-disk-manager/pull/602,closed,4,0,2,1,0,0,0,0,[],2021-07-07 10:43:49+00:00,2021-07-08 03:41:04+00:00,61035.0,16:57:15,[],"[{'commit_sha': '3e5fe353b81af6b26d7d656ad8bcdde7c9070a94', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}]",Aditya Jain,31250892,,User,,24,,13,22
694912759,"refactor(pkg, udevevent): decouple udevevent from controller","As per conventions, packages in the pkg directory should be independent
of the overlying applications that use them. The `udevevent` package has
tight coupling with the `controller` and `probe` packages from
ndm_daemonset.
Refactor to make `udevevent` standalone. This includes
moving all application (ndm_daemonset in this case) specific code in
`udevevent` to appropriate cmd packages and providing an API for the
application code to use the functionalities of `udevevent`.

This PR aligns with the idea raised in #597 

Signed-off-by: Aditya Jain <aditya.jainadityajain.jain@gmail.com>

**Checklist:**
- [x] Related to #597 
- [x] PR Title follows the convention of  `<type>(<scope>): <subject>`
- [ ] Has the change log section been updated? 
- [x] Commit has unit tests
- [ ] Commit has integration tests
",True,609,https://api.github.com/repos/openebs-archive/node-disk-manager/pulls/609,https://github.com/openebs-archive/node-disk-manager/pull/609,closed,326,243,8,3,1,20,0,0,[],2021-07-22 06:47:06+00:00,2021-08-05 07:30:51+00:00,1212225.0,"14 days, 0:43:45","[{'comment_id': 674539603, 'comment_body': 'reordering as per convention', 'comment_created': datetime.datetime(2021, 7, 22, 6, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 675938441, 'comment_body': ""If we're going to use this package as a library, I am not sure if we should be logging. It makes sense to me because the packages under `cmd/` for this repo and any external repo can use these libraries, receive an error and log them. Would like to know your thoughts too @kmova @akhilerm  "", 'comment_created': datetime.datetime(2021, 7, 24, 3, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'RealHarshThakur', 'type': 'User'}, {'comment_id': 675948497, 'comment_body': 'Agree with you here.', 'comment_created': datetime.datetime(2021, 7, 24, 4, 54, 59, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 677280947, 'comment_body': 'Do we need to get an instance of the target channel on every iteration?', 'comment_created': datetime.datetime(2021, 7, 27, 9, 30, 2, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 677285927, 'comment_body': 'provide a comment here. This uuid will be the legacy format. We will be overwriting this UUID in the event handler.', 'comment_created': datetime.datetime(2021, 7, 27, 9, 36, 41, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 677409986, 'comment_body': 'add comments', 'comment_created': datetime.datetime(2021, 7, 27, 12, 41, 21, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 677410537, 'comment_body': 'Should we default to change, or just ignore?', 'comment_created': datetime.datetime(2021, 7, 27, 12, 42, 4, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 677411787, 'comment_body': 'Is this created so that there can be multiple subscribers for the events?', 'comment_created': datetime.datetime(2021, 7, 27, 12, 43, 38, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 677412578, 'comment_body': 'Add comments', 'comment_created': datetime.datetime(2021, 7, 27, 12, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 677412900, 'comment_body': 'Why do we need to return the Subscription here?', 'comment_created': datetime.datetime(2021, 7, 27, 12, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 677413053, 'comment_body': 'do we really use the Unsubscribe method?', 'comment_created': datetime.datetime(2021, 7, 27, 12, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 677414842, 'comment_body': 'Cant we use the `libudevwrapper.UDEV_ACTION_*` here?', 'comment_created': datetime.datetime(2021, 7, 27, 12, 47, 32, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 681434281, 'comment_body': 'yes', 'comment_created': datetime.datetime(2021, 8, 3, 4, 57, 33, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 681434441, 'comment_body': 'we need the subscription in the `Unsubscribe` call', 'comment_created': datetime.datetime(2021, 8, 3, 4, 58, 10, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 681434787, 'comment_body': ""currently, we probably won't. but kept it to have a complete API."", 'comment_created': datetime.datetime(2021, 8, 3, 4, 59, 11, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 681450353, 'comment_body': 'fixed\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 5, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 681451143, 'comment_body': ""throwing error in case it doesn't match"", 'comment_created': datetime.datetime(2021, 8, 3, 5, 44, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 682064362, 'comment_body': 'Is this go routine created for processing errors only?', 'comment_created': datetime.datetime(2021, 8, 3, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 682066403, 'comment_body': 'Didnt understand this function @z0marlin. Too many channels now passing information.\r\n\r\nAlso, how many go routines (created from the code) will be present in NDM daemon now?', 'comment_created': datetime.datetime(2021, 8, 3, 20, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 682813646, 'comment_body': ""The number of go routines hasn't changed. Its just that instead of starting the monitor as a go routine in udevprobe [here](https://github.com/openebs/node-disk-manager/pull/609/files/c7f7cab6a7f0a24c874b63d2f2ee684e3cc8e606#diff-7f7a5459cf891826a55f62700489f89dcd306dac941bf39d68c9091725b7456eL121), I'm starting it within the call to `Monitor()`. This allows me to return an error channel back to udevprobe."", 'comment_created': datetime.datetime(2021, 8, 4, 17, 21, 53, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}]","[{'commit_sha': '63e1518a5eed474e3e79193c33ff64e3389e4c1b', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7f7cab6a7f0a24c874b63d2f2ee684e3cc8e606', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '867149686e1acd36191bc2be4de1907030c42db1', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}]",Aditya Jain,31250892,,User,,24,,13,22
702107653,docs: add design docs for device size change detection,"**Checklist:**
- [ ] Related issues - openebs/openebs#3135
- [x] PR Title follows the convention of  `<type>(<scope>): <subject>`
- [ ] Has the change log section been updated? 

",True,611,https://api.github.com/repos/openebs-archive/node-disk-manager/pulls/611,https://github.com/openebs-archive/node-disk-manager/pull/611,closed,40,0,1,3,1,7,0,0,[],2021-08-03 09:20:27+00:00,2021-09-09 06:14:42+00:00,3185655.0,"36 days, 20:54:15","[{'comment_id': 682069909, 'comment_body': '```suggestion\r\nblockdevices in NDM.\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 20, 13, 58, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 682072389, 'comment_body': 'Are we planning to put any filtering mechanism to check if the device/size was changed,? and then send the event message.', 'comment_created': datetime.datetime(2021, 8, 3, 20, 17, 48, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 682073212, 'comment_body': 'Also, can we have multiple subscribers to the udev event package? \r\n\r\nIf two probes subscribe to udev event we need to make sure, if at some point, udev probe also decides to subscribe, it should exclude the sysfs probe, other wise it will result in same probe being run twice for the same data.', 'comment_created': datetime.datetime(2021, 8, 3, 20, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 682074715, 'comment_body': 'Can we set polling to listen only on files for which blockdevices were actually created instead of the detected blockdevices on the system.\r\n\r\neg: `/dev/sda` is present on the system where `/` is installed. But it is filtered out and blockdevice is not created for this disk. In this case, we do not need to listen for `size` file changes on `sda`.', 'comment_created': datetime.datetime(2021, 8, 3, 20, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 682808976, 'comment_body': 'this can be done', 'comment_created': datetime.datetime(2021, 8, 4, 17, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 682810322, 'comment_body': 'yes, it is possible to have multiple subscribers to the udev events. But the subscription can also filter out events based on the type (add, remove, change). I planned to let the udevprobe only listen to add/remove events and the sysfs probe only to change events. This would prevent any overlap.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 683273707, 'comment_body': 'sure. that sounds good.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}]","[{'commit_sha': '90bd9fed930013a04908a2146056f19c57bf2f06', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a58bf79c3174a8727ceff60bfc71519ef708a029', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c23a1c9fda537205fc8b37598b6caee5267adddf', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}]",Aditya Jain,31250892,,User,,24,,13,22
715269404,feat(probe): add size change detection,"Add blockdevice size change detection using udev change events

**Checklist:**
- [x] Fixes openebs/openebs#3135
- [x] PR Title follows the convention of  `<type>(<scope>): <subject>`
- [x] Has the change log section been updated? 
- [ ] Commit has unit tests
- [x] Commit has integration tests ",True,616,https://api.github.com/repos/openebs-archive/node-disk-manager/pulls/616,https://github.com/openebs-archive/node-disk-manager/pull/616,closed,209,44,14,20,3,15,0,0,[],2021-08-18 17:04:06+00:00,2021-09-06 11:27:11+00:00,1621385.0,"18 days, 18:23:05","[{'comment_id': 691454617, 'comment_body': 'There should  be something in this package to help you with this.  https://pkg.go.dev/k8s.io/kubernetes@v1.22.0/pkg/api/v1/resource', 'comment_created': datetime.datetime(2021, 8, 18, 17, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'RealHarshThakur', 'type': 'User'}, {'comment_id': 692367369, 'comment_body': 'A better variable  name can be chosen. This is a bit confusing.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 5, 44, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 692368087, 'comment_body': 'Should we need 2 separate events now?', 'comment_created': datetime.datetime(2021, 8, 19, 18, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 692368790, 'comment_body': 'Can we make this into one feature flag, instead of having 2 separate features?', 'comment_created': datetime.datetime(2021, 8, 19, 18, 7, 51, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 692369827, 'comment_body': 'This is for detecting the filesystem changes right? This also need to be done only if the feature gate is enabled.', 'comment_created': datetime.datetime(2021, 8, 19, 18, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 692371271, 'comment_body': 'Instead of using 2 separate feature gates, we should use just one feature gate as both of them are similar', 'comment_created': datetime.datetime(2021, 8, 19, 18, 11, 16, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 692933394, 'comment_body': ""@RealHarshThakur I wasn't able to figure out how to use the package here. Could you please help out?"", 'comment_created': datetime.datetime(2021, 8, 20, 13, 10, 7, tzinfo=datetime.timezone.utc), 'commenter': 'z0marlin', 'type': 'User'}, {'comment_id': 692970724, 'comment_body': 'Sourcegraph helps   : https://sourcegraph.com/search?q=context:global+resource.Quantity&patternType=literal .  \r\nhttps://sourcegraph.com/github.com/kubernetes/kubernetes@64e422dc2ab5fab35026531194eefbfe66dc5aec/-/blob/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go?L89:6', 'comment_created': datetime.datetime(2021, 8, 20, 14, 1, 2, tzinfo=datetime.timezone.utc), 'commenter': 'RealHarshThakur', 'type': 'User'}, {'comment_id': 692971299, 'comment_body': 'Plan is to switch API fields to use this type too but we need to upgrade the CRD version. ', 'comment_created': datetime.datetime(2021, 8, 20, 14, 1, 50, tzinfo=datetime.timezone.utc), 'commenter': 'RealHarshThakur', 'type': 'User'}, {'comment_id': 693334746, 'comment_body': '```suggestion\r\n\t\tup.udeveventSubscription = udevevent.Subscribe(\r\n\t\t        udevevent.EventTypeAdd,\r\n\t\t\tudevevent.EventTypeRemove,\r\n\t\t\tudevevent.EventTypeChange,\r\n\t\t)\r\n```', 'comment_created': datetime.datetime(2021, 8, 21, 10, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 693334757, 'comment_body': '```suggestion\r\n\t\tup.udeveventSubscription = udevevent.Subscribe(\r\n\t\t        udevevent.EventTypeAdd,\r\n\t\t\tudevevent.EventTypeRemove,\r\n\t\t)\r\n```', 'comment_created': datetime.datetime(2021, 8, 21, 10, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 693335476, 'comment_body': 'This change also need to be made in the operator and chart files in the `deploy/` directory', 'comment_created': datetime.datetime(2021, 8, 21, 10, 12, 55, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 693454596, 'comment_body': '```suggestion\r\n        # Detect changes to device size, filesystem and mount-points without restart.\r\n```', 'comment_created': datetime.datetime(2021, 8, 22, 7, 6, 24, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 693454628, 'comment_body': '```suggestion\r\n        # Detect changes to device size, filesystem and mount-points without restart.\r\n```', 'comment_created': datetime.datetime(2021, 8, 22, 7, 6, 40, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}, {'comment_id': 693456323, 'comment_body': '```suggestion\r\n        # - --feature-gates=""ChangeDetection""\r\n```', 'comment_created': datetime.datetime(2021, 8, 22, 7, 20, 6, tzinfo=datetime.timezone.utc), 'commenter': 'akhilerm', 'type': 'User'}]","[{'commit_sha': '66215cf56268bc9b834a222991e0f462c29e2888', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1899b8fdb21dc44350bd8b8c634f617eb42e60a', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aabc3aade512b338caa3d53ed1aa827c2789dd2f', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '544142e76b419fbf9fba47daa89b50d2a35f1bb3', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f359e3c99422879da0e76f5e9a77de850b1d4c3f', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b26ef96fdf03121bc10ce2d6606c7497be51992b', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91cbd1ef0b01cbd4c16ce433f7da09713a68448e', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b0ee1ca34045ff781bae5b79752b72e427a62b1', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd09416c30df035a93c9f009aabd1c88d17b896c5', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15ad2aaf4d04a1eb8392567ced81e65b195641ce', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79e87035f633d70e3c2b5e0e379f5179c47721f7', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be66f0cd77b28dbaadb55e440060a1fffcc73317', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a278b72b059e1d023daab38ab5a9d54775dcdf6c', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9405f850de5906c5df2f9269742e90d5aa4dbfe', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47f61c0ec4e296aed6ef3819c59b7704108e5c51', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '045c9f8452dc8ff53f28797b7e5c3dc8da28e2fd', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05eed8a406e5b0e679b514bfb028967b4a71ea25', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '138a03f3c50464a6729a4278c15ff2de0e0f7d63', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae17aa0e7dd41b06dbe170edd389a77cc2948391', 'committer_username': 'akhilerm', 'committer_name': 'Akhil Mohan', 'committer_email': 'akhilerm@gmail.com', 'commit_date': datetime.datetime(2014, 5, 17, 12, 26, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5778d780b840e5d55e0673b63874ed78c727abb', 'committer_username': 'z0marlin', 'committer_name': 'Aditya Jain', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 22, 15, 52, 16, tzinfo=datetime.timezone.utc)}]",Aditya Jain,31250892,,User,,24,,13,22

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
330764018,node-disk-manager,z0marlin/node-disk-manager,Go,0,0,1,73,427,1,17,1,"[{'id': 755831502, 'number': 3, 'closed': None, 'created': datetime.datetime(2021, 10, 12, 5, 35, 40, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 80, 'deletions': 7, 'state': 'open'}, {'id': 709087950, 'number': 2, 'closed': datetime.datetime(2021, 9, 3, 4, 25, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 14, 55, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1949397.0, 'time_delta': '22 days, 13:29:57', 'additions': 408, 'deletions': 14, 'state': 'closed'}, {'id': 706578402, 'number': 1, 'closed': datetime.datetime(2021, 9, 3, 4, 25, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 14, 35, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2123431.0, 'time_delta': '24 days, 13:50:31', 'additions': 188, 'deletions': 39, 'state': 'closed'}]"
124062056,node-disk-manager,openebs-archive/node-disk-manager,Go,113,183,24,76,451,41,23,8,"[{'id': 790905629, 'number': 655, 'closed': datetime.datetime(2021, 12, 2, 19, 39, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 29, 17, 30, 55, tzinfo=datetime.timezone.utc), 'time_taken': 266886.0, 'time_delta': '3 days, 2:08:06', 'additions': 15, 'deletions': 18, 'state': 'closed'}, {'id': 736887774, 'number': 645, 'closed': datetime.datetime(2021, 9, 18, 14, 8, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 18, 10, 59, 37, tzinfo=datetime.timezone.utc), 'time_taken': 11332.0, 'time_delta': '3:08:52', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 726479160, 'number': 637, 'closed': datetime.datetime(2021, 9, 6, 5, 2, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 3, 4, 26, 39, tzinfo=datetime.timezone.utc), 'time_taken': 261364.0, 'time_delta': '3 days, 0:36:04', 'additions': 67, 'deletions': 1, 'state': 'closed'}, {'id': 715269404, 'number': 616, 'closed': datetime.datetime(2021, 9, 6, 11, 27, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 17, 4, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1621385.0, 'time_delta': '18 days, 18:23:05', 'additions': 209, 'deletions': 44, 'state': 'closed'}, {'id': 702107653, 'number': 611, 'closed': datetime.datetime(2021, 9, 9, 6, 14, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 9, 20, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3185655.0, 'time_delta': '36 days, 20:54:15', 'additions': 40, 'deletions': 0, 'state': 'closed'}, {'id': 694912759, 'number': 609, 'closed': datetime.datetime(2021, 8, 5, 7, 30, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 6, 47, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1212225.0, 'time_delta': '14 days, 0:43:45', 'additions': 326, 'deletions': 243, 'state': 'closed'}, {'id': 685079472, 'number': 602, 'closed': datetime.datetime(2021, 7, 8, 3, 41, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 10, 43, 49, tzinfo=datetime.timezone.utc), 'time_taken': 61035.0, 'time_delta': '16:57:15', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 676865025, 'number': 601, 'closed': datetime.datetime(2021, 6, 28, 11, 23, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 7, 34, 21, tzinfo=datetime.timezone.utc), 'time_taken': 359328.0, 'time_delta': '4 days, 3:48:48', 'additions': 49, 'deletions': 15, 'state': 'closed'}, {'id': 664587331, 'number': 595, 'closed': datetime.datetime(2021, 7, 8, 9, 49, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 9, 36, 33, tzinfo=datetime.timezone.utc), 'time_taken': 2592795.0, 'time_delta': '30 days, 0:13:15', 'additions': 2045, 'deletions': 16, 'state': 'closed'}, {'id': 657961027, 'number': 594, 'closed': datetime.datetime(2021, 7, 14, 9, 31, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 5, 17, 15, tzinfo=datetime.timezone.utc), 'time_taken': 3816834.0, 'time_delta': '44 days, 4:13:54', 'additions': 94, 'deletions': 0, 'state': 'closed'}, {'id': 652514328, 'number': 593, 'closed': datetime.datetime(2021, 6, 2, 12, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 25, 15, 50, 57, tzinfo=datetime.timezone.utc), 'time_taken': 678663.0, 'time_delta': '7 days, 20:31:03', 'additions': 188, 'deletions': 106, 'state': 'closed'}, {'id': 644839314, 'number': 592, 'closed': datetime.datetime(2021, 5, 20, 6, 10, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 14, 16, 35, 3, tzinfo=datetime.timezone.utc), 'time_taken': 480954.0, 'time_delta': '5 days, 13:35:54', 'additions': 54, 'deletions': 3, 'state': 'closed'}, {'id': 638232712, 'number': 590, 'closed': datetime.datetime(2021, 5, 20, 12, 17, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 10, 18, 57, 51, tzinfo=datetime.timezone.utc), 'time_taken': 839995.0, 'time_delta': '9 days, 17:19:55', 'additions': 182, 'deletions': 11, 'state': 'closed'}, {'id': 572895497, 'number': 545, 'closed': datetime.datetime(2021, 3, 15, 15, 5, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 13, 6, 48, 36, tzinfo=datetime.timezone.utc), 'time_taken': 2621808.0, 'time_delta': '30 days, 8:16:48', 'additions': 148, 'deletions': 0, 'state': 'closed'}, {'id': 565874589, 'number': 539, 'closed': datetime.datetime(2021, 2, 3, 2, 59, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 2, 11, 20, 34, tzinfo=datetime.timezone.utc), 'time_taken': 56349.0, 'time_delta': '15:39:09', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 557001010, 'number': 537, 'closed': datetime.datetime(2021, 1, 25, 14, 45, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 18, 19, 28, 17, tzinfo=datetime.timezone.utc), 'time_taken': 587814.0, 'time_delta': '6 days, 19:16:54', 'additions': 30, 'deletions': 11, 'state': 'closed'}]"
