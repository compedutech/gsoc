pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1302027422,[Resolve #25] Merge changes from #25 into libfabric-sarus branch,"This PR merges the work started in #25 into the libfabric-sarus branch.

Compile error fixes:
Much of the code that was split into two implementations based on the `USE_LIBFABRIC` and `USE_CRAY_GNI` flags were causing errors that did not happen in the [libfabric](https://github.com/spcl/rfaas/tree/libfabric) branch. This PR fixes those errors and allows this branch to be compiled.

Core changes:
* JSON configuration of Docker and Sarus containers
* Skeleton code for configuring Singularity containers (initial work on #12)
* Scripts, rFaaS Dockerfile, and other work from #25 ",False,29,https://api.github.com/repos/spcl/rFaaS/pulls/29,https://github.com/spcl/rFaaS/pull/29,open,472,81,19,6,1,0,0,0,[],2023-04-04 17:32:06+00:00,,0.0,,[],"[{'commit_sha': '33c7b3c203100ba7785ad81d8e7e893cc79e8c1b', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb8c0c7451626b29549a885da791cac46e9b5ae5', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4476fcb5b0e2337941f1351515a8083c245cdf0', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a5af0fb3c884d54b03e0fee54c1ac7a4288ac5d', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0f8809e9857788b45c6dba91428ae3105d5a54b', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0be1133e08cb589cb8f1d5b3c5ecd80d9496b21f', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}]",Matt Nappo,20868179,,User,,85,,47,38
1377003175,Added container configuration system from `libfabric-sarus` into mater,"This PR adds support for Docker, Singularity, and Sarus containers. It also allows for configuration of these environments in `config/executor_manager.json`. Most all of the code in this PR is from the `libfabric-sarus` branch, and #29. 

Opening as draft since I just need to finish testing.",False,31,https://api.github.com/repos/spcl/rFaaS/pulls/31,https://github.com/spcl/rFaaS/pull/31,open,590,67,15,8,0,7,0,1,[],2023-06-03 13:37:05+00:00,,0.0,,"[{'comment_id': 1226465468, 'comment_body': 'Is that necessary? It seems that it might prevent user from starting a registry.', 'comment_created': datetime.datetime(2023, 6, 12, 10, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1240018425, 'comment_body': 'Are you referring to the volume mount?', 'comment_created': datetime.datetime(2023, 6, 23, 16, 30, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1240212191, 'comment_body': 'Yes, the mounting of `/home/ubuntu/rfaas/..`.', 'comment_created': datetime.datetime(2023, 6, 23, 19, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1242118635, 'comment_body': 'Well, starting a registry does require a volume. The user can mount to wherever they please on their local machine. We should either (a) make it clear that this is a point of configuration, or (b) mount to a set place, like `/opt/rfaas/registry` or something like that.', 'comment_created': datetime.datetime(2023, 6, 26, 12, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1244911410, 'comment_body': '@mattnappo Then I think we need to make it clear that it needs to be adapted by the user. Can we maybe put some hardcoded value like `REGISTRY_LOCATION_REPLACE_ME`? Otherwise people might miss it easily.', 'comment_created': datetime.datetime(2023, 6, 28, 8, 59, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1248172045, 'comment_body': '@mcopik Latest commit should resolve this. The documentation is still a WIP: I am going to add more to it.\r\n\r\nI am also currently performing a final test of running the benchmarks with Docker. I will notify you when these tests pass, and then we can merge.', 'comment_created': datetime.datetime(2023, 6, 30, 18, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1258190517, 'comment_body': 'Good to merge!', 'comment_created': datetime.datetime(2023, 7, 10, 12, 36, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}]","[{'commit_sha': 'dc7da3532f02bab93741530cd51eeb8c6654db05', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bc28b2e2153c64d2f5d548bbb80e2759e0e972b', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc1ef722fb04c42389cd6163fcdf0f6c098ccf71', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1227a6356a4cb2d8480cdd7b967e56e0b8f62b32', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7075805adefa7d018a9328f2fed731811c6d86c', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e34cc40f32e22341aa98326bb1d3c2c4547b177', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11e687db31c13e23b6cb79eb861288101b6dfc74', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0f1dfc8c76922d669475a88136301711a3451dd', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}]",Matt Nappo,20868179,,User,,85,,47,38
1497757536,Libfabric sarus fix compiler errors,"The `libfabric-sarus` branch doesn't compile in its current state. This is due to:
* GNI code not being properly excluded/included based on build parameters. Fixed by adding `#ifdef USE_GNI_AUTH` flags when appropriate
* An issue with the JSON parser logic for the executor manager config which requires a sarus-like config even when the sandbox type is `process` 

I'm creating this PR so that future work off this branch has a working baseline.",True,33,https://api.github.com/repos/spcl/rFaaS/pulls/33,https://github.com/spcl/rFaaS/pull/33,closed,30,15,10,6,4,0,0,0,[],2023-08-31 19:28:52+00:00,2023-10-03 22:19:44+00:00,2861452.0,"33 days, 2:50:52",[],"[{'commit_sha': 'ec89975e5e7bd3d70acb9862a7a25ab8a47b0be9', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd87141a6b9442fec37fb99dd6ddd720f682ebd4e', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '601a56ce7b47bd9ed9cc0774a71af4370886fa86', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9e5a9294ad666141f6165363ba9b5d680695007', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08111c3f0dfdaa64629e1ff1b1be1030c0c178fb', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0805264456809ba910ad84cd3c74ac7952dc16fa', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}]",Matt Nappo,20868179,,User,,85,,47,38
1527898220,[docs] Added notes on libfabric alternate provider research,"Much time during GSoC was spent on trying to get the TCP, Sockets, and/or EFA libfabric providers to work. We made progress in some areas, and got stuck in others. This file documents the details of what we tried, the successes, failures, and additional helpful resources. Even when GSoC ends, I would like to continue working on this issue.",True,35,https://api.github.com/repos/spcl/rFaaS/pulls/35,https://github.com/spcl/rFaaS/pull/35,closed,234,0,1,1,2,0,0,0,[],2023-09-25 01:01:56+00:00,2023-09-25 01:02:25+00:00,29.0,0:00:29,[],"[{'commit_sha': '3530de2caaff6d4b4e6c7e3e2178a196e11e4f94', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}]",Matt Nappo,20868179,,User,,85,,47,38
1527916260,Move `libfabric-refactor-traits` into `libfabric-refactor`,"All of the recent development of the refactor this summer was done on `libfabric-refactor-traits`. It would probably suffice to delete libfabric-refactor and just rename libfabric-refactor-traits to libfabric-refactor, but opening this PR for completion.",True,36,https://api.github.com/repos/spcl/rFaaS/pulls/36,https://github.com/spcl/rFaaS/pull/36,closed,2662,1443,28,33,0,26,0,0,[],2023-09-25 01:25:04+00:00,2023-09-25 01:36:03+00:00,659.0,0:10:59,"[{'comment_id': 1335299616, 'comment_body': ""Does this code even compile? What's the purpose of this file?"", 'comment_created': datetime.datetime(2023, 9, 25, 1, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335300011, 'comment_body': ""Shouldn't this include be behind `#ifdef`? What if we compile without libfabric but with ibverbs?"", 'comment_created': datetime.datetime(2023, 9, 25, 1, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335300497, 'comment_body': 'Is there any difference between both implementations when it comes to `RemoteBufer`?', 'comment_created': datetime.datetime(2023, 9, 25, 1, 35, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335300882, 'comment_body': ""What's the point of `mutable` here?"", 'comment_created': datetime.datetime(2023, 9, 25, 1, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335301278, 'comment_body': ""Shouldn't this function be defined here? A function member of a template class should not go into a .cpp file IMO."", 'comment_created': datetime.datetime(2023, 9, 25, 1, 38, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335301451, 'comment_body': 'As above - why remove `ifdef`?', 'comment_created': datetime.datetime(2023, 9, 25, 1, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335302087, 'comment_body': 'A standard convention for a generic type is letter `T` btw.', 'comment_created': datetime.datetime(2023, 9, 25, 1, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335303183, 'comment_body': 'This is part of libfabric - should go to a derived class.', 'comment_created': datetime.datetime(2023, 9, 25, 1, 41, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335303592, 'comment_body': 'Is there a difference between both classes?', 'comment_created': datetime.datetime(2023, 9, 25, 1, 43, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335303815, 'comment_body': 'Dead code?', 'comment_created': datetime.datetime(2023, 9, 25, 1, 43, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335304635, 'comment_body': ""Shouldn't this just use the new refactored traits? "", 'comment_created': datetime.datetime(2023, 9, 25, 1, 45, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335305332, 'comment_body': 'Is this function any different from ibverbs implementation?\r\n', 'comment_created': datetime.datetime(2023, 9, 25, 1, 47, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335306135, 'comment_body': ""Why are separate implementations for ibverbs and libfabric necessary? This is the executor from `rfaas` - shouldn't they just use the concepts from `rdmalib`? Why the need to duplicate executors?"", 'comment_created': datetime.datetime(2023, 9, 25, 1, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335306536, 'comment_body': 'It would be better for this to be a runtime switch - we can compile with both implementations enabled.', 'comment_created': datetime.datetime(2023, 9, 25, 1, 51, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1335319078, 'comment_body': ""I didn't mean to commit this file."", 'comment_created': datetime.datetime(2023, 9, 25, 2, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1335319637, 'comment_body': 'Well, it is different in the sense that they return different kinds of buffers. I guess I can make it return the parent buffer class?', 'comment_created': datetime.datetime(2023, 9, 25, 2, 28, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1335320037, 'comment_body': 'Since the code contains symbols from this header, I was getting compiler issues when it was not included. I discussed this issue with Marcin earlier in the summer and he said that this was okay for now.', 'comment_created': datetime.datetime(2023, 9, 25, 2, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1335320207, 'comment_body': 'see note above. Is there a way around that issue?', 'comment_created': datetime.datetime(2023, 9, 25, 2, 30, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1335320333, 'comment_body': 'Okay, noted, thanks.', 'comment_created': datetime.datetime(2023, 9, 25, 2, 30, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1336064875, 'comment_body': '@mattnappo The problem is not inclusion - the problem is that the include should be guarded by `#ifdef`. If I compile just with verbs but not libfabric, then will it work?', 'comment_created': datetime.datetime(2023, 9, 25, 15, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1336065640, 'comment_body': ""Okay, in that context it's fine - unless you can just make it a template in a parent class (depends if anything changes beyond the type itself)."", 'comment_created': datetime.datetime(2023, 9, 25, 15, 35, 10, tzinfo=datetime.timezone.utc), 'commenter': 'mcopik', 'type': 'User'}, {'comment_id': 1337604993, 'comment_body': 'That was in the original codebase.', 'comment_created': datetime.datetime(2023, 9, 26, 18, 8, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1337605381, 'comment_body': 'Correct. I will fix this.', 'comment_created': datetime.datetime(2023, 9, 26, 18, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1337607560, 'comment_body': 'Yes, will delete', 'comment_created': datetime.datetime(2023, 9, 26, 18, 11, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1337608194, 'comment_body': 'Yes, I must have missed this one.', 'comment_created': datetime.datetime(2023, 9, 26, 18, 12, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}, {'comment_id': 1337622015, 'comment_body': ""No. You are correct, this doesn't need to be a template."", 'comment_created': datetime.datetime(2023, 9, 26, 18, 26, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mattnappo', 'type': 'User'}]","[{'commit_sha': 'f465f8b09dbd366101b438a6f8fe604dbf4d0966', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '868e412453c6eb0a837713fe07b4e65f9dc5ef1e', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f36dd2527259373103f5fb8bafe659cf7192e1a5', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '424bbe6c70c70778d60850253ed79e78e8ea0300', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a30ced0b01e2797435ae09bdaf55074af0a0cfc8', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1a049c28ebf83ed4084421ea8f604cbe0c4c718', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd28571211d6bed1e60e6c3f547bab58c3eeaf9ad', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80d973c8ea587172086c680a4f31aa4707b1efea', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d686c51a2ef3e9bf0ac0e1fff0773ea2c602146', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96d1b725d542fe1d89ef81d4ebd9556f452ee8f4', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac96bef5cf19619fc6609abe160e74d15ace29d2', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f540de4765065c4c40762ce3749f88ed27f9e77f', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2da053365054ae1ecc76d082f291bef2cde1908', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07ac8b2214eee1ee3c60c3ecd15626d350a33e7a', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14e75d27a6cbbda5d1cc310ffa2bc24a0728e9e9', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7ba7a99dca566db44c014960c42c00468b2fe09', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2442f72bbae208638def3960919ee6c9e122aace', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82b3b2defa7bb0d5f5f39f5560f8cfd520a7faef', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35405aca69d638c0858a5a41f0e175eeb69ffbf0', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '210bd7b52708efb7a081b701e4f4f758dc8ba348', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '666c8a9daa256e6ac02db9578a7b5e481a5dc11a', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5de685708c7de38d774bf78d23927f6e36f2c72f', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a485b6f88128174f2c8f817517d045a0015b4b3', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c1af12e6f5734b1e42b224462a69c652e150dda', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d5b9771d5576637dc69ae45aa15e22a8000e1c1', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f9feebc255bc5679c4c9170649d1d35262745b5', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15937dbea4040782b581d136312b5f65327c50f0', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '724ccab47b2faabcd1e0ff9e7a7de7e08601d31c', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27e908e497fc86e38bd2a8267379c683d360935a', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6394a14fd2b203c08006adbffb6e25ac9d3ad4ff', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ee3afdfe8207648c46fa650eeb0b696af107faa', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ed92094802d60a9e3c7e5003aa2df724162ad00', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f43518b9df1734ef7e034cb31814ceb36b70f58a', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}]",Matt Nappo,20868179,,User,,85,,47,38
1529107419,Libfabric refactor with curiously recurring template pattern,"This branch provides a refactor of the original libfabric implementation. The code here branched off of libfabric-sarus.

This PR removes the `#ifdef USE_LIBFABRIC` flags in almost all places. We use the curiously recurring template pattern (CRTP) to switch between the verbs and libfabric implementations during template instantiation at compile time. See my final report [here](http://mattnappo.com/archive/gsoc/) for more details.

Note that the current state of this branch is broken. The linker is failing:
```
[ 38%] Linking CXX executable bin/executor
/usr/bin/cmake -E cmake_link_script CMakeFiles/executor.dir/link.txt --verbose=1
/usr/bin/g++  -Wall -Wextra  -pthread -g -DSPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_DEBUG  CMakeFiles/executor.dir/server/executor/cli.cpp.o CMakeFiles/executor.dir/se
rver/executor/fast_executor.cpp.o CMakeFiles/executor.dir/server/executor/functions.cpp.o -o bin/executor  _deps/spdlog-build/libspdlogd.a librdmalib.a librfaa
slib.a -ldl librdmalib.a _deps/spdlog-build/libspdlogd.a /usr/lib/x86_64-linux-gnu/libfabric.so /usr/lib/x86_64-linux-gnu/librdmacm.so /usr/lib/x86_64-linux-gn
u/libibverbs.so
/usr/bin/ld: CMakeFiles/executor.dir/server/executor/fast_executor.cpp.o: in function `server::LibfabricThread::thread_work(int)':
/home/ubuntu/rfaas-refactor/server/executor/fast_executor.cpp:360: undefined reference to `rdmalib::LibfabricScatterGatherElement::LibfabricScatterGatherElemen
t()'
/usr/bin/ld: /home/ubuntu/rfaas-refactor/server/executor/fast_executor.cpp:384: undefined reference to `rdmalib::LibfabricScatterGatherElement::LibfabricScatte
rGatherElement()'
/usr/bin/ld: CMakeFiles/executor.dir/server/executor/fast_executor.cpp.o: in function `server::VerbsThread::thread_work(int)':
/home/ubuntu/rfaas-refactor/server/executor/fast_executor.cpp:438: undefined reference to `rdmalib::VerbsScatterGatherElement::VerbsScatterGatherElement()'
/usr/bin/ld: /home/ubuntu/rfaas-refactor/server/executor/fast_executor.cpp:469: undefined reference to `rdmalib::VerbsScatterGatherElement::VerbsScatterGatherE
lement()'
/usr/bin/ld: CMakeFiles/executor.dir/server/executor/fast_executor.cpp.o: in function `rdmalib::impl::Buffer<rdmalib::Buffer<char, ibverbs>, ibverbs>::sge(unsi
gned int, unsigned int) const':
/home/ubuntu/rfaas-refactor/rdmalib/include/rdmalib/buffer.hpp:77: undefined reference to `rdmalib::VerbsScatterGatherElement::VerbsScatterGatherElement(unsign
ed long, unsigned int, unsigned int)'

these messages continue ...
```

We might need to link both ibverbs and libfabric in order to build the binary, which is not desirable. There might be a way around this, though.

`rfaaslib` and `rdmalib` **do successfully link and compile**. However, since the executor does not currently link, I was **unable** to execute or run end-to-end tests of rFaaS on the CSCS machines, which is why I am opening this PR as a draft. 

While refactoring, I did not change any program semantics. There are no architecture changes or optimizations. This was merely a source code transformation, and does not change how rFaaS actually works. I just swapped the conditional compilation pattern from using `#ifdef`s to using CRTP, which is much more sustainable in the long term.

See #36 for some initial code review and requested changes. Hopefully we'll get this code up and running soon!",False,37,https://api.github.com/repos/spcl/rFaaS/pulls/37,https://github.com/spcl/rFaaS/pull/37,open,4350,860,60,94,0,0,0,0,[],2023-09-25 15:57:03+00:00,,0.0,,[],"[{'commit_sha': 'dbab99c45dd75fe7442812de6b18b7606580f3d6', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da74b44584b6576d241aace37b7264698893a936', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f78e1cebc3514a2a7ec854229ca4a13dca0ab820', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '135e02a472609cfb8b95afd35aa6de10bdedc6b5', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80840578da4d8a2eba6ffd2233ec72ea33e21991', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa415b74bb508d5e161d22c2460f9a771a1e0f9f', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88984a7df2fba6f5a22fd3e28184a5d72c7c18b4', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55cca977687ad242b3c1d6b497d37494a389afbf', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24fb54eec7fd745f7419b013514aaff79b130dcd', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93f3dfc1dad2db102b71a86ec374a2f994f4cd7d', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f415a30be34872ef5c7a146c338a5ed057d79e46', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f1699ef7aee954b9760afe523c5d81deb312426', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b5252830d94e20ec4723662e87980b9febf0a62', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c44daac7ffa67ead33490c4f8789b3fff6238d0', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7083150c3ebe32fff5c5c3cbb2dcc24d40d5f57f', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1374a7531f1edd534ee4e03653b535925aa2e0a2', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2acc757da341e1a9cffdd5947f5fb79dd263bd46', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e59c70fcf2c6207b5f421dc4bca79e3dcf9b40de', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96be04384e72c507eb64651b601da0ef17271d38', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d6f1ae745cebc49cf5d300659132edb27654594', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff1b483af5861ccc6e02b1b26becf2d6b3fabf4d', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13fe1ea2cc504c8db1cdeef84b9fb85a1e43c04f', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e45438cb0d33766a972b129ee29f0fffa5a5790', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24907c3313a61f377870e366c6a840ad67f4801d', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f8fa82208985c8a5ab93bcec2429bf1db7a0ed8', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a350ebed9396001bca648a0d2fa495ce747800e', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e00d6678026300ac6fb66acb7b30ad1550d26dac', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fb85db67ff378d5059a68cd7f4288ac3666d9d2', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '512faf2f7963b581fd2f1b3691eca3012e7d5f7a', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06a2b8101d853a606c72139a64f58c1887a60ead', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e533a6c0b83711684b535d1e4caf54ad9a263821', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a561fee16cc9c5b68a2732fc2bf4f48d9d9eb197', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83c964667560c977e8514cd89accbfb68feeed81', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e09124f5c3d2ec4fcf65091d3fff42201055c32', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958fca85a278ffd29dea955d6dbf5e59d26a1bf8', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b6ca9927e88b68592a1206a7a49ab5bc36bda9d', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '584ffcb171acf6ba0b36e0903ea4bb7c494f02bc', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a09ecb4716916484a925b2a5c34a08fc27828348', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baf220eadcdc9faed605cb72cb6480624e48c8f8', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f68023a798231d0c10371316caed089ccc803b4', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3cdab7643467fd6293c4025f1cbaebba3633dd', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1dcb060f21563482c601ace9b858d429b095546d', 'committer_username': 'marchrap', 'committer_name': 'Marcin Chrapek', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 1, 18, 42, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a77a1434ff7a8ccf37f4ca84187f83350394c58', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56e3c32f547e836fd35ee767f7beada540e34a3a', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19156e7ba7d88e5a3bf20e0b729c6bc3f43500cc', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abacf92d14c3c58a4ac5e0ee26a9374fde537159', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9b19ab228f7ca64034ed0877d7a0c63677d0b9d', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b924eb951250dee6336c091639209c73d1a5468', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cca2dda1bc4f9099e377e1400891566cc8c8374', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5c120e812b358eef1e368fcace070d2b7a44074', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee0632816823ba9a7deb767a5e0fd038fe939074', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453a1cdee202522a87e4d91d2ddb03f4f45dec47', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '562f616e1ccb7cc8965e99ae726075666e1d4240', 'committer_username': 'mcopik', 'committer_name': 'Marcin Copik', 'committer_email': None, 'commit_date': datetime.datetime(2011, 4, 10, 14, 42, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1e334cff182a9e5a253548c608ae6abe0d15b5c', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8b6cf8fe172a1bb15f0b4510aeb2e804f01a3a4', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '287fc8e44bfb40e0caf2876175eedae2a5b80020', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d57935f6451e0559c824a7278367775ec4df25c', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e24973ac3faa3fcdc44ea6b35eca8578551f9f1f', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '955b788ecf4c1c8d04abfad2fccf738a9ef77267', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f465f8b09dbd366101b438a6f8fe604dbf4d0966', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '868e412453c6eb0a837713fe07b4e65f9dc5ef1e', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f36dd2527259373103f5fb8bafe659cf7192e1a5', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '424bbe6c70c70778d60850253ed79e78e8ea0300', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a30ced0b01e2797435ae09bdaf55074af0a0cfc8', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1a049c28ebf83ed4084421ea8f604cbe0c4c718', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd28571211d6bed1e60e6c3f547bab58c3eeaf9ad', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80d973c8ea587172086c680a4f31aa4707b1efea', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d686c51a2ef3e9bf0ac0e1fff0773ea2c602146', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96d1b725d542fe1d89ef81d4ebd9556f452ee8f4', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac96bef5cf19619fc6609abe160e74d15ace29d2', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f540de4765065c4c40762ce3749f88ed27f9e77f', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2da053365054ae1ecc76d082f291bef2cde1908', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07ac8b2214eee1ee3c60c3ecd15626d350a33e7a', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14e75d27a6cbbda5d1cc310ffa2bc24a0728e9e9', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7ba7a99dca566db44c014960c42c00468b2fe09', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2442f72bbae208638def3960919ee6c9e122aace', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82b3b2defa7bb0d5f5f39f5560f8cfd520a7faef', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35405aca69d638c0858a5a41f0e175eeb69ffbf0', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '210bd7b52708efb7a081b701e4f4f758dc8ba348', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '666c8a9daa256e6ac02db9578a7b5e481a5dc11a', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5de685708c7de38d774bf78d23927f6e36f2c72f', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a485b6f88128174f2c8f817517d045a0015b4b3', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c1af12e6f5734b1e42b224462a69c652e150dda', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d5b9771d5576637dc69ae45aa15e22a8000e1c1', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f9feebc255bc5679c4c9170649d1d35262745b5', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15937dbea4040782b581d136312b5f65327c50f0', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '724ccab47b2faabcd1e0ff9e7a7de7e08601d31c', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27e908e497fc86e38bd2a8267379c683d360935a', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6394a14fd2b203c08006adbffb6e25ac9d3ad4ff', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ee3afdfe8207648c46fa650eeb0b696af107faa', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ed92094802d60a9e3c7e5003aa2df724162ad00', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f43518b9df1734ef7e034cb31814ceb36b70f58a', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f18622aa51f5209f9397a283a2373b75b4b5187c', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee375f574cf274653372c00f19babf69f40abf2f', 'committer_username': 'mattnappo', 'committer_name': 'Matt Nappo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 8, 6, 0, 54, 19, tzinfo=datetime.timezone.utc)}]",Matt Nappo,20868179,,User,,85,,47,38

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
356537532,rFaaS,spcl/rFaaS,C++,15,47,8,8,413,24,15,5,"[{'id': 1529107419, 'number': 37, 'closed': None, 'created': datetime.datetime(2023, 9, 25, 15, 57, 3, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 4350, 'deletions': 860, 'state': 'open'}, {'id': 1527916260, 'number': 36, 'closed': datetime.datetime(2023, 9, 25, 1, 36, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 25, 1, 25, 4, tzinfo=datetime.timezone.utc), 'time_taken': 659.0, 'time_delta': '0:10:59', 'additions': 2662, 'deletions': 1443, 'state': 'closed'}, {'id': 1527898220, 'number': 35, 'closed': datetime.datetime(2023, 9, 25, 1, 2, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 25, 1, 1, 56, tzinfo=datetime.timezone.utc), 'time_taken': 29.0, 'time_delta': '0:00:29', 'additions': 234, 'deletions': 0, 'state': 'closed'}, {'id': 1497757536, 'number': 33, 'closed': datetime.datetime(2023, 10, 3, 22, 19, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 31, 19, 28, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2861452.0, 'time_delta': '33 days, 2:50:52', 'additions': 30, 'deletions': 15, 'state': 'closed'}, {'id': 1377003175, 'number': 31, 'closed': None, 'created': datetime.datetime(2023, 6, 3, 13, 37, 5, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 590, 'deletions': 67, 'state': 'open'}, {'id': 1302027422, 'number': 29, 'closed': None, 'created': datetime.datetime(2023, 4, 4, 17, 32, 6, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 472, 'deletions': 81, 'state': 'open'}, {'id': 1290098599, 'number': 25, 'closed': datetime.datetime(2023, 4, 5, 0, 45, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 25, 17, 46, 48, tzinfo=datetime.timezone.utc), 'time_taken': 889129.0, 'time_delta': '10 days, 6:58:49', 'additions': 309, 'deletions': 59, 'state': 'closed'}]"
