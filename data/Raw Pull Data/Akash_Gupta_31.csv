pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
592556269,FIX(BB-564) : Converted revision notes string url to clickable links,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing
2. Verify that your changes match our coding style
3. Fill out the requested information
-->

### Problem
<!-- What are you trying to solve? -->
**This PR Fixes: [BB-564](https://tickets.metabrainz.org/projects/BB/issues/BB-564?filter=allopenissues)**

### Solution
<!-- What does this PR do to fix the problem? -->

**Used `regex` to convert any string url that has a prefix `http|https|ftp|ftps` to a  clickable `link` and then rendered the HTML string as real HTML.**

### Before

https://user-images.githubusercontent.com/55311336/111072915-a46d7e00-8502-11eb-92e8-791fd37e7fe0.mp4


### After


https://user-images.githubusercontent.com/55311336/111072922-ab948c00-8502-11eb-9089-6d97c4bdc3c2.mp4





",True,572,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/572,https://github.com/metabrainz/bookbrainz-site/pull/572,closed,578,26,5,12,11,6,0,0,[],2021-03-14 14:45:31+00:00,2021-05-03 16:38:41+00:00,4326790.0,"50 days, 1:53:10","[{'comment_id': 597894054, 'comment_body': 'hey @MonkeyDo  is it fine here to use `dangerouslySetInnerHTML` (as we have data coming from trusted source)', 'comment_created': datetime.datetime(2021, 3, 19, 18, 28, 29, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 597906922, 'comment_body': ""I like to add the package `DOMPurify` whenever I use dangerouslySetInnerHTML , just to be on the safe side .\r\n\r\nHere a good breakdown of how it's used: https://linguinecode.com/post/complete-guide-react-dangerouslysetinnerhtml"", 'comment_created': datetime.datetime(2021, 3, 19, 18, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 598052755, 'comment_body': 'thank you, will make the changes soon :)', 'comment_created': datetime.datetime(2021, 3, 20, 3, 5, 1, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 605593669, 'comment_body': ""Regarding the url extension part, `.[a-zA-Z]{2,3}` is too restrictive. For example `http://www.test.info/` will return `http://www.test.inf` with a missing final 'o'.\r\nI also wonder if we should also convert `www.test.info` without the protocol at the start. What do you think?\r\n\r\nA quick google search an i found this which seems to solve both issues:\r\nhttps://www.urlregex.com/"", 'comment_created': datetime.datetime(2021, 4, 1, 11, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 622032412, 'comment_body': ""This line looks unused now that you've refactored."", 'comment_created': datetime.datetime(2021, 4, 28, 10, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 622033721, 'comment_body': 'I think the name could be a bit more descriptive, maybe something along those lines ?\r\n```suggestion\r\nexport function stringToHTMLWithLinks(string: string) {\r\n```', 'comment_created': datetime.datetime(2021, 4, 28, 10, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': 'f0d53da022d70dfd5fdda3a2a055a5c71ed71d3c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfaafe5f719aa21cc2927918e4549bb96000b19a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8c0f5277a3a16988e7e8dd35d758117b71e48fd', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '746006c27f1b3bcf79a333a62ebcb59f9a296b37', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d572d38354c156e9a21be307023544261cadbbd', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f46c65237e345faeaeb3e3323dc170b6dda3efa', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ae3eb81488ec7accf2038e8be190767fdad6f90', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80e3aa53244f336dc631118af05d62c893e36b12', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a874a716b3d3a223237ef92d35dac6a16ff69434', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdea3817b44f2f09e10f7992961c2b3f4c3b18fc', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d94b3bf91157a77886cd8a4ce5e4eb6d411b130', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b769b769ecbed4b5df000da28615f7b48a3674ba', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
617512040,"FIX(Revision): ""New"" badge appears in entity deletion revision","<!--
Before making a pull request, please:
1. Read the guidelines for contributing
2. Verify that your changes match our coding style
3. Fill out the requested information
-->

### Problem
<!-- What are you trying to solve? -->
**This PR Fixes: [BB-523](https://tickets.metabrainz.org/projects/BB/issues/BB-523?filter=allopenissues)**


### Solution
<!-- What does this PR do to fix the problem? -->
Refactored the `isNew` property logic in **server/routes/revision.js** by taking advantage of `dataId`( which is **null** for a deleted entity)
 
### Before

![Screenshot from 2021-04-18 21-39-58](https://user-images.githubusercontent.com/55311336/115152536-25361180-a08f-11eb-84e4-6b3d5d054058.png)


### After
![Screenshot from 2021-04-18 21-39-19](https://user-images.githubusercontent.com/55311336/115152554-33842d80-a08f-11eb-9076-5de42a2c31f5.png)



### Areas of Impact
<!-- What parts of the codebase and which behaviors are affected? -->
server/routes/revision.js
",True,602,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/602,https://github.com/metabrainz/bookbrainz-site/pull/602,closed,33,15,4,9,3,4,0,0,[],2021-04-18 16:20:55+00:00,2021-04-26 11:48:58+00:00,674883.0,"7 days, 19:28:03","[{'comment_id': 615739592, 'comment_body': ""Since we've already extracted this as a constant:\r\n\r\n```suggestion\r\n\t\t\t\t\t\t\tentityAlias: dataId ?\r\n```"", 'comment_created': datetime.datetime(2021, 4, 19, 10, 45, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 615823485, 'comment_body': '> What do you think?\r\n\r\nYes, it would be great to have a **Deleted** badge for deleted entities\r\n\r\nWill make the required changes soon :)', 'comment_created': datetime.datetime(2021, 4, 19, 12, 57, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 615946924, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\tisNew = Boolean(dataId);\r\n```\r\n\r\nI guess this is a bit clearer and makes sure we use a boolean.', 'comment_created': datetime.datetime(2021, 4, 19, 15, 24, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 615948304, 'comment_body': 'I think this could be moved above to the variable definition:\r\n`const isDeletion = !dataId;`', 'comment_created': datetime.datetime(2021, 4, 19, 15, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '8fc114fd4dba559fd180006a761484fcf894aa3a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f23e6dbc93bf718a697c483b8b795c6359564fb', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69cf1bd2c26c95a64a67f8ad427fd94fdb4385cb', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6a7922862eefaafc9d67b0a50a04644da554d1c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cc3d04072d47720006fb8e3d42ac489eae853ee', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f44911164a07a7c55e4d8b4d1d8386dbde37d8e', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1be34b06f9e46085ef176e425cb58cbf1e1f048f', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '833483a7d40cdb8f3783257841e23adabf80ee43', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '941c3a3032639207facdc66e09c9ac63a2243336', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
606010940,Refactor(achievement): Rewritten Achievements helpers with async/await syntax,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing
2. Verify that your changes match our coding style
3. Fill out the requested information
-->

### Problem
<!-- What are you trying to solve? -->
This PR Fixes: [BB-598](https://tickets.metabrainz.org/projects/BB/issues/BB-598?filter=allissues)

### Solution
<!-- What does this PR do to fix the problem? -->
 A lot of the code uses promises in the `promise.then(…)` format, which makes the code hard to read and maintain. Rewritten it using the **async/await** syntax


### Areas of Impact
<!-- What parts of the codebase and which behaviors are affected? -->
 file [src/server/helpers/achievement.js](https://github.com/bookbrainz/bookbrainz-site/blob/master/src/server/helpers/achievement.js)
",True,587,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/587,https://github.com/metabrainz/bookbrainz-site/pull/587,closed,332,400,1,12,2,16,0,0,[],2021-03-31 16:53:39+00:00,2021-05-17 17:22:20+00:00,4062521.0,"47 days, 0:28:41","[{'comment_id': 626456403, 'comment_body': ""This syntax is redundant, along with the same in the catch block.\r\nTh `async` keyword already defines that the function returns a Promise, so instead of `return new Promise([…] resolve(myReturnValue)` you can simply `return myReturnValue`.\r\n\r\nOn the other side in the catch block you can simply `throw err`.\r\n\r\nI'm not exactly sure why this code either returns an unlock object or the string 'Already unlocked', that seems a bit odd to me, but it's clear from the docs above that it's intended, so not an issue for now."", 'comment_created': datetime.datetime(2021, 5, 5, 10, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626459678, 'comment_body': 'This can also be rewritten simply with await syntax:\r\n\r\n```throw new error.AwardNotUnlockedError(`Achievement ${achievementName} not found in database`)```\r\n', 'comment_created': datetime.datetime(2021, 5, 5, 10, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626459932, 'comment_body': '```suggestion\r\n\t\t\tthrow new error.AwardNotUnlockedError(err.message);\r\n```', 'comment_created': datetime.datetime(2021, 5, 5, 10, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626460915, 'comment_body': ""With the other changes in this function, we don't need that `awardPromise` anymore (it will also need to be removed from line 86)"", 'comment_created': datetime.datetime(2021, 5, 5, 10, 48, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626462755, 'comment_body': '```suggestion\r\n\t\t\treturn {[achievementName] : unlock};\r\n```', 'comment_created': datetime.datetime(2021, 5, 5, 10, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626463428, 'comment_body': ""Similarly to other comments, this can be rewritten with `await`, `return` and `throw` and we won't need `titlePromise` anymore"", 'comment_created': datetime.datetime(2021, 5, 5, 10, 53, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626464674, 'comment_body': ""In this particular case where we have multiple promises generated from an array, we can't easily use `await` syntax, so this is a good reason to use Promises, and `Promise.all` in particular."", 'comment_created': datetime.datetime(2021, 5, 5, 10, 55, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626469999, 'comment_body': ""I feel like we should be able to replace this with the right ORM relationships.\r\nI wonder if \r\n```suggestion\r\n\t\tconst edition = await new EditionRevision({id: revisionId}).fetch({withRelated: 'data.releaseEventSet.releaseEvents'});\r\n\t\tconst releaseEvents = edition.related('releaseEventSet').related('releaseEvents');\r\n```\r\nOr something along those lines should work. I'm not sure about the syntax for the second line (I'm not 100% certain we can chain the calls like that). \r\n\r\nIf all else fails you can use `edition.toJSON()` and then access `edition.releaseEventSet.releaseEvents`.\r\nIn that case there will be differences in the code below too; `releaseEvents.models[0].attributes`  will probably be something like `releaseEvents[0]`."", 'comment_created': datetime.datetime(2021, 5, 5, 11, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626471993, 'comment_body': ""While we're in there touching the code, this can be improved:\r\n```suggestion\r\n\t\t\tconst now = Date.now();\r\n\t\t\treturn Math.round((date.getTime() - now) / msInOneDay);\r\n```"", 'comment_created': datetime.datetime(2021, 5, 5, 11, 7, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626472345, 'comment_body': 'As in other comments, you can just `throw` directly here instead of returning a Promise.', 'comment_created': datetime.datetime(2021, 5, 5, 11, 8, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626472838, 'comment_body': ""With the above two comments this variable won't be needed anymore"", 'comment_created': datetime.datetime(2021, 5, 5, 11, 9, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626472991, 'comment_body': ""```suggestion\r\n\t\tthrow new Error('no date attribute');\r\n```"", 'comment_created': datetime.datetime(2021, 5, 5, 11, 9, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626473566, 'comment_body': '```suggestion\r\n\t\t\treturn testTiers(orm, diff, editorId, tiers);\r\n```', 'comment_created': datetime.datetime(2021, 5, 5, 11, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 626473817, 'comment_body': ""```suggestion\r\n\t\t\treturn {'Hot Off the Press': false};\r\n```"", 'comment_created': datetime.datetime(2021, 5, 5, 11, 11, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 627093206, 'comment_body': ""> Or something along those lines should work. I'm not sure about the syntax for the second line (I'm not 100% certain we can chain the calls like that).\r\n\r\nChaining isn't working, though the second approach works perfect :)\r\n\r\n"", 'comment_created': datetime.datetime(2021, 5, 6, 5, 43, 32, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 627094240, 'comment_body': '> On the other side in the catch block you can simply throw err\r\n\r\nI have removed the try catch statement as the catch clause was only rethrowing the original error, which is redundant.', 'comment_created': datetime.datetime(2021, 5, 6, 5, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}]","[{'commit_sha': 'f9fd16bffa97e39e50717a62dca0641a23ca8b26', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36a7da1f7d035f79968b1d56dae4d0af833c1831', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c65696d39fdfdf7b80863abc535743ed03b47e5', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '342d1b66ddc18d62e6e61e0ee54c1e358d3b472c', 'committer_username': 'lint-action', 'committer_name': 'Lint Action', 'committer_email': None, 'commit_date': datetime.datetime(2019, 12, 27, 11, 57, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e5df359c3a0bca5706719a11fe3ebabdd7d48af', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbc97ac196174f5e16e1a1ba007c35af9b6b8130', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6561e7b7bba07ce06ef3fa4951b14f78ddb1be19', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a49240135356b11b2358053f9de21ec828253810', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae9d2481f4336653f70ac5286e40c98a42bbcce0', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63cc9509303f4186e08d29b08dfd0c6577574af6', 'committer_username': 'lint-action', 'committer_name': 'Lint Action', 'committer_email': None, 'commit_date': datetime.datetime(2019, 12, 27, 11, 57, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f67070483b54081c0a2e93a02523b83dd78bd296', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70a304c1d5291a3c46352266e0ce5662e7b3af34', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
624817639,feat(collections): Get all the collections related to a Entity,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing (https://github.com/bookbrainz/bookbrainz-site/blob/master/CONTRIBUTING.md)
2. Verify that your changes match our coding style
3. Fill out the requested information
-->

### Problem
<!-- What are you trying to solve? -->
This PR Fixes : [BB-614](https://tickets.metabrainz.org/projects/BB/issues/BB-614?filter=allissues)
Follow up from PR : [#599](https://github.com/bookbrainz/bookbrainz-site/pull/599)
### Solution
<!-- What does this PR do to fix the problem? -->
Added `collections()` to all the **Entity Model**. This helps to fetch all the collections **related** to the entity.
Also added the corresponding **tests** for it.




### Areas of Impact
<!-- What parts of the codebase and which behaviors are affected? -->

- [models/entities/author.js](https://github.com/bookbrainz/bookbrainz-data-js/blob/master/src/models/entities/author.js)
- [models/entities/work.js](https://github.com/bookbrainz/bookbrainz-data-js/blob/master/src/models/entities/work.js)
- [models/entities/edition.js](https://github.com/bookbrainz/bookbrainz-data-js/blob/master/src/models/entities/edition.js)
- [models/entities/editionGroup.js](https://github.com/bookbrainz/bookbrainz-data-js/blob/master/src/models/entities/editionGroup.js)
- [models/entities/publisher.js](https://github.com/bookbrainz/bookbrainz-data-js/blob/master/src/models/entities/publisher.js)
- [test/testAuthor.js](https://github.com/bookbrainz/bookbrainz-data-js/blob/master/test/testAuthor.js)
- [test/testWork.js](https://github.com/bookbrainz/bookbrainz-data-js/blob/master/test/testWork.js)
- [test/testEdition.js](https://github.com/bookbrainz/bookbrainz-data-js/blob/master/test/testEdition.js)
- [test/testEditionGroupjs](https://github.com/bookbrainz/bookbrainz-data-js/blob/master/test/testEditionGroup.js)
- [test/testPublisher.js](https://github.com/bookbrainz/bookbrainz-data-js/blob/master/test/testPublisher.js)

",True,263,https://api.github.com/repos/metabrainz/bookbrainz-data-js/pulls/263,https://github.com/metabrainz/bookbrainz-data-js/pull/263,closed,326,24,10,9,1,2,0,0,[],2021-04-28 03:37:21+00:00,2021-04-28 18:09:24+00:00,52323.0,14:32:03,"[{'comment_id': 621963838, 'comment_body': 'Why not compare the expected length directly? I think that would make it a more precise test:\r\n```suggestion\r\n\t\treturn expect(collections).to.have.lengthOf(1);\r\n```', 'comment_created': datetime.datetime(2021, 4, 28, 8, 59, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 621997577, 'comment_body': '>Why not compare the expected length directly? I think that would make it a more precise test:\r\n\r\n Yes Indeed, will make the changes :)', 'comment_created': datetime.datetime(2021, 4, 28, 9, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}]","[{'commit_sha': 'c451d610cfe6ff908d16d5959d0111f8010600c6', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89ab664092922eb314677f7c0451366de92b64fb', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4f033f2f7c9bbb4977f1a49487a141d0c7e1948', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bf0494e82117178b530d34adf321ba09a43d2ca', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c120d8cfad6252d2abcc654fbbd3ea9e1f7ea77', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68c7cd530387f25db5ecd6ba955cb7f428aade04', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce73f198eca3c664e5f3a887474d5a29fc7358ee', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c78368dbbf2ebcd055e0916b32638738325cd226', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7abc0d3f4a4a49f7df078fdae2a23676715f89b8', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
630357282,feat(elasticSearch): search entities by identifiers,"Signed-off-by: Akash Gupta <akashgp9@gmail.com>

<!--
Before making a pull request, please:
1. Read the guidelines for contributing
2. Verify that your changes match our coding style
3. Fill out the requested information
-->

### Problem
<!-- What are you trying to solve? -->
Allow searching by enitity identifiers
This PR Fixes: [BB-616](https://tickets.metabrainz.org/projects/BB/issues/BB-616?filter=allissues)



### Solution
<!-- What does this PR do to fix the problem? -->
Added identifiers to elasticSearch index and match query.




Searching **H. P. Lovecraft** using it's VIAF identifier ID **66470391**
### Before
![Screenshot from 2021-05-05 12-58-11](https://user-images.githubusercontent.com/55311336/117109370-2e6af200-ada2-11eb-98c1-fe6c5a851f56.png)

### After

![Screenshot from 2021-05-05 12-57-43](https://user-images.githubusercontent.com/55311336/117109349-2612b700-ada2-11eb-8ca2-db060539bddf.png)





### Areas of Impact
<!-- What parts of the codebase and which behaviors are affected? -->

- [helpers/search.js](https://github.com/bookbrainz/bookbrainz-site/blob/master/src/common/helpers/search.js)
",True,620,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/620,https://github.com/metabrainz/bookbrainz-site/pull/620,closed,5,3,1,1,1,0,0,0,[],2021-05-05 07:36:59+00:00,2021-05-21 18:03:43+00:00,1420004.0,"16 days, 10:26:44",[],"[{'commit_sha': '34476d0ebe7dce34394f0129a0cd879b9be35147', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
623285106,test: added tests for languageSet Model,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing (https://github.com/bookbrainz/bookbrainz-site/blob/master/CONTRIBUTING.md)
2. Verify that your changes match our coding style
3. Fill out the requested information
-->

### Problem
<!-- What are you trying to solve? -->
Tests for languageSet Model was missing


### Solution
<!-- What does this PR do to fix the problem? -->
Added Tests for languageSet Model

![Screenshot from 2021-04-26 17-33-25](https://user-images.githubusercontent.com/55311336/116081916-714d0b80-a6b8-11eb-81b8-c8edb3939e1d.png)



### Areas of Impact
<!-- What parts of the codebase and which behaviors are affected? -->",True,262,https://api.github.com/repos/metabrainz/bookbrainz-data-js/pulls/262,https://github.com/metabrainz/bookbrainz-data-js/pull/262,closed,106,0,2,5,3,2,0,0,[],2021-04-26 12:24:46+00:00,2021-05-25 17:18:19+00:00,2523213.0,"29 days, 4:53:33","[{'comment_id': 624506855, 'comment_body': '@MonkeyDo travis CI build check is failing on this PR due to this test. But when i run the test locally, it is passing successfully 🤔 ', 'comment_created': datetime.datetime(2021, 5, 1, 12, 59, 17, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 625937837, 'comment_body': ""I'm guessing you're missing a call to `truncateTables` before running the tests, basically exactly the same as `afterEach` but using `beforeAll`.\r\n\r\nThe reason is probably that some other test somewhere already creates a LanguageSet with id=1 and does not do an appropriate cleanup afterwards.\r\n\r\nEither that or some race condition; it looks like everywhere in the tests we should be using `await truncateTables(…`, and perhaps some other test's cleanup step is not yet finished when this test runs…"", 'comment_created': datetime.datetime(2021, 5, 4, 16, 41, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '80bb34f59f64bc43d36c2ca23ea168ed288c780b', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '146c5bb350b011ad7c05ea0ab4e77f18d493025c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1646193ca23d844e04127e6dfed2fc00b10d647e', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4153802ee36b1a3a1d06d738197b4eff9c0218d5', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fab87ab39454f2db5aa4b8b9b1707a4839a2bd9', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
649168984,SQL: Added tables for series entity and relationship atrributes.,"### Summary: 

**Added series tables:**

- series_data
- series_header
- series_revision
- series_ordering_type

**Added relationship_atrribute tables:**
- relationship_attribute
- relationship_attribute_set
- relationship_attribute_set__relationship_attribute
- relationship_attribute_type
- relationship_type__attribute_type
- relationship_attribute_text_value
### Areas of Impact
- [/sql](https://github.com/bookbrainz/bookbrainz-site/tree/master/sql)
",True,634,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/634,https://github.com/metabrainz/bookbrainz-site/pull/634,closed,290,1,6,13,1,14,0,0,[],2021-05-20 17:02:15+00:00,2021-06-11 14:20:20+00:00,1891085.0,"21 days, 21:18:05","[{'comment_id': 636413348, 'comment_body': '@MonkeyDo  Is it safe here for us to remove the **Series** value from the  enum type ?https://stackoverflow.com/a/49753911', 'comment_created': datetime.datetime(2021, 5, 20, 19, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 649080927, 'comment_body': 'Better to not do that indeed.', 'comment_created': datetime.datetime(2021, 6, 10, 11, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649283667, 'comment_body': 'How about ""Indicates an Author is part of a Series"", and the same format for the other relationship types ?', 'comment_created': datetime.datetime(2021, 6, 10, 15, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649284450, 'comment_body': 'What would be the difference between these two attribute types?', 'comment_created': datetime.datetime(2021, 6, 10, 15, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649415491, 'comment_body': 'number attribute is just used for display purpose whereas the position attribute is used for positiong the entities in the series.\r\n\r\nexample of number attribute in MB (# column in the table) : https://musicbrainz.org/series/f243e445-74aa-447a-8dc2-75fc0bc5a6a3  https://musicbrainz.org/series/326682f4-cea7-4355-83c3-f85476282f5a\r\n\r\nA similar example in BB: https://i.ibb.co/PWW2hMy/Screenshot-from-2021-06-10-23-15-21.png\r\n\r\nWith help of position attribute we can sort the relationships and render it in a order set by the editor.\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 10, 18, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 649812509, 'comment_body': 'Those are one and the same, at least in those two MusicBrainz examples:\r\nThe ""number"" attribute is used both for displaying (i.e. the ""#"" column on the page) and also used for  ordering/positioning in the series.\r\nIs both of these cases the series has ordering type set to ""automatic"", and that just uses a natural sort on the ""number"" attribute.\r\nIf you edit the entity and then edit a relationship you\'ll see there\'s only the number attribute defined:\r\n![image](https://user-images.githubusercontent.com/6179856/121660978-06a73200-caa4-11eb-8efe-25d7e2cc7b3b.png)\r\n\r\nI could see how we possibly need a separate attribute if we have ""manual"" ordering type however.\r\nLet\'s both try to find an example of that to make sure this is how we want to do it.', 'comment_created': datetime.datetime(2021, 6, 11, 8, 58, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649824686, 'comment_body': 'OK, I clarified all this for myself and removed the last questions I had in mind:\r\n\r\nSo in MB, there are a few separate things:\r\n- ordering type: when ""manual"", enables manual positioning; when ""automatic"", disables positioning\r\n- a ""These relationships have a specific ordering"" checkbox shown only when ordering type is ""manual"", which enables the position attribute; unchecking this removes the position\r\n- when ordering is manual and checkbox is ticked, up/down arrows are shown on the UI and correspond to an ""order"" numeric attribute\r\n- separately from all that, the ""number"" attribute can be added (that\'s what\'s shown in the ""#"" column) or removed without affecting the manual order. It will be used for automatic ordering if it is there.\r\n\r\nHere\'s a manually sorted series I modified on test.mb: https://test.musicbrainz.org/edit/79709799\r\nI ticked the ""specific ordering"" checkbox and reordered the items.\r\nNo ""number"" attribute involved in any of that, but it could also be added without any effect on the ordering.', 'comment_created': datetime.datetime(2021, 6, 11, 9, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649936082, 'comment_body': ""```suggestion\r\nALTER TYPE bookbrainz.entity_type ADD VALUE IF NOT EXISTS 'Series';\r\n```\r\n\r\nSince we don't delete the type in down.sql, this allows us to run up.sql again after running down.sql"", 'comment_created': datetime.datetime(2021, 6, 11, 12, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649952802, 'comment_body': ""Shouldn't this be `ADD COLUMN` ?"", 'comment_created': datetime.datetime(2021, 6, 11, 12, 53, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649955288, 'comment_body': ""```suggestion\r\n( 71, 'Work Series', 'Indicates a Work is part of a Series', 'is part of', 'Work', 'Series', NULL, 0, false, 'contains'),\r\n```"", 'comment_created': datetime.datetime(2021, 6, 11, 12, 56, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649955365, 'comment_body': ""```suggestion\r\n( 74, 'Publisher Series', 'Indicates a Publisher is part of a Series', 'is part of', 'Publisher', 'Series', NULL, 0, false, 'contains');\r\n```"", 'comment_created': datetime.datetime(2021, 6, 11, 12, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649955458, 'comment_body': ""```suggestion\r\n( 73, 'Edition Group Series', 'Indicates an Edition Group is part of a Series', 'is part of', 'EditionGroup', 'Series', NULL, 0, false, 'contains'),\r\n```"", 'comment_created': datetime.datetime(2021, 6, 11, 12, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649956746, 'comment_body': ""I think this applied to all the items would be more descriptive:\r\n```suggestion\r\n( 70, 'Author Series', 'Indicates an Author is part of a Series', 'is part of', 'Author', 'Series', NULL, 0, false, 'contains'),\r\n```"", 'comment_created': datetime.datetime(2021, 6, 11, 12, 58, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649966359, 'comment_body': 'it works but definetly `ADD COLUMN` is more clearer', 'comment_created': datetime.datetime(2021, 6, 11, 13, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}]","[{'commit_sha': 'e199cf7e29273a5b1f87877b3c1d544af672b9b8', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae4ec110bcd23b13c5c95999f34a5247c356faf1', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '035621b25c8f270f18adc18d56b3f4f9672013f3', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2bdbaeffe04abcf6b55c4853311849167fb86de', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e5ae4611d922642ed86f4dfadfb88bea7a3eb52', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11df467174370c6e209e3620b4e0f33717e60ba', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fc0dd0e868e77b74fbe86b261d8176c56f35a0f', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e3322d05dedbf9536014c3edecf082bf3beee7c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11c4c8c96bd8a6f67db6003832d08511fe1b677a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd90c51e1f8f3107e5da43233206481439a34e224', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bea987f9282add76b040d50890a9b19f5876a2d1', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '998dfe4a8c554c95f0cd24b9f1a744891f47f27a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca11cd574b0064daa93b961adbdef8b7b16a59ab', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
650116423,"[Models,Tests]: Added Series & Relationship attribute models and corresponding tests. ","### Summary
Added Models and their corresponding tests.

**Series Models :**

- Series
- SeriesData
- SeriesHeader
- SeriesRevision
- SeriesOrderingType

**Relationship Attribute Models:**

- RelationshipAttribute
- RelationshipAttrubuteType
- RelationshipAttributeSet
- RelationshipTypeAttributeType
- RelationshipAttributeTextValue


",True,272,https://api.github.com/repos/metabrainz/bookbrainz-data-js/pulls/272,https://github.com/metabrainz/bookbrainz-data-js/pull/272,closed,1533,72,35,34,2,22,0,0,[],2021-05-21 16:18:00+00:00,2021-06-23 16:09:09+00:00,2850669.0,"32 days, 23:51:09","[{'comment_id': 639033148, 'comment_body': ""Series shouldn't have a language attribute and consequently no LanguageSet"", 'comment_created': datetime.datetime(2021, 5, 25, 17, 46, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 639038451, 'comment_body': ""Let's name this table `relationship_attribute_date` and rename consequently `RelationshipDate` to `RelationshipAttributeDate` everywhere, so that we're using the same naming convention as `relationship_attribute_ordinal`"", 'comment_created': datetime.datetime(2021, 5, 25, 17, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 639943578, 'comment_body': 'I\'ve been doing some more research into database designs, and comparing how the MusicBrainz database schema works regarding relationship attributes.\r\n\r\nI\'m not yet at a point where I have a clear idea and a path forward, and I need to think about it some more before being sure that we can do everything we want this way (with a RelationshipAttributeOrdinal)\r\n\r\nSorry about the wait !\r\nIf you want to have a look with me, I\'m looking at the [schema docs here](https://musicbrainz.org/doc/MusicBrainz_Database/Schema#Relationship_table_structure) as well as inspecting a sample MB database locally to try to understand how all the pieces fit together.\r\n\r\n\r\nOne crucial piece I\'m currently missing are the tables that will allow us to describe which relationship_type will have which relationship attributes (for example, how do we describe that the ""Work is part of Series"" needs an ordinal attribute for ordering)', 'comment_created': datetime.datetime(2021, 5, 26, 17, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 639952931, 'comment_body': 'A good test to add here would be to create two SeriesOrderingTypes, and create a ~Relationship~ Series with a specific SeriesOrderingType, then save it with a change of ordering type and ensuring that after the save the relationship has the new ordering type is set', 'comment_created': datetime.datetime(2021, 5, 26, 17, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649033949, 'comment_body': '```suggestion\r\n\t\tattributes() {\r\n```', 'comment_created': datetime.datetime(2021, 6, 10, 9, 54, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649036341, 'comment_body': 'Probably better to safely access the nested property here, just in case\r\n```suggestion\r\n\t\t\t   obj.value?.textValue === other.value?.textValue;\r\n```', 'comment_created': datetime.datetime(2021, 6, 10, 9, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649058841, 'comment_body': ""I'm not fond of that name, it's too generic.\r\nI suppose it should be `RelationshipAttributeT` ?\r\n"", 'comment_created': datetime.datetime(2021, 6, 10, 10, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649059794, 'comment_body': ""This method is pretty much a copy of `createNewSetWithItems`, but as I tried to play around with the idea of reusing createNewSetWithItems it did become a bit uselessly complicated, so let's keep it like this."", 'comment_created': datetime.datetime(2021, 6, 10, 10, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649060351, 'comment_body': ""Isn't this the same as the type defined in src/func/set.js ?"", 'comment_created': datetime.datetime(2021, 6, 10, 10, 33, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649068758, 'comment_body': ""For nested relations to load, you don't need to duplicate this as `relationshipSet.relationships.type` already loads `relationshipSet.relationships`.\r\n\r\nHowever we might want to add `relationshipSet.relationships.attributes.value`.\r\nI haven't tried to check the diffs, so I say that with no certainty."", 'comment_created': datetime.datetime(2021, 6, 10, 10, 46, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649074225, 'comment_body': ""Not that it matters much, but you can access the `id` attribute directly on any ORM model (no need to jsonify it).\r\nHowever,  I'd love to see another check here instead of this line that does require jsonifying:\r\n`expect(resultJSON).to.equal(firstSet.toJSON());`\r\n"", 'comment_created': datetime.datetime(2021, 6, 10, 10, 55, 13, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649158027, 'comment_body': ""We shouldn't need this (or the associated import) in any of these new test files, since you've been using async/await syntax."", 'comment_created': datetime.datetime(2021, 6, 10, 12, 58, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649269513, 'comment_body': 'This would be more descriptive I think:\r\n```suggestion\r\n\t\tattributeTypes() {\r\n```', 'comment_created': datetime.datetime(2021, 6, 10, 15, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649274682, 'comment_body': 'I think orderingTypeID would be more fitting, which would mean renaming the sql table to ordering_type_id', 'comment_created': datetime.datetime(2021, 6, 10, 15, 8, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 649297717, 'comment_body': ""I don't know why but naming it as `attributes` gives **Error: attributes is not defined on the model**. So I had to use **attribute** instead."", 'comment_created': datetime.datetime(2021, 6, 10, 15, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 649666926, 'comment_body': 'Yes we can remove the type defined in set.ts and instead use this one there.', 'comment_created': datetime.datetime(2021, 6, 11, 3, 41, 10, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 650063495, 'comment_body': ""Yeah, I investigated a bit, that's unfortunate but I think we can't use attributes.\r\nI still think we should try for something else plural, it's confusing otherwise.\r\nMaybe `relationshipAttributes` ?"", 'comment_created': datetime.datetime(2021, 6, 11, 15, 19, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 650081896, 'comment_body': 'sounds good to me :+1: ', 'comment_created': datetime.datetime(2021, 6, 11, 15, 45, 10, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 656391064, 'comment_body': ""This just checks that the key `attributeTypes` exists on the model.\r\nInstead let's check that `attributeTypes` has a length of 1, and that `attributeTypes[0]`'s attributes' value match what you're expecting"", 'comment_created': datetime.datetime(2021, 6, 22, 16, 28, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 656396598, 'comment_body': 'It would be good to test for the value of the attributes here, not just their presence.\r\nSo checking that `attributeSet.relationshipAttributes[0].value.textValue = ""1"" (string)` and that `attributeSet.relationshipAttributes[0].type` is also what you expect (I assume it is the number `1`) ?', 'comment_created': datetime.datetime(2021, 6, 22, 16, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 656402805, 'comment_body': ""I think this is a good opportunity to create a shared document that we can use to track what will be left to do at the end of the project, so I went ahead and created one: https://docs.google.com/document/d/1_aX5BVX40CbzAkMBX-15tFFaQ9meRCIs4OFc5nwC9ek\r\n\r\nIf it's something you would find useful, we can also use this document to plan out tasks for the coming weeks. Sometimes that makes it easier to focus on one thing at a time, break down the project in manageable chunks, and keep track of progress.\r\nIt would essentially be the planning section of your proposal, but that we keep up to date and revise as we go along."", 'comment_created': datetime.datetime(2021, 6, 22, 16, 44, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 656780920, 'comment_body': 'Thank you for creating this. This will definetly help us keep track of our work and  plan out tasks for the coming weeks :100: ', 'comment_created': datetime.datetime(2021, 6, 23, 5, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}]","[{'commit_sha': 'cc2ea3ce7170b0818c3738361f8abeece24cfbd1', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de17a82d23e1fa2ca642705301914f47c7d7f354', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c0a93ccbab24db108f414b1646c409bf973c36d', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baca638d52c1be42df4fac4117be89f150c33b55', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f647a9515e918cf40c9b306cc3ab721752bc1ed', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9233bc90ad05477a66636d5712babc964e9671c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '789e058d28273642b6eacc389ac408c0c0d7d654', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62bfcc8d8ad07c8ea57e5cf0cf2ba229720c0bc8', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c5c514d530ef46af0f42b0d1458521b30e18f45', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81b178f287ce1b600dff76683e749074b49d6dcd', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '866bde2881d817d8103f4ba462faaaa068030e59', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37e93197299ae503ba9443da71a03e040360df25', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23a836e78233e0a873159c20b1ce46a0f80afb88', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a0a8ef79127c966fa20af7db3cdc4f77b22bb46', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3dd84e93daaabfe5dcc4710407b3462f0347407', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d2f687c767698db869ba8e5c4757b42ce3201c3', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7525ddd9382dac619fd208bbee65e053e5b77ab4', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d79e708d9e0e7fa406f2d6f19dd7fc3803e1c62', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3221692e662dd473e616eb21b5828c13c3a906a6', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72431197f840a79c0cb833fd76fd983427bfaf62', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1725fedb25b48604482b831bd0f84824bdb0eff6', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8761ad4a66bdcb21b438bb621a03966a0f4fc3e8', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f133ebd70805b8ffb249191f98e6c344232f9944', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92e1fb17ebc0d6c0ccfa931d7796e4ef83c94da3', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '021b2626ef55fe13dccdc8664dcaff2cfb28bd5d', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0515e69be36426bac907d2df527327e91b918e0', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae9596f5544fe6b83cc4c289159aef8d4df72f52', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b063400f0cc02b31e092f2ac1ac5d3ee8003f763', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b5d161182ccc4333903b6bc8f80c02425e64d9', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f013e12dbdc466cadef49f966b3a90d45e16acb0', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0009147f93f6fad7b033c483a1f98192369f5ab1', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '420beccbe65bb494d31fea5c4bb92f2611b21b58', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f70aa8ed8f00250a0fc7808e139ee493bf7f425', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ace502ebc9c5a0ad1442501e540a58baf121a646', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
683048143,test(series): add tests for main GET routes,"**Summary**
- [x] add series creation helper utility.
- [x] add relationshipAttributeSet creation helper utility.
- [x] add tests for series entity main `GET` routes.
",True,661,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/661,https://github.com/metabrainz/bookbrainz-site/pull/661,closed,138,5,2,4,1,0,0,0,[],2021-07-03 16:35:34+00:00,2021-07-15 13:36:52+00:00,1026078.0,"11 days, 21:01:18",[],"[{'commit_sha': 'c477df5901873dd7a68526c26a67e29a4f18f74f', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cba7ccaa8c6a5b84507bd31fa9e286f2f0cbdf5', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89250482c81848135d12e99359078e6776ef8c9d', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c89fdea64844ad998a6fb1ecfb98460627aef0f', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
680685799,"feat(collection,series): Extend Collection to include Series Entity.","### Summary 
- Created SeriesTable component.
- Extended collections to include series entity.
### Screenshot
![Screenshot from 2021-06-24 15-18-28](https://user-images.githubusercontent.com/55311336/123936585-f1426b00-d9b2-11eb-9987-c764db1b724f.png)
",True,658,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/658,https://github.com/metabrainz/bookbrainz-site/pull/658,closed,159,4,6,3,1,1,0,0,[],2021-06-30 09:24:40+00:00,2021-07-15 13:12:57+00:00,1309697.0,"15 days, 3:48:17","[{'comment_id': 670443563, 'comment_body': ""As a possible future improvement, we could think of a way to load the number of items in a series from the ORM model.\r\nThat would require loading related relationships through the relationshipSet and filtering them by relationship type, which would probably be quite a costly process.\r\nLet's keep it in mind for another day."", 'comment_created': datetime.datetime(2021, 7, 15, 13, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '9a1f12ba02ee8a8b63de70ce0dbff13c2ecbeb5f', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3731b1f10b996e91827c56959076ce98b34dffd7', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b5d9cee4bc4f33092976944642230afef9ec75f', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
687143842,API: add lookup endpoints for series,"### Summary 
**Added lookup endpoints for series:** 
- [x] GET /series/{bbid} 
- [x] GET /series/{bbid}/aliases
- [x] GET /series/{bbid}/identifiers
- [x] GET /series/{bbid}/relationships 
",True,665,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/665,https://github.com/metabrainz/bookbrainz-site/pull/665,closed,272,0,3,5,1,0,0,0,[],2021-07-10 07:38:22+00:00,2021-07-15 13:49:53+00:00,454291.0,"5 days, 6:11:31",[],"[{'commit_sha': 'c10795719619fb5ef3d57597fd4675dbc797f8ac', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9638eac280af9d65de1a5eed8174acfd1fb2d34', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '492c18308b7dc5761052f445159f28a3fef32503', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23f91c2983415473b1c752be226fe29c7b0ea343', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37e550dd9d8ba5eef2f435727e90b4f299d6aa7a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
691208627,API: add browse requests for series,"**Summary**

- [x] Added browse requests for series.
- [x] Added series to search. [ `GET /search` ]",True,666,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/666,https://github.com/metabrainz/bookbrainz-site/pull/666,closed,160,25,8,7,1,8,0,0,[],2021-07-16 05:32:05+00:00,2021-07-16 11:47:01+00:00,22496.0,6:14:56,"[{'comment_id': 671079614, 'comment_body': 'Is `(entity entity)` on purpose?\r\nAlso I would keep the capitals on Edition and Series for consistency.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 51, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 671093907, 'comment_body': ""What use cases did you have in mind or this?\r\nI'm not really convinced is would be particularly useful, but I also don't think it hurts in any way to have it there.\r\nI would also propose shortening it to `orderingType` to match what we do for other entities."", 'comment_created': datetime.datetime(2021, 7, 16, 9, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 671094423, 'comment_body': 'If we are keeping the `seriesOrderingType` parameter then I assume it will need to be in this list too.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 671097285, 'comment_body': 'There is a mismatch of the capitalization here. Does the query parameter name get automatically transformed from `seriesOrderingType` (as defined in the docs on line 278) to `seriesorderingtype` as seen here on the query object?\r\n\r\nThe filtering seems to me to be working fine, so we should probably correct the docs?', 'comment_created': datetime.datetime(2021, 7, 16, 9, 17, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 671124016, 'comment_body': '> Is (entity entity) on purpose?\r\n\r\nOh no. It should be `(other entity)`. My bad.\r\n\r\n> Also I would keep the capitals on Edition and Series for consistency.\r\n\r\nSure', 'comment_created': datetime.datetime(2021, 7, 16, 10, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 671132251, 'comment_body': ""Not really I can think of a scenario where it would be useful but yeah, there isn't any harm to have it there."", 'comment_created': datetime.datetime(2021, 7, 16, 10, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 671134753, 'comment_body': ""Actually I think I'm wrong there, it's working without it."", 'comment_created': datetime.datetime(2021, 7, 16, 10, 18, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 671137989, 'comment_body': '> Does the query parameter name get automatically transformed from seriesOrderingType (as defined in the docs on line 278) to seriesorderingtype as seen here on the query object ?\r\n\r\nYes, the middleware [formatQueryParameters](https://github.com/bookbrainz/bookbrainz-site/blob/66a1b8706579eb1bfa8b598e0071bf239c408fa9/src/api/helpers/middleware.js#L79-L84) transforms all the query parameters to lowerCase.\r\n', 'comment_created': datetime.datetime(2021, 7, 16, 10, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}]","[{'commit_sha': 'e130520c226203b7835811364da3f26ed38ce01c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e685531effc7a80895f2daf1a24fae211abb0479', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f926dfc8f02925247cd0bb5c2a2db270c3eafb0', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b54949d4a81fb2258338893d344065c2bdf46e6a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f324f925d90a517a520154f4d48933ba735a83f7', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e838e1f61de36b4310bff35e33db6ed8893dc7e', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be2a8ab4e2c19519b11ac88a035774d44ee55f8c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
691350978,test: add tests for series api ,"**Summary** 

Added tests for series API `GET` and `Browse` Requests.",True,668,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/668,https://github.com/metabrainz/bookbrainz-site/pull/668,closed,308,0,2,7,1,1,0,0,[],2021-07-16 09:55:53+00:00,2021-07-16 12:10:07+00:00,8054.0,2:14:14,"[{'comment_id': 671181905, 'comment_body': ""With thte change on the other PR:\r\n```suggestion\r\n\t\tconst res = await chai.request(app).get(`/series?work=${work.get('bbid')}&orderingType=Automatic`);\r\n```"", 'comment_created': datetime.datetime(2021, 7, 16, 11, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': 'dfe5e830c856527781a06ba30a2170ea65e542aa', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae66da2b53bc0e1a8b95925bb7aa39ae5d4ffda', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c931c6aa825bcabff40f3a3e919ab3ba09f7f5a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8d82e056ca2ce5dc977215408afb37d08de4fea', 'committer_username': 'lint-action', 'committer_name': 'Lint Action', 'committer_email': None, 'commit_date': datetime.datetime(2019, 12, 27, 11, 57, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '328879de4d7e74b4e899473ad1a634bc1133229f', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22546012648df7dda2621c3451c171356693b3d8', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '392f47817633e57fc954e11bccd2710296fe5e03', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
691503411,"feat(series,relationship): show revision history for series and relationship attributes","**Summary**

Show revision diffs for series and relationship atrributes.
",True,669,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/669,https://github.com/metabrainz/bookbrainz-site/pull/669,closed,86,21,6,7,1,5,0,0,[],2021-07-16 13:45:53+00:00,2021-08-16 15:40:24+00:00,2685271.0,"31 days, 1:54:31","[{'comment_id': 676755218, 'comment_body': '```suggestion\r\nfunction formatRelationshipAttributeAddOrDelete(relationshipAttributes) {\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 16, 20, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 676762464, 'comment_body': ""I ran into a `Cannot read property 'relationshipAttributes' of undefined` error while running this, supposedly for a revision where `attributeSet` is null/undefined (~~weird to see that if `attributeSetId` isn't, not sure what's going on there…~~ I had forgotten to link the correct bookbrainz-data-js version…)\r\n```suggestion\r\n\t\tattributes = formatRelationshipAttributeAddOrDelete(rhs.attributeSet?.relationshipAttributes);\r\n```\r\n\r\nIn addition to that there should be a check in `formatRelationshipAttributeAddOrDelete` to make sure relationshipAttributes is present/an array and calling `relationshipAttributes.forEach`  won't throw an error"", 'comment_created': datetime.datetime(2021, 7, 26, 16, 29, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 679819840, 'comment_body': ""> I think this may be because in the formatRelationship function we detect addition and removal of relationships, but not modifications?\r\n\r\nYes, you are right. For now, I haven't added the functionality for detecting modification. If you remember the issue I reported earlier regarding the diffs of modified relationships, that could be fixed after we replace our diffing libraray."", 'comment_created': datetime.datetime(2021, 7, 30, 10, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 679840824, 'comment_body': 'I do remember the issue, I suppose I was expecting to see the diff even if it has some issues. I think that would be preferable to having an empty diff view like https://test.bookbrainz.org/revision/29907', 'comment_created': datetime.datetime(2021, 7, 30, 11, 4, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 679845794, 'comment_body': 'cool, will add it then :+1: ', 'comment_created': datetime.datetime(2021, 7, 30, 11, 13, 47, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}]","[{'commit_sha': 'dcc1b7e036c9e09b6726aae88c74c927fcfc18ce', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8475740ea8c4c2c458df132a40ae27c5da051b56', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '986c9a59231044e2b64522cf884c03210d465da1', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '297f402fc67422a8340590daac893f33d94ccbb1', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c40158c6fbdeb33cde8c0c888a91c4a661d451c', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60760dd7e21b6fbc229d12cc3ca9571cb7b7c91d', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '417ad36f047b8aa892d80300a2986c71f0875ea6', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
695329540,feat: add achievement for series creation,"**Summary:**

Added achievement for series creation.",True,677,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/677,https://github.com/metabrainz/bookbrainz-site/pull/677,closed,47,0,3,2,1,0,0,0,[],2021-07-22 16:30:52+00:00,2021-08-02 15:59:24+00:00,948512.0,"10 days, 23:28:32",[],"[{'commit_sha': 'e6986454fb3ace1d47850011773780e1aee33828', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e0d3ea6f900e0c7c8b0a6497d17977ed0c59dee', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
695417246,test: add tests for series creator achievements,"**Summary:**

Added tests for series creator achievements.",True,678,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/678,https://github.com/metabrainz/bookbrainz-site/pull/678,closed,132,0,3,3,1,0,0,0,[],2021-07-22 18:46:50+00:00,2021-08-16 14:15:36+00:00,2143726.0,"24 days, 19:28:46",[],"[{'commit_sha': 'ca3cd78e63cf71611c14145e018a714bf6badaf4', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '199aa603dbb5e14ec82a1ea5e8ecb9051abd2d81', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6aadaf3f0a898faf4a239586bfabb2b51ddf07af', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
692550250,feat(series): add identifiers,"**Summary** 

Added identifiers for series.",True,670,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/670,https://github.com/metabrainz/bookbrainz-site/pull/670,closed,27,0,3,2,1,0,0,0,[],2021-07-19 12:10:42+00:00,2021-07-29 12:19:30+00:00,864528.0,"10 days, 0:08:48",[],"[{'commit_sha': '5e86b33a52013c6fb6068317cf13391f2f1dec3d', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '952b89a17cc3817322c8b9cf3e9227048a7a6b3e', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
700308404,Revert relationship editor changes,"**Summary:** 
Reverted some of the relationship editor changes. 
A new series component will be created to add series item instead of adding them via the relationship editor. ",True,679,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/679,https://github.com/metabrainz/bookbrainz-site/pull/679,closed,62,274,9,4,1,0,0,0,[],2021-07-30 13:49:09+00:00,2021-07-30 14:56:02+00:00,4013.0,1:06:53,[],"[{'commit_sha': 'f34e09d3180bf113c5ee7f22efb1a54c0c43ae58', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9f5e34687c0ff612d01188847f157f854b0c56e', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '957bed37003784c933ed9779407bbe9c4b10eca8', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa4b202c32716eb63c8f68aab03585fc2f150261', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
700729578,feat(series): separate editor for adding series items,"**Summary:**
Created separate editor for adding/editing/removing series item.",True,680,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/680,https://github.com/metabrainz/bookbrainz-site/pull/680,closed,384,42,8,17,1,7,0,0,[],2021-07-31 15:52:10+00:00,2021-08-16 15:16:41+00:00,1380271.0,"15 days, 23:24:31","[{'comment_id': 689542681, 'comment_body': 'Previously, you had added the ability to reorder items manually (when seriesOrderingType = manual) with a drag and drop library.\r\nI think it was a great way to do it, and should be added back (is that the work you mentioned that you have locally and waiting for this PR to be merged?)', 'comment_created': datetime.datetime(2021, 8, 16, 13, 34, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689548929, 'comment_body': '`relationshipSection` and `relationships` here is not very descriptive anymore.\r\nIf I understand correctly, it should probably be something like `parentSection` and `childAttributeName` ; what do you think?', 'comment_created': datetime.datetime(2021, 8, 16, 13, 42, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689550180, 'comment_body': ""You could also have a default `childAttributeName = 'relationships'` and avoid changing the call to constructRelationships except for the case of `seriesItems`"", 'comment_created': datetime.datetime(2021, 8, 16, 13, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689557215, 'comment_body': ""This relationships formatting is repeated below, so let's construct it before separating series items and other relationships, and then assign it to the correct section.\r\nIn pseudo-code:\r\n```\r\nconst formattedRelationship = {\r\n  attributeSetId: relationship.attributeSetId,\r\n  /* Rest of the formatting here */\r\n}\r\nif (relationship.typeId > 69 && relationship.typeId < 75) {\r\n  seriesSection.seriesItems[`n${relationship.id}`] = formattedRelationship;\r\n}\r\nelse {\r\n  relationshipSection.relationships[`n${relationship.id}`] = formattedRelationship;\r\n}\r\n```"", 'comment_created': datetime.datetime(2021, 8, 16, 13, 52, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689566972, 'comment_body': 'The addition of the `form-control-static` CSS class to this Col element or its child will align it vertically to match the `form-control` class of the input in the previous column.\r\n\r\nTo compare the margins with and without the class (with added red border to see it better):\r\n![image](https://user-images.githubusercontent.com/6179856/129576112-a85f7a9f-9bfc-4fbc-81e7-b49a7d58ce79.png)\r\n', 'comment_created': datetime.datetime(2021, 8, 16, 14, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689582036, 'comment_body': '> I think it was a great way to do it, and should be added back (is that the work you mentioned that you have locally and waiting for this PR to be merged?)\r\n\r\nYes indeed, I will open a different PR for it once this gets merged, and also it will be easier for you to review smaller PRs.\r\n\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 16, 14, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 689582435, 'comment_body': 'Cool, applying the changes in a bit :)', 'comment_created': datetime.datetime(2021, 8, 16, 14, 22, 32, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}]","[{'commit_sha': '03f31d80ef8859bda4fadb59187afce129937535', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15383d97eb47e50542c5a2204c7d93ae7645569e', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff0f098e3c4b0b910aca5b51fc5b322e7d3a082c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d4b4e4aec0765b8eb4b7c618b9f40db6ec090e', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aee09f07274d64188e21d577a1d07d07529b740', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebcc616c6feaeca0c3cee67b5156666299e2f229', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1af62c52ece193e90d4e557f59dcd1d89b65f3b', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a12045f23592ec87105f04851f3ead1ddeaecbe9', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6b38ddca71558bd7e4995cd6668f434b9317225', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '651684ff4917b594da399ea5003bf972ffb33efb', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51e89f83fd83db38607198861d5ecd76f4859298', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '332aa8e888eb0d70886e254d9588384bc6b4d1a6', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd1e8f9115f6ba581cdebfa862d3ce062764c15f', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e40dc67eb2828d82a66991125e71d25118b3fcd5', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8a1a1a3be479b7f04a316dc5a68b81097e05714', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21bc4650c1d3aa1746a0aed7fbeeda9ecd65dfc2', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f4bfd57ba13875caeb5be402f19242f8e9c904b', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
713685775,feat(series): drag and drop to order series items.,"**Summary:**

- Added drag and drop feature to order the items in the series in any way you want.

![series-10](https://user-images.githubusercontent.com/55311336/129617769-5fbdff65-d143-4d55-92c9-7017e147fdb3.gif)
",True,690,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/690,https://github.com/metabrainz/bookbrainz-site/pull/690,closed,196,57,6,9,0,7,0,0,[],2021-08-16 19:20:24+00:00,2021-08-20 09:03:11+00:00,308567.0,"3 days, 13:42:47","[{'comment_id': 690578719, 'comment_body': ""We'll have to have another look at this sorting function to implement a natural sort order; currently it will do a language sort, so it will sort for example 1 > 10 > 100 > 2\r\n\r\n![image](https://user-images.githubusercontent.com/6179856/129772959-7d15f998-9883-41eb-a81d-6d40b373c148.png)\r\n\r\nThis can be done in another PR"", 'comment_created': datetime.datetime(2021, 8, 17, 17, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 690589740, 'comment_body': ""It seems to me a bit cumbersome to have to use entries and end up with [ [string , Relationship] ] and having to get the relationship properties with `seriesItem[1].attributes`, instead of using Object.values() and getting an array of Relationship objects directly (considering the rowID is also in the Relationship object).\r\nDoes it seem easier to you as well to work with a Relationship[] instead?\r\n\r\nI do see that further down you do `Object.fromEntries(new Map([...sortedSeriesItems]))`, maybe that's the reason you opted for this?\r\nIn that case, perhaps a simple one-liner array.reduce can give us the same result:\r\n`const payload = sortedSeriesItems.reduce((accumulator,rel:RelationshipForDisplay)=> (accumulator[rel.rowID]=rel,accumulator),{});`\r\n\r\nI'm using the type RelationshipForDisplay instead of Relationship as it has the rowID defined."", 'comment_created': datetime.datetime(2021, 8, 17, 17, 43, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 690592162, 'comment_body': 'I think the name is misleading if this component is for one item rather than the list of items. Maybe SeriesItem or SeriesListItem?', 'comment_created': datetime.datetime(2021, 8, 17, 17, 47, 13, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 690592933, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t\t\tkey={value.rowID}\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 17, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 690593037, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t\t\tkey={value.rowID}\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 17, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 690640535, 'comment_body': 'Yeah looks good, I will refactor it :)', 'comment_created': datetime.datetime(2021, 8, 17, 18, 57, 44, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 692790079, 'comment_body': 'See PR #691 ', 'comment_created': datetime.datetime(2021, 8, 20, 9, 3, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '2a5606259dfa63783feb48a45ac2dc983eb62a5f', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8740dff432002d1e391f4978e738ffc1b69443c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56df66db01dea5406d92d054dd99113eb7a4800c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89b672ded06cd88e613772ecf13ef3055f831652', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8155770d69726a41329964d4f68898ea4cf572c5', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7426d9ace4032ed0204de7fd91380c6b021586ca', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cf026eefc17720a3eed4f305fb3c8b28347b006', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d509a6777ad7375838939f546ca6e1662bccf08', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec0a229bca6ff4b83118964fa22e24495b478057', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52
706187449,feat: Series Entity Merging Tool ,"**Summary**

Created Merging tool for Series.",True,685,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/685,https://github.com/metabrainz/bookbrainz-site/pull/685,closed,221,13,7,20,2,9,0,0,[],2021-08-09 03:27:22+00:00,2021-08-20 10:58:24+00:00,977462.0,"11 days, 7:31:02","[{'comment_id': 689659410, 'comment_body': 'This should be refactored like you did in PR #680 , and ideally it would be best to refactor it into a separate utility function to avoid code duplication', 'comment_created': datetime.datetime(2021, 8, 16, 15, 54, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689662410, 'comment_body': 'Why is `require:false` used here?\r\nI have a nagging sensation that during a merge operation there should really not be a missing entity, something would be very wrong, and having an error is probably better.', 'comment_created': datetime.datetime(2021, 8, 16, 15, 58, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689664496, 'comment_body': 'This is also duplicated code from /src/server/helpers/middleware.ts , it would be better to make a shared utility function', 'comment_created': datetime.datetime(2021, 8, 16, 16, 1, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689670149, 'comment_body': ""This would benefit from having a comment; at first I didn't understand the distinction between entityType in the context of the mergeQueue and entityType in the context of a Series entity"", 'comment_created': datetime.datetime(2021, 8, 16, 16, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689670560, 'comment_body': 'Maybe `seriesEntityType` would be a tad clearer?', 'comment_created': datetime.datetime(2021, 8, 16, 16, 9, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689672039, 'comment_body': 'is the series `entityType` loaded by default without the need to add it here?', 'comment_created': datetime.datetime(2021, 8, 16, 16, 11, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 689809313, 'comment_body': 'Yes it is loaded by default.', 'comment_created': datetime.datetime(2021, 8, 16, 19, 41, 47, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 690020394, 'comment_body': 'Not sure I can do this now after PR  [#690](https://github.com/bookbrainz/bookbrainz-site/pull/690/files#diff-ca76c0da86142963f3ac970643ed10d9d0516511bdc0e3bd0dee4d6a2848b3f0R238-R243)\r\nAlso, this is not exactly similar to the code in series route. There is one additional check in the if statement and additional property **`rendered`** on the relationship object.', 'comment_created': datetime.datetime(2021, 8, 17, 4, 13, 58, tzinfo=datetime.timezone.utc), 'commenter': 'akashgp09', 'type': 'User'}, {'comment_id': 690600976, 'comment_body': ""OK, then I didn't pay enough attention, you can ignore me :)"", 'comment_created': datetime.datetime(2021, 8, 17, 17, 59, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '4264c6031a133443cb777e3c9dfb65551fe7b50c', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e71555798a28b40d37977ebdfcab413fef288bf1', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34d1adb541c18dd1a5761aa1c8ca3fc0bfb40b98', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d2b888dfc29df99ce545aff54ffa3aa53f55665', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca3aecad85069d809d1b893188fdc07bf5cc534a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afe17755f54a1599b79b78ad86c1362827839465', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68b633891d70d56ff7fcbd321dc158d6b4a9887a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '007c0afea8b28ce8a363a7b7d9aac89649ca3365', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8484bd76ca9c43b87d6d4654e202bc543f88d23', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51e7653f5fbb8e9f097c0e3d6206b440e5a18f70', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc6e6f3f4c1f33af9810c06633e9b2bcab21ec9', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '670bf94841369b06dea66bbe92cf58fc3db69a93', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '368f4ae038577a580bb6562e8a24ceb4520dcc4a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f312fd61aece61a057e86a8c7dbced2ce657cdf6', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4fbbbd2f82a913f97050dbb891492cd46480ff8', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0b1ab17d761517e7b76a48e24ba8230576e38c3', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f03477e79f6fa9168636db8c210a085fd3f3416a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15cb8487b97ac5fc4eea158d6ad9383ae3fbd91a', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d49989cd001b4f8332c500cb1c593b0af1bde21', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c047129682669fd648019400f7265e0c3557b73', 'committer_username': 'akashgp09', 'committer_name': 'Akash Gupta', 'committer_email': 'akashgp9@gmail.com', 'commit_date': datetime.datetime(2019, 9, 14, 7, 40, 48, tzinfo=datetime.timezone.utc)}]",Akash Gupta,55311336,akashgp9@gmail.com,User,,65,,1,52

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
28521896,bookbrainz-site,metabrainz/bookbrainz-site,JavaScript,278,186,15,94,6138,22,21,22,"[{'id': 725222316, 'number': 698, 'closed': datetime.datetime(2021, 9, 6, 18, 10, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 2, 2, 0, 29, tzinfo=datetime.timezone.utc), 'time_taken': 403821.0, 'time_delta': '4 days, 16:10:21', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 719433689, 'number': 693, 'closed': datetime.datetime(2021, 8, 26, 12, 20, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 25, 9, 42, 54, tzinfo=datetime.timezone.utc), 'time_taken': 95882.0, 'time_delta': '1 day, 2:38:02', 'additions': 69, 'deletions': 57, 'state': 'closed'}, {'id': 718667082, 'number': 692, 'closed': datetime.datetime(2021, 8, 26, 11, 23, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 11, 42, 15, tzinfo=datetime.timezone.utc), 'time_taken': 171672.0, 'time_delta': '1 day, 23:41:12', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 714936096, 'number': 691, 'closed': datetime.datetime(2021, 8, 20, 9, 12, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 10, 9, 15, tzinfo=datetime.timezone.utc), 'time_taken': 169399.0, 'time_delta': '1 day, 23:03:19', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 713685775, 'number': 690, 'closed': datetime.datetime(2021, 8, 20, 9, 3, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 19, 20, 24, tzinfo=datetime.timezone.utc), 'time_taken': 308567.0, 'time_delta': '3 days, 13:42:47', 'additions': 196, 'deletions': 57, 'state': 'closed'}, {'id': 706187449, 'number': 685, 'closed': datetime.datetime(2021, 8, 20, 10, 58, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 3, 27, 22, tzinfo=datetime.timezone.utc), 'time_taken': 977462.0, 'time_delta': '11 days, 7:31:02', 'additions': 221, 'deletions': 13, 'state': 'closed'}, {'id': 702875615, 'number': 684, 'closed': datetime.datetime(2021, 8, 17, 17, 55, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 2, 9, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1179971.0, 'time_delta': '13 days, 15:46:11', 'additions': 44, 'deletions': 2, 'state': 'closed'}, {'id': 702087291, 'number': 683, 'closed': datetime.datetime(2021, 8, 16, 15, 18, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 8, 53, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1146295.0, 'time_delta': '13 days, 6:24:55', 'additions': 15, 'deletions': 1, 'state': 'closed'}, {'id': 701965897, 'number': 682, 'closed': datetime.datetime(2021, 8, 16, 15, 35, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 5, 23, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1159882.0, 'time_delta': '13 days, 10:11:22', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 700729578, 'number': 680, 'closed': datetime.datetime(2021, 8, 16, 15, 16, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 31, 15, 52, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1380271.0, 'time_delta': '15 days, 23:24:31', 'additions': 384, 'deletions': 42, 'state': 'closed'}, {'id': 700308404, 'number': 679, 'closed': datetime.datetime(2021, 7, 30, 14, 56, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 30, 13, 49, 9, tzinfo=datetime.timezone.utc), 'time_taken': 4013.0, 'time_delta': '1:06:53', 'additions': 62, 'deletions': 274, 'state': 'closed'}, {'id': 695417246, 'number': 678, 'closed': datetime.datetime(2021, 8, 16, 14, 15, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 18, 46, 50, tzinfo=datetime.timezone.utc), 'time_taken': 2143726.0, 'time_delta': '24 days, 19:28:46', 'additions': 132, 'deletions': 0, 'state': 'closed'}, {'id': 695329540, 'number': 677, 'closed': datetime.datetime(2021, 8, 2, 15, 59, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 16, 30, 52, tzinfo=datetime.timezone.utc), 'time_taken': 948512.0, 'time_delta': '10 days, 23:28:32', 'additions': 47, 'deletions': 0, 'state': 'closed'}, {'id': 695264704, 'number': 676, 'closed': datetime.datetime(2021, 7, 26, 16, 2, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 15, 4, 37, tzinfo=datetime.timezone.utc), 'time_taken': 349078.0, 'time_delta': '4 days, 0:57:58', 'additions': 7, 'deletions': 20, 'state': 'closed'}, {'id': 692550250, 'number': 670, 'closed': datetime.datetime(2021, 7, 29, 12, 19, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 12, 10, 42, tzinfo=datetime.timezone.utc), 'time_taken': 864528.0, 'time_delta': '10 days, 0:08:48', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 691503411, 'number': 669, 'closed': datetime.datetime(2021, 8, 16, 15, 40, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 13, 45, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2685271.0, 'time_delta': '31 days, 1:54:31', 'additions': 86, 'deletions': 21, 'state': 'closed'}, {'id': 691350978, 'number': 668, 'closed': datetime.datetime(2021, 7, 16, 12, 10, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 9, 55, 53, tzinfo=datetime.timezone.utc), 'time_taken': 8054.0, 'time_delta': '2:14:14', 'additions': 308, 'deletions': 0, 'state': 'closed'}, {'id': 691247076, 'number': 667, 'closed': datetime.datetime(2021, 7, 16, 8, 49, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 7, 3, 4, tzinfo=datetime.timezone.utc), 'time_taken': 6366.0, 'time_delta': '1:46:06', 'additions': 950, 'deletions': 612, 'state': 'closed'}, {'id': 691208627, 'number': 666, 'closed': datetime.datetime(2021, 7, 16, 11, 47, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 5, 32, 5, tzinfo=datetime.timezone.utc), 'time_taken': 22496.0, 'time_delta': '6:14:56', 'additions': 160, 'deletions': 25, 'state': 'closed'}, {'id': 687143842, 'number': 665, 'closed': datetime.datetime(2021, 7, 15, 13, 49, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 7, 38, 22, tzinfo=datetime.timezone.utc), 'time_taken': 454291.0, 'time_delta': '5 days, 6:11:31', 'additions': 272, 'deletions': 0, 'state': 'closed'}, {'id': 683048143, 'number': 661, 'closed': datetime.datetime(2021, 7, 15, 13, 36, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 16, 35, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1026078.0, 'time_delta': '11 days, 21:01:18', 'additions': 138, 'deletions': 5, 'state': 'closed'}, {'id': 682376238, 'number': 660, 'closed': datetime.datetime(2021, 7, 15, 14, 52, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 6, 38, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1152876.0, 'time_delta': '13 days, 8:14:36', 'additions': 21, 'deletions': 10, 'state': 'closed'}, {'id': 681417191, 'number': 659, 'closed': datetime.datetime(2021, 7, 15, 13, 18, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 3, 41, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1244197.0, 'time_delta': '14 days, 9:36:37', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 680685799, 'number': 658, 'closed': datetime.datetime(2021, 7, 15, 13, 12, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 9, 24, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1309697.0, 'time_delta': '15 days, 3:48:17', 'additions': 159, 'deletions': 4, 'state': 'closed'}, {'id': 680622751, 'number': 657, 'closed': datetime.datetime(2021, 6, 30, 14, 15, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 7, 56, 3, tzinfo=datetime.timezone.utc), 'time_taken': 22793.0, 'time_delta': '6:19:53', 'additions': 173, 'deletions': 125, 'state': 'closed'}, {'id': 669426277, 'number': 649, 'closed': datetime.datetime(2021, 6, 29, 15, 39, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 10, 0, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1316327.0, 'time_delta': '15 days, 5:38:47', 'additions': 1623, 'deletions': 153, 'state': 'closed'}, {'id': 649168984, 'number': 634, 'closed': datetime.datetime(2021, 6, 11, 14, 20, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 17, 2, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1891085.0, 'time_delta': '21 days, 21:18:05', 'additions': 290, 'deletions': 1, 'state': 'closed'}, {'id': 643399562, 'number': 629, 'closed': datetime.datetime(2021, 12, 8, 17, 54, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 12, 18, 22, 44, tzinfo=datetime.timezone.utc), 'time_taken': 18142302.0, 'time_delta': '209 days, 23:31:42', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 637932793, 'number': 628, 'closed': datetime.datetime(2021, 5, 10, 17, 1, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 10, 16, 13, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2882.0, 'time_delta': '0:48:02', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 634760972, 'number': 626, 'closed': datetime.datetime(2021, 9, 1, 11, 47, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 8, 18, 33, 55, tzinfo=datetime.timezone.utc), 'time_taken': 9998001.0, 'time_delta': '115 days, 17:13:21', 'additions': 19, 'deletions': 6, 'state': 'closed'}, {'id': 634694762, 'number': 625, 'closed': datetime.datetime(2021, 5, 20, 17, 2, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 8, 17, 27, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1035303.0, 'time_delta': '11 days, 23:35:03', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 630510737, 'number': 621, 'closed': datetime.datetime(2022, 5, 10, 11, 54, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 5, 11, 21, 16, tzinfo=datetime.timezone.utc), 'time_taken': 31970019.0, 'time_delta': '370 days, 0:33:39', 'additions': 15, 'deletions': 13, 'state': 'closed'}, {'id': 630357282, 'number': 620, 'closed': datetime.datetime(2021, 5, 21, 18, 3, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 5, 7, 36, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1420004.0, 'time_delta': '16 days, 10:26:44', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 629930161, 'number': 619, 'closed': datetime.datetime(2021, 5, 21, 18, 16, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 4, 16, 20, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1475782.0, 'time_delta': '17 days, 1:56:22', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 628541632, 'number': 616, 'closed': datetime.datetime(2021, 5, 5, 10, 35, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 2, 4, 58, 4, tzinfo=datetime.timezone.utc), 'time_taken': 279427.0, 'time_delta': '3 days, 5:37:07', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 627527721, 'number': 615, 'closed': datetime.datetime(2021, 5, 3, 14, 12, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 30, 14, 45, 58, tzinfo=datetime.timezone.utc), 'time_taken': 257196.0, 'time_delta': '2 days, 23:26:36', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 626177613, 'number': 613, 'closed': datetime.datetime(2021, 12, 8, 17, 52, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 29, 14, 55, 24, tzinfo=datetime.timezone.utc), 'time_taken': 19277850.0, 'time_delta': '223 days, 2:57:30', 'additions': 54, 'deletions': 7, 'state': 'closed'}, {'id': 623584735, 'number': 608, 'closed': datetime.datetime(2021, 4, 28, 9, 32, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 26, 18, 35, 46, tzinfo=datetime.timezone.utc), 'time_taken': 140196.0, 'time_delta': '1 day, 14:56:36', 'additions': 16, 'deletions': 2, 'state': 'closed'}, {'id': 622603502, 'number': 605, 'closed': datetime.datetime(2021, 5, 3, 16, 41, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 24, 15, 39, 22, tzinfo=datetime.timezone.utc), 'time_taken': 781317.0, 'time_delta': '9 days, 1:01:57', 'additions': 2, 'deletions': 13, 'state': 'closed'}, {'id': 622054131, 'number': 604, 'closed': datetime.datetime(2021, 12, 8, 17, 53, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 23, 13, 4, 26, tzinfo=datetime.timezone.utc), 'time_taken': 19802962.0, 'time_delta': '229 days, 4:49:22', 'additions': 58, 'deletions': 236, 'state': 'closed'}, {'id': 621070967, 'number': 603, 'closed': datetime.datetime(2021, 6, 4, 18, 44, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 22, 13, 1, 4, tzinfo=datetime.timezone.utc), 'time_taken': 3735795.0, 'time_delta': '43 days, 5:43:15', 'additions': 27, 'deletions': 9, 'state': 'closed'}, {'id': 617512040, 'number': 602, 'closed': datetime.datetime(2021, 4, 26, 11, 48, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 18, 16, 20, 55, tzinfo=datetime.timezone.utc), 'time_taken': 674883.0, 'time_delta': '7 days, 19:28:03', 'additions': 33, 'deletions': 15, 'state': 'closed'}, {'id': 616044509, 'number': 601, 'closed': datetime.datetime(2021, 4, 19, 10, 42, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 15, 13, 19, 3, tzinfo=datetime.timezone.utc), 'time_taken': 336224.0, 'time_delta': '3 days, 21:23:44', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 610815845, 'number': 599, 'closed': datetime.datetime(2021, 5, 3, 18, 29, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 7, 16, 38, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2253054.0, 'time_delta': '26 days, 1:50:54', 'additions': 72, 'deletions': 7, 'state': 'closed'}, {'id': 609997842, 'number': 598, 'closed': datetime.datetime(2021, 4, 6, 18, 42, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 6, 16, 39, 4, tzinfo=datetime.timezone.utc), 'time_taken': 7431.0, 'time_delta': '2:03:51', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 608559643, 'number': 594, 'closed': datetime.datetime(2021, 4, 6, 17, 30, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 4, 15, 1, 9, tzinfo=datetime.timezone.utc), 'time_taken': 181735.0, 'time_delta': '2 days, 2:28:55', 'additions': 13, 'deletions': 0, 'state': 'closed'}, {'id': 608395350, 'number': 593, 'closed': datetime.datetime(2021, 4, 19, 10, 2, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 3, 14, 38, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1365833.0, 'time_delta': '15 days, 19:23:53', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 606010940, 'number': 587, 'closed': datetime.datetime(2021, 5, 17, 17, 22, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 31, 16, 53, 39, tzinfo=datetime.timezone.utc), 'time_taken': 4062521.0, 'time_delta': '47 days, 0:28:41', 'additions': 332, 'deletions': 400, 'state': 'closed'}, {'id': 598150666, 'number': 581, 'closed': datetime.datetime(2021, 3, 25, 20, 14, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 22, 16, 11, 24, tzinfo=datetime.timezone.utc), 'time_taken': 273779.0, 'time_delta': '3 days, 4:02:59', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 595723543, 'number': 578, 'closed': datetime.datetime(2021, 3, 19, 18, 9, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 18, 16, 9, 56, tzinfo=datetime.timezone.utc), 'time_taken': 93578.0, 'time_delta': '1 day, 1:59:38', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 593931235, 'number': 574, 'closed': datetime.datetime(2021, 3, 16, 20, 55, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 16, 14, 4, 53, tzinfo=datetime.timezone.utc), 'time_taken': 24641.0, 'time_delta': '6:50:41', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 592723466, 'number': 573, 'closed': datetime.datetime(2021, 3, 16, 20, 50, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 4, 36, 55, tzinfo=datetime.timezone.utc), 'time_taken': 144790.0, 'time_delta': '1 day, 16:13:10', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 592556269, 'number': 572, 'closed': datetime.datetime(2021, 5, 3, 16, 38, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 14, 14, 45, 31, tzinfo=datetime.timezone.utc), 'time_taken': 4326790.0, 'time_delta': '50 days, 1:53:10', 'additions': 578, 'deletions': 26, 'state': 'closed'}, {'id': 592490686, 'number': 570, 'closed': datetime.datetime(2021, 3, 16, 20, 27, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 14, 7, 25, 17, tzinfo=datetime.timezone.utc), 'time_taken': 219729.0, 'time_delta': '2 days, 13:02:09', 'additions': 0, 'deletions': 7, 'state': 'closed'}, {'id': 592346795, 'number': 568, 'closed': datetime.datetime(2021, 3, 22, 12, 23, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 13, 11, 17, 24, tzinfo=datetime.timezone.utc), 'time_taken': 781541.0, 'time_delta': '9 days, 1:05:41', 'additions': 60, 'deletions': 43, 'state': 'closed'}, {'id': 591525982, 'number': 564, 'closed': datetime.datetime(2021, 3, 22, 11, 54, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 12, 9, 46, 50, tzinfo=datetime.timezone.utc), 'time_taken': 871640.0, 'time_delta': '10 days, 2:07:20', 'additions': 9, 'deletions': 1, 'state': 'closed'}, {'id': 591384469, 'number': 563, 'closed': datetime.datetime(2021, 9, 4, 16, 56, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 12, 5, 31, 42, tzinfo=datetime.timezone.utc), 'time_taken': 15247514.0, 'time_delta': '176 days, 11:25:14', 'additions': 10364, 'deletions': 9448, 'state': 'closed'}, {'id': 590981730, 'number': 561, 'closed': datetime.datetime(2021, 3, 12, 11, 21, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 16, 6, 14, tzinfo=datetime.timezone.utc), 'time_taken': 69312.0, 'time_delta': '19:15:12', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 590972431, 'number': 560, 'closed': datetime.datetime(2021, 3, 11, 16, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 15, 53, 53, tzinfo=datetime.timezone.utc), 'time_taken': 547.0, 'time_delta': '0:09:07', 'additions': 539, 'deletions': 538, 'state': 'closed'}, {'id': 590804936, 'number': 559, 'closed': datetime.datetime(2021, 3, 25, 19, 8, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 11, 55, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1235551.0, 'time_delta': '14 days, 7:12:31', 'additions': 3, 'deletions': 3, 'state': 'closed'}]"
42076955,bookbrainz-data-js,metabrainz/bookbrainz-data-js,JavaScript,20,9,12,18,1086,0,6,0,"[{'id': 689254093, 'number': 275, 'closed': datetime.datetime(2021, 7, 16, 11, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 17, 16, 8, tzinfo=datetime.timezone.utc), 'time_taken': 239152.0, 'time_delta': '2 days, 18:25:52', 'additions': 16, 'deletions': 5, 'state': 'closed'}, {'id': 650116423, 'number': 272, 'closed': datetime.datetime(2021, 6, 23, 16, 9, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 16, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2850669.0, 'time_delta': '32 days, 23:51:09', 'additions': 1533, 'deletions': 72, 'state': 'closed'}, {'id': 643413000, 'number': 271, 'closed': datetime.datetime(2021, 12, 8, 17, 54, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 12, 18, 42, 55, tzinfo=datetime.timezone.utc), 'time_taken': 18141073.0, 'time_delta': '209 days, 23:11:13', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 643405982, 'number': 270, 'closed': datetime.datetime(2021, 5, 12, 18, 39, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 12, 18, 32, tzinfo=datetime.timezone.utc), 'time_taken': 434.0, 'time_delta': '0:07:14', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 632493417, 'number': 268, 'closed': datetime.datetime(2021, 5, 25, 17, 23, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 9, 59, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1581786.0, 'time_delta': '18 days, 7:23:06', 'additions': 136, 'deletions': 0, 'state': 'closed'}, {'id': 632458761, 'number': 267, 'closed': datetime.datetime(2021, 5, 25, 17, 22, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 9, 30, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1583551.0, 'time_delta': '18 days, 7:52:31', 'additions': 136, 'deletions': 0, 'state': 'closed'}, {'id': 632432481, 'number': 266, 'closed': datetime.datetime(2021, 5, 25, 17, 21, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 9, 0, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1585256.0, 'time_delta': '18 days, 8:20:56', 'additions': 136, 'deletions': 0, 'state': 'closed'}, {'id': 632410229, 'number': 265, 'closed': datetime.datetime(2021, 5, 25, 17, 21, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 8, 34, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1586812.0, 'time_delta': '18 days, 8:46:52', 'additions': 136, 'deletions': 0, 'state': 'closed'}, {'id': 624817639, 'number': 263, 'closed': datetime.datetime(2021, 4, 28, 18, 9, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 28, 3, 37, 21, tzinfo=datetime.timezone.utc), 'time_taken': 52323.0, 'time_delta': '14:32:03', 'additions': 326, 'deletions': 24, 'state': 'closed'}, {'id': 623285106, 'number': 262, 'closed': datetime.datetime(2021, 5, 25, 17, 18, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 26, 12, 24, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2523213.0, 'time_delta': '29 days, 4:53:33', 'additions': 106, 'deletions': 0, 'state': 'closed'}, {'id': 623282872, 'number': 261, 'closed': datetime.datetime(2021, 4, 26, 13, 56, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 26, 12, 21, 41, tzinfo=datetime.timezone.utc), 'time_taken': 5692.0, 'time_delta': '1:34:52', 'additions': 17, 'deletions': 0, 'state': 'closed'}, {'id': 622776859, 'number': 260, 'closed': datetime.datetime(2021, 4, 26, 13, 56, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 25, 14, 34, 26, tzinfo=datetime.timezone.utc), 'time_taken': 84097.0, 'time_delta': '23:21:37', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
