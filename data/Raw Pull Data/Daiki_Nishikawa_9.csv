pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
449528259,Add new molecule graph data,"I implemented the new molecule graph data class. 
This PR is related to #1942 ",True,2012,https://api.github.com/repos/deepchem/deepchem/pulls/2012,https://github.com/deepchem/deepchem/pull/2012,closed,290,0,4,14,6,9,0,0,[],2020-07-15 14:41:29+00:00,2020-07-19 00:20:29+00:00,293940.0,"3 days, 9:39:00","[{'comment_id': 456155280, 'comment_body': 'Could we add a function to convert this graph to `torg_geometric.data.Data`?', 'comment_created': datetime.datetime(2020, 7, 17, 0, 42, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456157104, 'comment_body': 'Could you add this class to `docs/dataclasses.rst`?', 'comment_created': datetime.datetime(2020, 7, 17, 0, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456241368, 'comment_body': ""I added, but I don't check working well"", 'comment_created': datetime.datetime(2020, 7, 17, 6, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456381650, 'comment_body': '👍 ', 'comment_created': datetime.datetime(2020, 7, 17, 11, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456685323, 'comment_body': 'Could you move this over to `docs/dataclasses.rst`? That way it will be alongsize `ConvMol` and `WeaveMol` in the documentation', 'comment_created': datetime.datetime(2020, 7, 17, 21, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456685649, 'comment_body': 'Can you swap this out to say ""This method..."" since the rest of the class doesn\'t require PyTorch to be implemented?\r\n\r\nCan you also add PyTorch Geometric onto the lift of soft-dependencies and update the dependency table in the docs?', 'comment_created': datetime.datetime(2020, 7, 17, 21, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456704962, 'comment_body': 'I fixed!', 'comment_created': datetime.datetime(2020, 7, 17, 22, 49, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456705113, 'comment_body': 'Sorry, I mistake the location 🙇\u200d♂️  Now, I fixed!', 'comment_created': datetime.datetime(2020, 7, 17, 22, 49, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456757572, 'comment_body': ""I couldn't fix this error... \r\n\r\nThe error is `deepchem/utils/molecule_graph.py:165: error: 'staticmethod' used with a non-method`"", 'comment_created': datetime.datetime(2020, 7, 18, 6, 40, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}]","[{'commit_sha': 'c45f7d3fe04c266babeefe2a850b0ed611f7aeb1', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '572dfa7f699b97de3d0439ef752f1a423fa4c035', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92639a3fbe443abea016a12de8b4fed3fccbc701', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff26a992ab6ac74dbb8cd515f90e6ac535b31a05', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a7b25c16209916dc248ccc99cd1e2eedf8de103', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36b8b1f1b598fdab9d5fcfbeeee3d74e1d29a2f4', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdcd9a9c6ca919647292c1183873a06a755455a4', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a8813301fc0dd2b16a3dad847461b5dc0f4a700', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7702a6e6987398a08ab73694a24f168dab0c22d', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e27b788fa0d0351488a706363d5135bb0bb481f7', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82541d0fab1d447f93a72f0abea41d786713e366', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76733f9d38ed8fd71f0d1ff4e99e9b3b265fc7e5', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e43d6c8ebea6aa10a16dfe68b34ec763edff9a16', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef33bd517757a56b8ed5e70d053402d5e631ec32', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
455627703,Modify MoleculeGraphData  and add CGCNN featurizer,"## What I did

- [x] Refactor `MoleculeGraphData ` -> `GraphData`
  - Remove targets attributes (featurizer doesn't take target)
  - Rename class name
- [x] Refactor `StructureGraphFeaturizer ` -> `CGCNNFeaturizer` using `GraphData` class
- [x] Split `materials_featurizers.py`",True,2045,https://api.github.com/repos/deepchem/deepchem/pulls/2045,https://github.com/deepchem/deepchem/pull/2045,closed,700,503,33,27,13,15,0,0,[],2020-07-23 10:51:20+00:00,2020-08-05 17:31:50+00:00,1147230.0,"13 days, 6:40:30","[{'comment_id': 459533442, 'comment_body': 'Could I upload this json file....? ', 'comment_created': datetime.datetime(2020, 7, 23, 15, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 459741649, 'comment_body': ""One generalization we might want to consider is adding `pair_features`. The `WeaveFeaturizer` class has pair features for all pairs of atoms, even those which aren't connected by an edge"", 'comment_created': datetime.datetime(2020, 7, 23, 21, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459741714, 'comment_body': '+1 for the new name!', 'comment_created': datetime.datetime(2020, 7, 23, 21, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459741897, 'comment_body': 'Could you add an example showing how to instantiate a `GraphData` class and extract its attributes?', 'comment_created': datetime.datetime(2020, 7, 23, 21, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459742246, 'comment_body': ""Perhaps we should just go ahead and add a test for this. We'll have to add pytorch-geometric to `.travis.yml` but that might be worth the additional work to ensure correctness"", 'comment_created': datetime.datetime(2020, 7, 23, 21, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459742390, 'comment_body': ""Could you add an example for this class's usage?"", 'comment_created': datetime.datetime(2020, 7, 23, 21, 37, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459742577, 'comment_body': ""Yes absolutely! I'll try to get AWS permissions fixed for you by tomorrow"", 'comment_created': datetime.datetime(2020, 7, 23, 21, 37, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459742688, 'comment_body': 'Could you add an example showing how to invoke this featurizer?', 'comment_created': datetime.datetime(2020, 7, 23, 21, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459746167, 'comment_body': 'Could you add a usage example to this class?', 'comment_created': datetime.datetime(2020, 7, 23, 21, 45, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459746254, 'comment_body': 'Could you add a usage example to this class?', 'comment_created': datetime.datetime(2020, 7, 23, 21, 46, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459746602, 'comment_body': '+1 for these type labels! This is a nice way to get around the optional imports hampering typing :)', 'comment_created': datetime.datetime(2020, 7, 23, 21, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 460119087, 'comment_body': ""> pair features for all pairs of atoms, even those which aren't connected by an edge\r\n\r\nIn the case of WeaveNet, if we define the edge_idx as all nodes connect, I think we don't need `pair_feature` attribute. How about ...?\r\n\r\nI think it is better to add the attribute when we start to building the WeaveModel using new graph data."", 'comment_created': datetime.datetime(2020, 7, 24, 15, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 460249386, 'comment_body': 'Sounds good! Probably better to generalize with a concrete use case in hand', 'comment_created': datetime.datetime(2020, 7, 24, 19, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 460634831, 'comment_body': 'As an additional suggestion, should we just go ahead and add a converter to a DGL graph? (https://docs.dgl.ai/en/0.4.x/api/python/graph.html). That would make our interop with PyG/DGL pretty seamless once we finish converting out models over to `GraphData`', 'comment_created': datetime.datetime(2020, 7, 27, 4, 0, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 463115029, 'comment_body': ""I add these lines for PyTorch and  PyTorch Geometric,  but I couldn't write for  PowerShell script..."", 'comment_created': datetime.datetime(2020, 7, 30, 16, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}]","[{'commit_sha': 'c6c87c5f4a69aa91a2966fffb826b503d07d8a82', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76109a204d6784d0ea93d5b2883bcd960a980d64', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95134e24dfe7302220c79074f9ffd0eae4fdec58', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29fbc1381e9c20ea0ee98fa211d93797df664ed8', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d91dedf41f68a1c5b8799ed2c8b9f1c01f73821', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e19a4822b8881ffadf477da9b9430f5132ee357', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '983e01e46c214898ae08084aeaa4f9eb2e5bdf5b', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3e2793fe7af890a272c45b60993d268cd461932', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd09f50b9f448a198333255564cb1734d045f561', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c68ab3c9f9347fd5c666e71a101fa603e6f0e266', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6399b1d2d8d0cb44023d4b64f00f6372578073a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13050dc2a71f3db96ec82017edbe2a73456bed6d', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76891462a36a057fc2355c7f7686649a8184add2', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '976d1c3a306cd31dcfa3ea485ba866290b15831e', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9af12830059b256ba9b397facf819dcacf905773', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e67d2d792f4114d0dd54bb54830426d84e2aa2bc', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '626208411d7354f23bd15b1e1959e6e862a19237', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b79862f832c93c49a3217aff696ede128666be0', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6663fdf4b512f46ba5b6476eb952b68266a6590b', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '995e0e0d6c11b40b76a0cf94a705c40f40391d99', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453abc908c2801231be2f27542df09c13b083180', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '688969d6f5ea2b7a7d4bf486b067f89aef47a937', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b8319b1853f372ab554a2a5acdfb93c948fc66a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e35b2fb667f5f3a22c0a059670442e6d3848ba2', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b2f3e71259dd32a77b459c6f780cde474859eed', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86b384d8dec8bb3ac58762c1646a3343962bf20b', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4370a148b7585af2e5737951d107846bd09f2697', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
455627703,Modify MoleculeGraphData  and add CGCNN featurizer,"## What I did

- [x] Refactor `MoleculeGraphData ` -> `GraphData`
  - Remove targets attributes (featurizer doesn't take target)
  - Rename class name
- [x] Refactor `StructureGraphFeaturizer ` -> `CGCNNFeaturizer` using `GraphData` class
- [x] Split `materials_featurizers.py`",True,2045,https://api.github.com/repos/deepchem/deepchem/pulls/2045,https://github.com/deepchem/deepchem/pull/2045,closed,700,503,33,27,13,15,0,0,[],2020-07-23 10:51:20+00:00,2020-08-05 17:31:50+00:00,1147230.0,"13 days, 6:40:30","[{'comment_id': 459533442, 'comment_body': 'Could I upload this json file....? ', 'comment_created': datetime.datetime(2020, 7, 23, 15, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 459741649, 'comment_body': ""One generalization we might want to consider is adding `pair_features`. The `WeaveFeaturizer` class has pair features for all pairs of atoms, even those which aren't connected by an edge"", 'comment_created': datetime.datetime(2020, 7, 23, 21, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459741714, 'comment_body': '+1 for the new name!', 'comment_created': datetime.datetime(2020, 7, 23, 21, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459741897, 'comment_body': 'Could you add an example showing how to instantiate a `GraphData` class and extract its attributes?', 'comment_created': datetime.datetime(2020, 7, 23, 21, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459742246, 'comment_body': ""Perhaps we should just go ahead and add a test for this. We'll have to add pytorch-geometric to `.travis.yml` but that might be worth the additional work to ensure correctness"", 'comment_created': datetime.datetime(2020, 7, 23, 21, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459742390, 'comment_body': ""Could you add an example for this class's usage?"", 'comment_created': datetime.datetime(2020, 7, 23, 21, 37, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459742577, 'comment_body': ""Yes absolutely! I'll try to get AWS permissions fixed for you by tomorrow"", 'comment_created': datetime.datetime(2020, 7, 23, 21, 37, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459742688, 'comment_body': 'Could you add an example showing how to invoke this featurizer?', 'comment_created': datetime.datetime(2020, 7, 23, 21, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459746167, 'comment_body': 'Could you add a usage example to this class?', 'comment_created': datetime.datetime(2020, 7, 23, 21, 45, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459746254, 'comment_body': 'Could you add a usage example to this class?', 'comment_created': datetime.datetime(2020, 7, 23, 21, 46, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 459746602, 'comment_body': '+1 for these type labels! This is a nice way to get around the optional imports hampering typing :)', 'comment_created': datetime.datetime(2020, 7, 23, 21, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 460119087, 'comment_body': ""> pair features for all pairs of atoms, even those which aren't connected by an edge\r\n\r\nIn the case of WeaveNet, if we define the edge_idx as all nodes connect, I think we don't need `pair_feature` attribute. How about ...?\r\n\r\nI think it is better to add the attribute when we start to building the WeaveModel using new graph data."", 'comment_created': datetime.datetime(2020, 7, 24, 15, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 460249386, 'comment_body': 'Sounds good! Probably better to generalize with a concrete use case in hand', 'comment_created': datetime.datetime(2020, 7, 24, 19, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 460634831, 'comment_body': 'As an additional suggestion, should we just go ahead and add a converter to a DGL graph? (https://docs.dgl.ai/en/0.4.x/api/python/graph.html). That would make our interop with PyG/DGL pretty seamless once we finish converting out models over to `GraphData`', 'comment_created': datetime.datetime(2020, 7, 27, 4, 0, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 463115029, 'comment_body': ""I add these lines for PyTorch and  PyTorch Geometric,  but I couldn't write for  PowerShell script..."", 'comment_created': datetime.datetime(2020, 7, 30, 16, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}]","[{'commit_sha': 'c6c87c5f4a69aa91a2966fffb826b503d07d8a82', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76109a204d6784d0ea93d5b2883bcd960a980d64', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95134e24dfe7302220c79074f9ffd0eae4fdec58', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29fbc1381e9c20ea0ee98fa211d93797df664ed8', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d91dedf41f68a1c5b8799ed2c8b9f1c01f73821', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e19a4822b8881ffadf477da9b9430f5132ee357', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '983e01e46c214898ae08084aeaa4f9eb2e5bdf5b', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3e2793fe7af890a272c45b60993d268cd461932', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd09f50b9f448a198333255564cb1734d045f561', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c68ab3c9f9347fd5c666e71a101fa603e6f0e266', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6399b1d2d8d0cb44023d4b64f00f6372578073a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13050dc2a71f3db96ec82017edbe2a73456bed6d', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76891462a36a057fc2355c7f7686649a8184add2', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '976d1c3a306cd31dcfa3ea485ba866290b15831e', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9af12830059b256ba9b397facf819dcacf905773', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e67d2d792f4114d0dd54bb54830426d84e2aa2bc', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '626208411d7354f23bd15b1e1959e6e862a19237', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b79862f832c93c49a3217aff696ede128666be0', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6663fdf4b512f46ba5b6476eb952b68266a6590b', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '995e0e0d6c11b40b76a0cf94a705c40f40391d99', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453abc908c2801231be2f27542df09c13b083180', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '688969d6f5ea2b7a7d4bf486b067f89aef47a937', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b8319b1853f372ab554a2a5acdfb93c948fc66a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e35b2fb667f5f3a22c0a059670442e6d3848ba2', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b2f3e71259dd32a77b459c6f780cde474859eed', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86b384d8dec8bb3ac58762c1646a3343962bf20b', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4370a148b7585af2e5737951d107846bd09f2697', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
467433685,CGCNN implementation,I implemented CGCNN models ,True,2089,https://api.github.com/repos/deepchem/deepchem/pulls/2089,https://github.com/deepchem/deepchem/pull/2089,closed,405,22,10,16,7,37,0,0,[],2020-08-13 14:46:18+00:00,2020-08-19 23:11:41+00:00,548723.0,"6 days, 8:25:23","[{'comment_id': 470703138, 'comment_body': 'Currently, I\'m struggling the shape error....\r\n\r\n```\r\ny = array([0.46, 1.76, 1.6800000000000002, 0.62, 1.28, 0.72, 1.48, 1.9, 1.72,\r\n       1.44], dtype=object), mode = \'regression\', n_tasks = 0, n_classes = 2\r\n\r\n    def normalize_labels_shape(y, mode=None, n_tasks=None, n_classes=None):\r\n      """"""A utility function to correct the shape of the labels.\r\n\r\n      Parameters\r\n      ----------\r\n      y: np.ndarray\r\n        `y` is an array of shape `(N,)` or `(N, n_tasks)` or `(N, n_tasks, 1)`.\r\n      mode: str, optional (default None)\r\n        If `mode` is ""classification"" or ""regression"", attempts to apply\r\n        data transformations.\r\n      n_tasks: int, optional (default 1)\r\n        The number of tasks this class is expected to handle.\r\n      n_classes: int, optional\r\n        If specified use this as the number of classes. Else will try to\r\n        impute it as `n_classes = max(y) + 1` for arrays and as\r\n        `n_classes=2` for the case of scalars. Note this parameter only\r\n        has value if `mode==""classification""`\r\n\r\n      Returns\r\n      -------\r\n      y_out: np.ndarray\r\n        If `mode==""classification""`, `y_out` is an array of shape `(N,\r\n        n_tasks, n_classes)`. If `mode==""regression""`, `y_out` is an array\r\n        of shape `(N, n_tasks)`.\r\n      """"""\r\n      if n_tasks is None:\r\n        raise ValueError(""n_tasks must be specified"")\r\n      if mode not in [""classification"", ""regression""]:\r\n        raise ValueError(""mode must be either classification or regression."")\r\n      if mode == ""classification"" and n_classes is None:\r\n        raise ValueError(""n_classes must be specified"")\r\n      if not isinstance(y, np.ndarray):\r\n        raise ValueError(""y must be a np.ndarray"")\r\n      # Handle n_classes/n_task shape ambiguity\r\n      if mode == ""classification"" and len(y.shape) == 2:\r\n        if n_classes == y.shape[1] and n_tasks != 1 and n_classes != n_tasks:\r\n          raise ValueError(""Shape of input doesn\'t match expected n_tasks=1"")\r\n        elif n_classes == y.shape[1] and n_tasks == 1:\r\n          # Add in task dimension\r\n          y = np.expand_dims(y, 1)\r\n      if len(y.shape) == 1 and n_tasks != 1:\r\n>       raise ValueError(""n_tasks must equal 1 for a 1D set of labels."")\r\nE       ValueError: n_tasks must equal 1 for a 1D set of labels.\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 15, 39, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 470876794, 'comment_body': 'Can you give more information in the docstring?  Tell people what this class is useful for, and give a brief description of how the model works.', 'comment_created': datetime.datetime(2020, 8, 14, 21, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 470878834, 'comment_body': 'A few issues with this:\r\n\r\n1. We should try to keep the TorchModel and KerasModel APIs identical as much as possible, so if we add a new argument to one we should also add it to the other.\r\n2. The name `collate_fn` doesn\'t mean anything to me, and doesn\'t seem to have anything to do with what it does.  I suspect the name is specific to how you\'re using it in a particular model?\r\n3. The description isn\'t useful either.  Saying that it ""makes specific batch data"" leaves the reader confused about what it does.\r\n4. The normal way we handle cases like this is by overriding `default_generator()`.', 'comment_created': datetime.datetime(2020, 8, 14, 21, 46, 12, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 470879480, 'comment_body': ""I think it would be better if we provide a class that extends TorchModel and internally creates the `torch.nn.Module`.  That's how all our Keras based models work."", 'comment_created': datetime.datetime(2020, 8, 14, 21, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 470893330, 'comment_body': ""I'm so sorry. The docstring is still WIP. I definitely update them"", 'comment_created': datetime.datetime(2020, 8, 14, 22, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 470893353, 'comment_body': '> 2. The name collate_fn doesn\'t mean anything to me, and doesn\'t seem to have anything to do with what it does. I suspect the name is specific to how you\'re using it in a particular model?\r\n> 3. The description isn\'t useful either. Saying that it ""makes specific batch data"" leaves the reader confused about what it does.\r\n\r\nI\'m so sorry. The docstring is still WIP. I definitely update them. I agreed with your opinion. The `collate_fn`  is derived from `collate_fn` of DataLoader in PyTorch. The `collate_fn` argument is often used in DataLoader in order to make user-defined batch. \r\n\r\nPlease see https://pytorch.org/docs/stable/data.html#dataloader-collate-fn\r\n\r\n> 4.The normal way we handle cases like this is by overriding default_generator()\r\n\r\nThe main problem is that the line of `torch.as_tensor(x, device=self.device)` in `self._prepare_batch` doesn\'t work with `GraphData` and DGLGraph. Can I fix this problem by overriding default_generator()?\r\n', 'comment_created': datetime.datetime(2020, 8, 14, 22, 38, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 470896290, 'comment_body': 'Is there any reason...?  I think this style is more familiar to many PyTorch users. ', 'comment_created': datetime.datetime(2020, 8, 14, 22, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 470996819, 'comment_body': 'This is unused variables.', 'comment_created': datetime.datetime(2020, 8, 15, 14, 41, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 471026781, 'comment_body': ""But less familiar to DeepChem users.  This is how all our models work.  Classes like GraphConvModel and WeaveModel extend KerasModel.  We don't require users to manually wrap them in KerasModel."", 'comment_created': datetime.datetime(2020, 8, 15, 19, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 471027451, 'comment_body': ""The `collate_fn` in DataLoader is used for something very different.  It's part of automatic batching, and it determined how a group of individual samples get combined into a batch.  By the time the model sees them, they've already been combined.  That's why it's a property of DataLoader, not torch.nn.Module.\r\n\r\n> The main problem is that the line of torch.as_tensor(x, device=self.device) in self._prepare_batch doesn't work with GraphData and DGLGraph. Can I fix this problem by overriding default_generator()?\r\n\r\nTake a look at `GraphConvModel.default_generator()`.  It does exactly this, converting a set of ConvMol objects from the dataset into arrays that can be passed to the model."", 'comment_created': datetime.datetime(2020, 8, 15, 19, 42, 12, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 471027493, 'comment_body': 'Ok, good to know.', 'comment_created': datetime.datetime(2020, 8, 15, 19, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 471059751, 'comment_body': ""> The collate_fn in DataLoader is used for something very different. It's part of automatic batching, and it determined how a group of individual samples get combined into a batch. By the time the model sees them, they've already been combined. That's why it's a property of DataLoader, not torch.nn.Module.\r\n\r\nOK.\r\n\r\n> Take a look at GraphConvModel.default_generator(). It does exactly this, converting a set of ConvMol objects from the dataset into arrays that can be passed to the model.\r\n\r\nWe cannot convert DGLGraph to arrays because the general DGL models (of course, contains CGCNNLayer) use DGLGraph's method for updating node or edge representations. I overrided `_prepare_batch` method."", 'comment_created': datetime.datetime(2020, 8, 16, 3, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 471059970, 'comment_body': 'OK, I made CGCNNModel class', 'comment_created': datetime.datetime(2020, 8, 16, 3, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 471716552, 'comment_body': 'Do we need to call `restore()` and `save_checkpoint()` for correct behavior here? It might be useful to factor out a separate test that `restore()`/`save_checkpoint()` work correctly', 'comment_created': datetime.datetime(2020, 8, 17, 19, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 471716816, 'comment_body': 'Could you add a usage example to the docstring?', 'comment_created': datetime.datetime(2020, 8, 17, 19, 5, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 471717046, 'comment_body': 'Could you add a usage example to the docstring?', 'comment_created': datetime.datetime(2020, 8, 17, 19, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 471717354, 'comment_body': 'Should this `dataset_config` be passed into the MoleculeNet loader?', 'comment_created': datetime.datetime(2020, 8, 17, 19, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 471783345, 'comment_body': '`fit()` automatically saves a checkpoint at the end.  So calling `restore()` just reloads exactly the same parameters that are already in memory.  And then calling `save_checkpoint()` replaces the existing checkpoint with another identical one.  I think both those lines should be removed.', 'comment_created': datetime.datetime(2020, 8, 17, 21, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 471783896, 'comment_body': 'What are these lines for?  You ask the model to make predictions, but ignore the results.', 'comment_created': datetime.datetime(2020, 8, 17, 21, 25, 41, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 471786581, 'comment_body': ""For most users, this is the class they'll be working with.  This one is the DeepChem model, and the other classes are internal implementation details that they won't look at unless they're doing something advanced.  So this class is where the main documentation should go."", 'comment_created': datetime.datetime(2020, 8, 17, 21, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 471788044, 'comment_body': 'We should add a note here that it also accepts all the arguments TorchModel does.', 'comment_created': datetime.datetime(2020, 8, 17, 21, 35, 12, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 471789990, 'comment_body': 'Instead of repeating all the code from the superclass we can just invoke it.  Everything from here down can be replaced by\r\n\r\n```python\r\n_, labels, weights = super(CGCNNModel, self)._prepare_batch(([], labels, weights))\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 21, 39, 41, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 472142297, 'comment_body': 'Thank you for comments. I removed those lines.', 'comment_created': datetime.datetime(2020, 8, 18, 12, 33, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 472142442, 'comment_body': 'I added!', 'comment_created': datetime.datetime(2020, 8, 18, 12, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 472142552, 'comment_body': 'I added!', 'comment_created': datetime.datetime(2020, 8, 18, 12, 34, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 472143013, 'comment_body': 'Exactly! I fixed.', 'comment_created': datetime.datetime(2020, 8, 18, 12, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 472145042, 'comment_body': 'I fixed these lines by following your comments.', 'comment_created': datetime.datetime(2020, 8, 18, 12, 36, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 472146194, 'comment_body': 'I added!', 'comment_created': datetime.datetime(2020, 8, 18, 12, 37, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 472147380, 'comment_body': 'I added main docs!', 'comment_created': datetime.datetime(2020, 8, 18, 12, 38, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 472150510, 'comment_body': 'These lines just check whether `predict_on_batch` work well or not. I updated that these line check output shape.', 'comment_created': datetime.datetime(2020, 8, 18, 12, 42, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 472329004, 'comment_body': 'Can you add these classes to `deepchem/docs/models.rst`? We should add a new section in the docs file for PyTorch models and add these there.', 'comment_created': datetime.datetime(2020, 8, 18, 16, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 472334769, 'comment_body': 'It still uses a description that will be confusing for users: ""CGCNN wrapper model for converting PyTorch style to Keras style.""  Just copy over the docstring exactly (except using the appropriate example code):\r\n\r\n```\r\n""""""Crystal Graph Convolutional Neural Network (CGCNN).\r\nThis model takes arbitary crystal structures as an input, and predict material properties\r\nusing the element information and connection of atoms in the crystal. If you want to get\r\n...\r\n```\r\n\r\nThat way it just tells the user what this class is (a CGCNN) and tells them how to use it, but doesn\'t confuse them with implementation details that aren\'t relevant to them.', 'comment_created': datetime.datetime(2020, 8, 18, 16, 42, 55, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 472336883, 'comment_body': ""You don't need to list all the arguments individually.  That list will quickly get out of date as we add or change arguments to TorchModel.  Instead you can just add a single line at the top of the docstring:\r\n\r\n> In addition to the following arguments, this class also accepts all the keyword arguments from TorchModel."", 'comment_created': datetime.datetime(2020, 8, 18, 16, 46, 29, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 472594940, 'comment_body': 'OK! But, could I make the another PR  for PyTroch models docs...?', 'comment_created': datetime.datetime(2020, 8, 19, 2, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 472595518, 'comment_body': 'I changed the correct statement!', 'comment_created': datetime.datetime(2020, 8, 19, 2, 16, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 472596048, 'comment_body': 'Oh, sorry. I misunderstood your comment. I fixed the docstring.', 'comment_created': datetime.datetime(2020, 8, 19, 2, 17, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 473177699, 'comment_body': 'Sounds good!', 'comment_created': datetime.datetime(2020, 8, 19, 16, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}]","[{'commit_sha': '264516f7601ca637086caf5c59d8df595f291b94', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '057378d88801f5185a7df67dcbae941ca86974d0', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86f81b8b6ded450e54fdc396d2262fadb9e30058', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29f15178fb4a2665f5ea034dbf866ad5047db324', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1234009058a9425b2d60bd0fd4e1b7de2d0d6925', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3068f62e676dc5fae51c1a8de314786c6833f6a3', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc8cd6a3c065edce4b881ddd88bbfd383216814d', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fe09cd6d1b6cd362c15d3963238f5abc4cac06a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e575fbb57c4d4cc6ee0818ddc1e46937e094bb9', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e42c156e8724cf9bdd8267e1473567b991152065', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f1dd3feb74dba274664a09869d578ca6d1f9efd', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f41de198f399bc8868917f110fa0c26e6b627893', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0eaec579524a71573c2dd0f6447685ec84644b65', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ceda0bfff0d7aadfd2534735fd3f3b071fe7012', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0242f047a2845bfe4b567769f21969091f05002', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efea464e9b83f688f0853595c40d22bfc1a20a84', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
471371779,Implement sample GAT model for working PyG with DeepChem,"This PR is a part of #1942 

## What I did

- Create the new molecule graph convolution featurizer using GraphData.
  - The new featurizer return a basic atom features and bond features like GCN, MPNN.
    - The present graph conv features have some values of nodes and edges which the paper like WeaveNet, MEGNet, MPNN didn't mention
   - Create `utils/graph_conv_utils.py`  and the featurizer is more readable and customizable for users
- Create a sample GAT model
  -  This model is an example of working DeepChem with PyTorch Geometric

## TODO

- [x] Add more docstrings
- [x] Add more tests (mainly, all functions in `utils/graph_conv_utils.py`)

I will make another PR. 
- [ ] Debug the problem that my GAT model show the too low score of the overfit tests compared with present TF GraphConvModel
- [ ] Add mode args for GATModel like #2123 
",True,2109,https://api.github.com/repos/deepchem/deepchem/pulls/2109,https://github.com/deepchem/deepchem/pull/2109,closed,1328,30,17,16,6,25,0,0,[],2020-08-21 04:34:47+00:00,2020-09-02 02:00:03+00:00,1027516.0,"11 days, 21:25:16","[{'comment_id': 476111375, 'comment_body': 'typo: Should be `construct_atom_feature`.', 'comment_created': datetime.datetime(2020, 8, 25, 3, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 476111614, 'comment_body': 'Should we perhaps make this return an numpy array instead of a list?', 'comment_created': datetime.datetime(2020, 8, 25, 3, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 476111998, 'comment_body': 'Perhaps add a hyperlink to the weave paper in the references section below', 'comment_created': datetime.datetime(2020, 8, 25, 3, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 476115072, 'comment_body': 'Typo: Should be construct for both of these', 'comment_created': datetime.datetime(2020, 8, 25, 3, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 478470654, 'comment_body': 'Is there any reasons? I think this function are basically not used in other place. (Currently, this I added the underscore to this function name like `_ construct_atom_feature `)', 'comment_created': datetime.datetime(2020, 8, 27, 14, 40, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 478613693, 'comment_body': 'I think you mean the size of the ring?  Not many atoms belong to three rings, much less eight!', 'comment_created': datetime.datetime(2020, 8, 27, 18, 27, 1, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 478615201, 'comment_body': ""Perhaps `add_self_edges` would be clearer?  This isn't really about loops, so the name could be confusing."", 'comment_created': datetime.datetime(2020, 8, 27, 18, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 478618730, 'comment_body': 'You probably want the variable to be called `dest` (short for destination?), not `dist` which sounds like it\'s short for ""distance""?', 'comment_created': datetime.datetime(2020, 8, 27, 18, 36, 34, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 478648605, 'comment_body': ""Wouldn't it be simpler to just write this as\r\n\r\n```\r\ntasks, datasets, transformers = dc.molnet.load_tox21(reload=False, featurizer=featurizer, transformers=[])\r\n```"", 'comment_created': datetime.datetime(2020, 8, 27, 19, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 478649817, 'comment_body': 'For consistency with other models, this should be just `dropout`.', 'comment_created': datetime.datetime(2020, 8, 27, 19, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 478650179, 'comment_body': 'Was that supposed to be ""predictor""?', 'comment_created': datetime.datetime(2020, 8, 27, 19, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 478714048, 'comment_body': ""This file doesn't really have anything to do with convolutions.  How about calling it `molecule_feature_utils.py`?"", 'comment_created': datetime.datetime(2020, 8, 27, 21, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 478788626, 'comment_body': 'I fixed!', 'comment_created': datetime.datetime(2020, 8, 28, 1, 57, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 478788635, 'comment_body': 'Yes. I fixed!', 'comment_created': datetime.datetime(2020, 8, 28, 1, 57, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 478788649, 'comment_body': 'I fixed!', 'comment_created': datetime.datetime(2020, 8, 28, 1, 57, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 478788667, 'comment_body': 'This is short for destination. I fixed!', 'comment_created': datetime.datetime(2020, 8, 28, 1, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 478788688, 'comment_body': 'I agreed! I fixed.', 'comment_created': datetime.datetime(2020, 8, 28, 1, 58, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 478788697, 'comment_body': 'Yes! I fixed.', 'comment_created': datetime.datetime(2020, 8, 28, 1, 58, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 479058245, 'comment_body': 'I fixed!', 'comment_created': datetime.datetime(2020, 8, 28, 10, 0, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 479739844, 'comment_body': 'This implementation is needed to resolve the Windows CI. This is referred #1829. __repr__ function shows all arguments when instantiating a class. __str__ function shows just updated arguments when instantiating a class.', 'comment_created': datetime.datetime(2020, 8, 30, 8, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 480501694, 'comment_body': 'This is awesome! We should add `__repr__` methods to all our featurizers :)', 'comment_created': datetime.datetime(2020, 9, 1, 0, 36, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 480503656, 'comment_body': 'typo: ""general graph convolution""', 'comment_created': datetime.datetime(2020, 9, 1, 0, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 480669797, 'comment_body': 'I fixed!', 'comment_created': datetime.datetime(2020, 9, 1, 3, 5, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 480675391, 'comment_body': ""> We should add __repr__ methods to all our featurizers :)\r\n\r\nI think we don't need to do this. This is because these implementation is put on the `Featurizer` class.\r\nSo, this implementation is valid for all featurizers except featurizers inherited ComplexFeaturizer.\r\n(ComplexFeaturizer doesn't inherit Featurizer, but we should fix this)"", 'comment_created': datetime.datetime(2020, 9, 1, 3, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 481334655, 'comment_body': ""Ah you're right! "", 'comment_created': datetime.datetime(2020, 9, 1, 18, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}]","[{'commit_sha': '3892a54a59898947ce6c589ab7088d5207ecad72', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b26de50a256e96ad040c5fc38689ab92d791b7ae', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a7996a56c836f1c551e3daf931cbd785decc14a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c02779bd3eacb7fc424e0244cd9769389bdfb40e', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '313d3a6047d4a636bf7788f2d46ebe20fea0c709', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00fc4ed92ebc1c48b9bc103beb5be27137b5d8b1', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5870f9a1efd5b491341c5fecaffe6c221e4f30c8', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47835b4058592c1ab325bfb8757b0fee37c3a649', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ef32ec1361bb3bcd0db1ffa04a92246f2f107d3', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90f13f65744c30e5c699e692a1fc15da3234c2f8', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f01a80035db25cf4459570db9e722fb248a8c95e', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '921c8c1cf19cd00bd4d3ecaafc9d669b105c6cec', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97f5d2dfae755bb081d2dac314cd9d1ad38b9876', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b504f62a0c688647ba98e5321fc9825a46efe977', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60a12f60fdddd77d76120ba6e062291d737940ad', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7b56fa37cb8d374d1b4e568ea9fbf2774c569c8', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
438285732,Update docker doc,"I update docker environments. (I stop having separate images)
 
 - deepchemio/deepchem:x.x.x
   - Image built by `docker/conda-forge/Dockerfile`
   - This image is built when we push x.x.x. tag
 - deepchemio/deepchem:latest
   - Image built by `docker/master/Dockerfile`
   - This image is built every time we commit to the master branch


I can not check the docker env with GPU. After I checking it, this PR is ready to merge (I will check it in this weekend)",True,1917,https://api.github.com/repos/deepchem/deepchem/pulls/1917,https://github.com/deepchem/deepchem/pull/1917,closed,106,44,6,11,5,1,0,0,[],2020-06-23 03:04:08+00:00,2020-06-29 04:56:26+00:00,525138.0,"6 days, 1:52:18","[{'comment_id': 443935632, 'comment_body': 'I fixed the TF version.', 'comment_created': datetime.datetime(2020, 6, 23, 3, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}]","[{'commit_sha': '1a189ddf4df67d44531778ec4d390f91a092798a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a23aa1a5ec19dc1fb436ad07fe7a3cf69322583', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c98f36df1c582d1d8496e8494536dab83b947059', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '589a766f8b7c2287960118b90badfbbb1bacc7d1', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68c67ad2e4100e950247b12847565d973dbfc99b', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '742cc75f6e02431f5a14eb2b0ba42e82b569f7d9', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de73fd931583e6400f88f52f34fb28d766bdbbf2', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a354e7f27607ee6e5dc5e23add060df81c881b16', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0684ecbd7cd6e70c0c25535084133ff9752f718', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f965bb8f23310fcd065f20f56bc0f05e5224572', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adff427ef4d04dc88881ee592f7fc9044e09c17b', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
446324196,Fix pip publish,"This PR is related to https://github.com/deepchem/deepchem/issues/1955#issuecomment-653747705

This PR cleanup the installation docs considering about easier installation and stop to build the deepchem-nightly package.

First, the current README is too long description. So, I've simplified the installation guide.
I think the README is more friendly for many users by this modification.

Next, the deepchem-nightly package is published as a pre-release.
So, I think the correct install command is the following. We need to add a `--pre` flag.
(`pip install deepchem-nightly` is not correct) 

```
pip install --pre deepchem-nightly
```

And, if we continue to use a pre-release publish, I think the deepchem-nightly is not needed. 
I think we should publish pre release deepchem (2.4.0.rc.dev....) as a nightly version. This is better compared with publishing two packages in the terms of maintenance cost. 

So, I think pre-release package was installed by this commands.

```
pip install --pre deepchem
```

Please confirm the pre-release https://pip.pypa.io/en/stable/reference/pip_install/#pre-release-versions",True,1986,https://api.github.com/repos/deepchem/deepchem/pulls/1986,https://github.com/deepchem/deepchem/pull/1986,closed,105,151,4,6,2,0,0,0,[],2020-07-08 15:36:14+00:00,2020-07-08 20:33:36+00:00,17842.0,4:57:22,[],"[{'commit_sha': '1d72ef45f5efa7e45a808ed292985416cf397510', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edc63c448c3781611ef25525e71c4f920cb33c26', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e5bb0e837dd1de91d0ac4608b9eebad1aa67950', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80f12d22728fee55764680062239aa396c1f67d2', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ecd9b376e47ce5a8824a6393e3899c49d0cc6cb', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c50693b9cca11c34f7b4351d4354a3f42f22abc3', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
452959876,Improve type of some utils function,"I improve the type annotation and file name in `deepchem.utils` except `conformers.py`, `evaluate.py`, `rdkit_util.py` and `save.py`

I will make an another PR about `conformers.py`, `evaluate.py`, `rdkit_util.py` and `save.py`. ",True,2031,https://api.github.com/repos/deepchem/deepchem/pulls/2031,https://github.com/deepchem/deepchem/pull/2031,closed,570,410,29,5,2,4,0,0,[],2020-07-20 02:13:09+00:00,2020-07-21 17:43:39+00:00,142230.0,"1 day, 15:30:30","[{'comment_id': 457770438, 'comment_body': 'Could you add in\r\n```\r\n.. autofunction:: deepchem.utils.genomic_utils.encode_fasta_sequence\r\n```\r\n', 'comment_created': datetime.datetime(2020, 7, 21, 0, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 457824741, 'comment_body': 'This file is out-of-date. I removed.', 'comment_created': datetime.datetime(2020, 7, 21, 4, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 457826257, 'comment_body': 'I think the `encode_fasta_sequence ` is alomost same API as `encode_bio_sequence`. So, I removed it. For the backward compatibility, I export `encode_fasta_sequence` from `deepchem/utils/save.py`\r\n\r\nIf you think it is better to export  `encode_fasta_sequence `, I will fix this point 🙆\u200d♂️ ', 'comment_created': datetime.datetime(2020, 7, 21, 4, 17, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 458276766, 'comment_body': 'Ah that makes sense! Should be all good then :)', 'comment_created': datetime.datetime(2020, 7, 21, 17, 43, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}]","[{'commit_sha': 'ee7baea03a65d507b9a2a872c4b1c3d24e92b62a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77a74ac285bdb72a7d4ea3555d9ced10248cede8', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bec9a6b48590e2bdb29c3bf62f0b26cb86017cb7', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5231d757be69972864239254a7c660520dd05530', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6621447bdc0be29fb93d868e4acebe855c5ea989', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
451760571,add flake8 and improve type annotation in dc.hyper and dc.dock,"## What I did

- [x] add flake8 
  - Linter keeps our codes more healthy
- [x] fix flake8 error in dc.hyper and dc.dock
- [x] add type annotation in dc.hyper and dc.dock

",True,2027,https://api.github.com/repos/deepchem/deepchem/pulls/2027,https://github.com/deepchem/deepchem/pull/2027,closed,546,480,21,15,2,16,0,0,[],2020-07-18 07:02:24+00:00,2020-07-19 17:55:04+00:00,125560.0,"1 day, 10:52:40","[{'comment_id': 456800760, 'comment_body': ""`get_contact_atom_indices` 's annotation is float. So, I changed. \r\nThis modification is correct...?"", 'comment_created': datetime.datetime(2020, 7, 18, 15, 33, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456801520, 'comment_body': 'This line may be a bug.`ComplexFeaturizer` should takes two arguments. \r\nHow should I fix...?\r\n\r\n```python\r\n# original\r\nself.featurizer.featurize([molecular_complex])\r\n\r\n# correct....?\r\nself.featurizer.featurize([molecular_complex], [posed_complex])\r\n```\r\n', 'comment_created': datetime.datetime(2020, 7, 18, 15, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456802165, 'comment_body': 'This type annotation is correct ...?\r\nWhen seeing the `test_coordinate_box_utils.py `,  these arguments are float...\r\nhttps://github.com/deepchem/deepchem/blob/ffad1a75997bb79360751b2a5fcf3b3405f3c44e/deepchem/utils/test/test_coordinate_box_utils.py#L85', 'comment_created': datetime.datetime(2020, 7, 18, 15, 49, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456803985, 'comment_body': 'The original code may be bug... Is it correct...?', 'comment_created': datetime.datetime(2020, 7, 18, 16, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456804372, 'comment_body': 'Stop inheritng the Featurizer class because of type consistency. But, I think ComplexFeaturizer also should take one arguments like Featurizer.\r\n\r\nIn my image \r\n\r\n\r\n```python\r\n\r\n\r\nclass ComplexFeaturizer(Featurizer):\r\n  def featurize(self, molecule_complexes: Iterable[Tuple[str, str]]):\r\n    # some implementation\r\n\r\n  def _featurize(self, molecule_complex: Tuple[str, str]):\r\n    mol_file, protein_pdbs = molecule_complex\r\n    # some implementation\r\n```', 'comment_created': datetime.datetime(2020, 7, 18, 16, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456832200, 'comment_body': 'Yes this should be right!', 'comment_created': datetime.datetime(2020, 7, 18, 22, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456835993, 'comment_body': ""Yep, agreed that we should fix the type consistency issue. I think conceptually, `ComplexFeaturizer` should inherit from `Featurizer`, but given the current inconsistency in the method signature it's fine to change the superclass to make mypy pass.\r\n\r\n+1 for changing this to have a matching type signature that takes one argument. I'll make both of these changes in a subsequent PR."", 'comment_created': datetime.datetime(2020, 7, 18, 22, 55, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456836148, 'comment_body': 'Good addition! Could you also add a `Note` noting the dependency on `pyGPGO` to the docstring?', 'comment_created': datetime.datetime(2020, 7, 18, 22, 58, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456836244, 'comment_body': 'Could you make these types `Tuple[float, float]`?', 'comment_created': datetime.datetime(2020, 7, 18, 22, 59, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456836274, 'comment_body': 'Can you make these `float` instead of `int`?', 'comment_created': datetime.datetime(2020, 7, 18, 23, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456836336, 'comment_body': 'Ah good catch! This was a bug in the original code', 'comment_created': datetime.datetime(2020, 7, 18, 23, 0, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456836656, 'comment_body': 'Could you change `pad` to type `float`? ', 'comment_created': datetime.datetime(2020, 7, 18, 23, 5, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 456874522, 'comment_body': 'DONE!', 'comment_created': datetime.datetime(2020, 7, 19, 7, 45, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456874808, 'comment_body': 'mypy taught me this bug!  Introducing type annotation leads to solve the potential bug.', 'comment_created': datetime.datetime(2020, 7, 19, 7, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456875032, 'comment_body': ""> I think conceptually, ComplexFeaturizer should inherit from Featurizer\r\n\r\nI agreed! \r\n\r\n> I'll make both of these changes in a subsequent PR.\r\n\r\nThanks!"", 'comment_created': datetime.datetime(2020, 7, 19, 7, 50, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 456875096, 'comment_body': 'DONE!', 'comment_created': datetime.datetime(2020, 7, 19, 7, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}]","[{'commit_sha': '215fbb3fed12ae5f4af403a32def4bba6d40d2cc', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbd625aeae48d33b7cebdf6fedb03f2218376a41', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58e0d75226af23acb659430345d3c3891babf236', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ab1b5178c33d741255e6ce5b249417fae705a81', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e42d3c738ffee2bb897d5e4448afd8e570de08a3', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '774156f96624de5b598bf30854931ad3f0f5eed4', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '762927e38cb0d8342bc2ce18619f50e4aac9a7da', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '628d726e260b65e78fe371cd0d1f1b8640d937e6', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3d5e0e7c4ce884a3a6b85bb34eb7db491e2403a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5c45a34a39f28f41977071bd256d77eeb50a8b2', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b12d28d05986b24d224343192f69129d1b5f393e', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '600d5f2cdb5edba463c3af4458c56848c59b2137', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c1ba8197c97f362cfac50901daee34579d6f412', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7ccd51d010c86f37be0b3d67b07624ee1446a68', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f9b3cd5ac664e3dcbbb6dbece610bcf2d959b3d', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
468456770,Add type annotation in metrics ,This PR didn't change any logic in `deepchem.metrics`,True,2098,https://api.github.com/repos/deepchem/deepchem/pulls/2098,https://github.com/deepchem/deepchem/pull/2098,closed,1010,920,9,7,1,0,0,0,[],2020-08-16 15:10:15+00:00,2020-08-18 07:23:33+00:00,144798.0,"1 day, 16:13:18",[],"[{'commit_sha': '9d454677891571c09c39f2947f4a0651634b8688', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e7f39bc078bde89acec5068dbd45bae7b66a003', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d7902a452f6178b5496261889a45c2c52996f8a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c06a4ca9e9394f59c528b677b590dbc107ca31c', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '796abfc281f058394951190fac17f38b64df05ab', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99911a56e10def2e2d603339e518e5f3d66f3057', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30422b815c134fde1bff4b1f830f6ad9002672c7', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
469937262,Update dataset docstrings,"## What I did

- Updated docstrings in dataset classes (80% of diff)
- Replaced `get_image` function to `ImageLoader. _get_image`.
  - This is because  `get_image` is defined in a many places of ImageLoader.
- Removed flake8 error in dataset test and support.py files.",True,2105,https://api.github.com/repos/deepchem/deepchem/pulls/2105,https://github.com/deepchem/deepchem/pull/2105,closed,554,402,13,9,3,11,0,0,[],2020-08-19 05:51:13+00:00,2020-08-24 22:15:43+00:00,491070.0,"5 days, 16:24:30","[{'comment_id': 473266001, 'comment_body': 'Why remove this?', 'comment_created': datetime.datetime(2020, 8, 19, 19, 23, 11, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 473266757, 'comment_body': 'Why remove the example?', 'comment_created': datetime.datetime(2020, 8, 19, 19, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 473270311, 'comment_body': 'How about, ""A Dataset containing the selected samples""?', 'comment_created': datetime.datetime(2020, 8, 19, 19, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 473271815, 'comment_body': 'The transformed dataset is a NumpyDataset, not an ImageDataset.', 'comment_created': datetime.datetime(2020, 8, 19, 19, 34, 26, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 473272109, 'comment_body': 'This is incorrect.  `transform_array()` returns numpy arrays.', 'comment_created': datetime.datetime(2020, 8, 19, 19, 35, tzinfo=datetime.timezone.utc), 'commenter': 'peastman', 'type': 'User'}, {'comment_id': 474428245, 'comment_body': 'OK. I revert this modification', 'comment_created': datetime.datetime(2020, 8, 21, 6, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 474428293, 'comment_body': 'OK. I revert this modification', 'comment_created': datetime.datetime(2020, 8, 21, 6, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 474428412, 'comment_body': 'I fixed using it!', 'comment_created': datetime.datetime(2020, 8, 21, 6, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 474428483, 'comment_body': 'I revert this modification', 'comment_created': datetime.datetime(2020, 8, 21, 6, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 474428511, 'comment_body': 'I revert this modification', 'comment_created': datetime.datetime(2020, 8, 21, 6, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 474441056, 'comment_body': 'The fix is related to the new version release of DGL. (DGL. 0.5.0 released today). I seem the master branch CI also failed.', 'comment_created': datetime.datetime(2020, 8, 21, 6, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}]","[{'commit_sha': '51bca11614633b36831972eb6afc12b471dd3a35', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc183c2adfff361c7b7cb15cdb68563716dfc0a5', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb98cada70d86da2fa09df8494853461bca85c52', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f755437c093def2be40210b94fb7225a973657a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e83ad2981ff170411795882ecde5d67d66e4731a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87bf44e5c9ffb1b3f5a156c6fa0a09c167c2bfce', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c8f339f71b6e17b1fe425424d37f4be3ea14a8a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '277fc976b684ebd2d2fcc074ee210c0975eb637b', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a8abbb378f91a2fb6ec39426652614ca3bf758b', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
469585121,Update docstrings in data loader classes,"## What I did

- Updated docstrings in data loader classes (80% of diff)
- Replaced `ImageLoader.load_img` to utility function `load_image_files`.
  - This is because  `load_img` is used in a many places and there are many `load_XXX_files` function in utils.
- Removed flake8 error in data loader test files.",True,2103,https://api.github.com/repos/deepchem/deepchem/pulls/2103,https://github.com/deepchem/deepchem/pull/2103,closed,241,237,9,3,3,1,0,0,[],2020-08-18 15:48:11+00:00,2020-08-19 01:02:17+00:00,33246.0,9:14:06,"[{'comment_id': 472356099, 'comment_body': 'This is a nice cleanup! Much slicker than the original helper function', 'comment_created': datetime.datetime(2020, 8, 18, 17, 16, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}]","[{'commit_sha': 'b2851cadc95a61dfec599605e1bce270ec058a3a', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c87e8e0d78517e0c9bdd41d000a01a5f39b9d86', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6604d60b94b7c1bec66c3bb21d5fa50d7bc2e053', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
425127369,install script for Google Colab,I created deepchem install script for Google Colab,True,1870,https://api.github.com/repos/deepchem/deepchem/pulls/1870,https://github.com/deepchem/deepchem/pull/1870,closed,99,0,1,3,3,0,0,0,[],2020-05-29 14:07:31+00:00,2020-05-29 23:31:50+00:00,33859.0,9:24:19,[],"[{'commit_sha': '394b4e07014c5ade34531555577bf6253d3a5b1f', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8860810f9643b5647402ac2ff774245d18c08924', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aab9e70638878e7927ad8da95ab209800174473f', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71
462870969,Update install scripts,"I fix the `scripts/colab_install.py`.  `colab_install.py` will install only rdkit, openmm and pdbfixer. This is because other packages can be installed via pip.

The install command will be here.

```bash
!curl -Lo conda_installer.py https://raw.githubusercontent.com/deepchem/deepchem/master/scripts/colab_install.py
import conda_installer
conda_installer.install()
!/root/miniconda/bin/conda info -e
```

```bash
!pip install --pre deepchem
import deepchem
deepchem.__version__
```

All notebooks will switch to new commands until tomorrow.
",True,2066,https://api.github.com/repos/deepchem/deepchem/pulls/2066,https://github.com/deepchem/deepchem/pull/2066,closed,3424,4943,22,3,4,3,0,0,[],2020-08-04 16:21:52+00:00,2020-08-06 03:04:48+00:00,124976.0,"1 day, 10:42:56","[{'comment_id': 465893286, 'comment_body': ""As a quick note, I think Google colab now requires python 3.7 to be specified for rdkit (https://stackoverflow.com/questions/63152656/installing-rdkit-in-google-colab). (Since Python 3.8 doesn't work with rdkit). Should we explicitly update the installer to handle this?"", 'comment_created': datetime.datetime(2020, 8, 5, 17, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}, {'comment_id': 466115286, 'comment_body': ""> because of the recent Google colab update to python 3.8\r\n\r\nI think the recent miniconda update to python 3.8. (not Google Colab, the python version of Google Colab is still 3.6.9)\r\n\r\n> Should we explicitly update the installer to handle this?\r\n\r\nI think we don't need. I didn't face the issue like stackoverflow by using the new command yesterday.\r\n\r\nThis script has installed python with the same version of Google Colab via conda since before. Please see the following codes. \r\n\r\nhttps://github.com/deepchem/deepchem/blob/4fde71e354a71c5a2fa8b9f733e4abc31ae26a71/scripts/colab_install.py#L89\r\nhttps://github.com/deepchem/deepchem/blob/4fde71e354a71c5a2fa8b9f733e4abc31ae26a71/scripts/colab_install.py#L114-L124"", 'comment_created': datetime.datetime(2020, 8, 6, 2, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nissy-dev', 'type': 'User'}, {'comment_id': 466117643, 'comment_body': 'Ok sounds good!', 'comment_created': datetime.datetime(2020, 8, 6, 3, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rbharath', 'type': 'User'}]","[{'commit_sha': 'b399a20d5f7b9bc31fee651f270dffb94814b674', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d85d474f3425f8c6a3d3b5b929a0ad291bb450f', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9314f5c94c7223c54177cca75dab401352d69370', 'committer_username': 'nissy-dev', 'committer_name': 'Daiki Nishikawa', 'committer_email': 'nd.12021218@gmail.com', 'commit_date': datetime.datetime(2016, 2, 14, 2, 39, tzinfo=datetime.timezone.utc)}]",Daiki Nishikawa,17228098,nd.12021218@gmail.com,User,,83,,17,71

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43098215,deepchem,deepchem/deepchem,Python,1649,5357,144,247,10527,621,15,162,"[{'id': 580859798, 'number': 2415, 'closed': datetime.datetime(2021, 2, 26, 21, 10, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 26, 13, 22, 4, tzinfo=datetime.timezone.utc), 'time_taken': 28109.0, 'time_delta': '7:48:29', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 556092747, 'number': 2360, 'closed': datetime.datetime(2021, 1, 19, 0, 9, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 16, 7, 29, 22, tzinfo=datetime.timezone.utc), 'time_taken': 232806.0, 'time_delta': '2 days, 16:40:06', 'additions': 94, 'deletions': 38, 'state': 'closed'}, {'id': 555717737, 'number': 2358, 'closed': datetime.datetime(2021, 1, 16, 0, 5, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 15, 14, 0, 49, tzinfo=datetime.timezone.utc), 'time_taken': 36270.0, 'time_delta': '10:04:30', 'additions': 40, 'deletions': 45, 'state': 'closed'}, {'id': 546128425, 'number': 2342, 'closed': datetime.datetime(2021, 1, 20, 5, 54, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 28, 15, 9, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1953944.0, 'time_delta': '22 days, 14:45:44', 'additions': 415, 'deletions': 317, 'state': 'closed'}, {'id': 546081687, 'number': 2341, 'closed': datetime.datetime(2020, 12, 29, 3, 48, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 28, 12, 52, 25, tzinfo=datetime.timezone.utc), 'time_taken': 53793.0, 'time_delta': '14:56:33', 'additions': 254, 'deletions': 204, 'state': 'closed'}, {'id': 545996959, 'number': 2339, 'closed': datetime.datetime(2020, 12, 29, 2, 30, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 28, 8, 41, 45, tzinfo=datetime.timezone.utc), 'time_taken': 64104.0, 'time_delta': '17:48:24', 'additions': 0, 'deletions': 1685, 'state': 'closed'}, {'id': 543838298, 'number': 2335, 'closed': datetime.datetime(2020, 12, 22, 7, 50, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 22, 3, 14, 3, tzinfo=datetime.timezone.utc), 'time_taken': 16596.0, 'time_delta': '4:36:36', 'additions': 31, 'deletions': 23, 'state': 'closed'}, {'id': 543076064, 'number': 2331, 'closed': datetime.datetime(2020, 12, 22, 1, 44, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 20, 14, 27, 53, tzinfo=datetime.timezone.utc), 'time_taken': 127005.0, 'time_delta': '1 day, 11:16:45', 'additions': 13, 'deletions': 6, 'state': 'closed'}, {'id': 538939701, 'number': 2322, 'closed': datetime.datetime(2020, 12, 15, 5, 47, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 13, 12, 0, 38, tzinfo=datetime.timezone.utc), 'time_taken': 150387.0, 'time_delta': '1 day, 17:46:27', 'additions': 109, 'deletions': 35, 'state': 'closed'}, {'id': 538916422, 'number': 2321, 'closed': datetime.datetime(2020, 12, 15, 3, 21, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 13, 8, 49, 1, tzinfo=datetime.timezone.utc), 'time_taken': 153172.0, 'time_delta': '1 day, 18:32:52', 'additions': 93, 'deletions': 25, 'state': 'closed'}, {'id': 518955368, 'number': 2294, 'closed': datetime.datetime(2020, 12, 20, 0, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 11, 5, 26, 43, tzinfo=datetime.timezone.utc), 'time_taken': 3350537.0, 'time_delta': '38 days, 18:42:17', 'additions': 696, 'deletions': 371, 'state': 'closed'}, {'id': 517326013, 'number': 2290, 'closed': datetime.datetime(2020, 11, 8, 15, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 8, 15, 44, 15, tzinfo=datetime.timezone.utc), 'time_taken': 45.0, 'time_delta': '0:00:45', 'additions': 447, 'deletions': 231, 'state': 'closed'}, {'id': 516116266, 'number': 2284, 'closed': datetime.datetime(2020, 11, 19, 4, 48, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 5, 14, 48, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1173574.0, 'time_delta': '13 days, 13:59:34', 'additions': 394, 'deletions': 220, 'state': 'closed'}, {'id': 516093106, 'number': 2283, 'closed': datetime.datetime(2020, 11, 5, 20, 22, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 5, 14, 16, 31, tzinfo=datetime.timezone.utc), 'time_taken': 21970.0, 'time_delta': '6:06:10', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 513575143, 'number': 2264, 'closed': datetime.datetime(2020, 11, 2, 3, 51, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 1, 7, 35, 21, tzinfo=datetime.timezone.utc), 'time_taken': 72990.0, 'time_delta': '20:16:30', 'additions': 116, 'deletions': 114, 'state': 'closed'}, {'id': 512836470, 'number': 2261, 'closed': datetime.datetime(2020, 10, 30, 14, 8, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 30, 8, 24, 31, tzinfo=datetime.timezone.utc), 'time_taken': 20647.0, 'time_delta': '5:44:07', 'additions': 232, 'deletions': 1869, 'state': 'closed'}, {'id': 512791463, 'number': 2260, 'closed': datetime.datetime(2020, 10, 30, 8, 24, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 30, 6, 35, 43, tzinfo=datetime.timezone.utc), 'time_taken': 6547.0, 'time_delta': '1:49:07', 'additions': 243, 'deletions': 1871, 'state': 'closed'}, {'id': 512727537, 'number': 2259, 'closed': datetime.datetime(2020, 10, 30, 3, 11, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 30, 3, 9, 9, tzinfo=datetime.timezone.utc), 'time_taken': 170.0, 'time_delta': '0:02:50', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 512104252, 'number': 2257, 'closed': datetime.datetime(2020, 11, 3, 10, 7, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 29, 8, 28, 30, tzinfo=datetime.timezone.utc), 'time_taken': 437954.0, 'time_delta': '5 days, 1:39:14', 'additions': 541, 'deletions': 429, 'state': 'closed'}, {'id': 511416461, 'number': 2255, 'closed': datetime.datetime(2020, 11, 4, 1, 28, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 28, 9, 49, 52, tzinfo=datetime.timezone.utc), 'time_taken': 574692.0, 'time_delta': '6 days, 15:38:12', 'additions': 22, 'deletions': 4, 'state': 'closed'}, {'id': 510561344, 'number': 2252, 'closed': datetime.datetime(2020, 10, 30, 7, 17, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 27, 8, 12, 19, tzinfo=datetime.timezone.utc), 'time_taken': 255903.0, 'time_delta': '2 days, 23:05:03', 'additions': 41, 'deletions': 16, 'state': 'closed'}, {'id': 508061162, 'number': 2243, 'closed': datetime.datetime(2020, 10, 30, 7, 13, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 22, 6, 49, 54, tzinfo=datetime.timezone.utc), 'time_taken': 692643.0, 'time_delta': '8 days, 0:24:03', 'additions': 171, 'deletions': 0, 'state': 'closed'}, {'id': 508032096, 'number': 2242, 'closed': datetime.datetime(2020, 10, 30, 7, 15, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 22, 5, 50, 12, tzinfo=datetime.timezone.utc), 'time_taken': 696300.0, 'time_delta': '8 days, 1:25:00', 'additions': 5, 'deletions': 24, 'state': 'closed'}, {'id': 507941231, 'number': 2240, 'closed': datetime.datetime(2020, 10, 30, 7, 30, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 22, 0, 42, 7, tzinfo=datetime.timezone.utc), 'time_taken': 715726.0, 'time_delta': '8 days, 6:48:46', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 507344271, 'number': 2238, 'closed': datetime.datetime(2020, 10, 21, 17, 27, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 21, 8, 12, 22, tzinfo=datetime.timezone.utc), 'time_taken': 33331.0, 'time_delta': '9:15:31', 'additions': 123, 'deletions': 12, 'state': 'closed'}, {'id': 504665661, 'number': 2227, 'closed': datetime.datetime(2020, 10, 23, 8, 17, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 16, 8, 2, 31, tzinfo=datetime.timezone.utc), 'time_taken': 605720.0, 'time_delta': '7 days, 0:15:20', 'additions': 74, 'deletions': 77, 'state': 'closed'}, {'id': 503249883, 'number': 2216, 'closed': datetime.datetime(2020, 10, 14, 16, 45, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 14, 9, 49, 29, tzinfo=datetime.timezone.utc), 'time_taken': 24974.0, 'time_delta': '6:56:14', 'additions': 12, 'deletions': 11, 'state': 'closed'}, {'id': 503244867, 'number': 2215, 'closed': datetime.datetime(2020, 10, 21, 7, 44, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 14, 9, 40, 45, tzinfo=datetime.timezone.utc), 'time_taken': 597846.0, 'time_delta': '6 days, 22:04:06', 'additions': 502, 'deletions': 313, 'state': 'closed'}, {'id': 492131128, 'number': 2186, 'closed': datetime.datetime(2020, 9, 25, 6, 27, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 24, 1, 43, 52, tzinfo=datetime.timezone.utc), 'time_taken': 103445.0, 'time_delta': '1 day, 4:44:05', 'additions': 148, 'deletions': 162, 'state': 'closed'}, {'id': 491873760, 'number': 2184, 'closed': datetime.datetime(2020, 9, 25, 6, 31, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 23, 15, 43, 56, tzinfo=datetime.timezone.utc), 'time_taken': 139659.0, 'time_delta': '1 day, 14:47:39', 'additions': 157, 'deletions': 146, 'state': 'closed'}, {'id': 488373767, 'number': 2177, 'closed': datetime.datetime(2020, 9, 18, 6, 17, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 17, 3, 12, 15, tzinfo=datetime.timezone.utc), 'time_taken': 97535.0, 'time_delta': '1 day, 3:05:35', 'additions': 21, 'deletions': 7, 'state': 'closed'}, {'id': 488347378, 'number': 2176, 'closed': datetime.datetime(2020, 9, 17, 2, 42, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 17, 1, 32, 13, tzinfo=datetime.timezone.utc), 'time_taken': 4236.0, 'time_delta': '1:10:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 486186047, 'number': 2165, 'closed': datetime.datetime(2020, 9, 17, 2, 41, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 13, 13, 58, 27, tzinfo=datetime.timezone.utc), 'time_taken': 304956.0, 'time_delta': '3 days, 12:42:36', 'additions': 357, 'deletions': 192, 'state': 'closed'}, {'id': 486185198, 'number': 2164, 'closed': datetime.datetime(2020, 9, 13, 23, 35, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 13, 13, 52, 48, tzinfo=datetime.timezone.utc), 'time_taken': 34991.0, 'time_delta': '9:43:11', 'additions': 132, 'deletions': 103, 'state': 'closed'}, {'id': 485932166, 'number': 2163, 'closed': datetime.datetime(2020, 9, 12, 19, 27, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 12, 15, 11, 8, tzinfo=datetime.timezone.utc), 'time_taken': 15383.0, 'time_delta': '4:16:23', 'additions': 86, 'deletions': 49, 'state': 'closed'}, {'id': 482695772, 'number': 2157, 'closed': datetime.datetime(2020, 9, 9, 20, 27, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 9, 9, 19, 2, tzinfo=datetime.timezone.utc), 'time_taken': 40108.0, 'time_delta': '11:08:28', 'additions': 21, 'deletions': 155, 'state': 'closed'}, {'id': 479690470, 'number': 2147, 'closed': datetime.datetime(2020, 10, 14, 12, 14, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 4, 13, 32, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3451331.0, 'time_delta': '39 days, 22:42:11', 'additions': 2, 'deletions': 87275, 'state': 'closed'}, {'id': 479336840, 'number': 2145, 'closed': datetime.datetime(2020, 9, 9, 23, 55, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 4, 6, 19, 22, tzinfo=datetime.timezone.utc), 'time_taken': 495381.0, 'time_delta': '5 days, 17:36:21', 'additions': 1045, 'deletions': 982, 'state': 'closed'}, {'id': 479225905, 'number': 2143, 'closed': datetime.datetime(2020, 9, 9, 2, 24, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 4, 3, 9, 37, tzinfo=datetime.timezone.utc), 'time_taken': 429275.0, 'time_delta': '4 days, 23:14:35', 'additions': 760, 'deletions': 617, 'state': 'closed'}, {'id': 478711217, 'number': 2138, 'closed': datetime.datetime(2020, 9, 17, 2, 34, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 3, 15, 25, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1163345.0, 'time_delta': '13 days, 11:09:05', 'additions': 157, 'deletions': 82, 'state': 'closed'}, {'id': 478532066, 'number': 2136, 'closed': datetime.datetime(2020, 9, 10, 0, 59, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 3, 10, 33, 9, tzinfo=datetime.timezone.utc), 'time_taken': 570381.0, 'time_delta': '6 days, 14:26:21', 'additions': 1329, 'deletions': 926, 'state': 'closed'}, {'id': 476828541, 'number': 2132, 'closed': datetime.datetime(2020, 9, 1, 18, 10, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 1, 5, 49, 43, tzinfo=datetime.timezone.utc), 'time_taken': 44428.0, 'time_delta': '12:20:28', 'additions': 6, 'deletions': 4, 'state': 'closed'}, {'id': 474649563, 'number': 2124, 'closed': datetime.datetime(2020, 10, 3, 7, 1, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 27, 11, 55, 24, tzinfo=datetime.timezone.utc), 'time_taken': 3179147.0, 'time_delta': '36 days, 19:05:47', 'additions': 185, 'deletions': 177, 'state': 'closed'}, {'id': 473267656, 'number': 2123, 'closed': datetime.datetime(2020, 8, 26, 16, 5, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 25, 14, 59, 42, tzinfo=datetime.timezone.utc), 'time_taken': 90320.0, 'time_delta': '1 day, 1:05:20', 'additions': 159, 'deletions': 119, 'state': 'closed'}, {'id': 472218424, 'number': 2118, 'closed': datetime.datetime(2020, 8, 24, 20, 18, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 2, 9, 48, tzinfo=datetime.timezone.utc), 'time_taken': 65339.0, 'time_delta': '18:08:59', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 471439888, 'number': 2110, 'closed': datetime.datetime(2020, 8, 28, 2, 40, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 6, 21, 34, tzinfo=datetime.timezone.utc), 'time_taken': 591553.0, 'time_delta': '6 days, 20:19:13', 'additions': 306, 'deletions': 290, 'state': 'closed'}, {'id': 471371779, 'number': 2109, 'closed': datetime.datetime(2020, 9, 2, 2, 0, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 4, 34, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1027516.0, 'time_delta': '11 days, 21:25:16', 'additions': 1328, 'deletions': 30, 'state': 'closed'}, {'id': 469937262, 'number': 2105, 'closed': datetime.datetime(2020, 8, 24, 22, 15, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 5, 51, 13, tzinfo=datetime.timezone.utc), 'time_taken': 491070.0, 'time_delta': '5 days, 16:24:30', 'additions': 554, 'deletions': 402, 'state': 'closed'}, {'id': 469585121, 'number': 2103, 'closed': datetime.datetime(2020, 8, 19, 1, 2, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 18, 15, 48, 11, tzinfo=datetime.timezone.utc), 'time_taken': 33246.0, 'time_delta': '9:14:06', 'additions': 241, 'deletions': 237, 'state': 'closed'}, {'id': 468922140, 'number': 2100, 'closed': datetime.datetime(2020, 8, 18, 6, 21, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 16, 2, 36, tzinfo=datetime.timezone.utc), 'time_taken': 51552.0, 'time_delta': '14:19:12', 'additions': 60, 'deletions': 27, 'state': 'closed'}, {'id': 468658072, 'number': 2099, 'closed': datetime.datetime(2020, 8, 18, 14, 10, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 7, 49, 30, tzinfo=datetime.timezone.utc), 'time_taken': 109278.0, 'time_delta': '1 day, 6:21:18', 'additions': 769, 'deletions': 630, 'state': 'closed'}, {'id': 468456770, 'number': 2098, 'closed': datetime.datetime(2020, 8, 18, 7, 23, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 16, 15, 10, 15, tzinfo=datetime.timezone.utc), 'time_taken': 144798.0, 'time_delta': '1 day, 16:13:18', 'additions': 1010, 'deletions': 920, 'state': 'closed'}, {'id': 468416222, 'number': 2097, 'closed': datetime.datetime(2020, 8, 17, 18, 55, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 16, 8, 32, 27, tzinfo=datetime.timezone.utc), 'time_taken': 123771.0, 'time_delta': '1 day, 10:22:51', 'additions': 118, 'deletions': 93, 'state': 'closed'}, {'id': 468270964, 'number': 2096, 'closed': datetime.datetime(2020, 8, 16, 6, 2, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 15, 6, 52, 1, tzinfo=datetime.timezone.utc), 'time_taken': 83402.0, 'time_delta': '23:10:02', 'additions': 48, 'deletions': 71, 'state': 'closed'}, {'id': 467440563, 'number': 2090, 'closed': datetime.datetime(2020, 8, 18, 8, 40, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 14, 57, 5, tzinfo=datetime.timezone.utc), 'time_taken': 409398.0, 'time_delta': '4 days, 17:43:18', 'additions': 292, 'deletions': 278, 'state': 'closed'}, {'id': 467433685, 'number': 2089, 'closed': datetime.datetime(2020, 8, 19, 23, 11, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 14, 46, 18, tzinfo=datetime.timezone.utc), 'time_taken': 548723.0, 'time_delta': '6 days, 8:25:23', 'additions': 405, 'deletions': 22, 'state': 'closed'}, {'id': 466610918, 'number': 2088, 'closed': datetime.datetime(2020, 8, 14, 3, 56, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 8, 30, 19, tzinfo=datetime.timezone.utc), 'time_taken': 156397.0, 'time_delta': '1 day, 19:26:37', 'additions': 208, 'deletions': 208, 'state': 'closed'}, {'id': 466462508, 'number': 2086, 'closed': datetime.datetime(2020, 8, 12, 22, 12, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 2, 22, 53, tzinfo=datetime.timezone.utc), 'time_taken': 71381.0, 'time_delta': '19:49:41', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 466227793, 'number': 2085, 'closed': datetime.datetime(2020, 8, 15, 6, 13, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 16, 48, 22, tzinfo=datetime.timezone.utc), 'time_taken': 307521.0, 'time_delta': '3 days, 13:25:21', 'additions': 21, 'deletions': 33, 'state': 'closed'}, {'id': 465962747, 'number': 2083, 'closed': datetime.datetime(2020, 8, 13, 18, 50, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 8, 48, 14, tzinfo=datetime.timezone.utc), 'time_taken': 208919.0, 'time_delta': '2 days, 10:01:59', 'additions': 47, 'deletions': 50, 'state': 'closed'}, {'id': 465860900, 'number': 2082, 'closed': datetime.datetime(2020, 8, 14, 3, 1, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 4, 45, 25, tzinfo=datetime.timezone.utc), 'time_taken': 252994.0, 'time_delta': '2 days, 22:16:34', 'additions': 203, 'deletions': 121, 'state': 'closed'}, {'id': 462870969, 'number': 2066, 'closed': datetime.datetime(2020, 8, 6, 3, 4, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 16, 21, 52, tzinfo=datetime.timezone.utc), 'time_taken': 124976.0, 'time_delta': '1 day, 10:42:56', 'additions': 3424, 'deletions': 4943, 'state': 'closed'}, {'id': 455627703, 'number': 2045, 'closed': datetime.datetime(2020, 8, 5, 17, 31, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 10, 51, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1147230.0, 'time_delta': '13 days, 6:40:30', 'additions': 700, 'deletions': 503, 'state': 'closed'}, {'id': 455202917, 'number': 2039, 'closed': datetime.datetime(2020, 7, 22, 18, 55, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 15, 46, 50, tzinfo=datetime.timezone.utc), 'time_taken': 11324.0, 'time_delta': '3:08:44', 'additions': 345, 'deletions': 271, 'state': 'closed'}, {'id': 454850560, 'number': 2038, 'closed': datetime.datetime(2020, 7, 22, 15, 43, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 3, 1, 41, tzinfo=datetime.timezone.utc), 'time_taken': 45696.0, 'time_delta': '12:41:36', 'additions': 914, 'deletions': 680, 'state': 'closed'}, {'id': 452959876, 'number': 2031, 'closed': datetime.datetime(2020, 7, 21, 17, 43, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 2, 13, 9, tzinfo=datetime.timezone.utc), 'time_taken': 142230.0, 'time_delta': '1 day, 15:30:30', 'additions': 570, 'deletions': 410, 'state': 'closed'}, {'id': 451760571, 'number': 2027, 'closed': datetime.datetime(2020, 7, 19, 17, 55, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 7, 2, 24, tzinfo=datetime.timezone.utc), 'time_taken': 125560.0, 'time_delta': '1 day, 10:52:40', 'additions': 546, 'deletions': 480, 'state': 'closed'}, {'id': 450339476, 'number': 2019, 'closed': datetime.datetime(2020, 7, 20, 3, 8, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 16, 44, 12, tzinfo=datetime.timezone.utc), 'time_taken': 296653.0, 'time_delta': '3 days, 10:24:13', 'additions': 933, 'deletions': 830, 'state': 'closed'}, {'id': 449907971, 'number': 2018, 'closed': datetime.datetime(2020, 7, 17, 21, 41, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 5, 25, 45, tzinfo=datetime.timezone.utc), 'time_taken': 144970.0, 'time_delta': '1 day, 16:16:10', 'additions': 98, 'deletions': 57, 'state': 'closed'}, {'id': 449860741, 'number': 2017, 'closed': datetime.datetime(2020, 7, 16, 19, 58, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 2, 59, 19, tzinfo=datetime.timezone.utc), 'time_taken': 61143.0, 'time_delta': '16:59:03', 'additions': 110, 'deletions': 351, 'state': 'closed'}, {'id': 449528259, 'number': 2012, 'closed': datetime.datetime(2020, 7, 19, 0, 20, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 14, 41, 29, tzinfo=datetime.timezone.utc), 'time_taken': 293940.0, 'time_delta': '3 days, 9:39:00', 'additions': 290, 'deletions': 0, 'state': 'closed'}, {'id': 449456359, 'number': 2011, 'closed': datetime.datetime(2020, 7, 15, 13, 26, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 12, 42, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2636.0, 'time_delta': '0:43:56', 'additions': 267, 'deletions': 418, 'state': 'closed'}, {'id': 447279061, 'number': 2002, 'closed': datetime.datetime(2020, 7, 10, 23, 21, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 7, 37, 3, tzinfo=datetime.timezone.utc), 'time_taken': 56657.0, 'time_delta': '15:44:17', 'additions': 41, 'deletions': 21, 'state': 'closed'}, {'id': 447226992, 'number': 2001, 'closed': datetime.datetime(2020, 7, 10, 6, 12, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 5, 8, 3, tzinfo=datetime.timezone.utc), 'time_taken': 3855.0, 'time_delta': '1:04:15', 'additions': 2, 'deletions': 4, 'state': 'closed'}, {'id': 447184381, 'number': 2000, 'closed': datetime.datetime(2020, 7, 10, 3, 29, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 2, 18, 28, tzinfo=datetime.timezone.utc), 'time_taken': 4278.0, 'time_delta': '1:11:18', 'additions': 8, 'deletions': 8, 'state': 'closed'}, {'id': 446381862, 'number': 1988, 'closed': datetime.datetime(2020, 7, 10, 1, 42, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 8, 17, 23, 37, tzinfo=datetime.timezone.utc), 'time_taken': 116329.0, 'time_delta': '1 day, 8:18:49', 'additions': 214, 'deletions': 114, 'state': 'closed'}, {'id': 446324196, 'number': 1986, 'closed': datetime.datetime(2020, 7, 8, 20, 33, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 8, 15, 36, 14, tzinfo=datetime.timezone.utc), 'time_taken': 17842.0, 'time_delta': '4:57:22', 'additions': 105, 'deletions': 151, 'state': 'closed'}, {'id': 446226280, 'number': 1983, 'closed': datetime.datetime(2020, 7, 8, 16, 3, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 8, 12, 58, 1, tzinfo=datetime.timezone.utc), 'time_taken': 11144.0, 'time_delta': '3:05:44', 'additions': 299, 'deletions': 748, 'state': 'closed'}, {'id': 441798365, 'number': 1937, 'closed': datetime.datetime(2020, 7, 6, 5, 14, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 5, 50, 30, tzinfo=datetime.timezone.utc), 'time_taken': 516241.0, 'time_delta': '5 days, 23:24:01', 'additions': 1277, 'deletions': 295, 'state': 'closed'}, {'id': 439309557, 'number': 1921, 'closed': datetime.datetime(2020, 6, 24, 19, 13, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 16, 13, 56, tzinfo=datetime.timezone.utc), 'time_taken': 10745.0, 'time_delta': '2:59:05', 'additions': 16, 'deletions': 56, 'state': 'closed'}, {'id': 438285732, 'number': 1917, 'closed': datetime.datetime(2020, 6, 29, 4, 56, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 3, 4, 8, tzinfo=datetime.timezone.utc), 'time_taken': 525138.0, 'time_delta': '6 days, 1:52:18', 'additions': 106, 'deletions': 44, 'state': 'closed'}, {'id': 436208843, 'number': 1904, 'closed': datetime.datetime(2020, 6, 18, 17, 59, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 18, 3, 42, 43, tzinfo=datetime.timezone.utc), 'time_taken': 51416.0, 'time_delta': '14:16:56', 'additions': 7, 'deletions': 23, 'state': 'closed'}, {'id': 434329940, 'number': 1895, 'closed': datetime.datetime(2020, 6, 15, 18, 53, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 6, 56, 39, tzinfo=datetime.timezone.utc), 'time_taken': 43034.0, 'time_delta': '11:57:14', 'additions': 28, 'deletions': 46, 'state': 'closed'}, {'id': 433454226, 'number': 1893, 'closed': datetime.datetime(2020, 6, 12, 21, 11, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 4, 17, 51, tzinfo=datetime.timezone.utc), 'time_taken': 60840.0, 'time_delta': '16:54:00', 'additions': 976, 'deletions': 2324, 'state': 'closed'}, {'id': 431858439, 'number': 1889, 'closed': datetime.datetime(2020, 6, 11, 17, 21, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 14, 54, 12, tzinfo=datetime.timezone.utc), 'time_taken': 181656.0, 'time_delta': '2 days, 2:27:36', 'additions': 171, 'deletions': 105, 'state': 'closed'}, {'id': 427597659, 'number': 1882, 'closed': datetime.datetime(2020, 6, 5, 21, 49, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 4, 5, 26, 44, tzinfo=datetime.timezone.utc), 'time_taken': 145393.0, 'time_delta': '1 day, 16:23:13', 'additions': 238, 'deletions': 127, 'state': 'closed'}, {'id': 425557551, 'number': 1876, 'closed': datetime.datetime(2020, 5, 31, 23, 20, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 31, 4, 8, 14, tzinfo=datetime.timezone.utc), 'time_taken': 69139.0, 'time_delta': '19:12:19', 'additions': 6980, 'deletions': 5434, 'state': 'closed'}, {'id': 425446941, 'number': 1875, 'closed': datetime.datetime(2020, 5, 30, 13, 21, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 30, 10, 29, 27, tzinfo=datetime.timezone.utc), 'time_taken': 10351.0, 'time_delta': '2:52:31', 'additions': 12, 'deletions': 8, 'state': 'closed'}, {'id': 425187202, 'number': 1871, 'closed': datetime.datetime(2020, 6, 4, 0, 36, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 29, 15, 56, tzinfo=datetime.timezone.utc), 'time_taken': 463210.0, 'time_delta': '5 days, 8:40:10', 'additions': 247, 'deletions': 540, 'state': 'closed'}, {'id': 425127369, 'number': 1870, 'closed': datetime.datetime(2020, 5, 29, 23, 31, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 29, 14, 7, 31, tzinfo=datetime.timezone.utc), 'time_taken': 33859.0, 'time_delta': '9:24:19', 'additions': 99, 'deletions': 0, 'state': 'closed'}, {'id': 395064784, 'number': 1789, 'closed': datetime.datetime(2020, 3, 28, 22, 47, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 28, 8, 26, 54, tzinfo=datetime.timezone.utc), 'time_taken': 51630.0, 'time_delta': '14:20:30', 'additions': 8357, 'deletions': 11196, 'state': 'closed'}, {'id': 390490557, 'number': 1782, 'closed': datetime.datetime(2020, 4, 17, 1, 8, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 15, 4, 28, tzinfo=datetime.timezone.utc), 'time_taken': 2541866.0, 'time_delta': '29 days, 10:04:26', 'additions': 22, 'deletions': 5, 'state': 'closed'}, {'id': 390474549, 'number': 1781, 'closed': datetime.datetime(2020, 5, 14, 4, 52, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 14, 37, 22, tzinfo=datetime.timezone.utc), 'time_taken': 4889705.0, 'time_delta': '56 days, 14:15:05', 'additions': 0, 'deletions': 0, 'state': 'closed'}]"
