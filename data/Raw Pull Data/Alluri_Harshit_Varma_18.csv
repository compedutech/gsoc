pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
668202363,refactor: Removing unused code,"- [x] Removes unused dialogues and the corresponding action as team selection is no longer done by the magic fool.
- [x] Cleans up instances of the AttackMinionSystem.
- [x] Move CardComponent to LASResources to fix dependency issues.
- [ ] Remove unnecessary components.",True,210,https://api.github.com/repos/Terasology/LightAndShadow/pulls/210,https://github.com/Terasology/LightAndShadow/pull/210,closed,2,403,6,2,0,14,0,0,[],2021-06-11 14:19:24+00:00,2021-06-14 07:59:30+00:00,236406.0,"2 days, 17:40:06","[{'comment_id': 650380126, 'comment_body': ""I'd like to stick to the [Google Java Style Guide](https://google.github.io/styleguide/javaguide.html#s5.2.1-package-names) and only use all-lowercase characters for package names. "", 'comment_created': datetime.datetime(2021, 6, 12, 11, 8, 38, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 650380878, 'comment_body': 'This does not look like ""unused code"". Therefore, please don\'t remove it in this PR which says **refactor: Removing unused code** :wink: \r\n\r\nYou can do this in another PR describing _why_ you want to remove it. If this is about the glitch with the player inventory, it might be worth a try to test out different event handler priorities to ensure that this handler runs last.', 'comment_created': datetime.datetime(2021, 6, 12, 11, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 650384853, 'comment_body': 'I know that the cards are currently not used. \r\n\r\nThis component and the corresponding system are derived from the logic around doors to turn a single item into a multi-block structure, and treat the blocks as a single union. \r\n\r\nAs placing and removing cards does work right now, we could consider to add them to the game rather sooner than later, to allow players building walls with them, for instance. In that case, maybe you only remove the door logic from the system, but leave the rest in-place.', 'comment_created': datetime.datetime(2021, 6, 12, 11, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 650385117, 'comment_body': 'Oh, and by removing the `CardComponent` in this PR you uncovered that we have a ""wrong"" dependency between LightAndShadow and LightAndShadowResources. \r\n\r\nThe card component _is_ used in there, see `assets/prefabs/cards/*.prefab`. When looking for usage of components in the code base keep in mind that we can omit the `Component` suffix in many cases - here, a search for `""Card"":` yields results for the card component.', 'comment_created': datetime.datetime(2021, 6, 12, 12, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 650385206, 'comment_body': ""Looking at this code, I'm not even sure anymore whether the cards act as doors or not :thinking: "", 'comment_created': datetime.datetime(2021, 6, 12, 12, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 650386063, 'comment_body': 'P.S. we just found out that our door placement itself is broken right now :eyes: :door: :question: ', 'comment_created': datetime.datetime(2021, 6, 12, 12, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 650387252, 'comment_body': ""The main reason I am removing this is because, this doesn't allow us to choose our starting inventory based on the defined prefab. All it does is remove all the items in the players inventory which doesn't give the player anything to fight with. By removing this we can settle on a more well defined starting inventory via the prefab. I will shift this to another PR. If this were to run in the end it would probably make sure that the player would start without anything in their inventory rather than what was defined to be the starting inventory."", 'comment_created': datetime.datetime(2021, 6, 12, 12, 26, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 650387861, 'comment_body': ""Yup I noticed this but I assumed that the assets would be of some use in the future, therefore I didn't remove them. However there were some other components which I am not too sure serve any purpose like the TeleporterComponent for example and it seems like all it is doing is indicating that the dice acts as a teleporter."", 'comment_created': datetime.datetime(2021, 6, 12, 12, 33, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 650388715, 'comment_body': 'So in that case would it be best to remove this for the time being and try and fix card placement to use as walls as a part of a later PR?', 'comment_created': datetime.datetime(2021, 6, 12, 12, 42, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 650389901, 'comment_body': 'I think the intention behind this code was for the players to not have any items in their inventory in the lobby stage. Generally I do think that makes sense as the actual game takes place in the arena and not in the lobby.\r\n\r\nAn alternative for the lobby stage might be to make players invincible. Thus, players could already test out the items without being able to kill each other at that stage yet. However, for placeable (traps) / consumable (ammunition) items, we would need to ensure they still start into the game with the full set.\r\n\r\nShifting this to another PR makes sense, so we can discuss this there in more detail :+1: ', 'comment_created': datetime.datetime(2021, 6, 12, 12, 56, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 650390226, 'comment_body': 'To resolve the incorrect dependency ""direction"", maybe we should rather move this to LASR.', 'comment_created': datetime.datetime(2021, 6, 12, 13, 0, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 650390333, 'comment_body': ""I'd vote for keeping it (potentially considering to move it to LASR too) and writing an issue tracking to replace this leveraging `MultiBlock` instead."", 'comment_created': datetime.datetime(2021, 6, 12, 13, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 650390670, 'comment_body': 'In that case should I retain CardComponent too.', 'comment_created': datetime.datetime(2021, 6, 12, 13, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 650391301, 'comment_body': 'yes, but move it to LASR to resolve the dependency being the wrong way round', 'comment_created': datetime.datetime(2021, 6, 12, 13, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}]","[{'commit_sha': 'a088de6f04c6e9edccd241fbe0ddafc0a471eb90', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df0706edefd26c8383e3f401713e29c97435b41a', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
668907908,Fix dependency issues due to components,"Requires https://github.com/Terasology/LightAndShadowResources/pull/65 to test this out.
- [x] Moves components that are instantiated only by prefabs in LASResources to LASResources.",True,212,https://api.github.com/repos/Terasology/LightAndShadow/pulls/212,https://github.com/Terasology/LightAndShadow/pull/212,closed,20,226,18,5,0,0,0,0,[],2021-06-12 16:40:05+00:00,2021-06-13 10:50:09+00:00,65404.0,18:10:04,[],"[{'commit_sha': '21466518bedd2bf640d7e18763f3751ed254fa98', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75a99a47303d77309c9a6d065b60b2a9882e5511', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9880a955449601af8f13a91e96c8384ab979bbb4', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db79fb000bbaec421666d80b3aa7a21646349950', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffbca7257b61b38de9f8f31767efaa3ec8431562', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
668874575,Fixes dependency issues due to components,Moves certain components to fix the reverse dependency issue. Part of https://github.com/Terasology/LightAndShadow/pull/212,True,65,https://api.github.com/repos/Terasology/LightAndShadowResources/pulls/65,https://github.com/Terasology/LightAndShadowResources/pull/65,closed,90,0,8,3,0,0,0,0,[],2021-06-12 13:57:16+00:00,2021-06-13 04:16:35+00:00,51559.0,14:19:19,[],"[{'commit_sha': 'e6b9ea41c154a651353d8c3d4a5999478d15b326', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf38fafc37665ec7296cefcfadfdd47d6c8fa76', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc76f35bd06f10a9b616bbaa60fd4947dc289c99', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
669042946,refactor: move flag logic to FlagAuthoritySystem,Currently a lot of the functionalities which handles flags is scattered around in separate files. This PR moves all those functions to FlagAuthoritySystem making it easier to categorize classes. Requires https://github.com/Terasology/LightAndShadowResources/pull/66 to test it,True,213,https://api.github.com/repos/Terasology/LightAndShadow/pulls/213,https://github.com/Terasology/LightAndShadow/pull/213,closed,210,196,12,17,0,25,0,0,[],2021-06-13 12:11:47+00:00,2021-06-22 18:18:15+00:00,799588.0,"9 days, 6:06:28","[{'comment_id': 653796435, 'comment_body': 'newline', 'comment_created': datetime.datetime(2021, 6, 17, 17, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 653804101, 'comment_body': 'I wonder whether we might want to drop the `BlackFlag` and `RedFlag` components and rather have a component class member `team` or so, that holds the respective URI we return here...', 'comment_created': datetime.datetime(2021, 6, 17, 17, 46, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 653805973, 'comment_body': 'naming nitpick: why ""request"" here and only here? theoretically, ""move flag to base"" and ""give flag to player"" also are mere requests. I\'d say we drop the ""Request"" suffix here to keep it consistent.', 'comment_created': datetime.datetime(2021, 6, 17, 17, 49, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 653808383, 'comment_body': 'you could consider working with optionals here to avoid first checking ""has"" and then doing ""get"". with an optional you could do ""get"" and ""ifPresent"" continue to get the block family, etc.', 'comment_created': datetime.datetime(2021, 6, 17, 17, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 654373983, 'comment_body': 'The main reason I did that over here is because of the overlap with the FlagDrop event. The FlagDrop event is triggered when the flag drops and to avoid any conflicts I added the Request suffix to indicate that the flag should be dropped when this event is sent.', 'comment_created': datetime.datetime(2021, 6, 18, 12, 1, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 654380850, 'comment_body': 'The ""request"" to drop a flag would be a trigger event while the ""flag drops now / was just dropped"" is more of a notification event. Let\'s refer to the documentation linked above and adjust the naming and event implementation accordingly, I\'d say.', 'comment_created': datetime.datetime(2021, 6, 18, 12, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 655547591, 'comment_body': 'I think it would make sense to include the event type in the documentation.', 'comment_created': datetime.datetime(2021, 6, 21, 16, 46, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 655548087, 'comment_body': 'To give this a bit more of a ""trigger"" characteristic and align it with `GiveFlagEvent`, I\'d propose to rename it to `DropFlagEvent`', 'comment_created': datetime.datetime(2021, 6, 21, 16, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 655549162, 'comment_body': 'We could make these private and introduce getters :thinking: ', 'comment_created': datetime.datetime(2021, 6, 21, 16, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 655619590, 'comment_body': ""A few things to consider here (for a follow-up PR) I already discussed with @jdrueckert offline:\r\n\r\nDon't send the specific item URI in the event, but only the team reference. This decouples the item/prefab handling from the game logic even more."", 'comment_created': datetime.datetime(2021, 6, 21, 18, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655622000, 'comment_body': 'What is the _intent_ of the `AttackSystem` here? And what are the _invariants_ that hold for our components? I think the attack system is only interested in stating that the player should drop the (enemy) flag. \r\n\r\nAt the same time, a player can have either 0 or 1 flags because:\r\n- an entity can have at most one instance of a component, i.e., there is either no or one `HasFlagComponent`, and\r\n- `HasFlagComponent` has a single field for `flag`.\r\n\r\nGiven that, we should be able to resolve which flag to drop in the event handler for `DropFlagEvent` without the additional flag URI. ', 'comment_created': datetime.datetime(2021, 6, 21, 18, 43, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655625770, 'comment_body': 'These questions uncover a few assumptions or uncertainties with the current code that we should document. \r\n\r\nFor instance, is the `HasFlagComponent#flag` always the enemy flag or could it be the flag of the own team?\r\nEven if a player could pick up their own flag, would it be tracked in `HasFlagComponent`? More general, what is the _intent_ of `HasFlagComponent`?', 'comment_created': datetime.datetime(2021, 6, 21, 18, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655633395, 'comment_body': '(_Disclaimer: We could not agree what the best way forward for the latter points is._)', 'comment_created': datetime.datetime(2021, 6, 21, 19, 2, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655635229, 'comment_body': ""Why do we send this event against the player? I would have assumed that\r\n\r\n- we send the event against the flag item (because that's what we want to move)\r\n- `ReturnToBaseEvent` (yes, different name) would return the target to its base\r\n- the target base is implicitly given by the team the flag belongs to"", 'comment_created': datetime.datetime(2021, 6, 21, 19, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655635652, 'comment_body': 'Not sure about my Java skills, but do we really need this for `void` methods? The `return` was previously only used to break early (unnecessarily).', 'comment_created': datetime.datetime(2021, 6, 21, 19, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655636105, 'comment_body': 'This method should have Javadoc to state what values it can possibly return.', 'comment_created': datetime.datetime(2021, 6, 21, 19, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655638156, 'comment_body': 'Ah, now I get why this event is sent against the player and not the flag ... :thinking: ', 'comment_created': datetime.datetime(2021, 6, 21, 19, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655639460, 'comment_body': 'Ah, we use the same event for ""**return** flag to own base"" and ""**reset** flag on score""... In both cases, the flag is returned to the base of the team the flag represents, so I still think we don\'t need the target base as explicit parameter.', 'comment_created': datetime.datetime(2021, 6, 21, 19, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655639859, 'comment_body': ':+1: good to see the event type categorization here.', 'comment_created': datetime.datetime(2021, 6, 21, 19, 13, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655640815, 'comment_body': 'I would call this event `ReturnFlagEvent` and omit the `flagTeam` property, as it is implicit that the flag should be returned to its home base.', 'comment_created': datetime.datetime(2021, 6, 21, 19, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 655641034, 'comment_body': 'Why did you chose the name `heldFlag` here?', 'comment_created': datetime.datetime(2021, 6, 21, 19, 15, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 656281425, 'comment_body': 'HasFlagComponent should mainly be used to indicate that the player has the opponents flag and indicating which team the flag the player has is from is unnecessary as the flagComponent already does that. ', 'comment_created': datetime.datetime(2021, 6, 22, 14, 32, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 656466780, 'comment_body': 'why do we send the attacking player here?', 'comment_created': datetime.datetime(2021, 6, 22, 18, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 656469260, 'comment_body': 'ah, I see we need the attacking player to calculate the impulse... seems a bit weird but oh well...', 'comment_created': datetime.datetime(2021, 6, 22, 18, 14, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 656522086, 'comment_body': 'I guess we could decide to compute the direction from which the magic staff ""activation"" comes here in the attack system and only pass that to the `DropFlagEvent`. \r\n\r\nOn the other hand, this might be a nice addition to the score board if you think for ""scorer points"" from other sports, e.g., giving players credit for defending their flag...', 'comment_created': datetime.datetime(2021, 6, 22, 19, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': 'e09cb69ccc5aed23c9294b38e047001e47ccdb12', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52f06aab326c897d9651871492a82b010aa29315', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bf5509807785594ede81f8d49fcf4f727e38554', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c80c320015b68cb1cc5ea748827feab1f7d7a28', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b38618688b8b042572822f84859453c104c6e0a', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd70e17d7c82123a52fb8c6dcceebe111dff5aca0', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4427d68611abed5318b31abe3d979864fda79898', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0974874e3e9726293cda3126e7eba676aa67fae0', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de6ee3f95a83990807edb780d5cac1781e6d1eaa', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a66703136b0548fae4bb94f33582c8aef6cf616', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1c8b8a44cf95cd0fb6e5d50d02ced6c2088f389', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85b130a38b0e9fdcb15e0aa94a3a9e96ad5bbd2f', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f994bad0caab474bd7532166e61f971682da827', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c850afecda88771840056d75a2f2f58c30213127', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36fa89a0c8da8fa205ecdabd995771d3880de9ad', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e0acdbd7bd9846e53d937affabdf0a7b7619ee6', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f4f49a8ee320a0cf4a6c45964e374b23a90f566', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
674036434,refactor: merge separate components that indicate flag's team,"Separate components are used to indicate the team the flag belongs to along with LASTeamComponent. As the usage of several components is unnecessary, all of their usage is merged into a single component. Requires https://github.com/Terasology/LightAndShadowResources/pull/66 to test this.",True,217,https://api.github.com/repos/Terasology/LightAndShadow/pulls/217,https://github.com/Terasology/LightAndShadow/pull/217,closed,14,52,4,3,0,4,2,0,"[{'name': 'Size: S'}, {'name': 'Type: Refactoring'}]",2021-06-20 13:36:12+00:00,2021-06-20 15:44:31+00:00,7699.0,2:08:19,"[{'comment_id': 654943076, 'comment_body': '```suggestion\r\n        FlagComponent flagComponent = flag.getComponent(FlagComponent.class);\r\n```', 'comment_created': datetime.datetime(2021, 6, 20, 14, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 654943102, 'comment_body': '```suggestion\r\n        FlagComponent flagComponent = flag.getComponent(FlagComponent.class);\r\n```', 'comment_created': datetime.datetime(2021, 6, 20, 14, 23, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 654943127, 'comment_body': '```suggestion\r\n        return (flagComponent.team.equals(playerTeamComponent.team));\r\n```', 'comment_created': datetime.datetime(2021, 6, 20, 14, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 654943158, 'comment_body': '```suggestion\r\n        inventoryManager.giveItem(player, EntityRef.NULL, blockFactory.newInstance(blockManager.getBlockFamily(LASUtils.getFlagURI(flagComponent.team))));\r\n```', 'comment_created': datetime.datetime(2021, 6, 20, 14, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}]","[{'commit_sha': 'c961d1ee0c53d18897550fe1eaf41e914db693fd', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5665d6dee63d4671d2a63dbfef971411828d193', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02e99674210e1c94601b01a7095704835e2457ed', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
673534948,refactor: clean up flag logic,Part of https://github.com/Terasology/LightAndShadow/pull/217. Moves usage of BlackFlagComponent and RedFlagComponent to FlagComponent.,True,66,https://api.github.com/repos/Terasology/LightAndShadowResources/pulls/66,https://github.com/Terasology/LightAndShadowResources/pull/66,closed,7,19,5,7,0,4,2,0,"[{'name': 'Size: S'}, {'name': 'Type: Refactoring'}]",2021-06-18 14:46:51+00:00,2021-06-20 14:58:26+00:00,173495.0,"2 days, 0:11:35","[{'comment_id': 654923371, 'comment_body': ""I'm wondering if we still need this. With the flag component containing the team, this seems like duplicate information."", 'comment_created': datetime.datetime(2021, 6, 20, 11, 50, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 654923408, 'comment_body': 'see below', 'comment_created': datetime.datetime(2021, 6, 20, 11, 51, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 654944465, 'comment_body': '```suggestion\r\n}\r\n\r\n```', 'comment_created': datetime.datetime(2021, 6, 20, 14, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 654944500, 'comment_body': '```suggestion\r\n}\r\n\r\n```', 'comment_created': datetime.datetime(2021, 6, 20, 14, 33, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}]","[{'commit_sha': 'f006759d92ce982e269d535c35563d61cd00652b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30459c1a03f5795d09343d836a3fee93997e1808', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dd4e6621f18da776b9b8dc03807c870a22338c8', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee26e5fb89028a5895fad83138de9979887e52bd', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68a1d71fedfec613671207114237fbd1afd8144a', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d74ebdeaec253944427c3dc3c770ede61d89431', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52acd9f913475b6f14c5c45069f69934ecea1b95', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
676581726,refactor: remove unused code,"Removes unused components, SetTeamAction and the UI part from an Authority System (which has already been taken care by a Client System). Requires https://github.com/Terasology/LightAndShadowResources/pull/67.",True,218,https://api.github.com/repos/Terasology/LightAndShadow/pulls/218,https://github.com/Terasology/LightAndShadow/pull/218,closed,2,197,7,1,1,5,0,0,[],2021-06-23 20:10:33+00:00,2021-06-27 18:54:50+00:00,341057.0,"3 days, 22:44:17","[{'comment_id': 658125375, 'comment_body': 'Did you miss adding the file you moved this to to the commit? 🤔 ', 'comment_created': datetime.datetime(2021, 6, 24, 16, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 658140167, 'comment_body': 'This is already a part of ClientScoreSystem.\r\nhttps://github.com/Terasology/LightAndShadow/blob/33c72bc232963c110324563b61c922fec07d2137/src/main/java/org/terasology/ligthandshadow/componentsystem/controllers/ClientScoreSystem.java#L43-L70', 'comment_created': datetime.datetime(2021, 6, 24, 17, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 658200741, 'comment_body': 'Although those components are a part of those prefabs, no system is utilizing them so they are not really required.  We should remove these components from those prefabs too.', 'comment_created': datetime.datetime(2021, 6, 24, 18, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 658220796, 'comment_body': '> Although those components are a part of those prefabs, no system is utilizing them so they are not really required. We should remove these components from those prefabs too.\r\n\r\nHave you compared carrying a flag in-game with and without the PR?', 'comment_created': datetime.datetime(2021, 6, 24, 19, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 658227557, 'comment_body': 'Yup I tested everything and it worked fine, while picking up the flags the particles were rendered. Tested it in multiplayer too and it works fine.', 'comment_created': datetime.datetime(2021, 6, 24, 19, 31, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}]","[{'commit_sha': '61b81034e26060d3d8deeb32a8b64d516b05f0fb', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
678144543,refactor: remove unused components,Removes certain unused components from prefabs. Part of  https://github.com/Terasology/LightAndShadow/pull/218,True,67,https://api.github.com/repos/Terasology/LightAndShadowResources/pulls/67,https://github.com/Terasology/LightAndShadowResources/pull/67,closed,5,9,4,6,0,0,0,0,[],2021-06-25 19:50:19+00:00,2021-06-27 18:55:15+00:00,169496.0,"1 day, 23:04:56",[],"[{'commit_sha': 'f006759d92ce982e269d535c35563d61cd00652b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30459c1a03f5795d09343d836a3fee93997e1808', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29c69543d58af795887c94d94b34a1233280a9e2', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f79ed7b18a7912485e4e00fae0f74dc4c0ffc5ef', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03e287e7b26bba1c4be22651c0664c675bf668ec', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '765bf85c5e0ef9335f72fc6848a9906b7dc70ada', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
681936775,refactor: add documentation,,True,221,https://api.github.com/repos/Terasology/LightAndShadow/pulls/221,https://github.com/Terasology/LightAndShadow/pull/221,closed,98,281,20,11,0,13,0,0,[],2021-07-01 14:58:38+00:00,2021-07-07 07:46:40+00:00,492482.0,"5 days, 16:48:02","[{'comment_id': 663348917, 'comment_body': ""```suggestion\r\n     * Attaches a particle emitter to the player when the player picks up a flag.\r\n     * Emitted particles are based on the flag's team.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 3, 10, 34, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663349248, 'comment_body': ""We might want to align the naming with the other notification events such as `OnFlagDropped`.\r\nSame for the game state notification events.\r\nAs this PR is for adding documentation, I'm fine with doing so in a follow-up"", 'comment_created': datetime.datetime(2021, 7, 3, 10, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663349323, 'comment_body': '```suggestion\r\n * System responsible for giving the flag to a player.\r\n * Players can only take flags of the opposing team.\r\n```', 'comment_created': datetime.datetime(2021, 7, 3, 10, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663349591, 'comment_body': 'Personally, I\'d like to rename this to `updateScoreOnActivate` (in a follow-up PR).\r\nI always feel like event handlers\' names should indicate what happens in reaction to the event, not only ""repeat"" the event that is handled...', 'comment_created': datetime.datetime(2021, 7, 3, 10, 41, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663350000, 'comment_body': ""```suggestion\r\n     * When a player places the opponent's flag at their home base, the player's team score\r\n     * increases and the flag returns back to its team's base.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 3, 10, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663350314, 'comment_body': 'Looking at this system, I think that it is likely the next overhaul candidate.', 'comment_created': datetime.datetime(2021, 7, 3, 10, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663352906, 'comment_body': '> to prevent fights in the lobby\r\n\r\nActually, I think we might want to make players invulnerable while in the lobby and allow fights :thinking: \r\n\r\nHowever, as what you wrote matches the current state, this is rather a topic for a follow-up PR.', 'comment_created': datetime.datetime(2021, 7, 3, 11, 14, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663352946, 'comment_body': 'This is a system, not an entity, is it?', 'comment_created': datetime.datetime(2021, 7, 3, 11, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663353125, 'comment_body': 'This is not a documentation change. Please extract this to another PR.', 'comment_created': datetime.datetime(2021, 7, 3, 11, 15, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663353204, 'comment_body': '```suggestion\r\n     * Initializes the Health HUD when the local player is spawned in the lobby based on the default white team.\r\n```', 'comment_created': datetime.datetime(2021, 7, 3, 11, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663353326, 'comment_body': '```suggestion\r\n     * Updates the skeletal mesh and the Health HUD of a player when the player\r\n     * chooses a team and teleports into the arena.\r\n```', 'comment_created': datetime.datetime(2021, 7, 3, 11, 17, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663353348, 'comment_body': 'This is not a documentation change, please extract it to another PR', 'comment_created': datetime.datetime(2021, 7, 3, 11, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 664079395, 'comment_body': 'Yeah this is a system.', 'comment_created': datetime.datetime(2021, 7, 5, 18, 16, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}]","[{'commit_sha': 'adf9b5d2c440c18bc7f9f252a1ecd64d30fe02f7', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a60de6acf3d6c658be1bcb34db9ef52b3548fb74', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5165d220f16477dfe84227bdca943a5447e0062', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '834de8da4aa1ccb5773be5010baa8d03f941a488', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb62bd992d903208de16c21c318fdb5a1d146723', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a2e2a33d19eeec597f2de4405c99ab8da4cfc2e', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdf37422be9af88f0d8659237ede9da08e35137b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f3dcac434f98c79649f88217b1f9c94df03438e', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1392ce5d497c0179bec0ccaa0a34ee36c72aee4b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1123842eb9859f61fc05283e18842e0b5c34bc73', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13b75b6b43786fadf3252bfa644c0e6a9ee3dd34', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
707312154,refactor: clean up Score system,,True,232,https://api.github.com/repos/Terasology/LightAndShadow/pulls/232,https://github.com/Terasology/LightAndShadow/pull/232,closed,6,15,2,2,0,2,1,0,[{'name': 'Type: Refactoring'}],2021-08-10 12:33:03+00:00,2021-08-15 09:50:27+00:00,422244.0,"4 days, 21:17:24","[{'comment_id': 688030496, 'comment_body': 'with this, I think we even can drop this method and inline this in `checkAndResetGameOnScore` ', 'comment_created': datetime.datetime(2021, 8, 12, 19, 36, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 688031203, 'comment_body': ""other than that, I think this should be fine... @skaldarnar do you see anything you'd like cleaned up some more?"", 'comment_created': datetime.datetime(2021, 8, 12, 19, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}]","[{'commit_sha': '7a4675e7eb94df823fa412017cc486e2f3087713', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d576dff26885aed9f4f09e5f5d26ae72486dfcd', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
678579364,refactor: remove incorrect usage of cc,,True,220,https://api.github.com/repos/Terasology/LightAndShadow/pulls/220,https://github.com/Terasology/LightAndShadow/pull/220,closed,25,50,1,1,0,0,0,0,[],2021-06-27 20:57:35+00:00,2021-06-27 21:03:01+00:00,326.0,0:05:26,[],"[{'commit_sha': '7568a17b74426f9c4406ceb4f56cf211dd3e769f', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
685482009,refactor: split restart system,,True,224,https://api.github.com/repos/Terasology/LightAndShadow/pulls/224,https://github.com/Terasology/LightAndShadow/pull/224,closed,56,40,2,2,0,1,1,0,[{'name': 'Type: Refactoring'}],2021-07-07 20:15:07+00:00,2021-08-09 21:16:20+00:00,2854873.0,"33 days, 1:01:13","[{'comment_id': 680559305, 'comment_body': ""I don't think this needs to be that specific here, so let's improve it while touching the code. The method we need is defined in `UILayout`, so we can use that type instead of requiring it to be a `MigLayout`.\r\n\r\nhttps://github.com/MovingBlocks/TeraNUI/blob/b7503ba0d733cc409df9bedf7fa284f8656f5b4d/nui/src/main/java/org/terasology/nui/UILayout.java#L41 "", 'comment_created': datetime.datetime(2021, 8, 1, 20, 6, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': '290190bc65dbe4155a017a1bdfeff7ce5292d34c', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e126bed7678560a82ce5a4919f691e588a44680a', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
667123094,refactor: merge packages,"Merged las and ligthandshadow into a single package based on the below structure.
![image](https://user-images.githubusercontent.com/52852877/121569124-15f39480-ca3e-11eb-98e3-fb9ccbceb499.png)
New Structure 
![image](https://user-images.githubusercontent.com/52852877/121570781-d332bc00-ca3f-11eb-90d6-1aba1258a5d3.png)
",False,209,https://api.github.com/repos/Terasology/LightAndShadow/pulls/209,https://github.com/Terasology/LightAndShadow/pull/209,closed,551,1250,98,2,2,0,0,0,[],2021-06-10 17:32:23+00:00,2021-11-12 20:49:32+00:00,13403829.0,"155 days, 3:17:09",[],"[{'commit_sha': 'ae4f5d5a8421d054fdd36c928048b67a5f9b4337', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '696808f9df94071e115e59bdb37c9f7671f1150d', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
670432269,fix: non-deterministic inventory and empty respawn inventory,"Requires https://github.com/Terasology/Inventory/pull/44 to test this PR.  This PR adds items to the players inventory when the player spawns at the base or respawns on death. It makes use of the default StartingInventory used in CombatSystem for inventory but this can be modified and finalized once the weapons are integrated with effects later on.
Fixes https://github.com/Terasology/LightAndShadow/issues/117
Fixes https://github.com/Terasology/LightAndShadow/issues/109",True,214,https://api.github.com/repos/Terasology/LightAndShadow/pulls/214,https://github.com/Terasology/LightAndShadow/pull/214,closed,38,15,4,5,0,10,0,0,[],2021-06-15 13:57:13+00:00,2021-06-17 20:04:34+00:00,194841.0,"2 days, 6:07:21","[{'comment_id': 652042629, 'comment_body': ""Instead of adding the component and then triggering the action with the empty event I'd suggest to add the payload to the event itself, see https://github.com/Terasology/Inventory/pull/44#pullrequestreview-684342609.\r\n\r\nThis would just become \r\n```suggestion\r\n            player.send(new RequestInventoryEvent(startingInventory.items));\r\n```"", 'comment_created': datetime.datetime(2021, 6, 15, 18, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652044532, 'comment_body': 'We resolve and load the asset every time a player dies. As the respawn inventory does not change, you could just initialize this once for the system and then reuse the value every time you reset the inventory.', 'comment_created': datetime.datetime(2021, 6, 15, 18, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652046842, 'comment_body': 'Having the same code twice indicates that you probably should refactor this. You might want to consider introducing a LaS-specific event denoting a ""player reset"", and then fire that event both when the player teleports into the game and when they respawn.', 'comment_created': datetime.datetime(2021, 6, 15, 18, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652047115, 'comment_body': 'Why is the magic staff added separately and not part of the respawn inventory?', 'comment_created': datetime.datetime(2021, 6, 15, 18, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652384043, 'comment_body': ""The magic staff isn't dropped on death so the player get's it back on respawn. Over here we are using the same inventory for spawn and respawn and that would mean that on respawn the player will have multiple staffs, I could create separate inventories for spawn and respawn but most of the weapons are similar currently and changes to the inventory will be coming later on."", 'comment_created': datetime.datetime(2021, 6, 16, 6, 22, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 652388526, 'comment_body': 'As we will be initializing the startingInventory in the beginning of the systems and the inventories should eventually be different for spawn and respawn that would leave only the last 2 lines to be refactored which might be unnecessary.', 'comment_created': datetime.datetime(2021, 6, 16, 6, 31, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 653784243, 'comment_body': ""I don't think we should treat the staff different than every other item in the inventory here.\r\nI'm aware that there is a task where we will need to discuss which items to treat how (keep / drop / remove from the game), but I think when we do that we should do it for all items and not start doing it for the staff already now.\r\nHence, I would drop the staff on death like all the other items."", 'comment_created': datetime.datetime(2021, 6, 17, 17, 26, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 653784546, 'comment_body': 'newline please', 'comment_created': datetime.datetime(2021, 6, 17, 17, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 653837078, 'comment_body': ""I didn't want to remove the logic implemented previously, wherein the staff is not dropped on death, but now as we are giving the staff too on respawn I removed it every time the player dies. I could remove this in case the previously implemented logic is not what is required."", 'comment_created': datetime.datetime(2021, 6, 17, 18, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 653847614, 'comment_body': 'I think until we think it through properly, which items should be kept, dropped, or removed, we should not have additional logic treating some different than others. For me this includes the logic that already was there. Thus, at least we have consistent behaviour for all items.', 'comment_created': datetime.datetime(2021, 6, 17, 18, 46, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}]","[{'commit_sha': '5f5ab0d251ba077f0ae549cfeab444020c1e20f1', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaac54deec82bb60eadc5e55f242c113311912c3', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '815a34dfeeabe5eda29e504afc12d15bc1bb1548', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8782f8427ccfcfdeb3a56c743a499ac46d2b20d9', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e0e687415117faf946c713c04d6105c0bdf57ff', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
670385040,feat: add RequestInventoryEvent,This allows the inventory of players to be created using the StartingInventoryComponent whenever necessary rather than only when the player spawns. It will be used as a part of https://github.com/Terasology/LightAndShadow/pull/214 .,True,44,https://api.github.com/repos/Terasology/Inventory/pulls/44,https://github.com/Terasology/Inventory/pull/44,closed,66,36,4,3,0,9,1,0,[{'name': 'Type: Improvement'}],2021-06-15 13:01:48+00:00,2021-06-16 21:49:03+00:00,118035.0,"1 day, 8:47:15","[{'comment_id': 652039166, 'comment_body': 'This introduces some indirect coupling from the `RequestInventoryEvent` the `StartingInventory`  component, which might be hard to understand in the future.\r\n\r\nInstead of adding state to the entity (in form of the starting inventory component) and then sending an empty trigger event to read data from that component, it might be more straight forward to just have the payload in the event itself. \r\n\r\nAlso, note that the entity needs to have an `InventoryComponent` for this to work at all. Thus, I think it would be better to go more towards the following:\r\n\r\n```suggestion\r\n    @ReceiveEvent(InventoryComponent.class)\r\n    public void onRequestInventory(RequestInventoryEvent event, EntityRef player) {\r\n        entitiesWithoutInventory.clear();\r\n        addItemsTo(event.items, player, player.getParentPrefab().getName());\r\n        logErrors();\r\n    }\r\n```', 'comment_created': datetime.datetime(2021, 6, 15, 18, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652041209, 'comment_body': ""As explained below, I suggest to make this event contain the payload of what items to add, similar to how the `StartingInventoryComponent` looks like. You'd likely need to move the nested class `InventoryItem` out of the component for this.\r\n\r\nWe could later extend this event with more properties, e.g., a boolean flag to determine whether the items should add to or override the inventory."", 'comment_created': datetime.datetime(2021, 6, 15, 18, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652041613, 'comment_body': 'The existing event handler for the starting inventory should also send an instance of this event, filled from the `StartingInventoryComponent`', 'comment_created': datetime.datetime(2021, 6, 15, 18, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652421579, 'comment_body': 'This is not a component in the ECS sense, but only a data class. In particular, instances of this class should not be used as components.\r\n\r\nThis is also important as components should not refer directly to other components.\r\n\r\n```suggestion\r\npublic class InventoryItem {\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 7, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652476826, 'comment_body': ""I'd appreciate if you could add documentation for this event similar to the [events in Health](https://github.com/Terasology/Health/tree/develop/src/main/java/org/terasology/module/health/events). The explanation of [Event Types](https://github.com/MovingBlocks/Terasology/wiki/Event-Types) might be helpful."", 'comment_created': datetime.datetime(2021, 6, 16, 8, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652477824, 'comment_body': 'Not sure whether this holds only for network events or in general, but you might need a default constructor without arguments for the automatic deserialization. Might be okay here for now since it is not a network event, though.', 'comment_created': datetime.datetime(2021, 6, 16, 8, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652478147, 'comment_body': 'I think this line belongs to the other event handler `onStartingInventory`.', 'comment_created': datetime.datetime(2021, 6, 16, 8, 41, 14, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 652491388, 'comment_body': ""Ok will make the change I just wasn't too sure how a class would fit into the ECS architecture."", 'comment_created': datetime.datetime(2021, 6, 16, 8, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 653075817, 'comment_body': ""I'll approve an merge this PR, but we should do another iteration over the docstring. "", 'comment_created': datetime.datetime(2021, 6, 16, 21, 46, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': '4cfc04b81e1e89c7231ae0a1042bbfce3dd1766d', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '801ff13329a0f9442bde70cb402036caedb3d8ce', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d74d9a4794cc4e1f7580a8b59015b530d903e66', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
683845627,fix: picking up weapons,Previously it was not possible to pickup certain weapons/traps when dropped as the default value for OwnerCollisionState was DISABLED which resulted in adding a CollisionExceptionsComponent which resulted in consuming of CollideEvents between the player and the weapon. By setting it as ENABLED CollideEvents between the player and weapons/traps are no longer consumed.,True,81,https://api.github.com/repos/Terasology/CombatSystem/pulls/81,https://github.com/Terasology/CombatSystem/pull/81,closed,5,3,3,3,0,0,0,0,[],2021-07-05 17:13:14+00:00,2021-07-05 19:53:03+00:00,9589.0,2:39:49,[],"[{'commit_sha': 'f8362cccb482bd540cd97df92cb0c637f5d851ab', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a279c35c2d1f1838d5b41c80024722ac29bb7438', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20bd2cfb12f59986e013017e4632e471dfd80fab', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
678328774,feat: add pregame phase,Creates a pregame phase which gives players time to join teams and setup their defenses. Requires https://github.com/Terasology/LightAndShadowResources/pull/68 . For the actual game to start there has to be at least one player in each team.,True,219,https://api.github.com/repos/Terasology/LightAndShadow/pulls/219,https://github.com/Terasology/LightAndShadow/pull/219,closed,322,146,13,22,0,37,0,0,[],2021-06-26 12:23:13+00:00,2021-07-04 10:33:22+00:00,684609.0,"7 days, 22:10:09","[{'comment_id': 663401447, 'comment_body': ""I'd probably go for a `InvulnerableComponent` here as we potentially could use that in the future also for NPCs and stuff."", 'comment_created': datetime.datetime(2021, 7, 3, 19, 43, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663401716, 'comment_body': 'Why do we need this?', 'comment_created': datetime.datetime(2021, 7, 3, 19, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663401756, 'comment_body': 'Are these (activate and deactivate) notification or trigger events? You might want to indicate that with the naming (and documentation): `ActivateBarrierEvent` vs `OnBarrierActivateEvent`', 'comment_created': datetime.datetime(2021, 7, 3, 19, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663401773, 'comment_body': 'see above', 'comment_created': datetime.datetime(2021, 7, 3, 19, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663401913, 'comment_body': ""without having looked into the systems that handle this event yet, it's unclear to me what this is used for"", 'comment_created': datetime.datetime(2021, 7, 3, 19, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663401914, 'comment_body': 'see above', 'comment_created': datetime.datetime(2021, 7, 3, 19, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663401932, 'comment_body': 'see above', 'comment_created': datetime.datetime(2021, 7, 3, 19, 48, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663402683, 'comment_body': 'this is no longer a ""world"" radius but rather a ""pregame zone"" radius', 'comment_created': datetime.datetime(2021, 7, 3, 19, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663403165, 'comment_body': '```suggestion\r\n    public void activateBarriers(BarrierActivateEvent event, EntityRef entity) {\r\n```', 'comment_created': datetime.datetime(2021, 7, 3, 20, 1, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663403169, 'comment_body': '```suggestion\r\n    public void deactivateBarriers(BarrierDeactivateEvent event, EntityRef entity) {\r\n```', 'comment_created': datetime.datetime(2021, 7, 3, 20, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663403464, 'comment_body': 'please remove these', 'comment_created': datetime.datetime(2021, 7, 3, 20, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663403592, 'comment_body': 'df?', 'comment_created': datetime.datetime(2021, 7, 3, 20, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663403670, 'comment_body': ""guess we don't need this anymore, do we?"", 'comment_created': datetime.datetime(2021, 7, 3, 20, 7, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663404019, 'comment_body': 'Not sure if this should be in `isProperTeamSize` :thinking: \r\nThis seems to be a more or less unnecessary side effect.\r\nLike not that the logic is unnecessary at all, but rather that it being a side effect here is unnecessary...', 'comment_created': datetime.datetime(2021, 7, 3, 20, 10, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663404749, 'comment_body': '```suggestion\r\n            window.addNotification(""The game starts as soon as there is at least one player in each team."");\r\n```', 'comment_created': datetime.datetime(2021, 7, 3, 20, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663404910, 'comment_body': 'this should be a constant', 'comment_created': datetime.datetime(2021, 7, 3, 20, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663404956, 'comment_body': ""let's have another look at this in a follow-up..."", 'comment_created': datetime.datetime(2021, 7, 3, 20, 19, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663405730, 'comment_body': ""This definitely needs some Javadoc.\r\n\r\n- it activates the barriers for both teams\r\n- but only if **both** barrier entities don't exist\r\n- it will complete without any effect or log trace if any of the barriers is not the null entity"", 'comment_created': datetime.datetime(2021, 7, 3, 20, 28, 56, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663405823, 'comment_body': ""Wouldn't iterating through the players again to get the count of players be code duplication."", 'comment_created': datetime.datetime(2021, 7, 3, 20, 30, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 663406081, 'comment_body': ""And suddenly, keeping this information as state seems more appealing again :see_no_evil: \r\n@skaldarnar what's your pov on this?"", 'comment_created': datetime.datetime(2021, 7, 3, 20, 32, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663406167, 'comment_body': 'This is a nice one-liner, but also quite error prone to show a NPE some day. To simplify debugging, you may consider splitting this up in multiple lines:\r\n\r\n```suggestion\r\n        String barrierTeam = barrier.getComponent(MagicDome.class).team;\r\n        String playerTeam = player.getComponent(LASTeamComponent.class).team;\r\n        return barrierTeam.equals(playerTeam);\r\n```', 'comment_created': datetime.datetime(2021, 7, 3, 20, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663406512, 'comment_body': ""It would be nice to have a `ProjectileComponent` marker component here, I guess...I don't think we have any real concept for hierarchies like that yet."", 'comment_created': datetime.datetime(2021, 7, 3, 20, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663406607, 'comment_body': ':gb: what\'s the difference between ""invincible"" and ""invulnerable""? :us:  :thinking: ', 'comment_created': datetime.datetime(2021, 7, 3, 20, 38, 40, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663406812, 'comment_body': 'This just works by using the `timer`, no need for a custom `Thread`? Nice :+1: ', 'comment_created': datetime.datetime(2021, 7, 3, 20, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663406940, 'comment_body': 'Second one should use past tense: `OnBarrierActivatedEvent`', 'comment_created': datetime.datetime(2021, 7, 3, 20, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663406976, 'comment_body': 'What does this indicate?', 'comment_created': datetime.datetime(2021, 7, 3, 20, 42, 45, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663407115, 'comment_body': 'And is this value ever reset to `false` at the end of a game/when restarting?', 'comment_created': datetime.datetime(2021, 7, 3, 20, 44, 6, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663407242, 'comment_body': 'Why do you need this `if` check? If there are no clients, the iterable should be empty, and the `for` loop should effectively be a no-op.', 'comment_created': datetime.datetime(2021, 7, 3, 20, 45, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663407256, 'comment_body': 'See above.', 'comment_created': datetime.datetime(2021, 7, 3, 20, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663407583, 'comment_body': 'These `send...ToClients` helper functions have the same structure and purpose, the only difference is which event they are sending. \r\n\r\nYou could refactor this to add the event [supplier](https://docs.oracle.com/javase/8/docs/api/java/util/function/Supplier.html) as an argument here:\r\n\r\n```java\r\nvoid sendEventToClients(Supplier<Event> eventSupplier) {\r\n        Iterable<EntityRef> clients = entityManager.getEntitiesWith(ClientComponent.class);\r\n        for (EntityRef client : clients) {\r\n            client.send(eventSupplier.get());\r\n        }\r\n}\r\n```\r\n\r\nOn caller side this would look like this:\r\n\r\n```java\r\nsendEventToClients(GameStartMessageEvent::new);\r\n// ... which is syntactic sugar for \r\nsendEventToClients(() -> new GameStartMessageEvent());\r\n```', 'comment_created': datetime.datetime(2021, 7, 3, 20, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 663408793, 'comment_body': ""This is just a check to make sure that the game hasn't started yet, if a player joins once the game starts the pregame timer would appear on their screen in case this check isn't there. This is only when the players teleport to the base, I haven't considered the pregame phase in case of restarts yet, but this check would only be needed if the restarted game doesn't have the same amount of players."", 'comment_created': datetime.datetime(2021, 7, 3, 21, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 663410778, 'comment_body': ""If you're invulnerable you cannot be hurt/wounded, if you're invincible you cannot be defeated/killed."", 'comment_created': datetime.datetime(2021, 7, 3, 21, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663411934, 'comment_body': 'if this is a notification event indicating that the pregame phase has started, why do we have `PregameEvent` that also indicates that the pregame phase has started :thinking: ', 'comment_created': datetime.datetime(2021, 7, 3, 21, 39, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663412309, 'comment_body': ""If I remember correctly this is run on the owner of the player whereas that is run on the player itself, we need to send the event to the owner so that the UI can be correctly configured and without this it doesn't work."", 'comment_created': datetime.datetime(2021, 7, 3, 21, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 663412666, 'comment_body': ""ah okay, yeah that's possible of course."", 'comment_created': datetime.datetime(2021, 7, 3, 21, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663481538, 'comment_body': 'So Skal just argued that looping through all players again would not be too much of a concern as we have - in comparison to the total number of entities - comparably few players.\r\n@ahv15 can you maybe put a comment on the overhaul trello card and note to have another look at this as a follow-up?', 'comment_created': datetime.datetime(2021, 7, 4, 10, 23, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 663484013, 'comment_body': 'Ok', 'comment_created': datetime.datetime(2021, 7, 4, 10, 43, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}]","[{'commit_sha': '8e15de86197902e61cbad091de40c5e013e23545', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc31da0cdf2600cce58f7e92f73fc4ba60c20682', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92141113be6f72f1f9e83b22720ac6e9363c7df4', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21d78132868d8538006b8adbff9abf682dfccc26', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b171ee78fcc8a58a63a4b387793caf83f02beb8b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f28036bc940c4db90a59820cafe6a472427b533', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ce40713f6510a75910ff2aeccc825f998f2a9b8', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29304171d08f742ae9501489de79a8eb6dbaf27e', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dad3c4bbd5848be86980840efd831e3873e91324', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cf82b0827b0a3eb1df2e90cea1ee48f96ddca1b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca8f6cb7e44424531d60a99868155c811f92c55b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09ffacf72d5efc5b6e4840860ca798e313e30de3', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7f6dffb018c0c50b6192e13df44c24313877d40', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f92d9e856979a0687452fd8aff9521b0d80d4720', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95f564499ebec732d38d2e7e917f11a37e586bdc', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a63fa0f5f47ae767dcb96614624c76ee58c2cd4', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e8ed0ef3c9271c09037431a81e3c32b245725f6', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9d5743e8733d6fe809f14d533d653cfdc305e43', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bbb4368b629cb8e2955e0927102c59e23c38626', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9417469403d1b64a51de8dc98a74a32ad1519d9d', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5ecad2abe27b7484b8406d20ede8b5dbadd5670', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff271945ad79295673e00cdbed9e6239845c68ef', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
678329555,fix: barrier not visible in multiplayer,This PR allows the barrier to be seen in multiplayer. Part of https://github.com/Terasology/LightAndShadow/pull/219,True,68,https://api.github.com/repos/Terasology/LightAndShadowResources/pulls/68,https://github.com/Terasology/LightAndShadowResources/pull/68,closed,2,0,1,6,0,0,0,0,[],2021-06-26 12:29:20+00:00,2021-07-03 12:26:55+00:00,604655.0,"6 days, 23:57:35",[],"[{'commit_sha': 'f006759d92ce982e269d535c35563d61cd00652b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30459c1a03f5795d09343d836a3fee93997e1808', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29c69543d58af795887c94d94b34a1233280a9e2', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e6d319143159fd89a4f0c1af891d5200e0a7b27', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bf3b5b933d601eb0dc8f87a1c7ffe94389a44e4', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8190e2d5191e3705b441936e6bee5645e1e81954', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
712940336,fix: Destroy magic barriers and make players vulnerable on headless servers,There does seem to be a 1-2 seconds delay between the UI and the destruction of the barrier. Not sure how to test this on a headless server.,True,233,https://api.github.com/repos/Terasology/LightAndShadow/pulls/233,https://github.com/Terasology/LightAndShadow/pull/233,closed,50,25,5,4,0,3,1,0,[{'name': 'Type: Bug'}],2021-08-15 13:55:27+00:00,2021-08-15 20:06:47+00:00,22280.0,6:11:20,"[{'comment_id': 689111698, 'comment_body': 'A) I think the time after which the barriers should be destroyed should be defined by the event.', 'comment_created': datetime.datetime(2021, 8, 15, 16, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 689111726, 'comment_body': 'If we call this a ""delayed"" event, we should encode the delay in this event, so that we only have a single source of truth how long the countdown is.', 'comment_created': datetime.datetime(2021, 8, 15, 16, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 689111985, 'comment_body': 'B) These delayed action ids are global, and ""deactivate"" is pretty generic. I\'d recommend to define a constant with a name resembling our typical asset urn schema, e.g., \r\n\r\n```java\r\nprivate static final String DEACTIVATE_BARRIERS_ACTION = ""LightAndShadow:deactivateBarriers"";\r\n```\r\n\r\nThis constant should be used both here and in the event handler for the delayed action', 'comment_created': datetime.datetime(2021, 8, 15, 16, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': '4914aee98f8e9da8d03af1b56d4acd9484b1824a', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc5a7efb26c24ae2833c68d591f6f2c1f399f637', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b80ba186b5b8f92e188427c86e4f8b4ea83e3609', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9877722d6799737c02cd9e6c33a7d24e79ccb6c', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
692556299,feat: use cards for defense,"Get a card using ```give clubsAce```. Point it at the ground and activate it to spawn a door like structure which can be used as a passive defense mechanism. The item itself still needs some tweaks,
![image](https://user-images.githubusercontent.com/52852877/126158575-80913115-4016-4d2a-b082-9d32eca154c0.png)
",True,230,https://api.github.com/repos/Terasology/LightAndShadow/pulls/230,https://github.com/Terasology/LightAndShadow/pull/230,closed,8,41,1,3,0,7,0,0,[],2021-07-19 12:18:36+00:00,2021-08-03 19:27:14+00:00,1321718.0,"15 days, 7:08:38","[{'comment_id': 672602628, 'comment_body': 'Why this check for soil?', 'comment_created': datetime.datetime(2021, 7, 19, 20, 19, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 672913176, 'comment_body': 'This is so that the card is only placed above the ground (soil) rather than on top of grass, flowers, the bases etc.', 'comment_created': datetime.datetime(2021, 7, 20, 8, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 672927974, 'comment_body': 'in that case, I\'d rather go for an attribute such as ""solid""... I think you could use the block property check `isPenetrable` here 🤔 (see https://github.com/MovingBlocks/Terasology/blob/develop/engine/src/main/java/org/terasology/engine/world/block/Block.java#L230)', 'comment_created': datetime.datetime(2021, 7, 20, 8, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 672944414, 'comment_body': ""I don't think that check would be sufficient for more specific scenario's such as when a player tries to place the card on the base and the floating platform. Not sure but I will test it out later."", 'comment_created': datetime.datetime(2021, 7, 20, 9, 6, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 672957832, 'comment_body': 'do we want to forbid to place anything on the base? consider that you would also need to check something like that for everything that is placeable then.\r\non the floating platform, a player without cheat permissions should not be able to get a card in the first place 🤔 ', 'comment_created': datetime.datetime(2021, 7, 20, 9, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 672962786, 'comment_body': ""the shop is available even on the floating platform. By placing the cards on the base it becomes possible to barricade the flag itself which might make it too difficult to get the flag (while breaking down the barrier the player's defenses become too low)."", 'comment_created': datetime.datetime(2021, 7, 20, 9, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 672966655, 'comment_body': ""> the shop is available even on the floating platform\r\n\r\nthat's something I'm not entirely convinced we want (I mean that's what we have the pre-game phase for, right?) to be honest...\r\n\r\n> it becomes possible to barricade the flag itself\r\n\r\nI'd say this is exactly the kind of defense strategy that the cards could be used for and I don't see too much harm in that in general.\r\nIn the end it's a question of balancing (which is not reasonable to do at this point in time - yet). If in comparison to other mechanisms the cards become too powerful, we can still tweak that.\r\nRestricting the placement is one screw you can turn, but there's also others, i.e. card price, max number of cards you can buy, etc ... But IMO restricting that already now would be premature optimization."", 'comment_created': datetime.datetime(2021, 7, 20, 9, 36, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}]","[{'commit_sha': '19813954b840fd9fc4f1abba4dd333544072a37e', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33024d2dac32c545b45b3f464af71d889ac81bea', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50687b68f7594c57c774a67902a6c277b222b288', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
686205740,feat: add in-game statistics screen,Ingame statistics screen with notification to help player's use the screen for the first time. Requires a different icon for the notification.,True,225,https://api.github.com/repos/Terasology/LightAndShadow/pulls/225,https://github.com/Terasology/LightAndShadow/pull/225,closed,475,6,6,28,0,16,2,0,"[{'name': 'Topic: UI/UX'}, {'name': 'Type: Improvement'}]",2021-07-08 17:37:47+00:00,2021-08-16 21:21:12+00:00,3383005.0,"39 days, 3:43:25","[{'comment_id': 682043272, 'comment_body': 'Why exactly do we need to do it like this?', 'comment_created': datetime.datetime(2021, 8, 3, 19, 31, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 682047422, 'comment_body': '```suggestion\r\n                    ""Press "" + getActivationKey(new SimpleUri(""LightAndShadow:statistics"")) + "" to see statistics"",\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 19, 37, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 682049940, 'comment_body': 'I would definitely go with something shorter. For the other notifications we used something not so ""technical"" or ""official"" or ""serious"", but rather something remotely funny or that had a kind of ""ring"" to it...\r\n\r\nFor this I\'d propose \r\n```suggestion\r\n                    ""The Numbers Game"",\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 19, 41, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 685526794, 'comment_body': ""This seems like the easiest way to align the elements (labels) in the necessary layout, I don't think we would have the flexibility in arrangement otherwise."", 'comment_created': datetime.datetime(2021, 8, 9, 21, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 686348481, 'comment_body': 'I\'ll need to have another look at the screen in-game, but this seems weird... on the other hand TeraNUI is kind of weird, so maybe it\'s just another ""oh wow, it\'s _that_ weird"" moment for me :sweat_smile: ', 'comment_created': datetime.datetime(2021, 8, 10, 21, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 687979825, 'comment_body': 'Either go with \r\n```suggestion\r\n                    ""Press "" + getActivationKey(new SimpleUri(""LightAndShadow:statistics"")) + "" to see statistics"",\r\n```\r\nas I proposed originally, or with\r\n```suggestion\r\n                    ""Press "" + getActivationKey(new SimpleUri(""LightAndShadow:statistics"")) + "" to see the statistics screen"",\r\n```\r\n\r\nCurrently, it\'s a bit weird English :sweat_smile: \r\nI would prefer the first as it\'s shorter.', 'comment_created': datetime.datetime(2021, 8, 12, 18, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 687982209, 'comment_body': 'From the name it\'s not clear that this is an event.\r\nAlso I\'m missing documentation.\r\nAnd I wonder whether you mean [""tap""](https://www.oxfordlearnersdictionaries.com/definition/english/tap_1), not [""tab""](https://www.oxfordlearnersdictionaries.com/definition/english/tab_2)? The second explanation for ""tab"" might fit, but is ambiguous IMO as we\'re not actually using the tab key...', 'comment_created': datetime.datetime(2021, 8, 12, 18, 21, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 688006461, 'comment_body': ""So _theoretically_, it should be possible to span elements as explained in the old [TeraNUI Tutorial Wiki](https://github.com/Terasology/TutorialNui/wiki/MigLayout#merging-and-splitting-cells). However, I gave it a quick try and it doesn't seem to work anymore... So I guess we need to stick with this for now."", 'comment_created': datetime.datetime(2021, 8, 12, 18, 58, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 688017893, 'comment_body': ""Most of the button based events I have seen don't explicitly mention event in their name."", 'comment_created': datetime.datetime(2021, 8, 12, 19, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 689064106, 'comment_body': ""@jdrueckert and I briefly discussed this offline. All the button events (for keys on the keyboard) don't have the suffix, so omitting it for consistency makes sense :+1: \r\n\r\nThe only events where we use an `...Event` suffix is for button events associated with mouse clicks - for whatever reason :shrug: "", 'comment_created': datetime.datetime(2021, 8, 15, 10, 2, 36, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 689064547, 'comment_body': ""What's the reason to have a version range here?"", 'comment_created': datetime.datetime(2021, 8, 15, 10, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 689065008, 'comment_body': ""I think our JSON assets are parsed in a way that we allow for comments in them.\r\n\r\nI'd appreciate if we could add why we need this override for Light and Shadow.\r\n\r\nIf I get it correctly, this is do move the notification area to the bottom left of the screen (instead of top right corner)?\r\n\r\n```suggestion\r\n/** Move the notification area to bottom-left corner of the screen to avoid overlaps with inventory. */\r\n{\r\n```"", 'comment_created': datetime.datetime(2021, 8, 15, 10, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 689065416, 'comment_body': 'We show this notification as soon as the player joins the game, right? Does it overlap with the dialog box of the fool?', 'comment_created': datetime.datetime(2021, 8, 15, 10, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 689083841, 'comment_body': 'nothing in particular, was just following the ranges specified when being used in the other modules (Eventual Skills and Ingame Help)', 'comment_created': datetime.datetime(2021, 8, 15, 12, 41, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 689085289, 'comment_body': 'Yes looks like it does, the only place that remains is the top left.', 'comment_created': datetime.datetime(2021, 8, 15, 12, 53, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 689834570, 'comment_body': 'Okay, then I guess I have to ask myself why I put them in there that way :thinking: :sweat_smile: \r\n\r\nI guess with the leading `0.` each minor version upgrade is incompatible, and since I knew that 0.1.0 and 0.2.0 are still backwards compatible I put in this range ...', 'comment_created': datetime.datetime(2021, 8, 16, 20, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': '45e17b29775ebc2dc93858516e60aa19d69116ab', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e56426c9a9aa04ffc1ada55ad904004b0ea9c6c9', 'committer_username': 'naalit', 'committer_name': 'Sylvie Dirkswager', 'committer_email': None, 'commit_date': datetime.datetime(2015, 6, 24, 20, 43, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c86f7221cf8605ab66dae0afdeee9cb6059006cf', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdece5760b33fb30588b2cadd1bd925f1c404d58', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15de069c444d9b4ac823fb4b33227dfcfb4b62f5', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c312e0edb7864cf89f55a042b888d66e0d92ede5', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcb1c2ac5a51cb4e1c56980879557e5ca94d0974', 'committer_username': 'skaldarnar', 'committer_name': 'Tobias Nett', 'committer_email': None, 'commit_date': datetime.datetime(2012, 2, 18, 10, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf242e77d00fb28162dafc5dc382a6000380d116', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17c74516798d4a63167da5499456f64eada98ffd', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00ffb96a3961ca9186432f2ccd54f4a7cfbb4e9b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0dbe4b0ac9bc11d1a35d06a0a7dcb46a6a913b4', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c67f42276c52b7107b238e5514a0ac78fa2d22f2', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47d96aa9ddf129c79df8d8c3f8860a79ce8af989', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7156c619ea04246f0dfe4a3a6f40bb2abb69a132', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '351649bf39191107f1380ffa0e40f800e9bf0c0b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b79f7257a56819d5938bf1d069b2e5476cd045b4', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c90a5b0aadbdc2ed1b7c160e5bb857e6cd05694a', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '411af0f08d382ddc1c80a1306fb5b722feeb365b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a573309635637f29dc15af973a247d1192331ee2', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec7245c65d197b1b8ef69edc435ac4ba2b239d53', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '337e5733d585cbfb48db3902b4cdf774188d663e', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e4e8bfe0ccdfc19f36c6778ed14be8a9b7e0a88', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39bbdafe83afb656e16993c34aed390cb6bce93d', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79071a8e86b02a3fc589108b385bf03efc8bc3c5', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0c7d391bc39256a81ab89a48e2e3cacef90b5a6', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87260a4e14e725b91692ae5d25e0edd7cfdc4f31', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '227a40a4ac8d8268cb72a4701e56c8412cc36c2a', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90e45171e723e82784d37b89da91e78413a7cb3e', 'committer_username': 'skaldarnar', 'committer_name': 'Tobias Nett', 'committer_email': None, 'commit_date': datetime.datetime(2012, 2, 18, 10, 28, 41, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
691962345,feat: face opponents base on spawn,Requires https://github.com/MovingBlocks/Terasology/pull/4823 to test this.,True,229,https://api.github.com/repos/Terasology/LightAndShadow/pulls/229,https://github.com/Terasology/LightAndShadow/pull/229,closed,18,0,4,6,1,3,1,0,[{'name': 'Type: Improvement'}],2021-07-17 17:19:05+00:00,2021-07-27 20:43:06+00:00,876241.0,"10 days, 3:24:01","[{'comment_id': 671732780, 'comment_body': ""While this works currently for our simple map, this code would be more resilient if we'd compute the yaw from the teleport target position and the opponent player base position. "", 'comment_created': datetime.datetime(2021, 7, 17, 19, 8, 53, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 671818690, 'comment_body': ""Made use of this https://stackoverflow.com/questions/5188561/signed-angle-between-two-3d-vectors-with-same-origin-within-the-same-plane as the default calculation of angles isn't signed. The 2nd comment gave me a more precise answer so I used that."", 'comment_created': datetime.datetime(2021, 7, 18, 10, 16, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 672601845, 'comment_body': '`getYaw` seems a good name for a general utility function, but doesn\'t match the hard-coded (and not documented) ""assumptions"" about _what_ yaw we\'re calculating here (relation to the teleport destinations of the teams, etc.)', 'comment_created': datetime.datetime(2021, 7, 19, 20, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}]","[{'commit_sha': 'fb918cdc650bc141f1dc84b6c0d2085ec4717c91', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b711486546825cb99335f1926d12195dd1ae12f', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58548d954efba19fe637aaa95b173ab249bdbec2', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59fb3aac1aa83e4c596cec993a407841e3af32b5', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a719c124e01902ce6c0403af6d8044304174e59', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88dbf996f47b79262e47776a189eed3baeaba312', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
691959443,feat: add `SetDirection` event to set player orientation,"This PR allows players to face a particular direction by making use of an UpdateDirectionEvent.
",True,4823,https://api.github.com/repos/MovingBlocks/Terasology/pulls/4823,https://github.com/MovingBlocks/Terasology/pull/4823,closed,39,6,2,4,0,3,0,0,[],2021-07-17 16:56:20+00:00,2021-07-19 20:15:11+00:00,184731.0,"2 days, 3:18:51","[{'comment_id': 671731981, 'comment_body': 'This event should have some docstring explaining what it is used for and how to use it. Try to categorize it with the event types we mentioned before.', 'comment_created': datetime.datetime(2021, 7, 17, 19, 0, 52, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 671732076, 'comment_body': 'There are event handlers for `updateRotationYaw` and `updateRotationPitch`. If we were to use the same vocabulary, this would rather be `setRotation` (as `update...` is just setting the delta to be used in the next update).', 'comment_created': datetime.datetime(2021, 7, 17, 19, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 671732571, 'comment_body': 'As mentioned in my other comment, maybe we should rather call this `SetDirectionEvent`?', 'comment_created': datetime.datetime(2021, 7, 17, 19, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': '494aa681fbfda75d7b667ab8ac0160a00a5f2c1d', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61103d9e47f1e96947ef3af339759019500ffd30', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff21d43feb04121dc22d14b8372286bafda9ae7b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4534120e0887461c5b01ec439876951c5b689a7c', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
687233443,feat: implementation for economy,"Makes use of the implementation from GooeyDefence and requires https://github.com/Terasology/Economy/pull/22, and needs https://github.com/Terasology/LightAndShadowResources/pull/72 to test the shop screen.",True,228,https://api.github.com/repos/Terasology/LightAndShadow/pulls/228,https://github.com/Terasology/LightAndShadow/pull/228,closed,23,13,4,23,1,4,0,0,[],2021-07-10 20:20:29+00:00,2021-10-09 19:49:31+00:00,7860542.0,"90 days, 23:29:02","[{'comment_id': 676854602, 'comment_body': 'this should have different name', 'comment_created': datetime.datetime(2021, 7, 26, 18, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676855104, 'comment_body': 'if we believe this is a good default for ... shop screens ... we should just add the skin to Economy.', 'comment_created': datetime.datetime(2021, 7, 26, 18, 44, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 695473105, 'comment_body': 'As @skaldarnar commented in the associated GD PR: we might want to release `Economy` once the PR is merged and bump the version number.', 'comment_created': datetime.datetime(2021, 8, 25, 7, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 695473525, 'comment_body': 'I wonder if this can live in `Economy` as well? Or does it differ from the one we have in GD? If so, in how far?', 'comment_created': datetime.datetime(2021, 8, 25, 7, 27, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}]","[{'commit_sha': '5095603aacd849620e9643c4e0a864f33a1d57a6', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f65d6bb52c24a29e5c5f5108a2076efaf4e89311', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '291382b44c2feed577d90414e38292a22e9ed37d', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b06268465e71e836dc23bfd9941cae0e178ce8fd', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3288dd0edd7fa67a20020ee4800b2f1d93bb4b4c', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0edc686bd467872c103be3056f1784b10eff3b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fddb8c000b0cbb6f1915b8850a345c553593ea80', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22460c01579e4d6c0879afd23b00384735ca2a38', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a63966d70c2597fa88ec525051593189397bbb7', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01d144a856c1f26bfd0777f7971dc347f933f466', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dbb3a7dcdc8e1eed97f9b355ea0e1337fdbaf59', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0f6ca905d8598d2c8465ec9e96ce7b83d5b4b37', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8565489dd5b7a44c01fffe0e9b406d1f7531fdee', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4225029eea1bdc0dc55f668ae38d034f6197fbcd', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3469721d369bca81d51d224ad26edf5270f46642', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69fc654d14e9ddf843b7a0ff5543a3a579941d27', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f87e8b6bbedd47e9f6daaebaa3e6cd2481d7dc49', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '547f8cb9e25bf5dc5dd32ab29acaebcd8ab3a002', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35010fe61bde49ff4c89b6ccb2da5e468de4dc0e', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa8cbab8471490c849476f73afd63a595c1ab7ff', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05162bad43d620448eb8f6a411eef230726a4f3c', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea8880608fa35811dceb13754c27102518be0b33', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f1fe7be54f1b34959de2e188843a00ac5d07bdd', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
691050574,feat: add shop-screen,These changes allows the items to be bought in multiplayer using the shop screen.,True,22,https://api.github.com/repos/Terasology/Economy/pulls/22,https://github.com/Terasology/Economy/pull/22,closed,834,13,14,11,2,36,0,0,[],2021-07-15 21:35:55+00:00,2021-10-09 19:13:22+00:00,7421847.0,"85 days, 21:37:27","[{'comment_id': 676809282, 'comment_body': 'The default value here is -1, but what does that mean? Does the player get money back when they buy it? And why is -1 a better default value than 0?', 'comment_created': datetime.datetime(2021, 7, 26, 17, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676810653, 'comment_body': 'And why do we need this at all? This is just a shortcut to avoid having both `Purchasable` and `Value` on an entity, right?\r\n\r\nIf possible I\'d rather have one ""marker component"" without any fields instead of tracking the same thing in two places.', 'comment_created': datetime.datetime(2021, 7, 26, 17, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676811528, 'comment_body': 'Given that the name is so similar to `GiveItemEvent` I think we should explain the difference between the two here, and also why we need this event in addition.', 'comment_created': datetime.datetime(2021, 7, 26, 17, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676812306, 'comment_body': 'It might be better to make this constructor package private as it is only meant for internal usage for deserialization, but this event does not make much sense with a `null` prefab.', 'comment_created': datetime.datetime(2021, 7, 26, 17, 40, 15, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676820824, 'comment_body': ""That's a safe guard as I would have put it here, but given the r[ecent discussion](https://discord.com/channels/270264625419911192/702893102481932308/868881134807826502) on `World::setBlock` I'm wondering what @keturn would do here?\r\n\r\nAs this event with a `null` prefab is most likely a bug we should at least log a WARN message if this case occurs.\r\nIf we want to be sure that we notice that the case occurred we should probably even throw an exception here. I'm not sure whether we are able to figure out the original sender of the event with an exception here, but I hope that the stacktrace would reveal that information."", 'comment_created': datetime.datetime(2021, 7, 26, 17, 52, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676821759, 'comment_body': ""Can't we get the component from the prefab even before creating the final entity? If the player cannot purchase an item we should probably not create it."", 'comment_created': datetime.datetime(2021, 7, 26, 17, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676823567, 'comment_body': 'The main use case for this is for tooltips, it seems. Can you explain why this is necessary in more detail?', 'comment_created': datetime.datetime(2021, 7, 26, 17, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676849643, 'comment_body': 'Please add a `//TODO` comment to make this translatable.', 'comment_created': datetime.datetime(2021, 7, 26, 18, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676851599, 'comment_body': ""I'd add a check using Guava preconditions (`checkArgument`)  that `ware` actually is `Purchasable`. Without this check this method will just fail with a NPE."", 'comment_created': datetime.datetime(2021, 7, 26, 18, 38, 55, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676852412, 'comment_body': 'Ah, so all blocks with a `Purchasable` component appear in the shop - that actually sounds reasonable :+1: (at least for the start).', 'comment_created': datetime.datetime(2021, 7, 26, 18, 40, 18, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676853351, 'comment_body': 'Why do we do the transaction manually here instead of using the new event?', 'comment_created': datetime.datetime(2021, 7, 26, 18, 41, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 695463400, 'comment_body': 'Why can we drop the negative costs check that was present here in the GD implementation?', 'comment_created': datetime.datetime(2021, 8, 25, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 695465702, 'comment_body': 'Why does the `ItemAuthoritySystem` check the transaction and send the `WalletTransactionEvent` and not the `ShopManager`?', 'comment_created': datetime.datetime(2021, 8, 25, 7, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 695467450, 'comment_body': 'I guess the difference to `GiveItem` here is that the item is not actually ""moved"" but only a copy of it? I think it would help to actively state the difference here, including a cross-reference.', 'comment_created': datetime.datetime(2021, 8, 25, 7, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 695468472, 'comment_body': 'It seems like maybe we could extract some code shared between the prefab and the block case here.', 'comment_created': datetime.datetime(2021, 8, 25, 7, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 695470414, 'comment_body': '```suggestion\r\n * All size values etc are determined by the content widget.\r\n```', 'comment_created': datetime.datetime(2021, 8, 25, 7, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 696584069, 'comment_body': 'That is how I designed it in gooey defense in order to save time. I could easily see alternatives used, especially if multiple shops are to be used in parallel. (eg, metal renagades). In this situation, perhaps a URI for each shop which is referenced inside the purchasable component?', 'comment_created': datetime.datetime(2021, 8, 26, 12, 33, 41, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 696585480, 'comment_body': 'My understanding is that this event is a trigger, to create and then give an item to the player.', 'comment_created': datetime.datetime(2021, 8, 26, 12, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 696587992, 'comment_body': ""I believe that it may be wise to remove this system altogether\r\n\r\nLike it was pointed out, it makes more sense for the shop system to check the value, and furthermore I don't see why any of this code has to be done in a separate system.\r\nIf we are firing an event, which is only intended to be used for calling this system, then the two should be combined."", 'comment_created': datetime.datetime(2021, 8, 26, 12, 38, 35, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 696603417, 'comment_body': ""I looked over the prior commits I made and, although I don't recall all the details, it is likely to do with the way user interaction is handled.\r\n\r\nWe can't just use the `ItemIcon` widget that this contains, because we cannot assign a listener to it\r\nWe need to assign a listener to it, because clicking on this widget indicated that this item is selected.\r\nThis is visible from the line in ShopScreen#addBlocks\r\n```java\r\nwrapper.setListener(widget -> handleBlockSelected(block));\r\n```\r\nand the line in ShopScreen#addItems\r\n```java\r\nwrapper.setListener(widget -> handlePrefabSelected(item));\r\n```\r\n\r\nThe listener indicates which shop entry was selected, as well as calling the handler for the specific type, item vs block.\r\n\r\nIf this is no longer how the code works, and selection is not done by clicking an item in the ship screen, the  this is likely unneeded. However, as far as I am aware, this is not the case and as such, the wrapper is needed."", 'comment_created': datetime.datetime(2021, 8, 26, 12, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 697163820, 'comment_body': 'before if the PurchasableComponent was -1 that meant that the price was stored in the ValueComponent but over here instead we are solely relying on the ValueComponent for the price.', 'comment_created': datetime.datetime(2021, 8, 27, 5, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 697166290, 'comment_body': 'The main reason for this system is because the GiveItemEvent seems to work mainly on Authoritative Systems and this becomes necessary for multiplayer, and after discussing this with @skaldarnar and @jdrueckert they suggested creating a separate system so that even MR can eventually use this. (MR also makes use of a separate system for this in a similar manner if I am not mistaken)', 'comment_created': datetime.datetime(2021, 8, 27, 5, 40, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 697172544, 'comment_body': 'Because the ShopManager is not an authoritative system and these checks are better used in Authoritative Systems.', 'comment_created': datetime.datetime(2021, 8, 27, 5, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 697875190, 'comment_body': 'Is there a reason, why the ShopManager should stay a non-authoritative system?', 'comment_created': datetime.datetime(2021, 8, 28, 14, 12, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 697876127, 'comment_body': 'Makes me wonder why we differentiate between the two in the first place and why GD even allows for the price to be in either.', 'comment_created': datetime.datetime(2021, 8, 28, 14, 21, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 697876581, 'comment_body': 'Seems like there\'s some comments that got lost here: I think this documentation still does not clearly distinguish `GiveItemType` from the ""normal"" `GiveItem`', 'comment_created': datetime.datetime(2021, 8, 28, 14, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 697877273, 'comment_body': 'I\'d assume this has ""historical reasons"" and our usual reluctance to use and/or modify existing concepts :thinking: ', 'comment_created': datetime.datetime(2021, 8, 28, 14, 31, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 697877555, 'comment_body': 'code style nitpick: move this closer to where it is used, i.e., after the `purchasableItems` statement.', 'comment_created': datetime.datetime(2021, 8, 28, 14, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 697878001, 'comment_body': '```suggestion\r\npublic class PurchasableComponent extends EmptyComponent<PurchasableComponent> {\r\n```', 'comment_created': datetime.datetime(2021, 8, 28, 14, 38, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 697878007, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 28, 14, 38, 16, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 697878220, 'comment_body': 'Why change this this way? It looks like it was intended to be a constant value, so just making it static as well would be a better fix?\r\n```suggestion\r\n    private static final String CURRENCY = ""currency"";\r\n```', 'comment_created': datetime.datetime(2021, 8, 28, 14, 40, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 697878838, 'comment_body': 'Thanks for the explanation!', 'comment_created': datetime.datetime(2021, 8, 28, 14, 46, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 697879316, 'comment_body': ""I'd like to add @syntaxi 's explanation (https://github.com/Terasology/Economy/pull/22/files#r696603417) as in-code comment here:\r\n\r\n```suggestion\r\n * All size values etc are determined by the content widget.\r\n * <p>\r\n * NOTE: We can't just use the {@code ItemIcon} widget that this contains, because we cannot assign a listener to it.\r\n * We need to assign a listener to it, because clicking on this widget indicated that this item is selected.\r\n * This is visible from the line in ShopScreen#addBlocks\r\n * <pre>\r\n * wrapper.setListener(widget -> handleBlockSelected(block));\r\n * </pre>\r\n * and the line in ShopScreen#addItems\r\n * <pre>\r\n * wrapper.setListener(widget -> handlePrefabSelected(item));\r\n * </pre>\r\n * The listener indicates which shop entry was selected, as well as calling the handler for the specific type, item vs block.\r\n */\r\n```"", 'comment_created': datetime.datetime(2021, 8, 28, 14, 50, 37, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 697880519, 'comment_body': 'This is so that the ShopScreen which is accessible by all players can access the ShopManager.', 'comment_created': datetime.datetime(2021, 8, 28, 15, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 697880812, 'comment_body': 'I was trying to resolve some of the suggestions given.', 'comment_created': datetime.datetime(2021, 8, 28, 15, 4, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 697897154, 'comment_body': 'I tried to integrate that (as authority event handler) into the `ShopManager` in 969e482', 'comment_created': datetime.datetime(2021, 8, 28, 17, 37, 17, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': '21435a7108a0123e26e0da6d60130fd10717d598', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '315e6ab8f6d48cee894102003bf529fcaa16b37b', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb70ac90e265a19a2cbf42f4830a1d320d5354a7', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f726b325e98be2c8df720b5b9c6e4abee98f9e5c', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c3cea7d2da58ff0a1300252a6d8255b6535ada7', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4de0cb834edf5e23b64dd099c40fce728f26de4', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f02afc1c6fd29a54deba5e6adababb5bfe4ec54', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '969e4824d05afab48adc81b68e873e3da4bc718c', 'committer_username': 'skaldarnar', 'committer_name': 'Tobias Nett', 'committer_email': None, 'commit_date': datetime.datetime(2012, 2, 18, 10, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ea2096e4e1469b7431a020695208db67cd25654', 'committer_username': 'skaldarnar', 'committer_name': 'Tobias Nett', 'committer_email': None, 'commit_date': datetime.datetime(2012, 2, 18, 10, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bef68c5b20b9dc3bd2b61b7de7ddbf6b9d86d2e0', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83f013191dbdaa4a3e448dc4859c584f4cbd4b5a', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
691057608,refactor!: move shop screen to Economy module,Requires https://github.com/Terasology/Economy/pull/22 to test this. Shifts the Shop Screen to the Economy Module so that other gameplay modes can make use of it. Makes use of the walletHUD from the Economy module to display the amount of money a player has instead of moneyLabel in the DefenceHUD.,True,68,https://api.github.com/repos/Terasology/GooeyDefence/pulls/68,https://github.com/Terasology/GooeyDefence/pull/68,closed,25,698,15,9,0,16,0,0,[],2021-07-15 21:51:33+00:00,2021-10-09 19:49:22+00:00,7423069.0,"85 days, 21:57:49","[{'comment_id': 676904197, 'comment_body': 'Where did this go, why does the player no longer need funds to start with?', 'comment_created': datetime.datetime(2021, 7, 26, 20, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676904528, 'comment_body': 'We should make a release of the current state of Economy and bump the version number ... :thinking: ', 'comment_created': datetime.datetime(2021, 7, 26, 20, 2, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676906069, 'comment_body': 'Ah, I see - why was this change necessary? (You probably already explained that before... :see_no_evil: )', 'comment_created': datetime.datetime(2021, 7, 26, 20, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 676906697, 'comment_body': ""I've seen the magic number `100` a couple of times here now. I think it makes sense to turn this value into a constant to be used in all the places."", 'comment_created': datetime.datetime(2021, 7, 26, 20, 6, 9, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 695460952, 'comment_body': ""I don't see the actual skin file being removed?"", 'comment_created': datetime.datetime(2021, 8, 25, 7, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 696577065, 'comment_body': 'I would prefer to leave this as a prefab, as it would allow the value to be changed', 'comment_created': datetime.datetime(2021, 8, 26, 12, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 696577897, 'comment_body': ""Like my prior comment, can't this component be added to the player in the prefabs.\r\nThis change would also allow for other modules to add money to entities, without having to do so through the code every time"", 'comment_created': datetime.datetime(2021, 8, 26, 12, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 696580123, 'comment_body': 'The method already in the resetMoney function can be tweaked to allow for base values to be set in the prefab.\r\nAlternatively, this ""reset"" function could be moved to the Economy module, however this would depend on your design, which I am not familiar with', 'comment_created': datetime.datetime(2021, 8, 26, 12, 28, 4, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 697503858, 'comment_body': ""It's being used in some other UI files and is not specific to this file."", 'comment_created': datetime.datetime(2021, 8, 27, 14, 50, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 697631998, 'comment_body': ""The only reason I did this was because Economy creates the CurrencyStorageComponent and adds it to the player by default overriding the defined CurrencyStorageComponent in the player's prefab. Doing it in this manner allows us to make use of a value which will always be constant rather than always changing."", 'comment_created': datetime.datetime(2021, 8, 27, 18, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 697635965, 'comment_body': 'Just saw the comment below I got what you meant.', 'comment_created': datetime.datetime(2021, 8, 27, 18, 19, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 697874574, 'comment_body': 'Why do we need this in GD, but not in LaS?', 'comment_created': datetime.datetime(2021, 8, 28, 14, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 697878515, 'comment_body': 'Because LaS makes use of the default amount in Economy but GooeyDefence needs to override it.', 'comment_created': datetime.datetime(2021, 8, 28, 14, 43, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 697879155, 'comment_body': ""That means that as soon as somebody changes the default in Economy (a module that itself should be unaware of the modules using it), this will break the balancing of LaS. That sounds like a bad idea. Please also add the override to LaS, even if it's set to the same value as the (current) default in Economy."", 'comment_created': datetime.datetime(2021, 8, 28, 14, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jdrueckert', 'type': 'User'}, {'comment_id': 697899627, 'comment_body': ""I made the changes but I couldn't test this in multiplayer as it is taking over 30 minutes for multiplayer to load."", 'comment_created': datetime.datetime(2021, 8, 28, 18, 0, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 697900989, 'comment_body': ""It finally loaded but for some reason there seems to be only a single CurrencyStorageComponent shared among all the players. So any item purchased by one player causes a reduction in other players wallet too. I'll try and fix this but it is taking a lot of time for multiplayer to load currently."", 'comment_created': datetime.datetime(2021, 8, 28, 18, 14, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}]","[{'commit_sha': '847a64e90592d4eb09b829681a8ba5fa749788d3', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9e524aa5ebcb0407ebfd083dba67ed532922659', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bb9a068b655318b798eb497d4ee8338ab2a1bd6', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82f3a4615d1b900259c47eb5cced37be5deda022', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e56ee4c5b769bfc01b26debcb8630c6eaa72ebc', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80191818d1d6a536a378ee41931b803dc9f51d51', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d125d605116afad232cbecdaf0811d3f8f194f8', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ebbdb36a848f0756e009436e8f742102ab5afcd', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0084c1836d55a5303c180f3a00405f1a9f9a63f8', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
691060170,test shop,This PR is used to test whether items marked by Purchasable Component are detected in the shop screen.,False,72,https://api.github.com/repos/Terasology/LightAndShadowResources/pulls/72,https://github.com/Terasology/LightAndShadowResources/pull/72,open,5,0,1,4,0,0,0,0,[],2021-07-15 21:57:27+00:00,,0.0,,[],"[{'commit_sha': 'b8c9532534e8448964b4cb891e25aec6bfa61505', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2832b5fd764efad0958f08cd866162ed2d7d48f', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f22df443ac518b83aa3307efd298a7652a5faea', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfbb214878935496021f8de695c2e9330bf177c7', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
700871879,feat: multiblock system,"Requires https://github.com/Terasology/MultiBlock/pull/28
We need a way to get the region (which we get from StructureTemplates) given the location of the mainBlock. This could be done by adding the component to the blockEntity at the location or sending events and updating a Map of each vector to the corresponding regions etc. But the recipe implementations are not meant to be used as systems (didn't work out for me).",False,68,https://api.github.com/repos/Terasology/StructureTemplates/pulls/68,https://github.com/Terasology/StructureTemplates/pull/68,open,34,7,4,8,1,12,1,0,[{'name': 'Type: Improvement'}],2021-08-01 09:59:20+00:00,,0.0,,"[{'comment_id': 680526700, 'comment_body': ""This is exactly the same as https://github.com/Terasology/MultiBlock/blob/develop/src/main/java/org/terasology/multiBlock2/DefaultMultiBlockDefinition.java, therefore let's use the existing class instead of copying it."", 'comment_created': datetime.datetime(2021, 8, 1, 15, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 680527522, 'comment_body': 'I\'d prefer if we\'d scope the multi block type a bit more, as `Structure` is a pretty generic name. Just prefixing it with the module name should be enough, I think.\r\n\r\n```suggestion\r\n        return new StructureBlockDefinition(blocks, location, ""StructureTemplates:Structure"");\r\n```', 'comment_created': datetime.datetime(2021, 8, 1, 15, 31, 45, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 680527734, 'comment_body': 'Is there any reason why you split `RecipleImpl` from `StructureTemplateRecipe` here? Do we expect more recipe implementations within Structure Templates?', 'comment_created': datetime.datetime(2021, 8, 1, 15, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 684245303, 'comment_body': 'This event needs documentation.\r\n\r\nWhere is the region sent to? Who should react on this event? What kind of event is this?', 'comment_created': datetime.datetime(2021, 8, 6, 13, 42, 12, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 684246987, 'comment_body': 'I think these top-level members should have some Javadoc explaining what they are used for. I would not expect that the ST server system needs a location or list of block regions on its own.', 'comment_created': datetime.datetime(2021, 8, 6, 13, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 684248626, 'comment_body': 'Does this always create a multi-block entity for all structure templates now?', 'comment_created': datetime.datetime(2021, 8, 6, 13, 46, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 684249616, 'comment_body': ""So we just take the minimum corner of the first block region in the template as the location at which we place the multi-block root?\r\n\r\nI'm wondering whether using the origin of the ST would be better (when you create STs in-game you start the selection from somewhere, and that block will be the origin of the local coordinate system iirc)."", 'comment_created': datetime.datetime(2021, 8, 6, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 684312213, 'comment_body': 'I think this is restricted to StructureTemplates being spawned using a layered animation. So in case we want this to happen for other kind of animations or no animation we would have to send those regions separately.', 'comment_created': datetime.datetime(2021, 8, 6, 15, 12, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 684322124, 'comment_body': ""I can't think of any added benefit of having the origin as the main location as the main location of the multiBlock is useful only to locate the multiBlockEntity with the necessary information. I could give this a try though."", 'comment_created': datetime.datetime(2021, 8, 6, 15, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}, {'comment_id': 684447348, 'comment_body': ""I think it is an inconsistency that this happens only for a specific animation, especially since animation and multi-block have essentially nothing to do with each other.\r\n\r\nTo be honest, I'd like to derive whether to create a multi-block structure or not from the structure template itself, i.e., only send this event if the template states that it shall create a multi-block structure. \r\nSuch information could even be paired with the _type_ that should be used for the spawned structure."", 'comment_created': datetime.datetime(2021, 8, 6, 19, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 684447850, 'comment_body': ""Alright then, let's leave it as the first minimum corner we can find. No need to change this."", 'comment_created': datetime.datetime(2021, 8, 6, 19, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 684642061, 'comment_body': ""Looks like the other animations don't work perfectly and the game crashes and doesn't work as expected when trying to use the other animations (FallingBlocks and NoAnimation) ,  only the default layered animation works perfectly for me . Most of the Structures use the default Layered Animation so multiBlock should work for all of them. Not too sure where the problem lie's yet though."", 'comment_created': datetime.datetime(2021, 8, 7, 14, 53, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}]","[{'commit_sha': 'c7bf3046c7889d9d89f803f75f18b3bc8c79a2cc', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c336ff172e3e48a780c3e6f0d56836508138c67e', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21750ba59149b17e5500ef890df029ba19fcc7e4', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0076c8f6b79078ca16c9a4a1987ef33df7f98b01', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7190c2e4eccb3551a48dcf3c2119f6f09f5d6131', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3759ee53a804ecbaa2c12012da2ff2ec9a07d9bf', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df539efcb71f93a3d82a4133a47b347560779348', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09c75e07fe5b74a47c1415a3962143768c64cc7e', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
700873084,feat: make StructureTemplates multiBlock entities,The region corresponding to the StructureTemplate is sent when it is created and this region is used to create the multiBlock definition and the multiBlock entity. Furthermore if the multiBlock entity is meant to act as a tower it will create a tower which causes certain effects and this depends on https://github.com/Terasology/Towers/pull/2 .,False,28,https://api.github.com/repos/Terasology/MultiBlock/pulls/28,https://github.com/Terasology/MultiBlock/pull/28,open,550,5,11,9,0,4,0,0,[],2021-08-01 10:04:37+00:00,,0.0,,"[{'comment_id': 684251258, 'comment_body': 'I would have expected the dependency to be the other way around :thinking: ST depends on MB, because STs can provide a multi-block definition when spawning a building, but MB does not need to know whether the multi-block definition originates from an ST or something else...', 'comment_created': datetime.datetime(2021, 8, 6, 13, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 684257807, 'comment_body': ""For this remaining part, what's the difference to `createMultiBlock(definition)`?\r\n\r\nhttps://github.com/Terasology/MultiBlock/pull/28/files/dda8af8514c2e03f579c620828b816ddf77621d3..844372a3b28a16c295b7eba1298c836152a1d81c#diff-f8602f8f8a58eda2a66e8250dcd9513183b6d88e9793b12fe5ffb4bb30217e3dR346-R375"", 'comment_created': datetime.datetime(2021, 8, 6, 13, 58, 52, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 684258060, 'comment_body': 'I would have expected to see this within the ST module, without the need for MB to know about ST at all.', 'comment_created': datetime.datetime(2021, 8, 6, 13, 59, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 684328080, 'comment_body': ""I didn't get the question, but in the remaining part the only difference with the actual implementation is the definition supplied which was made so that it would fit in properly. "", 'comment_created': datetime.datetime(2021, 8, 6, 15, 35, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ahv15', 'type': 'User'}]","[{'commit_sha': 'dda8af8514c2e03f579c620828b816ddf77621d3', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '844372a3b28a16c295b7eba1298c836152a1d81c', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bafef3116cf34bd0a3d256b9b5d5cb42155a85d4', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68a27c71a8affa968e1abee715d103c08ca069d0', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fefbd6d4d41a6e9e9aabf3b6abe348b96f960627', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1df6394eb58e7c8269f01d0765ec3059ae1c125', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '780b5bcfc9195ba425f0ebe4185065221f1da5aa', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b56b2518e045f92d5a8aa2cfa5946fc563d6e71', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb04f77b1fde423e9f029b429e5c5b61aa286b5f', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
702128184,feat: damage multiBlock Structures,Whenever a block in a multiBlock structure is damaged all the others blocks in the multiBlock structure are also damaged.,False,231,https://api.github.com/repos/Terasology/LightAndShadow/pulls/231,https://github.com/Terasology/LightAndShadow/pull/231,open,70,0,2,5,0,1,0,0,[],2021-08-03 09:50:13+00:00,,0.0,,"[{'comment_id': 684263846, 'comment_body': ""I'd do this in two separate steps:\r\n\r\n1. find the main multi-block, if any\r\n2. derive the `blocks` from that main block\r\n\r\nTo make the code easier to comprehend I'd additionally move this to a method which returns an `Optional<Collection<Vector3i>>` with the multi-block member positions, if any multi-block is hit.\r\n\r\nAs it does not make any difference for us whether we iterate over an empty collection (and thus don't damage any other blocks) or check if the collection is present we may even get rid of the optional here and just return a collection that may or may not contain any entries."", 'comment_created': datetime.datetime(2021, 8, 6, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}]","[{'commit_sha': '8a9daad36f4e7469b9eb87aa3275756ce857b886', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efecb5a5f31e5a6409ec8e590f1327ee13d9decf', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84a697e28a66991e4113692659b6e5f517b3069f', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee1b0ea633c0639f836f731638e60e5291fffc69', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0915911c98cc849c6b356fa746aca1686e467f7b', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
712472782,feat: add effects,Makes use of the effects from GooeyDefence and creates Towers in a similar manner.,False,2,https://api.github.com/repos/Terasology/Towers/pulls/2,https://github.com/Terasology/Towers/pull/2,open,1607,353,44,6,0,0,0,0,[],2021-08-13 15:59:12+00:00,,0.0,,[],"[{'commit_sha': 'e11e6cf81ef478d6b01dbefc54f69bcfe0b4a0cf', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b1c6297f29aeeba39c2b03e570631ec6415a9b9', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f3667ff9442d514c13fdbca507b91c61d576409', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1851c5a5dd3c5578f878f349c2a647cfe33f4ed6', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48cb62056ff5e29e398f0007e5dec0a0184377ed', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8aa842d4b1c0909458fac57b2c02a461365732d0', 'committer_username': 'jdrueckert', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 7, 14, 31, 51, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5
713985637,feat: add-towers,Test PR which adds a multiblock tower which uses an Ice Effect on a single target.,False,74,https://api.github.com/repos/Terasology/LightAndShadowResources/pulls/74,https://github.com/Terasology/LightAndShadowResources/pull/74,open,54,0,19,1,0,0,0,0,[],2021-08-17 07:26:33+00:00,,0.0,,[],"[{'commit_sha': 'a9d1f601cb026ea72ac10ce5e14f72a286c5119f', 'committer_username': 'ahv15', 'committer_name': 'Harshit', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 13, 9, 17, 8, tzinfo=datetime.timezone.utc)}]",Harshit,52852877,,User,,27,,3,5

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
13895206,LightAndShadow,Terasology/LightAndShadow,Java,22,8,19,28,429,31,15,6,"[{'id': 727426598, 'number': 235, 'closed': datetime.datetime(2021, 9, 9, 21, 16, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 5, 16, 3, 43, tzinfo=datetime.timezone.utc), 'time_taken': 364383.0, 'time_delta': '4 days, 5:13:03', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 712940336, 'number': 233, 'closed': datetime.datetime(2021, 8, 15, 20, 6, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 13, 55, 27, tzinfo=datetime.timezone.utc), 'time_taken': 22280.0, 'time_delta': '6:11:20', 'additions': 50, 'deletions': 25, 'state': 'closed'}, {'id': 707312154, 'number': 232, 'closed': datetime.datetime(2021, 8, 15, 9, 50, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 12, 33, 3, tzinfo=datetime.timezone.utc), 'time_taken': 422244.0, 'time_delta': '4 days, 21:17:24', 'additions': 6, 'deletions': 15, 'state': 'closed'}, {'id': 702128184, 'number': 231, 'closed': None, 'created': datetime.datetime(2021, 8, 3, 9, 50, 13, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 70, 'deletions': 0, 'state': 'open'}, {'id': 692556299, 'number': 230, 'closed': datetime.datetime(2021, 8, 3, 19, 27, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 12, 18, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1321718.0, 'time_delta': '15 days, 7:08:38', 'additions': 8, 'deletions': 41, 'state': 'closed'}, {'id': 691962345, 'number': 229, 'closed': datetime.datetime(2021, 7, 27, 20, 43, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 17, 19, 5, tzinfo=datetime.timezone.utc), 'time_taken': 876241.0, 'time_delta': '10 days, 3:24:01', 'additions': 18, 'deletions': 0, 'state': 'closed'}, {'id': 687233443, 'number': 228, 'closed': datetime.datetime(2021, 10, 9, 19, 49, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 20, 20, 29, tzinfo=datetime.timezone.utc), 'time_taken': 7860542.0, 'time_delta': '90 days, 23:29:02', 'additions': 23, 'deletions': 13, 'state': 'closed'}, {'id': 686205740, 'number': 225, 'closed': datetime.datetime(2021, 8, 16, 21, 21, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 17, 37, 47, tzinfo=datetime.timezone.utc), 'time_taken': 3383005.0, 'time_delta': '39 days, 3:43:25', 'additions': 475, 'deletions': 6, 'state': 'closed'}, {'id': 685482009, 'number': 224, 'closed': datetime.datetime(2021, 8, 9, 21, 16, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 20, 15, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2854873.0, 'time_delta': '33 days, 1:01:13', 'additions': 56, 'deletions': 40, 'state': 'closed'}, {'id': 682114453, 'number': 222, 'closed': datetime.datetime(2021, 7, 3, 10, 18, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 19, 31, 27, tzinfo=datetime.timezone.utc), 'time_taken': 139607.0, 'time_delta': '1 day, 14:46:47', 'additions': 1, 'deletions': 7, 'state': 'closed'}, {'id': 681936775, 'number': 221, 'closed': datetime.datetime(2021, 7, 7, 7, 46, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 14, 58, 38, tzinfo=datetime.timezone.utc), 'time_taken': 492482.0, 'time_delta': '5 days, 16:48:02', 'additions': 98, 'deletions': 281, 'state': 'closed'}, {'id': 678579364, 'number': 220, 'closed': datetime.datetime(2021, 6, 27, 21, 3, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 27, 20, 57, 35, tzinfo=datetime.timezone.utc), 'time_taken': 326.0, 'time_delta': '0:05:26', 'additions': 25, 'deletions': 50, 'state': 'closed'}, {'id': 678328774, 'number': 219, 'closed': datetime.datetime(2021, 7, 4, 10, 33, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 26, 12, 23, 13, tzinfo=datetime.timezone.utc), 'time_taken': 684609.0, 'time_delta': '7 days, 22:10:09', 'additions': 322, 'deletions': 146, 'state': 'closed'}, {'id': 676581726, 'number': 218, 'closed': datetime.datetime(2021, 6, 27, 18, 54, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 20, 10, 33, tzinfo=datetime.timezone.utc), 'time_taken': 341057.0, 'time_delta': '3 days, 22:44:17', 'additions': 2, 'deletions': 197, 'state': 'closed'}, {'id': 674036434, 'number': 217, 'closed': datetime.datetime(2021, 6, 20, 15, 44, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 13, 36, 12, tzinfo=datetime.timezone.utc), 'time_taken': 7699.0, 'time_delta': '2:08:19', 'additions': 14, 'deletions': 52, 'state': 'closed'}, {'id': 674022997, 'number': 216, 'closed': datetime.datetime(2021, 7, 14, 13, 13, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 12, 2, 16, tzinfo=datetime.timezone.utc), 'time_taken': 2077865.0, 'time_delta': '24 days, 1:11:05', 'additions': 116, 'deletions': 61, 'state': 'closed'}, {'id': 673915963, 'number': 215, 'closed': None, 'created': datetime.datetime(2021, 6, 19, 18, 16, 34, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 9, 'deletions': 3, 'state': 'open'}, {'id': 670432269, 'number': 214, 'closed': datetime.datetime(2021, 6, 17, 20, 4, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 13, 57, 13, tzinfo=datetime.timezone.utc), 'time_taken': 194841.0, 'time_delta': '2 days, 6:07:21', 'additions': 38, 'deletions': 15, 'state': 'closed'}, {'id': 669042946, 'number': 213, 'closed': datetime.datetime(2021, 6, 22, 18, 18, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 13, 12, 11, 47, tzinfo=datetime.timezone.utc), 'time_taken': 799588.0, 'time_delta': '9 days, 6:06:28', 'additions': 210, 'deletions': 196, 'state': 'closed'}, {'id': 668907908, 'number': 212, 'closed': datetime.datetime(2021, 6, 13, 10, 50, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 16, 40, 5, tzinfo=datetime.timezone.utc), 'time_taken': 65404.0, 'time_delta': '18:10:04', 'additions': 20, 'deletions': 226, 'state': 'closed'}, {'id': 668202363, 'number': 210, 'closed': datetime.datetime(2021, 6, 14, 7, 59, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 14, 19, 24, tzinfo=datetime.timezone.utc), 'time_taken': 236406.0, 'time_delta': '2 days, 17:40:06', 'additions': 2, 'deletions': 403, 'state': 'closed'}, {'id': 667123094, 'number': 209, 'closed': datetime.datetime(2021, 11, 12, 20, 49, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 17, 32, 23, tzinfo=datetime.timezone.utc), 'time_taken': 13403829.0, 'time_delta': '155 days, 3:17:09', 'additions': 551, 'deletions': 1250, 'state': 'closed'}, {'id': 617260257, 'number': 203, 'closed': datetime.datetime(2021, 6, 8, 20, 16, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 17, 6, 45, 24, tzinfo=datetime.timezone.utc), 'time_taken': 4541495.0, 'time_delta': '52 days, 13:31:35', 'additions': 120, 'deletions': 18, 'state': 'closed'}, {'id': 612152306, 'number': 201, 'closed': None, 'created': datetime.datetime(2021, 4, 9, 5, 7, 19, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 177, 'deletions': 0, 'state': 'open'}, {'id': 600672782, 'number': 197, 'closed': datetime.datetime(2021, 3, 25, 18, 58, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 25, 11, 51, 25, tzinfo=datetime.timezone.utc), 'time_taken': 25635.0, 'time_delta': '7:07:15', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 587736849, 'number': 193, 'closed': datetime.datetime(2021, 3, 25, 8, 14, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 9, 10, 11, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1375408.0, 'time_delta': '15 days, 22:03:28', 'additions': 16, 'deletions': 5, 'state': 'closed'}, {'id': 586310686, 'number': 192, 'closed': datetime.datetime(2021, 3, 8, 3, 48, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 7, 19, 20, 23, tzinfo=datetime.timezone.utc), 'time_taken': 30504.0, 'time_delta': '8:28:24', 'additions': 0, 'deletions': 17, 'state': 'closed'}, {'id': 483981416, 'number': 161, 'closed': datetime.datetime(2020, 9, 24, 21, 31, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 10, 15, 11, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1232389.0, 'time_delta': '14 days, 6:19:49', 'additions': 40, 'deletions': 3, 'state': 'closed'}, {'id': 479641699, 'number': 160, 'closed': datetime.datetime(2020, 9, 7, 2, 56, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 4, 12, 32, 11, tzinfo=datetime.timezone.utc), 'time_taken': 224643.0, 'time_delta': '2 days, 14:24:03', 'additions': 22, 'deletions': 29, 'state': 'closed'}, {'id': 477054165, 'number': 159, 'closed': datetime.datetime(2020, 9, 5, 15, 16, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 1, 12, 42, 23, tzinfo=datetime.timezone.utc), 'time_taken': 354861.0, 'time_delta': '4 days, 2:34:21', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 477020847, 'number': 158, 'closed': datetime.datetime(2020, 10, 1, 19, 9, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 1, 11, 40, 34, tzinfo=datetime.timezone.utc), 'time_taken': 2618926.0, 'time_delta': '30 days, 7:28:46', 'additions': 3, 'deletions': 1, 'state': 'closed'}]"
14051621,LightAndShadowResources,Terasology/LightAndShadowResources,Java,11,4,20,21,199,5,4,3,"[{'id': 713985637, 'number': 74, 'closed': None, 'created': datetime.datetime(2021, 8, 17, 7, 26, 33, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 54, 'deletions': 0, 'state': 'open'}, {'id': 691060170, 'number': 72, 'closed': None, 'created': datetime.datetime(2021, 7, 15, 21, 57, 27, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 5, 'deletions': 0, 'state': 'open'}, {'id': 678329555, 'number': 68, 'closed': datetime.datetime(2021, 7, 3, 12, 26, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 26, 12, 29, 20, tzinfo=datetime.timezone.utc), 'time_taken': 604655.0, 'time_delta': '6 days, 23:57:35', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 678144543, 'number': 67, 'closed': datetime.datetime(2021, 6, 27, 18, 55, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 19, 50, 19, tzinfo=datetime.timezone.utc), 'time_taken': 169496.0, 'time_delta': '1 day, 23:04:56', 'additions': 5, 'deletions': 9, 'state': 'closed'}, {'id': 673534948, 'number': 66, 'closed': datetime.datetime(2021, 6, 20, 14, 58, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 14, 46, 51, tzinfo=datetime.timezone.utc), 'time_taken': 173495.0, 'time_delta': '2 days, 0:11:35', 'additions': 7, 'deletions': 19, 'state': 'closed'}, {'id': 668874575, 'number': 65, 'closed': datetime.datetime(2021, 6, 13, 4, 16, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 13, 57, 16, tzinfo=datetime.timezone.utc), 'time_taken': 51559.0, 'time_delta': '14:19:19', 'additions': 90, 'deletions': 0, 'state': 'closed'}, {'id': 619898881, 'number': 63, 'closed': datetime.datetime(2021, 5, 22, 12, 20, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 21, 6, 41, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2698724.0, 'time_delta': '31 days, 5:38:44', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 483997744, 'number': 60, 'closed': datetime.datetime(2020, 9, 24, 21, 30, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 10, 15, 25, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1231510.0, 'time_delta': '14 days, 6:05:10', 'additions': 5, 'deletions': 0, 'state': 'closed'}]"
139560680,Inventory,Terasology/Inventory,Java,10,3,16,13,80,5,6,2,"[{'id': 670385040, 'number': 44, 'closed': datetime.datetime(2021, 6, 16, 21, 49, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 13, 1, 48, tzinfo=datetime.timezone.utc), 'time_taken': 118035.0, 'time_delta': '1 day, 8:47:15', 'additions': 66, 'deletions': 36, 'state': 'closed'}]"
85925637,CombatSystem,Terasology/CombatSystem,Java,13,3,17,24,150,7,4,3,"[{'id': 683845627, 'number': 81, 'closed': datetime.datetime(2021, 7, 5, 19, 53, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 17, 13, 14, tzinfo=datetime.timezone.utc), 'time_taken': 9589.0, 'time_delta': '2:39:49', 'additions': 5, 'deletions': 3, 'state': 'closed'}]"
1438007,Terasology,MovingBlocks/Terasology,Java,1334,3661,188,339,12023,469,57,35,"[{'id': 691959443, 'number': 4823, 'closed': datetime.datetime(2021, 7, 19, 20, 15, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 16, 56, 20, tzinfo=datetime.timezone.utc), 'time_taken': 184731.0, 'time_delta': '2 days, 3:18:51', 'additions': 39, 'deletions': 6, 'state': 'closed'}, {'id': 673916648, 'number': 4778, 'closed': datetime.datetime(2021, 8, 7, 14, 59, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 18, 22, 48, tzinfo=datetime.timezone.utc), 'time_taken': 4221377.0, 'time_delta': '48 days, 20:36:17', 'additions': 19, 'deletions': 0, 'state': 'closed'}, {'id': 463908266, 'number': 4116, 'closed': datetime.datetime(2021, 3, 28, 11, 13, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 9, 29, 17, tzinfo=datetime.timezone.utc), 'time_taken': 20223859.0, 'time_delta': '234 days, 1:44:19', 'additions': 289, 'deletions': 6, 'state': 'closed'}]"
63985513,Economy,Terasology/Economy,Java,8,1,22,13,64,5,4,1,"[{'id': 691050574, 'number': 22, 'closed': datetime.datetime(2021, 10, 9, 19, 13, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 15, 21, 35, 55, tzinfo=datetime.timezone.utc), 'time_taken': 7421847.0, 'time_delta': '85 days, 21:37:27', 'additions': 834, 'deletions': 13, 'state': 'closed'}]"
131835356,GooeyDefence,Terasology/GooeyDefence,Java,8,1,21,13,588,15,6,2,"[{'id': 691057608, 'number': 68, 'closed': datetime.datetime(2021, 10, 9, 19, 49, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 15, 21, 51, 33, tzinfo=datetime.timezone.utc), 'time_taken': 7423069.0, 'time_delta': '85 days, 21:57:49', 'additions': 25, 'deletions': 698, 'state': 'closed'}]"
59244994,StructureTemplates,Terasology/StructureTemplates,Java,17,1,22,19,218,5,5,1,"[{'id': 700871879, 'number': 68, 'closed': None, 'created': datetime.datetime(2021, 8, 1, 9, 59, 20, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 34, 'deletions': 7, 'state': 'open'}]"
16415067,MultiBlock,Terasology/MultiBlock,Java,6,0,19,12,59,1,6,1,"[{'id': 700873084, 'number': 28, 'closed': None, 'created': datetime.datetime(2021, 8, 1, 10, 4, 37, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 550, 'deletions': 5, 'state': 'open'}]"
198067787,Towers,Terasology/Towers,Java,1,0,3,3,11,2,3,1,"[{'id': 712472782, 'number': 2, 'closed': None, 'created': datetime.datetime(2021, 8, 13, 15, 59, 12, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1607, 'deletions': 353, 'state': 'open'}]"
