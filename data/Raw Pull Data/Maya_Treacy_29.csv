pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
426260957,feat: Issue24 registration api backend,"### Description

Create BIT API Users service with Register functionality so that a new user can register to BIT.

Fixes #24 and replacement of PR #25
NOTE: As this PR also carries code changes on PR #25, the changes needed in related to PR#25 is only made to this PR (#26). The PR#25 is to be closed without merging.

### Type of Change:
- Code
- Documentation

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)



### How Has This Been Tested?
Tested sending POST /register request to MS API with successful response.
<img width=""1279"" alt=""Screen Shot 2020-06-02 at 12 45 53 am"" src=""https://user-images.githubusercontent.com/29667122/83463192-a3f28200-a4b0-11ea-846e-c59bebe6f5e9.png"">

#### TO DO:
- modify Register high-fidelity mockup to just having MS input fields and remove BIT fields. **(Confirm with Mentors)**

### Checklist:

- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [x] My PR currently breaks something (fix or feature that would cause existing functionality to not work as expected) - **hence the TO DO above**
",True,26,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/26,https://github.com/anitab-org/bridge-in-tech-backend/pull/26,closed,4177,0,60,1,22,44,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-06-01 23:12:35+00:00,2020-06-09 04:45:27+00:00,624772.0,"7 days, 5:32:52","[{'comment_id': 434206225, 'comment_body': 'Do we need the .dockerignore file to be committed?', 'comment_created': datetime.datetime(2020, 6, 2, 22, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 434206508, 'comment_body': 'Why can this not be a dict of two elements or a named tuple? Makes it easier to read and use.', 'comment_created': datetime.datetime(2020, 6, 2, 22, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 434206660, 'comment_body': '""save_to_db"" probably? Not ""sava""', 'comment_created': datetime.datetime(2020, 6, 2, 22, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 434206908, 'comment_body': 'Should this be Unauthenticated instead?', 'comment_created': datetime.datetime(2020, 6, 2, 22, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 434207113, 'comment_body': 'We should add proper logging rather than just printing', 'comment_created': datetime.datetime(2020, 6, 2, 22, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 434220735, 'comment_body': ""We don't need them at this stage, I'll take both Dockerfile and .dockerignore out for now üòâ "", 'comment_created': datetime.datetime(2020, 6, 2, 23, 1, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 434221019, 'comment_body': 'Ok, will change that. ', 'comment_created': datetime.datetime(2020, 6, 2, 23, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 434221159, 'comment_body': 'üòÇ üòÇ üòÇ  Thanks for pointing this out, @ramitsawhney27 . will fix that', 'comment_created': datetime.datetime(2020, 6, 2, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 434223864, 'comment_body': ""mmm...that's the word being used by HTTPStatus though (401 == Unauthorized)\r\n![Screen Shot 2020-06-03 at 9 07 39 am](https://user-images.githubusercontent.com/29667122/83578333-d6b47d00-a579-11ea-9c22-f23a1f8fb989.png)\r\n\r\nAnd it's also the same one used in mentorship system backend"", 'comment_created': datetime.datetime(2020, 6, 2, 23, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 434224241, 'comment_body': 'yep, would work on that üëç ', 'comment_created': datetime.datetime(2020, 6, 2, 23, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 434274693, 'comment_body': ""@ramitsawhney27, do we want the logger to save to a file or print to console? Saving it to a file could become a problem coz it'll get bigger as the project grows."", 'comment_created': datetime.datetime(2020, 6, 3, 2, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 434281551, 'comment_body': 'As this is only targeting MVP, can we leave the logger out for now? We can look at it again post GSoC. What do you think, @ramitsawhney27 ?', 'comment_created': datetime.datetime(2020, 6, 3, 3, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 434429362, 'comment_body': ""@anitab-org/bridgeintech-maintainers. Just wanna give you an update. I've added the rest of error response code."", 'comment_created': datetime.datetime(2020, 6, 3, 9, 22, 2, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 435977834, 'comment_body': 'I think logging for the console should be something we should have for GSoC', 'comment_created': datetime.datetime(2020, 6, 5, 14, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435978789, 'comment_body': 'Can data be a default dictionary instead?', 'comment_created': datetime.datetime(2020, 6, 5, 14, 58, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435979980, 'comment_body': 'Any reason for CASCADE rather than SET NULL or any other alternative?', 'comment_created': datetime.datetime(2020, 6, 5, 15, 0, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435980154, 'comment_body': 'Delete this if not needed', 'comment_created': datetime.datetime(2020, 6, 5, 15, 0, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435980496, 'comment_body': ""I don't understand this, why are errors nested?"", 'comment_created': datetime.datetime(2020, 6, 5, 15, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435980720, 'comment_body': 'if not tasks:', 'comment_created': datetime.datetime(2020, 6, 5, 15, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435980945, 'comment_body': ""Can't it be self.next_task_id +=1?"", 'comment_created': datetime.datetime(2020, 6, 5, 15, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435981448, 'comment_body': 'use list comprehension as discussed in the meetings. Always use literal syntax [], {} instead of list() and dict()', 'comment_created': datetime.datetime(2020, 6, 5, 15, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435981677, 'comment_body': '+=?', 'comment_created': datetime.datetime(2020, 6, 5, 15, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435981797, 'comment_body': 'if not task:', 'comment_created': datetime.datetime(2020, 6, 5, 15, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435981885, 'comment_body': 'self.tasks', 'comment_created': datetime.datetime(2020, 6, 5, 15, 3, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435982128, 'comment_body': ""return self.tasks would directly work. Please don't use len to check if its empty. Please fix everywhere in the code."", 'comment_created': datetime.datetime(2020, 6, 5, 15, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435982251, 'comment_body': 'Use f strings for formatting', 'comment_created': datetime.datetime(2020, 6, 5, 15, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435982406, 'comment_body': 'Delete if needed', 'comment_created': datetime.datetime(2020, 6, 5, 15, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 435982441, 'comment_body': 'so, from what I can find, to print to console using `python logging`, is using `logging.warning`\r\n\r\n<img width=""943"" alt=""Screen Shot 2020-06-06 at 1 04 02 am"" src=""https://user-images.githubusercontent.com/29667122/83892200-a6472b80-a791-11ea-92ad-f5ff0da49a9f.png"">\r\n\r\nIs this ok?', 'comment_created': datetime.datetime(2020, 6, 5, 15, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 435982548, 'comment_body': 'F strings', 'comment_created': datetime.datetime(2020, 6, 5, 15, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 436203981, 'comment_body': 'what do you mean @ramitsawhney27 ? can you elaborate?', 'comment_created': datetime.datetime(2020, 6, 5, 23, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436204883, 'comment_body': ""Because if the user data in user table is deleted, there is no point of us keeping the data of that user (on the user_extension or personal background). All relevant data of that user needs to be deleted from the database. Otherwise we'll have an orphan data of user which serves no purpose whatsoever in the database. Does it make sense?"", 'comment_created': datetime.datetime(2020, 6, 5, 23, 25, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436205346, 'comment_body': 'the #def __repr__(self)? Ok. will do that,', 'comment_created': datetime.datetime(2020, 6, 5, 23, 27, 28, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436206947, 'comment_body': 'got it', 'comment_created': datetime.datetime(2020, 6, 5, 23, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436207119, 'comment_body': 'it can for sure', 'comment_created': datetime.datetime(2020, 6, 5, 23, 36, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436207423, 'comment_body': ""I'm not sure tbh. All the mentorship system models in this schema (ms_schema) are directly copy pasted from mentorship code without any change (except for adding db.relation to connect them to bit tables).\r\nI was under the assumption that all codes there (mentorship system) have been passed checks and reviews by others since its creation, hence didn't feel the need to double check or concern on why a particular style is chosen (I was focusing more on the BIT code side so far that I wrote myself). If you think we should double check and change the mentorship code in BIT side,I'll do that too."", 'comment_created': datetime.datetime(2020, 6, 5, 23, 38, 41, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436208461, 'comment_body': 'again, copy pasted directly from mentorship code. will do the change now', 'comment_created': datetime.datetime(2020, 6, 5, 23, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436208528, 'comment_body': 'yeah,, not sure why this was approve before in mentorship too... ü§£ ', 'comment_created': datetime.datetime(2020, 6, 5, 23, 45, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436208601, 'comment_body': 'make sense to me too...', 'comment_created': datetime.datetime(2020, 6, 5, 23, 45, 28, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436209540, 'comment_body': ""not sure why this passed the checks on mentorship system. I didn't write this code, I copy pasted from the MS directly just so SQLAlchemy didn't throw tantrum on BIT schema"", 'comment_created': datetime.datetime(2020, 6, 5, 23, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436210003, 'comment_body': ""I agree... been always consistent on the BIT code I wrote my self. didn't check the MS code I copied. will change it for BIT"", 'comment_created': datetime.datetime(2020, 6, 5, 23, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436210067, 'comment_body': 'will do the change on BIT', 'comment_created': datetime.datetime(2020, 6, 5, 23, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436210223, 'comment_body': 'got it', 'comment_created': datetime.datetime(2020, 6, 5, 23, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 436227961, 'comment_body': 'There is DefaultDict object. You could read up about that, usually is easier and better rather than doing dict.get(x, None)', 'comment_created': datetime.datetime(2020, 6, 6, 2, 6, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 436366473, 'comment_body': 'will be put as tech debt. resolve on meeting 3:1', 'comment_created': datetime.datetime(2020, 6, 7, 14, 2, 41, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '4967740d9b56bdd81bfd8426219a2e4160f80a75', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
434122503,Issue8 register ui - new pr,"### Description

This PR is to provide Register UI and backend consumption.

Fixes #8 and replaces PR #15 

### Type of Change:


- Code
- User Interface


**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)



### How Has This Been Tested?
By creating new user as well as trying to register with existing user's data

Steps to test:
- run the following servers locally:
    * BIT backend server - must use port 5000 (stated as allowed CORS origin url inside MS backend code base).
    * MS backend server - I recommend using port 4000 
    * BIT React server - will by default run on port 3000 (stated as allowed CORS origin url inside the BIT backend code base)

Note: I recommend tester/reviewer to create a separate branch on MS backend to run MS server as there a few lines of code need to be added inside the MS backend run.py which is specific to BIT only (in the future I will open an issue on MS side to accommodate this). Please refer to `run.py` inside code changes for **BIT [PR#52](https://github.com/anitab-org/bridge-in-tech-backend/pull/52)** and update your pip dependencies as per that PR additional notes.

### Checklist:

- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials
- [x] Any dependent changes have been merged


**Code/Quality Assurance Only**
- [x] My changes generate no new warnings
",True,18,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/18,https://github.com/anitab-org/bridge-in-tech-web/pull/18,closed,576,128,9,7,3,18,3,1,"[{'name': 'Category: Coding'}, {'name': 'Category: User Interface'}, {'name': 'Program: GSOC'}]",2020-06-14 10:08:06+00:00,2020-06-15 14:58:08+00:00,103802.0,"1 day, 4:50:02","[{'comment_id': 439845455, 'comment_body': 'I added this as a first timer issue. Thought someone else who is a first timer could pick it up. ', 'comment_created': datetime.datetime(2020, 6, 14, 16, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 439845603, 'comment_body': ""unnecessary comment. Commenting isn't really a good practice. It's a good practice if your code can be readable, that way you never need comments. \r\nOnly comment when you find it's absolutely necessary or these is some complex non obvious non readable code. \r\nSo please remove this"", 'comment_created': datetime.datetime(2020, 6, 14, 16, 21, 6, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 439845636, 'comment_body': 'No console logs in production code please', 'comment_created': datetime.datetime(2020, 6, 14, 16, 21, 28, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 439845745, 'comment_body': 'Remove all unnecessary console logs we put for debugging', 'comment_created': datetime.datetime(2020, 6, 14, 16, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 439845908, 'comment_body': 'The naming convention is Register.jsx and Register.css', 'comment_created': datetime.datetime(2020, 6, 14, 16, 24, 33, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 439878459, 'comment_body': 'got it, accidentally put it there. forgot about the first timer issue üòÅ', 'comment_created': datetime.datetime(2020, 6, 14, 23, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 439878483, 'comment_body': 'just changed it now üëç ', 'comment_created': datetime.datetime(2020, 6, 14, 23, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 439878558, 'comment_body': 'will do that üëç ', 'comment_created': datetime.datetime(2020, 6, 14, 23, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 439878693, 'comment_body': 'removed all console.log() üëç ', 'comment_created': datetime.datetime(2020, 6, 14, 23, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 439878710, 'comment_body': 'yep, done üëç ', 'comment_created': datetime.datetime(2020, 6, 14, 23, 31, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 439920012, 'comment_body': 'you need to also rename the file, register.css to Register.css ', 'comment_created': datetime.datetime(2020, 6, 15, 4, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 439920106, 'comment_body': 'Rename the file not just import', 'comment_created': datetime.datetime(2020, 6, 15, 4, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 439921766, 'comment_body': 'The ones still in lower case (except for register.css) are boilerplates from create-react-app.\r\nDo you also want me to change them?\r\n* index.css\r\n* index.js\r\n* index.html\r\n* routes.js\r\n* setupTests.js\r\n', 'comment_created': datetime.datetime(2020, 6, 15, 4, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 439922629, 'comment_body': 'routes can become Routes. This convention is for components only. Other files are just javascript files, not components. So let them be the way they are. ', 'comment_created': datetime.datetime(2020, 6, 15, 4, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 439922958, 'comment_body': 'ok, so I only need to change the Routes (and the Register), is this correct?', 'comment_created': datetime.datetime(2020, 6, 15, 4, 19, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 439923449, 'comment_body': 'will this mean I also need to change line 2 and 5 in index.js to \r\n`import **Routes** from ""./Routes"";\r\n\r\n- - -\r\n\r\n`**Routes**, document.getElementById(\'root\')\r\n\r\n?', 'comment_created': datetime.datetime(2020, 6, 15, 4, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 439924165, 'comment_body': 'should Routes actually be a `.jsx` file, instead of `.js`?', 'comment_created': datetime.datetime(2020, 6, 15, 4, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 439958626, 'comment_body': 'Done. just made the changes from the terminal. will start relying on terminal instead of vscode gui from now on ü§™\r\n\r\n<img width=""375"" alt=""Screen Shot 2020-06-15 at 4 38 12 pm"" src=""https://user-images.githubusercontent.com/29667122/84625528-c495ef80-af26-11ea-8f98-e8311721e994.png"">\r\n<img width=""349"" alt=""Screen Shot 2020-06-15 at 4 38 20 pm"" src=""https://user-images.githubusercontent.com/29667122/84625539-c8297680-af26-11ea-8730-022b9293097b.png"">\r\n', 'comment_created': datetime.datetime(2020, 6, 15, 6, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '23832f0d8f9b3edbcd3551caba5fea2b93e17462', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a43e3213535b1be5e0f04d1cc453f81b7a56c2e9', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab1b0172830c3c328f8f3d689e66be8a2f1467fd', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7b8826b9873f0e0474094355f42d139ac5885f7', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2f66116fab471bacc6dd8c13ce40a4ffa4a5391', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7a271a40c8ac758336d3ac405c89e411c9ca881', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58d1c563208fd742b4feabb62a04190e2930a9fc', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
437099919,Feat: User Login API issue#47,"### Description
Added Login User API

Fixes #47 

### Type of Change:


- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)



### How Has This Been Tested?
Try to login a user
Gif file: https://media.giphy.com/media/L329CK5dENhpM68PVN/giphy.gif


### Checklist:

- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings
- [ ] My PR currently breaks something (fix or feature that would cause existing functionality to not work as expected)
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes
- [ ] Any dependent changes have been published in downstream modules",True,60,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/60,https://github.com/anitab-org/bridge-in-tech-backend/pull/60,closed,108,16,4,1,5,22,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-06-19 13:23:49+00:00,2020-07-04 10:41:17+00:00,1286248.0,"14 days, 21:17:28","[{'comment_id': 443141392, 'comment_body': ""As we talked before, you don't need to thing about Refresh API for now, so these 2 attributes can be removed: `refresh_token` and `refresh_expiry`"", 'comment_created': datetime.datetime(2020, 6, 20, 16, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 443141431, 'comment_body': 'You could remove this as well', 'comment_created': datetime.datetime(2020, 6, 20, 16, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 443170404, 'comment_body': 'Got it. Will remove it now.', 'comment_created': datetime.datetime(2020, 6, 21, 0, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 443184726, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 21, 5, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 443198142, 'comment_body': 'Same as my previous comment on catching exceptions', 'comment_created': datetime.datetime(2020, 6, 21, 8, 57, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 443198240, 'comment_body': 'This method is too big and does too many things. Break this down into multiple smaller functions \r\nhttps://martinfowler.com/bliki/FunctionLength.html', 'comment_created': datetime.datetime(2020, 6, 21, 8, 59, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 443201962, 'comment_body': ""I'm not sure I'm following. Isn't this just to cover POST /login and its responses? If you want to make it into smaller functions, can you please give me example of endpoints that will come as the result of slicing them?"", 'comment_created': datetime.datetime(2020, 6, 21, 9, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 443211716, 'comment_body': ""Done. Thanks for giving this idea, @ramitsawhney27 . I've refactored HTTP response checking for both Register and Login. Hopefully this will help tidying up responses for any future API endpoints too."", 'comment_created': datetime.datetime(2020, 6, 21, 11, 50, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 443213166, 'comment_body': ""Note that for `all other errors` comment under http_response_checker function, that is only for errors that are unplanned. As we move through other functionalities, I'll keep adding smaller functions to check HTTP response type/message."", 'comment_created': datetime.datetime(2020, 6, 21, 12, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 443218399, 'comment_body': 'Excess spaces between the 2 functions\r\n', 'comment_created': datetime.datetime(2020, 6, 21, 13, 12, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 443218423, 'comment_body': 'Can make these 3 lines a separate function\r\n', 'comment_created': datetime.datetime(2020, 6, 21, 13, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 443218499, 'comment_body': ""Shouldn't this be finally?\r\n"", 'comment_created': datetime.datetime(2020, 6, 21, 13, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 443218500, 'comment_body': ""We need to fix this beyond just logging it. If it's a specific message it won't be checked.\r\nAnd this should not be a logging.warning, it should be fatal\r\n"", 'comment_created': datetime.datetime(2020, 6, 21, 13, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 443223705, 'comment_body': ""When the PR647 in MS got approved (which will be soon, hopefully), this code will no longer be 3 lines. It'll just be 2 lines like the rest. Can we keep it here for now?"", 'comment_created': datetime.datetime(2020, 6, 21, 14, 15, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 443225394, 'comment_body': 'Changed it to logging.fatal now. üëç', 'comment_created': datetime.datetime(2020, 6, 21, 14, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 443225434, 'comment_body': 'got it. ', 'comment_created': datetime.datetime(2020, 6, 21, 14, 32, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 443225491, 'comment_body': 'fixed it now.', 'comment_created': datetime.datetime(2020, 6, 21, 14, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 443306774, 'comment_body': '@ramitsawhney27 Any tips what else need to be done here?', 'comment_created': datetime.datetime(2020, 6, 22, 4, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 446505816, 'comment_body': 'Resolved for now', 'comment_created': datetime.datetime(2020, 6, 27, 9, 29, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 446505823, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 6, 27, 9, 29, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 446505884, 'comment_body': ""Won't this change now? should be indexed using the named tuple?"", 'comment_created': datetime.datetime(2020, 6, 27, 9, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 446506850, 'comment_body': 'Yes, It is now (on PR #65), already using namedtuple. This Login PR #60 was made before that namedtuple PR. I don\'t think I need to change in this PR since it\'ll be overwritten by PR #65 changes if that one also got approved after this.\r\n\r\nscreenshot from namedtuple ms_api_utils.py\r\n\r\n<img width=""689"" alt=""Screen Shot 2020-06-27 at 7 35 48 pm"" src=""https://user-images.githubusercontent.com/29667122/85919382-f5beda00-b8ad-11ea-8930-2c3df63ce09d.png"">\r\n\r\nThe commit history showing sequence of changes\r\n\r\n<img width=""857"" alt=""Screen Shot 2020-06-27 at 7 36 02 pm"" src=""https://user-images.githubusercontent.com/29667122/85919392-0a9b6d80-b8ae-11ea-90d5-e65a410fdc74.png"">\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 27, 9, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '6a4f60c3f130f8f72c2c7eaa6bbb0cc22fc03d69', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
437378894,Feat: Login UI Issue#14,"### Description
Add Login UI

Fixes #14 and #29 

### Type of Change:

- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- running npm start and submit without input. Form validation `required` gave warning as expected.
- login with existing user but with wrong password or username, error message is shown as expected.
- login with correct credentials, user redirected to Member Portfolio page as expected.

[link to Gif](https://media.giphy.com/media/IfxCozlQxlr1xwroA5/giphy.gif)

![giphy showing login screen](https://user-images.githubusercontent.com/11148726/86510952-5ab58b00-bdec-11ea-9655-afb8d4b0ee5f.gif)

Note to tester/reviewer. To test this login ui you must run the backend server from the latest code change on login backend [PR#60](https://github.com/anitab-org/bridge-in-tech-backend/pull/60)

### Checklist:

- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings

**Additional Note**
Up to User Interface only, backend API consumption is not yet added - wip",True,26,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/26,https://github.com/anitab-org/bridge-in-tech-web/pull/26,closed,369,177,9,2,8,24,3,1,"[{'name': 'Category: Coding'}, {'name': 'Category: User Interface'}, {'name': 'Program: GSOC'}]",2020-06-20 07:30:29+00:00,2020-06-27 02:27:48+00:00,586639.0,"6 days, 18:57:19","[{'comment_id': 444996657, 'comment_body': ""I wasn't sure about this. But maybe a hyphen(-) is preferred over underscore(_). This has some details - [Hypher over Underscore](https://www.ecreativeim.com/blog/index.php/2011/03/30/seo-basics-hyphen-or-underscore-for-seo-urls/#:~:text=The%20short%20answer%20is%20that,treat%20an%20underscore%20that%20way.&text=This%20has%20been%20confirmed%20directly,a%20(minor)%20ranking%20benefit.)"", 'comment_created': datetime.datetime(2020, 6, 24, 15, 51, 3, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 444997035, 'comment_body': 'formatting? you might need to indent here', 'comment_created': datetime.datetime(2020, 6, 24, 15, 51, 34, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 444998305, 'comment_body': 'remove the or email. I might expect login via email too. It can be misleading at this point, we can look at it later', 'comment_created': datetime.datetime(2020, 6, 24, 15, 53, 35, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 445046722, 'comment_body': ""I see, the value of username, password, accessToken and accessExpiry is never read. Then why are you setting it? you don't need it."", 'comment_created': datetime.datetime(2020, 6, 24, 17, 11, 55, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 445047263, 'comment_body': ""Do you really need an if else statement here? The action that you are performing is the same either ways. \r\nWhy can't it simply be userInput[key] = value?"", 'comment_created': datetime.datetime(2020, 6, 24, 17, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 445047854, 'comment_body': 'userInput has a username and password that you are assigning to payload. Can you not use userInput, why make a copy of payload. ', 'comment_created': datetime.datetime(2020, 6, 24, 17, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 445048928, 'comment_body': ""there is no need to set here. You are fetching the values from FormData anyway. So even if you set here, it's not being used"", 'comment_created': datetime.datetime(2020, 6, 24, 17, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 445049563, 'comment_body': 'since this responseMessage will only show up in case there is an error, can we call this errorMessage?', 'comment_created': datetime.datetime(2020, 6, 24, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 445057915, 'comment_body': 'This can be refactored. A switch is not required. I can catchup with you to help refactor. ', 'comment_created': datetime.datetime(2020, 6, 24, 17, 31, 54, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 445060179, 'comment_body': 'would have been better if the label was errorMessage. So the test would make sense and it would feel login is successful if there is no errorMessage in the document. ', 'comment_created': datetime.datetime(2020, 6, 24, 17, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 445230036, 'comment_body': 'done. changed it to hyphen', 'comment_created': datetime.datetime(2020, 6, 24, 23, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445230318, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2020, 6, 24, 23, 42, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445239025, 'comment_body': 'Yep, fixed', 'comment_created': datetime.datetime(2020, 6, 25, 0, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445239045, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2020, 6, 25, 0, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445239268, 'comment_body': ""The functionality is actually already there for login with with email. I just don't have test to check successful login done with email (coz they are just mocking anyway). So, I'll leave the option there (Username or Email)"", 'comment_created': datetime.datetime(2020, 6, 25, 0, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445239355, 'comment_body': ""yep, let's catch up tonight same time?"", 'comment_created': datetime.datetime(2020, 6, 25, 0, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445241500, 'comment_body': 'done. remove onChange', 'comment_created': datetime.datetime(2020, 6, 25, 0, 22, 28, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445241603, 'comment_body': 'Done, remove onChange', 'comment_created': datetime.datetime(2020, 6, 25, 0, 22, 45, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445241821, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 25, 0, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445242363, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 6, 25, 0, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445305557, 'comment_body': 'errorMessage, setErrorMessage - try following the convention', 'comment_created': datetime.datetime(2020, 6, 25, 4, 52, 26, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 445305696, 'comment_body': 'I will be available at 7pm IST today. would that work for you?', 'comment_created': datetime.datetime(2020, 6, 25, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 445305762, 'comment_body': 'yep, missed that üòÅ', 'comment_created': datetime.datetime(2020, 6, 25, 4, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 445306285, 'comment_body': 'We might want to have another test that checks if on successful login, redirect to My Space happens. That test might be tricky, so we can have a separate PR for that, not on priority though, so as not to block you', 'comment_created': datetime.datetime(2020, 6, 25, 4, 55, 44, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}]","[{'commit_sha': '7426086c2d72a2de0b1a236fdcf94fafeeeda46f', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e319f8978338ac106a3cce50656d59e91ea8e15', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
445524729,Feat: issue#63 - GET /user/personal_details api endpoint and tests,"### Description

Add API endpoint for GET/user profile and test cases

Fixes #72 as well as part of issue #63 

### Type of Change:

- Code
- Quality Assurance

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)


### How Has This Been Tested?
- [x] tested functionality by running the application manually
- [x] run test on VSCode Tests explorer - result: all passed
- [x] run unittest on the terminal - result: all passed

### Checklist:

- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes",True,71,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/71,https://github.com/anitab-org/bridge-in-tech-backend/pull/71,closed,298,21,7,1,11,2,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-07-07 16:32:21+00:00,2020-07-09 07:37:12+00:00,140691.0,"1 day, 15:04:51","[{'comment_id': 451015626, 'comment_body': 'Simplify as:\r\nf‚Äù{BASE_MS_API_URL}{request_string}‚Äù', 'comment_created': datetime.datetime(2020, 7, 7, 17, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 451206051, 'comment_body': 'done.', 'comment_created': datetime.datetime(2020, 7, 7, 23, 51, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': 'e93f1d92c9332cb46166588a99423d02b2f6c523', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
447855540,Feat: Issue#27 view user personal details,"### Description
Add feature: View user's personal details

Fixes #27

### Type of Change:
- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- login as user
- go to My Space -> My Profile page
- See Personal Details
![ezgif com-video-to-gif (1)](https://user-images.githubusercontent.com/29667122/87239942-0c416580-c458-11ea-9d43-f3e1b9977182.gif)


### Checklist:
<!--**Delete irrelevant options.**-->

- [x] My PR follows the style guidelines of this project
- [x] I have performed a self-review of my own code or materials

**Code/Quality Assurance Only**
- [x] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes",True,38,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/38,https://github.com/anitab-org/bridge-in-tech-web/pull/38,closed,341,27,10,1,5,11,3,1,"[{'name': 'Category: Coding'}, {'name': 'Category: User Interface'}, {'name': 'Program: GSOC'}]",2020-07-12 05:56:01+00:00,2020-07-19 11:42:46+00:00,625605.0,"7 days, 5:46:45","[{'comment_id': 453304920, 'comment_body': ""why not just have const [personalDetails, setPersonalDetails] = useState(null);\r\n\r\nand set whatever comes in response as the personalDetails? \r\n\r\nI don't see the benefit in cluttering with so many use states"", 'comment_created': datetime.datetime(2020, 7, 12, 11, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 453325807, 'comment_body': '@meenakshi-dhanani , I tried your suggestion. Using const [personalDetails, setPersonalDetails] = useState(null) or useState({}) but none of these options get the data out from the response. Here\'s the screenshot of what I\'ve done.\r\n<img width=""562"" alt=""Screen Shot 2020-07-13 at 12 27 26 am"" src=""https://user-images.githubusercontent.com/29667122/87249430-61a26480-c4a2-11ea-91ce-132ae52e9243.png"">\r\n\r\n<img width=""1680"" alt=""Screen Shot 2020-07-13 at 12 42 50 am"" src=""https://user-images.githubusercontent.com/29667122/87249459-8eef1280-c4a2-11ea-8005-6b41ed31ca9d.png"">\r\n\r\nDo you have any other suggestion?\r\n\r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 12, 14, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 453326521, 'comment_body': 'And here\'s the result of thee page when rendered (with empty data)\r\n<img width=""1680"" alt=""Screen Shot 2020-07-13 at 12 43 46 am"" src=""https://user-images.githubusercontent.com/29667122/87249634-83501b80-c4a3-11ea-9904-912590017368.png"">\r\n', 'comment_created': datetime.datetime(2020, 7, 12, 14, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 453632948, 'comment_body': ""I'll check it out, as a convention if your setter is setPersonalDetails then your variable would be personalDetails and not personal_details"", 'comment_created': datetime.datetime(2020, 7, 13, 13, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 454044633, 'comment_body': 'Hi @meenakshi-dhanani . I tried with the correct naming convention. Still didn\'t work (cannot get data out of fetch using setPersonalDetails)\r\n* using null\r\n<img width=""651"" alt=""Screen Shot 2020-07-14 at 11 24 07 am"" src=""https://user-images.githubusercontent.com/29667122/87370143-86432d00-c5c5-11ea-837a-ab34919fe430.png"">\r\n<img width=""1560"" alt=""Screen Shot 2020-07-14 at 11 25 35 am"" src=""https://user-images.githubusercontent.com/29667122/87370154-8e02d180-c5c5-11ea-93c4-bb5aaccb3248.png"">\r\n\r\n* using {}\r\n<img width=""634"" alt=""Screen Shot 2020-07-14 at 11 27 53 am"" src=""https://user-images.githubusercontent.com/29667122/87370179-9955fd00-c5c5-11ea-8179-1e5b5f066ae0.png"">\r\n<img width=""1578"" alt=""Screen Shot 2020-07-14 at 11 28 03 am"" src=""https://user-images.githubusercontent.com/29667122/87370230-b38fdb00-c5c5-11ea-9545-335a5f75b21a.png"">\r\n\r\nDo you have any other suggestion?\r\n', 'comment_created': datetime.datetime(2020, 7, 14, 1, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 454279390, 'comment_body': 'Check the Todo file in this sandbox - https://codesandbox.io/s/xenodochial-rain-fet6s?file=/src/Todo.js\r\n\r\nHere, I am not setting time and title separately.', 'comment_created': datetime.datetime(2020, 7, 14, 11, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 454735012, 'comment_body': ""@meenakshi-dhanani . Have you try it using the fetch from API? Does it work on your end? I've pushed the latest code with your alternative solution in case you want to give it a try. Let me know if it works for you. If you want to catch up for troubleshoot, I'm available. Ta"", 'comment_created': datetime.datetime(2020, 7, 15, 1, 23, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 454941388, 'comment_body': ""Please even while trying no comments. If something doesn't work it's never lost. You can always get it from the previous commit"", 'comment_created': datetime.datetime(2020, 7, 15, 10, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 456155613, 'comment_body': 'got it. fixed now.', 'comment_created': datetime.datetime(2020, 7, 17, 0, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 456502709, 'comment_body': '@mtreacy002 sorry I did not realize the token comes from the cookie. We are creating the AuthContext as a wrapper for any auth related details. If we start getting access_token from cookie directly, every other component that we make will have this same logic. It is the responsibility of the context, to abstract these details out. \r\n\r\nCan you send the access_token also from the provider, and use it here? \r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 17, 15, 8, 14, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 456705736, 'comment_body': ""done. It's now added to AuthContext and used in request header from that. üëç"", 'comment_created': datetime.datetime(2020, 7, 17, 22, 52, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '2e2f90abeaf951c40501b328b20842d4708d4833', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
446639840,Feat: Issue#62 update user api endpoint,"### Description
Create PUT /user/personal_details api endpoint and test cases

Fixes #73 as sub-issue of #62 

### Type of Change:
- Code


**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- run the app manually with [ms-bitschema-backend-server](https://github.com/mtreacy002/mentorship-backend/tree/ms-bitschema-backend-server) as MS server and this PR branch as BIT backend server. 
- As this is the first time you connect to `ms-bitschema-backend-server`, you must create a new user first, login then you can update the user profile. 

User profile before update (called using GET/user/personal_details):
<img width=""765"" alt=""Screen Shot 2020-07-09 at 9 04 40 pm"" src=""https://user-images.githubusercontent.com/29667122/87034305-fac74600-c22a-11ea-9321-937b801f4d59.png"">

NOTE: with the current bug reported on issue [#596](https://github.com/anitab-org/mentorship-backend/issues/596) MS backend, I don't have any other option but to update ONLY the username.

Successful update message (on PUT/user/personal_details):
<img width=""761"" alt=""Screen Shot 2020-07-09 at 9 05 11 pm"" src=""https://user-images.githubusercontent.com/29667122/87034042-8e4c4700-c22a-11ea-87de-0a6538aed994.png"">

Check to make sure user profile gets updated (by calling GET/user/personal_details):
<img width=""760"" alt=""Screen Shot 2020-07-09 at 9 05 31 pm"" src=""https://user-images.githubusercontent.com/29667122/87034252-e5521c00-c22a-11ea-8b6d-a218b1ba5ce1.png"">



### Checklist:
<!--**Delete irrelevant options.**-->

- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials

**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] My PR currently breaks something (fix or feature that would cause existing functionality to not work as expected)
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes",True,74,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/74,https://github.com/anitab-org/bridge-in-tech-backend/pull/74,closed,369,506,19,1,4,0,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-07-09 06:08:57+00:00,2020-07-14 15:35:34+00:00,465997.0,"5 days, 9:26:37",[],"[{'commit_sha': '2de1a87a40a6d2605bed371456dbee6e9805350d', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
456822515,Feat: Update user personal details,"### Description
Allow user to update their personal details information

Fixes #47 

### Type of Change:
- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- login as a user
- go to `My Space` > `Profile` > `Personal details`
<img width=""628"" alt=""Screen Shot 2020-07-27 at 2 04 38 am"" src=""https://user-images.githubusercontent.com/29667122/88492407-f2725780-cfed-11ea-8777-2297a8b55f84.png"">

<img width=""565"" alt=""Screen Shot 2020-07-27 at 2 04 45 am"" src=""https://user-images.githubusercontent.com/29667122/88492409-f7370b80-cfed-11ea-90fb-1917c16b3661.png"">

- Update details including useername (**NOTE** this is a bug on MS. It's already reported on [issue#596](https://github.com/anitab-org/mentorship-backend/issues/596). User should be allowed to update details without changing username)
- see success message on the bottom of the form
- refresh the page or logout and login with same username. This should fail
<img width=""660"" alt=""Screen Shot 2020-07-27 at 9 42 51 am"" src=""https://user-images.githubusercontent.com/29667122/88492428-19308e00-cfee-11ea-87ca-3bf05eae36c2.png"">

- login with new username and go to Personal Details page. See new details
<img width=""1657"" alt=""Screen Shot 2020-07-27 at 9 43 19 am"" src=""https://user-images.githubusercontent.com/29667122/88492430-1d5cab80-cfee-11ea-89b9-7d728992a3b0.png"">

<img width=""980"" alt=""Screen Shot 2020-07-27 at 9 47 28 am"" src=""https://user-images.githubusercontent.com/29667122/88492451-3cf3d400-cfee-11ea-94cd-caef258bb3d3.png"">

### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] New and existing unit tests pass locally with my changes

",True,54,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/54,https://github.com/anitab-org/bridge-in-tech-web/pull/54,closed,147,68,6,1,1,7,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-07-26 23:40:47+00:00,2020-08-01 13:54:06+00:00,483199.0,"5 days, 14:13:19","[{'comment_id': 463115184, 'comment_body': 'use isValidName to name booleans. \r\nbooleans are named as isSomething, hasSomething', 'comment_created': datetime.datetime(2020, 7, 30, 16, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 463116920, 'comment_body': 'why have the id?', 'comment_created': datetime.datetime(2020, 7, 30, 16, 21, 18, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 463118164, 'comment_body': ""Too many ifs and else's here. Code doesn't look clean with so many conditionals"", 'comment_created': datetime.datetime(2020, 7, 30, 16, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 463118695, 'comment_body': 'We can refactor this tomorrow together, or give it a shot if you like', 'comment_created': datetime.datetime(2020, 7, 30, 16, 24, 13, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 463449462, 'comment_body': 'Done. Refactored to IsValidName and isValidUsername', 'comment_created': datetime.datetime(2020, 7, 31, 7, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 463449575, 'comment_body': 'Done. removed the ids on checkboxes', 'comment_created': datetime.datetime(2020, 7, 31, 7, 27, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 463450077, 'comment_body': ""For this one, I'll wait till our meeting tonight on your office hour (if you feel well enough). I'm not sure what else to do with this option."", 'comment_created': datetime.datetime(2020, 7, 31, 7, 29, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': 'ace9e087292995fe0158c4c81039af60b01241ac', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
448339630,Feat: Issue#76 POST and GET /user/additional_info api endpoints,"### Description
Add POST and GET user/additional_info endpoints to create and get additional information of a user.

Fixes #76 

### Type of Change:
- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)


### How Has This Been Tested?
Steps to test functionalities:
**For GET**
* run the app and go to swagger ui 
* login as existing user and get the access_token
* go to GET /user/personal_details and get user details by providing token (this is a step that MUST be done before user can access their additional information page) since with this `user_id` can be reetrieved and saved as cookie.
* go to GET /user/additional_info and provide the data.
* if user is new and has not yet added their additional information, it should return 404 Not Found.
<img width=""759"" alt=""Screen Shot 2020-07-13 at 1 31 54 am"" src=""https://user-images.githubusercontent.com/29667122/87324039-e5c41d00-c572-11ea-9f75-291f47ed61e8.png"">

* go to POST /user/additional_info to create additional information. Provide token and data in the relevant fields.
    **NOTE**
    - timezone value must be a string enum **value** of Timezone enum from bitschema_utils.py
    - phone and mobile must follow the phone_regex pattern under app/utils/validation_utils.py
    - no validation is currently placed for personal_website (icebox: can be a nice-to-have feature) 
    if the response is successful, you should see the following
![Screen Shot 2020-07-14 at 12 38 34 am](https://user-images.githubusercontent.com/29667122/87324275-38053e00-c573-11ea-91b6-647e6deff01c.png)

* To confirm, go to GET /user//additional_information. Provide token in the specified area. The following is an example of successful request:
<img width=""762"" alt=""Screen Shot 2020-07-14 at 1 16 37 am"" src=""https://user-images.githubusercontent.com/29667122/87324574-a0ecb600-c573-11ea-9499-6f67402aa1bd.png"">



### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] New and existing unit tests pass locally with my changes
",True,77,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/77,https://github.com/anitab-org/bridge-in-tech-backend/pull/77,closed,442,76,12,1,31,13,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-07-13 15:46:01+00:00,2020-07-25 10:31:31+00:00,1017930.0,"11 days, 18:45:30","[{'comment_id': 453754029, 'comment_body': 'Keep this as a default dict instead of initializing with empty strings', 'comment_created': datetime.datetime(2020, 7, 13, 15, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 453755242, 'comment_body': 'Use try except KeyError rather than if else to initialize dict elements\r\nhttps://www.google.com/amp/s/www.geeksforgeeks.org/try-except-vs-if-in-python/amp/\r\nEAFP principle', 'comment_created': datetime.datetime(2020, 7, 13, 15, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 453755766, 'comment_body': 'Why does this return an empty tuple?', 'comment_created': datetime.datetime(2020, 7, 13, 15, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 453756079, 'comment_body': 'Line spacing seems off', 'comment_created': datetime.datetime(2020, 7, 13, 15, 57, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 454004208, 'comment_body': 'Got it. Fixed now üëç', 'comment_created': datetime.datetime(2020, 7, 13, 23, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 454004338, 'comment_body': 'reemoved. now simply ends, not returning anything if valid', 'comment_created': datetime.datetime(2020, 7, 13, 23, 29, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 454004996, 'comment_body': 'got it. Thanks for the tips. Learned something new here. üòÅ. Changed to try-except.', 'comment_created': datetime.datetime(2020, 7, 13, 23, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 454005112, 'comment_body': 'done. now default dict {}', 'comment_created': datetime.datetime(2020, 7, 13, 23, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 454199978, 'comment_body': 'Is this needed', 'comment_created': datetime.datetime(2020, 7, 14, 8, 43, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 454206991, 'comment_body': 'hehehe.... sorry... will remove it. üòä', 'comment_created': datetime.datetime(2020, 7, 14, 8, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 454209987, 'comment_body': 'done.', 'comment_created': datetime.datetime(2020, 7, 14, 9, 0, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 456774846, 'comment_body': 'Can you add a comment about that access_expiry? Is that past? future, what is the date represented there?', 'comment_created': datetime.datetime(2020, 7, 18, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 456788266, 'comment_body': 'done, @isabelcosta . Now also with changed commit message as we discussed in the meeting before üòâ', 'comment_created': datetime.datetime(2020, 7, 18, 13, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '41b015d0167a801ecabd27f8493fa9cede5ade02', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
450810445,Feat: Issue#35 view user additional information,"### Description
Allow user to view their additional infomation page

Fixes #35 

### Type of Change:
- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
By login with as a user and geet additional information page by following the path:
 `My Space` -> `Profile` -> on `Personal Details` page hit `Continue` button and see below screenshots:
* if user is a representative of an organization:
![Screen Shot 2020-07-17 at 3 48 04 pm](https://user-images.githubusercontent.com/29667122/87753617-548cc900-c846-11ea-8cda-d230a885e36f.png)

* if user is not a repreesentative of an organization:
![Screen Shot 2020-07-17 at 3 48 48 pm](https://user-images.githubusercontent.com/29667122/87753638-62424e80-c846-11ea-97dc-8dec1820b71c.png)

### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials

**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] My PR currently breaks something (fix or feature that would cause existing functionality to not work as expected)
- [ ] New and existing unit tests pass locally with my changes

**Additional Note**
This is a WIP. Still need to add tests and fix bugs",True,40,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/40,https://github.com/anitab-org/bridge-in-tech-web/pull/40,closed,163,33,4,2,5,28,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-07-17 05:59:48+00:00,2020-07-25 02:32:36+00:00,678768.0,"7 days, 20:32:48","[{'comment_id': 456898398, 'comment_body': 'there is no enum in javascript. There are objects that have key value pairs. You can simply call it timezones', 'comment_created': datetime.datetime(2020, 7, 19, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 456904895, 'comment_body': '@meenakshi-dhanani , the reason I did this is because the backend respond to this request with the timezone enum `name` \r\n<img width=""910"" alt=""Screen Shot 2020-07-19 at 10 30 46 pm"" src=""https://user-images.githubusercontent.com/29667122/87874901-d892ac80-ca10-11ea-9599-a65124573e1c.png"">\r\n\r\nwhich is what\'s being recorded in postgresql.\r\n<img width=""524"" alt=""Screen Shot 2020-07-19 at 10 27 25 pm"" src=""https://user-images.githubusercontent.com/29667122/87874846-75087f00-ca10-11ea-9899-f10a2dd223f9.png"">\r\n\r\n<img width=""658"" alt=""Screen Shot 2020-07-19 at 10 32 15 pm"" src=""https://user-images.githubusercontent.com/29667122/87874857-881b4f00-ca10-11ea-9105-6ce21e6c2efd.png"">\r\n<img width=""1172"" alt=""Screen Shot 2020-07-19 at 10 59 28 pm"" src=""https://user-images.githubusercontent.com/29667122/87875278-93bc4500-ca13-11ea-9600-91ad87293658.png"">\r\n\r\n\r\nHowever, what I want the user to see is the timezone `value` which according to [this stackoverflow discussion](https://stackoverflow.com/questions/18111657/how-to-get-names-of-enum-entries) could be done in in this way (what I\'ve done in the code).\r\n\r\n<img width=""512"" alt=""Screen Shot 2020-07-19 at 10 28 15 pm"" src=""https://user-images.githubusercontent.com/29667122/87875172-a71ae080-ca12-11ea-9802-b2504798f0d3.png"">\r\n\r\nThe difference of the code are as per screenshoot below (the one commented out is returning timezone as its name, not value)\r\n<img width=""486"" alt=""Screen Shot 2020-07-19 at 10 55 16 pm"" src=""https://user-images.githubusercontent.com/29667122/87875219-21e3fb80-ca13-11ea-83fd-e3e9a2802dba.png"">\r\n\r\n\r\nThere is another alternative, which is to change the backend response and request model to accept/return human-readable format (aka enum value) from the backend side and do the logic to convert it to enum name before saving it to the database. \r\nBut again, seeing how we keep machine format (unix datetime) for datetime on our backend and only change it to human-readable on frontend, I thought there\'s a convention somewhere (I\'m not sure if there is, but @ramitsawhney27 maybe can clarify this for us) to keep backend as close as machine language\r\n\r\n<img width=""652"" alt=""Screen Shot 2020-07-19 at 10 31 12 pm"" src=""https://user-images.githubusercontent.com/29667122/87875025-ad5c8d00-ca11-11ea-9e72-15e76d281cac.png"">\r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 19, 12, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 456909339, 'comment_body': 'Choose to keep the mapping logic in the frontend/backend. And follow it consistently. Based on our discussion, keeping it in the backend right now is less effort. So you can continue with that. So frontend will not keep any mappings, as per my understanding', 'comment_created': datetime.datetime(2020, 7, 19, 13, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 456909397, 'comment_body': 'Why the line?', 'comment_created': datetime.datetime(2020, 7, 19, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 456909427, 'comment_body': 'can you make this data.message?', 'comment_created': datetime.datetime(2020, 7, 19, 13, 32, 13, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 456909596, 'comment_body': 'are we using snake case or camel case? \r\n\r\nadditionalInfo = camel case\r\nis_organization_rep = snake case', 'comment_created': datetime.datetime(2020, 7, 19, 13, 34, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 456995340, 'comment_body': 'Ok. will change it now.', 'comment_created': datetime.datetime(2020, 7, 20, 2, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 456995435, 'comment_body': ""I'll try"", 'comment_created': datetime.datetime(2020, 7, 20, 2, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 456995606, 'comment_body': 'got it. now removed.', 'comment_created': datetime.datetime(2020, 7, 20, 2, 24, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 456995929, 'comment_body': 'snake case on the response body of backend as per python convention. do you want the frontend to be changed as well (like in useState we use camel case)', 'comment_created': datetime.datetime(2020, 7, 20, 2, 26, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 457008317, 'comment_body': ""@meenakshi-dhanani . I've replaced the snake case in any other place except setting value from dict additionalInfo as this is as per what being sent by backend (as python format)"", 'comment_created': datetime.datetime(2020, 7, 20, 3, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 457518603, 'comment_body': ""We might want to persist the access_token as accessToken on our side. Because the backend might me using snake case, but on the frontend it's camel case everywhere. That would be a change in the context, I don't mind if you want to do that change separately. So I won't make that a blocker for this PR.\r\nSmall things, but consistent casing for the code hygiene is important"", 'comment_created': datetime.datetime(2020, 7, 20, 15, 56, 58, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 457520046, 'comment_body': 'error message is already getting set in catch right? would there be a case that on error the control would not go to a catch? Just wondering?', 'comment_created': datetime.datetime(2020, 7, 20, 15, 58, 44, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 457737498, 'comment_body': ""@meenakshi-dhanani . For some reason, it seems like only the uncustomised errors get inside catch. where as the customised errors did not get inside catch. you can test this by running the app, login, but skip going to personal details page and go straight to additional info. with error also set inside get, you'll see the error message. but if you comment it out and just relying from the one inside catch, you'll not see the error message. I don't know why this happen, but maybe just the way `fetch` is, or perhaps something in backend need to be change. Any suggestions? cc @ramitsawhney27 "", 'comment_created': datetime.datetime(2020, 7, 20, 22, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 457742189, 'comment_body': 'Ok, can some else pick it up (like first-timer-only)? or do you want me to work on it?', 'comment_created': datetime.datetime(2020, 7, 20, 23, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 457843897, 'comment_body': ""@mtreacy002 I checked fetch it works that way. Doesn't reject a 400. I'm looking at why and figuring another way. I'll post links on this soon."", 'comment_created': datetime.datetime(2020, 7, 21, 5, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 457871149, 'comment_body': ""I checked the documentation - https://javascript.info/fetch. Fetch doesn't reject http status errors. Usually how we handle it is since this same logic will be repeated for every call, we have a wrapper over api calls. You can push this and I can open another PR for that. However even in this, what you'd want to do it, check if the !response.ok and reject the promise with the data. Let catch then be the only place where you setErrorMessage. Once you reject anything, it will go to the catch"", 'comment_created': datetime.datetime(2020, 7, 21, 6, 42, 30, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 457871471, 'comment_body': 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject - Inside the new error you can give the data from response.json', 'comment_created': datetime.datetime(2020, 7, 21, 6, 43, 17, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 458534734, 'comment_body': 'got it. made the change. will push now', 'comment_created': datetime.datetime(2020, 7, 22, 4, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 458706401, 'comment_body': 'We can create a separate one and label as first timer I think :)', 'comment_created': datetime.datetime(2020, 7, 22, 10, 52, 51, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 458713704, 'comment_body': 'this is unused', 'comment_created': datetime.datetime(2020, 7, 22, 11, 7, 54, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 458714073, 'comment_body': 'this const status is also not being used. You can remove this', 'comment_created': datetime.datetime(2020, 7, 22, 11, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 458734435, 'comment_body': 'oops.. forgot to remove it. Ok. done now. üòâ', 'comment_created': datetime.datetime(2020, 7, 22, 11, 50, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 458735533, 'comment_body': ""forgot this one too. Now it''s removed"", 'comment_created': datetime.datetime(2020, 7, 22, 11, 52, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 458960287, 'comment_body': 'if you throw an error, and send the data.message, in your catch, you will get access to that data.message. So you should be able to say setErrorMessage(error) \r\n\r\nwhile throwing simply throw new Error(data)\r\n\r\nonce you do that in catch you can say .catch(error) {set.... error.message}\r\n\r\nPlease note: whatever you send inside new Error will come to catch\r\n\r\nHave you tried this out locally, when you run the app? You might want to check with a 500 scenario, and a 400 scenario both\r\n', 'comment_created': datetime.datetime(2020, 7, 22, 17, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 459173785, 'comment_body': ""Yep @meenakshi-dhanani . I tried it (with the existing code). The error is shown when user didn't retrieved their details before viewing additional info page.\r\n\r\n![ezgif com-video-to-gif (3)](https://user-images.githubusercontent.com/29667122/88244696-eb8ad280-ccd7-11ea-99d0-856da64b6584.gif)\r\n\r\nNote that there's a backend bug in this application (already open [issue#94](https://github.com/anitab-org/bridge-in-tech-backend/issues/94) to deal with it) Logout on frontend currently only removes the cookies on frontend to allow toggling navbar with isAuth status. However, no logout being implemented on backend, thus logging out from frontend does not remove cookies of user_id in backend. At this stage, to remove this cookies on backend, the bit backend seerver needs to be terminated completely and ree-run again for frontend to login. \r\n\r\nSee the behaviour below. User was logged-in, then logged-out, then login again. Expected behaviour is for user to be warned that they haven't retrieved their personal details. But instead, additional info is shown as if they had done so (retrieved their details)\r\n\r\n![ezgif com-video-to-gif (4)](https://user-images.githubusercontent.com/29667122/88244969-c2b70d00-ccd8-11ea-89f6-0c0d881b875b.gif)\r\n\r\n"", 'comment_created': datetime.datetime(2020, 7, 23, 1, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 459174779, 'comment_body': ""Update @meenakshi-dhanani . I've just pushed the modified throw as per your suggestion. It still works the same as gif above "", 'comment_created': datetime.datetime(2020, 7, 23, 1, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 459996070, 'comment_body': 'we can look at this today in our call - https://www.geeksforgeeks.org/reject-vs-throw-promises-in-javascript/', 'comment_created': datetime.datetime(2020, 7, 24, 11, 26, 4, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}]","[{'commit_sha': '6b990f1454609634b166042a6c89345829424b3c', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46fea84caf4287c4e19cf2201eaa0d6efa354dc3', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
449494619,Feat: Issue#80 PUT /user/additional_info api endpoints and test cases,"### Description
Allow user to update their additional information.

Fixes #80 

### Type of Change:
- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- tested manually by running the application and update user additional information.
* on successful update:
Before update: 
<img width=""830"" alt=""Screen Shot 2020-07-15 at 9 32 54 pm"" src=""https://user-images.githubusercontent.com/29667122/87551704-154e6300-c6f4-11ea-9321-11b579581e09.png"">

After update:
<img width=""854"" alt=""Screen Shot 2020-07-15 at 9 40 36 pm"" src=""https://user-images.githubusercontent.com/29667122/87551750-24cdac00-c6f4-11ea-8917-c407e77ae8c4.png"">

Success message on Swagger UI:
<img width=""1278"" alt=""Screen Shot 2020-07-15 at 11 35 33 pm"" src=""https://user-images.githubusercontent.com/29667122/87551796-31ea9b00-c6f4-11ea-8199-f8734196ad20.png"">

* On invalid input (invalid timezone):
<img width=""1285"" alt=""Screen Shot 2020-07-15 at 9 15 37 pm"" src=""https://user-images.githubusercontent.com/29667122/87551999-7413dc80-c6f4-11ea-96b9-c02030d2c385.png"">

* When user has no existing additional information data in database:
<img width=""1275"" alt=""Screen Shot 2020-07-15 at 11 42 57 pm"" src=""https://user-images.githubusercontent.com/29667122/87552489-1c29a580-c6f5-11ea-9a25-f5833292b7a6.png"">

- by running unittest and all test cases passed
<img width=""1626"" alt=""Screen Shot 2020-07-15 at 11 47 46 pm"" src=""https://user-images.githubusercontent.com/29667122/87552942-b4c02580-c6f5-11ea-98be-a27f8374e3d6.png"">

### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials
- [ ] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation

**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes",True,81,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/81,https://github.com/anitab-org/bridge-in-tech-backend/pull/81,closed,333,23,7,1,7,7,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-07-15 13:50:42+00:00,2020-07-31 12:08:06+00:00,1376244.0,"15 days, 22:17:24","[{'comment_id': 461129890, 'comment_body': 'why is this 0? @mtreacy002 ', 'comment_created': datetime.datetime(2020, 7, 27, 19, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'isabelcosta', 'type': 'User'}, {'comment_id': 461292480, 'comment_body': '@isabelcosta. This is because if the server only just run for the first time, there\'ll be no AUTH_COOKIE[""user_id""] ever initiated in the system. I tried once with `if not AUTH_COOKIE[""user_id""]` to check if it\'s `none` but the system crash since there\'s no such attribute as `user_id` in the AUTH_COOKIE. But if the system already has someone logged in, their ""user_id"" need to be cleared out so another logged in person not going to be accidentally associated to it. I also tried to set AUTH_COOKIE[""user_id""] = None, but that didn\'t work as well (forgot what thee error message was).\r\nSo here, I used `0` as a default on AUTH_COOKIE[""user_id""] since the database will never give an index  of `0` as an ID to an instance (it always starts with 1). So, it\'s sort of the safest way to instantiate the attribute ""user_id"" for AUTH_COOKIE but without associating it to any user. ', 'comment_created': datetime.datetime(2020, 7, 28, 3, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 462049206, 'comment_body': 'I think we should keep it as None. We can look into the error, it would just be a TypeError, where you can cast None to 0 if needed', 'comment_created': datetime.datetime(2020, 7, 29, 5, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 462049334, 'comment_body': 'If not user_id ', 'comment_created': datetime.datetime(2020, 7, 29, 5, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 462096409, 'comment_body': 'Got it. I changed it to None and use catch the ValueError exception. Perhaps that crash I encountered last time was on something else then üòä', 'comment_created': datetime.datetime(2020, 7, 29, 7, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 462099690, 'comment_body': 'Yep, I removed it completely as now I\'m applying EAFP `try catch` instead üòÅ\r\n\r\n<img width=""694"" alt=""Screen Shot 2020-07-29 at 5 32 21 pm"" src=""https://user-images.githubusercontent.com/29667122/88771198-3c139b80-d1c2-11ea-87a9-00c74db43a70.png"">\r\n', 'comment_created': datetime.datetime(2020, 7, 29, 7, 38, 2, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 462114259, 'comment_body': 'Very happy to see more usage of EAFP!', 'comment_created': datetime.datetime(2020, 7, 29, 8, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}]","[{'commit_sha': '2b766febf012ea68808af5a6fa9f94a33c6fc790', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
449994052,Feat: Issue#82 POST and GET /user/personal_background api endpoints,"### Description
Give user the ability to create and get their personal background information.

Fixes #82 

### Type of Change:
- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- Tested manually by sending POST /user/personal_background (to create personal background of existing user).
* on successful output - personal background information successfully created:
![Screen Shot 2020-07-16 at 5 51 42 pm](https://user-images.githubusercontent.com/29667122/87643902-cd304e80-c78e-11ea-916c-6c145bf2d9c4.png)

* when user already has existing personal background information in the database:
![Screen Shot 2020-07-16 at 5 53 42 pm](https://user-images.githubusercontent.com/29667122/87644004-eb964a00-c78e-11ea-825e-0d7d16420db2.png)

- tested manually by sending GET /user/personal_background (to get their personal background information):
* on successful output:
![Screen Shot 2020-07-16 at 4 52 26 pm](https://user-images.githubusercontent.com/29667122/87644430-7aa36200-c78f-11ea-9cf8-cdc23545d5a4.png)

* on error response - user has no personal background information in the database:
![Screen Shot 2020-07-16 at 3 54 32 pm](https://user-images.githubusercontent.com/29667122/87644318-52b3fe80-c78f-11ea-889f-dc51be3c9209.png)
 

### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials
- [ ] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation

**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] New and existing unit tests pass locally with my changes
- [ ] Any dependent changes have been published in downstream modules

**Additional note**
* Test cases will be done on a separate PR.
* Personal Background enum input must be taken from the Background enum **VALUE** from within `app/utils/bitschema_utils.py` file.",True,83,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/83,https://github.com/anitab-org/bridge-in-tech-backend/pull/83,closed,303,16,8,1,9,0,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-07-16 08:11:11+00:00,2020-08-01 11:45:39+00:00,1395268.0,"16 days, 3:34:28",[],"[{'commit_sha': '999271077d69f157081435fdca081ab7ce63eeed', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
456615063,Feat: View personal background updated,"This reverts commit bfb7a15a5cf8c6586f7fb9699221b5385dd7eeed.

",True,46,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/46,https://github.com/anitab-org/bridge-in-tech-web/pull/46,closed,470,48,5,1,0,0,0,0,[],2020-07-25 13:23:47+00:00,2020-07-25 13:26:01+00:00,134.0,0:02:14,[],"[{'commit_sha': 'ee488c9efa6657af8f9aea1137f09e7053b6e2f8', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
450249168,Issue#86 PUT /user/personal_background api endpoint and tests,"### Description
Allow user to update their personal background data

Fixes #86 

### Type of Change:
- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- Login as a user that has no perrsonal background data and get personal details (GET /user/personal_details) so the user_id is saved to cookie.
- send PUT /user/personal_background request and on successful create, see response 201 Created as per screenshot below
<img width=""845"" alt=""Screen Shot 2020-08-03 at 9 57 43 pm"" src=""https://user-images.githubusercontent.com/29667122/89181211-92c01180-d5d6-11ea-8c71-faf24bcbd4ac.png"">

- now test update by modifying the personal background. On successful update see response 200 OK as per screenshot below 
<img width=""829"" alt=""Screen Shot 2020-08-03 at 9 58 06 pm"" src=""https://user-images.githubusercontent.com/29667122/89181425-0eba5980-d5d7-11ea-86cc-57901da76ab7.png"">

* with invalid new personal background data payload
<img width=""844"" alt=""Screen Shot 2020-08-03 at 10 19 20 pm"" src=""https://user-images.githubusercontent.com/29667122/89181589-6bb60f80-d5d7-11ea-93a4-a6dc20f49b83.png"">

### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials

**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes",True,87,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/87,https://github.com/anitab-org/bridge-in-tech-backend/pull/87,closed,733,6,8,3,7,0,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-07-16 14:39:18+00:00,2020-08-11 11:57:14+00:00,2236676.0,"25 days, 21:17:56",[],"[{'commit_sha': 'c4ae90ad859536cb5fc6b5f60b25bdff04f8df8f', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44b0e9b780d21f6c68879652a9c2e1801f536c29', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b14e212f00ce3fa188a87414f38a55d2d222a34', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
461804077,Feat: Update user personal background,"### Description
Allow user to update their personal background

Fixes #49 

### Type of Change:
- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- login then go to `My Space` > 'Personal Details' > `Personal Background`
- If this is the first time user view the Personal Background page, it will show the message below:
<img width=""493"" alt=""Screen Shot 2020-08-02 at 10 08 40 pm"" src=""https://user-images.githubusercontent.com/29667122/89123502-32b46700-d513-11ea-8ce2-85c14f55ebdd.png"">

- Fill in the personal background information. On successful process, see message below
<img width=""451"" alt=""Screen Shot 2020-08-04 at 8 34 52 am"" src=""https://user-images.githubusercontent.com/29667122/89234001-41dc0780-d62e-11ea-8b4b-b4bce3c84a00.png"">

If user click `Save` button without selecting anything, the default value is saved ""Prefeer not to say""

<img width=""473"" alt=""Screen Shot 2020-08-04 at 8 35 19 am"" src=""https://user-images.githubusercontent.com/29667122/89234086-7a7be100-d62e-11ea-8387-c108a530197a.png"">


- Now change the details and on successful update see message below

<img width=""464"" alt=""Screen Shot 2020-08-04 at 8 35 45 am"" src=""https://user-images.githubusercontent.com/29667122/89234093-810a5880-d62e-11ea-9d86-4376669705fc.png"">

### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials
- [ ] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas

**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] New and existing unit tests pass locally with my changes",True,61,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/61,https://github.com/anitab-org/bridge-in-tech-web/pull/61,closed,437,272,7,5,7,2,0,0,[],2020-08-02 13:02:14+00:00,2020-08-10 17:15:54+00:00,706420.0,"8 days, 4:13:40","[{'comment_id': 464568629, 'comment_body': 'Why does this not use the SERVICE_UNAVAILABLE_ERROR?', 'comment_created': datetime.datetime(2020, 8, 3, 17, 48, 5, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 464695040, 'comment_body': 'Yup. Fixed it.', 'comment_created': datetime.datetime(2020, 8, 3, 22, 28, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '7c8744283272f33e44bfc8e0e5f2b5b79649cf0f', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab20f7d809eea67c80819a495dce8ff5bb4defd', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63f8956b267fcdb0c298d1b386e90bff4b23545c', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '712e744662ce1333099f2f40c2d7fc852a35b0d9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7f161e2673c611a039302cf21c54cc9ae75ac24', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
457809957,Feat: GET /users/{user_id} api endpoints and tests,"### Description
Allow user to get other membre's personal details

Fixes #98 

### Type of Change:
- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- Make sure you have created 2 users (user a and b) who already verified their email address
- Login as user a
- send GET /userrs/{user_id} request by providing the user b id number
- for successful response (200) you will see below
<img width=""647"" alt=""Screen Shot 2020-07-28 at 11 27 55 pm"" src=""https://user-images.githubusercontent.com/29667122/88671717-fc00da00-d129-11ea-8b01-2341aa3fe922.png"">


### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials
- [ ] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes",True,99,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/99,https://github.com/anitab-org/bridge-in-tech-backend/pull/99,closed,405,7,7,2,1,4,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-07-28 13:29:23+00:00,2020-08-14 11:29:21+00:00,1461598.0,"16 days, 21:59:58","[{'comment_id': 462112777, 'comment_body': 'if not user_id', 'comment_created': datetime.datetime(2020, 7, 29, 8, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 462112941, 'comment_body': 'if not user_id', 'comment_created': datetime.datetime(2020, 7, 29, 8, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 462195013, 'comment_body': ""done. It's now the EAFP try catch üòâ"", 'comment_created': datetime.datetime(2020, 7, 29, 10, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 462195138, 'comment_body': 'done. changed to EAFP', 'comment_created': datetime.datetime(2020, 7, 29, 10, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '36137c88479b37cb4f6c14117993d6a599c6e26a', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '454c8aa4133eaf0335041de5efd9d69633f9f60a', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
459130447,Feat: View members list,"### Description
Allow user to see list of members

Fixes #58 

### Type of Change:
- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- run the application
- with user not logged-in go to `Members` page
- see login form
- login as a user
- now go to `Members` page
- see members list. (**Note** make sure you have created at least 3 verified users and 1 non verified users. The list should contain the 2 verified users beside the logged-in user)

<img width=""965"" alt=""Screen Shot 2020-07-30 at 11 11 37 pm"" src=""https://user-images.githubusercontent.com/29667122/88927113-4f099700-d2ba-11ea-8f16-2bc7b14f0356.png"">



### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] New and existing unit tests pass locally with my changes",True,59,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/59,https://github.com/anitab-org/bridge-in-tech-web/pull/59,closed,155,128,5,2,3,5,3,1,"[{'name': 'Category: Coding'}, {'name': 'Category: User Interface'}, {'name': 'Program: GSOC'}]",2020-07-30 12:27:51+00:00,2020-08-10 17:11:44+00:00,967433.0,"11 days, 4:43:53","[{'comment_id': 463124874, 'comment_body': 'Good job with the mapping üëç ', 'comment_created': datetime.datetime(2020, 7, 30, 16, 34, 4, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 463426809, 'comment_body': ""Is it possible to have a loop over member attributes rather than specifically writing member.attribute? I just feel that's more generic and scalable."", 'comment_created': datetime.datetime(2020, 7, 31, 6, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 463549345, 'comment_body': ""mmm... I'm not sure tbh. I'll discuss this with @meenakshi-dhanani in her office hour tonight."", 'comment_created': datetime.datetime(2020, 7, 31, 11, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 463575056, 'comment_body': ""Although, @ramitsawhney27 . It might not be straight forward to loop over attrributes of member as the `Program Completed` column does not come from the member data within the members list, but abstracted from all programs that the member's would've done by the time logged-in user view the members list. "", 'comment_created': datetime.datetime(2020, 7, 31, 12, 14, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 464565812, 'comment_body': ""It's okay I think. It's readable. You can use Object.values() to iterate over the values in the object. But I feel this is fine. And like Maya mentioned, there are two things that don't come from the member list."", 'comment_created': datetime.datetime(2020, 8, 3, 17, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}]","[{'commit_sha': '7c8744283272f33e44bfc8e0e5f2b5b79649cf0f', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab20f7d809eea67c80819a495dce8ff5bb4defd', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
463718110,Feat: Issue60 view other member details,"### Description
Allow user to view other member's personal details

Fixes #60 

### Type of Change:
- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- Login as a user
- Go to `Members` and select a member from the list of users
- See member details
<img width=""607"" alt=""Screen Shot 2020-08-08 at 12 57 27 am"" src=""https://user-images.githubusercontent.com/29667122/89659559-63314200-d913-11ea-8a09-f17486b094dd.png"">


### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials
- [ ] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] New and existing unit tests pass locally with my changes",True,62,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/62,https://github.com/anitab-org/bridge-in-tech-web/pull/62,closed,146,3,3,1,5,9,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-08-06 00:55:11+00:00,2020-08-11 10:54:13+00:00,467942.0,"5 days, 9:59:02","[{'comment_id': 466511090, 'comment_body': ""You don't need all this AuthContext here. /member-profile is also a protected route so all the auth happens. You don't need to repeat here. "", 'comment_created': datetime.datetime(2020, 8, 6, 15, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 466512334, 'comment_body': ""It's actually a link not a button. Why are we using Button? \r\n\r\nAlso, onClick expects a function call you, if you see what happens when you click on a member, there's a warning in the console about how onClick is receiving an object. You can fix it by doing this - `onClick={() => handleClick(member)}`"", 'comment_created': datetime.datetime(2020, 8, 6, 15, 51, 15, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 466513805, 'comment_body': 'No need to use Route here again. You have already defined a route that is /member-profile. What you want to do on click is simply redirect to member-profile. That route will render the MemberProfile component. \r\n\r\nFind an example of how, useHistory hook is used here - https://css-tricks.com/the-hooks-of-react-router/', 'comment_created': datetime.datetime(2020, 8, 6, 15, 53, 27, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 466761456, 'comment_body': ""Ok. I've removed it in the latest commit"", 'comment_created': datetime.datetime(2020, 8, 7, 0, 52, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 466761726, 'comment_body': ""I've replaced it with anchor tag <a> which I initially had and fix onclick as your suggestion. But it still doesn't work."", 'comment_created': datetime.datetime(2020, 8, 7, 0, 53, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 466762120, 'comment_body': ""I've pushed my latest commit, but the redirecting still doesn't work. I hope we can discuss this on your office hour tonight."", 'comment_created': datetime.datetime(2020, 8, 7, 0, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 466892191, 'comment_body': '@meenakshi-dhanani .Looking through Tyler McGinnis, useHistory is just another option (imperative navigation) on React Router v5. The one that I tried to use here is <Redirect ... /> which is the declarative way that he is in favor of using for navigating. ', 'comment_created': datetime.datetime(2020, 8, 7, 8, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 467484881, 'comment_body': 'Can rename this component to Member', 'comment_created': datetime.datetime(2020, 8, 8, 17, 10, 40, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 467526246, 'comment_body': ""@meenakshi-dhanani . Later once the Organisation, Program and Mentorship Relation functionalities are completed, the User and Member area will have User Portfolio and Member Portfolio that show programs that the user and member have involved in (like the dashboard). So, I think we should keep the name MemberProfile since later we'll have MemberPortfolio. What do you think?"", 'comment_created': datetime.datetime(2020, 8, 9, 2, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '3941645804e8fe4b46e3e55544583538b0d25d0e', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
462073213,Feat: refactor Create Update user additional info to one api endpoint,"### Description
Refactor POST and PUT /user/additional_info to one api endpoint

Fixes #100 

### Type of Change:
- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- login as user who has no additional info record
- send GET /user/personal_details request to get user id
- send PUT /user/additional_info to create additional info data. See success response 201 Created if additional info instance is successfully created.
<img width=""845"" alt=""Screen Shot 2020-08-03 at 7 33 18 pm"" src=""https://user-images.githubusercontent.com/29667122/89169938-4cf94e00-d5c2-11ea-8d06-8ae80f30cff9.png"">

- Now update the details and resend PUT /user/additional_info. On success update, see response 200 OK.
<img width=""846"" alt=""Screen Shot 2020-08-03 at 7 34 33 pm"" src=""https://user-images.githubusercontent.com/29667122/89170114-8a5ddb80-d5c2-11ea-89ee-17a9169014dc.png"">


### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials
- [ ] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes
",True,101,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/101,https://github.com/anitab-org/bridge-in-tech-backend/pull/101,closed,39,308,5,1,3,14,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-08-03 09:50:50+00:00,2020-08-10 23:40:20+00:00,654570.0,"7 days, 13:49:30","[{'comment_id': 464558388, 'comment_body': ""As part of refactoring, the code duplication can be abstracted to a separate method. \r\neg. while updating you set organization, timezone, save to db for existing info otherwise if it's new then you do same stuff for user_extension. \r\nThis could be abstracted, and it could be a method you call, which does these things"", 'comment_created': datetime.datetime(2020, 8, 3, 17, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 464707671, 'comment_body': '@meenakshi-dhanani. I don\'t think it\'s a duplication. When the data does not exist, the a new instance is created with parameters pass to UserExtensionModel \r\n<img width=""710"" alt=""Screen Shot 2020-08-04 at 8 59 10 am"" src=""https://user-images.githubusercontent.com/29667122/89235246-30482f00-d631-11ea-9c72-b53cc2c7d50a.png"">\r\n\r\n\r\nBut when data exist which means user wants to update, the existing data attributes is replaced (not using the UserExtensionModel)\r\n\r\n<img width=""707"" alt=""Screen Shot 2020-08-04 at 9 03 17 am"" src=""https://user-images.githubusercontent.com/29667122/89235425-7bfad880-d631-11ea-9121-c9b6b4bae52c.png"">\r\n\r\n\r\nIf you think this is still a duplication, can you please show me how to make the code better (to use one instance for replacing existing attributes in the data that can also be used to represent a new instance) ', 'comment_created': datetime.datetime(2020, 8, 3, 23, 8, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 465157788, 'comment_body': 'There is code duplication, if you see carefully. You can abstract is out, the following is an example of how you can abstract common logic out to a method. \r\n\r\n`def update_user_additional_info(data):\r\n        """"""Updates a user_extension instance.\r\n        Arguments:\r\n            data: A list containing user\'s id, boolean value of whether or not\r\n            the user is representing an organization, as well as their timezone\r\n    \r\n        Returns:\r\n                A dictionary containing ""message"" which indicates whether or not \r\n                the user_exension was updated successfully and ""code"" for the HTTP response code.\r\n        """"""\r\n\r\n        try:\r\n            user_id = int(AUTH_COOKIE[""user_id""].value)\r\n        except ValueError:\r\n            return messages.USER_ID_IS_NOT_RETRIEVED, HTTPStatus.FORBIDDEN    \r\n\r\n        \r\n        existing_additional_info = UserExtensionModel.find_by_user_id(user_id)\r\n        if not existing_additional_info:\r\n            user_extension = UserExtensionModel(user_id, timezone)\r\n            return update(user_extension, data, messages.ADDITIONAL_INFO_SUCCESSFULLY_CREATED, HTTPStatus.CREATED)    \r\n        return update(existing_additional_info, data, messages.ADDITIONAL_INFO_SUCCESSFULLY_UPDATED, HTTPStatus.OK)     \r\n      \r\n    def update(user, data, success_message, status_code):\r\n        additional_info_data = {}\r\n        try:\r\n            additional_info_data[""phone""] = data[""phone""]\r\n            additional_info_data[""mobile""] = data[""mobile""]\r\n            additional_info_data[""personal_website""] = data[""personal_website""]\r\n        except KeyError as e:\r\n            return e, HTTPStatus.BAD_REQUEST\r\n\r\n        try: \r\n            user.is_organization_rep = data[""is_organization_rep""]\r\n        except KeyError as e:\r\n            return e, HTTPStatus.BAD_REQUEST\r\n\r\n        timezone_value = data[""timezone""]\r\n        timezone = Timezone(timezone_value).name            \r\n        user.timezone = timezone\r\n        user.additional_info = additional_info_data\r\n        user.save_to_db()\r\n\r\n        return success_message, status_code\r\n`\r\n\r\nIn the update method, all common logic resides. So now same code is not repeated twice. And if you look at the update_user_additional_info method, see how readable it is when you say if a user_extension exists then update status and statuscode and other wise created and all. \r\n\r\nDoes it make sense?', 'comment_created': datetime.datetime(2020, 8, 4, 15, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 465158605, 'comment_body': ""you might want to rename this to existing_user_extension because it is essentially that right? \r\nBecause in the code later, when you do, existing_additional_info.additional_info it doesn't make sense. \r\n"", 'comment_created': datetime.datetime(2020, 8, 4, 15, 59, 51, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 465441214, 'comment_body': 'Hi @meenakshi-dhanani . Thanks for your refactoring suggestion. Have you tried to run the application with your code change? I\'ve tried but the code failed as the Timezone which is needed for initiating the UserExtension model is not defined before the initiation line.\r\n\r\n<img width=""984"" alt=""Screen Shot 2020-08-05 at 12 47 54 pm"" src=""https://user-images.githubusercontent.com/29667122/89366524-601f3180-d71a-11ea-9c4d-9475f4140bc4.png"">\r\n\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 5, 2, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 465454216, 'comment_body': ""no problem, feel free to remove the timezone logic from the method and put it up as it is. My idea was to give you something to figure out how to spot the duplication and extract into method. It doesn't have to be pasted as it is. I'd like if you don't paste it all. And try doing it once you get how to. "", 'comment_created': datetime.datetime(2020, 8, 5, 3, 44, 54, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 465454871, 'comment_body': ""Don't worry. I've fixed it by moving timezone before initiation code. "", 'comment_created': datetime.datetime(2020, 8, 5, 3, 47, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 465455353, 'comment_body': '`def update_user_additional_info(data):\r\n        """"""Updates a user_extension instance.\r\n        Arguments:\r\n            data: A list containing user\'s id, boolean value of whether or not\r\n            the user is representing an organization, as well as their timezone\r\n    \r\n        Returns:\r\n                A dictionary containing ""message"" which indicates whether or not \r\n                the user_exension was updated successfully and ""code"" for the HTTP response code.\r\n        """"""\r\n\r\n        try:\r\n            user_id = int(AUTH_COOKIE[""user_id""].value)\r\n        except ValueError:\r\n            return messages.USER_ID_IS_NOT_RETRIEVED, HTTPStatus.FORBIDDEN    \r\n\r\n        \r\n        \r\n        timezone_value = data[""timezone""]\r\n        timezone = Timezone(timezone_value).name            \r\n\r\n        existing_additional_info = UserExtensionModel.find_by_user_id(user_id)\r\n        if not existing_additional_info:\r\n            user_extension = UserExtensionModel(user_id, timezone)\r\n            return update(user_extension, data, messages.ADDITIONAL_INFO_SUCCESSFULLY_CREATED, HTTPStatus.CREATED)    \r\n        response = update(existing_additional_info, data, messages.ADDITIONAL_INFO_SUCCESSFULLY_UPDATED, HTTPStatus.OK)\r\n        existing_additional_info.timezone = timezone\r\n        return response\r\n      \r\n    def update(user, data, success_message, status_code):\r\n        additional_info_data = {}\r\n        try:\r\n            additional_info_data[""phone""] = data[""phone""]\r\n            additional_info_data[""mobile""] = data[""mobile""]\r\n            additional_info_data[""personal_website""] = data[""personal_website""]\r\n        except KeyError as e:\r\n            return e, HTTPStatus.BAD_REQUEST\r\n\r\n        try: \r\n            user.is_organization_rep = data[""is_organization_rep""]\r\n        except KeyError as e:\r\n            return e, HTTPStatus.BAD_REQUEST\r\n\r\n        user.additional_info = additional_info_data\r\n        user.save_to_db()\r\n\r\n        return success_message, status_code\r\n`', 'comment_created': datetime.datetime(2020, 8, 5, 3, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 465455624, 'comment_body': 'Again, this is just a suggestion, I tried making the timezone common. But try yourself and see what works for you', 'comment_created': datetime.datetime(2020, 8, 5, 3, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 465456294, 'comment_body': 'Done. I renamed this to useer_additional_info (for both existing and non-existing data)', 'comment_created': datetime.datetime(2020, 8, 5, 3, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 465456925, 'comment_body': ""oh I meant if you do a find_by_user_id on a userextensionmodel what you'd expect is a user_extension in return. So rather than renaming the additional info you might want to rename this"", 'comment_created': datetime.datetime(2020, 8, 5, 3, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 465457503, 'comment_body': ""Thank again for the suggestion. But I think putting timezone after updating the database record as you suggested above will beat the purpose of updating the database on timezone field. \r\nSo, I'll keep it as my latest change for now."", 'comment_created': datetime.datetime(2020, 8, 5, 3, 58, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 465457589, 'comment_body': 'yes yes. I made the comment before seeing your change', 'comment_created': datetime.datetime(2020, 8, 5, 3, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 465457852, 'comment_body': ""Sorry I didn't know if userextension is synonymous to user_additional_info. If it is then this also seems fine üëç "", 'comment_created': datetime.datetime(2020, 8, 5, 3, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}]","[{'commit_sha': '98dced808090c8075733e89023e5e2d20dd3af64', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
457602111,Feat: Update additional info functionality,"### Description
Allow useer to update theeir additional information

Fixes #48 

### Type of Change:
- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- Create 2 users on backend Swagger UI, one with additional information and the other without
- Login as user that has no additional information in the database
- Go to `My Space` > `Personal Details` > `Additional Info`
- see message as below:
<img width=""521"" alt=""Screen Shot 2020-08-03 at 8 05 26 pm"" src=""https://user-images.githubusercontent.com/29667122/89172212-9ac38580-d5c5-11ea-9111-c6cd2afd8ed2.png"">

- Create additional information
- On successful create, see message
<img width=""507"" alt=""Screen Shot 2020-08-03 at 8 05 57 pm"" src=""https://user-images.githubusercontent.com/29667122/89172270-b333a000-d5c5-11ea-8601-ec0963b4239a.png"">

Notice how Timezone is skipped by user (which could happen either accidentally or on purpose if user prefer not to disclose their timezone). If this happens, the system will automatically use the default value of GMT+00 as user timezone. To test this, click away to different page and come back to `My Spacee` > `Additional Info` and see GMT being the value displayed from GET /user/additional_info request.
<img width=""479"" alt=""Screen Shot 2020-08-03 at 8 06 08 pm"" src=""https://user-images.githubusercontent.com/29667122/89172689-5e445980-d5c6-11ea-97d1-0f2b1098ad7d.png"">


- to test Update, now edit the additional information. On successful update, see message below
<img width=""524"" alt=""Screen Shot 2020-08-03 at 8 06 18 pm"" src=""https://user-images.githubusercontent.com/29667122/89172769-8633bd00-d5c6-11ea-8655-3e84fbb4ac9e.png"">

- to check if the data is updated, again, click away to different page and come back to `My Space` > `Additional Info` and see the updated data (in this example, the timezone field)
<img width=""492"" alt=""Screen Shot 2020-08-03 at 8 06 33 pm"" src=""https://user-images.githubusercontent.com/29667122/89172939-cabf5880-d5c6-11ea-97fa-ca09a158c439.png"">



### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] My PR currently breaks something (fix or feature that would cause existing functionality to not work as expected)
- [ ] New and existing unit tests pass locally with my changes",True,57,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/57,https://github.com/anitab-org/bridge-in-tech-web/pull/57,closed,78,110,3,1,7,2,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-07-28 07:09:22+00:00,2020-08-10 17:10:08+00:00,1159246.0,"13 days, 10:00:46","[{'comment_id': 464083406, 'comment_body': ""shouldn't it be update all the time? \r\nwhy does it try to create and then if conflict update? If it's on this page, it should always try to update correct?"", 'comment_created': datetime.datetime(2020, 8, 2, 14, 17, 52, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 464085016, 'comment_body': ""@meenakshi-dhanani . Because when user retrieve the page for the first time, the additional info would have not yet been created. The first response that user will see is `No additional information found with your data. Please provide them now`. Then users will need to fill their additional info. The first time they click `Save` button, this will send POST /user/additional_info request to backend. With this request, the data will be created.\r\nBut since we don't know which login user will already have created the additional information or not, every time user go to this page and fill in the information,  on the `Save` button click the system would by default try to send POST request, which will return error message 409 Conflict, then will automatically send PUT request to continue with update information. Does this make sense?\r\n\r\nRemember that we only have this one form/page to do both create (POST) and update (PUT) additional information. This POST and PUT will be similar later to Personal background. The Personal Details page Is the only one that is different since there is no POST /user/personal_details endpoint since the data for this is created through POST /register "", 'comment_created': datetime.datetime(2020, 8, 2, 14, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '7c8744283272f33e44bfc8e0e5f2b5b79649cf0f', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
465785423,Feat: PUT and GET organization and tests,"### Description
Create PUT and GET /organization API endpoints

Fixes #105 

### Type of Change:
- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
* Run and test the application manually:
- Login as user who already has additional_info in the database and `is_organization_rep` is True
- try to send PUT /organization request before setting Cookie `user_id` through GET /organization. see error 403 Forbidden and error message
<img width=""1397"" alt=""Screen Shot 2020-08-11 at 9 02 35 pm"" src=""https://user-images.githubusercontent.com/29667122/89976213-2666a180-dcab-11ea-99e7-0718c46b1b79.png"">

- send GET /organization request. Since this user has not created an organization, see error 404 Not Found and message `Organization does not exist`.
<img width=""843"" alt=""Screen Shot 2020-08-11 at 1 08 11 am"" src=""https://user-images.githubusercontent.com/29667122/89976026-b22bfe00-dcaa-11ea-8056-cc079bf5ca36.png"">

- now create organization by sending PUT /organization request with correct payload. see code 201 Created and success message
<img width=""1402"" alt=""Screen Shot 2020-08-11 at 9 30 29 pm"" src=""https://user-images.githubusercontent.com/29667122/89976257-46966080-dcab-11ea-95fc-6fc4bd4da686.png"">

- now try to update the organization by changing some details. On correct update, see code 200 and success message
<img width=""1407"" alt=""Screen Shot 2020-08-11 at 9 34 01 pm"" src=""https://user-images.githubusercontent.com/29667122/89976310-70e81e00-dcab-11ea-91b1-41ed528db0c2.png"">

- logout and login as a user that either has additional_info `is_organization_rep` is `False` or has not created an additional_info. 
- send GET /organization request. see error 403 Forbidden and error message user has not declared `is_organization_rep` value
<img width=""1393"" alt=""Screen Shot 2020-08-11 at 1 16 48 am"" src=""https://user-images.githubusercontent.com/29667122/89976496-e6ec8500-dcab-11ea-9677-f1262b11d97b.png"">

- an example of successful GET /organization request will be as below
<img width=""1407"" alt=""Screen Shot 2020-08-12 at 11 38 28 pm"" src=""https://user-images.githubusercontent.com/29667122/90021988-491da800-dcf5-11ea-82d8-11528ba8b581.png"">

* Run unittests and ensure all tests passed


### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials
- [ ] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] Any dependent changes have been merged


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] My PR currently breaks something (fix or feature that would cause existing functionality to not work as expected)
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes

**Additional Info**
This is still a work in progress",True,103,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/103,https://github.com/anitab-org/bridge-in-tech-backend/pull/103,closed,933,335,26,1,30,17,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-08-10 23:44:17+00:00,2020-08-15 23:21:04+00:00,430607.0,"4 days, 23:36:47","[{'comment_id': 469008264, 'comment_body': ""Maya it's a good thing to not use abbreviations. It gets really difficult when you're code is worked on by more people. Try not using abbreviations anywhere, could be `representative_id`. "", 'comment_created': datetime.datetime(2020, 8, 12, 5, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 469009509, 'comment_body': 'what does it mean? IS_ORGANIZATION_REP_NOT_DECLARED? can we name this better?', 'comment_created': datetime.datetime(2020, 8, 12, 5, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 469010114, 'comment_body': ""https://www.codingblocks.net/podcast/clean-code-writing-meaningful-names/ - whenever you're free, Uncle Bob's clean code posts/podcasts are available. They should explain how important it is to have meaningful names"", 'comment_created': datetime.datetime(2020, 8, 12, 5, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 469027823, 'comment_body': 'ok, will change it.', 'comment_created': datetime.datetime(2020, 8, 12, 6, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 469028826, 'comment_body': ""> what does it mean? IS_ORGANIZATION_REP_NOT_DECLARED? can we name this better?\r\n\r\nThis means the user either has not declared whether or not they are an organization representative or has not yet created an additional_info and declare they are a representative. Tbh I can't think of any other name that is more suitable to be the title for this message. Do you have a suggestion @meenakshi-dhanani ?"", 'comment_created': datetime.datetime(2020, 8, 12, 6, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 469066791, 'comment_body': 'Can this be EAFP/try-catch based? Makes more sense to me intuitively', 'comment_created': datetime.datetime(2020, 8, 12, 7, 41, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 469067356, 'comment_body': '+1 for try-except', 'comment_created': datetime.datetime(2020, 8, 12, 7, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 469071179, 'comment_body': 'ok, will try and change it now.', 'comment_created': datetime.datetime(2020, 8, 12, 7, 49, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 469153096, 'comment_body': ""@ramitsawhney27 , I'm not sure how to use EAFP to check if the value of is_organization_rep is true, which is my intention here. Can you please advise? "", 'comment_created': datetime.datetime(2020, 8, 12, 10, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 469155324, 'comment_body': ""I meant for line 30-44. We can do:\r\n\r\ntry: \r\n    return {}\r\nexcept ...:\r\n    return messages. OR...\r\n\r\nNot a compulsory thing, if you're unclear or disagree, we can skip this for now"", 'comment_created': datetime.datetime(2020, 8, 12, 10, 15, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 469159504, 'comment_body': ""I see. Done. I've changed it to EAFP now üòÅ"", 'comment_created': datetime.datetime(2020, 8, 12, 10, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 469705670, 'comment_body': 'this rep_id -> representative_id?', 'comment_created': datetime.datetime(2020, 8, 13, 5, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 469706525, 'comment_body': 'NO_REPRESENTATIVE_FOR_ORGANIZATION?', 'comment_created': datetime.datetime(2020, 8, 13, 5, 34, 10, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 469711565, 'comment_body': ""I think remove the You can do this. It's really upto change, if we change any structure on the UI, we'll always have to remember to change this text. \r\nToo tightly coupled"", 'comment_created': datetime.datetime(2020, 8, 13, 5, 50, 34, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 469711956, 'comment_body': ""don't use rep please. Remove all reps, make them representative or whatever the full form is. Somebody besides you is going to have a real hard time figuring what rep is"", 'comment_created': datetime.datetime(2020, 8, 13, 5, 51, 43, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 469716991, 'comment_body': 'Ok, will change it.', 'comment_created': datetime.datetime(2020, 8, 13, 6, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 469723204, 'comment_body': 'this one is unavoidable (as per the other remaining rep_.. that is part of database attribute). I have changed the models and other that not related to the database. If you still insist on the rep_ to be changed on the database model, I need to redo not only the Organization and Program models, but also recreate tables on the database. The samee need to be done with the remote database on Heroku. \r\nSo, do we wanna go that far with the remaining of GSoC (restructuring the database)? Or can we put this in icebox to be pick up after GSoC. \r\nPS: Before answering this, keep in mind I still have lots of deliverables untouched such as the Program, Applying to programs, Mentorship relation, static pages for Homepage (About, Benefit, Contact), Portfolios (User, Organization and Program) and My Spcace Request History.', 'comment_created': datetime.datetime(2020, 8, 13, 6, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '2dc61666b959aec49cfb97fe2853984dc5e63455', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
468601657,Feat: View/Create and Update Organization Profile,"### Description
Added View Organization Profile Functionality

Fixes #50, #51 

### Type of Change:
- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- login as user who has an additional info with is_organization_rep value True but has not created an organization. 

* on View organization profile
- go to MyOrganization > Profile. On successful GET /organization see response below
<img width=""950"" alt=""Screen Shot 2020-08-17 at 3 29 57 pm"" src=""https://user-images.githubusercontent.com/29667122/90361336-47f7cc80-e0a1-11ea-8c71-61874744ff11.png"">

* On Create organization profile
- Add details for the organization and click `Save`. On successful create, see response below.
<img width=""968"" alt=""Screen Shot 2020-08-17 at 3 41 03 pm"" src=""https://user-images.githubusercontent.com/29667122/90361479-ac1a9080-e0a1-11ea-9add-3c8904bc5f6f.png"">

To check if the data is saved to database, move away from the MyOrganization Profile page (click on any other page) and comeback. See response below:
<img width=""946"" alt=""Screen Shot 2020-08-17 at 3 41 19 pm"" src=""https://user-images.githubusercontent.com/29667122/90361594-f69c0d00-e0a1-11ea-84ad-342a0e40a8a5.png"">
 
* On Update organization profile:
- change the details on the organization page and click `Save`. On successful update, see response below:
<img width=""965"" alt=""Screen Shot 2020-08-17 at 3 41 34 pm"" src=""https://user-images.githubusercontent.com/29667122/90361671-2519e800-e0a2-11ea-8f6a-e1d98644e7a5.png"">

to check if the data is updated, move away from thee MyOrganization Profile page (click on any other page) and comeback. See response below:
<img width=""933"" alt=""Screen Shot 2020-08-17 at 3 41 48 pm"" src=""https://user-images.githubusercontent.com/29667122/90361729-4a0e5b00-e0a2-11ea-8523-b12fc3e4bf51.png"">


### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials
- [ ] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes
- [ ] Any dependent changes have been published in downstream modules

**Additional note**:
This PR is to be tested with the Backend server from PR#112 only since it contains the refactored login with successful response returning `is_organization_representative` value. ",True,69,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/69,https://github.com/anitab-org/bridge-in-tech-web/pull/69,closed,416,18,10,1,19,2,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-08-17 05:57:47+00:00,2020-08-25 14:54:27+00:00,723400.0,"8 days, 8:56:40","[{'comment_id': 475172149, 'comment_body': 'this line should not be there', 'comment_created': datetime.datetime(2020, 8, 23, 5, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 475172565, 'comment_body': ""Done. It's now removed"", 'comment_created': datetime.datetime(2020, 8, 23, 5, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': 'b7d74caabfa8cfebd64b63639c199efc2a034bfa', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
467080100,Feat: GET organizations list,"### Description
Created GET /organizations API endpoint

Fixes #106 

### Type of Change:
- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
**On successful GET see code 200 OK**
- login and send GET /organizations request. On successful, see below
<img width=""1424"" alt=""Screen Shot 2020-08-13 at 10 42 44 am"" src=""https://user-images.githubusercontent.com/29667122/90081820-be1ecb00-dd51-11ea-952c-960845481b39.png"">

**Error handlings**
- If there is no organization in the record, return code 404 Not found
<img width=""1415"" alt=""Screen Shot 2020-08-13 at 11 34 20 am"" src=""https://user-images.githubusercontent.com/29667122/90084647-448adb00-dd59-11ea-9e33-22e1eed6c626.png"">


### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials
- [ ] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] Any dependent changes have been merged

**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes

**Additional Note**
This is still a WIP.",True,107,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/107,https://github.com/anitab-org/bridge-in-tech-backend/pull/107,closed,460,32,9,1,14,16,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-08-13 00:46:54+00:00,2020-08-18 13:42:58+00:00,478564.0,"5 days, 12:56:04","[{'comment_id': 471139294, 'comment_body': 'rename this to organization_name', 'comment_created': datetime.datetime(2020, 8, 16, 17, 45, 43, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 471139313, 'comment_body': 'rename this to organization_name', 'comment_created': datetime.datetime(2020, 8, 16, 17, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 471173267, 'comment_body': ""I must've missed that. Done. It's now renamed to search_name"", 'comment_created': datetime.datetime(2020, 8, 16, 23, 32, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 471173276, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 16, 23, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 471242652, 'comment_body': 'rename search_name to organization_name', 'comment_created': datetime.datetime(2020, 8, 17, 5, 43, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 471242701, 'comment_body': 'rename search_name to organization name', 'comment_created': datetime.datetime(2020, 8, 17, 5, 43, 15, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 471252310, 'comment_body': 'I have different opinion with you on this, @meenakshi-dhanani .I don\'t think it\'s right to call it organization name since it is not the organization `name` attribute, but a search query containing the `organization name`. The same manner is used on the Mentorship System search query field for list of users GET /users (although in MS it doesn\'t specify that it only search based on user name)\r\n<img width=""822"" alt=""Screen Shot 2020-08-17 at 4 15 13 pm"" src=""https://user-images.githubusercontent.com/29667122/90362882-efc2c980-e0a4-11ea-9eb6-305897d2199a.png"">\r\n', 'comment_created': datetime.datetime(2020, 8, 17, 6, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 471252400, 'comment_body': '@meenakshi-dhanani , please see my comment above', 'comment_created': datetime.datetime(2020, 8, 17, 6, 16, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 471255974, 'comment_body': 'for example, the search_name query can contain only partial name of the organization name. In the example below I search for any organization that has `Co` in their name. \r\n<img width=""877"" alt=""Screen Shot 2020-08-17 at 4 25 33 pm"" src=""https://user-images.githubusercontent.com/29667122/90363708-7deb7f80-e0a6-11ea-8ef5-d1e7c844d840.png"">\r\n\r\nFrom this query I got the response below:\r\n\r\n<img width=""1558"" alt=""Screen Shot 2020-08-17 at 4 25 16 pm"" src=""https://user-images.githubusercontent.com/29667122/90363728-8cd23200-e0a6-11ea-8fde-0c23034f9506.png"">\r\n', 'comment_created': datetime.datetime(2020, 8, 17, 6, 27, 42, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 471270657, 'comment_body': ""Ok, I've changed the search_name to just name now, @meenakshi-dhanani . Let me know if there's anything else need modification"", 'comment_created': datetime.datetime(2020, 8, 17, 7, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 471282051, 'comment_body': 'Thank you for clarifying. This helps. So usually in a lot of APIs that I\'ve built and seen, if it\'s a /GET /organizations?name=ABC, I would expect a full text match, ie. if you search for ABC, you get ABC, if you search for AB you get no result. \r\nFor search, we usually do a separate API eg. /organizations/search?name=AB would return ABC for a search term as ""AB"". \r\n\r\nwhy search would be a separate API, is because searches are very complex, because it usually is a lot of search terms, filters, improvements, etc. \r\n\r\nCan I ask how are we going to be using this endpoint in the UI? It would help understand what we need right now', 'comment_created': datetime.datetime(2020, 8, 17, 7, 10, 7, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 471285156, 'comment_body': ""I'm thinking of having a filter on the organisations list table (as future feature, not now) where user can type in the query in a search field that will change the content of the table rows."", 'comment_created': datetime.datetime(2020, 8, 17, 7, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 471287494, 'comment_body': ""But I've already changed and pushed to the repo with search_name replaced with name as you suggested. I think we'll keep it like that for now."", 'comment_created': datetime.datetime(2020, 8, 17, 7, 19, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 471325340, 'comment_body': ""That's ok. I've just refactored the organization response model and pushed the changes. I've changed the `name` back to `search_name` on the query. I haven't applied the changes to the tests which is why travis build fails."", 'comment_created': datetime.datetime(2020, 8, 17, 8, 33, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 471335470, 'comment_body': 'It still shows as search_name instead of name. I confirmed this with my colleagues and asked them, they had the following views\r\n\r\n/organizations/{name} - path variable eg. /organizations/ABC = returns ABC\r\n/organizations?name=""AB"" returns ABC \r\n\r\nI think it makes sense too. No need to put search in there. To differentiate full match we could always use path variables. \r\n\r\nAnd when we have more search terms we could think of a separate API too', 'comment_created': datetime.datetime(2020, 8, 17, 8, 52, 15, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 471344846, 'comment_body': 'Done, changed it again to name only.', 'comment_created': datetime.datetime(2020, 8, 17, 9, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': 'e29a2068c62fd7860c1a4e523766ce5f7227d649', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
468856163,Feat view organizations list and other organization profile,"### Description
Added View Organizations list and Other Organization Profile functionalities

Fixes #52 

### Type of Change:
- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
- Login and go to Organizations page. see list of organizations
<img width=""1653"" alt=""Screen Shot 2020-08-18 at 12 07 10 am"" src=""https://user-images.githubusercontent.com/29667122/90405244-d80c3500-e0e6-11ea-9a13-c9f3a4460bd7.png"">
- Click on an organization from the list and see that Organization Profile page
<img width=""1605"" alt=""Screen Shot 2020-08-18 at 9 46 56 am"" src=""https://user-images.githubusercontent.com/29667122/90455424-5e516700-e139-11ea-8eb4-e09bd5e572e8.png"">
**Note**
Notice the different Navbar options when you login as user who's representing organization or not.

As a represenative of an organization, you'll see the Navbar below:
<img width=""1668"" alt=""Screen Shot 2020-08-18 at 10 01 46 am"" src=""https://user-images.githubusercontent.com/29667122/90455629-e5064400-e139-11ea-9c1c-8f286784f296.png"">

Whereas if you don't represent an organization, you'll see the below Navbar:
<img width=""1669"" alt=""Screen Shot 2020-08-18 at 10 01 26 am"" src=""https://user-images.githubusercontent.com/29667122/90455669-ff402200-e139-11ea-9800-e4c8fcdef9be.png"">




### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials


**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] My PR currently breaks something (fix or feature that would cause existing functionality to not work as expected)
- [ ] New and existing unit tests pass locally with my changes

**Additional Note**
To test this features, you should only use the BIT backend server from branch [PR#112](https://github.com/anitab-org/bridge-in-tech-backend/pull/112) as well as MS backend server for BIT ([ms-backend-server](https://github.com/mtreacy002/mentorship-backend/tree/ms-backend-server)) ",True,70,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/70,https://github.com/anitab-org/bridge-in-tech-web/pull/70,closed,233,43,8,1,18,2,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-08-17 14:08:24+00:00,2020-08-27 15:31:09+00:00,868965.0,"10 days, 1:22:45","[{'comment_id': 471557967, 'comment_body': ""this needs to be /organization. that's what is mentioned in the Routes. I tried removing the s, I can see the detail view"", 'comment_created': datetime.datetime(2020, 8, 17, 15, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 471830100, 'comment_body': 'I see. Thanks for pointing that out, @meenakshi-dhanani . üëç', 'comment_created': datetime.datetime(2020, 8, 17, 23, 32, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': '1b98ea118b33c4e5ed0d6e3c791c40589e150c25', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
470088902,Feat: POST/GET/PUT program and list of programs,"### Description
Added create, gt and update programs using the following endpoints:
1. POST /organizations/{organization_id}/programs/program
   * to create program on the ogranization where the logged-in user is the representative. If they are not the representative, this action is not permitted.
2. GET /organizations/{organization_id}/programs
   * to get list of programs under the organization specified in the parameter organization_id. 
      The purpose of this endpoint is so on the frontend, when user go to `Organizations` > 'Organization-Portfolo`, they can see the list of programs that organization have. Any user can retrieve this list.
3. GET /organizations/{organization_id}/programs/{program_id}
  * to get the detail of a specific program that a specific organization has.
    The purpose of this endpoint is so that logged-in user can view the details on a specific program after selecting it from the list of programs from API endpoint number 2 above.
4. PUT /organizations/{organization_id}/programs/{program_id}
   * to update the detail of a specific program that matches the parameters organization_id and program_id.

Fixes #113 

### Type of Change:
- Code

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?

**Note: The screenshots below are selected from random data**
- logged in as a user who represents an organization
- test create PUT /organizations/{organization_id}/programs/{program_id} using POST /organizations/{organization_id}/programs/program endpoint. Upon succesful process, see code 201 and message below
<img width=""1680"" alt=""Screen Shot 2020-08-19 at 8 40 06 pm"" src=""https://user-images.githubusercontent.com/29667122/90626462-57704480-e25e-11ea-8a8d-438fb24c2a1e.png"">

- test GET /organizations/{organization_id}/programs. on successful response see below:
<img width=""1680"" alt=""Screen Shot 2020-08-19 at 8 44 29 pm"" src=""https://user-images.githubusercontent.com/29667122/90626606-8ab2d380-e25e-11ea-99cf-9d13a6f57e7a.png"">

- test update by sending the PUT /organizations/{organization_id}/programs/{program_id} with the correct organization_id and program_id . Upon successful update, get message
<img width=""1680"" alt=""Screen Shot 2020-08-19 at 6 37 00 pm"" src=""https://user-images.githubusercontent.com/29667122/90626368-36a7ef00-e25e-11ea-8102-da4da6eac2fc.png"">

### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials
- [ ] I have commented my code or provided relevant documentation, particularly in hard-to-understand areas

**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes
",True,114,https://api.github.com/repos/anitab-org/bridge-in-tech-backend/pulls/114,https://github.com/anitab-org/bridge-in-tech-backend/pull/114,closed,738,74,14,2,4,8,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-08-19 10:59:58+00:00,2020-08-23 07:57:30+00:00,334652.0,"3 days, 20:57:32","[{'comment_id': 473259748, 'comment_body': 'Why not declare list of programs after ‚Äúif not programs:‚Äù \r\nAlso, lines 69-70 can just be a list comprehension', 'comment_created': datetime.datetime(2020, 8, 19, 19, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 473260417, 'comment_body': 'I think some info should be given if it is a bad request, such as which field(s) is malformed', 'comment_created': datetime.datetime(2020, 8, 19, 19, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 473261144, 'comment_body': 'Why is e being returned? Can you add a comment to the code to explain this to future readers?', 'comment_created': datetime.datetime(2020, 8, 19, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 473398501, 'comment_body': 'Got it. Changed now', 'comment_created': datetime.datetime(2020, 8, 19, 22, 42, 53, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 473405994, 'comment_body': '@ramitsawhney27 , I do it this way coz for the fields that required specific format, the validation already done specific to each fields in the preceding code (inside app/api/resources/organizations.py) line 105\r\n<img width=""919"" alt=""Screen Shot 2020-08-20 at 8 46 41 am"" src=""https://user-images.githubusercontent.com/29667122/90697549-fc703900-e2c1-11ea-93c7-3bae87aad723.png"">\r\n\r\nas for the TypeError `e` done here, will specify which fields other than those catch in the above that is malformed. Let me know if you have another alternative. Thanks', 'comment_created': datetime.datetime(2020, 8, 19, 22, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 473441722, 'comment_body': 'Done. Refactored email, phone and mobile to LBYL instead of EAFP as the LBYL makes more sense in this situation and use less lines of codes', 'comment_created': datetime.datetime(2020, 8, 19, 23, 43, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}, {'comment_id': 473516859, 'comment_body': 'Lines 68-70 (even 71) can be condensed into 1 line using list comprehension. Could you please do that?', 'comment_created': datetime.datetime(2020, 8, 20, 1, 37, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ramitsawhney27', 'type': 'User'}, {'comment_id': 473537032, 'comment_body': 'Done, @ramitsawhney27 . It surely looks better now. Thanks heaps for the tips. üòâ', 'comment_created': datetime.datetime(2020, 8, 20, 2, 9, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mtreacy002', 'type': 'User'}]","[{'commit_sha': 'ea223ba93bcdb47ca13c98449bc1c5b705285be7', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '561b72833d29aa17b5afbef2d3e72ac88062d393', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
471319042,Feat view user programs list and program,"### Description
Create View programs list and program profile functionalities

Fixes #75 

### Type of Change:
- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)


### How Has This Been Tested?
WIP
- login as a user who has an organization that already has a program (you can create this using BIT backend on Swagger UI as the frontend Create/Update program have not yet completed at this stage)
- go to `My Space` > `My Organization` to view the organization profile
- go to the bottom of the organization profile and click the `Go to Portfolio` button. See the programs list
<img width=""1642"" alt=""Screen Shot 2020-08-24 at 1 22 47 am"" src=""https://user-images.githubusercontent.com/29667122/90982728-6895ba00-e5ac-11ea-8110-32484feaf714.png"">

- select a program from the list and seee the program profile page
<img width=""1610"" alt=""Screen Shot 2020-08-24 at 1 23 12 am"" src=""https://user-images.githubusercontent.com/29667122/90982744-91b64a80-e5ac-11ea-8f77-a1876f80294c.png"">


### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials

**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] My PR currently breaks something (fix or feature that would cause existing functionality to not work as expected)
- [ ] New and existing unit tests pass locally with my changes


**IMPORTANT** 
To test this PR, you need to run the bit backend server from the branch on [PR#116](https://github.com/anitab-org/bridge-in-tech-backend/pull/116) **ONLY** as this PR has pages with date and timezone fields that are already link to the refactored date fields on backend. (PS: don't forget, although not mentioned, you are **ALWAYS** expected to also run MS backend server using **ONLY** [ms-backend-server](https://github.com/mtreacy002/mentorship-backend/tree/ms-backend-server) with any of BIT Frontend PRs)",False,76,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/76,https://github.com/anitab-org/bridge-in-tech-web/pull/76,closed,1874,100,19,1,21,4,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-08-21 01:15:00+00:00,2020-08-28 10:13:50+00:00,637130.0,"7 days, 8:58:50","[{'comment_id': 475211681, 'comment_body': 'This line should not be here', 'comment_created': datetime.datetime(2020, 8, 23, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 475211706, 'comment_body': 'this should also not be here', 'comment_created': datetime.datetime(2020, 8, 23, 12, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 475211735, 'comment_body': ""I feel like the AuthContext changes from the previous commit aren't reflecting"", 'comment_created': datetime.datetime(2020, 8, 23, 12, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}, {'comment_id': 475211771, 'comment_body': 'I removed these two lines in the previous commit. Have we rebased?', 'comment_created': datetime.datetime(2020, 8, 23, 12, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'meenakshi-dhanani', 'type': 'User'}]","[{'commit_sha': 'e66c2012dbb6f71415139f5d99558bc7b7dcd261', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28
472328103,Feat: Create and Update program page,"### Description
Add create and update Program page functionalities

Fixes #53, #78

### Type of Change:
- Code
- User Interface

**Code/Quality Assurance Only**
- New feature (non-breaking change which adds functionality pre-approved by mentors)

### How Has This Been Tested?
* to Create a program:
- login as a user that has is a representative of an organization and has created an organization
- go to `My Space` > `My Organization` > on the bottom left of the page, click `Go to Programs` > click on `Add Program` button
- fill the details on the Program Profile form page
- click submit
- on successful process, see response below

<img width=""815"" alt=""Screen Shot 2020-08-25 at 12 48 39 pm"" src=""https://user-images.githubusercontent.com/29667122/91117676-89582f80-e6d2-11ea-859d-df70d4cd1115.png"">

* to Update a program: (WIP)
- Now view the program you've just created to make sure it's listed in the programs list (here my new program is Program B)
<img width=""974"" alt=""Screen Shot 2020-08-25 at 1 01 33 pm"" src=""https://user-images.githubusercontent.com/29667122/91125902-2c667480-e6e6-11ea-84c7-4e0d2a2e908d.png"">

- I then updated the program start and date date. On sucessful process, see message below
<img width=""986"" alt=""Screen Shot 2020-08-25 at 1 03 31 pm"" src=""https://user-images.githubusercontent.com/29667122/91126035-6df71f80-e6e6-11ea-8679-b68f2016286b.png"">

- here's the list after the program was updated
<img width=""932"" alt=""Screen Shot 2020-08-25 at 1 05 26 pm"" src=""https://user-images.githubusercontent.com/29667122/91126103-8ff0a200-e6e6-11ea-8fa8-e49be22fb931.png"">



### Checklist:
- [ ] My PR follows the style guidelines of this project
- [ ] I have performed a self-review of my own code or materials

**Code/Quality Assurance Only**
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing unit tests pass locally with my changes
",True,79,https://api.github.com/repos/anitab-org/bridge-in-tech-web/pulls/79,https://github.com/anitab-org/bridge-in-tech-web/pull/79,closed,1967,103,19,2,13,0,2,1,"[{'name': 'Category: Coding'}, {'name': 'Program: GSOC'}]",2020-08-24 07:34:39+00:00,2020-08-28 10:03:16+00:00,354517.0,"4 days, 2:28:37",[],"[{'commit_sha': 'e66c2012dbb6f71415139f5d99558bc7b7dcd261', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24c976f9d334242d8374dc8cbc3f2935c8a697f5', 'committer_username': 'mtreacy002', 'committer_name': 'Maya Treacy', 'committer_email': 'mtreacy002@gmail.com', 'commit_date': datetime.datetime(2017, 6, 23, 22, 21, 2, tzinfo=datetime.timezone.utc)}]",Maya Treacy,29667122,mtreacy002@gmail.com,User,,16,,0,28

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
259552587,bridge-in-tech-backend,anitab-org/bridge-in-tech-backend,Python,80,24,5,35,88,57,27,25,"[{'id': 678332966, 'number': 293, 'closed': datetime.datetime(2021, 7, 6, 0, 1, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 26, 12, 57, 36, tzinfo=datetime.timezone.utc), 'time_taken': 817450.0, 'time_delta': '9 days, 11:04:10', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 602160624, 'number': 231, 'closed': datetime.datetime(2021, 3, 28, 1, 7, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 28, 0, 18, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2982.0, 'time_delta': '0:49:42', 'additions': 31, 'deletions': 8, 'state': 'closed'}, {'id': 576152885, 'number': 197, 'closed': datetime.datetime(2021, 3, 12, 22, 47, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 19, 3, 51, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1882546.0, 'time_delta': '21 days, 18:55:46', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 509588081, 'number': 172, 'closed': datetime.datetime(2021, 2, 19, 3, 36, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 25, 12, 53, 2, tzinfo=datetime.timezone.utc), 'time_taken': 10075407.0, 'time_delta': '116 days, 14:43:27', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 497187828, 'number': 167, 'closed': datetime.datetime(2020, 10, 24, 23, 18, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 3, 0, 40, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1895878.0, 'time_delta': '21 days, 22:37:58', 'additions': 127, 'deletions': 132, 'state': 'closed'}, {'id': 493692263, 'number': 156, 'closed': datetime.datetime(2020, 9, 27, 13, 2, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 27, 8, 53, tzinfo=datetime.timezone.utc), 'time_taken': 14987.0, 'time_delta': '4:09:47', 'additions': 33, 'deletions': 5, 'state': 'closed'}, {'id': 484704657, 'number': 134, 'closed': datetime.datetime(2020, 9, 23, 23, 12, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 11, 6, 36, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1096580.0, 'time_delta': '12 days, 16:36:20', 'additions': 0, 'deletions': 5, 'state': 'closed'}, {'id': 479137883, 'number': 130, 'closed': datetime.datetime(2020, 9, 20, 12, 44, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 4, 0, 41, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1425779.0, 'time_delta': '16 days, 12:02:59', 'additions': 244, 'deletions': 0, 'state': 'closed'}, {'id': 476185292, 'number': 129, 'closed': datetime.datetime(2020, 11, 19, 1, 27, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 9, 45, 28, tzinfo=datetime.timezone.utc), 'time_taken': 6882138.0, 'time_delta': '79 days, 15:42:18', 'additions': 310, 'deletions': 34, 'state': 'closed'}, {'id': 475879386, 'number': 125, 'closed': datetime.datetime(2020, 9, 19, 6, 37, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 30, 8, 8, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1722536.0, 'time_delta': '19 days, 22:28:56', 'additions': 4, 'deletions': 6, 'state': 'closed'}, {'id': 475869197, 'number': 123, 'closed': datetime.datetime(2020, 8, 30, 13, 57, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 30, 6, 8, 35, tzinfo=datetime.timezone.utc), 'time_taken': 28117.0, 'time_delta': '7:48:37', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 475229121, 'number': 121, 'closed': datetime.datetime(2020, 8, 28, 11, 30, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 28, 7, 14, 7, tzinfo=datetime.timezone.utc), 'time_taken': 15363.0, 'time_delta': '4:16:03', 'additions': 13, 'deletions': 5, 'state': 'closed'}, {'id': 472865853, 'number': 119, 'closed': datetime.datetime(2020, 8, 25, 2, 47, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 25, 1, 14, 53, tzinfo=datetime.timezone.utc), 'time_taken': 5558.0, 'time_delta': '1:32:38', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 471021741, 'number': 116, 'closed': datetime.datetime(2020, 8, 24, 1, 36, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 16, 1, 10, tzinfo=datetime.timezone.utc), 'time_taken': 293744.0, 'time_delta': '3 days, 9:35:44', 'additions': 745, 'deletions': 91, 'state': 'closed'}, {'id': 470088902, 'number': 114, 'closed': datetime.datetime(2020, 8, 23, 7, 57, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 10, 59, 58, tzinfo=datetime.timezone.utc), 'time_taken': 334652.0, 'time_delta': '3 days, 20:57:32', 'additions': 738, 'deletions': 74, 'state': 'closed'}, {'id': 468552292, 'number': 112, 'closed': datetime.datetime(2020, 8, 22, 19, 8, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 3, 7, 37, tzinfo=datetime.timezone.utc), 'time_taken': 489680.0, 'time_delta': '5 days, 16:01:20', 'additions': 164, 'deletions': 18, 'state': 'closed'}, {'id': 467080100, 'number': 107, 'closed': datetime.datetime(2020, 8, 18, 13, 42, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 0, 46, 54, tzinfo=datetime.timezone.utc), 'time_taken': 478564.0, 'time_delta': '5 days, 12:56:04', 'additions': 460, 'deletions': 32, 'state': 'closed'}, {'id': 465785423, 'number': 103, 'closed': datetime.datetime(2020, 8, 15, 23, 21, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 23, 44, 17, tzinfo=datetime.timezone.utc), 'time_taken': 430607.0, 'time_delta': '4 days, 23:36:47', 'additions': 933, 'deletions': 335, 'state': 'closed'}, {'id': 462073213, 'number': 101, 'closed': datetime.datetime(2020, 8, 10, 23, 40, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 3, 9, 50, 50, tzinfo=datetime.timezone.utc), 'time_taken': 654570.0, 'time_delta': '7 days, 13:49:30', 'additions': 39, 'deletions': 308, 'state': 'closed'}, {'id': 457809957, 'number': 99, 'closed': datetime.datetime(2020, 8, 14, 11, 29, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 13, 29, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1461598.0, 'time_delta': '16 days, 21:59:58', 'additions': 405, 'deletions': 7, 'state': 'closed'}, {'id': 456258514, 'number': 96, 'closed': datetime.datetime(2020, 8, 14, 11, 41, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 24, 12, 26, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1811729.0, 'time_delta': '20 days, 23:15:29', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 452252730, 'number': 93, 'closed': datetime.datetime(2020, 7, 23, 19, 18, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 19, 1, 27, 25, tzinfo=datetime.timezone.utc), 'time_taken': 409883.0, 'time_delta': '4 days, 17:51:23', 'additions': 81, 'deletions': 0, 'state': 'closed'}, {'id': 451967211, 'number': 91, 'closed': datetime.datetime(2020, 7, 22, 20, 49, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 14, 43, 29, tzinfo=datetime.timezone.utc), 'time_taken': 367573.0, 'time_delta': '4 days, 6:06:13', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 451952638, 'number': 89, 'closed': datetime.datetime(2020, 7, 25, 10, 42, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 14, 11, 45, tzinfo=datetime.timezone.utc), 'time_taken': 592235.0, 'time_delta': '6 days, 20:30:35', 'additions': 45, 'deletions': 29, 'state': 'closed'}, {'id': 450249168, 'number': 87, 'closed': datetime.datetime(2020, 8, 11, 11, 57, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 14, 39, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2236676.0, 'time_delta': '25 days, 21:17:56', 'additions': 733, 'deletions': 6, 'state': 'closed'}, {'id': 450147797, 'number': 85, 'closed': datetime.datetime(2020, 8, 11, 11, 46, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 12, 13, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2244784.0, 'time_delta': '25 days, 23:33:04', 'additions': 197, 'deletions': 5, 'state': 'closed'}, {'id': 449994052, 'number': 83, 'closed': datetime.datetime(2020, 8, 1, 11, 45, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 8, 11, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1395268.0, 'time_delta': '16 days, 3:34:28', 'additions': 303, 'deletions': 16, 'state': 'closed'}, {'id': 449494619, 'number': 81, 'closed': datetime.datetime(2020, 7, 31, 12, 8, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 13, 50, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1376244.0, 'time_delta': '15 days, 22:17:24', 'additions': 333, 'deletions': 23, 'state': 'closed'}, {'id': 448915551, 'number': 79, 'closed': datetime.datetime(2020, 7, 25, 16, 12, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 14, 14, 26, 11, tzinfo=datetime.timezone.utc), 'time_taken': 956784.0, 'time_delta': '11 days, 1:46:24', 'additions': 349, 'deletions': 158, 'state': 'closed'}, {'id': 448339630, 'number': 77, 'closed': datetime.datetime(2020, 7, 25, 10, 31, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 15, 46, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1017930.0, 'time_delta': '11 days, 18:45:30', 'additions': 442, 'deletions': 76, 'state': 'closed'}, {'id': 446639840, 'number': 74, 'closed': datetime.datetime(2020, 7, 14, 15, 35, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 9, 6, 8, 57, tzinfo=datetime.timezone.utc), 'time_taken': 465997.0, 'time_delta': '5 days, 9:26:37', 'additions': 369, 'deletions': 506, 'state': 'closed'}, {'id': 445524729, 'number': 71, 'closed': datetime.datetime(2020, 7, 9, 7, 37, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 7, 16, 32, 21, tzinfo=datetime.timezone.utc), 'time_taken': 140691.0, 'time_delta': '1 day, 15:04:51', 'additions': 298, 'deletions': 21, 'state': 'closed'}, {'id': 441006432, 'number': 69, 'closed': datetime.datetime(2020, 7, 3, 23, 39, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 28, 5, 51, 7, tzinfo=datetime.timezone.utc), 'time_taken': 496118.0, 'time_delta': '5 days, 17:48:38', 'additions': 26, 'deletions': 8, 'state': 'closed'}, {'id': 440503259, 'number': 67, 'closed': datetime.datetime(2020, 7, 6, 14, 49, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 26, 10, 19, 28, tzinfo=datetime.timezone.utc), 'time_taken': 880223.0, 'time_delta': '10 days, 4:30:23', 'additions': 120, 'deletions': 11, 'state': 'closed'}, {'id': 439948947, 'number': 65, 'closed': datetime.datetime(2020, 7, 5, 13, 50, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 11, 8, 31, tzinfo=datetime.timezone.utc), 'time_taken': 873713.0, 'time_delta': '10 days, 2:41:53', 'additions': 199, 'deletions': 155, 'state': 'closed'}, {'id': 437099919, 'number': 60, 'closed': datetime.datetime(2020, 7, 4, 10, 41, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 13, 23, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1286248.0, 'time_delta': '14 days, 21:17:28', 'additions': 108, 'deletions': 16, 'state': 'closed'}, {'id': 435132108, 'number': 59, 'closed': datetime.datetime(2020, 6, 27, 13, 37, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 10, 48, 33, tzinfo=datetime.timezone.utc), 'time_taken': 960508.0, 'time_delta': '11 days, 2:48:28', 'additions': 252, 'deletions': 78, 'state': 'closed'}, {'id': 434885769, 'number': 58, 'closed': datetime.datetime(2020, 6, 26, 16, 21, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 23, 49, 24, tzinfo=datetime.timezone.utc), 'time_taken': 923544.0, 'time_delta': '10 days, 16:32:24', 'additions': 101, 'deletions': 0, 'state': 'closed'}, {'id': 434128539, 'number': 52, 'closed': datetime.datetime(2020, 6, 15, 3, 57, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 14, 11, 6, 39, tzinfo=datetime.timezone.utc), 'time_taken': 60634.0, 'time_delta': '16:50:34', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 428321964, 'number': 46, 'closed': datetime.datetime(2020, 6, 6, 0, 23, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 5, 9, 3, 25, tzinfo=datetime.timezone.utc), 'time_taken': 55193.0, 'time_delta': '15:19:53', 'additions': 4094, 'deletions': 0, 'state': 'closed'}, {'id': 426260957, 'number': 26, 'closed': datetime.datetime(2020, 6, 9, 4, 45, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 23, 12, 35, tzinfo=datetime.timezone.utc), 'time_taken': 624772.0, 'time_delta': '7 days, 5:32:52', 'additions': 4177, 'deletions': 0, 'state': 'closed'}, {'id': 425481980, 'number': 25, 'closed': datetime.datetime(2020, 6, 4, 2, 17, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 30, 15, 14, 33, tzinfo=datetime.timezone.utc), 'time_taken': 385384.0, 'time_delta': '4 days, 11:03:04', 'additions': 3652, 'deletions': 0, 'state': 'closed'}]"
260311408,bridge-in-tech-web,anitab-org/bridge-in-tech-web,JavaScript,93,57,5,39,91,42,25,28,"[{'id': 685243234, 'number': 269, 'closed': datetime.datetime(2021, 9, 18, 13, 56, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 14, 21, 37, tzinfo=datetime.timezone.utc), 'time_taken': 6305674.0, 'time_delta': '72 days, 23:34:34', 'additions': 1761, 'deletions': 2200, 'state': 'closed'}, {'id': 684503124, 'number': 267, 'closed': None, 'created': datetime.datetime(2021, 7, 6, 16, 3, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 35, 'deletions': 22, 'state': 'open'}, {'id': 602171816, 'number': 206, 'closed': datetime.datetime(2021, 4, 2, 11, 31, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 28, 2, 22, 50, tzinfo=datetime.timezone.utc), 'time_taken': 464894.0, 'time_delta': '5 days, 9:08:14', 'additions': 31, 'deletions': 6, 'state': 'closed'}, {'id': 494478140, 'number': 114, 'closed': datetime.datetime(2020, 10, 12, 23, 32, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 29, 0, 56, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1204570.0, 'time_delta': '13 days, 22:36:10', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 475337835, 'number': 82, 'closed': datetime.datetime(2020, 8, 28, 15, 58, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 28, 10, 59, 38, tzinfo=datetime.timezone.utc), 'time_taken': 17955.0, 'time_delta': '4:59:15', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 472328103, 'number': 79, 'closed': datetime.datetime(2020, 8, 28, 10, 3, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 7, 34, 39, tzinfo=datetime.timezone.utc), 'time_taken': 354517.0, 'time_delta': '4 days, 2:28:37', 'additions': 1967, 'deletions': 103, 'state': 'closed'}, {'id': 471319042, 'number': 76, 'closed': datetime.datetime(2020, 8, 28, 10, 13, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 1, 15, tzinfo=datetime.timezone.utc), 'time_taken': 637130.0, 'time_delta': '7 days, 8:58:50', 'additions': 1874, 'deletions': 100, 'state': 'closed'}, {'id': 468856163, 'number': 70, 'closed': datetime.datetime(2020, 8, 27, 15, 31, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 14, 8, 24, tzinfo=datetime.timezone.utc), 'time_taken': 868965.0, 'time_delta': '10 days, 1:22:45', 'additions': 233, 'deletions': 43, 'state': 'closed'}, {'id': 468601657, 'number': 69, 'closed': datetime.datetime(2020, 8, 25, 14, 54, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 5, 57, 47, tzinfo=datetime.timezone.utc), 'time_taken': 723400.0, 'time_delta': '8 days, 8:56:40', 'additions': 416, 'deletions': 18, 'state': 'closed'}, {'id': 463718110, 'number': 62, 'closed': datetime.datetime(2020, 8, 11, 10, 54, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 0, 55, 11, tzinfo=datetime.timezone.utc), 'time_taken': 467942.0, 'time_delta': '5 days, 9:59:02', 'additions': 146, 'deletions': 3, 'state': 'closed'}, {'id': 461804077, 'number': 61, 'closed': datetime.datetime(2020, 8, 10, 17, 15, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 2, 13, 2, 14, tzinfo=datetime.timezone.utc), 'time_taken': 706420.0, 'time_delta': '8 days, 4:13:40', 'additions': 437, 'deletions': 272, 'state': 'closed'}, {'id': 459130447, 'number': 59, 'closed': datetime.datetime(2020, 8, 10, 17, 11, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 12, 27, 51, tzinfo=datetime.timezone.utc), 'time_taken': 967433.0, 'time_delta': '11 days, 4:43:53', 'additions': 155, 'deletions': 128, 'state': 'closed'}, {'id': 457602111, 'number': 57, 'closed': datetime.datetime(2020, 8, 10, 17, 10, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 7, 9, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1159246.0, 'time_delta': '13 days, 10:00:46', 'additions': 78, 'deletions': 110, 'state': 'closed'}, {'id': 456902081, 'number': 56, 'closed': datetime.datetime(2020, 8, 2, 13, 31, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 5, 13, 19, tzinfo=datetime.timezone.utc), 'time_taken': 548297.0, 'time_delta': '6 days, 8:18:17', 'additions': 194, 'deletions': 92, 'state': 'closed'}, {'id': 456822515, 'number': 54, 'closed': datetime.datetime(2020, 8, 1, 13, 54, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 26, 23, 40, 47, tzinfo=datetime.timezone.utc), 'time_taken': 483199.0, 'time_delta': '5 days, 14:13:19', 'additions': 147, 'deletions': 68, 'state': 'closed'}, {'id': 456615063, 'number': 46, 'closed': datetime.datetime(2020, 7, 25, 13, 26, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 13, 23, 47, tzinfo=datetime.timezone.utc), 'time_taken': 134.0, 'time_delta': '0:02:14', 'additions': 470, 'deletions': 48, 'state': 'closed'}, {'id': 455208084, 'number': 44, 'closed': datetime.datetime(2020, 7, 25, 2, 7, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 15, 55, 48, tzinfo=datetime.timezone.utc), 'time_taken': 209524.0, 'time_delta': '2 days, 10:12:04', 'additions': 470, 'deletions': 48, 'state': 'closed'}, {'id': 452293683, 'number': 43, 'closed': datetime.datetime(2020, 7, 25, 13, 26, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 19, 3, 6, 46, tzinfo=datetime.timezone.utc), 'time_taken': 555610.0, 'time_delta': '6 days, 10:20:10', 'additions': 80, 'deletions': 1, 'state': 'closed'}, {'id': 451571139, 'number': 41, 'closed': datetime.datetime(2020, 8, 11, 11, 21, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 0, 13, 43, tzinfo=datetime.timezone.utc), 'time_taken': 2113671.0, 'time_delta': '24 days, 11:07:51', 'additions': 86, 'deletions': 3, 'state': 'closed'}, {'id': 450810445, 'number': 40, 'closed': datetime.datetime(2020, 7, 25, 2, 32, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 5, 59, 48, tzinfo=datetime.timezone.utc), 'time_taken': 678768.0, 'time_delta': '7 days, 20:32:48', 'additions': 163, 'deletions': 33, 'state': 'closed'}, {'id': 447855540, 'number': 38, 'closed': datetime.datetime(2020, 7, 19, 11, 42, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 5, 56, 1, tzinfo=datetime.timezone.utc), 'time_taken': 625605.0, 'time_delta': '7 days, 5:46:45', 'additions': 341, 'deletions': 27, 'state': 'closed'}, {'id': 447834393, 'number': 37, 'closed': datetime.datetime(2020, 7, 14, 16, 30, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 0, 37, 59, tzinfo=datetime.timezone.utc), 'time_taken': 229938.0, 'time_delta': '2 days, 15:52:18', 'additions': 142, 'deletions': 53, 'state': 'closed'}, {'id': 442629557, 'number': 34, 'closed': datetime.datetime(2020, 7, 9, 19, 19, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 11, 15, 51, tzinfo=datetime.timezone.utc), 'time_taken': 720247.0, 'time_delta': '8 days, 8:04:07', 'additions': 218, 'deletions': 66, 'state': 'closed'}, {'id': 437378894, 'number': 26, 'closed': datetime.datetime(2020, 6, 27, 2, 27, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 7, 30, 29, tzinfo=datetime.timezone.utc), 'time_taken': 586639.0, 'time_delta': '6 days, 18:57:19', 'additions': 369, 'deletions': 177, 'state': 'closed'}, {'id': 437347443, 'number': 25, 'closed': datetime.datetime(2020, 6, 21, 13, 17, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 1, 34, 32, tzinfo=datetime.timezone.utc), 'time_taken': 128584.0, 'time_delta': '1 day, 11:43:04', 'additions': 543, 'deletions': 244, 'state': 'closed'}, {'id': 437334568, 'number': 24, 'closed': datetime.datetime(2020, 6, 25, 3, 16, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 23, 54, 8, tzinfo=datetime.timezone.utc), 'time_taken': 444144.0, 'time_delta': '5 days, 3:22:24', 'additions': 730, 'deletions': 687, 'state': 'closed'}, {'id': 437038167, 'number': 23, 'closed': datetime.datetime(2020, 6, 19, 23, 34, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 11, 3, 44, tzinfo=datetime.timezone.utc), 'time_taken': 45042.0, 'time_delta': '12:30:42', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 434396185, 'number': 22, 'closed': datetime.datetime(2020, 6, 20, 1, 10, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 9, 7, 26, tzinfo=datetime.timezone.utc), 'time_taken': 403369.0, 'time_delta': '4 days, 16:02:49', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 434122503, 'number': 18, 'closed': datetime.datetime(2020, 6, 15, 14, 58, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 14, 10, 8, 6, tzinfo=datetime.timezone.utc), 'time_taken': 103802.0, 'time_delta': '1 day, 4:50:02', 'additions': 576, 'deletions': 128, 'state': 'closed'}, {'id': 430695067, 'number': 15, 'closed': datetime.datetime(2020, 6, 14, 10, 1, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 4, 19, 50, tzinfo=datetime.timezone.utc), 'time_taken': 538924.0, 'time_delta': '6 days, 5:42:04', 'additions': 409, 'deletions': 4, 'state': 'closed'}, {'id': 426474427, 'number': 10, 'closed': datetime.datetime(2020, 6, 5, 18, 25, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 9, 48, 14, tzinfo=datetime.timezone.utc), 'time_taken': 290264.0, 'time_delta': '3 days, 8:37:44', 'additions': 14397, 'deletions': 1, 'state': 'closed'}]"
