pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
437441306,"Added LidarVisual implementation for Ogre1, empty classes for Ogre2","Please see issue [ignitionrobotics/ign-rendering#84](https://github.com/ignitionrobotics/ign-rendering/issues/84).

I have added lidar visualisation for Ogre1 and an example for the same.

The following image shows an example of the LidarVisual with 3 vertical sets of rays.
![image](https://user-images.githubusercontent.com/27280479/85208272-8c3e4900-b34c-11ea-87f9-90557f7c1ce1.png)


@ahcorde  Please do check the PR and let me know if there are any changes. ( This PR is different from the previous one so that it would be easier to review the code as it is separated cleanly per commit.)",True,103,https://api.github.com/repos/gazebosim/gz-rendering/pulls/103,https://github.com/gazebosim/gz-rendering/pull/103,closed,2660,0,27,34,7,50,3,1,"[{'name': 'enhancement'}, {'name': 'ogre1.x'}, {'name': 'ðŸ”® dome'}]",2020-06-20 17:52:41+00:00,2020-07-08 00:28:25+00:00,1492544.0,"17 days, 6:35:44","[{'comment_id': 443152579, 'comment_body': '```suggestion\r\n * Copyright (C) 2020 Open Source Robotics Foundation\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 19, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443152712, 'comment_body': '```suggestion\r\n * Copyright (C) 2020 Open Source Robotics Foundation\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 19, 3, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443152720, 'comment_body': '```suggestion\r\n/* * Copyright (C) 2020 Open Source Robotics Foundation\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 19, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443152929, 'comment_body': 'remove this line', 'comment_created': datetime.datetime(2020, 6, 20, 19, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443152951, 'comment_body': 'remove this line', 'comment_created': datetime.datetime(2020, 6, 20, 19, 7, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443153306, 'comment_body': 'You are adding the implementation for Ogre2 too, can you edit the PR message ?', 'comment_created': datetime.datetime(2020, 6, 20, 19, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443153936, 'comment_body': 'please add the argument names, with undescore `_` -> _minVerticalAngle. Same with the methods bellow', 'comment_created': datetime.datetime(2020, 6, 20, 19, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443153945, 'comment_body': '```suggestion\r\n      public: virtual void SetLidarMessage(std::vector<double> & _msg);\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 19, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443217594, 'comment_body': 'done :+1: ', 'comment_created': datetime.datetime(2020, 6, 21, 13, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 443239702, 'comment_body': 'remove this code if you are not using it or uncomment them otherwise', 'comment_created': datetime.datetime(2020, 6, 21, 17, 24, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443239727, 'comment_body': 'remove this line', 'comment_created': datetime.datetime(2020, 6, 21, 17, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443786550, 'comment_body': 'can we make this API name more generic like `SetPoints`?', 'comment_created': datetime.datetime(2020, 6, 22, 19, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 443787852, 'comment_body': ""we follow google coding style guidelines which don't use `Get` prefix in getter functions. So `GetPointCount()` -> `PointCount()`"", 'comment_created': datetime.datetime(2020, 6, 22, 19, 49, 21, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 443792268, 'comment_body': ""The material script is specific to ogre 1.x which won't be used by other rendering engine implementations. So you may want to create materials manually by hand, [see examples here](https://github.com/ignitionrobotics/ign-rendering/blob/master/src/base/BaseScene.cc#L1150). You could create them in BaseLidarVisual so that when you work on ogre2 implementation, these materials will be available."", 'comment_created': datetime.datetime(2020, 6, 22, 19, 58, 37, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 446808476, 'comment_body': '```suggestion\r\n      /// \\brief Callback when the sensor data is recieved\r\n```', 'comment_created': datetime.datetime(2020, 6, 29, 6, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 446809561, 'comment_body': 'PointCount returns zero but you `push_back` 0.0 in the `Points()` method', 'comment_created': datetime.datetime(2020, 6, 29, 6, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 446810263, 'comment_body': '```suggestion\r\n    ignerr << ""Message not received. Exiting update function""\r\n           << std::endl;\r\n```', 'comment_created': datetime.datetime(2020, 6, 29, 6, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 446881238, 'comment_body': 'remove one of the white lines', 'comment_created': datetime.datetime(2020, 6, 29, 9, 47, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 446882212, 'comment_body': 'remove on white lines', 'comment_created': datetime.datetime(2020, 6, 29, 9, 49, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 446882317, 'comment_body': 'remove one white line', 'comment_created': datetime.datetime(2020, 6, 29, 9, 49, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 447341065, 'comment_body': '`ACTOR_ANIMATION` -> `LIDAR_VISUAL`', 'comment_created': datetime.datetime(2020, 6, 30, 0, 45, 11, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447341327, 'comment_body': 'remove the `Skeleton*` headers as they are not used', 'comment_created': datetime.datetime(2020, 6, 30, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447341414, 'comment_body': 'remove unused `skel` variable', 'comment_created': datetime.datetime(2020, 6, 30, 0, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447342166, 'comment_body': 'update heading', 'comment_created': datetime.datetime(2020, 6, 30, 0, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447342358, 'comment_body': 'this is not currently used right? we can leave this out in this PR', 'comment_created': datetime.datetime(2020, 6, 30, 0, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447342962, 'comment_body': 'This does not necessary need to be a callback. We can make the documentation more generic, e.g. Set the lidar points to be visualized.', 'comment_created': datetime.datetime(2020, 6, 30, 0, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447343488, 'comment_body': ""you shouldn't have to call here `d.clear()` since it should just be an empty vector"", 'comment_created': datetime.datetime(2020, 6, 30, 0, 53, 40, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447344402, 'comment_body': ""you don't need the `.get()` to call `Clear()`, i.e. `ray->Clear()` should work. Same for other instances below"", 'comment_created': datetime.datetime(2020, 6, 30, 0, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447345446, 'comment_body': 'can you rename this to something like `lidarPoints` since we are not using a message to store the data in ign-rendering', 'comment_created': datetime.datetime(2020, 6, 30, 1, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447346283, 'comment_body': ""can the vertical and horizontal checks be moved to `Init` or `Create`? We should check this early so we don't end up spamming the console on every update"", 'comment_created': datetime.datetime(2020, 6, 30, 1, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447347523, 'comment_body': ""would we ever get into a situation that we fail these `if` checks? \r\n\r\nLike mentioned before, we should make sure all the user specified params are validated early on so we don't run into these errors on update."", 'comment_created': datetime.datetime(2020, 6, 30, 1, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447348371, 'comment_body': 'we started removing `const` from primitive types a while back. Could you change the `const double` types in this class to just `double`? Same for the derived classes', 'comment_created': datetime.datetime(2020, 6, 30, 1, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447349193, 'comment_body': ""can you pass by const ref? so we can guarantee to the caller of this API that we're not going to change the contents of the vector."", 'comment_created': datetime.datetime(2020, 6, 30, 1, 12, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447350479, 'comment_body': 'also add a check for `ogre2` for all the tests since users can still run tests using `ogre2` by doing:\r\n\r\n```\r\n RENDER_ENGINE_VALUES=ogre2 make test\r\n```', 'comment_created': datetime.datetime(2020, 6, 30, 1, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447350929, 'comment_body': 'You probably got this from `gpu_rays` test but I think it is not used. We can remove this', 'comment_created': datetime.datetime(2020, 6, 30, 1, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447352602, 'comment_body': 'some of the variables above are not used. We should remove the unused ones', 'comment_created': datetime.datetime(2020, 6, 30, 1, 24, 41, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447549342, 'comment_body': 'I put them here as the parameters can be changed by the user after the lidarvisual is created, hence allowing the user to set the parameters irrespective of the order... for example, the lidarPoints may be set by the user before setting the Vertical or horizontal RayCount and it will only be evaluated after all the parameters have been fully set, i.e. checking performed within the update function. It would also allow the user to dynamically change the parameters if required.\r\n\r\nAs of now, the update function only checks for 1) if a new message has been received, and 2) if the number of points in the lidarPoints is consistent with vertical and horizontal raycount.\r\n\r\nI think all other checks (from the comment below) can be removed as we changed the API that the user cannot set the angle step size, but can set only the max angle, min angle, and ray count for vertical and horizontal rays. I found that there is a significant chance of a user-side-error while setting step size. It is also a redundant parameter, which may cause behaviour that is undesirable to the user if any single parameter is set incorrectly.', 'comment_created': datetime.datetime(2020, 6, 30, 9, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 447550603, 'comment_body': ""These will not fail with the current conditions, I'll remove them."", 'comment_created': datetime.datetime(2020, 6, 30, 9, 37, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 447576051, 'comment_body': 'Shall I make it a function like this instead? [link](https://github.com/ignitionrobotics/ign-rendering/blob/dfcf7c4a574b6b0e94419b7ba1ab3ebce64055f3/ogre/src/OgreGpuRays.cc#L245)', 'comment_created': datetime.datetime(2020, 6, 30, 10, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 447896569, 'comment_body': ""just noticed that you changed the `SetVerticalRayCount` and `SetHorizontalRayCount` functions to make sure these values are always greater than 1. So we shouldn't need the check now right?\r\n\r\n+1 on removing API for setting angle step size.\r\n\r\nwe can keep the logic here for computing the angle step"", 'comment_created': datetime.datetime(2020, 6, 30, 18, 32, 54, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447898356, 'comment_body': 'can you change this to `ignwarn` and update the message to say something like: `Empty lidar points. Exiting update function`?', 'comment_created': datetime.datetime(2020, 6, 30, 18, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447899991, 'comment_body': 'you can use `this->Scene()` instead of `T::Scene()`', 'comment_created': datetime.datetime(2020, 6, 30, 18, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447902474, 'comment_body': ""let's remove this line for setting the visibility flags here. I think this should be done later by ign-gazebo."", 'comment_created': datetime.datetime(2020, 6, 30, 18, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447903403, 'comment_body': ""can you initialize this to false? It'll also help to use a word other than msg, e.g. `receivedData` or `receivedPoints`"", 'comment_created': datetime.datetime(2020, 6, 30, 18, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447903907, 'comment_body': '`_msg` -> `_points`', 'comment_created': datetime.datetime(2020, 6, 30, 18, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447971653, 'comment_body': 'I edited the `SetVerticalCount` and `SetHorizontalCount` to ensure the values are non-zero. For the case where the value is 1, we do not need to update the step size. Otherwise, the above expression would give a runtime error. For this specific case, the step size does not need to be used as only one ray will be displayed at `minHorizontalAngle` and `minVerticalAngle`.\r\n\r\nFor all other cases, this expression would be required to calculate step size.', 'comment_created': datetime.datetime(2020, 6, 30, 20, 52, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 448689183, 'comment_body': 'cool got it, that makes sense. This looks good to me.', 'comment_created': datetime.datetime(2020, 7, 2, 0, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 448693426, 'comment_body': ""windows build is failing due to the `setMaterial` calls in this function as windows is using a newer version of ogre. Looks like ogre deprecated this API in version 1.10.8 in favor of the overloaded `setMaterial(MaterialPtr &)` function, see [here](https://github.com/OGRECave/ogre/blob/v1.10.8/OgreMain/include/OgreSimpleRenderable.h#L77). Can you add a check for OGRE_VERSION and use the string version if version is <= 1.10.8? here's an example: https://github.com/ignitionrobotics/ign-rendering/blob/master/ogre/src/OgreRenderEngine.cc#L99"", 'comment_created': datetime.datetime(2020, 7, 2, 1, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 448694453, 'comment_body': ""the `override` keyword is correct and the right thing to do. It's however producing warnings on [homebrew build](https://build.osrfoundation.org/job/ignition_rendering-ci-pr_any-homebrew-amd64/735/warnings10Result/new/). To resolve the warnings, we need to add the keyword to other functions, which would end up increasing the size of this PR. Let's remove `override` in this PR so we can get a clean homebrew build, and we can create a separate PR to fix these warnings later."", 'comment_created': datetime.datetime(2020, 7, 2, 1, 12, 21, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 450444062, 'comment_body': 'This returns an `ignition::rendering::MaterialPtr` object but `setMaterial` expects an `Ogre::MateiralPtr` object. So windows build is still failing, see [console](https://build.osrfoundation.org/job/ign_rendering-pr-win/835/console) output\r\n\r\nYou\'ll need to get the material using ogre\'s material manager:\r\n\r\n```\r\nOgre::MaterialPtr mat = Ogre::MaterialManager::getSingleton().getByName(""Lidar/BlueStrips"");\r\n```', 'comment_created': datetime.datetime(2020, 7, 6, 19, 48, 41, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}]","[{'commit_sha': '898c3fefd43c603daa400426f99b2228012154b7', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25a496d0953f2637b71865efe63d306c134535a5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b13eca30a3a6c4a30dc535b79e9234b3fdaf7e20', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c179b057e6a76cac485f1720bac1dcc4030cd030', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9778be7ee015943852a1c21eca6551293307753c', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e13ad2a37e9d0062d49d0fcf6a4f5bd613f8877', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b8400aeb7937cdbce36261f0ad7b85ea88b10d6', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca86a29d73134c986941154893028c6136975711', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1399886580e6f2fa6c6cea1685c0e0a579663e7b', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a16a92f14c69de9ab3ed0750413965df90e69c6e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c9caab67e9eb5c6f968dc7a7c673d0583d3996f', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73c11acd01f04989d67752bee0a28157aa44be91', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06efb7164bbe2c9c8d4a4cd5484b17cd11643163', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f19fcd970cfd7bfd69a3db2a97cac04c358753e6', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99ea68136ae5a01a6315e912a35dc3495d286444', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fb999321e010965c43400aff4cb80ff5159ac0d', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aec8a6ebfc479f6e4b4d3d0b55cff1dc7bc47cc', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9496eb997f6a58a0adaef76dc896cec56dfebbaf', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d09444afa103d4ae8317d32b544756bd58966c', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '690e0b80357f0a201db16ea8a2efec07adf75f2e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7221f7e7d9e34155c447c5d9ebdbf0f04c7339ae', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a00e476517e7cb06a7f00a809ce6c8d0cd483cd3', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eb41ccb4d246dc0693be8a531fa11712dae23b0', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '025d1802adc63c0e943d7fa358f32aa18903159c', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9115a53e0efb94aeb007167c4acb4d3eb8012411', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4bf6b467a0b083ba7a8475ee057b0368d5ca5e3', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c3bbfc54a584e660ca642e757d2cad87d2e0088', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5567267b5dd17dfef03ec00a5b533d30961b05b5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551c2235a990d46b8fa566d7cd7acf1790ee247d', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7cd2f6e9e0a4ac5d2563a5e90076460b2c121b3', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c3cfa17b35ff2259c71e69890313192d026a45b', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea26a2bdc90981410cbd0cbcfe5de249df6f2a6e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7da4f4387104e7a9c76f8bce5c7a91b58601a7c', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75c2fbf92560ee5a15f8b126bed0f5c3550ed066', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
447873443,Add types for lidar visual,"Added points and lines to the lidar visual. Additional API to display only those points that are hitting is also added.

Please see issue [ignitionrobotics/ign-rendering#84](ignitionrobotics/ign-rendering#84).

![POINTS2](https://user-images.githubusercontent.com/27280479/87242765-52dd9280-c44d-11ea-9d6a-903566595ffc.png)
![POINTS1](https://user-images.githubusercontent.com/27280479/87242766-53762900-c44d-11ea-8685-7b108e272f88.png)
![RAY2](https://user-images.githubusercontent.com/27280479/87242767-540ebf80-c44d-11ea-8062-c36244fd167e.png)
![RAY1](https://user-images.githubusercontent.com/27280479/87242772-625cdb80-c44d-11ea-91ba-9f733159cad1.png)
",True,114,https://api.github.com/repos/gazebosim/gz-rendering/pulls/114,https://github.com/gazebosim/gz-rendering/pull/114,closed,591,133,15,17,2,23,1,0,[{'name': 'ðŸ”® dome'}],2020-07-12 09:12:38+00:00,2020-07-22 04:16:18+00:00,846220.0,"9 days, 19:03:40","[{'comment_id': 453968286, 'comment_body': 'update doxygen comment', 'comment_created': datetime.datetime(2020, 7, 13, 22, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453970325, 'comment_body': ""You'll need to use `Ogre::MaterialManager` like [here](https://github.com/ignitionrobotics/ign-rendering/pull/103/files#diff-774fb867ada2642609f3037231117bb2R188)"", 'comment_created': datetime.datetime(2020, 7, 13, 22, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453971489, 'comment_body': 'same comment as before. Need to use `Ogre::MaterialManager`', 'comment_created': datetime.datetime(2020, 7, 13, 22, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453979602, 'comment_body': ""The Update function is getting long with a bit of duplicate code. Can the logic for triangle strips be merged with lines since the strips visualization method also includes drawing lines? \r\n\r\nSame for the code for setting materials above. We could refactor that out to a different function if that's possible.\r\n\r\n"", 'comment_created': datetime.datetime(2020, 7, 13, 22, 26, 49, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453979952, 'comment_body': 'when `displayNonHitting` is set to `false`, could we just not draw the `noHitRayStrips`?', 'comment_created': datetime.datetime(2020, 7, 13, 22, 27, 29, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453986700, 'comment_body': 'and can we keep the color consistent as other visualization type? i.e. blue. Note that we should also make the material configurable by the user by overriding the `SetMaterial` function. This can come later in a separate PR.', 'comment_created': datetime.datetime(2020, 7, 13, 22, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453988929, 'comment_body': 'can you add some key press handling in GlutWindow.cc to let users toggle between different visualization types?', 'comment_created': datetime.datetime(2020, 7, 13, 22, 43, 26, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453989144, 'comment_body': ""I left a comment below; let's see if we can make this work"", 'comment_created': datetime.datetime(2020, 7, 13, 22, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 454147337, 'comment_body': ""In this case, not drawing noHitRay Strips, will not help as the rayStrips will form a large triangle across the multiple hitting points, covering the middle area. I'll rewrite this part to avoid this behaviour.."", 'comment_created': datetime.datetime(2020, 7, 14, 7, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 454435501, 'comment_body': 'Can you please check the updated code. I have somewhat merged it together.', 'comment_created': datetime.datetime(2020, 7, 14, 15, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 455419474, 'comment_body': 'extra bracket here', 'comment_created': datetime.datetime(2020, 7, 15, 23, 20, 15, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 455419835, 'comment_body': 'yep that looks fine', 'comment_created': datetime.datetime(2020, 7, 15, 23, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 458216877, 'comment_body': '```suggestion\r\n    prevUpdateTime = std::chrono::duration_cast<std::chrono::microseconds>(\r\n        g_time).count();\r\n```', 'comment_created': datetime.datetime(2020, 7, 21, 16, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 458217060, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 7, 21, 16, 9, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 458217170, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 7, 21, 16, 9, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 458217479, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 7, 21, 16, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 458225804, 'comment_body': 'Document arguments', 'comment_created': datetime.datetime(2020, 7, 21, 16, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 458341751, 'comment_body': '[windows CI](https://build.osrfoundation.org/job/ign_rendering-pr-win/856/console) caught a build error here. This needs to be:\r\n\r\n```\r\n            Ogre::MaterialPtr mat = \r\n                Ogre::MaterialManager::getSingleton().getByName(\r\n                ""Lidar/BlueRay"");\r\n\r\n```', 'comment_created': datetime.datetime(2020, 7, 21, 19, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 458341943, 'comment_body': 'same change is needed here. Need to declare `mat`', 'comment_created': datetime.datetime(2020, 7, 21, 19, 39, 3, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 458342010, 'comment_body': 'same here', 'comment_created': datetime.datetime(2020, 7, 21, 19, 39, 11, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 458342143, 'comment_body': 'another one', 'comment_created': datetime.datetime(2020, 7, 21, 19, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 458521532, 'comment_body': ""@iche033 I think only this one needs the declaration. The others above are in the same namespace so the variable can be reused. I've pushed the edit for the same."", 'comment_created': datetime.datetime(2020, 7, 22, 4, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 458523945, 'comment_body': '[new build](https://build.osrfoundation.org/job/ign_rendering-pr-win/858/) looks good!', 'comment_created': datetime.datetime(2020, 7, 22, 4, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}]","[{'commit_sha': '7e0f31dccc8a2fb1ffa9840e2b551f907389c502', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca80ab1377062d2dd57bf1944c63315b48be0fb1', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eadd0da19d9c0b3b89778c41ac92a2714a97967', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0dd066adccae47eb804f43947429d0733007056', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d12f1da8b620c2853caaee93d93cb5c562b3bb', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a34ff4133e9bba472755f10024df230155b59af', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2d72d2502523787977d418828537ee814d859a', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce5af20c5b93ddc6d3c5cf1ff6c70ea7ad020cab', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb21fa455e7bcd36f453e4651e3d7b87aca42bb9', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cea60051e29017ccf253cd9e009dddd9791f73e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '882539f32a68180e4949dd6380e36acdf7adb27a', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc482461e4e10c909bf7ba840b05bcdee2811112', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3296d4ca462da56400c7dcfe9f6d76daa4df245a', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ab331798951b6fd25b64b52846e066efd3d7b1e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14f68a1c18588cb62568dc061f0401b262e2748c', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa37115fddf09c12a3392a17c2651ec698fee6ee', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9be898ea7844934a36806d5366ea77bab9f26921', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
466001695,Add LidarVisual point colors for Ogre1,"@iche033  Please refer to this PR for point color material and implementation, Thanks

EDIT:- adding image
![image](https://user-images.githubusercontent.com/27280479/89886686-ab3db680-dbea-11ea-98e0-3f0c42076f27.png)

To use this you can do the following :-
`lidarPointer->SetPoints(points_vector, colors_vector);`",True,124,https://api.github.com/repos/gazebosim/gz-rendering/pulls/124,https://github.com/gazebosim/gz-rendering/pull/124,closed,125,19,7,6,1,4,1,0,[{'name': 'ðŸ”® dome'}],2020-08-11 10:01:00+00:00,2020-08-19 22:27:57+00:00,736017.0,"8 days, 12:26:57","[{'comment_id': 469481292, 'comment_body': 'we should keep the color consistent and set it to the same color as `Lidar/BlueRay`.', 'comment_created': datetime.datetime(2020, 8, 12, 19, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 469482366, 'comment_body': 'can you add a note here that it currently only affects lidar visuals with type `LVT_POINTS`?', 'comment_created': datetime.datetime(2020, 8, 12, 19, 13, 20, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 469486250, 'comment_body': ""optimization suggestion: can you move the `Ogre::MaterialManager::getSingleton().getByName` calls outside the for loop so we don't have to search for the material every iteration of the loop.\r\n\r\nsame for the other materials like `Lidar/BlueStrips`, `Lidar/TransBlack`, `Lidar/LightBlueStrips`"", 'comment_created': datetime.datetime(2020, 8, 12, 19, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 472411134, 'comment_body': 'do you need an unsigned long? vector `size()` returns `size_t` which is an unsigned integer\r\n\r\nthis should work\r\n\r\n```\r\n for (unsigned int i = 0u; i < this->dataPtr->lidarPoints.size(); ++i)\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 18, 53, 23, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}]","[{'commit_sha': 'cfa9f8d72d211a6699bead115c6e185eaebea7d5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c48542a8e1752665f3378b200eb1872458df34a6', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7faf3b4473ddd0d649bc4816a146177ee474d46', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0519d7b1d1b89780e21265d2d877db98d844fc5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67da929cd20da5f7e788da9a48efe6d43f5d6327', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c6393c173ce6dd8a0025eb99365c72f661a9c36', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
470904186,Visualize Lidar Plugin for ign-gazebo,"@ahcorde Can you please review it.

This PR integrates the LidarVisual from ignition rendering into ign-gazebo. Options are provided to select the visual type, the subscribed topic and to display or ignore lidar rays that do not hit an obstacle.

![Example1](https://user-images.githubusercontent.com/27280479/91079010-1bbfeb00-e661-11ea-8de9-9d9b75055d1e.gif)
",True,301,https://api.github.com/repos/gazebosim/gz-sim/pulls/301,https://github.com/gazebosim/gz-sim/pull/301,closed,1277,0,7,12,7,20,3,0,"[{'name': 'enhancement'}, {'name': 'ðŸ”® dome'}, {'name': 'beta'}]",2020-08-20 13:17:05+00:00,2020-09-23 01:10:08+00:00,2893983.0,"33 days, 11:53:03","[{'comment_id': 473965833, 'comment_body': 'review the documentation here and below', 'comment_created': datetime.datetime(2020, 8, 20, 13, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 473966883, 'comment_body': 'remove white line', 'comment_created': datetime.datetime(2020, 8, 20, 13, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 473966950, 'comment_body': 'remove white line', 'comment_created': datetime.datetime(2020, 8, 20, 13, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 473967786, 'comment_body': '```suggestion\r\n      <uri>https://fuel.ignitionrobotics.org/1.0/openrobotics/models/Playground</uri>\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 13, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 474300537, 'comment_body': 'most of these headers are not needed. Can you remove the ones not used?', 'comment_created': datetime.datetime(2020, 8, 20, 22, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474300828, 'comment_body': 'initialize the min max range variables to 0.0', 'comment_created': datetime.datetime(2020, 8, 20, 22, 11, 52, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474301552, 'comment_body': 'nit: bracket on new line', 'comment_created': datetime.datetime(2020, 8, 20, 22, 13, 46, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474301841, 'comment_body': '`this->dataPtr->visualType =` on new line with two space indentation', 'comment_created': datetime.datetime(2020, 8, 20, 22, 14, 38, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474304301, 'comment_body': '`break` here?', 'comment_created': datetime.datetime(2020, 8, 20, 22, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474305498, 'comment_body': '`if (success)`', 'comment_created': datetime.datetime(2020, 8, 20, 22, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474305586, 'comment_body': '`if (!foundChild)`', 'comment_created': datetime.datetime(2020, 8, 20, 22, 25, 10, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474305779, 'comment_body': '`auto i = 0ul` -> `size_t i = 0u`', 'comment_created': datetime.datetime(2020, 8, 20, 22, 25, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474306813, 'comment_body': 'I think the logic in this block assumes the model > link > sensor hierarchy? \r\n\r\nWe also support nested models, i.e.g model > model > link > sensor, in which case the logic above may not work?', 'comment_created': datetime.datetime(2020, 8, 20, 22, 28, 40, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474307758, 'comment_body': '`lidar visual plugin` -> `visualize lidar plugin`?', 'comment_created': datetime.datetime(2020, 8, 20, 22, 31, 31, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474311238, 'comment_body': ""I don't see the visual destroyed? we need to be careful not to leave any dangling visuals around when the plugin exits"", 'comment_created': datetime.datetime(2020, 8, 20, 22, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 475891487, 'comment_body': 'you should be able to call `this->dataPtr->lidar->SetVisible(false)` to make it invisible, which is a faster operation than clearing all the lidar data. Same for re-enabling the lidar visual display below', 'comment_created': datetime.datetime(2020, 8, 24, 21, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 475894060, 'comment_body': 'following up on this, we should destroy the visual when the user closes the plugin, i.e.  by clicking on `X` in the corner of the plugin window. Currently I see that lidar visual remains in the scene after exiting the plugin, and when I open the same plugin again, a duplicate lidar visual gets created.', 'comment_created': datetime.datetime(2020, 8, 24, 21, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 483425495, 'comment_body': 'Remove these lines and below', 'comment_created': datetime.datetime(2020, 9, 4, 6, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 483426492, 'comment_body': 'you can remove this line, right?', 'comment_created': datetime.datetime(2020, 9, 4, 7, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 492426517, 'comment_body': ""There's a macOS job warning here:\r\n\r\n`'eventFilter' overrides a member function but is not marked 'override'`\r\n\r\n```suggestion\r\n    public: bool eventFilter(QObject *_obj, QEvent *_event) override;\r\n```"", 'comment_created': datetime.datetime(2020, 9, 22, 1, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'chapulina', 'type': 'User'}]","[{'commit_sha': 'db9b7f4cb17a7aec556b5b2b37f403489de588bd', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b83885b17cbec6f0f703f74c0e7a1982272fa22', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb9e9a7670f73d5441ce596115313bbf5e71a8db', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43f9b6bf300fe69f4524bc3adf9f66f9eff7a5f5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd3499603d5ad25fb815e0075204bcc66bc3e8b0', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65baf211e64c917b3b2ea226f85b9452fb30024d', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42d221dd35c5f07a99038f9ec64e39268d837105', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b95e986cd23614166061b85c3a8eb6ea26132d3f', 'committer_username': 'chapulina', 'committer_name': 'Louise Poubel', 'committer_email': None, 'commit_date': datetime.datetime(2013, 10, 22, 22, 20, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da0f3e02f2776cfb667740e5a4b6edce2f876444', 'committer_username': 'chapulina', 'committer_name': 'Louise Poubel', 'committer_email': None, 'commit_date': datetime.datetime(2013, 10, 22, 22, 20, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f646ef296dc359278a8b036115d83527f3ab10f1', 'committer_username': 'chapulina', 'committer_name': 'Louise Poubel', 'committer_email': None, 'commit_date': datetime.datetime(2013, 10, 22, 22, 20, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '310a4176e3757a1a6df9eadb78248b6100a4e350', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f241a8eaa602d375ba85cd491eaf4ee01c75ef', 'committer_username': 'chapulina', 'committer_name': 'Louise Poubel', 'committer_email': None, 'commit_date': datetime.datetime(2013, 10, 22, 22, 20, 7, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
475242656,Adding option for visibility,"@iche033  Please see this PR to solve the issue in [ign-gazebo/#301](https://github.com/ignitionrobotics/ign-gazebo/pull/301)

I have added to the API to set and get the visible state of the visual. I could not access the existing visibility status of the ogre node as they have not provided API's for the same. [[link]](https://forums.ogre3d.org/viewtopic.php?t=23694) ",True,133,https://api.github.com/repos/gazebosim/gz-rendering/pulls/133,https://github.com/gazebosim/gz-rendering/pull/133,closed,36,0,4,1,0,4,1,1,[{'name': 'ðŸ”® dome'}],2020-08-28 07:42:18+00:00,2020-09-01 08:04:18+00:00,346920.0,"4 days, 0:22:00","[{'comment_id': 479019540, 'comment_body': ""This is a little bit weird. Are you setting the variable with the letter? I think it's because this line, right?\r\n```\r\n      T::SetVisible(_visible);\r\n```"", 'comment_created': datetime.datetime(2020, 8, 28, 9, 28, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 479329708, 'comment_body': ""I'm sorry I don't understand the question. \r\n\r\nI did the above as the visibility changes once the newly created  `DynamicRenderables`  are added to the LidarVisual, the default value of the visibility of the newly created renderable is `true`. Hence I am setting the current value of the visibility again to make sure that the newly added DyanmicRenderables do not have a separate value from the intended current value. On deleting the old ones and creating the new ones (which happens either during changing of visual type or changing the sensor topic or setting DisplayNonHitting false) it used to be visible even though the checkbox was off."", 'comment_created': datetime.datetime(2020, 8, 28, 14, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 479488119, 'comment_body': 'LidarVisual should inherit the `SetVisible` function from Visual class already so you should not have to add a new one here', 'comment_created': datetime.datetime(2020, 8, 28, 19, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 479490898, 'comment_body': 'I think you can move this call out side of the for loop, e.g. at the end of the function? Same for `OgreLidarVisual` class', 'comment_created': datetime.datetime(2020, 8, 28, 19, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}]","[{'commit_sha': 'bf233c8de86b8d86889f5a6dd994b2164c270375', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
473781808,minor change in LidarVisual for the case when sensor data is more than sensor range,"This PR attempts to fix the case when the data given to the sensor happens to contain a range value which is greater than, or exactly equal to the sensor range.
For rays when the sensor does not hit anything in the range, it returns `inf` for the ray. However, when we add adding noise to the measurements defaults the `inf` reading exactly equal to  `maxRange` of the sensor. This causes the lidar visual to display the rays, although they are not hitting any object.

Additionally, if a point is a finite value (even if it is greater than the maxRange), the LidarVisual showed it since the only criteria of determining if the sensor ray was hitting or not was if the value returned by the sensor was `inf`.",True,132,https://api.github.com/repos/gazebosim/gz-rendering/pulls/132,https://github.com/gazebosim/gz-rendering/pull/132,closed,6,6,2,1,0,0,1,0,[{'name': 'ðŸ”® dome'}],2020-08-26 09:36:47+00:00,2020-08-26 22:50:12+00:00,47605.0,13:13:25,[],"[{'commit_sha': '7e423518f1743e261eaa2a1dc9a8b8585214a94e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
464078627,FIX failing lidar visual integration test,@chapulina I believe this should fix the failing test in #120 ,True,121,https://api.github.com/repos/gazebosim/gz-rendering/pulls/121,https://github.com/gazebosim/gz-rendering/pull/121,closed,1,1,1,1,0,0,0,0,[],2020-08-06 14:52:15+00:00,2020-08-06 17:40:04+00:00,10069.0,2:47:49,[],"[{'commit_sha': '110e23e3a28a93034dd2f7d62371b1ab83b7abc5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
461317911,Model submission for Gagarin sensor configuration 1 by CERBERUS,"Model Submission for the CERBERUS Gagarin with Sensor Configuration 1. 
![Image from iOS](https://user-images.githubusercontent.com/27280479/89108028-edc8fb80-d452-11ea-8cf7-6f8b942ac79c.jpg)
",False,518,https://api.github.com/repos/osrf/subt/pulls/518,https://github.com/osrf/subt/pull/518,closed,7161,0,28,5,3,8,0,0,[],2020-08-01 18:29:14+00:00,2020-08-06 14:20:35+00:00,417081.0,"4 days, 19:51:21","[{'comment_id': 465261341, 'comment_body': 'update link: https://github.com/osrf/subt/wiki', 'comment_created': datetime.datetime(2020, 8, 4, 18, 55, 43, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 465263982, 'comment_body': ""I tried running this cmd with the submitted model in this PR but I don't see the robot in the world. It also looks like `modelName` is not used. \r\n\r\nOn the other hand, the instructions in `specifications.md` works for me\r\n"", 'comment_created': datetime.datetime(2020, 8, 4, 19, 0, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 465267776, 'comment_body': ""The `gpu_ray` sensor is modeled slightly different from a `depth` camera (mainly that the distances between samples points are different). Just wondering if that's intended? The differences may be small for this sensor"", 'comment_created': datetime.datetime(2020, 8, 4, 19, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 465445494, 'comment_body': 'I believe this method was active since the time the repo was on bitbucket. I think we carried it over from there. I\'ll change it to be the same as specifications.md\r\n\r\nThis method is mentioned to launch the robots in all the example.ign files, however, it does not work anymore for me( I think it worked on my device around the time when subt repo was on bitbucket).\r\n```\r\n<?xml version=""1.0""?>\r\n<!-- Usage: ign launch path/to/example.ign robotName:=<X1>\r\n\r\n   Parameters:\r\n    robotName: Name to be assigned to model\r\n-->\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 3, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 465447753, 'comment_body': 'We used a `gpu_ray` plugin as I thought the` depth` sensor was used to model Kinect or Realsense - like  stereo cameras. \r\nPicoflexx is purely a time of flight sensor and does not capture images. Please let me know if this plugin is not correct for the model and I can change it as required.', 'comment_created': datetime.datetime(2020, 8, 5, 3, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 465854971, 'comment_body': 'We have previously modeled the Picoflexx using the `depth_camera` plugin to more closely match the message types available with the [Picoflexx ROS driver](https://github.com/code-iai/pico_flexx_driver) (including depth images but not RGB). Please model using `depth_camera`. You can see examples in [this `model.sdf`](https://github.com/osrf/subt/blob/edc32fa926ff9c0ea6a413e4c046e9196909fbcb/submitted_models/marble_qav500_sensor_config_1/model.sdf#L415) and [this `vehicle_topics.launch`](https://github.com/osrf/subt/blob/edc32fa926ff9c0ea6a413e4c046e9196909fbcb/submitted_models/marble_qav500_sensor_config_1/launch/vehicle_topics.launch#L80).', 'comment_created': datetime.datetime(2020, 8, 5, 16, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'angelacmaio', 'type': 'User'}, {'comment_id': 466355271, 'comment_body': 'Thanks @iche033  @angelacmaio , I have modelled picoflexx using `depth_camera` plugin.', 'comment_created': datetime.datetime(2020, 8, 6, 11, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 466445644, 'comment_body': 'This has been fixed.', 'comment_created': datetime.datetime(2020, 8, 6, 14, 17, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nkoenig', 'type': 'User'}]","[{'commit_sha': 'b963e46f00c63bdaf1b561482f792793ac1c44c6', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67fe81e27fdbbf50bda763cf291ef76c4d19eeef', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '291f44a9735a6e8acdd88f31a517d00f7ef665a5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b7edd56c9812432462c6f09f6fa80d931c8f355', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dd0f10b21519689b44c728b4af0721dc584b1e34', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
437441306,"Added LidarVisual implementation for Ogre1, empty classes for Ogre2","Please see issue [ignitionrobotics/ign-rendering#84](https://github.com/ignitionrobotics/ign-rendering/issues/84).

I have added lidar visualisation for Ogre1 and an example for the same.

The following image shows an example of the LidarVisual with 3 vertical sets of rays.
![image](https://user-images.githubusercontent.com/27280479/85208272-8c3e4900-b34c-11ea-87f9-90557f7c1ce1.png)


@ahcorde  Please do check the PR and let me know if there are any changes. ( This PR is different from the previous one so that it would be easier to review the code as it is separated cleanly per commit.)",True,103,https://api.github.com/repos/gazebosim/gz-rendering/pulls/103,https://github.com/gazebosim/gz-rendering/pull/103,closed,2660,0,27,34,7,50,3,1,"[{'name': 'enhancement'}, {'name': 'ogre1.x'}, {'name': 'ðŸ”® dome'}]",2020-06-20 17:52:41+00:00,2020-07-08 00:28:25+00:00,1492544.0,"17 days, 6:35:44","[{'comment_id': 443152579, 'comment_body': '```suggestion\r\n * Copyright (C) 2020 Open Source Robotics Foundation\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 19, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443152712, 'comment_body': '```suggestion\r\n * Copyright (C) 2020 Open Source Robotics Foundation\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 19, 3, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443152720, 'comment_body': '```suggestion\r\n/* * Copyright (C) 2020 Open Source Robotics Foundation\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 19, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443152929, 'comment_body': 'remove this line', 'comment_created': datetime.datetime(2020, 6, 20, 19, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443152951, 'comment_body': 'remove this line', 'comment_created': datetime.datetime(2020, 6, 20, 19, 7, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443153306, 'comment_body': 'You are adding the implementation for Ogre2 too, can you edit the PR message ?', 'comment_created': datetime.datetime(2020, 6, 20, 19, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443153936, 'comment_body': 'please add the argument names, with undescore `_` -> _minVerticalAngle. Same with the methods bellow', 'comment_created': datetime.datetime(2020, 6, 20, 19, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443153945, 'comment_body': '```suggestion\r\n      public: virtual void SetLidarMessage(std::vector<double> & _msg);\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 19, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443217594, 'comment_body': 'done :+1: ', 'comment_created': datetime.datetime(2020, 6, 21, 13, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 443239702, 'comment_body': 'remove this code if you are not using it or uncomment them otherwise', 'comment_created': datetime.datetime(2020, 6, 21, 17, 24, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443239727, 'comment_body': 'remove this line', 'comment_created': datetime.datetime(2020, 6, 21, 17, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 443786550, 'comment_body': 'can we make this API name more generic like `SetPoints`?', 'comment_created': datetime.datetime(2020, 6, 22, 19, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 443787852, 'comment_body': ""we follow google coding style guidelines which don't use `Get` prefix in getter functions. So `GetPointCount()` -> `PointCount()`"", 'comment_created': datetime.datetime(2020, 6, 22, 19, 49, 21, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 443792268, 'comment_body': ""The material script is specific to ogre 1.x which won't be used by other rendering engine implementations. So you may want to create materials manually by hand, [see examples here](https://github.com/ignitionrobotics/ign-rendering/blob/master/src/base/BaseScene.cc#L1150). You could create them in BaseLidarVisual so that when you work on ogre2 implementation, these materials will be available."", 'comment_created': datetime.datetime(2020, 6, 22, 19, 58, 37, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 446808476, 'comment_body': '```suggestion\r\n      /// \\brief Callback when the sensor data is recieved\r\n```', 'comment_created': datetime.datetime(2020, 6, 29, 6, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 446809561, 'comment_body': 'PointCount returns zero but you `push_back` 0.0 in the `Points()` method', 'comment_created': datetime.datetime(2020, 6, 29, 6, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 446810263, 'comment_body': '```suggestion\r\n    ignerr << ""Message not received. Exiting update function""\r\n           << std::endl;\r\n```', 'comment_created': datetime.datetime(2020, 6, 29, 6, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 446881238, 'comment_body': 'remove one of the white lines', 'comment_created': datetime.datetime(2020, 6, 29, 9, 47, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 446882212, 'comment_body': 'remove on white lines', 'comment_created': datetime.datetime(2020, 6, 29, 9, 49, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 446882317, 'comment_body': 'remove one white line', 'comment_created': datetime.datetime(2020, 6, 29, 9, 49, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 447341065, 'comment_body': '`ACTOR_ANIMATION` -> `LIDAR_VISUAL`', 'comment_created': datetime.datetime(2020, 6, 30, 0, 45, 11, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447341327, 'comment_body': 'remove the `Skeleton*` headers as they are not used', 'comment_created': datetime.datetime(2020, 6, 30, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447341414, 'comment_body': 'remove unused `skel` variable', 'comment_created': datetime.datetime(2020, 6, 30, 0, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447342166, 'comment_body': 'update heading', 'comment_created': datetime.datetime(2020, 6, 30, 0, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447342358, 'comment_body': 'this is not currently used right? we can leave this out in this PR', 'comment_created': datetime.datetime(2020, 6, 30, 0, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447342962, 'comment_body': 'This does not necessary need to be a callback. We can make the documentation more generic, e.g. Set the lidar points to be visualized.', 'comment_created': datetime.datetime(2020, 6, 30, 0, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447343488, 'comment_body': ""you shouldn't have to call here `d.clear()` since it should just be an empty vector"", 'comment_created': datetime.datetime(2020, 6, 30, 0, 53, 40, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447344402, 'comment_body': ""you don't need the `.get()` to call `Clear()`, i.e. `ray->Clear()` should work. Same for other instances below"", 'comment_created': datetime.datetime(2020, 6, 30, 0, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447345446, 'comment_body': 'can you rename this to something like `lidarPoints` since we are not using a message to store the data in ign-rendering', 'comment_created': datetime.datetime(2020, 6, 30, 1, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447346283, 'comment_body': ""can the vertical and horizontal checks be moved to `Init` or `Create`? We should check this early so we don't end up spamming the console on every update"", 'comment_created': datetime.datetime(2020, 6, 30, 1, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447347523, 'comment_body': ""would we ever get into a situation that we fail these `if` checks? \r\n\r\nLike mentioned before, we should make sure all the user specified params are validated early on so we don't run into these errors on update."", 'comment_created': datetime.datetime(2020, 6, 30, 1, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447348371, 'comment_body': 'we started removing `const` from primitive types a while back. Could you change the `const double` types in this class to just `double`? Same for the derived classes', 'comment_created': datetime.datetime(2020, 6, 30, 1, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447349193, 'comment_body': ""can you pass by const ref? so we can guarantee to the caller of this API that we're not going to change the contents of the vector."", 'comment_created': datetime.datetime(2020, 6, 30, 1, 12, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447350479, 'comment_body': 'also add a check for `ogre2` for all the tests since users can still run tests using `ogre2` by doing:\r\n\r\n```\r\n RENDER_ENGINE_VALUES=ogre2 make test\r\n```', 'comment_created': datetime.datetime(2020, 6, 30, 1, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447350929, 'comment_body': 'You probably got this from `gpu_rays` test but I think it is not used. We can remove this', 'comment_created': datetime.datetime(2020, 6, 30, 1, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447352602, 'comment_body': 'some of the variables above are not used. We should remove the unused ones', 'comment_created': datetime.datetime(2020, 6, 30, 1, 24, 41, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447549342, 'comment_body': 'I put them here as the parameters can be changed by the user after the lidarvisual is created, hence allowing the user to set the parameters irrespective of the order... for example, the lidarPoints may be set by the user before setting the Vertical or horizontal RayCount and it will only be evaluated after all the parameters have been fully set, i.e. checking performed within the update function. It would also allow the user to dynamically change the parameters if required.\r\n\r\nAs of now, the update function only checks for 1) if a new message has been received, and 2) if the number of points in the lidarPoints is consistent with vertical and horizontal raycount.\r\n\r\nI think all other checks (from the comment below) can be removed as we changed the API that the user cannot set the angle step size, but can set only the max angle, min angle, and ray count for vertical and horizontal rays. I found that there is a significant chance of a user-side-error while setting step size. It is also a redundant parameter, which may cause behaviour that is undesirable to the user if any single parameter is set incorrectly.', 'comment_created': datetime.datetime(2020, 6, 30, 9, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 447550603, 'comment_body': ""These will not fail with the current conditions, I'll remove them."", 'comment_created': datetime.datetime(2020, 6, 30, 9, 37, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 447576051, 'comment_body': 'Shall I make it a function like this instead? [link](https://github.com/ignitionrobotics/ign-rendering/blob/dfcf7c4a574b6b0e94419b7ba1ab3ebce64055f3/ogre/src/OgreGpuRays.cc#L245)', 'comment_created': datetime.datetime(2020, 6, 30, 10, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 447896569, 'comment_body': ""just noticed that you changed the `SetVerticalRayCount` and `SetHorizontalRayCount` functions to make sure these values are always greater than 1. So we shouldn't need the check now right?\r\n\r\n+1 on removing API for setting angle step size.\r\n\r\nwe can keep the logic here for computing the angle step"", 'comment_created': datetime.datetime(2020, 6, 30, 18, 32, 54, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447898356, 'comment_body': 'can you change this to `ignwarn` and update the message to say something like: `Empty lidar points. Exiting update function`?', 'comment_created': datetime.datetime(2020, 6, 30, 18, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447899991, 'comment_body': 'you can use `this->Scene()` instead of `T::Scene()`', 'comment_created': datetime.datetime(2020, 6, 30, 18, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447902474, 'comment_body': ""let's remove this line for setting the visibility flags here. I think this should be done later by ign-gazebo."", 'comment_created': datetime.datetime(2020, 6, 30, 18, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447903403, 'comment_body': ""can you initialize this to false? It'll also help to use a word other than msg, e.g. `receivedData` or `receivedPoints`"", 'comment_created': datetime.datetime(2020, 6, 30, 18, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447903907, 'comment_body': '`_msg` -> `_points`', 'comment_created': datetime.datetime(2020, 6, 30, 18, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 447971653, 'comment_body': 'I edited the `SetVerticalCount` and `SetHorizontalCount` to ensure the values are non-zero. For the case where the value is 1, we do not need to update the step size. Otherwise, the above expression would give a runtime error. For this specific case, the step size does not need to be used as only one ray will be displayed at `minHorizontalAngle` and `minVerticalAngle`.\r\n\r\nFor all other cases, this expression would be required to calculate step size.', 'comment_created': datetime.datetime(2020, 6, 30, 20, 52, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 448689183, 'comment_body': 'cool got it, that makes sense. This looks good to me.', 'comment_created': datetime.datetime(2020, 7, 2, 0, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 448693426, 'comment_body': ""windows build is failing due to the `setMaterial` calls in this function as windows is using a newer version of ogre. Looks like ogre deprecated this API in version 1.10.8 in favor of the overloaded `setMaterial(MaterialPtr &)` function, see [here](https://github.com/OGRECave/ogre/blob/v1.10.8/OgreMain/include/OgreSimpleRenderable.h#L77). Can you add a check for OGRE_VERSION and use the string version if version is <= 1.10.8? here's an example: https://github.com/ignitionrobotics/ign-rendering/blob/master/ogre/src/OgreRenderEngine.cc#L99"", 'comment_created': datetime.datetime(2020, 7, 2, 1, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 448694453, 'comment_body': ""the `override` keyword is correct and the right thing to do. It's however producing warnings on [homebrew build](https://build.osrfoundation.org/job/ignition_rendering-ci-pr_any-homebrew-amd64/735/warnings10Result/new/). To resolve the warnings, we need to add the keyword to other functions, which would end up increasing the size of this PR. Let's remove `override` in this PR so we can get a clean homebrew build, and we can create a separate PR to fix these warnings later."", 'comment_created': datetime.datetime(2020, 7, 2, 1, 12, 21, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 450444062, 'comment_body': 'This returns an `ignition::rendering::MaterialPtr` object but `setMaterial` expects an `Ogre::MateiralPtr` object. So windows build is still failing, see [console](https://build.osrfoundation.org/job/ign_rendering-pr-win/835/console) output\r\n\r\nYou\'ll need to get the material using ogre\'s material manager:\r\n\r\n```\r\nOgre::MaterialPtr mat = Ogre::MaterialManager::getSingleton().getByName(""Lidar/BlueStrips"");\r\n```', 'comment_created': datetime.datetime(2020, 7, 6, 19, 48, 41, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}]","[{'commit_sha': '898c3fefd43c603daa400426f99b2228012154b7', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25a496d0953f2637b71865efe63d306c134535a5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b13eca30a3a6c4a30dc535b79e9234b3fdaf7e20', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c179b057e6a76cac485f1720bac1dcc4030cd030', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9778be7ee015943852a1c21eca6551293307753c', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e13ad2a37e9d0062d49d0fcf6a4f5bd613f8877', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b8400aeb7937cdbce36261f0ad7b85ea88b10d6', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca86a29d73134c986941154893028c6136975711', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1399886580e6f2fa6c6cea1685c0e0a579663e7b', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a16a92f14c69de9ab3ed0750413965df90e69c6e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c9caab67e9eb5c6f968dc7a7c673d0583d3996f', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73c11acd01f04989d67752bee0a28157aa44be91', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06efb7164bbe2c9c8d4a4cd5484b17cd11643163', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f19fcd970cfd7bfd69a3db2a97cac04c358753e6', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99ea68136ae5a01a6315e912a35dc3495d286444', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fb999321e010965c43400aff4cb80ff5159ac0d', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aec8a6ebfc479f6e4b4d3d0b55cff1dc7bc47cc', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9496eb997f6a58a0adaef76dc896cec56dfebbaf', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d09444afa103d4ae8317d32b544756bd58966c', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '690e0b80357f0a201db16ea8a2efec07adf75f2e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7221f7e7d9e34155c447c5d9ebdbf0f04c7339ae', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a00e476517e7cb06a7f00a809ce6c8d0cd483cd3', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eb41ccb4d246dc0693be8a531fa11712dae23b0', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '025d1802adc63c0e943d7fa358f32aa18903159c', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9115a53e0efb94aeb007167c4acb4d3eb8012411', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4bf6b467a0b083ba7a8475ee057b0368d5ca5e3', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c3bbfc54a584e660ca642e757d2cad87d2e0088', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5567267b5dd17dfef03ec00a5b533d30961b05b5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551c2235a990d46b8fa566d7cd7acf1790ee247d', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7cd2f6e9e0a4ac5d2563a5e90076460b2c121b3', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c3cfa17b35ff2259c71e69890313192d026a45b', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea26a2bdc90981410cbd0cbcfe5de249df6f2a6e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7da4f4387104e7a9c76f8bce5c7a91b58601a7c', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75c2fbf92560ee5a15f8b126bed0f5c3550ed066', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
447873443,Add types for lidar visual,"Added points and lines to the lidar visual. Additional API to display only those points that are hitting is also added.

Please see issue [ignitionrobotics/ign-rendering#84](ignitionrobotics/ign-rendering#84).

![POINTS2](https://user-images.githubusercontent.com/27280479/87242765-52dd9280-c44d-11ea-9d6a-903566595ffc.png)
![POINTS1](https://user-images.githubusercontent.com/27280479/87242766-53762900-c44d-11ea-8685-7b108e272f88.png)
![RAY2](https://user-images.githubusercontent.com/27280479/87242767-540ebf80-c44d-11ea-8062-c36244fd167e.png)
![RAY1](https://user-images.githubusercontent.com/27280479/87242772-625cdb80-c44d-11ea-91ba-9f733159cad1.png)
",True,114,https://api.github.com/repos/gazebosim/gz-rendering/pulls/114,https://github.com/gazebosim/gz-rendering/pull/114,closed,591,133,15,17,2,23,1,0,[{'name': 'ðŸ”® dome'}],2020-07-12 09:12:38+00:00,2020-07-22 04:16:18+00:00,846220.0,"9 days, 19:03:40","[{'comment_id': 453968286, 'comment_body': 'update doxygen comment', 'comment_created': datetime.datetime(2020, 7, 13, 22, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453970325, 'comment_body': ""You'll need to use `Ogre::MaterialManager` like [here](https://github.com/ignitionrobotics/ign-rendering/pull/103/files#diff-774fb867ada2642609f3037231117bb2R188)"", 'comment_created': datetime.datetime(2020, 7, 13, 22, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453971489, 'comment_body': 'same comment as before. Need to use `Ogre::MaterialManager`', 'comment_created': datetime.datetime(2020, 7, 13, 22, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453979602, 'comment_body': ""The Update function is getting long with a bit of duplicate code. Can the logic for triangle strips be merged with lines since the strips visualization method also includes drawing lines? \r\n\r\nSame for the code for setting materials above. We could refactor that out to a different function if that's possible.\r\n\r\n"", 'comment_created': datetime.datetime(2020, 7, 13, 22, 26, 49, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453979952, 'comment_body': 'when `displayNonHitting` is set to `false`, could we just not draw the `noHitRayStrips`?', 'comment_created': datetime.datetime(2020, 7, 13, 22, 27, 29, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453986700, 'comment_body': 'and can we keep the color consistent as other visualization type? i.e. blue. Note that we should also make the material configurable by the user by overriding the `SetMaterial` function. This can come later in a separate PR.', 'comment_created': datetime.datetime(2020, 7, 13, 22, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453988929, 'comment_body': 'can you add some key press handling in GlutWindow.cc to let users toggle between different visualization types?', 'comment_created': datetime.datetime(2020, 7, 13, 22, 43, 26, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 453989144, 'comment_body': ""I left a comment below; let's see if we can make this work"", 'comment_created': datetime.datetime(2020, 7, 13, 22, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 454147337, 'comment_body': ""In this case, not drawing noHitRay Strips, will not help as the rayStrips will form a large triangle across the multiple hitting points, covering the middle area. I'll rewrite this part to avoid this behaviour.."", 'comment_created': datetime.datetime(2020, 7, 14, 7, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 454435501, 'comment_body': 'Can you please check the updated code. I have somewhat merged it together.', 'comment_created': datetime.datetime(2020, 7, 14, 15, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 455419474, 'comment_body': 'extra bracket here', 'comment_created': datetime.datetime(2020, 7, 15, 23, 20, 15, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 455419835, 'comment_body': 'yep that looks fine', 'comment_created': datetime.datetime(2020, 7, 15, 23, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 458216877, 'comment_body': '```suggestion\r\n    prevUpdateTime = std::chrono::duration_cast<std::chrono::microseconds>(\r\n        g_time).count();\r\n```', 'comment_created': datetime.datetime(2020, 7, 21, 16, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 458217060, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 7, 21, 16, 9, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 458217170, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 7, 21, 16, 9, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 458217479, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 7, 21, 16, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 458225804, 'comment_body': 'Document arguments', 'comment_created': datetime.datetime(2020, 7, 21, 16, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 458341751, 'comment_body': '[windows CI](https://build.osrfoundation.org/job/ign_rendering-pr-win/856/console) caught a build error here. This needs to be:\r\n\r\n```\r\n            Ogre::MaterialPtr mat = \r\n                Ogre::MaterialManager::getSingleton().getByName(\r\n                ""Lidar/BlueRay"");\r\n\r\n```', 'comment_created': datetime.datetime(2020, 7, 21, 19, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 458341943, 'comment_body': 'same change is needed here. Need to declare `mat`', 'comment_created': datetime.datetime(2020, 7, 21, 19, 39, 3, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 458342010, 'comment_body': 'same here', 'comment_created': datetime.datetime(2020, 7, 21, 19, 39, 11, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 458342143, 'comment_body': 'another one', 'comment_created': datetime.datetime(2020, 7, 21, 19, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 458521532, 'comment_body': ""@iche033 I think only this one needs the declaration. The others above are in the same namespace so the variable can be reused. I've pushed the edit for the same."", 'comment_created': datetime.datetime(2020, 7, 22, 4, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'mihirk284', 'type': 'User'}, {'comment_id': 458523945, 'comment_body': '[new build](https://build.osrfoundation.org/job/ign_rendering-pr-win/858/) looks good!', 'comment_created': datetime.datetime(2020, 7, 22, 4, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}]","[{'commit_sha': '7e0f31dccc8a2fb1ffa9840e2b551f907389c502', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca80ab1377062d2dd57bf1944c63315b48be0fb1', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eadd0da19d9c0b3b89778c41ac92a2714a97967', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0dd066adccae47eb804f43947429d0733007056', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d12f1da8b620c2853caaee93d93cb5c562b3bb', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a34ff4133e9bba472755f10024df230155b59af', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2d72d2502523787977d418828537ee814d859a', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce5af20c5b93ddc6d3c5cf1ff6c70ea7ad020cab', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb21fa455e7bcd36f453e4651e3d7b87aca42bb9', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cea60051e29017ccf253cd9e009dddd9791f73e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '882539f32a68180e4949dd6380e36acdf7adb27a', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc482461e4e10c909bf7ba840b05bcdee2811112', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3296d4ca462da56400c7dcfe9f6d76daa4df245a', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ab331798951b6fd25b64b52846e066efd3d7b1e', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14f68a1c18588cb62568dc061f0401b262e2748c', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa37115fddf09c12a3392a17c2651ec698fee6ee', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9be898ea7844934a36806d5366ea77bab9f26921', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
466001695,Add LidarVisual point colors for Ogre1,"@iche033  Please refer to this PR for point color material and implementation, Thanks

EDIT:- adding image
![image](https://user-images.githubusercontent.com/27280479/89886686-ab3db680-dbea-11ea-98e0-3f0c42076f27.png)

To use this you can do the following :-
`lidarPointer->SetPoints(points_vector, colors_vector);`",True,124,https://api.github.com/repos/gazebosim/gz-rendering/pulls/124,https://github.com/gazebosim/gz-rendering/pull/124,closed,125,19,7,6,1,4,1,0,[{'name': 'ðŸ”® dome'}],2020-08-11 10:01:00+00:00,2020-08-19 22:27:57+00:00,736017.0,"8 days, 12:26:57","[{'comment_id': 469481292, 'comment_body': 'we should keep the color consistent and set it to the same color as `Lidar/BlueRay`.', 'comment_created': datetime.datetime(2020, 8, 12, 19, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 469482366, 'comment_body': 'can you add a note here that it currently only affects lidar visuals with type `LVT_POINTS`?', 'comment_created': datetime.datetime(2020, 8, 12, 19, 13, 20, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 469486250, 'comment_body': ""optimization suggestion: can you move the `Ogre::MaterialManager::getSingleton().getByName` calls outside the for loop so we don't have to search for the material every iteration of the loop.\r\n\r\nsame for the other materials like `Lidar/BlueStrips`, `Lidar/TransBlack`, `Lidar/LightBlueStrips`"", 'comment_created': datetime.datetime(2020, 8, 12, 19, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 472411134, 'comment_body': 'do you need an unsigned long? vector `size()` returns `size_t` which is an unsigned integer\r\n\r\nthis should work\r\n\r\n```\r\n for (unsigned int i = 0u; i < this->dataPtr->lidarPoints.size(); ++i)\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 18, 53, 23, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}]","[{'commit_sha': 'cfa9f8d72d211a6699bead115c6e185eaebea7d5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c48542a8e1752665f3378b200eb1872458df34a6', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7faf3b4473ddd0d649bc4816a146177ee474d46', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0519d7b1d1b89780e21265d2d877db98d844fc5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67da929cd20da5f7e788da9a48efe6d43f5d6327', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c6393c173ce6dd8a0025eb99365c72f661a9c36', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65
470904186,Visualize Lidar Plugin for ign-gazebo,"@ahcorde Can you please review it.

This PR integrates the LidarVisual from ignition rendering into ign-gazebo. Options are provided to select the visual type, the subscribed topic and to display or ignore lidar rays that do not hit an obstacle.

![Example1](https://user-images.githubusercontent.com/27280479/91079010-1bbfeb00-e661-11ea-8de9-9d9b75055d1e.gif)
",True,301,https://api.github.com/repos/gazebosim/gz-sim/pulls/301,https://github.com/gazebosim/gz-sim/pull/301,closed,1277,0,7,12,7,20,3,0,"[{'name': 'enhancement'}, {'name': 'ðŸ”® dome'}, {'name': 'beta'}]",2020-08-20 13:17:05+00:00,2020-09-23 01:10:08+00:00,2893983.0,"33 days, 11:53:03","[{'comment_id': 473965833, 'comment_body': 'review the documentation here and below', 'comment_created': datetime.datetime(2020, 8, 20, 13, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 473966883, 'comment_body': 'remove white line', 'comment_created': datetime.datetime(2020, 8, 20, 13, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 473966950, 'comment_body': 'remove white line', 'comment_created': datetime.datetime(2020, 8, 20, 13, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 473967786, 'comment_body': '```suggestion\r\n      <uri>https://fuel.ignitionrobotics.org/1.0/openrobotics/models/Playground</uri>\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 13, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 474300537, 'comment_body': 'most of these headers are not needed. Can you remove the ones not used?', 'comment_created': datetime.datetime(2020, 8, 20, 22, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474300828, 'comment_body': 'initialize the min max range variables to 0.0', 'comment_created': datetime.datetime(2020, 8, 20, 22, 11, 52, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474301552, 'comment_body': 'nit: bracket on new line', 'comment_created': datetime.datetime(2020, 8, 20, 22, 13, 46, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474301841, 'comment_body': '`this->dataPtr->visualType =` on new line with two space indentation', 'comment_created': datetime.datetime(2020, 8, 20, 22, 14, 38, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474304301, 'comment_body': '`break` here?', 'comment_created': datetime.datetime(2020, 8, 20, 22, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474305498, 'comment_body': '`if (success)`', 'comment_created': datetime.datetime(2020, 8, 20, 22, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474305586, 'comment_body': '`if (!foundChild)`', 'comment_created': datetime.datetime(2020, 8, 20, 22, 25, 10, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474305779, 'comment_body': '`auto i = 0ul` -> `size_t i = 0u`', 'comment_created': datetime.datetime(2020, 8, 20, 22, 25, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474306813, 'comment_body': 'I think the logic in this block assumes the model > link > sensor hierarchy? \r\n\r\nWe also support nested models, i.e.g model > model > link > sensor, in which case the logic above may not work?', 'comment_created': datetime.datetime(2020, 8, 20, 22, 28, 40, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474307758, 'comment_body': '`lidar visual plugin` -> `visualize lidar plugin`?', 'comment_created': datetime.datetime(2020, 8, 20, 22, 31, 31, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 474311238, 'comment_body': ""I don't see the visual destroyed? we need to be careful not to leave any dangling visuals around when the plugin exits"", 'comment_created': datetime.datetime(2020, 8, 20, 22, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 475891487, 'comment_body': 'you should be able to call `this->dataPtr->lidar->SetVisible(false)` to make it invisible, which is a faster operation than clearing all the lidar data. Same for re-enabling the lidar visual display below', 'comment_created': datetime.datetime(2020, 8, 24, 21, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 475894060, 'comment_body': 'following up on this, we should destroy the visual when the user closes the plugin, i.e.  by clicking on `X` in the corner of the plugin window. Currently I see that lidar visual remains in the scene after exiting the plugin, and when I open the same plugin again, a duplicate lidar visual gets created.', 'comment_created': datetime.datetime(2020, 8, 24, 21, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 483425495, 'comment_body': 'Remove these lines and below', 'comment_created': datetime.datetime(2020, 9, 4, 6, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 483426492, 'comment_body': 'you can remove this line, right?', 'comment_created': datetime.datetime(2020, 9, 4, 7, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 492426517, 'comment_body': ""There's a macOS job warning here:\r\n\r\n`'eventFilter' overrides a member function but is not marked 'override'`\r\n\r\n```suggestion\r\n    public: bool eventFilter(QObject *_obj, QEvent *_event) override;\r\n```"", 'comment_created': datetime.datetime(2020, 9, 22, 1, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'chapulina', 'type': 'User'}]","[{'commit_sha': 'db9b7f4cb17a7aec556b5b2b37f403489de588bd', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b83885b17cbec6f0f703f74c0e7a1982272fa22', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb9e9a7670f73d5441ce596115313bbf5e71a8db', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43f9b6bf300fe69f4524bc3adf9f66f9eff7a5f5', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd3499603d5ad25fb815e0075204bcc66bc3e8b0', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65baf211e64c917b3b2ea226f85b9452fb30024d', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42d221dd35c5f07a99038f9ec64e39268d837105', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b95e986cd23614166061b85c3a8eb6ea26132d3f', 'committer_username': 'chapulina', 'committer_name': 'Louise Poubel', 'committer_email': None, 'commit_date': datetime.datetime(2013, 10, 22, 22, 20, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da0f3e02f2776cfb667740e5a4b6edce2f876444', 'committer_username': 'chapulina', 'committer_name': 'Louise Poubel', 'committer_email': None, 'commit_date': datetime.datetime(2013, 10, 22, 22, 20, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f646ef296dc359278a8b036115d83527f3ab10f1', 'committer_username': 'chapulina', 'committer_name': 'Louise Poubel', 'committer_email': None, 'commit_date': datetime.datetime(2013, 10, 22, 22, 20, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '310a4176e3757a1a6df9eadb78248b6100a4e350', 'committer_username': 'mihirk284', 'committer_name': 'Mihir Kulkarni', 'committer_email': 'mihirk284@gmail.com', 'commit_date': datetime.datetime(2017, 4, 11, 10, 40, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f241a8eaa602d375ba85cd491eaf4ee01c75ef', 'committer_username': 'chapulina', 'committer_name': 'Louise Poubel', 'committer_email': None, 'commit_date': datetime.datetime(2013, 10, 22, 22, 20, 7, tzinfo=datetime.timezone.utc)}]",Mihir Kulkarni,27280479,mihirk284@gmail.com,User,,42,,101,65

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
255865342,gz-rendering,gazebosim/gz-rendering,C++,50,54,11,68,2596,114,96,3,"[{'id': 475242656, 'number': 133, 'closed': datetime.datetime(2020, 9, 1, 8, 4, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 28, 7, 42, 18, tzinfo=datetime.timezone.utc), 'time_taken': 346920.0, 'time_delta': '4 days, 0:22:00', 'additions': 36, 'deletions': 0, 'state': 'closed'}, {'id': 473781808, 'number': 132, 'closed': datetime.datetime(2020, 8, 26, 22, 50, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 9, 36, 47, tzinfo=datetime.timezone.utc), 'time_taken': 47605.0, 'time_delta': '13:13:25', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 466001695, 'number': 124, 'closed': datetime.datetime(2020, 8, 19, 22, 27, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 10, 1, tzinfo=datetime.timezone.utc), 'time_taken': 736017.0, 'time_delta': '8 days, 12:26:57', 'additions': 125, 'deletions': 19, 'state': 'closed'}, {'id': 464078627, 'number': 121, 'closed': datetime.datetime(2020, 8, 6, 17, 40, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 14, 52, 15, tzinfo=datetime.timezone.utc), 'time_taken': 10069.0, 'time_delta': '2:47:49', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 454933824, 'number': 116, 'closed': datetime.datetime(2020, 8, 5, 3, 53, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 7, 26, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1196851.0, 'time_delta': '13 days, 20:27:31', 'additions': 473, 'deletions': 49, 'state': 'closed'}, {'id': 447873443, 'number': 114, 'closed': datetime.datetime(2020, 7, 22, 4, 16, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 9, 12, 38, tzinfo=datetime.timezone.utc), 'time_taken': 846220.0, 'time_delta': '9 days, 19:03:40', 'additions': 591, 'deletions': 133, 'state': 'closed'}, {'id': 437441306, 'number': 103, 'closed': datetime.datetime(2020, 7, 8, 0, 28, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 17, 52, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1492544.0, 'time_delta': '17 days, 6:35:44', 'additions': 2660, 'deletions': 0, 'state': 'closed'}, {'id': 437432168, 'number': 102, 'closed': datetime.datetime(2020, 6, 20, 17, 52, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 16, 28, 52, tzinfo=datetime.timezone.utc), 'time_taken': 5037.0, 'time_delta': '1:23:57', 'additions': 2036, 'deletions': 0, 'state': 'closed'}]"
255865265,gz-sim,gazebosim/gz-sim,C++,253,651,17,136,6994,329,174,24,"[{'id': 470904186, 'number': 301, 'closed': datetime.datetime(2020, 9, 23, 1, 10, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 13, 17, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2893983.0, 'time_delta': '33 days, 11:53:03', 'additions': 1277, 'deletions': 0, 'state': 'closed'}]"
254437947,subt,osrf/subt,C++,99,301,26,53,2747,95,28,15,"[{'id': 717080262, 'number': 1002, 'closed': datetime.datetime(2021, 11, 5, 20, 58, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 3, 9, 45, tzinfo=datetime.timezone.utc), 'time_taken': 6630547.0, 'time_delta': '76 days, 17:49:07', 'additions': 3090, 'deletions': 0, 'state': 'closed'}, {'id': 488202464, 'number': 611, 'closed': datetime.datetime(2020, 12, 11, 22, 49, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 16, 19, 35, 8, tzinfo=datetime.timezone.utc), 'time_taken': 7442076.0, 'time_delta': '86 days, 3:14:36', 'additions': 6268, 'deletions': 0, 'state': 'closed'}, {'id': 461317911, 'number': 518, 'closed': datetime.datetime(2020, 8, 6, 14, 20, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 1, 18, 29, 14, tzinfo=datetime.timezone.utc), 'time_taken': 417081.0, 'time_delta': '4 days, 19:51:21', 'additions': 7161, 'deletions': 0, 'state': 'closed'}]"
