pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
669086456,Extend `cilium config` to expose all active configurations. Add subcommand `cilium config get` to get configurations from CLI,"Fixes: #13913 

For `cilium config get <config_name>` configuration name should be in kebab case. For example `EncryptNode`, So we can get its value by `cilium config get encrypt-node`. Add flag -r to display read-only configurations. 

Test-image : `docker.io/h3llix/cilium-dev:cilium-config` (if required)

![image](https://user-images.githubusercontent.com/55123900/127231087-7128e308-62ea-410e-a917-a3179de3c188.png)
![image](https://user-images.githubusercontent.com/55123900/127231252-6c2f91c7-2170-44b8-a4ca-261a010c8ff5.png)
![image](https://user-images.githubusercontent.com/55123900/127231287-92e38f39-31e7-4dce-b5f1-aa286e6ca778.png)


",True,16519,https://api.github.com/repos/cilium/cilium/pulls/16519,https://github.com/cilium/cilium/pull/16519,closed,308,90,22,3,10,59,2,1,"[{'name': 'release-note/minor'}, {'name': 'ready-to-merge'}]",2021-06-13 17:15:03+00:00,2021-09-03 16:13:15+00:00,7081092.0,"81 days, 22:58:12","[{'comment_id': 655555739, 'comment_body': 'Looks like this newline was added by mistake.', 'comment_created': datetime.datetime(2021, 6, 21, 16, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 655556116, 'comment_body': 'What is this change?', 'comment_created': datetime.datetime(2021, 6, 21, 16, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 655704273, 'comment_body': 'We should try and align the values as much as possible.', 'comment_created': datetime.datetime(2021, 6, 21, 21, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 668633849, 'comment_body': 'I am not sure if I made any change here. But on rechecking it seems my editor formatted that.', 'comment_created': datetime.datetime(2021, 7, 13, 10, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 668634351, 'comment_body': 'Need some suggestions here. Viper is also using the same flag name. Here: https://github.com/cilium/cilium/blob/d5ff6879dbc50de93cde07b4e6c87f2581106f34/pkg/option/config.go#L2496 And all the Configurations need to be public.', 'comment_created': datetime.datetime(2021, 7, 13, 10, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 668691640, 'comment_body': 'I will also fix the description here.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 54, 50, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 672406955, 'comment_body': 'Rename the function name with `K8sServiceProxyNameValue`', 'comment_created': datetime.datetime(2021, 7, 19, 15, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aanm', 'type': 'User'}, {'comment_id': 672407535, 'comment_body': 'nit, this could be renamed to `IPv4NativeRoutingCIDR` (instead of `Ipv4NativeRoutingCIDR`)', 'comment_created': datetime.datetime(2021, 7, 19, 15, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'aanm', 'type': 'User'}, {'comment_id': 672408862, 'comment_body': '`key` is already a string so this line does not seem to be necessary.', 'comment_created': datetime.datetime(2021, 7, 19, 15, 34, 41, tzinfo=datetime.timezone.utc), 'commenter': 'aanm', 'type': 'User'}, {'comment_id': 672410467, 'comment_body': 'What guarantees do we have that `v` is always capable of being cast to `map[string]interface{}`? Might be worth checking if we can do it before doing this for-loop with `map, ok := v.(map[string]interface{}); if ok { do for loop }`', 'comment_created': datetime.datetime(2021, 7, 19, 15, 36, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aanm', 'type': 'User'}, {'comment_id': 672412263, 'comment_body': 'minor nit: `Copyright 2017-2018` -> `Copyright 2021`', 'comment_created': datetime.datetime(2021, 7, 19, 15, 38, 45, tzinfo=datetime.timezone.utc), 'commenter': 'aanm', 'type': 'User'}, {'comment_id': 672493221, 'comment_body': 'Yes sure, Also do we really need these public functions to return config value from the struct? The reason I am asking this is that  we are already making the configurations public.\r\n', 'comment_created': datetime.datetime(2021, 7, 19, 17, 28, 36, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 672528927, 'comment_body': ' I used that variable name purposefully because there was a function with the same name which was being called with `DaemonConfig` struct. Now, I just changed the function name.', 'comment_created': datetime.datetime(2021, 7, 19, 18, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 673149157, 'comment_body': 'if !ok we should print an warning / error stating that.', 'comment_created': datetime.datetime(2021, 7, 20, 13, 59, 1, tzinfo=datetime.timezone.utc), 'commenter': 'aanm', 'type': 'User'}, {'comment_id': 673564664, 'comment_body': 'To make sure that errors are separated from the output from the tool, please consider printing errors to stderr like this:\r\n\r\n```suggestion\r\n\t\t\t\t\tfmt.Fprint(os.Stderr, ""Error: cannot cast daemon config map to map[string]interface{}\\n"")\r\n```\r\n\r\nThis can be helpful to ensure that the tool plays well with other unix tools (`grep`, etc.).', 'comment_created': datetime.datetime(2021, 7, 20, 23, 49, 25, tzinfo=datetime.timezone.utc), 'commenter': 'joestringer', 'type': 'User'}, {'comment_id': 673568165, 'comment_body': 'You might consider making this one `Fatalf()` as well. The user requested ""please give me configuration `foo`"", but if we can\'t satisfy that request then it probably makes sense to return an error return value on the CLI. This way, anything that calls this CLI can know whether the operation successfully retrieved the value, or failed to retrieve the value just based on the exit code.', 'comment_created': datetime.datetime(2021, 7, 20, 23, 59, 36, tzinfo=datetime.timezone.utc), 'commenter': 'joestringer', 'type': 'User'}, {'comment_id': 673569527, 'comment_body': 'nit: Why is this rename necessary? The new name seems more confusing than the current name.', 'comment_created': datetime.datetime(2021, 7, 21, 0, 3, 11, tzinfo=datetime.timezone.utc), 'commenter': 'joestringer', 'type': 'User'}, {'comment_id': 673570397, 'comment_body': 'I realize that the existing code already did this, but we should really do better handling on these errors to print the problem:\r\n\r\n```suggestion\r\n\t\t\t\tFatalf(err)\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 0, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'joestringer', 'type': 'User'}, {'comment_id': 673572603, 'comment_body': ""I don't think that these `k8s-configuration`, `k8s-endpoint` options are read/write. In fact in my minikube they don't even print anything:\r\n\r\n```\r\n# cilium config \r\nConntrack                Enabled\r\nConntrackAccounting      Enabled\r\nConntrackLocal           Disabled\r\nDebug                    Disabled\r\nDebugLB                  Disabled\r\nDropNotification         Enabled\r\nMonitorAggregationLevel  Medium\r\nPolicyAuditMode          Disabled\r\nPolicyTracing            Disabled\r\nPolicyVerdictNotification Enabled\r\nTraceNotification        Enabled\r\nk8s-configuration        \r\nk8s-endpoint             \r\nPolicyEnforcement        default\r\n```\r\n\r\nWe can at least put them in the read-only section, or if someone knows we don't need them, maybe even remove them."", 'comment_created': datetime.datetime(2021, 7, 21, 0, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'joestringer', 'type': 'User'}, {'comment_id': 673572837, 'comment_body': ""I don't think that this `MonitorNumPages` option is read/write either. "", 'comment_created': datetime.datetime(2021, 7, 21, 0, 12, 50, tzinfo=datetime.timezone.utc), 'commenter': 'joestringer', 'type': 'User'}, {'comment_id': 674146593, 'comment_body': 'Hey @joestringer. Thanks for the review! Actually, there was a field name `k8sServiceProxyName` which had to be made public for reflections to work. As well there was already a function named `K8sServiceProxyName` to get the value from the struct. So @aanm asked me to change the function name to `K8sServiceProxyNameValue`.', 'comment_created': datetime.datetime(2021, 7, 21, 16, 27, 23, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 674147078, 'comment_body': 'Maybe we can rename it to `GetK8sServiceProxyName`.', 'comment_created': datetime.datetime(2021, 7, 21, 16, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 674148584, 'comment_body': ""Yes, I'll make the necessary changes. For now, I will put them in the read-only section."", 'comment_created': datetime.datetime(2021, 7, 21, 16, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 674152379, 'comment_body': '@joestringer Can we have a small discussion with someone about the unnecessary fields in the cli output?', 'comment_created': datetime.datetime(2021, 7, 21, 16, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 674159228, 'comment_body': ""Aha, it was the reflection piece that made it necessary, I see. Reading through I couldn't tell what it conflicted with since the conflicting name isn't touched in this PR at all (maybe because it's already public?).\r\n\r\nIn this case, I mildly prefer `GetK8sServiceProxyName` but it doesn't make that big of a difference. Don't worry about it :) "", 'comment_created': datetime.datetime(2021, 7, 21, 16, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'joestringer', 'type': 'User'}, {'comment_id': 674161600, 'comment_body': ""@h3llix I've started a thread here around it: https://cilium.slack.com/archives/C2B917YHE/p1626885955046300\r\n\r\nMaybe it's just a bug that we used to print some k8s information for these two fields, but we no longer print it. For now I'm OK with just moving these to read-only, we can work on getting this PR into the tree. Later on if you or others are interested into digging more into why those fields are not printing anything, we can investigate more."", 'comment_created': datetime.datetime(2021, 7, 21, 16, 47, 29, tzinfo=datetime.timezone.utc), 'commenter': 'joestringer', 'type': 'User'}, {'comment_id': 675041705, 'comment_body': ""If `ok` is `false` above then this line will run. That doesn't seem right. I would recommend putting this in an `else` statement."", 'comment_created': datetime.datetime(2021, 7, 22, 17, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nathanjsweet', 'type': 'User'}, {'comment_id': 677438470, 'comment_body': 'Sorry for the delay. Thanks for pointing that out. I will put a fix.', 'comment_created': datetime.datetime(2021, 7, 27, 13, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 680215942, 'comment_body': 'This change still needs to be reverted.', 'comment_created': datetime.datetime(2021, 7, 30, 21, 0, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680217621, 'comment_body': 'The `if indented {...} else {...}` could be moved to line 388, to simplify the code here. Basically, you\'d have only:\r\n```go\r\nformatStr := ""%-34s: %s\\n""\r\nif indented {\r\n    formatStr = ""\\t%-26s: %s\\n""\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 21, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680219963, 'comment_body': 'The contents of this else if block has gotten a lot more complex. I think it would be worth moving it to its own dedicated function.', 'comment_created': datetime.datetime(2021, 7, 30, 21, 10, 48, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680220955, 'comment_body': '```suggestion\r\n\t\t\t\t\tos.Exit(1)\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 21, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680221540, 'comment_body': '```suggestion\r\n\t\t\tfmt.Print(""### Read-Only Configurations ###\\n"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 21, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680221815, 'comment_body': 'Nit:\r\n```suggestion\r\n\t\t\tfmt.Print(""##### Read-Write Configurations #####\\n"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 21, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680223065, 'comment_body': ""Why was this option made read-only? (It's the size of the perf ring buffer we use to send notifications to the agent.)"", 'comment_created': datetime.datetime(2021, 7, 30, 21, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680224306, 'comment_body': ""nit: It's slightly odd to remove the return from after the if/else check and only add the `return` inside one of the `if` / `else` statements, maybe the return should just remain at the end like it was before?\r\n\r\nThere's a similar thing happening on lines 83, 88. Both sides of the conditional statement execute `return`, so there could just be one `return` statement after the `if`/`else` rather than two.\r\n\r\nFunctionally there's no difference though and this code is not likely to break in future because the `return`s are in unusual places so I'm OK to just let this be."", 'comment_created': datetime.datetime(2021, 7, 30, 21, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'joestringer', 'type': 'User'}, {'comment_id': 680224447, 'comment_body': ""Wouldn't `[^\\w]` work here?\r\n\r\nCould you also rename the variable to better clarify its purpose?"", 'comment_created': datetime.datetime(2021, 7, 30, 21, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680225507, 'comment_body': '```suggestion\r\n\t\t\tFatalf(""Configuration does not exist"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 21, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680226094, 'comment_body': ""Could you add a small comment to explain what is being done on lines 36 and 53 to 58? We've talked about it, so it's clear to me, but it may come as a bit strange to others."", 'comment_created': datetime.datetime(2021, 7, 30, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680227235, 'comment_body': 'I think we should also make `configName` lower case. Otherwise, you may end up with users trying and failing at:\r\n```\r\n$ cilium config get IPAM\r\nError: Configuration does not exist\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 21, 28, 57, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680228162, 'comment_body': 'This function should be in `endpoint_config_get.go` since it appears to only be used there.', 'comment_created': datetime.datetime(2021, 7, 30, 21, 31, 3, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680232494, 'comment_body': 'I actually reverted this once in one of my previous commits. But I remember the tests were giving me lint issues with that.', 'comment_created': datetime.datetime(2021, 7, 30, 21, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 685518786, 'comment_body': 'Can you try again and share the lint issues? Maybe those were on master and it was fixed since then.', 'comment_created': datetime.datetime(2021, 8, 9, 21, 2, 26, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 685912314, 'comment_body': '@pchaigno I just added a test commit to check if it fails\r\n', 'comment_created': datetime.datetime(2021, 8, 10, 10, 57, 59, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 688807514, 'comment_body': '```suggestion\r\n\tconfigCmd.Flags().BoolVarP(&listReadOnlyConfigurations, ""read-only"", ""r"", false, ""Display read only configurations"")\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 22, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 688807764, 'comment_body': ""I think we should be using `Fatalf` here like other Cilium commands. Plus, by just exiting, we don't present the error to the user."", 'comment_created': datetime.datetime(2021, 8, 13, 22, 19, 22, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 688807828, 'comment_body': 'Nit: \r\n```suggestion\r\n\tfmt.Println(""#### Read-Only Configurations ####"")\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 22, 19, 40, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 688808831, 'comment_body': '```suggestion\r\n\tfmt.Println(""##### Read-Write Configurations #####"")\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 22, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 688888552, 'comment_body': ""We've switched to a shorter form of putting the license text in each file, see https://github.com/cilium/cilium/blob/master/cilium/cmd/ip.go#L1."", 'comment_created': datetime.datetime(2021, 8, 14, 6, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 688888592, 'comment_body': '```suggestion\r\n\t""github.com/cilium/cilium/pkg/command""\r\n\t""github.com/cilium/cilium/test/helpers""\r\n\t\r\n\t""github.com/spf13/cobra""\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 6, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 688888802, 'comment_body': 'This is actually modifying the 2nd argument. I think you might want to create a new map and return that instead, i.e. `m3`', 'comment_created': datetime.datetime(2021, 8, 14, 6, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 689759363, 'comment_body': '""Cannot print json output"" doesn\'t really mean much to the user. What really is happening is that we cannot show the configuration:\r\n\r\n```suggestion\r\n\t\t\t\tFatalf(""Cannot show configuration: %v"", err)\r\n```', 'comment_created': datetime.datetime(2021, 8, 16, 18, 21, 18, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 689759587, 'comment_body': '```suggestion\r\n\tfmt.Println(""#### Read-only configurations ####"")\r\n```', 'comment_created': datetime.datetime(2021, 8, 16, 18, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 689759841, 'comment_body': '```suggestion\r\n\tfmt.Println(""##### Read-write configurations #####"")\r\n```', 'comment_created': datetime.datetime(2021, 8, 16, 18, 22, 2, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 694185182, 'comment_body': ""You'll need to update the cmdref as well. `make -C Documentation update-cmdref`."", 'comment_created': datetime.datetime(2021, 8, 23, 17, 50, 38, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 694187694, 'comment_body': 'It is still failing. I suggest running `contrib/scripts/check-fmt.sh` locally and adding `-w` to the `gofmt` command to write the result back to the original file. If that is still not working, your Golang version might be out of date and you should consider updating to the latest.', 'comment_created': datetime.datetime(2021, 8, 23, 17, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'christarazi', 'type': 'User'}, {'comment_id': 694333794, 'comment_body': 'Hi @christarazi. Actually the test commit is intentional whose linting is as same as master. I had a conversation with @pchaigno and he wanted to confirm whether those lint issues were on my master or my commits.  ', 'comment_created': datetime.datetime(2021, 8, 23, 21, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 699524869, 'comment_body': 'My real concern with this code change was the new comment. I understand why the other lines have changed given the new comment, but why was this comment added here? It seems unrelated to the other changes in this commit and in this PR.', 'comment_created': datetime.datetime(2021, 8, 31, 17, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 699533025, 'comment_body': ""Ah, eagle's eye. Sorry, I was so careless to ignore that I added a comment by mistake. I'll just fix it."", 'comment_created': datetime.datetime(2021, 8, 31, 17, 26, 57, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}]","[{'commit_sha': '6b709ac40ea2b8e3bb6e2616ed9a92a017912529', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd73262b96d0e7ab82520a7f61ec70bc3031ebd6b', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2beb4c75843396516575819108dd53d8a9757d13', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}]",Gaurav Genani,55123900,,User,,51,,30,62
683237170,Adds new Cilium subcommand: `cilium encrypt status` and `cilium encrypt flush`,"Fixes: #14638 

`cilium encrypt status` displays information on the current status of the IPSec configuration while `cilium encrypt flush` flushes the current XFRM States.

Here is the cli output:
![image](https://user-images.githubusercontent.com/55123900/125293023-a4f71380-e340-11eb-9c3f-5ca7807196db.png)
",True,16770,https://api.github.com/repos/cilium/cilium/pulls/16770,https://github.com/cilium/cilium/pull/16770,closed,470,0,11,3,2,61,3,0,"[{'name': 'release-note/minor'}, {'name': 'ready-to-merge'}, {'name': 'area/encryption'}]",2021-07-04 21:07:56+00:00,2021-08-02 14:05:14+00:00,2480238.0,"28 days, 16:57:18","[{'comment_id': 663719256, 'comment_body': 'Could you please change the year for 2021?', 'comment_created': datetime.datetime(2021, 7, 5, 7, 59, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 663743129, 'comment_body': 'It looks like the implementation is still missing.', 'comment_created': datetime.datetime(2021, 7, 5, 8, 34, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 663766811, 'comment_body': '@rolinh Please see later commits ;-)', 'comment_created': datetime.datetime(2021, 7, 5, 9, 8, 7, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 663780143, 'comment_body': 'I think that `getEncryptionMode` would be a better name since the function may also return the encryption mode for WireGuard.', 'comment_created': datetime.datetime(2021, 7, 5, 9, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 663792239, 'comment_body': ""This might silently fail. I think it'd be nice to a least log errors."", 'comment_created': datetime.datetime(2021, 7, 5, 9, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 663793501, 'comment_body': 'Please, use `regexp.MustCompile` if you know that the regexp is valid. Also, this could be extracted to a global that is evaluated only once at init.', 'comment_created': datetime.datetime(2021, 7, 5, 9, 44, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 663793887, 'comment_body': 'Again, this might silently fail. Please, at least log the error if non-nil.', 'comment_created': datetime.datetime(2021, 7, 5, 9, 45, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 663794350, 'comment_body': 'Ah, indeed, by bad :smile: ', 'comment_created': datetime.datetime(2021, 7, 5, 9, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 664308100, 'comment_body': 'Wireguard is actually always spelled with a capital W and capital G.\r\n```suggestion\r\n\tEncryptionModeWireguard string = ""WireGuard""\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 7, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 664309262, 'comment_body': 'This command actually informs about whether WireGuard, or IPSec are enabled or none.\r\n```suggestion\r\n\tShort: ""Display current state of encryption configurations"",\r\n```', 'comment_created': datetime.datetime(2021, 7, 6, 7, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 664310794, 'comment_body': 'This line should probably be commented out with a comment explaining what should be printed. Printing out `TODO` is not really helpful to the users.', 'comment_created': datetime.datetime(2021, 7, 6, 7, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 664311222, 'comment_body': 'This is IPSec specific, right? What happens when WireGuard or encryption is disabled?', 'comment_created': datetime.datetime(2021, 7, 6, 7, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 664450880, 'comment_body': ""WireGuard won't be supported in the first version of this CLI. See https://github.com/cilium/cilium/issues/14638#issuecomment-871323364."", 'comment_created': datetime.datetime(2021, 7, 6, 10, 56, 3, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666489092, 'comment_body': ""HealthAPI returns enum value as 'wireguard' so i just used the same."", 'comment_created': datetime.datetime(2021, 7, 8, 20, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 666497063, 'comment_body': 'Can we change it to return ""WireGuard""? That would be best.', 'comment_created': datetime.datetime(2021, 7, 8, 20, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666499619, 'comment_body': 'Nit:\r\n```suggestion\r\n\tShort: ""Flushes the current IPsec state"",\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 20, 32, 59, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666503230, 'comment_body': 'We should have a `Long:` description where we also highlight the disruptive effect of that command.', 'comment_created': datetime.datetime(2021, 7, 8, 20, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666504973, 'comment_body': '```suggestion\r\n\tShort: ""Manage transparent encryption"",\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 20, 42, 25, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666505237, 'comment_body': '```suggestion\r\n\tShort: ""Display the current encryption state"",\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 20, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666506388, 'comment_body': 'What is this?', 'comment_created': datetime.datetime(2021, 7, 8, 20, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666507531, 'comment_body': 'I would skip the WireGuard status for now as discussed before. Before adding it, we need to discuss what info would be valuable here with the authors. We can always add it once that discussion happened.', 'comment_created': datetime.datetime(2021, 7, 8, 20, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666508277, 'comment_body': ""Let's remove the TODO comments. If we want to remember to do it later, we can open an issue to track it and not forget."", 'comment_created': datetime.datetime(2021, 7, 8, 20, 48, 6, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666509037, 'comment_body': 'I think this line can be moved to before the `switch` above to be common to all modes, with just:\r\n```go\r\nfmt.Printf(""Encryption:%-26s\\n"", encryptionStatusResponse.Mode)\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 20, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666509492, 'comment_body': '```suggestion\r\n\t\tFatalf(""Failed to read xfrm statistics: %s"", err)\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 20, 50, 9, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666511361, 'comment_body': '```suggestion\r\n\txfrmStates, _ := netlink.XfrmStateList(netlink.FAMILY_ALL)\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 20, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666512622, 'comment_body': 'Ouch! An unchecked error :scream_cat: ', 'comment_created': datetime.datetime(2021, 7, 8, 20, 55, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666516693, 'comment_body': 'To limit the check to Cilium rules, we could filter by the reqID. We always set it to 1: https://github.com/cilium/cilium/blob/v1.10.1/pkg/datapath/linux/ipsec/ipsec_linux.go#L505\r\n```suggestion\r\n\tout, err := exec.Command(""ip"", ""xfrm"", ""state"", ""show"", ""reqid"", CiliumReqId).Output()\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 21, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666519945, 'comment_body': 'Yes sure so should i make the changes in the API or just the CLI output ?\r\n', 'comment_created': datetime.datetime(2021, 7, 8, 21, 8, 46, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 666521178, 'comment_body': ""Let's use formatters for `k` and `v` instead."", 'comment_created': datetime.datetime(2021, 7, 8, 21, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666521861, 'comment_body': 'Nit: missing space after the colons.\r\n```suggestion\r\n\tfmt.Printf(""Keys in use: %-26d\\n"", keys)\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 21, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666526354, 'comment_body': ""Something's missing here. Any last match will be selected as the maximum sequence number, even if 0."", 'comment_created': datetime.datetime(2021, 7, 8, 21, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666528065, 'comment_body': 'Nit:\r\n```suggestion\r\nfunc countUniqueIPsecKeys() int {\r\n```\r\n(See https://github.com/golang/go/wiki/CodeReviewComments#initialisms.)', 'comment_created': datetime.datetime(2021, 7, 8, 21, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666768373, 'comment_body': '@pchaigno do you mean printf or tablewriters ?\r\n', 'comment_created': datetime.datetime(2021, 7, 9, 8, 24, 39, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 666775172, 'comment_body': 'I am using a prebuilt function from `prometheus/procfs` to read xfrm statistics.', 'comment_created': datetime.datetime(2021, 7, 9, 8, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 666783558, 'comment_body': 'I meant `Printf`.', 'comment_created': datetime.datetime(2021, 7, 9, 8, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666783899, 'comment_body': 'Yes, but why is it adding `## explicit` (if you know)?', 'comment_created': datetime.datetime(2021, 7, 9, 8, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666795739, 'comment_body': ""I raised that issue with people more familiar than me with the API and its behavior. We can't change it in the API because it would be a breaking change (it's case sensitive). It probably doesn't matter much here so let's leave it at `Wireguard`. If someone complains about the case, they can always submit a PR to add some ugly code for `Wireguard` -> `WireGuard` before display."", 'comment_created': datetime.datetime(2021, 7, 9, 9, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 666808785, 'comment_body': 'Also, consider pulling in the `models.EncryptionStatusMode` constants defined in the API, instead of re-declaring them:\r\n\r\nhttps://github.com/cilium/cilium/blob/173159664f149e0c6902fee645f0b2204c804f67/api/v1/models/encryption_status.go#L70-L77', 'comment_created': datetime.datetime(2021, 7, 9, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'gandro', 'type': 'User'}, {'comment_id': 667714173, 'comment_body': 'I am not sure but I assume `prometheus` module is required by some other dependency module. But here we are importing it to use explicitly .', 'comment_created': datetime.datetime(2021, 7, 12, 8, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 667715367, 'comment_body': 'I was not sure how to describe the disruptive effect. But however I have added a `Long:` description. Can you suggest some description ?\r\n', 'comment_created': datetime.datetime(2021, 7, 12, 8, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 667738974, 'comment_body': 'I would just add something like: ""Will cause a short connectivity disruption"".', 'comment_created': datetime.datetime(2021, 7, 12, 8, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 668652231, 'comment_body': 'Nit?\r\n```suggestion\r\n\t// Cilium uses reqid 1 to tie the IPsec security policies to their matching state\r\n```', 'comment_created': datetime.datetime(2021, 7, 13, 10, 53, 51, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 668655056, 'comment_body': ""This constant doesn't need to be exposed outside the package, does it?"", 'comment_created': datetime.datetime(2021, 7, 13, 10, 58, 17, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 668691602, 'comment_body': 'nit: this else clause is redundant as `Fatalf` interrupts execution.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 668691647, 'comment_body': 'Note that `NumField` will panic if `v` is not a struct. I think it is OK in this case but it would be best to check the type with `v.Type().Kind()` to be `reflect.Struct`.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 54, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 668692236, 'comment_body': 'nit: redundant else clause', 'comment_created': datetime.datetime(2021, 7, 13, 11, 55, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 668692920, 'comment_body': 'nit: the regexp could be extracted out of the function to only be evaluated once.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rolinh', 'type': 'User'}, {'comment_id': 668701892, 'comment_body': 'I think it would be good to indent those to clearly show they belong to `Errors:`:\r\n```suggestion\r\n\t\t\tfmt.Printf(""\\t%s: %-26d\\n"", k, v)\r\n```', 'comment_created': datetime.datetime(2021, 7, 13, 12, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 669464552, 'comment_body': ""No not needed. I'll make it private."", 'comment_created': datetime.datetime(2021, 7, 14, 9, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 679331148, 'comment_body': 'That parameter looks incorrect and results in the following error:\r\n```\r\n$ ks exec cilium-cmms6 -- cilium encrypt status\r\nDefaulted container ""cilium-agent"" out of: cilium-agent, mount-cgroup (init), clean-cilium-state (init)\r\nEncryption: IPsec                     \r\nKeys in use: 1                         \r\nMax Seq. Number: 0x9/0xffffffff\r\nError: Cannot get a new proc FS: could not read fixtures/proc: stat fixtures/proc: no such file or directory\r\ncommand terminated with exit code 1\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 17, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 679333348, 'comment_body': ""Was this file copied from https://github.com/prometheus/procfs/blob/5162bec877a860b5ff140b5d13db31ebb0643dd3/xfrm_test.go? If that's the case, I think we'll need to retain the copyright notice and add our own copyright."", 'comment_created': datetime.datetime(2021, 7, 29, 17, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 679334096, 'comment_body': 'I think it would be good to also check with 0 and 2 keys.', 'comment_created': datetime.datetime(2021, 7, 29, 17, 5, 20, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 679339466, 'comment_body': 'Was this line added by error? Once I fix the incorrect `/proc` path, I get this:\r\n```\r\n$ ks exec cilium-2kxm9 -- cilium encrypt status\r\nDefaulted container ""cilium-agent"" out of: cilium-agent, mount-cgroup (init), clean-cilium-state (init)\r\nEncryption: IPsec                     \r\nKeys in use: 1                         \r\nMax Seq. Number: 0x1e/0xffffffff\r\nErrors: 0                         \r\nKeys in use: 1                         \r\nMax Seq. Number: 0x1e/0xffffffff\r\nErrors: 0\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 17, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 679340776, 'comment_body': ""If we return `N/A`, we don't want to print the `/0xffffffff` part I think:\r\n```\r\n$ ks exec cilium-2kxm9 -- cilium encrypt status\r\nEncryption: IPsec                     \r\nKeys in use: 0                         \r\nMax Seq. Number: N/A/0xffffffff\r\nErrors: 0\r\n```"", 'comment_created': datetime.datetime(2021, 7, 29, 17, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 679393185, 'comment_body': 'Sorry I just realized a test patch got applied while I was committing. I will fix these.', 'comment_created': datetime.datetime(2021, 7, 29, 18, 32, 26, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 679423769, 'comment_body': 'Hi Paul! Actually this file was generated from fixtures.ttar in the prometheus library using `make tests`. And so just used the values in the function as here https://github.com/prometheus/procfs/blob/5162bec877a860b5ff140b5d13db31ebb0643dd3/xfrm_test.go. Adding copyright notice to the top of the file would cause parsing errors. Any hints on this ?\r\n\r\nExtending my doubt I borrowed the function here https://github.com/h3llix/cilium/commit/c7fb4e64ff382eb0dd461932c861a8a0eae23e38#diff-40188efe162d2c3f2a87bfb4ac62a4fe8e202acc34e15dc44fe5322fb74dad68R42 from netlink library but just modified it a bit(not committed but will update it  in the final patch). So, in this case do I need to change the copyright notice ?\r\n', 'comment_created': datetime.datetime(2021, 7, 29, 19, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 679488084, 'comment_body': ""> Actually this file was generated from fixtures.ttar in the prometheus library using make tests. And so just used the values in the function as here https://github.com/prometheus/procfs/blob/5162bec877a860b5ff140b5d13db31ebb0643dd3/xfrm_test.go. Adding copyright notice to the top of the file would cause parsing errors. Any hints on this ?\r\n\r\nI've generated the following file on my system. You can use it instead of the other.\r\n```\r\nXfrmInError             \t2\r\nXfrmInBufferError       \t0\r\nXfrmInHdrError          \t0\r\nXfrmInNoStates          \t225479\r\nXfrmInStateProtoError   \t141222\r\nXfrmInStateModeError    \t0\r\nXfrmInStateSeqError     \t0\r\nXfrmInStateExpired      \t0\r\nXfrmInStateMismatch     \t0\r\nXfrmInStateInvalid      \t0\r\nXfrmInTmplMismatch      \t0\r\nXfrmInNoPols            \t203389\r\nXfrmInPolBlock          \t0\r\nXfrmInPolError          \t0\r\nXfrmOutError            \t0\r\nXfrmOutBundleGenError   \t0\r\nXfrmOutBundleCheckError \t0\r\nXfrmOutNoStates         \t36162\r\nXfrmOutStateProtoError  \t1886\r\nXfrmOutStateModeError   \t0\r\nXfrmOutStateSeqError    \t0\r\nXfrmOutStateExpired     \t0\r\nXfrmOutPolBlock         \t0\r\nXfrmOutPolDead          \t0\r\nXfrmOutPolError         \t0\r\nXfrmFwdHdrError         \t0\r\nXfrmOutStateInvalid     \t0\r\nXfrmAcquireError        \t0\r\n```\r\n\r\n> Extending my doubt I borrowed the function here h3llix@c7fb4e6#diff-40188efe162d2c3f2a87bfb4ac62a4fe8e202acc34e15dc44fe5322fb74dad68R42 from netlink library but just modified it a bit(not committed but will update it in the final patch). So, in this case do I need to change the copyright notice ?\r\n\r\nYes, you need to add the copyright notice if it's the same license. If it's not the same license, then it may get more complicated."", 'comment_created': datetime.datetime(2021, 7, 29, 21, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 679522177, 'comment_body': 'I just changed the function but Can you just verify that its ok now ?', 'comment_created': datetime.datetime(2021, 7, 29, 22, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 679528048, 'comment_body': 'The file is missing a newline at the end, but other than that it looks okay (including the function).', 'comment_created': datetime.datetime(2021, 7, 29, 22, 34, 7, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}, {'comment_id': 680124068, 'comment_body': 'Thanks! Added a newline as well rebased on latest master.\r\n', 'comment_created': datetime.datetime(2021, 7, 30, 17, 52, 21, tzinfo=datetime.timezone.utc), 'commenter': 'h3llix', 'type': 'User'}, {'comment_id': 680208524, 'comment_body': '```suggestion\r\n\treturn fmt.Sprintf(""%s/0xffffffff"", maxSeqNum)\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 20, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'pchaigno', 'type': 'User'}]","[{'commit_sha': 'fea140e75504700c1558a400cf41362ac349899d', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f88ad6917f05121059a2215deb0a584c4bd5d32', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f8ca5f0026ebe439de96408874e160dc98d01c2', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}]",Gaurav Genani,55123900,,User,,51,,30,62
706366213,[Follow-Up PR]Dump all active configurations from bugtool.,"To be merged after #17099 
",False,17100,https://api.github.com/repos/cilium/cilium/pulls/17100,https://github.com/cilium/cilium/pull/17100,closed,388,96,24,5,1,0,1,4,[{'name': 'dont-merge/needs-release-note-label'}],2021-08-09 09:40:54+00:00,2021-09-03 17:12:27+00:00,2187093.0,"25 days, 7:31:33",[],"[{'commit_sha': '98c6df45d9be0b4c67569dab79777f498338c7c5', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08dfc724a5c776368ebce3bc63f1b731df714ee5', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '026a3b8870d20f9abe21709b982c06088561f685', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48ffe8ec420af47b5a9cb58d28864f83902afd1c', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17422a81221017c81981b9287f37cc11811cc208', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}]",Gaurav Genani,55123900,,User,,51,,30,62
706360598,[Follow-up PR] Add flag to list all avialable configurations.,"Add flag -a to list all active cilium configurations.

To be merged after #16519 
",False,17099,https://api.github.com/repos/cilium/cilium/pulls/17099,https://github.com/cilium/cilium/pull/17099,closed,387,95,23,4,1,3,1,5,[{'name': 'dont-merge/needs-release-note-label'}],2021-08-09 09:32:52+00:00,2021-09-03 17:03:18+00:00,2187026.0,"25 days, 7:30:26",[],"[{'commit_sha': '98c6df45d9be0b4c67569dab79777f498338c7c5', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08dfc724a5c776368ebce3bc63f1b731df714ee5', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '026a3b8870d20f9abe21709b982c06088561f685', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48ffe8ec420af47b5a9cb58d28864f83902afd1c', 'committer_username': 'h3llix', 'committer_name': 'Gaurav Genani', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 10, 4, 23, 58, tzinfo=datetime.timezone.utc)}]",Gaurav Genani,55123900,,User,,51,,30,62

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
48109239,cilium,cilium/cilium,Go,2857,19618,312,957,33200,1143,691,164,"[{'id': 764968609, 'number': 17684, 'closed': datetime.datetime(2021, 10, 26, 21, 45, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 24, 23, 24, 14, tzinfo=datetime.timezone.utc), 'time_taken': 166850.0, 'time_delta': '1 day, 22:20:50', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 764957188, 'number': 17683, 'closed': datetime.datetime(2021, 10, 25, 14, 17, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 24, 22, 13, 15, tzinfo=datetime.timezone.utc), 'time_taken': 57879.0, 'time_delta': '16:04:39', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 735201030, 'number': 17413, 'closed': datetime.datetime(2021, 9, 23, 8, 10, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 16, 7, 19, 38, tzinfo=datetime.timezone.utc), 'time_taken': 607831.0, 'time_delta': '7 days, 0:50:31', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 726971333, 'number': 17304, 'closed': datetime.datetime(2021, 10, 2, 12, 55, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 3, 17, 12, 17, tzinfo=datetime.timezone.utc), 'time_taken': 2490208.0, 'time_delta': '28 days, 19:43:28', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 726966150, 'number': 17303, 'closed': datetime.datetime(2021, 10, 2, 12, 55, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 3, 17, 3, 32, tzinfo=datetime.timezone.utc), 'time_taken': 2490708.0, 'time_delta': '28 days, 19:51:48', 'additions': 65, 'deletions': 0, 'state': 'closed'}, {'id': 706366213, 'number': 17100, 'closed': datetime.datetime(2021, 9, 3, 17, 12, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 9, 40, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2187093.0, 'time_delta': '25 days, 7:31:33', 'additions': 388, 'deletions': 96, 'state': 'closed'}, {'id': 706360598, 'number': 17099, 'closed': datetime.datetime(2021, 9, 3, 17, 3, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 9, 32, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2187026.0, 'time_delta': '25 days, 7:30:26', 'additions': 387, 'deletions': 95, 'state': 'closed'}, {'id': 701713571, 'number': 17031, 'closed': datetime.datetime(2021, 8, 18, 14, 51, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 19, 8, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1366998.0, 'time_delta': '15 days, 19:43:18', 'additions': 16, 'deletions': 8, 'state': 'closed'}, {'id': 683237170, 'number': 16770, 'closed': datetime.datetime(2021, 8, 2, 14, 5, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 21, 7, 56, tzinfo=datetime.timezone.utc), 'time_taken': 2480238.0, 'time_delta': '28 days, 16:57:18', 'additions': 470, 'deletions': 0, 'state': 'closed'}, {'id': 669086456, 'number': 16519, 'closed': datetime.datetime(2021, 9, 3, 16, 13, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 13, 17, 15, 3, tzinfo=datetime.timezone.utc), 'time_taken': 7081092.0, 'time_delta': '81 days, 22:58:12', 'additions': 308, 'deletions': 90, 'state': 'closed'}, {'id': 662377254, 'number': 16448, 'closed': datetime.datetime(2021, 8, 22, 18, 24, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 10, 18, 57, tzinfo=datetime.timezone.utc), 'time_taken': 6768315.0, 'time_delta': '78 days, 8:05:15', 'additions': 78, 'deletions': 72, 'state': 'closed'}, {'id': 633385638, 'number': 16055, 'closed': datetime.datetime(2021, 5, 28, 1, 4, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 20, 22, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1744874.0, 'time_delta': '20 days, 4:41:14', 'additions': 33, 'deletions': 0, 'state': 'closed'}, {'id': 608612413, 'number': 15550, 'closed': datetime.datetime(2021, 4, 20, 14, 35, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 4, 21, 15, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1358409.0, 'time_delta': '15 days, 17:20:09', 'additions': 98, 'deletions': 7, 'state': 'closed'}, {'id': 605907761, 'number': 15525, 'closed': datetime.datetime(2021, 4, 6, 13, 25, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 31, 15, 14, 9, tzinfo=datetime.timezone.utc), 'time_taken': 511891.0, 'time_delta': '5 days, 22:11:31', 'additions': 18, 'deletions': 4, 'state': 'closed'}, {'id': 594991526, 'number': 15380, 'closed': datetime.datetime(2021, 3, 30, 17, 54, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 19, 24, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1117821.0, 'time_delta': '12 days, 22:30:21', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 593951031, 'number': 15363, 'closed': datetime.datetime(2021, 3, 17, 19, 14, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 16, 14, 26, 18, tzinfo=datetime.timezone.utc), 'time_taken': 103688.0, 'time_delta': '1 day, 4:48:08', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 592527433, 'number': 15339, 'closed': datetime.datetime(2021, 3, 29, 21, 6, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 14, 11, 45, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1329634.0, 'time_delta': '15 days, 9:20:34', 'additions': 19, 'deletions': 5, 'state': 'closed'}]"
