pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
964039162,Unified the AWS and Express Branches.,"Changes made:
1) Subscriptions wont (automatically) be included in (resolvers.js) lambda versions, whereas they will (automatically) be included in express version.
2) Changed the scripts in package.json,
    a) start_aws to run index.js of aws version.
    b) start to run the express version.
3) Updated the resolvers to use mongoose 6.X and now both aws and express 
version share common files such as models, resolvers etc.
4) Serverless code lives inside /serverless .

To run the express version run the following after populating the .env,
```
1) npm i
2) npm start.
```

To run the AWS version, use serverless-offline.",True,150,https://api.github.com/repos/CCExtractor/beacon-backend/pulls/150,https://github.com/CCExtractor/beacon-backend/pull/150,closed,749,1126,10,4,3,4,0,0,[],2022-06-10 11:51:59+00:00,2022-06-24 02:25:37+00:00,1175618.0,"13 days, 14:33:38","[{'comment_id': 902206856, 'comment_body': 'why is this an mjs file ', 'comment_created': datetime.datetime(2022, 6, 21, 6, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 902208208, 'comment_body': 'can probably clean these up', 'comment_created': datetime.datetime(2022, 6, 21, 6, 28, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 902208494, 'comment_body': 'same', 'comment_created': datetime.datetime(2022, 6, 21, 6, 28, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 902211046, 'comment_body': ""I think it's fine if the subscriptions are still there in the serverless version since the client should be smart enough to use the other url. Alternatively, is there a way to only include them in the serverless file? I am thinking it is better to test the different deployments without having to manually switch the env var."", 'comment_created': datetime.datetime(2022, 6, 21, 6, 32, 52, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}]","[{'commit_sha': 'b2b54f2f0eda6f29d1578e53864cf52e81e8d7b1', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33fb58e62d4b1363bb8d52b757f47d4390733690', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfc0b4c7def86fb7ba95ba83699e87ccdfdf545a', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78793026fcf2f1b73f2b83056f0119de6f89cee7', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}]",Aadeesh Oswal,66922161,,User,,56,,29,39
978064891,Merged Unified into Master!,,True,154,https://api.github.com/repos/CCExtractor/beacon-backend/pulls/154,https://github.com/CCExtractor/beacon-backend/pull/154,closed,20589,3291,17,20,0,0,0,0,[],2022-06-24 08:45:14+00:00,2022-06-25 01:24:49+00:00,59975.0,16:39:35,[],"[{'commit_sha': 'ead060865a10a9ba0672af07289ced25bb4b73ad', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '151bf5b63e3f6e2a7192e7ecdbb376a5e6cc1072', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac9a552fbeaa93900bf5b9126ffdfd2beab33851', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49a4785fad610691f8bea99db88ad1b240e55fe8', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfdd59867b6b8aedb984bb509d01b7c301666e5d', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd55c28d6c81636fd61da693a8745da23a1855385', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a56035205b98f3f7fd28b404e2755e514e9a704', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9dd25e10baaba9c9dba08437b566bdcaee63796', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '757ee45ad8b932f6dbd583151a31c982b4a110ad', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '561c161b855904f0c22241422b0bf26c30f33417', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c045ac286941dd9286060c8f43254ac4903b1b67', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf7ebf4d34d38785a6e9aaefad7fd76677514b62', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0903ecfef6bc0d6762239a213b031d3c42cdf1', 'committer_username': 'aadibajpai', 'committer_name': 'Aadi Bajpai', 'committer_email': 'hello@aadibajpai.com', 'commit_date': datetime.datetime(2017, 4, 8, 11, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2b54f2f0eda6f29d1578e53864cf52e81e8d7b1', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33fb58e62d4b1363bb8d52b757f47d4390733690', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfc0b4c7def86fb7ba95ba83699e87ccdfdf545a', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78793026fcf2f1b73f2b83056f0119de6f89cee7', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd665a68d83c22b860b61100c6c6867483e8e2149', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '923b12bef5686213cc0527d81e64168501142461', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8a81b94c8416e0fed09fc069c269a8db3e22725', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}]",Aadeesh Oswal,66922161,,User,,56,,29,39
1003736487,N-Beacons-1-Grp-PR1,"Tasks completed:
- Update existing models,
    - [x]  Beacon model:
        - [x]  New field,  ```grpID = id of the group belongs to```.
        - [x]  leader is not same as the groupâ€™s leader. Here leader is the one who created it, which can later be changed using ```changeLeader()``` mutation.
    - [x]  User Model:
        - [x]  New field, ```groups = [ids of all the groups the user is a part of]```.
- New mutations for creating, joining and fetching a group (changes to be done is resolvers and typedefs).
    - [x]  ```createAGroup()``` ,  fairly straightforward, creating a new group with all the fields and saving it in the DB.
    - [x]  ```joinAGroup(shortcode)```,  Add the new member to all the beacons in the group, also use pubsub to publish this change.
- Update the existing mutations, queries and subscriptions to incorporate group model.
    - [x]  Update ```me``` query.",True,167,https://api.github.com/repos/CCExtractor/beacon-backend/pulls/167,https://github.com/CCExtractor/beacon-backend/pull/167,closed,98,1,6,5,0,6,0,0,[],2022-07-21 06:46:46+00:00,2022-07-29 20:53:31+00:00,742005.0,"8 days, 14:06:45","[{'comment_id': 927233765, 'comment_body': 'need to address comments from prev pr', 'comment_created': datetime.datetime(2022, 7, 22, 2, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 928253018, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2022, 7, 24, 12, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Aadeesh11', 'type': 'User'}, {'comment_id': 928316056, 'comment_body': 'you should add a comment about the retry logic bc it may not be obvious to a reader that nanoid has a very small chance of collision', 'comment_created': datetime.datetime(2022, 7, 24, 21, 44, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 928316190, 'comment_body': 'you probably want to use console.error, and you only want to silently catch it in case it is the duplicate error, otherwise we should rethrow the error. Here is an example on how you can do that, https://github.com/VandyHacks/witness/blob/main/pages/api/preadd.ts#L38 (I had to do something similar recently)', 'comment_created': datetime.datetime(2022, 7, 24, 21, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 932053566, 'comment_body': 'Done! Thanks for ""how to do that part""!', 'comment_created': datetime.datetime(2022, 7, 28, 10, 30, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Aadeesh11', 'type': 'User'}, {'comment_id': 932778550, 'comment_body': ""```suggestion\r\n.DS_Store\r\n```\r\notherwise it wouldn't handle top level "", 'comment_created': datetime.datetime(2022, 7, 29, 0, 42, 58, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}]","[{'commit_sha': '24da729f25650a1f4490f13f516086c54a5ea53a', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '888f522555416925b910575c1681ec92dae4b3b2', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65873f5af0afc84ff49a73ddc09f2ef5621a66b4', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1022e3f756aa15c23df603777d7803f13d93afb2', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7b53e18891b062602aa796c47644ea0bc073807', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}]",Aadeesh Oswal,66922161,,User,,56,,29,39
1012632768,N beacons 1 Grp: PR2,"Tasks completed: 

- Update the existing mutations, queries and subscriptions to incorporate group model:
    - [x]  Update ```createBeacon()``` and ```joinBeacon()``` mutations.
    - [x] Fix Beacon query.
    - [x] Fix UserLocation subscription.  
- Add New Queries:
    - [x] Add Group Query.

This PR may potentially update the backend to support N beacons 1 Group at frontend. i.e completes #152 ",True,170,https://api.github.com/repos/CCExtractor/beacon-backend/pulls/170,https://github.com/CCExtractor/beacon-backend/pull/170,closed,9252,13904,3,8,0,18,0,0,[],2022-07-30 11:55:44+00:00,2022-08-11 06:05:55+00:00,1015811.0,"11 days, 18:10:11","[{'comment_id': 934076469, 'comment_body': 'should use !==', 'comment_created': datetime.datetime(2022, 8, 1, 1, 31, 45, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 934076625, 'comment_body': 'well the comment is wrong now, we still want to return beacon iff user in beacon', 'comment_created': datetime.datetime(2022, 8, 1, 1, 32, 25, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 934781873, 'comment_body': 'Yeah, fixed it!', 'comment_created': datetime.datetime(2022, 8, 1, 17, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Aadeesh11', 'type': 'User'}, {'comment_id': 937017459, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2022, 8, 3, 18, 41, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Aadeesh11', 'type': 'User'}, {'comment_id': 937251806, 'comment_body': 'you should change it here as well ', 'comment_created': datetime.datetime(2022, 8, 4, 0, 39, 19, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 937251839, 'comment_body': 'and here', 'comment_created': datetime.datetime(2022, 8, 4, 0, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 937251884, 'comment_body': 'and here', 'comment_created': datetime.datetime(2022, 8, 4, 0, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 937251941, 'comment_body': 'and here', 'comment_created': datetime.datetime(2022, 8, 4, 0, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 937379060, 'comment_body': 'preferable to use ! than == false', 'comment_created': datetime.datetime(2022, 8, 4, 6, 3, 30, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 937379445, 'comment_body': ""instead of setting the flag isFollowing to true, why can't you directly return line 184 from inside the for loop "", 'comment_created': datetime.datetime(2022, 8, 4, 6, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 939779904, 'comment_body': 'should groups be publicly accessible? i.e. w/o any auth or check if the person is in the group etc', 'comment_created': datetime.datetime(2022, 8, 8, 2, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 939781201, 'comment_body': 'better to have this before the for loop so we can fail fast without hitting the loop ', 'comment_created': datetime.datetime(2022, 8, 8, 2, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 939781606, 'comment_body': ""I'm curious why we can't use the prev method anymore? is beacon.followers not an array of ids?"", 'comment_created': datetime.datetime(2022, 8, 8, 2, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}, {'comment_id': 939939207, 'comment_body': 'I will add the auth check!', 'comment_created': datetime.datetime(2022, 8, 8, 7, 57, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Aadeesh11', 'type': 'User'}, {'comment_id': 939943414, 'comment_body': ""No beacon.followers isn't an array of ids."", 'comment_created': datetime.datetime(2022, 8, 8, 8, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Aadeesh11', 'type': 'User'}, {'comment_id': 939950457, 'comment_body': 'fixed!', 'comment_created': datetime.datetime(2022, 8, 8, 8, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Aadeesh11', 'type': 'User'}, {'comment_id': 939950740, 'comment_body': 'fixed!', 'comment_created': datetime.datetime(2022, 8, 8, 8, 10, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Aadeesh11', 'type': 'User'}, {'comment_id': 939955593, 'comment_body': 'I thought comparing the objects using objectID would be faster than comparing the whole object.', 'comment_created': datetime.datetime(2022, 8, 8, 8, 15, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Aadeesh11', 'type': 'User'}]","[{'commit_sha': '6d85706a125aec740ed36ef1870a8627a073924b', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70b73fb24404f48117b7cc0de45bd9e8e6f8135d', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33b8555395a87ef84593b7ab9e97169ef2ab5a44', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d663bba979a556de9ba9a82ca603bcace0527c9', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05714d6dd6e543c3c6a31c4be3bd39dd3b565c26', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '840ca45cc9b91cf9f210413f243d351bbb443314', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c40ab14ce4debc79a3c9f059268b8289ff1caad9', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8412ba88b72b97f757a7174bac90a3239e62202f', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}]",Aadeesh Oswal,66922161,,User,,56,,29,39
1045719038,Changes for deployment to work fine,"1) Manager.js:
    a) changed the logic of getting the state of instance.
    b) changed start/stop logic a bit.
2) Serverless.yml:
    a) iamRoleStatements added so that manager lambda has access to ec2 instance.



",True,187,https://api.github.com/repos/CCExtractor/beacon-backend/pulls/187,https://github.com/CCExtractor/beacon-backend/pull/187,closed,22,3,4,1,0,0,0,0,[],2022-09-04 14:29:02+00:00,2022-09-23 04:06:40+00:00,1604258.0,"18 days, 13:37:38",[],"[{'commit_sha': '3cf171fa4b5f05d24339814e27cb65a2030c5f52', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}]",Aadeesh Oswal,66922161,,User,,56,,29,39
1073850842,Changes to enable deployment on AWS ec2 and lambda.,"1) ecosystem.config.js is a pm2 config file so that environment variables can be passed via pm2 when running on ec2.

2) changes in index.mjs are required so that subscriptions persist  and connections dont close.",True,206,https://api.github.com/repos/CCExtractor/beacon-backend/pulls/206,https://github.com/CCExtractor/beacon-backend/pull/206,closed,2661,225,6,2,0,0,0,0,[],2022-10-02 14:02:14+00:00,2022-10-08 09:04:02+00:00,500508.0,"5 days, 19:01:48",[],"[{'commit_sha': 'fad925b2c8df18c4300ec930404561cbf3e2bc3b', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bf815a980e5191c1450f5b234d70ca57d37b567', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}]",Aadeesh Oswal,66922161,,User,,56,,29,39
1079455261,"Script to deploy code to lambda, with dev/prod option.","**Pre-requisites**

- serverless installed on machine which is executing the script [(here's how you can install it)](https://www.serverless.com/framework/docs/getting-started)
- AWS access key and secret key [(here is how you can get them)](https://www.serverless.com/framework/docs/providers/aws/guide/credentials)

**Usage**

1. Clone and cd into the repo.
2. command usage
    1.  Deploy in dev stage, paste the following into terminal
        `sh script.sh <key> <secret_key>`
    2. Deploy in prod stage,
        `sh script.sh <key> <secret_key> production`

**Notes**

- This script will create a new configuration profile `beacon` or override it if it already exits, hence make sure you either change the profile name in script or port your existing profile (named `beacon`) to a new one if you already have one named `beacon`.
- If the script completes without error, use POST endpoint to access playground, or as the env variable for beacon frontend. Also lambda will only support queries and mutations. For subscriptions use an ec2 instance.

",True,213,https://api.github.com/repos/CCExtractor/beacon-backend/pulls/213,https://github.com/CCExtractor/beacon-backend/pull/213,closed,63,0,1,3,2,1,0,0,[],2022-10-06 18:40:43+00:00,2022-10-10 03:34:59+00:00,291256.0,"3 days, 8:54:16","[{'comment_id': 990614849, 'comment_body': 'typo\r\n```suggestion\r\n    echo ""Couldn\'t update your credentials, please check the logs!""\r\n```', 'comment_created': datetime.datetime(2022, 10, 8, 9, 3, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aadibajpai', 'type': 'User'}]","[{'commit_sha': '9cab29732c4593f063918f478d757405293499c4', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78fb09b09fdd2630b3c99c11fd894457a6c55c3c', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98366763d3b258152bd81309e772c8e47ab09517', 'committer_username': 'Aadeesh11', 'committer_name': 'Aadeesh Oswal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 14, 20, 21, 25, tzinfo=datetime.timezone.utc)}]",Aadeesh Oswal,66922161,,User,,56,,29,39

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
374771841,beacon-backend,CCExtractor/beacon-backend,JavaScript,37,8,5,5,110,33,13,20,"[{'id': 1079455261, 'number': 213, 'closed': datetime.datetime(2022, 10, 10, 3, 34, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 6, 18, 40, 43, tzinfo=datetime.timezone.utc), 'time_taken': 291256.0, 'time_delta': '3 days, 8:54:16', 'additions': 63, 'deletions': 0, 'state': 'closed'}, {'id': 1073850842, 'number': 206, 'closed': datetime.datetime(2022, 10, 8, 9, 4, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 2, 14, 2, 14, tzinfo=datetime.timezone.utc), 'time_taken': 500508.0, 'time_delta': '5 days, 19:01:48', 'additions': 2661, 'deletions': 225, 'state': 'closed'}, {'id': 1045719038, 'number': 187, 'closed': datetime.datetime(2022, 9, 23, 4, 6, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 4, 14, 29, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1604258.0, 'time_delta': '18 days, 13:37:38', 'additions': 22, 'deletions': 3, 'state': 'closed'}, {'id': 1012632768, 'number': 170, 'closed': datetime.datetime(2022, 8, 11, 6, 5, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 30, 11, 55, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1015811.0, 'time_delta': '11 days, 18:10:11', 'additions': 9252, 'deletions': 13904, 'state': 'closed'}, {'id': 1012352459, 'number': 169, 'closed': datetime.datetime(2022, 7, 29, 21, 12, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 21, 10, 27, tzinfo=datetime.timezone.utc), 'time_taken': 119.0, 'time_delta': '0:01:59', 'additions': 62, 'deletions': 34, 'state': 'closed'}, {'id': 1003736487, 'number': 167, 'closed': datetime.datetime(2022, 7, 29, 20, 53, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 21, 6, 46, 46, tzinfo=datetime.timezone.utc), 'time_taken': 742005.0, 'time_delta': '8 days, 14:06:45', 'additions': 98, 'deletions': 1, 'state': 'closed'}, {'id': 978569959, 'number': 155, 'closed': datetime.datetime(2022, 7, 21, 6, 48, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 17, 45, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2293369.0, 'time_delta': '26 days, 13:02:49', 'additions': 105, 'deletions': 27, 'state': 'closed'}, {'id': 978064891, 'number': 154, 'closed': datetime.datetime(2022, 6, 25, 1, 24, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 8, 45, 14, tzinfo=datetime.timezone.utc), 'time_taken': 59975.0, 'time_delta': '16:39:35', 'additions': 20589, 'deletions': 3291, 'state': 'closed'}, {'id': 964039162, 'number': 150, 'closed': datetime.datetime(2022, 6, 24, 2, 25, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 10, 11, 51, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1175618.0, 'time_delta': '13 days, 14:33:38', 'additions': 749, 'deletions': 1126, 'state': 'closed'}, {'id': 831633395, 'number': 93, 'closed': datetime.datetime(2022, 1, 25, 19, 59, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 25, 16, 15, tzinfo=datetime.timezone.utc), 'time_taken': 13493.0, 'time_delta': '3:44:53', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 829363329, 'number': 91, 'closed': datetime.datetime(2022, 1, 25, 15, 29, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 9, 59, 50, tzinfo=datetime.timezone.utc), 'time_taken': 278958.0, 'time_delta': '3 days, 5:29:18', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 823058012, 'number': 84, 'closed': datetime.datetime(2022, 1, 25, 19, 45, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 14, 20, 8, 55, tzinfo=datetime.timezone.utc), 'time_taken': 949017.0, 'time_delta': '10 days, 23:36:57', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 811475870, 'number': 74, 'closed': datetime.datetime(2022, 1, 14, 20, 37, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 29, 13, 16, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1408802.0, 'time_delta': '16 days, 7:20:02', 'additions': 1, 'deletions': 0, 'state': 'closed'}]"
