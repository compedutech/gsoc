pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
435361432,Tracking course update errors downwards,"## What this PR does
Implementing tracking of course update errors by passing update service `UpdateCourseStats` downwards to APIs and keeping track of errors with the help of Sentry and error count with the help of `UpdateLogger` and `course.flags`.",True,4076,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4076,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4076,closed,239,105,18,15,0,4,0,0,[],2020-06-16 17:24:19+00:00,2020-06-19 20:32:40+00:00,270501.0,"3 days, 3:08:21","[{'comment_id': 441168672, 'comment_body': 'Can you think of a better name than `hash_info`? I tried to leave a comment before but it might not have gone through...\r\n\r\nI think you could call this `new_logs`, and then rename the intermediate variable below to `updated_logs`. That makes it a little less generic and reduces the chance for someone getting confused about what this is supposed to do.', 'comment_created': datetime.datetime(2020, 6, 16, 22, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 441171720, 'comment_body': ""This behavior isn't being tested at all (and shows up as uncovered code after a spec run).\r\n\r\nYou should add appropriate tests, perhaps to `update_course_stats_spec.rb`, to verify that it does what we expect in terms of posting something to Sentry and including the right error count in the `flags` update logs.\r\n\r\n`constant_update_spec.rb` also has some relevant examples, in terms of interacting with Sentry behavior in a test."", 'comment_created': datetime.datetime(2020, 6, 16, 22, 12, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 442466084, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 18, 19, 51, 31, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 442466159, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 18, 19, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}]","[{'commit_sha': 'a1eb2eb831f693cd582cff234d5485e6a9c8fe5b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0c1a92f707abf68e220b1e3d13ba12b65d53921', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad310105a5e7f1226e6f38b21f3f0682c42ac27c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30a65a25df7f01fb1eda57538a338ed017c49ae5', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68eaac8fe1c60c0558ad3e9a8862a73f20f3b2f1', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d8b1751be877658062b48da8b3f2fd0bee6feb9', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fac6360990cabcb4572156c7bc2ba840450dfc1e', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6932fcf8320731e35614fafeb789100fc65d8642', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a4a5272c54f5265651eef460cb7d059be4ac073', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b079cf7fbd57ea2c0815825a40b5989897a875d0', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d8d3f5153a7ec735e6a836d978285db00e134f8', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51ff642ece08f7c5cb7a665d84e1fcb6c00f6849', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de6ca67c8a647b6d7e0d5d4644568419a98cb325', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d761ef31bc68451ad622948d9cf1763fb522804', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b9f1e7f6d6ad01da7be994f716175f6156ae061', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
415776126,(Old) CourseErrorRecord: Handling errors downwards.,"## What this PR does
First strategy for handling error inside replica.rb for GSoC Project.

## Open questions and concerns
@ragesoss Please keep suggesting me changes here. I will keep working on this branch.
- Should `save_course_error_record` be moved to some other place or is it fine inside `Replica`?
- Also, I have `course` as an optional parameter in `initialize` as only the part I have modified requires `course` to be passed to `Replica` for now, other uses of `Replica` elsewhere remaining the same as before.
",False,4027,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4027,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4027,closed,15,0,1,1,0,0,0,0,[],2020-05-10 20:27:52+00:00,2020-05-15 22:07:01+00:00,437949.0,"5 days, 1:39:09",[],"[{'commit_sha': 'efecd7985f9dda6243ccb4f8fd56d7fb05d7e237', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
419661607,(Old) Tracking course update errors downwards,"## Note
Final cleaner version of this PR at #4076 ",False,4039,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4039,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4039,closed,176,106,18,88,2,70,0,0,[],2020-05-18 18:13:33+00:00,2020-06-24 22:36:44+00:00,3212591.0,"37 days, 4:23:11","[{'comment_id': 426948348, 'comment_body': ""what's this?"", 'comment_created': datetime.datetime(2020, 5, 18, 23, 35, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 426951061, 'comment_body': ""It doesn't necessarily need to be done now... the more time you have to think about the ideal way to do it, the better... but it might make sense to extract the error-recording code as a `module` and including it in the API classes that would use it."", 'comment_created': datetime.datetime(2020, 5, 18, 23, 45, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 427230902, 'comment_body': ""What this is doing is extracting the prefix of the url of `Faraday::Connection` object. I couldn't really make sense of how to get the full url like \r\n```\r\nhttps://ores.wikimedia.org/v3/scores/wikidatawiki/?models=itemquality&features&revids=1136533131|1136536523\r\n``` \r\nThe `server_conn.url_prefix.to_s` in this case is basically \r\n```\r\nhttps://ores.wikimedia.org/\r\n``` \r\nand the `url_query` part is\r\n \r\n```\r\n/v3/scores/wikidatawiki/?models=itemquality&features&revids=1136533131|1136536523\r\n```\r\nI had to use these variables in the `rescue` block below to pass on the full url to `save_course_error_record`."", 'comment_created': datetime.datetime(2020, 5, 19, 11, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 427234831, 'comment_body': ""Okay, I'll shift the code there. Also, it was the same in the three APIs so I anyways had to refactor it somewhere."", 'comment_created': datetime.datetime(2020, 5, 19, 11, 39, 39, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 427236025, 'comment_body': 'I also have the same doubt in `def mediawiki` in `WikiApi` on what is the correct way to get the url of the `MediawikiApi::Client` object `@mediawiki`', 'comment_created': datetime.datetime(2020, 5, 19, 11, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 427618244, 'comment_body': 'Why is this a module nested within a module?', 'comment_created': datetime.datetime(2020, 5, 19, 21, 44, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 427618820, 'comment_body': 'Following the convention in the (limited) amount of non-Helper modules in the code base, consider naming this after what it does: `CourseUpdateErrorHandling`.', 'comment_created': datetime.datetime(2020, 5, 19, 21, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 427620672, 'comment_body': 'Since this prefix is the same thing that you pass when setting up the Faraday object in the `ores_server` method, this will be simpler to just extract as a constant and re-use, without getting involved in additional methods on the connection object.', 'comment_created': datetime.datetime(2020, 5, 19, 21, 49, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 427626337, 'comment_body': ""Is this the full URL, or just the domain?\r\n\r\nI guess that the `api_url` is the same domain plus some extra parts of the path?\r\n\r\nIn this case, we're reaching rather far into the MediawikiApi gem to try to find a URL, when we never dealt with a URL directly in the first place, instead leaving the construction of a URL from the query params completely up to gem. We should probably instead save the same set of data that we currently ship off to Sentry: the action, query and api_url.\r\n\r\nProbably that means adding another column to error record table, for miscellaneous details."", 'comment_created': datetime.datetime(2020, 5, 19, 22, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 428026544, 'comment_body': ""I started with a non-nested module, but I could find less examples and got influenced by the convention followed by the other modules in `lib/errors` so I did this. I'll remove the outer module."", 'comment_created': datetime.datetime(2020, 5, 20, 13, 49, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 428031450, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 5, 20, 13, 55, 33, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 428036745, 'comment_body': 'Okay..Done!', 'comment_created': datetime.datetime(2020, 5, 20, 14, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 428049763, 'comment_body': 'In this case, I actually have to verify whether or not the full URL is always there or not. During development when I raise the error after `@mediawiki.send(action, query)`, I get the full url correctly. But that raising of error is done after the request is correctly completed. On the other hand, the testing method(which uses stubbing and raises errors) gives only the domain. I actually have to see what actually happens in the real update scenario.', 'comment_created': datetime.datetime(2020, 5, 20, 14, 17, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 428051075, 'comment_body': 'Okay, I will add a `miscellaneous` column and save the details there.', 'comment_created': datetime.datetime(2020, 5, 20, 14, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 430647393, 'comment_body': 'Why is all this error-handling code in OresApi instead of the error-handling module?', 'comment_created': datetime.datetime(2020, 5, 26, 19, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 431467353, 'comment_body': 'I refactored the error handling code in the three APIs to `ErrorHandling` module.', 'comment_created': datetime.datetime(2020, 5, 27, 22, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 435497557, 'comment_body': ""I think most of this can and should be moved into the error handling module. The closer we get to uniform handling of API errors, instead of treating each different API in a unique way, the easier it will be to extend this strategy to additional places.\r\n\r\nThere's a lot of duplication between this and OresApi."", 'comment_created': datetime.datetime(2020, 6, 4, 19, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 435497816, 'comment_body': 'This type of logging should definitely be in the error handling module and not the API class.', 'comment_created': datetime.datetime(2020, 6, 4, 19, 25, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 435499300, 'comment_body': 'I think the raising of unexpected errors could also be done in the error-handling module; this would probably mean passing in the relevant set of `TYPICAL_ERRORS` as an argument in the error handling code (or getting it dynamically from the class that the error handling method is being invoked from).', 'comment_created': datetime.datetime(2020, 6, 4, 19, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 435504116, 'comment_body': 'Can you put all these into one migration? For a new table with no existing data to worry about, doing all the changes at once makes it easier to make sense of.', 'comment_created': datetime.datetime(2020, 6, 4, 19, 38, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 435506007, 'comment_body': 'Doing this twice, either at the beginning or end, is a confusing control flow.', 'comment_created': datetime.datetime(2020, 6, 4, 19, 41, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 435506467, 'comment_body': 'I suggest using a uuid for every error, and then only doing the save_course_error_record if if the course is present.', 'comment_created': datetime.datetime(2020, 6, 4, 19, 42, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 436148836, 'comment_body': 'WikiApi is not using this code but the OresApi and Replica are. So I refactored this into ErrorHandling module and added a comment regarding the same.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 27, 53, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 436149149, 'comment_body': 'Done! Earlier only WikiApi was logging the error, so I thought it might be specific to it.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 28, 37, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 436149570, 'comment_body': 'I have refactored the course update part into `CourseUpdateErrorHandling` module. Also moved its sentry error reporting part having the uuid tagging separately there.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 436150525, 'comment_body': 'I have done something different, please have a look at the `def perform_error_handling` in `ErrorHandling` and `def perform_course_error_handling` in `CourseUpdateErrorHandling`. What I have done is actually momved all the part relating to `uuid` in `CourseUpdateErrorHandling` itself so that the control flow in the methods is not confusing as well as in the relevant modules.', 'comment_created': datetime.datetime(2020, 6, 5, 20, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 436159754, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 5, 20, 54, 39, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 436169381, 'comment_body': 'I don\'t like coupling this to the two classes that would use ""optional_params""; it means that ErrorHandling and Replica each have to ""know something"" about the internals of the other.\r\n\r\nInstead, I recommend making all the data needed for this (url, response body) into optional named arguments of `perform_error_handling`, so that the only thing other classes need to ""know"" is the method signature of `perform_error_handling`.', 'comment_created': datetime.datetime(2020, 6, 5, 21, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 436169639, 'comment_body': 'This is probalby going to be easier to keep track of with keyword args.', 'comment_created': datetime.datetime(2020, 6, 5, 21, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 436170765, 'comment_body': 'This would definitely be nicer if the module could find TYPICAL_ERRORS for whichever class it has been included in, automatically, instead of need it as an explicit argument.', 'comment_created': datetime.datetime(2020, 6, 5, 21, 24, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 436173642, 'comment_body': ""Done! I have checked the migration file (the last one, according to rails migration timestamp convention) in which I moved all the content in my system and it works as expected. Also, I don't want to take a chance with the database so if you could please double check the contents in that file."", 'comment_created': datetime.datetime(2020, 6, 5, 21, 32, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 436273893, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 6, 14, 40, 7, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 436281895, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 6, 16, 33, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 436282331, 'comment_body': 'In `perform_error_handling`, the number of arguments were getting out of hand(around 7), so what I did was added an attribute `optional_params[:build]`, passed on `optional_params` to `CourseUpdateErrorHandling` module and then executed `build_optional_params` if `optional_params[:build]` was `true`. Also, I moved the method `build_optional_params` to the relevant module `CourseUpdateErrorHandling` and called that method in `save_course_course_record` where it was ultimately required.', 'comment_created': datetime.datetime(2020, 6, 6, 16, 39, 34, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 436432404, 'comment_body': ""You don't need to equate it with true. You can just do `unless optional_params[:build]`"", 'comment_created': datetime.datetime(2020, 6, 8, 2, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'AmitJoki', 'type': 'User'}, {'comment_id': 439490367, 'comment_body': 'This could be done in the module, so that all we need to do is include the module and then the update object will be able to respond to `:sentry_tag_uuid`.', 'comment_created': datetime.datetime(2020, 6, 12, 15, 31, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 439490889, 'comment_body': 'I suggest instead:\r\n\r\n```\r\ndef sentry_tag_uuid\r\n  @sentry_tag_uuid ||= SecureRandom.uuid\r\nend\r\n```', 'comment_created': datetime.datetime(2020, 6, 12, 15, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 439494659, 'comment_body': ""I think we don't need to care about a `course` here at all now. Basically, it should be the job of the update service to figure out what error reporting behavior is wanted... and the pattern ought to apply to any kind of update, not just an `UpdateCourseStats`. We'll just start with the course updates, but this pattern may be useful for other updates as well."", 'comment_created': datetime.datetime(2020, 6, 12, 15, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 439496530, 'comment_body': 'I think this and the rest of the importers that currently take a `course` as their main argument should not be changed to take an update service; the update service should be an additional, optional keyword argument.\r\n\r\nThe idea here is that these importers are mainly concerned about a specific course and its data, and the optional context of the update service is there just for the purpose of logging.', 'comment_created': datetime.datetime(2020, 6, 12, 15, 43, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 439617213, 'comment_body': 'Okay, done!', 'comment_created': datetime.datetime(2020, 6, 12, 20, 0, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 439617957, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 12, 20, 1, 45, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 439618014, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 12, 20, 1, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 439634082, 'comment_body': 'I have made `ErrorRecord` more general and now the specific error handling tasks are a part of the update object itself.', 'comment_created': datetime.datetime(2020, 6, 12, 20, 43, 53, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 439649898, 'comment_body': 'All the cases of `update_cs` need a better name.', 'comment_created': datetime.datetime(2020, 6, 12, 21, 29, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 439650958, 'comment_body': 'I think we need to log the error counts and the sentry uuid as part of the update logging we already do (including only keeping the last 10 updates) instead of putting it in a separate `errors` key.', 'comment_created': datetime.datetime(2020, 6, 12, 21, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 439700503, 'comment_body': 'Is this `return nil` needed? ', 'comment_created': datetime.datetime(2020, 6, 13, 2, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'AmitJoki', 'type': 'User'}, {'comment_id': 439700951, 'comment_body': ""Nevermind, I guess you're explicitly stating that this doesn't return anything."", 'comment_created': datetime.datetime(2020, 6, 13, 2, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'AmitJoki', 'type': 'User'}, {'comment_id': 439848100, 'comment_body': 'Okay, I forgot about that 😅', 'comment_created': datetime.datetime(2020, 6, 14, 16, 50, 59, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 439848177, 'comment_body': 'I have renamed all of them to `update_object`', 'comment_created': datetime.datetime(2020, 6, 14, 16, 51, 50, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 439848578, 'comment_body': ""Yes, you got it right, so that it doesn't return a `Raven` object. Earlier `WikiApi` and `Replica` both required this behaviour, now only `Replica` requires it. I thought it would be better to be explicit about it."", 'comment_created': datetime.datetime(2020, 6, 14, 16, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 440309324, 'comment_body': 'Make this `update_service_id` so that it can be used for other types of updates as well.', 'comment_created': datetime.datetime(2020, 6, 15, 16, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 440311074, 'comment_body': ""Maybe call this `UpdateServiceErrorLogging` This doesn't do any actual handling of errors, in terms of flow control... its only job is to make sure the errors get logged appropriately."", 'comment_created': datetime.datetime(2020, 6, 15, 16, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 440319405, 'comment_body': ""I'd call this `log_error`."", 'comment_created': datetime.datetime(2020, 6, 15, 17, 2, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 440327370, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 15, 17, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 440327452, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 15, 17, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 440327502, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 15, 17, 17, 42, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 440331183, 'comment_body': 'This is specifically about handling API errors, so I would call it that: `ApiErrorHandling`.', 'comment_created': datetime.datetime(2020, 6, 15, 17, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 440333469, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 15, 17, 28, 21, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 440334249, 'comment_body': ""I really don't like the level of indirection happening with this module vs ErrorRecord vs the update object.\r\n\r\nI'm not convinced that `ErrorRecord` gets us anything. I think the ideal situation is that with this module, there's basically just a single method that each API class needs to know (`log_error`). If we need to create an `ErrorRecord` (which I'm still open to), that could be one inside this method, instead of in the API-specific code that gets duplicated across API files."", 'comment_created': datetime.datetime(2020, 6, 15, 17, 29, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 440335473, 'comment_body': ""This duplicates what's going on in `UpdateServiceErrorLogging`. We should have only one method responsible for sending errors to Sentry, whether or not there is an update service or course to tag it with."", 'comment_created': datetime.datetime(2020, 6, 15, 17, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 440337249, 'comment_body': 'This method is still very similar across APIs. I think it could be done such that a single method (maybe rename `log_error` to `handle_api_error`) with optional keyword arguments is used across all these APIs, and none of them define their own `invoke_error_handling` method, they just call the one provided by the module with whatever arguments are relevant for this particular API.', 'comment_created': datetime.datetime(2020, 6, 15, 17, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 440337998, 'comment_body': ""Now that the number of arguments are only three, `error`, `sentry_extra` and `update_service`, they can be passed into this method easily. After passing the parameters, I guess `ErrorRecord` won't be of as much help as it was earlier, should I remove it or not?"", 'comment_created': datetime.datetime(2020, 6, 15, 17, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 440343163, 'comment_body': 'The reasons why I have made this is for passing of arguments is because `sentry_extra` is different for all the three APIs, and also `invoke_error_handling` calls in Replica pass different arguments in 2 places. I think moving the method would have the same effect, and there could be problems with passing of the high number of optional arguments', 'comment_created': datetime.datetime(2020, 6, 15, 17, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 440343293, 'comment_body': ""Okay, I'll do that"", 'comment_created': datetime.datetime(2020, 6, 15, 17, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 440345754, 'comment_body': 'Or I could do it similar to how`UpdateLogger.update_course` is called? (Talking about the way `times` argument is passed there)', 'comment_created': datetime.datetime(2020, 6, 15, 17, 51, 5, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 440412591, 'comment_body': 'Yes, if all the extra optional data is an arbitrary hash of stuff to pass in to sentry, collecting it all up as an implicit single argument hash (like with `UpdateLogger.update_course`) makes perfect sense.', 'comment_created': datetime.datetime(2020, 6, 15, 19, 57, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 440427166, 'comment_body': 'Looks like this now skips the `raise_unexpected_error`?', 'comment_created': datetime.datetime(2020, 6, 15, 20, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 440429215, 'comment_body': 'raise_unexpected_error is not required by Replica so I have called it separately(did the same way earlier too)', 'comment_created': datetime.datetime(2020, 6, 15, 20, 30, 55, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 440433038, 'comment_body': 'Oh, I see... that gets done in the inidividual API classes...', 'comment_created': datetime.datetime(2020, 6, 15, 20, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 440433935, 'comment_body': ""I think it makes would makes sense to get rid of that raising behavior altogether. Part of the point here is that we want to make errors easier for end-users to find out about, and if we raise an error and kill the update service process, then the error won't get logged in the course flags and will be harder to find. If we needed to retain the current behavior, where some files can raise an unexpected error but some cannot (eg, `Replica`), I think would make sense to configure whether or not to raise the errors using a configuration constant in each class (`RAISE_UNEXPECTED_ERRORS`). But I think removing that behavior makes more sense."", 'comment_created': datetime.datetime(2020, 6, 15, 20, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': '18e08a99e392bfc196eb745b2aa42441c5055f74', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3483c02385be9e7f479d4ae7e71faf5525f6387a', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '937552c45cf3a957416d1d0f35842aabf01f832b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f7a2193877803dc0c8085780950416c4796b621', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd43b2462ac7b856d9d19dc78910fe9c5b8b48274', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71e253753c86fb9a653eb802f9db215af1c8b704', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5bf9451f460e989d4cebfdaafcc6ae43356136d', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e9e8d686c6df56bcd95f122dd5ea82e85422bd1', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5103d85931306d5215b8548b14c514970c1312cc', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de5ee28b0f36534c25004c7ab56946eda98bfad0', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5d27f55e1a0324ea4ac541f9722fe5b13433cb1', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf1289821c26fe8b802345a72e6b202de651bacd', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '698b8436d4dd5087bf5a2952406e4a390c0b3d15', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b0ac3ddbca688ead7feeb4921c0f0fe2ff62ad2', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42773179a4edac17e76ba94e96ca7828212c5caf', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd73744a876e126fea81c5fb32a882b044fed475b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3137fb1bd758a1670bd1037f053d6d596e8bfad', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1446258f117a68e58a9d033399c775090529f954', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65e02e1d7b15c8509b46b0a2610aad324ab91bc1', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '559585b9fa4e2f61c8c711e35ba987fdc2fafdc8', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb68c7a01a38dd5b6491b82cb32aa4d17d292673', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab0afe2b54d3522d51d418f2d8277da469c373f', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c149a5e4b16b9d562d7ef41ee01f6c9abc36bf5f', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c16ce9ee1eed22ae01fa89b39474fb24b996e2c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '350ec3379745e674736a98700692c169abb13c06', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd25d227f2a946209345ff2602c3558a465de97d', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '162b2d2180bdb11f35aca135dda5a819f197131a', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee0e5178f8f1da43526c539a0df52c67a5a3f471', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49d8b8b244f92f2a661ec57bb0d1cef85120328e', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f4ad192783954b7a8164be782445ccc63a069eb', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfdecfeb44b5d44c8ef0796b59d64e6e1f842c25', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a0bd3fae43798ddf512171ef7697c027fef1434', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b49cabe7ba86556086a8acf329f59b86c5076f5c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4f1eb16a8b2d9a74a5780b7b95f938a871b5d0a', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f7a54cd0d99bf5130dc22fc40eadfba75e82826', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25a1237f03577996069de052c9e070d8f3738708', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5f4236fbbed9dd08245f5e2d3e0d14c1869bcf8', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f6d3edf8468d0f04a70ada8a12485d82acf3281', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c600ab5a3467fb545a303998152c2820c596a03', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e9471e964351dbd602e360d713ee976cfbcbf8f', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2aea0befa0aa9100f975f74192e839c7c97c11ce', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54cea864c284f581d65ead51e8ad0183d01e8b9b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55c9ad04855310818a3ee9598ff78bb47a727c43', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0268edba423efd8a25bd4576ea37aaf147f482d5', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51228f77f333e64f533a9b422bf254ee3fa566d5', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68148d6bcaacc7beac448213a74e64e0c5cb5bcd', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '460e6b32841e0ac3675450367a53dae583782502', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dac145beca066e7a605f3c318a33147c105ba82a', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9793df9073b391fbcd935bb8d2c9c20cdbb8b64', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f99876d4392787cf5f17349c657382e3cbb505c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '159b0610869c154f8331c23255526d494e6d6327', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ae76de89f316c68c9188d830d0b04c9e8089bdf', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '947fed0116bdc1345b09d29222a3e60bc202f822', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91fc2bda78c01df302f3b0b4bbed6f0548e1925c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4789fd4cf5731192002809ad2e2fa5f416bda465', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d074d599f516c441425d797bbdda67cdf18cda9', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd5e14a84da163fc52ab0726186cfb4cc7e62b0d', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2719f5827e5f3abd1b60e87260be92f8a7093362', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed75ba3c95ca60b29be617deae951674063c04ff', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b0743890c461b8fd0cfc455430b7461153fa9e4', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '858cab97d6002c66ca10ed426d9bb824e88e8441', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '536e22a81eb3e8c2123f4a6de228bac104677633', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '884f175d734e43a9cd3759139f52ad0b277834ce', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75fa4b37c226dde2f6fe5e47610fc4785da60a21', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8f4ea996a6b66e4e145153f2893f4af64058eca', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4295ec986e6ecedebe0bb6d82c4bd9c1a8857aa5', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5fbee8dca940692a8ea7923f55a17170194b742', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3813d9575e4082039e70cd89ab01499fe9861d1c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13245cfd66d548d9aa51d5b7e9e9e5ae3d36e9f6', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e285106e6dd4e994e9545e5fc7b7930f74cf061', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd49c98e3f540951def439cd8f9fa833d0555f9e', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3bc663bcccf53f6676034ed663ef239508c2864', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be6751a3bd06abe01adffe2377d70c477068e114', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ba08b9d1a0cf045fa936fba179c54c63ad40a12', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3683d325111c7354203a5551d4d65a7e709f58a0', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6283d2cbef2c9d89ff58382044082ee54b7cddc6', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4b1a0a7cd6a2a2ecdab180e4dbc5ed0a02d3ed1', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '415e7a63d6bdf08acb74bfa1538302237b73ae27', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd4c0f9ca347993488abd11f3c5e845d9189aef', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '516dfdd57ab8c5c91f9d862975da94218246f0c0', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e6100b8f6d9d54ec07927375a0944b189683b99', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a99ac86659e31b481ad7cd567d4876408309ec7', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '567950ff698bcc8322324b3e4a727baed471305c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '931c0c52e83afd5c6ace0386814d5b0a0d8bd4bb', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38c15a5739eec3a1d5e241045f503a5896106996', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ced27d70af2a3a9beab444491c92e0affefd0d1f', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10a6071b95ebe254a752f04162a4b6501aeb584c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1e4d7b173d98584d1c4089f69d183de59f1c35f', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
437315097,Course update errors UI,"## What this PR does
UI implementation for #4076 

## Screenshot examples
### If errors exist - Outreach Basic Course
![Peek 2020-06-30 02-02](https://user-images.githubusercontent.com/37243661/86053631-67e21b00-ba76-11ea-996d-409ccabb8cc1.gif)


### If errors exist - Wiki Education Article Scoped Program
![Peek 2020-06-30 02-05](https://user-images.githubusercontent.com/37243661/86053681-792b2780-ba76-11ea-91bb-2ad8f99e81da.gif)

### No error
![Peek 2020-06-30 02-04](https://user-images.githubusercontent.com/37243661/86053695-7fb99f00-ba76-11ea-82f0-67227b1e8a80.gif)

",True,4080,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4080,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4080,closed,145,21,4,25,3,12,0,0,[],2020-06-19 22:15:41+00:00,2020-06-29 21:00:25+00:00,859484.0,"9 days, 22:44:44","[{'comment_id': 445180796, 'comment_body': '""The dashboard encounted X error(s) duing the most recent update.""', 'comment_created': datetime.datetime(2020, 6, 24, 21, 25, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 445182285, 'comment_body': ""There's too much going on in this component. The modal should be extracted as a separate component."", 'comment_created': datetime.datetime(2020, 6, 24, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 445182808, 'comment_body': ""This is an 'Article Scoped Program', which only counts edits to assigned articles and categories."", 'comment_created': datetime.datetime(2020, 6, 24, 21, 30, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 445183205, 'comment_body': ""'Check replag'"", 'comment_created': datetime.datetime(2020, 6, 24, 21, 31, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 445183445, 'comment_body': ""'See more' (lower case m)"", 'comment_created': datetime.datetime(2020, 6, 24, 21, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 445186609, 'comment_body': 'The Dashboard retrieves edit data from WMF Cloud replica databases. Sometimes these databases are missing the most recent edits because of replication lag (replag). When this is the case, the missing edits will show up later on.', 'comment_created': datetime.datetime(2020, 6, 24, 21, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 445198469, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 24, 22, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 445198504, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 24, 22, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 445198539, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 24, 22, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 445198575, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 24, 22, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 445198612, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 24, 22, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 445198667, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 24, 22, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}]","[{'commit_sha': '260077457f92e1fecd64c49ddd37488e57827084', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f58ca4ddcb08a354f89efb05a142133ce6273fb', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e66f475f1691f83ac488ba77d5e82edd3a1e50c0', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af3ef57be05eb3d72e52d27785636c62f1a13683', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad40503b36b668db42759e4f10ed602e1860c367', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f20bd1e34dc117afcfee5e89005503bf5f04b717', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58c31442fe090c3a516867320eb075969bcbe75f', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ae4437971a6ebbdea67d39dab94993f113e7cf2', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1fa797405919da30fd8399f49763d300d69db78', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '462a9db46f8ae27259095415cde479d4dc30dc7f', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f581fe8803c6021297983577a653db7cffe34709', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6a50fbf8107278e8b65072acb5773b7e55f371c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f85f357b847c7bc5999206a9ba01fec717f78421', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2581e0f1fc5bdfe03179862bc3a61acc35ac743b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c42527eed8437de56ea4fdb0f1a9eec4bf511c0f', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a1db25743e8d67f75ad6204fe79de1f1a022afd', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4167161cfe9a6840ea82713bbafa7704967be95b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bcc065725f88a8e5278f5f7119ab82fa0d9046c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e480103bc61aafc0cd76b6f6827900135648788', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7ddf20b0564594e1d2a86c5936abf5b5487894', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19a705081171cf07a4a3e7f996dd585e2c0f9c1b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6a2d14c68c5ae9b7c26053bb01101f39a0eb22b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a3e54dd1e2e28ab1e6f037c03bc3e7ddfafd4b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '692ad7985b878a0a501b7a2cd1f8264f0dfdc590', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55447037c1a2d63295b1d7375b807d02eb607150', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
454719769,Surfacing to UI future course update information and some css fixes,"## What this PR does
Surfaces following information to UI:
- Future update date
- Whether or not one-time additional update is scheduled
- Also, includes some CSS fixes
## Screenshots
### Before
![Screenshot from 2020-07-22 01-36-25](https://user-images.githubusercontent.com/37243661/88101692-fcdebc80-cbbb-11ea-8f6d-e90b1222fc91.png)
![Screenshot from 2020-07-22 01-36-12](https://user-images.githubusercontent.com/37243661/88101701-00724380-cbbc-11ea-8efe-fbaa91130aa4.png)

### After
#### Regularly updated
![Screenshot from 2020-08-01 00-29-31](https://user-images.githubusercontent.com/37243661/89081123-498a7a80-d3a8-11ea-84d5-b9f7bbf1b95e.png)
#### No longer updated, but one-time update scheduled
![Screenshot from 2020-08-01 00-30-47](https://user-images.githubusercontent.com/37243661/89081054-2069ea00-d3a8-11ea-9ecf-8022c28b3d08.png)
#### No longer updated
![Screenshot from 2020-08-01 00-29-43](https://user-images.githubusercontent.com/37243661/89081081-2eb80600-d3a8-11ea-8b9f-ce69b6fa94d8.png)




## Additionally includes CSS Fixes of :
### Before and After
![Peek 2020-07-31 03-56](https://user-images.githubusercontent.com/37243661/89073151-91ed6c80-d397-11ea-91b6-3c3461c41d81.gif)
![Peek 2020-08-01 01-57](https://user-images.githubusercontent.com/37243661/89074686-69b33d00-d39a-11ea-9edc-981f2f18e0a3.gif)
### Before and After
![Screenshot from 2020-08-01 01-35-08](https://user-images.githubusercontent.com/37243661/89073070-62d6fb00-d397-11ea-9409-5071fb075e99.png)
![Peek 2020-08-01 01-54](https://user-images.githubusercontent.com/37243661/89074620-47212400-d39a-11ea-8db6-665d26d360dc.gif)
### Before and After
![Peek 2020-08-01 01-32](https://user-images.githubusercontent.com/37243661/89074127-6e2b2600-d399-11ea-89a1-98ca836d312b.gif)
![Screenshot from 2020-08-01 01-52-08](https://user-images.githubusercontent.com/37243661/89075160-2dcca780-d39b-11ea-81b3-2ad41ce1ea5c.png)




",True,4113,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4113,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4113,closed,30,12,7,16,0,5,0,0,[],2020-07-21 20:08:50+00:00,2020-07-31 22:36:04+00:00,872834.0,"10 days, 2:27:14","[{'comment_id': 461794196, 'comment_body': 'Instead of this, I think it would be more useful to define `updates_until` or something like that, which is the date that updates will continue until. This will be much more useful on the frontend, so people know exactly what to expect in terms of continued updates.\r\n\r\nThen on the frontend, you can change the message depending on whether `updates_until` is in the future or not, and you can also separately show a message when a non-updating course has been scheduled for a single update (ie, `needs_update: true`).', 'comment_created': datetime.datetime(2020, 7, 28, 18, 42, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 463284127, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 7, 30, 21, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 463861214, 'comment_body': ""What's going on with the handful of 1-pixel changes?"", 'comment_created': datetime.datetime(2020, 7, 31, 21, 48, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 463869193, 'comment_body': ""This is a borderline case, where the margin should be applied starting from 919px, so that is why the `-1` . At 920px, the margin gets applied but the mobile layout mode hasn't yet been applied (applies at 919px). I am thinking of making CSS changes in a separate PR, possibly over the weekend which would involve consistency of 920px wherever possible, because currently I see 920 (919, etc) is hardcoded at many places"", 'comment_created': datetime.datetime(2020, 7, 31, 22, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 463874492, 'comment_body': 'Okay. A separate PR to clean up the hard-coding would be great.', 'comment_created': datetime.datetime(2020, 7, 31, 22, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': '04a4bdc21187278479b3ff9e48fac97701593bce', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf05229cf458f5328216a51415e6235ca57fdca5', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3869e885e88407f0625f284554dd40bdd7feeaf5', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54b4eb08f5c9acb02b580ca14692b4790d1aa3cb', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '529b82ceda13d08223009bb71fe30f619d7f5812', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc41d32c2bb7b0f27fbc16eabb944a68cb5dc1fc', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f752b3f8b2ffd79f60908050067012b9597ec09', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff5f00512847d1bf4ab5ae8a6b6aa158a65b4be1', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca3a6c759bc6d6da27a134324a8b765cb1826e19', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c85f10a41504c839f866f8a693b3e10ab5be075', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f598a8e7def4a142bcd48dfc8f95a18b6d9220c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5455fff13d7773cfd5c586ac749828118a833a24', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05a34cb8f7a47ab725070fa08a35a43400231893', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3033d7acf390926899bfb64616eb4fdf0312f66b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e78b4b125f33ffb90d7d4c953969549810d16998', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f32a029518725781d829fcfb7d89e1cacd711d48', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
442975729,Orphan lock course update,"## What this PR does
Removes orphan locks occuring in `CourseDataUpdateWorkers`, adds new failure logs in course flags update logs, modifies calculations to still work correctly, now that a mixture of success and failure flags will be there, and also displays the appropriate information in the UI, along with reporting orphan lock information to sentry.

## Screenshots

### Before
--------
![Screenshot from 2020-07-16 22-42-44](https://user-images.githubusercontent.com/37243661/87701618-ebf60b80-c7b5-11ea-865e-05bbf13f1318.png)
![Screenshot from 2020-07-16 22-42-28](https://user-images.githubusercontent.com/37243661/87701659-f44e4680-c7b5-11ea-840a-81ca7a822758.png)

### After
--------
#### Brief information about flags
Last 10 Updates: 2 orphan lock failures (none in latest update), no errors in rest of updates, next statistics update before current time (Last update end time + 23961 seconds = 14 hours ago)
#### Expectations
To display next estimated only modal, message about successful update, Last 10 updates summary
![Screenshot from 2020-07-16 21-52-06](https://user-images.githubusercontent.com/37243661/87696613-aeda4b00-c7ae-11ea-90b0-5dc1a1a78478.png)
![Screenshot from 2020-07-16 21-52-12](https://user-images.githubusercontent.com/37243661/87696625-b4379580-c7ae-11ea-84de-64cc05fbb546.png)

----
#### Brief information about flags
Last 10 Updates: 2 orphan lock failures, 1 update with errors (latest update), next estimated statistics update time after current time (last update + 34766 = in 10 hours)
#### Expectations
To display next estimated in both places, message about update errors, Last 10 updates summary
![Screenshot from 2020-07-16 21-50-58](https://user-images.githubusercontent.com/37243661/87697027-3aec7280-c7af-11ea-827d-4b4d0a46a43b.png)
![Screenshot from 2020-07-16 21-51-02](https://user-images.githubusercontent.com/37243661/87697046-4049bd00-c7af-11ea-83cf-fa34fb303778.png)

----
#### Brief information about flags
Last 10 Updates: 4 orphan lock failures(including last update), rest were fine, next estimated update before current time (last valid end time + 40836 = 10 hours ago)
#### Expectations
To display next estimated only in modal, message about update failure, Last 10 updates summary, correct calculation in next, last update
![Screenshot from 2020-07-16 22-37-05](https://user-images.githubusercontent.com/37243661/87701055-f49a1200-c7b4-11ea-87e8-20b247de1c81.png)
![Screenshot from 2020-07-16 22-37-01](https://user-images.githubusercontent.com/37243661/87701067-f9f75c80-c7b4-11ea-8a85-d120f11be5b5.png)


",True,4099,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4099,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4099,closed,427,51,10,26,2,16,0,0,[],2020-07-01 20:38:15+00:00,2020-07-16 16:37:27+00:00,1281552.0,"14 days, 19:59:12","[{'comment_id': 449584873, 'comment_body': 'What is this doing?', 'comment_created': datetime.datetime(2020, 7, 3, 13, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 449585230, 'comment_body': 'Break this up into smaller methods instead off disabling the complexity cop. That will also make the code more self-documenting, if you choose good method names.', 'comment_created': datetime.datetime(2020, 7, 3, 13, 31, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 449587821, 'comment_body': ""The check for whether it's locked can be extracted to its own method, and you can add a method like `job_exists?` that does `find_job.nil?`."", 'comment_created': datetime.datetime(2020, 7, 3, 13, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 449588896, 'comment_body': 'This is a good time to refactor this class as cleanly as you can. The `health_report` bit can be deleted, and you should figure out which method(s) are the public interface vs which are just going to be called internally, and use `private` to divide them.', 'comment_created': datetime.datetime(2020, 7, 3, 13, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 449589723, 'comment_body': 'What is the advantage of doing it with all courses in a batch, instead of one-by-one inside the block that also schedules each update?', 'comment_created': datetime.datetime(2020, 7, 3, 13, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 449591454, 'comment_body': 'This is fine, but I would also like to have logging on the individaul course record — probably using the same data structure as we already do for logging the completion time of each successful update. So, an orphan lock should be treated like an update that happened but failed, and it should increment count of total updates for a course accordingly.', 'comment_created': datetime.datetime(2020, 7, 3, 13, 45, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 449716889, 'comment_body': ""I am basically searching for scheduled jobs here, though it doesn't seem like the use of `CourseDataUpdateWorker` is scheduled. I am still trying to understand what is going on regarding the issue I mentioned on slack, the use of this is still somewhat unclear to me. [https://github.com/mperham/sidekiq/wiki/API#named-queues](https://github.com/mperham/sidekiq/wiki/API#named-queues)"", 'comment_created': datetime.datetime(2020, 7, 3, 23, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 449716928, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 7, 3, 23, 4, 34, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 449716934, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 7, 3, 23, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 449716946, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 7, 3, 23, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 449717506, 'comment_body': 'There are 2 reasons why I am doing it before the update block\r\n- I did not like the idea of removing orphan locks, and executing jobs one by one as that would be kind of messy. I wanted to move forward with executing the jobs only when the previous ""mess""(orphan locks) were solved.\r\n- It is at times difficult for debugging.', 'comment_created': datetime.datetime(2020, 7, 3, 23, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 449717516, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 7, 3, 23, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 450319776, 'comment_body': 'I think this is exclusively for ""Scheduled Jobs"", which are jobs that sidekiq will run at a particular time. See https://github.com/mperham/sidekiq/wiki/Scheduled-Jobs\r\n\r\nWe don\'t use time-based scheduling for anything at this point, so I think you can remove this.', 'comment_created': datetime.datetime(2020, 7, 6, 15, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 451810743, 'comment_body': 'Yes, removed', 'comment_created': datetime.datetime(2020, 7, 8, 20, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 453853438, 'comment_body': 'I think it would be better to keep the timestamp for this. It could just be the timestamp instead of `true`.', 'comment_created': datetime.datetime(2020, 7, 13, 18, 39, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 455520244, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 7, 16, 5, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}]","[{'commit_sha': 'd647126d91caa2b6c23585ec91ffc0b8c31e051c', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c22ab2b7bdb88d645e52858e7e8c918a37dbfe07', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '279bdece912c16813414dba15221bfd9ff343ca3', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dfba767ebf0f750076e58bec9b53ecf22408736', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1706ada2b33f58d3444ab25b78d6c349496b26e1', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43c640cc0e3c301a8762f1a61be002d5e0e38722', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd79ab0081ad0b1a87260246eeb1d1aca789b792f', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1d3b7b45dbcab4f15ad500c12e49b3ce4dbb0e4', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc07213702d95879e2e13a440a3448e6552fb1d7', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '692305c3aa2075a55c7e59bd647bdccf04f5bd1b', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '790cb7fdff4305182d90df382beec4a1d018a202', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '391b218d271692aed2f60598e9b395477c771d22', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3c09aa36273893abc4cfdd034081c93e03d85b8', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eeb62df11a7ddb6c663c9d616ff1fcbb687e003d', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be12cbde0dd67d2022755b2faff9eda0bf924aec', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91a6650bab42f9da533b9b685ebfbc619f963ee8', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53e62094a541892935f44f4b8a44ca40c035cae2', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3062360c4a0a85bc6d25f8407b29a50a28c6b9a', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52ba8d53a652f49b57530735831c3c2745c8d437', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a93f30ef97efb89e4020e66527c49b9484a68e7e', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e91e8287fe8100f715bf4a3a5a3b7a26e8dd1e9', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb8d68fc40de2d403958dc225b65db34a0156efb', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29dabd692994451dab9e8446351a9718dc2e92ee', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21ce50f4fee7dd0e242398dc53b94f80f4305724', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0f1628b61b393fdf08d9dde2187484ca1e305e1', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7250faeef174d5947993dba6961c6978cac2df86', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
463018449,Moving article status updation to UpdateCourseStats,"## What this PR does
Moving article status updation to UpdateCourseStats.

",True,4139,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4139,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4139,closed,73,58,6,9,2,6,0,0,[],2020-08-04 21:28:48+00:00,2020-08-07 21:25:36+00:00,259008.0,"2 days, 23:56:48","[{'comment_id': 467148779, 'comment_body': ""It looks like this strategy of going through every wiki for every course is left over from before Amit implemented `CoursesWikis`. This should be `course.wikis.each` instead; we only ever count contributions to tracked wikis for each course, so there's no need to deal with pages edited on other wikis."", 'comment_created': datetime.datetime(2020, 8, 7, 16, 37, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 467150358, 'comment_body': ""I don't think the `created_at` part is necessary here. Unlike a `Category`, where it gets created in a state of incomplete info (ie, there's no list of articles for it at the time it gets created), an `Article` record gets created in an up-to-date state at the time the first revisions to that article get imported. So if it was created less than a day ago (and updated only at that time) then it still doesn't need to be updated during this process."", 'comment_created': datetime.datetime(2020, 8, 7, 16, 40, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 467150796, 'comment_body': 'Why is `.to_a` being used here?', 'comment_created': datetime.datetime(2020, 8, 7, 16, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 467211375, 'comment_body': 'I thought of giving the same type of input to `update_status` as before, i.e., `array` (returned by `find_in_batches`), but it seems like `ActiveRecord::Relation` object (returned by `in_batches`) also works the same as array in this case. Removed `to_a`.', 'comment_created': datetime.datetime(2020, 8, 7, 18, 47, 47, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 467211597, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 8, 7, 18, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 467211674, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 8, 7, 18, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}]","[{'commit_sha': '2640dc029520fbb3c841e03e7d223e525fd7dfed', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4591d3e1b3be27e657ea62adf6c712f0e242764', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32249e5635045d0b8fb4a071f74ffb006d986335', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9092f6688b3183ba45d065265a339857fa03c171', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd7da8f37f2d031995f8f3d4550302672cae34ff', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81d3d3f626f9de67dea6035252d9798cbc6c0883', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbd453f9195fbc8323597cf162d1cd82c6005fdb', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '267e5fd61ef29f2d11c6f71b596ebd8a0afbf2aa', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a258849c98be078bb4afcf4f8c2aeb0fff829f38', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
457418797,Moving updation of categories to UpdateCourseStats,"## What this PR does
Removes the daily workers which update the categories daily for current courses and move that behaviour to UpdateCourseStats on a per course basis instead and doing per category updation per day.

NOTE: Consider branch name as moving-updation-categories-to-updatecoursestats, article status updation will be moved in a separate PR",True,4120,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4120,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4120,closed,58,28,5,8,2,4,0,0,[],2020-07-27 21:44:57+00:00,2020-08-03 15:15:32+00:00,581435.0,"6 days, 17:30:35","[{'comment_id': 461203932, 'comment_body': ""I don't think this is the right approach. The decision of whether to update a category should be based on `Category#updated_at` (and probably doesn't need to happen inside `UpdateCourseStats`.\r\n`Category.refresh_categories_for` should apply a query to `Course.categories` to find the ones that were updated more than a day ago, and just update those ones.\r\n\r\nOne additional consideration is to make sure that `updated_at` gets changed when this happens, even if the actual contents of the category didn't change. This might or might not require [`touch`](https://apidock.com/rails/ActiveRecord/Timestamp/touch)."", 'comment_created': datetime.datetime(2020, 7, 27, 22, 21, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 461838419, 'comment_body': 'Done, used `touch` to update `updated_at` timestamp', 'comment_created': datetime.datetime(2020, 7, 28, 19, 54, 24, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 463863257, 'comment_body': 'This method can be deleted now, right?', 'comment_created': datetime.datetime(2020, 7, 31, 21, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 463870732, 'comment_body': 'Yes, deleted....forgot to do that', 'comment_created': datetime.datetime(2020, 7, 31, 22, 21, 53, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}]","[{'commit_sha': '71fc381086dc569f73b8eaa4da0071349d219f4a', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45d2b3d41db84e0eb3b3324e32f5dddadf3fc1f9', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96fa73ae4e04dffa81c75506713649f8355e6f71', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f488f888ba9b0a64c9e6c10dbe314fb89f63c704', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24f6a61fe626605c4f18cd068d815b1621c00be7', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9c0cd016821e7ff721fc16b631f601b562b4b5e', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df3e2a5ad5b9e1ae3ec6fb4b91427f3f7f04bcb', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3dcbc4fec6b46a09f545fa72ba9ac637a4bbb1e', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
410958995,Course specific activity information continued#3847,"## What this PR does
Fixes #3847 .Continuation of #3869 ",True,4002,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4002,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4002,closed,56,7,7,10,0,0,0,0,[],2020-04-29 21:18:26+00:00,2020-07-07 19:54:49+00:00,5956583.0,"68 days, 22:36:23",[],"[{'commit_sha': '1a139963c66d54f667c9101e4d426f2d399b8e2f', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61ac522fadb748829f644a83b9bbafc2e8e46ac5', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '384d0165c30ebb8a19c959c04b2ea87f4e51ca1d', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68213fef7e2cdb8a5288bc211db9f53a05613977', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6422612b14d677710936a6610ac6f76408939cae', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e73881f404194a4341713313605eac6df61ebf02', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4eed85c2167fe2f50b3051bf920c39a95fe6ccc', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '831fe61e8f80aef047abcbde4e068269e0ea9b96', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03279ad2ca87ab46495d598e5d4cecdce7e54ba1', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cb53688e0b4c3f3d9827ac8f040e0717f18620e', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
447827134,Course specific activity improving query#3847,"## What this PR does
Fixes #3847 Improves the way course scoped revisions are received by sending all of them if an additional parameter is true. Earlier, the ids were sent, which were used to kind of filter or intersect with the revisions which are there, leading to weird behaviour if there are no recent tracked scope (course scoped) revisions by keep clicking on 'See More' to get the tracked revisions to appear after a few clicks depending upon the course.

## Screenshots
### Rendering course scoped only when user goes there(talking about only the initial fetch)
![Peek 2020-07-16 02-37](https://user-images.githubusercontent.com/37243661/87596203-5a32c380-c70d-11ea-8385-272f6ce3ac32.gif)

### Different 'See More' limits for both
![Peek 2020-07-16 02-34](https://user-images.githubusercontent.com/37243661/87595997-02945800-c70d-11ea-8854-f7b9b9ab8d6c.gif)
",True,4103,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4103,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4103,closed,83,58,7,8,3,6,0,0,[],2020-07-11 23:02:28+00:00,2020-07-16 15:29:46+00:00,404838.0,"4 days, 16:27:18","[{'comment_id': 453812585, 'comment_body': 'I think you want to use the same `eager_load` in the query here; I believe that prevents N+1 queries when rendering the json for each individual revision.', 'comment_created': datetime.datetime(2020, 7, 13, 17, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 455217647, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 7, 15, 17, 30, 33, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 455298881, 'comment_body': ""This should only be fetched upon request, when a user switches to course-scoped; otherwise, we're doing a lot of extra queries that in most cases will not be used."", 'comment_created': datetime.datetime(2020, 7, 15, 19, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 455349889, 'comment_body': 'Done! `componentDidUpdate()` was making the most sense for me to do this, so I implemented it there', 'comment_created': datetime.datetime(2020, 7, 15, 21, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}, {'comment_id': 455370617, 'comment_body': ""Hmm... not sure that's the best place for it. Why not have it be part of action from clicking the button?"", 'comment_created': datetime.datetime(2020, 7, 15, 21, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 455399667, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 7, 15, 22, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'shashwatkathuria', 'type': 'User'}]","[{'commit_sha': 'e862f4aed953faa0d3b123178afc873c1ee71505', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bad18fbc48818a81fd47cd9589c7a2b319ae3cd0', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dba4437e9d94f84d366ba27a80c6e2c81d865c1', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ebaab029b67ee97efe63049e4cfa841a8afc6ec', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35be8715b25a11d5e077b9397b42489ac44de1a5', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fe3b62b68a74d23c01161702a961ea4b5922f11', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '543badc961d02f37bf7e90e73c1377be783068a8', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11e416fa8cf2e3f7b5b63e68f85ac8217b72d550', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
454782195,Improving Activity Tab.,"Using 'loaded' instead of 'loading' to avoid misleading meaning and added loading spinner as done in other tabs also.
## What this PR does
Fixes last comment mentioned in #4103 .
- Adds loading spinner for each revisions request (all or course scoped)
- Renamed `loading` to `loaded` in both, all scope and course scoped. The misleading meaning regarding `loading` refers to that when the component is mounted, the all scope revisions are loading and then we get the revisions, but, the course scoped revisions are neither loading nor the course scoped revisions are there, hence the misleading meaning of `loading` here.
- Prevents another request by not showing the 'See More' until the previous one has resolved

## Screenshots
### Before (Slow Internet Speed Example on this [example course](https://outreachdashboard.wmflabs.org/courses/Museu_Paulista/Wikiconcurso_do_Museu_Paulista_2020/activity))
![Peek 2020-07-22 03-59](https://user-images.githubusercontent.com/37243661/88114002-957f3780-cbd0-11ea-9940-c62d0a5ffe0b.gif)

### Before
![Peek 2020-07-23 02-26](https://user-images.githubusercontent.com/37243661/88227906-f9b30180-cc8b-11ea-9793-8ef98a729d47.gif)

### After
![Peek 2020-07-23 02-12](https://user-images.githubusercontent.com/37243661/88227322-11d65100-cc8b-11ea-8f9f-81249fdbcb80.gif)

### After (Example on a course with no revisions - Showing no recent activity messsage only when sure, i.e., revisions are loaded)
![Peek 2020-07-23 02-17](https://user-images.githubusercontent.com/37243661/88227414-33cfd380-cc8b-11ea-990f-62ebcc819b44.gif)

",True,4114,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4114,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4114,closed,60,15,5,3,1,0,0,0,[],2020-07-21 22:37:36+00:00,2020-07-28 18:36:40+00:00,590344.0,"6 days, 19:59:04",[],"[{'commit_sha': '97706f89ab126ae072827b9d46d731f77bb9cd36', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77cf8df0685a05bc8f119840051c9961c251d050', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04234563f82b50c84b29f9f9e87af6c13680af85', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
433903699,Removing method CourseUploadImporter.update_courses not used anymore,"## What this PR does
This method was used earlier. It basically runs the `run` method for a list of courses. Its usage was removed in [this commit](https://github.com/WikiEducationFoundation/WikiEduDashboard/commit/5552ee88775c008044233b5643a4baead1134413#diff-29d3b72a735e3bc19cae145d06eba504)
",True,4068,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4068,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4068,closed,3,9,2,2,0,0,0,0,[],2020-06-12 22:08:29+00:00,2020-06-12 23:13:43+00:00,3914.0,1:05:14,[],"[{'commit_sha': 'e497fab5a5fa4d0f60d836c02bdd6d27f3bd3f1a', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c95865c16c0078fbcadf0c9362640b1f8e725ae0', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30
458032530,Added nested directory daily_update/ inside app/workers/ for autoloading.,"## What this PR does
In my development environment, I was getting `NameError`s relating to each worker inside `app/workers/daily_update` on running `rails batch:update_daily`. They were not getting autoloaded as they were inside the nested directory. The difference can be seen using the command `puts ActiveSupport::Dependencies.autoload_paths`. Added `*` to include all nested directories in future also.
Putting the error log of one such worker here:
```
2020-07-28T20:06:33.927Z pid=21034 tid=gssgzvuli WARN: {""context"":""Job raised exception"",""job"":{""retry"":true,""queue"":""daily_update"",""unique"":""until_executed"",""args"":[],""class"":""FindAssignmentsWorker"",""jid"":""0c658b29197a28457ea2eab8"",""created_at"":1595966792.626286,""lock_timeout"":0,""lock_expiration"":null,""unique_prefix"":""uniquejobs"",""unique_args"":[],""unique_digest"":""uniquejobs:9d48b6d34fb898e86b684045aa6f072a"",""newrelic"":{},""enqueued_at"":1595966792.6272924},""jobstr"":""{\""retry\"":true,\""queue\"":\""daily_update\"",\""unique\"":\""until_executed\"",\""args\"":[],\""class\"":\""FindAssignmentsWorker\"",\""jid\"":\""0c658b29197a28457ea2eab8\"",\""created_at\"":1595966792.626286,\""lock_timeout\"":0,\""lock_expiration\"":null,\""unique_prefix\"":\""uniquejobs\"",\""unique_args\"":[],\""unique_digest\"":\""uniquejobs:9d48b6d34fb898e86b684045aa6f072a\"",\""newrelic\"":{},\""enqueued_at\"":1595966792.6272924}""}
2020-07-28T20:06:33.927Z pid=21034 tid=gssgzvuli WARN: NameError: uninitialized constant FindAssignmentsWorker
```

## Screenshots
### Before
![Screenshot from 2020-07-29 01-46-12](https://user-images.githubusercontent.com/37243661/88716884-5ce5dd80-d13d-11ea-90d4-6b3f3c92902b.png)
![Screenshot from 2020-07-29 01-52-40](https://user-images.githubusercontent.com/37243661/88717514-4724e800-d13e-11ea-92d9-516a2650232d.png)

### After
![Screenshot from 2020-07-29 01-39-35](https://user-images.githubusercontent.com/37243661/88716917-666f4580-d13d-11ea-82d5-9028e0b913dd.png)
![Screenshot from 2020-07-29 01-52-23](https://user-images.githubusercontent.com/37243661/88717534-4c823280-d13e-11ea-899d-f79d5854e834.png)


",True,4122,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4122,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4122,closed,1,0,1,1,0,0,0,0,[],2020-07-28 20:18:13+00:00,2020-07-31 15:56:41+00:00,243508.0,"2 days, 19:38:28",[],"[{'commit_sha': '72405ecc357049927bc1603190eb45b17f0b4d4a', 'committer_username': 'shashwatkathuria', 'committer_name': 'Shashwat Kathuria', 'committer_email': None, 'commit_date': datetime.datetime(2018, 3, 10, 13, 31, 55, tzinfo=datetime.timezone.utc)}]",Shashwat Kathuria,37243661,,User,,38,,4,30

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
27940263,WikiEduDashboard,WikiEducationFoundation/WikiEduDashboard,Ruby,598,387,39,217,17320,345,36,73,"[{'id': 467484804, 'number': 4160, 'closed': datetime.datetime(2020, 9, 10, 16, 26, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 16, 11, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2420134.0, 'time_delta': '28 days, 0:15:34', 'additions': 290, 'deletions': 16, 'state': 'closed'}, {'id': 466389626, 'number': 4154, 'closed': datetime.datetime(2020, 9, 10, 17, 29, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 22, 29, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2573976.0, 'time_delta': '29 days, 18:59:36', 'additions': 70, 'deletions': 20, 'state': 'closed'}, {'id': 463018449, 'number': 4139, 'closed': datetime.datetime(2020, 8, 7, 21, 25, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 21, 28, 48, tzinfo=datetime.timezone.utc), 'time_taken': 259008.0, 'time_delta': '2 days, 23:56:48', 'additions': 73, 'deletions': 58, 'state': 'closed'}, {'id': 458032530, 'number': 4122, 'closed': datetime.datetime(2020, 7, 31, 15, 56, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 20, 18, 13, tzinfo=datetime.timezone.utc), 'time_taken': 243508.0, 'time_delta': '2 days, 19:38:28', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 457418797, 'number': 4120, 'closed': datetime.datetime(2020, 8, 3, 15, 15, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 21, 44, 57, tzinfo=datetime.timezone.utc), 'time_taken': 581435.0, 'time_delta': '6 days, 17:30:35', 'additions': 58, 'deletions': 28, 'state': 'closed'}, {'id': 454782195, 'number': 4114, 'closed': datetime.datetime(2020, 7, 28, 18, 36, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 21, 22, 37, 36, tzinfo=datetime.timezone.utc), 'time_taken': 590344.0, 'time_delta': '6 days, 19:59:04', 'additions': 60, 'deletions': 15, 'state': 'closed'}, {'id': 454719769, 'number': 4113, 'closed': datetime.datetime(2020, 7, 31, 22, 36, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 21, 20, 8, 50, tzinfo=datetime.timezone.utc), 'time_taken': 872834.0, 'time_delta': '10 days, 2:27:14', 'additions': 30, 'deletions': 12, 'state': 'closed'}, {'id': 447827134, 'number': 4103, 'closed': datetime.datetime(2020, 7, 16, 15, 29, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 11, 23, 2, 28, tzinfo=datetime.timezone.utc), 'time_taken': 404838.0, 'time_delta': '4 days, 16:27:18', 'additions': 83, 'deletions': 58, 'state': 'closed'}, {'id': 442975729, 'number': 4099, 'closed': datetime.datetime(2020, 7, 16, 16, 37, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 20, 38, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1281552.0, 'time_delta': '14 days, 19:59:12', 'additions': 427, 'deletions': 51, 'state': 'closed'}, {'id': 437315097, 'number': 4080, 'closed': datetime.datetime(2020, 6, 29, 21, 0, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 22, 15, 41, tzinfo=datetime.timezone.utc), 'time_taken': 859484.0, 'time_delta': '9 days, 22:44:44', 'additions': 145, 'deletions': 21, 'state': 'closed'}, {'id': 435361432, 'number': 4076, 'closed': datetime.datetime(2020, 6, 19, 20, 32, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 17, 24, 19, tzinfo=datetime.timezone.utc), 'time_taken': 270501.0, 'time_delta': '3 days, 3:08:21', 'additions': 239, 'deletions': 105, 'state': 'closed'}, {'id': 433903699, 'number': 4068, 'closed': datetime.datetime(2020, 6, 12, 23, 13, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 22, 8, 29, tzinfo=datetime.timezone.utc), 'time_taken': 3914.0, 'time_delta': '1:05:14', 'additions': 3, 'deletions': 9, 'state': 'closed'}, {'id': 424722304, 'number': 4052, 'closed': datetime.datetime(2020, 5, 28, 22, 32, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 28, 20, 38, 29, tzinfo=datetime.timezone.utc), 'time_taken': 6826.0, 'time_delta': '1:53:46', 'additions': 5, 'deletions': 9, 'state': 'closed'}, {'id': 421562334, 'number': 4046, 'closed': datetime.datetime(2020, 5, 28, 16, 8, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 21, 20, 18, 25, tzinfo=datetime.timezone.utc), 'time_taken': 589823.0, 'time_delta': '6 days, 19:50:23', 'additions': 35, 'deletions': 0, 'state': 'closed'}, {'id': 419661607, 'number': 4039, 'closed': datetime.datetime(2020, 6, 24, 22, 36, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 18, 18, 13, 33, tzinfo=datetime.timezone.utc), 'time_taken': 3212591.0, 'time_delta': '37 days, 4:23:11', 'additions': 176, 'deletions': 106, 'state': 'closed'}, {'id': 415776126, 'number': 4027, 'closed': datetime.datetime(2020, 5, 15, 22, 7, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 10, 20, 27, 52, tzinfo=datetime.timezone.utc), 'time_taken': 437949.0, 'time_delta': '5 days, 1:39:09', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 413793056, 'number': 4016, 'closed': datetime.datetime(2020, 5, 20, 17, 56, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 5, 22, 56, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1278003.0, 'time_delta': '14 days, 19:00:03', 'additions': 111, 'deletions': 81, 'state': 'closed'}, {'id': 410958995, 'number': 4002, 'closed': datetime.datetime(2020, 7, 7, 19, 54, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 29, 21, 18, 26, tzinfo=datetime.timezone.utc), 'time_taken': 5956583.0, 'time_delta': '68 days, 22:36:23', 'additions': 56, 'deletions': 7, 'state': 'closed'}, {'id': 406793976, 'number': 3987, 'closed': datetime.datetime(2020, 4, 24, 20, 16, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 21, 17, 13, 26, tzinfo=datetime.timezone.utc), 'time_taken': 270191.0, 'time_delta': '3 days, 3:03:11', 'additions': 44, 'deletions': 39, 'state': 'closed'}, {'id': 406331069, 'number': 3985, 'closed': datetime.datetime(2020, 4, 21, 16, 46, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 20, 22, 15, 27, tzinfo=datetime.timezone.utc), 'time_taken': 66656.0, 'time_delta': '18:30:56', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 406282063, 'number': 3984, 'closed': datetime.datetime(2020, 4, 20, 21, 52, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 20, 20, 23, 5, tzinfo=datetime.timezone.utc), 'time_taken': 5359.0, 'time_delta': '1:29:19', 'additions': 16, 'deletions': 14, 'state': 'closed'}, {'id': 406260973, 'number': 3983, 'closed': datetime.datetime(2020, 4, 20, 21, 51, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 20, 19, 38, 31, tzinfo=datetime.timezone.utc), 'time_taken': 7999.0, 'time_delta': '2:13:19', 'additions': 116, 'deletions': 15, 'state': 'closed'}, {'id': 405282759, 'number': 3977, 'closed': datetime.datetime(2020, 4, 20, 16, 29, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 17, 18, 38, 22, tzinfo=datetime.timezone.utc), 'time_taken': 251448.0, 'time_delta': '2 days, 21:50:48', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 404780726, 'number': 3975, 'closed': datetime.datetime(2020, 4, 20, 19, 56, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 22, 3, 50, tzinfo=datetime.timezone.utc), 'time_taken': 337968.0, 'time_delta': '3 days, 21:52:48', 'additions': 51, 'deletions': 152, 'state': 'closed'}, {'id': 403941494, 'number': 3970, 'closed': datetime.datetime(2020, 4, 17, 16, 16, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 15, 19, 17, 1, tzinfo=datetime.timezone.utc), 'time_taken': 161958.0, 'time_delta': '1 day, 20:59:18', 'additions': 96, 'deletions': 11, 'state': 'closed'}, {'id': 403038842, 'number': 3963, 'closed': datetime.datetime(2020, 4, 15, 20, 25, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 14, 8, 20, 5, tzinfo=datetime.timezone.utc), 'time_taken': 129925.0, 'time_delta': '1 day, 12:05:25', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 401053807, 'number': 3953, 'closed': datetime.datetime(2020, 4, 13, 21, 22, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 8, 20, 7, 12, tzinfo=datetime.timezone.utc), 'time_taken': 436512.0, 'time_delta': '5 days, 1:15:12', 'additions': 110, 'deletions': 14, 'state': 'closed'}, {'id': 400490049, 'number': 3944, 'closed': datetime.datetime(2020, 5, 18, 22, 16, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 20, 37, 43, tzinfo=datetime.timezone.utc), 'time_taken': 3548316.0, 'time_delta': '41 days, 1:38:36', 'additions': 30, 'deletions': 3, 'state': 'closed'}, {'id': 394186326, 'number': 3907, 'closed': datetime.datetime(2020, 3, 26, 15, 13, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 26, 13, 56, 39, tzinfo=datetime.timezone.utc), 'time_taken': 4620.0, 'time_delta': '1:17:00', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 392404448, 'number': 3881, 'closed': datetime.datetime(2020, 3, 26, 19, 15, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 23, 14, 1, 41, tzinfo=datetime.timezone.utc), 'time_taken': 278015.0, 'time_delta': '3 days, 5:13:35', 'additions': 17, 'deletions': 11, 'state': 'closed'}, {'id': 390700479, 'number': 3875, 'closed': datetime.datetime(2020, 3, 19, 15, 38, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 22, 39, 22, tzinfo=datetime.timezone.utc), 'time_taken': 61167.0, 'time_delta': '16:59:27', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 389504305, 'number': 3869, 'closed': datetime.datetime(2020, 7, 16, 17, 28, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 16, 21, 29, 34, tzinfo=datetime.timezone.utc), 'time_taken': 10526344.0, 'time_delta': '121 days, 19:59:04', 'additions': 30, 'deletions': 1, 'state': 'closed'}, {'id': 389092302, 'number': 3867, 'closed': datetime.datetime(2020, 3, 17, 21, 55, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 16, 9, 14, 23, tzinfo=datetime.timezone.utc), 'time_taken': 132060.0, 'time_delta': '1 day, 12:41:00', 'additions': 13, 'deletions': 0, 'state': 'closed'}, {'id': 386879002, 'number': 3863, 'closed': datetime.datetime(2020, 3, 12, 15, 32, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 11, 19, 29, 35, tzinfo=datetime.timezone.utc), 'time_taken': 72156.0, 'time_delta': '20:02:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 383865607, 'number': 3842, 'closed': datetime.datetime(2023, 2, 28, 21, 27, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 4, 20, 48, 56, tzinfo=datetime.timezone.utc), 'time_taken': 94264694.0, 'time_delta': '1091 days, 0:38:14', 'additions': 65, 'deletions': 3, 'state': 'closed'}, {'id': 382658789, 'number': 3837, 'closed': datetime.datetime(2020, 3, 24, 20, 4, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 2, 23, 18, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1889134.0, 'time_delta': '21 days, 20:45:34', 'additions': 19, 'deletions': 1, 'state': 'closed'}, {'id': 381944617, 'number': 3828, 'closed': datetime.datetime(2020, 3, 2, 22, 37, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 29, 21, 3, 59, tzinfo=datetime.timezone.utc), 'time_taken': 178422.0, 'time_delta': '2 days, 1:33:42', 'additions': 341, 'deletions': 80, 'state': 'closed'}, {'id': 381470063, 'number': 3823, 'closed': datetime.datetime(2020, 3, 12, 22, 23, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 28, 16, 14, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1145304.0, 'time_delta': '13 days, 6:08:24', 'additions': 30, 'deletions': 6, 'state': 'closed'}, {'id': 381353715, 'number': 3817, 'closed': datetime.datetime(2020, 2, 28, 18, 7, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 28, 11, 57, 13, tzinfo=datetime.timezone.utc), 'time_taken': 22235.0, 'time_delta': '6:10:35', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 381181555, 'number': 3815, 'closed': datetime.datetime(2020, 2, 28, 22, 47, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 28, 3, 21, 33, tzinfo=datetime.timezone.utc), 'time_taken': 69938.0, 'time_delta': '19:25:38', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 381066141, 'number': 3814, 'closed': datetime.datetime(2021, 5, 19, 1, 54, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 27, 20, 49, 5, tzinfo=datetime.timezone.utc), 'time_taken': 38552743.0, 'time_delta': '446 days, 5:05:43', 'additions': 3, 'deletions': 2, 'state': 'closed'}]"
