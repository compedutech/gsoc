pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
714864476,"Work Product of GSoC 2021 project ""[Gridap] Visualizing PDE approximations in Julia with Gridap.jl and Makie.jl""","## Overview

This Pull Request serves as a general description for the [GridapMakie project](https://summerofcode.withgoogle.com/projects/#6231266174697472) as part of the [Google Summer of Code](https://summerofcode.withgoogle.com) 2021 program. The main goal of the project is to improve the data visualization experience of [Gridap.jl](https://github.com/gridap/Gridap.jl), a numerical software for the solution of partial differential equations, by providing the tools towards a fully integrated, end-to-end workflow, from code development and testing, to data visualization. To this end, a new integration with [Makie.jl](https://github.com/JuliaPlots/Makie.jl), a plotting environment in the Julia programming language, has been developed in [GridapMakie.jl](https://github.com/gridap/GridapMakie.jl). By doing so, the user no longer needs to rely on external applications (e.g., Paraview), to visualize Gridap data types.

## Package Summary

Using conversions from Gridap types to [GeometryBasics.jl](https://github.com/JuliaGeometry/GeometryBasics.jl), GridapMakie.jl allows to plot finite element (FE) triangulations as well as FE functions defined on them via the color attribute. Moreover, the API that GridapMakie uses is quite intuitive for previous Makie users: to visualize surface or volume meshes, we have extended the functions `mesh` and `plot`, whereas the visualization of lines (e.g., cell boundaries) and points (e.g., cell vertices) is handled by `wireframe` and `scatter`. Of course, each plotting function has its mutating variant (`plot!`, `mesh!`, etc.) in order to superpose to existing plots.

## Student-Mentor Communication

Overall, the process has been as smooth as velvet. I joined the Gridap Slack channel, where I communicated with my mentors towards the accomplishment of the project goals, as stated in the project proposal. Additionally, we hold a weekly meeting every Tuesday morning to discuss problems as well as new directions and perspectives. These meetings did usually surpass a two-hour duration and were always clarifying for both parties, the student and the mentors.

## Coding Work

We started off trying to visualize 2D and 3D plot objects (as in #16) with straightforward plot conversions. We then turned to create our own [Plot Recipes](https://makie.juliaplots.org/stable/recipes.html) in #17 and extending the visualization to account for FE approximations in #18. However, we were not convinced by our plot recipes due to potentially confusing functions names, and restructured the way GridapMakie plots objects: instead of relying on the recipes, we would just extend the existing Makie functions. This way, the user would feel more comfortable with an easy-to-understand API (see #23). All along, these functions do have [Observable](http://makie.juliaplots.org/stable/interaction/nodes.html) support, allowing the creation of animations and interactive plots. For proof of results, see the Examples in GridapMakie.jl [README](https://github.com/gridap/GridapMakie.jl/blob/master/README.md) file. As seen, most of the objectives set in the project proposal have been reached. Also, the [GSoC 2021 blog](https://paurierap.github.io) contains a follow-up of the steps taken towards the completion of GridapMakie, which, by the way, can always be expanded.

## Next steps

Finally, future work on the package will concern higher-order visualization in #27 (for example, meshes with curved elements and quadratic polynomials) or quadrilateral meshes in #33, the creation of PackageCompiler.jl warm-up files to reduce Makie start-up time (in #26), or the extension of the Makie function `arrows` to visualize vector fields (currently, any vectorial field is plotted according to the norm of the function at a certain point). In addition to those,  we could attain the visualization of sections and slices of triangulations (e.g., the section created by the intersection of a grid and a plane), which would be achieved using [GridapEmbedded.jl](https://github.com/gridap/GridapEmbedded.jl) and the [latest Makie release](https://discourse.julialang.org/t/ann-makie-jl-0-15/64704), where support for slices was announced.",True,24,https://api.github.com/repos/gridap/GridapMakie.jl/pulls/24,https://github.com/gridap/GridapMakie.jl/pull/24,closed,843,523,28,60,3,27,1,0,[{'name': 'gsoc'}],2021-08-18 08:35:37+00:00,2021-08-22 13:37:22+00:00,363705.0,"4 days, 5:01:45","[{'comment_id': 693269925, 'comment_body': '@fverdugo @ericneiva @paurierap ... I just realized that we are not getting Julia code highlighted syntax in the rendered `README.md` file. Is this as expected? Not sure why ... but might this be related to Literate.jl parameters? ', 'comment_created': datetime.datetime(2021, 8, 20, 23, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'amartinhuertas', 'type': 'User'}, {'comment_id': 693271584, 'comment_body': 'I would replace ""the current way of visualizing data from ... Paraview"" by... \r\n\r\n""before the inception of `GridapMakie.jl`, the only approach available to data visualization of `Gridap.jl` computations was to write simulation data to data files (e.g., in vtu format) for later visualization with, e.g., Paraview or VisIt.""', 'comment_created': datetime.datetime(2021, 8, 21, 0, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'amartinhuertas', 'type': 'User'}, {'comment_id': 693272319, 'comment_body': 'Replace\r\n\r\n""The visualization of Ω along with the edges of its faces and its vertices""\r\n\r\nby \r\n\r\n""The visualization of the vertices and edges of Ω can be achieved as follows"" ???', 'comment_created': datetime.datetime(2021, 8, 21, 0, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'amartinhuertas', 'type': 'User'}, {'comment_id': 693274706, 'comment_body': 'Solved using [Literate\'s interaction with Documenter](https://fredrikekre.github.io/Literate.jl/v2/documenter/). Apparently, the attribute `documenter` is `true` by default in `Literate.markdown`. Just use `Literate.markdown(""README.jl"", "".."", documenter=false)` in `make.jl`.', 'comment_created': datetime.datetime(2021, 8, 21, 0, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'paurierap', 'type': 'User'}, {'comment_id': 693279691, 'comment_body': 'Update Build Status link to point to Github Actions', 'comment_created': datetime.datetime(2021, 8, 21, 1, 1, 28, tzinfo=datetime.timezone.utc), 'commenter': 'amartinhuertas', 'type': 'User'}, {'comment_id': 693319358, 'comment_body': 'You can delete the `travis.yml` file in the parent folder, because its job is done by this one :point_down: ', 'comment_created': datetime.datetime(2021, 8, 21, 7, 30, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ericneiva', 'type': 'User'}, {'comment_id': 693327620, 'comment_body': 'I would assume that the user is executing this README.jl outside of the package repository. Thus, I would add a couple of comments to tell the user where can they get `model.json` from (a link to the file) and where should they store it (current dir).', 'comment_created': datetime.datetime(2021, 8, 21, 8, 55, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ericneiva', 'type': 'User'}, {'comment_id': 693328315, 'comment_body': 'I think this line of code assumes that a folder `images` is available at the current dir of execution. If the user executes this script away from the dir of the readme file `_readme`, it will likely fail. I would either add a command to create the `images` folder or store it simply at `animation.gif`, which should work.', 'comment_created': datetime.datetime(2021, 8, 21, 9, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ericneiva', 'type': 'User'}, {'comment_id': 693329954, 'comment_body': 'Alternatively, you can add, before instantiating the model\r\n\r\n```julia\r\nurl=""https://github.com/gridap/GridapMakie.jl/raw/d5d74190e68bd310483fead8a4154235a61815c5/_readme/model.json""\r\ndownload(url,""model.json"")\r\n```', 'comment_created': datetime.datetime(2021, 8, 21, 9, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ericneiva', 'type': 'User'}, {'comment_id': 693330678, 'comment_body': 'Or add `mkpath(""images"")` before recording.', 'comment_created': datetime.datetime(2021, 8, 21, 9, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ericneiva', 'type': 'User'}, {'comment_id': 693331909, 'comment_body': 'Do you need `using Gridap.Geometry` and `using Gridap.ReferenceFEs`?', 'comment_created': datetime.datetime(2021, 8, 21, 9, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ericneiva', 'type': 'User'}, {'comment_id': 693336696, 'comment_body': 'We actually do not. `using GeometryBasics` can be removed as well.', 'comment_created': datetime.datetime(2021, 8, 21, 10, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'paurierap', 'type': 'User'}, {'comment_id': 693339272, 'comment_body': 'I added both alternatives, just for versatility!', 'comment_created': datetime.datetime(2021, 8, 21, 10, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'paurierap', 'type': 'User'}, {'comment_id': 693340121, 'comment_body': ""I think the best way is to create the `images` folder and store the figures and animations there, so that it's more comfortable for the user. I will also be showing how to save the figures."", 'comment_created': datetime.datetime(2021, 8, 21, 10, 59, 39, tzinfo=datetime.timezone.utc), 'commenter': 'paurierap', 'type': 'User'}, {'comment_id': 693341871, 'comment_body': 'Even better, Ι only added the second one along with a directory `models` in case more meshes are needed. ', 'comment_created': datetime.datetime(2021, 8, 21, 11, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'paurierap', 'type': 'User'}, {'comment_id': 693343498, 'comment_body': 'Agreed', 'comment_created': datetime.datetime(2021, 8, 21, 11, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ericneiva', 'type': 'User'}, {'comment_id': 693359393, 'comment_body': 'Add also `FileIO`', 'comment_created': datetime.datetime(2021, 8, 21, 14, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'fverdugo', 'type': 'User'}, {'comment_id': 693359654, 'comment_body': 'Define acronym FE the first time it appears: finite element (FE)', 'comment_created': datetime.datetime(2021, 8, 21, 14, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'fverdugo', 'type': 'User'}, {'comment_id': 693359756, 'comment_body': 'of the vertices, edges, and faces', 'comment_created': datetime.datetime(2021, 8, 21, 14, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'fverdugo', 'type': 'User'}, {'comment_id': 693359920, 'comment_body': 'a nodal field -> a FE function `uh` constructed with Gridap', 'comment_created': datetime.datetime(2021, 8, 21, 14, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'fverdugo', 'type': 'User'}, {'comment_id': 693359977, 'comment_body': 'cell field -> cell values', 'comment_created': datetime.datetime(2021, 8, 21, 14, 16, 22, tzinfo=datetime.timezone.utc), 'commenter': 'fverdugo', 'type': 'User'}, {'comment_id': 693360092, 'comment_body': 'FE approximations -> functions', 'comment_created': datetime.datetime(2021, 8, 21, 14, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'fverdugo', 'type': 'User'}, {'comment_id': 693487217, 'comment_body': '@paurierap ... a final comment on my side with regards to the README.jl file. Can the images be down scaled? (e.g., reduce to 2/3 of current size) I think this would improve the reading experience.', 'comment_created': datetime.datetime(2021, 8, 22, 11, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'amartinhuertas', 'type': 'User'}, {'comment_id': 693490915, 'comment_body': 'How do they look now?', 'comment_created': datetime.datetime(2021, 8, 22, 11, 58, 58, tzinfo=datetime.timezone.utc), 'commenter': 'paurierap', 'type': 'User'}, {'comment_id': 693496043, 'comment_body': 'can they be horizontally centered? perhaps you might have to use html embedded within markdown for such purpose \r\n\r\nif you find it too complicated, let us leave the figures as they were at the beginning \r\n\r\nThanks! ', 'comment_created': datetime.datetime(2021, 8, 22, 12, 37, 56, tzinfo=datetime.timezone.utc), 'commenter': 'amartinhuertas', 'type': 'User'}, {'comment_id': 693497255, 'comment_body': 'There you have it! ', 'comment_created': datetime.datetime(2021, 8, 22, 12, 47, 23, tzinfo=datetime.timezone.utc), 'commenter': 'paurierap', 'type': 'User'}, {'comment_id': 693500819, 'comment_body': 'Great!', 'comment_created': datetime.datetime(2021, 8, 22, 13, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'amartinhuertas', 'type': 'User'}]","[{'commit_sha': '748e700145c7b7a2471f4ac0b2a11a0d0f6b5fec', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07811afdbfcb7181841117e86be345e27f0e1d19', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4691e97b4cedf64acb014b83fc84c43d2b71727', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d994daf650823b908dee5a68bae34cf211ac399', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '591dfd1980b9c0ab89e6a7165864a8d237e226ff', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a79447840b7cbe31fb557955543547d7c01f6eca', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79fa6e87d60062efcfc421cfca49dd5e64f63d51', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4884d0f483e1e3ac816b12a457712f3da79de57c', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56b4fe0a89fd376566db82b2d26322f4060dbcd7', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4204caed0a9faef42a2c66b0663770db3138c61b', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4097f4b6fdb5d4f69d0e0260c6d04fa50f7690f', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ddfea9ccac2d96183e044b8d4301bc5b0299997', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcadf313ba3d7ff028309a6dbc6b495829e29300', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d71683eb136bb1a304b93d95b65d7f9b811b8dd', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82f4415556dd58c56a85e3014a833ba51b1af9b4', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '464639aa685fb4ef7158cd98c0397b0e237c71be', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e64ef595efd677ddd20dbf04000ca30d6f60dbf', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45823ac199b5a5c1377cfd503113b3eaf13987ae', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc9f075c6e56afbbebfe858849d68a2fd05bba2f', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e644512593228e20422c9d1620704c3aa72a74d', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aa99636b77d12416270d422db7b779dd36d2530', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6f9d290dd9a786a52470ce54770b41be02c8c78', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e38b8181cace00f433588731add1c510a4c8c9d4', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e36cab69e539b83513bd20f7965f032e7305a7bc', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a61f6ed012b6dbf98de7460c499eec98de76c11', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b3fecd70896dfe523f13d386b5d172e838b8b6f', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ea60aa4735ce50c2e3c4e9cd4fdc6aa1a57eeb9', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72168c8ce935c8dcdebecd0957eb3fcb66a9d377', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4645363a8dc73ba957960ca5256f63843e38dbb', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f5c39837943f3467340982156d0891aead98f13', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbf5674961395d7c67bf4b10ef6b409993d2c33b', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e504281621f12d3ea7432077ce1e9e7c92d4d44', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c04bd2e458b57f44c080ce0a8b3335877a6e9313', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a7421f582dbd270fa7a583fe116452d3b0358c6', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5275c8406c2a830ae2a849225cbe9f3f119afde8', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b5495f04f1974de4defd0171961da7cb19f8f33', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51f198b711d3fa61f43038cacea65e7bf2426e77', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f79149fc2436704fa10edc7bba80f03d1752a411', 'committer_username': 'amartinhuertas', 'committer_name': 'Alberto F. Martin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 13, 9, 3, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7ed6e69a69927b28d1f2b03dd5ecba343d63b21', 'committer_username': 'amartinhuertas', 'committer_name': 'Alberto F. Martin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 13, 9, 3, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c758a56c21fd1f1e0a08c93835ec7adc26257ef5', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3646d9824d0122f1337def26c390793d65e5829', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68352b61e5813f0bf239c341c343b75f553c947d', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bbbd406245e95346db9afc60a3b763f4af6a012', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85ecc211711b1fa607c1d6e1014342326e55f946', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa1ffe1fcfd053e216ae45ef7a37acf1338c1494', 'committer_username': 'fverdugo', 'committer_name': 'Francesc Verdugo', 'committer_email': 'f.verdugo.rojano@vu.nl', 'commit_date': datetime.datetime(2019, 3, 13, 7, 1, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf4378eeecff8c930aeced833782c96c0180a136', 'committer_username': 'amartinhuertas', 'committer_name': 'Alberto F. Martin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 13, 9, 3, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec81ea27f118a98c319f6091475ceaedef6d16ea', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0d8d921c7a6e4af590e90b5493eed1c046bdcec', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69d26ee36fdc92ef62329924ce1829f5838de3c2', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12b0ad277e3bb6d3311b28ebde563787107a726a', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9750f2e9391fe5b4d0554b96541867e1ce6638f', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ded7b10cce9d36dc37206479e53577550b06a1c3', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d354d25373e2266d794a964deddf406b6517a7a', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '087d2bed58b7d4d5a204e3ea9a229f4402a2bc22', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bec5951b1be3feadbd35053b2b3966759e1747d', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5d74190e68bd310483fead8a4154235a61815c5', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59d4e9bf8bf1995872164cbb2a5436b1c756d660', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da571c5f100b714cc8a4bad908c54d6e33b97d06', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cf6953682885fc765271c0a401ecfbe4b5b0c38', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f91a21ba49faf3f16cb4db634d94f514922fba1', 'committer_username': 'paurierap', 'committer_name': 'Pau Riera', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 25, 16, 39, 57, tzinfo=datetime.timezone.utc)}]",Pau Riera,64323465,,User,,9,,2,2

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
286715652,GridapMakie.jl,gridap/GridapMakie.jl,Julia,8,33,5,8,127,29,27,18,"[{'id': 719386381, 'number': 39, 'closed': None, 'created': datetime.datetime(2021, 8, 25, 8, 41, 24, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 71, 'deletions': 14, 'state': 'open'}, {'id': 717327250, 'number': 35, 'closed': datetime.datetime(2021, 8, 22, 15, 36, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 22, 15, 19, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1020.0, 'time_delta': '0:17:00', 'additions': 8, 'deletions': 8, 'state': 'closed'}, {'id': 717314546, 'number': 31, 'closed': datetime.datetime(2021, 8, 22, 14, 12, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 22, 13, 57, 25, tzinfo=datetime.timezone.utc), 'time_taken': 914.0, 'time_delta': '0:15:14', 'additions': 0, 'deletions': 46, 'state': 'closed'}, {'id': 714867453, 'number': 25, 'closed': datetime.datetime(2021, 8, 20, 7, 54, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 8, 39, 45, tzinfo=datetime.timezone.utc), 'time_taken': 170067.0, 'time_delta': '1 day, 23:14:27', 'additions': 553, 'deletions': 167, 'state': 'closed'}, {'id': 714864476, 'number': 24, 'closed': datetime.datetime(2021, 8, 22, 13, 37, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 8, 35, 37, tzinfo=datetime.timezone.utc), 'time_taken': 363705.0, 'time_delta': '4 days, 5:01:45', 'additions': 843, 'deletions': 523, 'state': 'closed'}, {'id': 691782214, 'number': 20, 'closed': datetime.datetime(2021, 8, 10, 7, 50, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 23, 0, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2105387.0, 'time_delta': '24 days, 8:49:47', 'additions': 451, 'deletions': 98, 'state': 'closed'}, {'id': 691777136, 'number': 19, 'closed': datetime.datetime(2021, 7, 16, 22, 55, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 22, 41, 39, tzinfo=datetime.timezone.utc), 'time_taken': 830.0, 'time_delta': '0:13:50', 'additions': 295, 'deletions': 91, 'state': 'closed'}]"
