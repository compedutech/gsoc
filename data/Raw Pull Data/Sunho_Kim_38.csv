pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1521838796,[ORC] Introduce RedirectionManager interface and implementation using JITLink.,"This patch introduces RedirectionManager and RedirectableSymbolManager interfaces which abstracts the redirection of call to certain symbols. It also adds JITLink implmenetation of such interface along with testcases covering basic use cases.

This patch is from https://reviews.llvm.org/D157859",False,66802,https://api.github.com/repos/llvm/llvm-project/pulls/66802,https://github.com/llvm/llvm-project/pull/66802,closed,518,0,7,1,4,0,0,0,[],2023-09-19 18:56:50+00:00,2024-04-11 09:15:56+00:00,17677146.0,"204 days, 14:19:06",[],"[{'commit_sha': '9d759677e725c244a7a3eb06864d6474253b6d86', 'committer_username': 'sunho', 'committer_name': 'Sunho Kim', 'committer_email': 'ksunhokim123@gmail.com', 'commit_date': datetime.datetime(2015, 5, 5, 4, 25, 30, tzinfo=datetime.timezone.utc)}]",Sunho Kim,12246126,ksunhokim123@gmail.com,User,,62,,44,102
1521927589,[ORC] Introduce IRPartitionLayer for common partition functionality.,"The IR module partitioning logic has been embeded in CompileOnDemandLayer but this functionality is also required for other purpose such as re-optimization.
This patch splits that IR partitioning logic out of CompileOnDemandLayer into a new IR layer IRPartitionLayer.

A motivation behind making it into new IR layer is for the possibility of ""lazy re-optimizing JIT"" where we'd like to have a composition like ""CompileOnDemandLayer -> IRPartitionLayer -> ReOptLayer"" as well as ordinary reoptimization like ""IRPartitionLayer -> ReOptLayer""",False,66812,https://api.github.com/repos/llvm/llvm-project/pulls/66812,https://github.com/llvm/llvm-project/pull/66812,closed,415,322,10,1,1,0,0,0,[],2023-09-19 20:12:45+00:00,2024-04-11 09:15:33+00:00,17672568.0,"204 days, 13:02:48",[],"[{'commit_sha': 'adac015517504aa40eafb15fded4f7ab4b4b780d', 'committer_username': 'sunho', 'committer_name': 'Sunho Kim', 'committer_email': 'ksunhokim123@gmail.com', 'commit_date': datetime.datetime(2015, 5, 5, 4, 25, 30, tzinfo=datetime.timezone.utc)}]",Sunho Kim,12246126,ksunhokim123@gmail.com,User,,62,,44,102
1525402764,[ORC] Implement basic reoptimization.,,True,67050,https://api.github.com/repos/llvm/llvm-project/pulls/67050,https://github.com/llvm/llvm-project/pull/67050,closed,1548,325,21,3,6,13,3,0,"[{'name': 'clang'}, {'name': 'compiler-rt'}, {'name': 'clang:codegen'}]",2023-09-21 18:47:16+00:00,2024-04-26 05:43:07+00:00,18788151.0,"217 days, 10:55:51","[{'comment_id': 1334921827, 'comment_body': 'No braces needed for single-line loops. :)', 'comment_created': datetime.datetime(2023, 9, 23, 4, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1334921960, 'comment_body': 'This could just be:\r\n```c++\r\n  return JD.define(std::make_unique<RedirectableMaterializationUnit>(*this, InitialDests), RT);\r\n```', 'comment_created': datetime.datetime(2023, 9, 23, 4, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1334922483, 'comment_body': 'Stray debugging output?', 'comment_created': datetime.datetime(2023, 9, 23, 4, 57, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1334923148, 'comment_body': ""I think the call to `redirectInner` should precede the call to replace: As soon as replace runs anyone waiting on `NewSymbolDefs` will be notified that those symbols are available, but they're not actually usable until the call to `redirectInner`, right?\r\n\r\nYou should also return the stubs to the pool on all three of the failure paths (or add a FIXME that we should do that in the future)."", 'comment_created': datetime.datetime(2023, 9, 23, 5, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1334923296, 'comment_body': 'This could just be:\r\n```c++\r\nreturn ES.getExecutorProcessControl().getMemoryAccess().writePointers(PtrWrites);\r\n```', 'comment_created': datetime.datetime(2023, 9, 23, 5, 5, 48, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1334924030, 'comment_body': ""We only need one anchor symbol to trigger emission of the graph. Eventually I think this could be sped up by emitting:\r\n```asm\r\n.section <JumpStubTableName>\r\n__<JumpStubTableName>.<++Idx>:\r\n  ... stubs ...\r\n.section <StubPtrTableName>\r\n__<StubPtrTableName>.<Idx>:\r\n  ... ptrs ...\r\n```\r\n\r\nThen looking up `__JumpStubTableName.<Idx>` and `__StubPtrTableName.<Idx>` and using the stub and pointer sizes to stride through the resulting addresses.\r\n\r\nI don't think this change needs to happen before the commit though -- you could add a FIXME and this can be handled in the future."", 'comment_created': datetime.datetime(2023, 9, 23, 5, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1335099369, 'comment_body': ""It'd be good to add a class comment explaining the layer's behavior. (I know the file comment covers this, but people looking up the type docs may not see that)."", 'comment_created': datetime.datetime(2023, 9, 24, 4, 28, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1554646889, 'comment_body': 'It would help to have a class comment here pointing people to `RedirectableSymbolManager::createRedirectableSymbols`.', 'comment_created': datetime.datetime(2024, 4, 6, 17, 52, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1554647041, 'comment_body': '`ObjLinkingLayer` already has an `ExecutionSession` member that you could re-use to save a pointer here if you wanted.', 'comment_created': datetime.datetime(2024, 4, 6, 17, 53, 54, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1564284218, 'comment_body': 'Include guard should be `LLVM_EXECUTIONENGINE_ORC_JITLINKREDIRECABLESYMBOLMANAGER_H`.', 'comment_created': datetime.datetime(2024, 4, 13, 22, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1564311108, 'comment_body': 'Include guard should be `LLVM_EXECUTIONENGINE_ORC_REOPTIMIZELAYER_H` to match the file name.', 'comment_created': datetime.datetime(2024, 4, 13, 23, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1564314297, 'comment_body': 'Use of this type seems to be contained within the `ReOptimizeLayer` -- could it be a member of that class?', 'comment_created': datetime.datetime(2024, 4, 13, 23, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'lhames', 'type': 'User'}, {'comment_id': 1586463699, 'comment_body': 'Typo: `reigsterRuntimeFunctions` -> `registerRuntimeFunctions`', 'comment_created': datetime.datetime(2024, 5, 1, 16, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'JPMMaia', 'type': 'User'}]","[{'commit_sha': '7f4db328ad13c37cb68e10a759cecc3851bef89b', 'committer_username': 'sunho', 'committer_name': 'Sunho Kim', 'committer_email': 'ksunhokim123@gmail.com', 'commit_date': datetime.datetime(2015, 5, 5, 4, 25, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6059562cb908e27675b2505cc03bad4bab9566a1', 'committer_username': 'sunho', 'committer_name': 'Sunho Kim', 'committer_email': 'ksunhokim123@gmail.com', 'commit_date': datetime.datetime(2015, 5, 5, 4, 25, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd22243c0102234c72b1c5eb2077607860930cf14', 'committer_username': 'sunho', 'committer_name': 'Sunho Kim', 'committer_email': 'ksunhokim123@gmail.com', 'commit_date': datetime.datetime(2015, 5, 5, 4, 25, 30, tzinfo=datetime.timezone.utc)}]",Sunho Kim,12246126,ksunhokim123@gmail.com,User,,62,,44,102

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
75821432,llvm-project,llvm/llvm-project,LLVM,11344,27593,587,6436,509543,25664,647,2905,"[{'id': 1527581140, 'number': 67253, 'closed': datetime.datetime(2023, 9, 24, 3, 52, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 24, 3, 51, 51, tzinfo=datetime.timezone.utc), 'time_taken': 10.0, 'time_delta': '0:00:10', 'additions': 1937, 'deletions': 341, 'state': 'closed'}, {'id': 1525402764, 'number': 67050, 'closed': datetime.datetime(2024, 4, 26, 5, 43, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 21, 18, 47, 16, tzinfo=datetime.timezone.utc), 'time_taken': 18788151.0, 'time_delta': '217 days, 10:55:51', 'additions': 1548, 'deletions': 325, 'state': 'closed'}, {'id': 1521927589, 'number': 66812, 'closed': datetime.datetime(2024, 4, 11, 9, 15, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 19, 20, 12, 45, tzinfo=datetime.timezone.utc), 'time_taken': 17672568.0, 'time_delta': '204 days, 13:02:48', 'additions': 415, 'deletions': 322, 'state': 'closed'}, {'id': 1521838796, 'number': 66802, 'closed': datetime.datetime(2024, 4, 11, 9, 15, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 19, 18, 56, 50, tzinfo=datetime.timezone.utc), 'time_taken': 17677146.0, 'time_delta': '204 days, 14:19:06', 'additions': 518, 'deletions': 0, 'state': 'closed'}, {'id': 971265708, 'number': 56106, 'closed': datetime.datetime(2022, 6, 18, 11, 46, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 18, 11, 46, 40, tzinfo=datetime.timezone.utc), 'time_taken': 12.0, 'time_delta': '0:00:12', 'additions': 4, 'deletions': 4, 'state': 'closed'}]"
