pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
708431719,Enabling JS visualization in TOPPView(GSoC21- Dhanmoni Nath),"# Description
This PR is a part of Google Summer of Code 2021. For this year's GSoC, the required task was to enable JavaScript visualization in TOPPView using Qt's WebEngine module. Here is the final result:

![proteinTable](https://user-images.githubusercontent.com/38828736/128988603-4cd52b8d-aca8-4b6f-9805-0954bc5ce4e0.gif)

We have a new protein table in the identification tab that lists protein sequence, accessions etc from the peptide table. We can click on any of the accession and we'll be redirected to the UniProt site of that protein accession. We can view the protein sequence visualization by clicking the *show* button in the *sequence* column.

By default, the protein table lists all the proteins for the file. Clicking on any of the peptides in the peptide table shows the protein(s) for that particular peptide.

The sequence visualization window is using an HTML file as a resource file which calls the Nightingale library. Various components from the Nightingale library are used in the visualization.

# Checklist:
- [x] Make sure that you are listed in the AUTHORS file
- [x] Add relevant changes and new features to the CHANGELOG file
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] New and existing unit tests pass locally with my changes
- [x] Updated or added python bindings for changed or new classes. (Tick if no updates were necessary.)

# How can I get additional information on failed tests during CI:
If your PR is failing you can check out 
- http://cdash.openms.de/index.php?project=OpenMS and look for your PR. If you click in the column that lists the failed tests you will get detailed error messages.

# Note:
- Once you opened a PR try to minimize the number of *pushes* to it as every push will trigger CI (automated builds and test) and is rather heavy on our infrastructure (e.g., if several pushes per day are performed).
",False,5489,https://api.github.com/repos/OpenMS/OpenMS/pulls/5489,https://github.com/OpenMS/OpenMS/pull/5489,closed,1011,81,30,41,3,54,0,0,[],2021-08-11 07:51:50+00:00,2021-12-22 10:57:33+00:00,11502343.0,"133 days, 3:05:43","[{'comment_id': 690201070, 'comment_body': 'remove?', 'comment_created': datetime.datetime(2021, 8, 17, 9, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690203615, 'comment_body': 'hmm yes I think so as well', 'comment_created': datetime.datetime(2021, 8, 17, 9, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690206597, 'comment_body': 'please add comments / documentation in code', 'comment_created': datetime.datetime(2021, 8, 17, 9, 41, 31, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690207853, 'comment_body': ""I would guess it might be better to place it horizontally. (e.g. on top)\r\nI guess this can't be easily dockable so users can choose?\r\n"", 'comment_created': datetime.datetime(2021, 8, 17, 9, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690209681, 'comment_body': 'why is this needed? is checking if the map is empty not sufficient?', 'comment_created': datetime.datetime(2021, 8, 17, 9, 45, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690209945, 'comment_body': 'document what format is supported', 'comment_created': datetime.datetime(2021, 8, 17, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690210463, 'comment_body': 'brackets in new line', 'comment_created': datetime.datetime(2021, 8, 17, 9, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690210908, 'comment_body': 'document what happens if different format is encoutnered', 'comment_created': datetime.datetime(2021, 8, 17, 9, 47, 9, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690211383, 'comment_body': 'when is this triggered? ', 'comment_created': datetime.datetime(2021, 8, 17, 9, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690212225, 'comment_body': 'does this indicate a programming error? maybe rephrase error message ', 'comment_created': datetime.datetime(2021, 8, 17, 9, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690214314, 'comment_body': 'document what is happening here (e.g., moving to a method would make sense)', 'comment_created': datetime.datetime(2021, 8, 17, 9, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690215820, 'comment_body': 'placement of brackets', 'comment_created': datetime.datetime(2021, 8, 17, 9, 53, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690216923, 'comment_body': 'is this access safe?', 'comment_created': datetime.datetime(2021, 8, 17, 9, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690217070, 'comment_body': 'here as well?', 'comment_created': datetime.datetime(2021, 8, 17, 9, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690217779, 'comment_body': '```suggestion\r\n      currentCellChanged_(selected_row, 0, 0, 0); // simulate cell change to trigger repaint and reannotation of spectrum 1D view\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 9, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690219523, 'comment_body': 'remove? or qDebug output?', 'comment_created': datetime.datetime(2021, 8, 17, 9, 58, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690220126, 'comment_body': 'you removed the check here. are you sure about that change', 'comment_created': datetime.datetime(2021, 8, 17, 9, 59, 17, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690220277, 'comment_body': 'qDebug ?', 'comment_created': datetime.datetime(2021, 8, 17, 9, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690220375, 'comment_body': 'debug', 'comment_created': datetime.datetime(2021, 8, 17, 9, 59, 39, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690220667, 'comment_body': 'qDebug?', 'comment_created': datetime.datetime(2021, 8, 17, 10, 0, 7, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690221160, 'comment_body': 'add comment that this is important?', 'comment_created': datetime.datetime(2021, 8, 17, 10, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690222195, 'comment_body': 'do you have a reference to a known Qt bug issue?', 'comment_created': datetime.datetime(2021, 8, 17, 10, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690222805, 'comment_body': 'please add documentation e.g., about the data flow etc.', 'comment_created': datetime.datetime(2021, 8, 17, 10, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690223014, 'comment_body': 'add doc', 'comment_created': datetime.datetime(2021, 8, 17, 10, 3, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690223971, 'comment_body': 'not clear which index - maybe add to documentation or other name', 'comment_created': datetime.datetime(2021, 8, 17, 10, 4, 40, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690246441, 'comment_body': 'can you add a comment (e.g., only update if id changes? ).\r\nIs the TODO still valid?', 'comment_created': datetime.datetime(2021, 8, 17, 10, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690246687, 'comment_body': 'move the nullptr check to the top `?', 'comment_created': datetime.datetime(2021, 8, 17, 10, 38, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690250332, 'comment_body': 'when does this case happen? this looks a bit fishy', 'comment_created': datetime.datetime(2021, 8, 17, 10, 43, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690251000, 'comment_body': 'in general: check that couts get removed before a merge', 'comment_created': datetime.datetime(2021, 8, 17, 10, 44, 54, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690284065, 'comment_body': 'I never checked for dockability but to be honest, I like vertical much more. You can drag the border anyway and protein info is short.', 'comment_created': datetime.datetime(2021, 8, 17, 11, 34, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690285601, 'comment_body': ""this was copied. I don't know. should never happen. Even with programming errors, unless you specifically reset row and column. Feel free to suggest something."", 'comment_created': datetime.datetime(2021, 8, 17, 11, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690286653, 'comment_body': ""For my ID data I have many columns in the PSM table so I don't know if that plays nicely with scrolling."", 'comment_created': datetime.datetime(2021, 8, 17, 11, 38, 29, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690288134, 'comment_body': 'see https://doc.qt.io/qt-5/qtwidgets-mainwindows-dockwidgets-example.html\r\nmaybe adding the dock widget as parent would give users the freedom to arrange how they like (vertical can be the default)', 'comment_created': datetime.datetime(2021, 8, 17, 11, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690290753, 'comment_body': ""yes because it is too strict. why shouldn't we be allowed to change the selection if nothing was selected yet. Previous is not even used..\r\nThe person should fix it in the TOPP tool calling code if this really is an issue."", 'comment_created': datetime.datetime(2021, 8, 17, 11, 44, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690292054, 'comment_body': 'remove debug', 'comment_created': datetime.datetime(2021, 8, 17, 11, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690292664, 'comment_body': 'remove', 'comment_created': datetime.datetime(2021, 8, 17, 11, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690292733, 'comment_body': 'remove', 'comment_created': datetime.datetime(2021, 8, 17, 11, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690293251, 'comment_body': 'I vaguely recall that this was needed at some point (e.g., there were some issues when switching between tabs and datasets). Maybe keep an eye on it if this causes strange behavior', 'comment_created': datetime.datetime(2021, 8, 17, 11, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timosachsenberg', 'type': 'User'}, {'comment_id': 690294163, 'comment_body': 'remove', 'comment_created': datetime.datetime(2021, 8, 17, 11, 49, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690294275, 'comment_body': 'revert', 'comment_created': datetime.datetime(2021, 8, 17, 11, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690294548, 'comment_body': 'TODO make WebEngineWidgets optional', 'comment_created': datetime.datetime(2021, 8, 17, 11, 50, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690294696, 'comment_body': 'TODO make WebEngineWidgets optional', 'comment_created': datetime.datetime(2021, 8, 17, 11, 50, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690294822, 'comment_body': 'TODO make WebEngineWidgets optional', 'comment_created': datetime.datetime(2021, 8, 17, 11, 50, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 690312919, 'comment_body': 'I think Julianus made some changes and now this does not get triggered in every focus changes ', 'comment_created': datetime.datetime(2021, 8, 17, 12, 16, 48, tzinfo=datetime.timezone.utc), 'commenter': 'dhanmoni', 'type': 'User'}, {'comment_id': 690316031, 'comment_body': 'The initial plan was to create the map only if we select a new file, but the updateEntries() function(which calls this function to create the map) gets called every time the tab changes. So in future, if we fix that issue or add another method, this might come in handy. Right now this does not serve any purpose', 'comment_created': datetime.datetime(2021, 8, 17, 12, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dhanmoni', 'type': 'User'}, {'comment_id': 690317626, 'comment_body': ""This should not get triggered. If the accession in the row is invalid(don't know if that is possible) then it'll get triggered"", 'comment_created': datetime.datetime(2021, 8, 17, 12, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dhanmoni', 'type': 'User'}, {'comment_id': 690401004, 'comment_body': 'The complete line or the keyword *parent* instead of *&*?', 'comment_created': datetime.datetime(2021, 8, 17, 14, 0, 45, tzinfo=datetime.timezone.utc), 'commenter': 'dhanmoni', 'type': 'User'}, {'comment_id': 692267454, 'comment_body': 'no sorry. maybe it is just a documentation issue but IMHO getActiveSubwindow should always return something meaningful, even if not visible or similar. It does not.', 'comment_created': datetime.datetime(2021, 8, 19, 16, 1, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 692269453, 'comment_body': 'No, right, the TODO can go in favor of a comment. I will make a suggestion.', 'comment_created': datetime.datetime(2021, 8, 19, 16, 4, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 692270484, 'comment_body': 'Hmm yes I guess this would work too.', 'comment_created': datetime.datetime(2021, 8, 19, 16, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 692272222, 'comment_body': 'hopefully always otherwise the indexing fails in the next line.\r\nThat is why we return nullptr if not.\r\nCan you elaborate?', 'comment_created': datetime.datetime(2021, 8, 19, 16, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 692275059, 'comment_body': '```suggestion\r\n    // It is important to pass parent by value, since the lambda will be evaluated later, even after this function returned and parent reference would be out of scope.\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 16, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 692278664, 'comment_body': '```suggestion\r\n    //Trigger updates only when the active subWindow index changes and update it\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 16, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}, {'comment_id': 692279501, 'comment_body': 'But now that I am thinking, it is good to have it to see if the window changed, anyway.', 'comment_created': datetime.datetime(2021, 8, 19, 16, 14, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jpfeuffer', 'type': 'User'}]","[{'commit_sha': '8e0aefc46ad8ddfa7ad9e1a689e0a1ef5cb86b6d', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '000c9bcfe61b907d248dce0fb577296d7a09f6f0', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '920247410e7e82d2ea2a67b5c8dfd0467f62ff42', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd599f8ed36fd5833bca0f82b62228e8e15cf90c2', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67af40af5c744637d628883689f3c4b70c2d197c', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e5aa74f75794de6ada7ae097153f29a1929b7df', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09c4f11ed874a2b118156885a174a390362bb073', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f080bf5111dfba730a82cd951beed1aff9696b52', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e19c6c74e45c36a4b8ca211ec176ef881ea000cb', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b02fa5886ab19ae443938d7a8bd33028e23864be', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cf7dcced89b75188e7f95a6c56d3a99f72ab99f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8128cad4a034a02f9552d9f25cda5b92d1d4270a', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b0d56ff580f1fbb400e354b62b02619996d6d95', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2d812ea38569b4673420abe00e0719098bf3e57', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cf4294c4686cf3ea526ff8d98964a36c8c12e33', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53576ef0af299b893138b79a429c19b750f7749f', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f49247b66812a2b4aa78019007cb0ee3381a617', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9ec7cb54c2a7e5718b6fbec4e3a95a32ccbcc4ca', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05208b08d18c6ad0c204d6b83a6209845836fc82', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec3d0dad167bfcf942055a98e0c31f9e165d8124', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0217b155f579389edcdf068dae53a4957673ae70', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '033aeb4982b1786cd4ed2ccdf442b9344ff1b32d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '232f491a40f37d0a3963478a2e7d76474697d2a2', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ddf916639af301cee368e413ee97e639ba45122', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3128c8fb9edf74334803d7de1c0262d662ae702a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f44b105f8225e08827654cbf1d8a8f5e628e3711', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '26114c6714225d9aa3f850dc3b7d19c2bb56e893', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6999ce98ae937e4d4a758577a24b3e4c4ece9980', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0660192c73f1970d6164bb6c5502ddfb9e7a5ff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ac65701a169c461d3de11765eedeb2489eb5716a', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a8e9519de4e289af3a1fa43419fe8454483cef4', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d338663de751f1b38095e45446d3fd7707f8509', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47b084e1c98b653fab1d80054aef05477deff45e', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5cdc51e1cd12d12966b84bc9140ad44bee3376f', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03d5d32b1bfbdaa6abb97483a3c9dcc8c2ca8b1d', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff7580b3bd577eaec04ca00d97401e13878d1c3d', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f448ab39fbfa4060afd185d8ca4fcd957ca18e8b', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba3b747d3d84295a2369d0cb2722c774d1e0fccf', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '811b8f999e2811f9e28312df305780f929a3cc27', 'committer_username': 'dhanmoni', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 29, 5, 30, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '261cfd6774692f9ac3be58bea7e1fc95e594f910', 'committer_username': 'timosachsenberg', 'committer_name': 'Timo Sachsenberg', 'committer_email': 'timo.sachsenberg@uni-tuebingen.de', 'commit_date': datetime.datetime(2013, 10, 29, 12, 31, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dd17ce7f24d50ff69a0f904bd9f2c55d0fe97bb', 'committer_username': 'timosachsenberg', 'committer_name': 'Timo Sachsenberg', 'committer_email': 'timo.sachsenberg@uni-tuebingen.de', 'commit_date': datetime.datetime(2013, 10, 29, 12, 31, 58, tzinfo=datetime.timezone.utc)}]",,38828736,,User,,53,,13,4

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
15763403,OpenMS,OpenMS/OpenMS,C++,313,474,31,231,33828,647,99,51,"[{'id': 708431719, 'number': 5489, 'closed': datetime.datetime(2021, 12, 22, 10, 57, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 7, 51, 50, tzinfo=datetime.timezone.utc), 'time_taken': 11502343.0, 'time_delta': '133 days, 3:05:43', 'additions': 1011, 'deletions': 81, 'state': 'closed'}, {'id': 662911966, 'number': 5354, 'closed': datetime.datetime(2021, 6, 23, 12, 7, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 6, 10, 45, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1473700.0, 'time_delta': '17 days, 1:21:40', 'additions': 319, 'deletions': 7, 'state': 'closed'}]"
