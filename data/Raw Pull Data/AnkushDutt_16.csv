pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1493414367,DEVTOOLS: Add packaging scripts for DLC,"This PR adds packaging scripts to prepare the games (DLCs) and, if applicable, bundle them with base ScummVM binary in formats recognized by different distribution platforms.

The main package.py produces a ready-to-upload packaged file to upload for the provided distribution platform. The ready-to-upload file can either be a packaged standalone game data (DLC) or bundled together with base ScummVM binary, depending on the requirement of distribution stores. Eg. For the Android Play Store, the DLCs must be bundled together with the base ScummVM APK in an Android App Bundle format.

This PR only contains entry for packaging DLCs for the Android Play Store and includes the required dependencies (3rd party scripts from [here](https://github.com/android/app-bundle-samples/tree/main/PlayAssetDelivery/BundletoolScriptSample), bundletool.jar, etc.) in `scripts/android`.

<!---
Thank you for contributing to ScummVM. Please read the following carefully before submitting your Pull Request.

Make sure your individual commits follow the guidelines found in the ScummVM Wiki: https://wiki.scummvm.org/index.php?title=Commit_Guidelines. If they're not please edit them before submitting the Pull Request.

Proper documentation must also be included for common code and changes impacting user facing elements.

Commits and Pull Requests should use the following template:

```
SUBSYSTEM: Short (50 chars or less) summary of changes

More detailed explanatory text, if necessary.  Wrap it to about 72
characters or so.  In some contexts, the first line is treated as the
subject of an email and the rest of the text as the body.  The blank
line separating the summary from the body is critical (unless you omit
the body entirely); tools like rebase can get confused if you run the
two together.

Write your commit message in the present tense: ""Fix bug"" and not ""Fixed
bug.""  This convention matches up with commit messages generated by
commands like git merge and git revert.

Further paragraphs come after blank lines.

- Bullet points are okay, too

- Typically a hyphen or asterisk is used for the bullet, preceded by a
 single space, with blank lines in between, but conventions vary here

- Use a hanging indent
```
--->
",True,5300,https://api.github.com/repos/scummvm/scummvm/pulls/5300,https://github.com/scummvm/scummvm/pull/5300,closed,1410,0,10,10,3,10,1,0,[{'name': 'GSoC'}],2023-08-29 09:37:15+00:00,2023-09-14 06:23:48+00:00,1370793.0,"15 days, 20:46:33","[{'comment_id': 1315208908, 'comment_body': 'Please add a license header here', 'comment_created': datetime.datetime(2023, 9, 4, 21, 42, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1315209278, 'comment_body': 'How is this file generated? Do we have to have it in the repo, or it could be generated on demand?\r\n\r\nIf not, then how it should be updated after the `config.proto` file is changed?', 'comment_created': datetime.datetime(2023, 9, 4, 21, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1315209653, 'comment_body': 'Where does this file come from? What is its license?', 'comment_created': datetime.datetime(2023, 9, 4, 21, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1315210038, 'comment_body': 'How to describe a game that consists of many files?', 'comment_created': datetime.datetime(2023, 9, 4, 21, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1315515042, 'comment_body': 'I took it from: https://github.com/android/app-bundle-samples/blob/main/PlayAssetDelivery/BundletoolScriptSample/config.proto\r\n\r\nHowever, it seems that config.proto in above repo is from the [bundletool repository](https://github.com/google/bundletool/blob/master/src/main/proto/config.proto).\r\n \r\nThe license of both the source code is Apache 2.0.', 'comment_created': datetime.datetime(2023, 9, 5, 7, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1315517512, 'comment_body': 'Yes it can be generated on demand by using protobuf-compiler (cmd: `protoc --python_out . config.proto`).', 'comment_created': datetime.datetime(2023, 9, 5, 7, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1320832902, 'comment_body': 'this needs the protobuf compiler though, which is not the same as having installed the python protobuf package.', 'comment_created': datetime.datetime(2023, 9, 10, 17, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'lephilousophe', 'type': 'User'}, {'comment_id': 1324357629, 'comment_body': '@sev- Can you give an example? Do you mean the game is available to download in multiple .zip parts (due to its large size)?', 'comment_created': datetime.datetime(2023, 9, 13, 11, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1324370081, 'comment_body': ""Yes, the protobuf-compiler needs to be installed on the user's pc, which makes the `protoc` command available. The protobuf-compiler is only needed for generating the new _pb2.py file (if config.proto is changed or if available version of python-protobuf is not supported) and is not required for the packaging process. The packaging process requires this _pb2.py file and the python-protobuf package (now available in docker-bb)."", 'comment_created': datetime.datetime(2023, 9, 13, 11, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1324883567, 'comment_body': 'No, I mean, a game that will be represented in different packages, but that consists of many files. Or do you mean that for preparing a game for distribution, we must first zip it?', 'comment_created': datetime.datetime(2023, 9, 13, 18, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}]","[{'commit_sha': '2b99a4dbd0d9dff55dacb9e98ca773e24e33eb99', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '182df510078c541203fa4cf0a80e75b71343fd3d', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60cd4767d36e32a9e8f93aa0aff967d5ba999b2a', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f20923ef3dbd17352568a6ea0cb341ca5e30ea6c', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dd9f8b6d0092360dca5622bb34d86730c72c634', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5a5d2b74cd37bc7bf1ed6bbc2b748e4a841c063', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c22abd26e519205a60e0dec36c49359ef7a17b4', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04a3481210c9ff921c54e725a1454a6195d51ec1', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2099c0fa5ddb1d4786f594bf7b987e960a527e31', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6841ee91ae8dca40e43313049d3323f2ed6223c5', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}]",Ankush Dutt,51174480,,User,,36,,0,3
1417912564,"GUI, BACKENDS: Add DLC Downloader","This PR will add support to allow downloading freeware games from the ScummVM GUI.

<!---
Thank you for contributing to ScummVM. Please read the following carefully before submitting your Pull Request.

Make sure your individual commits follow the guidelines found in the ScummVM Wiki: https://wiki.scummvm.org/index.php?title=Commit_Guidelines. If they're not please edit them before submitting the Pull Request.

Proper documentation must also be included for common code and changes impacting user facing elements.

Commits and Pull Requests should use the following template:

```
SUBSYSTEM: Short (50 chars or less) summary of changes

More detailed explanatory text, if necessary.  Wrap it to about 72
characters or so.  In some contexts, the first line is treated as the
subject of an email and the rest of the text as the body.  The blank
line separating the summary from the body is critical (unless you omit
the body entirely); tools like rebase can get confused if you run the
two together.

Write your commit message in the present tense: ""Fix bug"" and not ""Fixed
bug.""  This convention matches up with commit messages generated by
commands like git merge and git revert.

Further paragraphs come after blank lines.

- Bullet points are okay, too

- Typically a hyphen or asterisk is used for the bullet, preceded by a
 single space, with blank lines in between, but conventions vary here

- Use a hanging indent
```
--->
",True,5134,https://api.github.com/repos/scummvm/scummvm/pulls/5134,https://github.com/scummvm/scummvm/pull/5134,closed,1422,0,33,59,3,48,1,0,[{'name': 'GSoC'}],2023-07-03 11:10:54+00:00,2023-09-14 06:22:56+00:00,6289922.0,"72 days, 19:12:02","[{'comment_id': 1252318824, 'comment_body': 'could be `const` (and maybe other methods, too)', 'comment_created': datetime.datetime(2023, 7, 4, 20, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1259876146, 'comment_body': 'can be passed as `const Common::String &id`', 'comment_created': datetime.datetime(2023, 7, 11, 15, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1259876503, 'comment_body': 'method can be `const`', 'comment_created': datetime.datetime(2023, 7, 11, 15, 2, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1259876750, 'comment_body': 'method can be `const`', 'comment_created': datetime.datetime(2023, 7, 11, 15, 3, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1259878855, 'comment_body': 'the formatting is off here a little bit', 'comment_created': datetime.datetime(2023, 7, 11, 15, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1259880634, 'comment_body': 'can maybe be `const Common::U32StringArray& getDLCList() const;` to prevent the copy', 'comment_created': datetime.datetime(2023, 7, 11, 15, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1285214811, 'comment_body': 'Class variable names must start with an underscore according to our naming conventions (https://wiki.scummvm.org/index.php?title=Code_Formatting_Conventions#Naming).\r\n\r\nBut from the other hand, why did you declare it `class` at all, while it clearly a `struct`. If you move it to a struct, then the variable names could stay as is.', 'comment_created': datetime.datetime(2023, 8, 6, 12, 52, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285215250, 'comment_body': 'Please initialize it, e.g. `uint32 size = 0;`. And the other two variables below as well.', 'comment_created': datetime.datetime(2023, 8, 6, 12, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285215699, 'comment_body': 'Please avoid these excessive includes in a header file. Use forward declaration, e.g.\r\n\r\n```C++\r\nnamespace GUI {\r\nclass LauncherDialog;\r\n}\r\n\r\nnamespace DLC {\r\nclass Store;\r\n\r\n....\r\n```\r\n\r\nwill be enough since you only refer to those as pointers in the header.\r\n\r\nLeave only absolutely necessary includes here.', 'comment_created': datetime.datetime(2023, 8, 6, 12, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255204, 'comment_body': 'I think we need to add some kind of error checking there. Imagine that the archive is broken or incomplete or there is no space left on the filesystem for extraction. For the latter, you would need to implement error checking in the `dumpArchive()` method', 'comment_created': datetime.datetime(2023, 8, 6, 19, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255453, 'comment_body': 'The correct one is `BACKENDS_DLC_SCUMMVMCLOUD_H`', 'comment_created': datetime.datetime(2023, 8, 6, 19, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255479, 'comment_body': 'Indentation is wrong', 'comment_created': datetime.datetime(2023, 8, 6, 19, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255527, 'comment_body': 'You are not using half of these includes, please cleanup', 'comment_created': datetime.datetime(2023, 8, 6, 19, 43, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255603, 'comment_body': ""Will Android work without the DLC manager? E.g. when USE_SCUMMVMDLC is not enabled and you're on the Android platform."", 'comment_created': datetime.datetime(2023, 8, 6, 19, 44, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255906, 'comment_body': 'I think, it is better to return Common::Path, not a String', 'comment_created': datetime.datetime(2023, 8, 6, 19, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256132, 'comment_body': 'Same thing, return Common::Path here', 'comment_created': datetime.datetime(2023, 8, 6, 19, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256228, 'comment_body': 'Same question. What does happen on Android if USE_SCUMMVMDLC is disabled?', 'comment_created': datetime.datetime(2023, 8, 6, 19, 53, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256471, 'comment_body': 'Since you declared it as a singleton, do you really have to init it like this? Why not init it at the instantiation time and that one will be called via GUI when the user pushes the DLC button?', 'comment_created': datetime.datetime(2023, 8, 6, 19, 55, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256529, 'comment_body': 'And singleton takes care of itself. See GUI for example', 'comment_created': datetime.datetime(2023, 8, 6, 19, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256641, 'comment_body': 'Please add `gui/dlcdialog.cpp` to POTFILES', 'comment_created': datetime.datetime(2023, 8, 6, 19, 57, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256691, 'comment_body': 'please add ""and demos""', 'comment_created': datetime.datetime(2023, 8, 6, 19, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256771, 'comment_body': 'this is clever :)', 'comment_created': datetime.datetime(2023, 8, 6, 19, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285257058, 'comment_body': ""I'd recommend moving this enum to the .cpp file"", 'comment_created': datetime.datetime(2023, 8, 6, 20, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285257137, 'comment_body': 'Please move it to the .cpp', 'comment_created': datetime.datetime(2023, 8, 6, 20, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285257196, 'comment_body': 'What happens on Android? I think you need to show it when the feature is present, not when scummvmdlc is compiled', 'comment_created': datetime.datetime(2023, 8, 6, 20, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285820528, 'comment_body': 'Thanks, used struct', 'comment_created': datetime.datetime(2023, 8, 7, 12, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285820671, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822040, 'comment_body': 'Done: https://github.com/scummvm/scummvm/pull/5134/commits/d701264c8dfc8b21a917e1255ca8578ef3f2377f', 'comment_created': datetime.datetime(2023, 8, 7, 12, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822244, 'comment_body': 'Thanks, fixed', 'comment_created': datetime.datetime(2023, 8, 7, 12, 50, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822377, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 7, 12, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822545, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 50, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822662, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 50, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822824, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285823016, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285823103, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 51, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285823218, 'comment_body': 'Thanks :)', 'comment_created': datetime.datetime(2023, 8, 7, 12, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285830016, 'comment_body': '`GUI::kRefreshDLCList` is used in `dlcmanager.cpp` to send a command to GUI. So, I defined the enum here and included `gui/dlcsdialog.h` in `dlcmanager.cpp`.', 'comment_created': datetime.datetime(2023, 8, 7, 12, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285830168, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1286383732, 'comment_body': 'perhaps use `debug` or `debugCN` from `common/debug.h` rather than commented out `warning`', 'comment_created': datetime.datetime(2023, 8, 7, 21, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BLooperZ', 'type': 'User'}, {'comment_id': 1287285258, 'comment_body': 'Thanks, done', 'comment_created': datetime.datetime(2023, 8, 8, 15, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1287309287, 'comment_body': 'I have removed DLC.init() since this was doing nothing currently', 'comment_created': datetime.datetime(2023, 8, 8, 15, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1287309687, 'comment_body': 'Thanks, removed', 'comment_created': datetime.datetime(2023, 8, 8, 15, 42, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1288850501, 'comment_body': 'Now, since your code is merged, please rebase and add error processing here, e.g. show the user the error messages depending on the returned error.', 'comment_created': datetime.datetime(2023, 8, 9, 16, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1288851573, 'comment_body': 'For brevity, please put `DLCMan._queuedDownloadTasks.front()` into a local variable and reuse', 'comment_created': datetime.datetime(2023, 8, 9, 16, 17, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1288870036, 'comment_body': 'I do not like this code duplication. You could simplify the thing that when `USE_SCUMMVMDLC` is defined, `g_system->hasFeature(OSystem::kFeatureDLC)` is returning `true` and `getDLC()` returns `ScummVMDLC`', 'comment_created': datetime.datetime(2023, 8, 9, 16, 34, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1288872629, 'comment_body': ""What I am concerned about is that if USE_DLC is not defined, we have a hole between the buttons. Nothing for you to worry about now, I'll see what I can do after testing."", 'comment_created': datetime.datetime(2023, 8, 9, 16, 35, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1295150824, 'comment_body': 'You need to expose `dlcpath` in the GUI, Options -> Paths', 'comment_created': datetime.datetime(2023, 8, 15, 21, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1295419219, 'comment_body': 'I have added it. There is, however, a bit of hole/space when `USE_DLC` is not defined (possibly due to spacing = 10 in layout element inside .stx). I have added the layout (containing widgets) for dlcpath at the end for consistent spacing between the buttons for different paths. The next widget below will have some space before.\r\n\r\nFor the record, in the launcher, there is no hole/space for the DLC button if `USE_DLC` is not defined.', 'comment_created': datetime.datetime(2023, 8, 16, 6, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}]","[{'commit_sha': 'fac8eae49042f1d2d2f80bc39fc4a98bf797ac8c', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba4a5a64325f6551d6da5b1764893816a9ed9e69', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bf3b8cd8333c4816ffe46e5acc0293041cb662e', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb37f3d83b949a25ec466e3f45626730ec71e701', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e13fbf35c5718e272e3b1f2d7b933463be7dcc15', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0997475327ad092d9900324223341f93e942e91', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9181b33fd1dc1666dec2e70031e83cf7d3eece74', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44a85ef45e16371a6c37108af785f9319062e350', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43ebacb3cd5f124838ae68f6fd3ae501e388e87d', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8577d919374f75530680809c535bab29437d417f', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a1abba1f168814195fe6f89bb1d3599edfdabd', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ac9635385dd593fc341d9d8ea1b345347310b8e', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '348147cc8eaa82c0c341dffa5fa958c91f2d599d', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18afc90c7f337417abe0d7008edfdbe629c4673a', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a310216869014b5e6fbf0f3b10aa0b1c5968dc70', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7f7991deb4a9b6ad01c58e07de8596f659a2772', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e20f60d952163487f09b09609bdf4a7ac56748a', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3e66051350e6ea44a9cc8b877566e72d94ebce6', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7f96a0349f7e5dc664c3efacb1ade19b11eb9f4', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a987b6add9a708deabf1d179218147888539f5', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af446e26bfdefbc8f82ee6e6fc34155d11891da3', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62a4ca6e163112d0a95f2d040b376691b641f761', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '818b28167785a8432c770083f68cfdf13ff6a451', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c15ccf591e7b08f0ed08fc6c4a36483888db027', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7ea978b5f5678dec33020b019c75dd40efdef44', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48a0d8de9c425d40b048e29d11c0a98f6ef0d8fc', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4113e8dcb6073f0b819cb473294a1e45c73c08e', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8360a4cc937fd888fe4f113c46ef602aed8fb19a', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d5381e68dd566f8a5179809c157323ec52e5e43', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8b312ef60e91b85343fc3dd7492e29837f7da6f', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae22070436f1bee82ad8673a34cf78dd97853a7', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '916c2ad7df7a7b9e4dda946c5de48dbdcab45381', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7fcfd53e001c45295210b41be5a8fa91fe28a47', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2478dd2cd8ffa95c19d39eb911de4b97b21e9f9', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0acb559b1b582427fbd7ee7efc415c9ecce1b219', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe6fa9de5a79bbd511ad7a17bea1cdbac480b77', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24159e3e249e90e5d43e1a4c8d6fada95fa48992', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1250e15ac06db11073b57415250ce4b39ac40d2d', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb978e0a372f00cdcaf8a5029a33752b797851c', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d8c9707318eabc1d2cd4824d2d6ad607a3ac24d', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a64e5a9cf4b958a56dfa74ff05151a2799b88a34', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c969151655c5127c2554be2a1312caa3a76eabd', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dff57c9b5c5d62b0aaa270200a237722f53353e2', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15f64e2f20c2b521dd1da3b5cd11854ba6575266', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7409ad749bc63d4724cd63e4825289b2927bc748', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90ddf60b6470265c01b91e69d136b3f7f42b79cd', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5d3d5e4dd17b294c06d49c69cfbbd95cbebd2f3', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e30fb5fe597abf7f510dac6a5ee382d38cb5477', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af052d72c04bfd5d2eb1530f8cc7805a176c4533', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f22e72a599aa6d98c3ee9dd1263e01dd84c0a0e', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c78e33f9084f1f8af9805be0cceb0416faaa98', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18d88ad95914a0b31e7de7af0251b7406434187c', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '387d09cc5acdb94838a494538cee428237b2e651', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21cd92cb2427b17e19d7dbf35e4e625bcc58d55f', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '409666de976754818e74b87921dd382a8fe4e6c2', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af36a0c3e6a136d5f7898d413e0f049aa32ba71', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a4696e03a9871959f7d77ae9180677b0ba38330', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64562da5f42115cefd4f4b906b1448a2e7908513', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b986b409b5b62d9ee189874aad6cedc2533c7f6e', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}]",Ankush Dutt,51174480,,User,,36,,0,3
1417912564,"GUI, BACKENDS: Add DLC Downloader","This PR will add support to allow downloading freeware games from the ScummVM GUI.

<!---
Thank you for contributing to ScummVM. Please read the following carefully before submitting your Pull Request.

Make sure your individual commits follow the guidelines found in the ScummVM Wiki: https://wiki.scummvm.org/index.php?title=Commit_Guidelines. If they're not please edit them before submitting the Pull Request.

Proper documentation must also be included for common code and changes impacting user facing elements.

Commits and Pull Requests should use the following template:

```
SUBSYSTEM: Short (50 chars or less) summary of changes

More detailed explanatory text, if necessary.  Wrap it to about 72
characters or so.  In some contexts, the first line is treated as the
subject of an email and the rest of the text as the body.  The blank
line separating the summary from the body is critical (unless you omit
the body entirely); tools like rebase can get confused if you run the
two together.

Write your commit message in the present tense: ""Fix bug"" and not ""Fixed
bug.""  This convention matches up with commit messages generated by
commands like git merge and git revert.

Further paragraphs come after blank lines.

- Bullet points are okay, too

- Typically a hyphen or asterisk is used for the bullet, preceded by a
 single space, with blank lines in between, but conventions vary here

- Use a hanging indent
```
--->
",True,5134,https://api.github.com/repos/scummvm/scummvm/pulls/5134,https://github.com/scummvm/scummvm/pull/5134,closed,1422,0,33,59,3,48,1,0,[{'name': 'GSoC'}],2023-07-03 11:10:54+00:00,2023-09-14 06:22:56+00:00,6289922.0,"72 days, 19:12:02","[{'comment_id': 1252318824, 'comment_body': 'could be `const` (and maybe other methods, too)', 'comment_created': datetime.datetime(2023, 7, 4, 20, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1259876146, 'comment_body': 'can be passed as `const Common::String &id`', 'comment_created': datetime.datetime(2023, 7, 11, 15, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1259876503, 'comment_body': 'method can be `const`', 'comment_created': datetime.datetime(2023, 7, 11, 15, 2, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1259876750, 'comment_body': 'method can be `const`', 'comment_created': datetime.datetime(2023, 7, 11, 15, 3, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1259878855, 'comment_body': 'the formatting is off here a little bit', 'comment_created': datetime.datetime(2023, 7, 11, 15, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1259880634, 'comment_body': 'can maybe be `const Common::U32StringArray& getDLCList() const;` to prevent the copy', 'comment_created': datetime.datetime(2023, 7, 11, 15, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mgerhardy', 'type': 'User'}, {'comment_id': 1285214811, 'comment_body': 'Class variable names must start with an underscore according to our naming conventions (https://wiki.scummvm.org/index.php?title=Code_Formatting_Conventions#Naming).\r\n\r\nBut from the other hand, why did you declare it `class` at all, while it clearly a `struct`. If you move it to a struct, then the variable names could stay as is.', 'comment_created': datetime.datetime(2023, 8, 6, 12, 52, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285215250, 'comment_body': 'Please initialize it, e.g. `uint32 size = 0;`. And the other two variables below as well.', 'comment_created': datetime.datetime(2023, 8, 6, 12, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285215699, 'comment_body': 'Please avoid these excessive includes in a header file. Use forward declaration, e.g.\r\n\r\n```C++\r\nnamespace GUI {\r\nclass LauncherDialog;\r\n}\r\n\r\nnamespace DLC {\r\nclass Store;\r\n\r\n....\r\n```\r\n\r\nwill be enough since you only refer to those as pointers in the header.\r\n\r\nLeave only absolutely necessary includes here.', 'comment_created': datetime.datetime(2023, 8, 6, 12, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255204, 'comment_body': 'I think we need to add some kind of error checking there. Imagine that the archive is broken or incomplete or there is no space left on the filesystem for extraction. For the latter, you would need to implement error checking in the `dumpArchive()` method', 'comment_created': datetime.datetime(2023, 8, 6, 19, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255453, 'comment_body': 'The correct one is `BACKENDS_DLC_SCUMMVMCLOUD_H`', 'comment_created': datetime.datetime(2023, 8, 6, 19, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255479, 'comment_body': 'Indentation is wrong', 'comment_created': datetime.datetime(2023, 8, 6, 19, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255527, 'comment_body': 'You are not using half of these includes, please cleanup', 'comment_created': datetime.datetime(2023, 8, 6, 19, 43, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255603, 'comment_body': ""Will Android work without the DLC manager? E.g. when USE_SCUMMVMDLC is not enabled and you're on the Android platform."", 'comment_created': datetime.datetime(2023, 8, 6, 19, 44, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285255906, 'comment_body': 'I think, it is better to return Common::Path, not a String', 'comment_created': datetime.datetime(2023, 8, 6, 19, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256132, 'comment_body': 'Same thing, return Common::Path here', 'comment_created': datetime.datetime(2023, 8, 6, 19, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256228, 'comment_body': 'Same question. What does happen on Android if USE_SCUMMVMDLC is disabled?', 'comment_created': datetime.datetime(2023, 8, 6, 19, 53, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256471, 'comment_body': 'Since you declared it as a singleton, do you really have to init it like this? Why not init it at the instantiation time and that one will be called via GUI when the user pushes the DLC button?', 'comment_created': datetime.datetime(2023, 8, 6, 19, 55, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256529, 'comment_body': 'And singleton takes care of itself. See GUI for example', 'comment_created': datetime.datetime(2023, 8, 6, 19, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256641, 'comment_body': 'Please add `gui/dlcdialog.cpp` to POTFILES', 'comment_created': datetime.datetime(2023, 8, 6, 19, 57, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256691, 'comment_body': 'please add ""and demos""', 'comment_created': datetime.datetime(2023, 8, 6, 19, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285256771, 'comment_body': 'this is clever :)', 'comment_created': datetime.datetime(2023, 8, 6, 19, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285257058, 'comment_body': ""I'd recommend moving this enum to the .cpp file"", 'comment_created': datetime.datetime(2023, 8, 6, 20, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285257137, 'comment_body': 'Please move it to the .cpp', 'comment_created': datetime.datetime(2023, 8, 6, 20, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285257196, 'comment_body': 'What happens on Android? I think you need to show it when the feature is present, not when scummvmdlc is compiled', 'comment_created': datetime.datetime(2023, 8, 6, 20, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285820528, 'comment_body': 'Thanks, used struct', 'comment_created': datetime.datetime(2023, 8, 7, 12, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285820671, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822040, 'comment_body': 'Done: https://github.com/scummvm/scummvm/pull/5134/commits/d701264c8dfc8b21a917e1255ca8578ef3f2377f', 'comment_created': datetime.datetime(2023, 8, 7, 12, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822244, 'comment_body': 'Thanks, fixed', 'comment_created': datetime.datetime(2023, 8, 7, 12, 50, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822377, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 7, 12, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822545, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 50, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822662, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 50, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285822824, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285823016, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285823103, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 51, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285823218, 'comment_body': 'Thanks :)', 'comment_created': datetime.datetime(2023, 8, 7, 12, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285830016, 'comment_body': '`GUI::kRefreshDLCList` is used in `dlcmanager.cpp` to send a command to GUI. So, I defined the enum here and included `gui/dlcsdialog.h` in `dlcmanager.cpp`.', 'comment_created': datetime.datetime(2023, 8, 7, 12, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1285830168, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 7, 12, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1286383732, 'comment_body': 'perhaps use `debug` or `debugCN` from `common/debug.h` rather than commented out `warning`', 'comment_created': datetime.datetime(2023, 8, 7, 21, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BLooperZ', 'type': 'User'}, {'comment_id': 1287285258, 'comment_body': 'Thanks, done', 'comment_created': datetime.datetime(2023, 8, 8, 15, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1287309287, 'comment_body': 'I have removed DLC.init() since this was doing nothing currently', 'comment_created': datetime.datetime(2023, 8, 8, 15, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1287309687, 'comment_body': 'Thanks, removed', 'comment_created': datetime.datetime(2023, 8, 8, 15, 42, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}, {'comment_id': 1288850501, 'comment_body': 'Now, since your code is merged, please rebase and add error processing here, e.g. show the user the error messages depending on the returned error.', 'comment_created': datetime.datetime(2023, 8, 9, 16, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1288851573, 'comment_body': 'For brevity, please put `DLCMan._queuedDownloadTasks.front()` into a local variable and reuse', 'comment_created': datetime.datetime(2023, 8, 9, 16, 17, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1288870036, 'comment_body': 'I do not like this code duplication. You could simplify the thing that when `USE_SCUMMVMDLC` is defined, `g_system->hasFeature(OSystem::kFeatureDLC)` is returning `true` and `getDLC()` returns `ScummVMDLC`', 'comment_created': datetime.datetime(2023, 8, 9, 16, 34, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1288872629, 'comment_body': ""What I am concerned about is that if USE_DLC is not defined, we have a hole between the buttons. Nothing for you to worry about now, I'll see what I can do after testing."", 'comment_created': datetime.datetime(2023, 8, 9, 16, 35, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1295150824, 'comment_body': 'You need to expose `dlcpath` in the GUI, Options -> Paths', 'comment_created': datetime.datetime(2023, 8, 15, 21, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1295419219, 'comment_body': 'I have added it. There is, however, a bit of hole/space when `USE_DLC` is not defined (possibly due to spacing = 10 in layout element inside .stx). I have added the layout (containing widgets) for dlcpath at the end for consistent spacing between the buttons for different paths. The next widget below will have some space before.\r\n\r\nFor the record, in the launcher, there is no hole/space for the DLC button if `USE_DLC` is not defined.', 'comment_created': datetime.datetime(2023, 8, 16, 6, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ankushdutt', 'type': 'User'}]","[{'commit_sha': 'fac8eae49042f1d2d2f80bc39fc4a98bf797ac8c', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba4a5a64325f6551d6da5b1764893816a9ed9e69', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bf3b8cd8333c4816ffe46e5acc0293041cb662e', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb37f3d83b949a25ec466e3f45626730ec71e701', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e13fbf35c5718e272e3b1f2d7b933463be7dcc15', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0997475327ad092d9900324223341f93e942e91', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9181b33fd1dc1666dec2e70031e83cf7d3eece74', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44a85ef45e16371a6c37108af785f9319062e350', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43ebacb3cd5f124838ae68f6fd3ae501e388e87d', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8577d919374f75530680809c535bab29437d417f', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a1abba1f168814195fe6f89bb1d3599edfdabd', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ac9635385dd593fc341d9d8ea1b345347310b8e', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '348147cc8eaa82c0c341dffa5fa958c91f2d599d', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18afc90c7f337417abe0d7008edfdbe629c4673a', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a310216869014b5e6fbf0f3b10aa0b1c5968dc70', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7f7991deb4a9b6ad01c58e07de8596f659a2772', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e20f60d952163487f09b09609bdf4a7ac56748a', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3e66051350e6ea44a9cc8b877566e72d94ebce6', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7f96a0349f7e5dc664c3efacb1ade19b11eb9f4', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a987b6add9a708deabf1d179218147888539f5', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af446e26bfdefbc8f82ee6e6fc34155d11891da3', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62a4ca6e163112d0a95f2d040b376691b641f761', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '818b28167785a8432c770083f68cfdf13ff6a451', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c15ccf591e7b08f0ed08fc6c4a36483888db027', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7ea978b5f5678dec33020b019c75dd40efdef44', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48a0d8de9c425d40b048e29d11c0a98f6ef0d8fc', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4113e8dcb6073f0b819cb473294a1e45c73c08e', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8360a4cc937fd888fe4f113c46ef602aed8fb19a', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d5381e68dd566f8a5179809c157323ec52e5e43', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8b312ef60e91b85343fc3dd7492e29837f7da6f', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae22070436f1bee82ad8673a34cf78dd97853a7', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '916c2ad7df7a7b9e4dda946c5de48dbdcab45381', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7fcfd53e001c45295210b41be5a8fa91fe28a47', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2478dd2cd8ffa95c19d39eb911de4b97b21e9f9', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0acb559b1b582427fbd7ee7efc415c9ecce1b219', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbe6fa9de5a79bbd511ad7a17bea1cdbac480b77', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24159e3e249e90e5d43e1a4c8d6fada95fa48992', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1250e15ac06db11073b57415250ce4b39ac40d2d', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb978e0a372f00cdcaf8a5029a33752b797851c', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d8c9707318eabc1d2cd4824d2d6ad607a3ac24d', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a64e5a9cf4b958a56dfa74ff05151a2799b88a34', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c969151655c5127c2554be2a1312caa3a76eabd', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dff57c9b5c5d62b0aaa270200a237722f53353e2', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15f64e2f20c2b521dd1da3b5cd11854ba6575266', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7409ad749bc63d4724cd63e4825289b2927bc748', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90ddf60b6470265c01b91e69d136b3f7f42b79cd', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5d3d5e4dd17b294c06d49c69cfbbd95cbebd2f3', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e30fb5fe597abf7f510dac6a5ee382d38cb5477', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af052d72c04bfd5d2eb1530f8cc7805a176c4533', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f22e72a599aa6d98c3ee9dd1263e01dd84c0a0e', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c78e33f9084f1f8af9805be0cceb0416faaa98', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18d88ad95914a0b31e7de7af0251b7406434187c', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '387d09cc5acdb94838a494538cee428237b2e651', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21cd92cb2427b17e19d7dbf35e4e625bcc58d55f', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '409666de976754818e74b87921dd382a8fe4e6c2', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af36a0c3e6a136d5f7898d413e0f049aa32ba71', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a4696e03a9871959f7d77ae9180677b0ba38330', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64562da5f42115cefd4f4b906b1448a2e7908513', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b986b409b5b62d9ee189874aad6cedc2533c7f6e', 'committer_username': 'ankushdutt', 'committer_name': 'Ankush Dutt', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 29, 18, 49, 45, tzinfo=datetime.timezone.utc)}]",Ankush Dutt,51174480,,User,,36,,0,3

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
1358940,scummvm,scummvm/scummvm,C++,1017,2261,136,787,154055,43,39,43,"[{'id': 1493414367, 'number': 5300, 'closed': datetime.datetime(2023, 9, 14, 6, 23, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 29, 9, 37, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1370793.0, 'time_delta': '15 days, 20:46:33', 'additions': 1410, 'deletions': 0, 'state': 'closed'}, {'id': 1467080004, 'number': 5244, 'closed': datetime.datetime(2023, 8, 9, 16, 15, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 8, 15, 18, 7, tzinfo=datetime.timezone.utc), 'time_taken': 89856.0, 'time_delta': '1 day, 0:57:36', 'additions': 17, 'deletions': 4, 'state': 'closed'}, {'id': 1441359132, 'number': 5168, 'closed': datetime.datetime(2023, 7, 19, 20, 22, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 16, 36, 11, tzinfo=datetime.timezone.utc), 'time_taken': 13588.0, 'time_delta': '3:46:28', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1417912564, 'number': 5134, 'closed': datetime.datetime(2023, 9, 14, 6, 22, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 3, 11, 10, 54, tzinfo=datetime.timezone.utc), 'time_taken': 6289922.0, 'time_delta': '72 days, 19:12:02', 'additions': 1422, 'deletions': 0, 'state': 'closed'}, {'id': 1285308496, 'number': 4831, 'closed': datetime.datetime(2023, 5, 14, 20, 40, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 6, 30, 4, tzinfo=datetime.timezone.utc), 'time_taken': 4630246.0, 'time_delta': '53 days, 14:10:46', 'additions': 475, 'deletions': 0, 'state': 'closed'}, {'id': 1284077079, 'number': 4828, 'closed': datetime.datetime(2023, 3, 21, 11, 52, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 21, 11, 47, 46, tzinfo=datetime.timezone.utc), 'time_taken': 304.0, 'time_delta': '0:05:04', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1282788677, 'number': 4826, 'closed': datetime.datetime(2023, 3, 21, 11, 32, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 20, 14, 58, 9, tzinfo=datetime.timezone.utc), 'time_taken': 74074.0, 'time_delta': '20:34:34', 'additions': 497, 'deletions': 0, 'state': 'closed'}]"
