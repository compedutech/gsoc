pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
870871842,React-Select v4 Upgrade,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing
2. Verify that your changes match our coding style
3. Fill out the requested information
-->

<!-- What are you trying to solve? -->
upgrading react-select from v1 to v4


### Areas of Impact
all components using react-select
",True,790,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/790,https://github.com/metabrainz/bookbrainz-site/pull/790,closed,570,445,30,24,0,25,0,0,[],2022-03-03 18:02:36+00:00,2022-05-12 15:03:03+00:00,6037227.0,"69 days, 21:00:27","[{'comment_id': 820005126, 'comment_body': ""If you use `getOptionLabel = (option) => { ... }` instead, then `getOptionLabel={this.getOptionLabel}`, you don't get the react/jsx-no-bind warning"", 'comment_created': datetime.datetime(2022, 3, 5, 1, 1, 3, tzinfo=datetime.timezone.utc), 'commenter': 'LordSputnik', 'type': 'User'}, {'comment_id': 820006264, 'comment_body': 'Can avoid using arrow func, as in select-wrapper', 'comment_created': datetime.datetime(2022, 3, 5, 1, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'LordSputnik', 'type': 'User'}, {'comment_id': 820007258, 'comment_body': ""Let's configure the rule in `/.eslintrc.js` to allow imports from `**/react-select/*` - see example here:\r\n\r\nhttps://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/no-internal-modules.md"", 'comment_created': datetime.datetime(2022, 3, 5, 1, 10, 13, tzinfo=datetime.timezone.utc), 'commenter': 'LordSputnik', 'type': 'User'}, {'comment_id': 820007535, 'comment_body': 'Can probably get rid of these too, once LanguageField is migrated.', 'comment_created': datetime.datetime(2022, 3, 5, 1, 11, 37, tzinfo=datetime.timezone.utc), 'commenter': 'LordSputnik', 'type': 'User'}, {'comment_id': 826070422, 'comment_body': 'This should be cleaned up if unused', 'comment_created': datetime.datetime(2022, 3, 14, 15, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 826082372, 'comment_body': ""Let's follow the import style of this file and only import the `isEqual` method we need, and not import the whole package as `_`\r\n```suggestion\r\nimport {get as _get, has, isEqual} from 'lodash';\r\n```"", 'comment_created': datetime.datetime(2022, 3, 14, 15, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 826101662, 'comment_body': ""This will cause an uncaught error if there is no defaultValue:\r\n`state` will be set to `null` and the line after, we try to access `this.state.value` which causes the error\r\n>TypeError: Cannot read properties of null (reading 'value')\r\n\r\nWe just talked on IRC about removing this component entirely, so i won't expand too much :)"", 'comment_created': datetime.datetime(2022, 3, 14, 15, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 826103707, 'comment_body': 'As commented above, we should avoid nesting props here', 'comment_created': datetime.datetime(2022, 3, 14, 15, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 826117290, 'comment_body': '```suggestion\r\n\tconst identifierValue = identifierTypesForDisplay.filter((el) => el.value === typeValue);\r\n```', 'comment_created': datetime.datetime(2022, 3, 14, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 826117469, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\tvalue={identifierValue}\r\n```', 'comment_created': datetime.datetime(2022, 3, 14, 15, 58, 10, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 826119413, 'comment_body': ""If possible I'd rather see styles defined in css/less files rather than inlined here.\r\nWhy are the style required here but not in other components that use ReactSelect?\r\nIs this something that should be added as styles for selects across the whole website?"", 'comment_created': datetime.datetime(2022, 3, 14, 15, 59, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 826132862, 'comment_body': 'Same as other places, we want to avoid nesting props into an object', 'comment_created': datetime.datetime(2022, 3, 14, 16, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 826135761, 'comment_body': ""I can't tell what that does, can you explain?\r\nIt would be good to have some comments here.\r\n\r\nI'm not sure we should be tying this component to react-select, since it doesn't use it directly\r\n, and it is also use with nothing to do with react-select (for example the EntityRelationships component)\r\n\r\nWhere are props.getStyles and props.innerProps from? They're not mentioned anywhere else in the component"", 'comment_created': datetime.datetime(2022, 3, 14, 16, 15, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 826157137, 'comment_body': ""It would be interesting to see why the `!important` is needed here.\r\nWhat are they being overwritten by? Can we supersede them simply by having more selectors instead?\r\nUsually it's not a good sign if we have to use !important and its use should be limited as much as possible."", 'comment_created': datetime.datetime(2022, 3, 14, 16, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 826750560, 'comment_body': 'Sorry for the mess, these are the [props](https://react-select.com/props#components) react-select pass to custom components. since we are using same component for value, option and other purposes i have to do this to ensure it work in all cases. i will add some comments about the same', 'comment_created': datetime.datetime(2022, 3, 15, 9, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 826772778, 'comment_body': 'This is not needed since we are using classes now to style components, i used it as promoted by [react-select](https://react-select.com/upgrade-to-v2#new-styles-api)  but later realized classes would be more convenient here.', 'comment_created': datetime.datetime(2022, 3, 15, 9, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 826792421, 'comment_body': ""Since react-select use css in js to style its component, i don't think we can get rid of !important flag."", 'comment_created': datetime.datetime(2022, 3, 15, 10, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 827124092, 'comment_body': 'The `getGenderOptionValue` method is missing', 'comment_created': datetime.datetime(2022, 3, 15, 15, 39, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 827144063, 'comment_body': ""I don't know if it is necessary to have that check. Considering innerProps might contain an onClick prop, when it is spread (`{…innerProps}`) it should overwrite the onClick defined here.\r\n\r\nI believe if `innerProps.onClick = myFunction`, then this code:\r\n`onClick={this.handleParentEvent} {...this.props.innerProps}`\r\nwill be compiled as `onClick={myFunction}`"", 'comment_created': datetime.datetime(2022, 3, 15, 15, 57, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 827145176, 'comment_body': 'This looks a whole lot more complicated than I would have guessed is necessary.\r\n\r\nBut as you pointed out today this entity-search component is basically equivalent to entity-search-field-option and should probably be removed altogether in favor of entity-search-field-option.', 'comment_created': datetime.datetime(2022, 3, 15, 15, 58, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 827154697, 'comment_body': ""It still looks wrong to me that props would be passed nested inside a `data` object.\r\nWe should avoid doing that, it's an anti-pattern.\r\nWhy is this necessary?"", 'comment_created': datetime.datetime(2022, 3, 15, 16, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 827169052, 'comment_body': ""To me it looks like we shouldn't be using this component directly, if all these changes are required in order to make it work for use in the select.\r\nThe reason is that this component isn't specific to react-select and is used in other contexts. It shouldn't have to know anything about react-select.\r\n\r\nEven with the comment you added, I can't tell what is happening in this code block because I don't know how the new version of react-select works; that's a red flag: we're tying this component to a specific version of a library.\r\n\r\n\r\nI think it is probably time to have a RelationshipOption component specifically for use with react-select, that will manage all these implementation details and rely on the unmodified Relationship component internally for displaying.\r\n\r\nDoes that seem reasonable to you? As I said I'm unclear on react-select details, but happy to help."", 'comment_created': datetime.datetime(2022, 3, 15, 16, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 827204382, 'comment_body': ""This is going to throw an error if getStyles is not defined.\r\nFor example when used in `src/client/entity-editor/edition-section/edition-section.tsx`.\r\n\r\nAnother case where we're tying a component to react-select implementation details when we shouldn't be.\r\nI'd rather see a separate component for use with react-select."", 'comment_created': datetime.datetime(2022, 3, 15, 16, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 827265823, 'comment_body': ""[React-select](https://react-select.com/components) pass option as props.data to custom component like singleValue or Option,i don't know if we can do anything about that"", 'comment_created': datetime.datetime(2022, 3, 15, 17, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 827322398, 'comment_body': 'I also believe we might as well have separate components for react-select.', 'comment_created': datetime.datetime(2022, 3, 15, 19, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}]","[{'commit_sha': 'bb5347b9420b123100eb740dd88805f87b40742c', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82cffc5b2bd4da9684d0574bdae254749dd5e19d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db4bf07889c8474fe5541696549911a3d501ba1f', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8402f4c1ac9471aa72f5077fc553c9aade2f263', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44e83ad2ace5fe5b0236c50d2ad1d724dcdda3df', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '494ecf75b0bf8601587f73367212b7c353a60170', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57b6c1458adde500f4800e7c6538f3cb8f3823cf', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e12aeb258e906aafe984668d13177eba43c063ee', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe3234ae8bcd11a0bbdd7631439743139525aa1c', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da6e53714482e5062b05ceae2c9136cf5a1ea398', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8e6bb85d6db251c05389f8848e3029a76fdd90d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ded8d75eb4038b7c6e69917b0e528132c3961ce', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cc730ddbc99c383285ccf6d47f43b5afac8898d', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2c4b9812c1a948ff2b00333142a9051001ec57e', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8420416f9ec7294f3202df5adda66172a1c0051', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ac9e6f97ccadddd38aefc10e0dce26b8d10439f', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25ac15059bb7cb40c980997083cce8ad239c0207', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d3cc0df89f736d63b3ef6a9c3390ac2725dcdff', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bace28b8af59fc170e55649e9c0dd24cb56852e', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02978a5317dd907e38d9efb3ac506bee31c4c94d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '992261a59622659107427f5dd508d1041eab6096', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '846b8516d3a9b98dd41e838690d2486dcb26c697', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c335c658672641ccfc6d567ef985b795d1d7db5', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d229c4c79253f970036ec255606db96c0d4c959', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}]",Shubh,62337564,shubhi.blog@gmail.com,User,,66,,5,19
723617338,Notifications Service,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing
2. Verify that your changes match our coding style
3. Fill out the requested information
-->

### Problem
Adding a feature to subscribe entities and get notified if and when any changes are made to those entities
<!-- What are you trying to solve? -->


### Solution
https://community.metabrainz.org/t/gsoc-2021-notification-service-bookbrainz-prabal/526184
<!-- What does this PR do to fix the problem? -->


### Areas of Impact
<!-- What parts of the codebase and which behaviors are affected? -->
",False,696,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/696,https://github.com/metabrainz/bookbrainz-site/pull/696,open,1589,1109,22,25,0,8,0,0,[],2021-08-31 18:10:22+00:00,,0.0,,"[{'comment_id': 699716364, 'comment_body': ""I think it'll be better if I make `PRIMARY KEY (collection_id, subscriber_id)` what do you think?"", 'comment_created': datetime.datetime(2021, 8, 31, 22, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 701824227, 'comment_body': 'We should probably wrap the entirety of this message handler in a try-catch block', 'comment_created': datetime.datetime(2021, 9, 3, 11, 42, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 701824339, 'comment_body': ""Does this load the same collection on each CollectionSubscription model?\r\nIf so it would probably be better to pass the required collection info (I guess only the collection name is missing?) along in the 'send-notifications-for-collection' message instead."", 'comment_created': datetime.datetime(2021, 9, 3, 11, 42, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 701825429, 'comment_body': ""Same comment here, we have access to `req.user.name` when we emit the 'send-notifications-for-collection' message, so better to pass it along in the arguments rather than have to re-fetch and serialize the editor just to get the name."", 'comment_created': datetime.datetime(2021, 9, 3, 11, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 701826369, 'comment_body': ""```suggestion\r\n\t\tconst allNotifications = await new Notification().where('subscriber_id', editorId).fetchAll({required: false});\r\n```"", 'comment_created': datetime.datetime(2021, 9, 3, 11, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 701944673, 'comment_body': ""As far as I can tell, all this code (`handleSubscribe`, `handleUnsubscribe`, `setIsSubscribed` and the buttons that go with it) is duplicated for each display page. Instead it would be better if the whole subscription part was a separate component that can then be added to the relevant pages.\r\nYou'll probably want to pass the submissionUrl as a prop to make it more flexible.\r\n\r\nWe might end up with separate CollectionSubscription  and an EntitySubscription components if they require very different implementations."", 'comment_created': datetime.datetime(2021, 9, 3, 14, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 701950360, 'comment_body': 'I think this URL structure would be more appropriate and ""RESTy"":\r\n`/${entityType}/${bbid}/subscribe`  and associated `/unsubscribe` and `/subscribed`\r\nI guess that means we don\'t need to send any information with that request anymore: BBID is in the route and the user needs to be logged in to access the route so we have their info in the route handler.\r\n\r\nThat would also work for collections: `/collection/${collectionId}/subscribe`…\r\n\r\nThat means a fair amount of refactoring on the routes, I know, sorry about that :/\r\nI think you\'ll end up with a middleware or two (one for entities, one for collections) which should be reusable for each entity\'s routes. In theory, in these routes you should have access to the user information ', 'comment_created': datetime.datetime(2021, 9, 3, 14, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 701952584, 'comment_body': ""Would this not be accessible in the route handler on the server?\r\nHow come you don't need to send the userId for the entity subscribe routes but you do send them for the collections subscribe route?"", 'comment_created': datetime.datetime(2021, 9, 3, 14, 51, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '6eefc25cfb34b8d89ef4477fa9956bce73b7a77b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '700e44aa79a6f5f658c2624d3ac4b8d57eb950e6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9308089153b9de28df2b71464115b6f9fa49d0cc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bea6f7f58536f4020d4896733d6f819a48cff861', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '454847bbc4d9d0b7c8e9bc57a84d6f79760dd0a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee6c17c46980c34d9ffdf2bc4a18c6ff2e202705', 'committer_username': 'lint-action', 'committer_name': 'Lint Action', 'committer_email': None, 'commit_date': datetime.datetime(2019, 12, 27, 11, 57, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc8c9ad79ca7174e179d7f2ca7b32baccde3a470', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'da4a8a68d067cdf04dc693a97e34b50f2a389733', 'committer_username': 'lint-action', 'committer_name': 'Lint Action', 'committer_email': None, 'commit_date': datetime.datetime(2019, 12, 27, 11, 57, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcfb0adf5bdfe0b145e02f8df651d902bd9dd2c1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fb59d680def49d59c0c360d84010df6b1ba9ff3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bb7f79084f146e147bd7098fc576546692cc617f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'daba75edfd41a7734304fc6d1fa1a28b0607aee0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee041d1a5a244419ff7b73785699c5b03adae1e6', 'committer_username': 'lint-action', 'committer_name': 'Lint Action', 'committer_email': None, 'commit_date': datetime.datetime(2019, 12, 27, 11, 57, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfb1f54602a85e1b8363aa2ce83578ffdb5960ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0132f689c57a7d32b77995bf90a70fdf9d3a8f1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '917d5b9c29ca8455af15ccdc160afd9c7b675ba2', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cc972dc150ea6e093aba7af510943575f38c491', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd75e84500db283bb5bed249224370d355fd52a3', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c3ba3218028347cc3b2016488789bcc16e6bfba', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baccf8836c452a17834d016e641af6625150aef0', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7989606fca5fa8e64d244c0d35d0a6b6689c09c6', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44d3e369bf70f3b222a7247604403acf5f138e8d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f714500aec583ab59774a8e15dd5c19ca1160b12', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b462e3e106b07eb53aad34b7211015fd68891ae', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87e4a182f695cf81195f1370d943b3d12db30fbc', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}]",,45737735,,User,,36,,5,17
948260978,Feat(uf-route): POST endpoint for submitting multiple entities,"Adding POST route ""/create/handler"" for unified form

### TO-DO

- [x] Added /create/handler endpoint
- [x] Added Tests for /create/handler",True,847,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/847,https://github.com/metabrainz/bookbrainz-site/pull/847,closed,773,49,17,15,1,11,0,0,[],2022-05-26 13:17:59+00:00,2022-06-27 18:22:13+00:00,2783054.0,"32 days, 5:04:14","[{'comment_id': 892175166, 'comment_body': '```suggestion\r\nexport function createEntitiesHandler(\r\n```', 'comment_created': datetime.datetime(2022, 6, 8, 10, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 892193017, 'comment_body': ""I would like to see all the methods below separated into another file (what about `proces-unified-form.ts` or something along those lines?).\r\nThis file is already very messy and in need of refactoring, so let's not add another 200 lines of code to it :)"", 'comment_created': datetime.datetime(2022, 6, 8, 10, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 892214436, 'comment_body': 'Just to make it a bit clearer:\r\n```suggestion\r\nexport function handleCreateMultipleEntities(\r\n```', 'comment_created': datetime.datetime(2022, 6, 8, 10, 55, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 892219001, 'comment_body': ""Now that we're duplicating this code, this could do with 1. Being refactored into a separate reusable function and 2. Being refactored to use async/await syntax"", 'comment_created': datetime.datetime(2022, 6, 8, 11, 0, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 892220224, 'comment_body': ""This line is quite hard to read.\r\nCan we look at fixing the underlying issue? Can you explain what the symptom was that you had when using Promise.all?\r\nIf we can't fix it, at least it would be good to explain in a comment what the code is doing"", 'comment_created': datetime.datetime(2022, 6, 8, 11, 2, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 892221747, 'comment_body': 'Maybe this can be refactored into a separate helper to make the whole more readable?\r\n', 'comment_created': datetime.datetime(2022, 6, 8, 11, 3, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 894516668, 'comment_body': 'Not sure if we can fix that, it seems to be common problem with bookshelf when using transaction with promise.all as described [here](https://github.com/bookshelf/bookshelf/issues/1498) \r\nI will add this issue link in the comment as well', 'comment_created': datetime.datetime(2022, 6, 10, 13, 21, 6, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 902518843, 'comment_body': ""Is the `isCustom ? !editionGroupRequired || Boolean(get(value, 'id', null))` part necessary?\r\nDoesn't the original `validateUUID(get(value, 'id', null), editionGroupRequired)` do the same thing, i.e. valid if there is a UUID, and invalid if editionGroupRequired is true and there is no id?\r\n\r\nIn which case we wouldn't need the `isCustom` boolean.\r\n"", 'comment_created': datetime.datetime(2022, 6, 21, 11, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 902797494, 'comment_body': ""Like other entities which are created  on the fly, they are first assign with temporary ids which later map to actual bbids on the db.\r\n`validateUUID(get(value, 'id', null), editionGroupRequired)` may not work for temporary id."", 'comment_created': datetime.datetime(2022, 6, 21, 15, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 902821110, 'comment_body': 'Got it, thanks for the explanation, I forgot the temporary ids are not UUIDs', 'comment_created': datetime.datetime(2022, 6, 21, 16, 20, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 903625809, 'comment_body': 'The [tests](https://github.com/metabrainz/bookbrainz-site/runs/6996756983?check_suite_focus=true#step:10:1483) are failing because of this line; we should probably play it safe in any case and either catch any possible error or first store the transformfunction in a variable, then check if the funcion exists and is actually a function (isFunction lodash utility) and only then call it.\r\n', 'comment_created': datetime.datetime(2022, 6, 22, 11, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': 'acfd44388d2ba3f0bbb9fe5b551420c1489c5310', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83b90201e796f67eff0004d8499ff0c6493ff2a1', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '879909e4b1f01a4b2de9325ac98d10380625588b', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7b1e4a6cc852dd912df374c36b57e3b573e878a', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a4402933a111de2d5e0ea3aab038ecf90f067ba', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39ca3d4a93fe2b84dfb8055db4e613e9ecec93b1', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82662ab4ccc52ce6eda97b9d58cbdcfb2ff9138f', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '359d667a7d5b04c91cd085071f6a2803e3973c48', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf202ecddd0d54d7cc670cebbb526d264d8c49cf', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9d9fea1a242af21f14c04c672b3792b285c2236', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b8a049f4c526e85531a95926fc4faa1454eee39', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a4d191a02ed1bc8b4ae4c550085cae4c9a3a0b0', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dccade2c71c63277f1e614286d182aa49bcd91ba', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12b852465b73ba57ce50b0f7bd3555050b2d8900', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1baa0545cc3166e4085a93ac5931686a0b0bc4f8', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}]",Shubh,62337564,shubhi.blog@gmail.com,User,,66,,5,19
989669570,Feat(route): Edit exisiting entity through unified form POST route,"Since now we need to edit entity for use cases like adding relationships for work with author, /create/handler POST route should support that as well.
This route expect client to send ~complete state of existing entity with~ required changes only.
Also passing `id`  (bbid of entity), `__isNew__`   (falsy for existing entity) attributes is mandatory with entity state.
Entity state must include submission note for the revision.

### Tasks

- [x]  Fix relationship overriding issue
- [x]  Make route support edits
- [x]  Add basic edit tests

### Areas of Impact
<!-- What parts of the codebase and which behaviors are affected? -->
src/server/routes/entity/process-unified-form.ts",True,858,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/858,https://github.com/metabrainz/bookbrainz-site/pull/858,closed,280,72,11,6,0,0,0,0,[],2022-07-07 04:49:48+00:00,2022-07-11 18:01:54+00:00,393126.0,"4 days, 13:12:06",[],"[{'commit_sha': 'b550d83ad894fe3e675114ffe9bfdbd4cee2c4c6', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'becff4d6a280485f30007c8df23c55243504518b', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b681ca74718742f28b893755fb00ec6ec764159', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ee696919115007d9bc5272068a72de4f3574bd8', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db70977699bb59bf4d2ca8b1de375602e2cfebb7', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc8f97849df8cf35b6fb006b530a2996821b5ae7', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}]",Shubh,62337564,shubhi.blog@gmail.com,User,,66,,5,19
958161475,Feat(UF) : Add frontend for unified form,"front-end part of unified creation form
",True,850,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/850,https://github.com/metabrainz/bookbrainz-site/pull/850,closed,5366,365,101,116,1,56,0,0,[],2022-06-04 12:22:06+00:00,2022-08-18 16:55:35+00:00,6496409.0,"75 days, 4:33:29","[{'comment_id': 940301373, 'comment_body': ""We should probably update the base branch (`new-creation-form`)  from master and solve any potential conflicts, considering this has been touched in #868 \r\n\r\nI'll update the bas branch and you handle the potential conflicts? Does that work for you?"", 'comment_created': datetime.datetime(2022, 8, 8, 14, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940305725, 'comment_body': 'I have a feeling we\'re going to want this as the first item in the dropdown.\r\nHere\'s the order I would suggest (note the divider has moved)\r\n<img width=""219"" alt=""image"" src=""https://user-images.githubusercontent.com/6179856/183441028-bcd66d1e-7e54-4bc3-8acb-be92c763f3ac.png"">\r\n', 'comment_created': datetime.datetime(2022, 8, 8, 14, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940310643, 'comment_body': 'Looks like `onAddAlias: () => dispatch(addAliasRow()),` is not needed anymore in the `mapDispatchToProps` method', 'comment_created': datetime.datetime(2022, 8, 8, 14, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940314744, 'comment_body': 'If we need `toArray` because aliases  is an Immutable, I would somehow be more comfortable with reading `aliases.toArray().map(…`  in this order instead', 'comment_created': datetime.datetime(2022, 8, 8, 14, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940319493, 'comment_body': 'I think for posterity we should replace all occurrences of `isUf` with `isUnifiedForm` for legibility.\r\nI could see a day in the far future where the unified form and other entity forms have been entirely replaced, but somehow this boolean remains because no one knows what it does :D', 'comment_created': datetime.datetime(2022, 8, 8, 14, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940325688, 'comment_body': ""Some comments here describing what we're doing would be useful.\r\n\r\nI would also suggest this shortened form:\r\n```suggestion\r\n\t\tif (['clear', 'pop-value', 'select-option'].includes(action?.action) && author?.get('__isNew__', false)) {\r\n```"", 'comment_created': datetime.datetime(2022, 8, 8, 14, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940327728, 'comment_body': 'I believe `onClearHandler` and `onAuthorChange` props should also be part of the useCallback dependencies. \r\nSame thing goes for `handleButtonClick` below.', 'comment_created': datetime.datetime(2022, 8, 8, 14, 45, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940329376, 'comment_body': 'Are you trying to pass specific props here?\r\nI think although there are places that do that in the codebase,  passing down all props is an anti-pattern and could potentially lead to unwanted rerenders', 'comment_created': datetime.datetime(2022, 8, 8, 14, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940336469, 'comment_body': 'Same comments here and for the SelectWrapper below, do we need all props cascading down?', 'comment_created': datetime.datetime(2022, 8, 8, 14, 53, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940340555, 'comment_body': 'I\'m not sure I get the reason behind this mechanism (and the ""disable button for first row""  below). Shouldn\'t I be able to delete the first author?\r\nWhat I would expect is that I can only delete the first author if there are more than one authors.\r\nMaybe I\'m missing something?', 'comment_created': datetime.datetime(2022, 8, 8, 14, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940356828, 'comment_body': ""This doesn't look like it is in the right place.\r\nIs this because we are using this entity stub to modify the Series?\r\nShould we have `const entityOption = { …entity, `  to have all the search result's attributes by default and overwrite the rest of the existing entityOption  attributes?\r\n"", 'comment_created': datetime.datetime(2022, 8, 8, 15, 10, 40, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940359544, 'comment_body': ""Small thing:\r\n```suggestion\r\n\t\t\t{label ?? 'Name'}\r\n```"", 'comment_created': datetime.datetime(2022, 8, 8, 15, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940367489, 'comment_body': 'Not sure I get this. Why is the icon hidden when using the unified form?\r\nAs a matter of fact this doesn\'t seem to be working as expected: note that in the component props `isUf = false`\r\n<img width=""934"" alt=""image"" src=""https://user-images.githubusercontent.com/6179856/183452596-45d09816-fcf0-4e02-90db-4a8c562cbb4e.png"">\r\n', 'comment_created': datetime.datetime(2022, 8, 8, 15, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940373786, 'comment_body': ""That doesn't look right. If you need to pass the languageOptions down to a child component it would be better to pass them down directly with a named prop "", 'comment_created': datetime.datetime(2022, 8, 8, 15, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940382011, 'comment_body': '~~I agree with limiting the number of results displayed, but why 3 in particular? We could maybe show a few more? 5?~~\r\n\r\nThis is probably more about me getting #814 merged :)', 'comment_created': datetime.datetime(2022, 8, 8, 15, 34, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940389316, 'comment_body': ""I'm not sure I follow the logic here.\r\nAre we trying to prevent a user from creating a duplicate using the inline entity modals?\r\nIt feels like a bit of an edge case, but perhaps you're right and we should prevent it.\r\nIn any case, some comments to explain the use case of why we're doing this here would be welcome"", 'comment_created': datetime.datetime(2022, 8, 8, 15, 41, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940406500, 'comment_body': '1. I think by default this should be checked\r\n2. Wording suggestion:\r\n```suggestion\r\n\t\t\t\t\tlabel=""Copy Authors from Author Credit""\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 15, 56, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 940424728, 'comment_body': 'I\'m not so sure this is the right way to go.\r\nFor one, the layout doesn\'t work well for me; it\'s hard to understand what is happening: \r\n<img width=""611"" alt=""image"" src=""https://user-images.githubusercontent.com/6179856/183459314-f1f9c6d0-f1b7-46a6-b716-4f1c342a1dff.png"">\r\n\r\nSecondly, I think this turned out a bit confusing. Most of the modal could probably go directly in the content tab\r\nWe should consider that the feature allows user to add *all the Works from the content tab* in the series, or none at all.\r\nWe can display all the works from the content tab, plus existing series\' works, and allow them to be sorted (but not removed).\r\nHere\'s a quick mockup to explain a bit better. Ignore the checkbox I added after the \'Series\' subheader, this could be an info popover. Happy to discuss if it\'s not very clear. Also these improvements might be for another PR?\r\n![IMAGE 2022-08-08 18:13:40](https://user-images.githubusercontent.com/6179856/183464094-17459529-6639-4e0c-9bce-f4d090bd16c5.jpg)\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 8, 16, 14, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941600439, 'comment_body': 'This could also do with a little ℹ️ icon like some of our other fields with a short explanation:\r\n""This will set the book\'s Author Credits from the \'Cover\' tab as this Work\'s Author"", something like that.\r\n\r\nWe should also probably make this selected by default?', 'comment_created': datetime.datetime(2022, 8, 9, 17, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941601772, 'comment_body': 'The name here could be more descriptive; what does it toggle?\r\nDoes this sound right?\r\n```suggestion\r\n\t\tcase TOGGLE_COPY_AUTHOR_CREDITS:\r\n```', 'comment_created': datetime.datetime(2022, 8, 9, 17, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941603908, 'comment_body': 'Both for the action and the button itself I think this terminology would be clearer. What do you think?\r\n```suggestion\r\n\t\tcase DUPLICATE_WORK:\r\n```\r\nAnd the button text would be ""Duplicate"".', 'comment_created': datetime.datetime(2022, 8, 9, 17, 20, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941625506, 'comment_body': 'Absolutely yes for the feature !\r\nI think the UI could be improved. It would make sense to display the right wording (ISBN-10 if pasting an ISBN-13, vice versa for ISBN-10) and show the generated ISBN in a disabled text input.\r\nSince you have the type you should be able to modify the text of the checkbox.\r\n\r\nI think we might want to have the code that generates the auto-ibsn in the reducer for the cover-tab (or even separate this new isbn-field component into a separate component—we\'ll probably want to use it on the regular Edition form). Talking about this code: https://github.com/metabrainz/bookbrainz-site/blob/8bcede1f1c1257565960860720c5d7ba130c4244/src/client/entity-editor/submission-section/actions.ts#L191-L205\r\nThat would allow us to the result to the user as a preview.\r\n\r\nSomething like that?\r\n<img width=""554"" alt=""image"" src=""https://user-images.githubusercontent.com/6179856/183725248-140e3a59-54a0-49d8-9641-88541bab15bb.png"">\r\n', 'comment_created': datetime.datetime(2022, 8, 9, 17, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941644769, 'comment_body': 'This should probably be a NumericField: https://github.com/metabrainz/bookbrainz-site/blob/new-creation-form/src/client/entity-editor/common/numeric-field.tsx', 'comment_created': datetime.datetime(2022, 8, 9, 17, 58, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941659577, 'comment_body': '```suggestion\r\n\t\t\t\ttooltipText=""The International Standard Book Number (ISBN) is a commercial book identifier, composed of 10 or 13 numbers, often also used as the barcode.""\r\n```', 'comment_created': datetime.datetime(2022, 8, 9, 18, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941665980, 'comment_body': 'Comments please :)', 'comment_created': datetime.datetime(2022, 8, 9, 18, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941681154, 'comment_body': 'After using the form for a bit, I think the modal is not very intuitive in this case. Having to click the entity name to open the modal in hard to discover, and unnecessarily adds a click to review the information entered, which is counter-productive for this component I think.\r\nI still think we should show the entities as cards in each section (where the link to the modals currently are), showing similar content as the modal body.', 'comment_created': datetime.datetime(2022, 8, 9, 18, 31, 40, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941687300, 'comment_body': ""Currently, the button text and purpose are  not very clear.\r\nIt looks like it is part of the ISBN fields, and the number in the button text is a bit confusing (`Add ${numIdentifiers} identifiers` would already make it a bit more understandable).\r\nI think we'll want to revisit this section (and let's be honest the existing button isn't great either, hence [BB-343](https://tickets.metabrainz.org/browse/BB-343)…), but I'm thinking in a separate PR would be better."", 'comment_created': datetime.datetime(2022, 8, 9, 18, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941692229, 'comment_body': 'Comments please :)', 'comment_created': datetime.datetime(2022, 8, 9, 18, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941701216, 'comment_body': ""I think we're missing an introduction text with a short explanation, mainly aimed at newcomers, but I don't have anything ready right now to suggest. Let's think on it."", 'comment_created': datetime.datetime(2022, 8, 9, 18, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941704774, 'comment_body': ""I gotta say, i love this component!\r\nI've been wanting that for a while !"", 'comment_created': datetime.datetime(2022, 8, 9, 19, 0, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941705123, 'comment_body': ""What was your final outcome with the validation state? Was it still slowing down the app too much? If so we'll unfortunately have to get rid fo the commented out code (and any other code that was just for this validation feature) [a moment of silence for the fallen bits]."", 'comment_created': datetime.datetime(2022, 8, 9, 19, 1, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941709786, 'comment_body': 'I\'m still wondering if we should use the classic ""wizard"" icon of a magic wand.\r\nI\'m not a fan of the font awesome one… https://fontawesome.com/icons/wand-magic-sparkles?s=solid', 'comment_created': datetime.datetime(2022, 8, 9, 19, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941711172, 'comment_body': 'This color should already be defined as `$orange` (in the lobes4 package)', 'comment_created': datetime.datetime(2022, 8, 9, 19, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941713516, 'comment_body': 'Something else we need to fix (not in this PR) is the validation state of the author credit; since we made the author credits a required field, we need to show the validation label like we do for other fields to show it in invalid when empty.', 'comment_created': datetime.datetime(2022, 8, 9, 19, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941714017, 'comment_body': '```suggestion\r\nconst stringifiedInitialState = JSON.stringify(initialEditionSection);\r\n```', 'comment_created': datetime.datetime(2022, 8, 9, 19, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 941999389, 'comment_body': 'Yep!', 'comment_created': datetime.datetime(2022, 8, 10, 4, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942003370, 'comment_body': ""Some props like entity identifiers and types are required for modal, since these props required all over the form components so thought this would be better rather than manually cherry picking the props. These props don't get change so should not cause issue with renders."", 'comment_created': datetime.datetime(2022, 8, 10, 4, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942015184, 'comment_body': 'Since AC select field is directly linked to first row, removing it would cause problems hence i disabled the button though now i think about it, it would be better to clear first row (resetting) on remove button click, will do that instead.', 'comment_created': datetime.datetime(2022, 8, 10, 4, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942018976, 'comment_body': ""I'm not sure if it would be good idea to keep all fetched entity attributes in the state, considering we only need handful of them. "", 'comment_created': datetime.datetime(2022, 8, 10, 5, 2, 32, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942019444, 'comment_body': 'but that might not work for empty string.', 'comment_created': datetime.datetime(2022, 8, 10, 5, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942022337, 'comment_body': ""It is only for tabs validation, icon on tab titles weren't looking great thus thought it would be better to remove them.\r\n\r\n![uf-tabs-validation](https://user-images.githubusercontent.com/62337564/183820525-a218faf6-9918-4ce5-9ab4-b771afe3843b.png)\r\n\r\n"", 'comment_created': datetime.datetime(2022, 8, 10, 5, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942024217, 'comment_body': 'Yep, temporary fix for annoying layout changing issue. let me know if i can help with getting that PR merge.', 'comment_created': datetime.datetime(2022, 8, 10, 5, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942036358, 'comment_body': ""Series on content tab does need improvements, thanks for the mock-ups. though few things \r\n\r\nHow does a user select other entity for series item ( from add item button beside select?). \r\nAre we only going for work series?, ( i.e restricting user to create only work series)\r\nAre we allowing user to delete existing series items?\r\n\r\nI like the idea of having series editor on content tab itself, iirc we don't get series items from /search endpoint would need to incorporate that as well so better be done on another PR."", 'comment_created': datetime.datetime(2022, 8, 10, 5, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942080316, 'comment_body': 'Hmm... disable input field seems kinda out of place. how about this?\r\n\r\n![uf-isbn-field](https://user-images.githubusercontent.com/62337564/183833525-eb118ec3-13dc-4e16-86fd-4252cea2fca2.png)\r\n\r\nand when no input or wrong input.\r\n![uf-isbn-2](https://user-images.githubusercontent.com/62337564/183833906-86993385-9c9c-446b-9ae1-091b12c3e952.png)\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 10, 6, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942095344, 'comment_body': 'ĪSBNs can contain other characters as well, right? like `0-9752298-0-X`', 'comment_created': datetime.datetime(2022, 8, 10, 7, 8, 49, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942109770, 'comment_body': ""The only concern i have with cards is that they may get large and possibly crowd the whole tab if we have many new entities/cards. we may hide them using some cascade component but showing too many of these don't feel right either.\r\nThis probably need more discussion, maybe a separate PR for this as well?"", 'comment_created': datetime.datetime(2022, 8, 10, 7, 25, 20, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942111334, 'comment_body': 'Yes, ISBN-10 can contain `X` as a valid character, and `-` is a standard part.', 'comment_created': datetime.datetime(2022, 8, 10, 7, 26, 58, tzinfo=datetime.timezone.utc), 'commenter': 'leftmostcat', 'type': 'User'}, {'comment_id': 942120269, 'comment_body': ""agree but `Add 0 identifiers` doesn't feel right either. how about this?\r\n![identifier-btn](https://user-images.githubusercontent.com/62337564/183842680-e8b3b3f5-ff03-4b47-aa7b-45c82ee67629.png)\r\n"", 'comment_created': datetime.datetime(2022, 8, 10, 7, 37, 7, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942130316, 'comment_body': 'How about ""Work is a distinct intellectual or artistic creation expressed in words and/or images eg. Illustration. translation etc. Works added here will automatically become the part of this book(edition).""', 'comment_created': datetime.datetime(2022, 8, 10, 7, 47, 23, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 942141372, 'comment_body': ""Though after optimization this doesn't seem to cause any issue. but now i am not sure if we need validations on modal, let me know if you think we should keep the validations or not."", 'comment_created': datetime.datetime(2022, 8, 10, 7, 58, 39, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 943537371, 'comment_body': 'OK, `new-creation-form` is now up to date with master', 'comment_created': datetime.datetime(2022, 8, 11, 14, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 943539608, 'comment_body': 'Yes, I think that would be the right mechanism :+1:', 'comment_created': datetime.datetime(2022, 8, 11, 14, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 943542149, 'comment_body': ""You're right ! Let's leave it as-is."", 'comment_created': datetime.datetime(2022, 8, 11, 14, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 943544068, 'comment_body': 'I see. Then perhaps the `isUF` boolean should be renamed. Perhaps a more generic `hideIcon` (or `showIcon` defaulting to `true`)?', 'comment_created': datetime.datetime(2022, 8, 11, 14, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 943575018, 'comment_body': ""```suggestion\r\n\t\t\t{label || 'Name'}\r\n```\r\nThat's what I'd usually do in order to have a fallback for empty (= falsy) strings."", 'comment_created': datetime.datetime(2022, 8, 11, 14, 44, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kellnerd', 'type': 'User'}, {'comment_id': 948196551, 'comment_body': ""Doesn't look like the NumericField component enforces only numeric characters, interestingly.\r\n\r\nI was mainly confused to see a NameField component which I assume would be used for names only.\r\n\r\nSomething more general to refactor I think."", 'comment_created': datetime.datetime(2022, 8, 17, 16, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '124c42ae01b5c8e21be30ba22c857956267e651e', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3339cdf3dc8f280a25c2d73290b8ddae7d34ea71', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43542dbb5124e6e25aab4df1a6c38106392aa1f1', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f390056bf01842ac63b3801575dbf57fbe7049f5', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dc4dcbc6ba28d4fc2fa967a800189502a906694', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3338f0ac7e629734a85ea014d003e292686acb5c', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65c57b33bb7793d730496aa25013850b3b2a7dcc', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5efeef927622258bc2aa6603b70345670c17b65e', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cb0e43521b40473dc549a9f088e788b8c65a9ca', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bca94f513a7b7a0176f564ddcd54f642eff37ecd', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd3bd19f8351085e4d7bc2f4d0265f5b4b8a4faa', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5fa8fcc7ddbf0ae2d94a16307f3ba0a93cafcea', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f80e527d1631ab4b8ad2a4160cc92fb1835ebff2', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c861681f96b17a0c94a60a948e76c56b236564e3', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8faca59a2b0b8b470b20a86ab9cb2245185fa806', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dd85d2747685d5bcdd5809f8665038deb8e2f11', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10455158fd961509fdb45d4e041e489eee95efe9', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '639703916ec149ffc8abc1c86ece371c0d600d00', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12a83812411b4d1d729ab159e35de8a437efa983', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ba5bb1b4aead52957cf6c9267426c88bb600dc1', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb8773ed3da99e362a51515cb988e7d36e5faba6', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8175eb119d693a2a9d8bcf1e361bbbd887b8c64b', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8eab3e46ca76b443e28b25d05a5b61548919221', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '355475c98e96029220f8b105723e804f2e08576d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '006f833e1af9415b598efde3ce6ad3c03a23cd2a', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b71361608a6e105aa7b7fc3c031d007ec9f027ad', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa22e697663b05ce23ebe5caf00dd2aca4d5a40d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cff0f1584be2aecbf44cb610b510c8736a6f5526', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aedf207d7bddb4484cb74dbd723936392272ca2a', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb029478c7c083083d7f631d92602d0919204a37', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb25e223fa6cc94474bc8ed5ab4b4cd5f30de4fd', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b4667be52bb2b00f9685534798566297ca6ee77', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6530761c7a34d680b34b074ccb0a3f50e49877ac', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b81590e07454231c53044334633dcc093397c086', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '214da2268637e6a5f41c067ef28a312ab42a2071', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd8330ffd0118071f0d13ad3cadb18f0fadeee77', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53c8bcea8a757ff90a36e8368214fe50e0793ef0', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f086c0c5f8d630a7fc851bfcf5fb248745cbc1b1', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef5a35fb9b4ad20c5970ef1d4cef516f201d89cf', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03683930d3ddd313e27235a9b57ed681407f23fc', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3506af428c6538d7c3e4c0560fbc60bf732d6388', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b913f9bcd60f4399acab10a7b9fbeb973f1c0f8', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ce60ee72e958d32558fa9315d83a98aa7e45ea4', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '048334608ab9e5c8c2ae48a4f5f62490d4b06504', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de7b5989c291a3d1f9bd84b749f9e2ce07cbbf8c', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e08845d4f2c99836edc9cdeea1c68e588bddcfb2', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd75714509ed4fd69948dd9b88e1b21388f642e0b', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6ae32fef617f562d3f2ae0ce2f0c1a0acfd0b32', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96dfc3f15bcdbc3e2d956170a209e0540ed6c169', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a83409b4fb28e08b3447b50ebd735d59929656', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4db5a2048038a90c5ccd4ea27328ee6ea724a3c', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddcdb2160b62332b12a6bd4a3b9968d7e304476e', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd49246c766e227b0ed1d32f0f1d2c487a02c26d6', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09e1c45064088a80d3ce98459638b5f5d1860db1', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb3b71d90ac1c9186ed737d4cb427b2d1f922dbe', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a135bab45e6e1a57db1381ac4fae1ebd6918611', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1eb61df3d26b27ed1933d34f9f8e0145795a2c8', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e772130fdd17cc1b20e6e715c2243e1f75735d8', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '649d3116a895f697d98df948e6fb5711b7563f15', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8901f92b154ec9b99ccf2207df1fdf82ffc47b9d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de66e5d2f95de74f47d73fb3e6f714055c46ac9c', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d67e5ca8c651bbf60df8229ad1452bb892bdb0f', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '046df6b658568791d18b080a2f1bffd605a93797', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64f2b5bc2089e158fc9c3a545616254fd5a784ed', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4f4447750e34e389b7b26663ad177b326bfbea2', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '851544034530484f0dc60dc6487228f1bc6e180f', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e77934c53956fc52386954bb1b8296ac99320b1c', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8df9e4ada6998c19f043294e052a1b17ccd54ea8', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8e410bd8ab3ba845049aafc98c08a97962433a2', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0044c3335d8e252cd3c3d462fb2d48e4bccb43ec', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a81853686aa99c4ee5f818904c542b9ed8f2f442', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee3d8c055ec307f294d9ea924e443782a8662ea6', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79dfe874bf9a1755989c6f7c08c0fede336c5ac6', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20d12952606f6551636bb41d2d20c2a7ffeabff5', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0904eff631c115cbb885d144c4e2bc4e957e6283', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '848aec981db6b8894bd8ac7085b8c14982e53d95', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5113d2856e78fdf2d8558963bb932aeaa9ea63ad', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af2d5a0b550dd0d2142f5870632f412c46b5db1c', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b84a03cdd88c711f2b34402d92ed9542f2d5d26', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2a7885289cea11e32891cf937b142e29336945d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066bfd1e6fbcd6c8a0273d2a8a55f62c7e75dbf8', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '240935d344153f3c354f4e5b61ae1c40140f7ec7', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9a6ae7c55a65dccc23bf4c3bffa1b4ab3032b67', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c114d3a43809dbe0965ea38ebf1fd91f631d330', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '355d01e7e58ea11c4a10153f19c83ee7317e998a', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef6dc47afa14aaeed20ce92484a2691e19577167', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f892bca0b2961c5283d4febcf12dcc31130336af', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9a5bc5fc6963dc7df24326a5f52a1ca1bc90d86', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba7956fe4289044c205fc3d7939e458aa8a2ec6', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef978e0845847c8a9d2b6ce8bb8175d7c3214c35', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc6fa0306405bf87e19de179555093169ba2e01d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55fb9897080054122924e91506d213f8ee05c4a2', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a6d6cf7060cb821f2a548046d0eba3adf032fdc', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5433ef2067ce58bbf87f084863585ef851f3d752', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf46e11d79973f0e5e0929f6b4d44ca34f4ce9f3', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26148c157560846ee4f531272542c95c67f82f62', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '860bcd0ddfc8e15d0eda3d3d7938eb77fc0c7c7f', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c697610c0c9a0d145ed2ebeb0d2a36a2986dd35d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42090040d8b9fb21ff78062d3954324cba24c99a', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12b6717958fa4eb4bb7c35c931137b0009b7eb4b', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88ef8075e46134259918bfb11a3d2846f9b079b9', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90322bb8ebf2039dec52c69e44972ddba0f9bbc0', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bcede1f1c1257565960860720c5d7ba130c4244', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '726f212bd7a376eca56f2bd9d2c9b1d258aef9e0', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a68354051781ba9c53dd30f25b8f92b1b1bb6c0f', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01de8f4ae88bb54ab9eb00344cf15d160624d35d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91f100b2f84afc6f5f2c61deb5c1d77deeea5f33', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '822b88d97a1139a95bc297eaca99e2a99b3d4732', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8238bb3223f945d7e62e0afa413202381da4c989', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72b9076309c5a4700f956f1a8dc131a9a0b1281f', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af56c9fa8938d4168e119c8dea8f5efa59ed6df2', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3884d94235d120da8c77fac4ed980c80ca9b49ab', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac9fccb48a24dd7e7bc892fdd4ffcaa70191545a', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '597845dbe205709901b9f876e6b58b42ce6c9750', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '125eed7c9f21773e57442bd9003df6dadee3176a', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '790c5ea5a25012095aca8f29ccc6e92e0277ce24', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}]",Shubh,62337564,shubhi.blog@gmail.com,User,,66,,5,19
1031021871,Feat: Improve Unified creation form,"This is a follow up PR for unified creation form, mainly for minor UI improvements & bug patches.",True,872,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/872,https://github.com/metabrainz/bookbrainz-site/pull/872,closed,82,125,11,8,0,1,0,0,[],2022-08-19 10:52:06+00:00,2022-08-31 11:34:32+00:00,1039346.0,"12 days, 0:42:26","[{'comment_id': 958783801, 'comment_body': 'Was this a mistake on my part when I suggested this? Did it create issues?', 'comment_created': datetime.datetime(2022, 8, 30, 18, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '0edc8925087928ca03ef6fad178246abcd5b4262', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17876c32a2f473b1b84f0c313fb162ff7a14f81d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b669d8f733fe056f5c605b5bc415cd74364a382', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c712be71fb9fd37081257c335a9d4006df8e7bf', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4dd6824c0e6ff46390ca5fff9b61aecbf7bffa1', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327e3e88ed16a0ea5bbfd5091c31469098fd479c', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0627bd6c3a6b329e540bebcf55a3521fb9e83df0', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '307939a37fcd7907e5aadf91920d0ce252a8574b', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}]",Shubh,62337564,shubhi.blog@gmail.com,User,,66,,5,19
1024136380,Fix(AC): users should be able to make Author Credits optional,"This PR does two things:
- Adds visual validation for Author Credits, showing an error if left empty
- Adds a checkbox so that users can make the AC optional",True,871,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/871,https://github.com/metabrainz/bookbrainz-site/pull/871,closed,212,51,16,18,0,12,0,0,[],2022-08-11 17:34:23+00:00,2023-07-19 15:08:03+00:00,29540020.0,"341 days, 21:33:40","[{'comment_id': 960872549, 'comment_body': ""This is duplicated on line 127 below; is that on purpose?\r\nIf so, a comment would be necessary to explain why we're doing it, so that it doesn't get cleaned up."", 'comment_created': datetime.datetime(2022, 9, 1, 16, 32, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 960896122, 'comment_body': '```suggestion\r\n\t\t\t\t\toverlay={<Tooltip id=""ac-enabled"">Select this checkbox if this Edition doesn\'t have an Author of if you don&apos;t know the Author(s)</Tooltip>}\r\n```', 'comment_created': datetime.datetime(2022, 9, 1, 16, 55, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 960902214, 'comment_body': ""I'm not sure this is the way to go. Instead of an empty object representing an optional AC, I would prefer if there was a specific boolean passed along with the form data that can be used to ascertain if the AC should be optional (basically the same thing as what we do visually on the page).\r\n\r\nThat way for example if we one day have the ability to create entities via an API we can control this aspect more declaratively rather than rely on the ambiguous empty object vs. null"", 'comment_created': datetime.datetime(2022, 9, 1, 17, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 960904670, 'comment_body': 'Following my comment above about a specific boolean for optional ACs, we want to be able to test separately that:\r\n- empty AC with `authorCreditDisabled = false` should fail\r\n- empty AC with `authorCreditDisabled = true` should pass\r\n- valid AC with `authorCreditDisabled = true` … ? What should we do here? Should validation fail? Or should we accept it?', 'comment_created': datetime.datetime(2022, 9, 1, 17, 5, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 963869757, 'comment_body': 'No, since AC field should be disable at that point. passing test will cause unnecessary confusion.', 'comment_created': datetime.datetime(2022, 9, 6, 15, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 966229972, 'comment_body': ""I'm not sure I understand why we check this in the AC row.\r\nShouldn't the check be done in validateAuthorCreditSection instead?"", 'comment_created': datetime.datetime(2022, 9, 8, 17, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 966232071, 'comment_body': ""Could you explain the double placeholder to me?\r\nI don't understand what's happening"", 'comment_created': datetime.datetime(2022, 9, 8, 17, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 966234390, 'comment_body': 'Following my request regarding the double placeholder, could you please also explain why we pass `!authorCreditEnable` and `authorCreditEnable`?', 'comment_created': datetime.datetime(2022, 9, 8, 17, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 966797518, 'comment_body': 'This check is mainly for first row of AC, since in inline editor first row always exist but might not contain any author. which should be valid if optional checkbox is ticked.', 'comment_created': datetime.datetime(2022, 9, 9, 8, 53, 27, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 966804121, 'comment_body': 'This should help - \r\nsecond placeholder is for isOptional paramter of validateAuthorCreditRow to check if row can contain null author.\r\nthird placeholder is for requiredOneOrMore paramter of validatMultiple which should be used by server to validate optional AC.', 'comment_created': datetime.datetime(2022, 9, 9, 8, 59, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 966807374, 'comment_body': 'It is something like, AC can either be empty or contain null values for author (first row) in case of optional checkbox ticked.\r\nthough rather than using the partials we can go with separate function which should handle all these edge cases between client and server validation of AC.', 'comment_created': datetime.datetime(2022, 9, 9, 9, 3, 32, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 966969244, 'comment_body': 'I think that might make it easier to follow the code, and perhaps we can out find why I was hitting that validation bug I mentioned.', 'comment_created': datetime.datetime(2022, 9, 9, 11, 32, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '2351484c6b8c20a72a83005c8221f6df8917679c', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a802987082c74116fca37157f1c97e30a9ed65c8', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e995bb37a7fe2e5616012bddd0aeb7cee9266f1', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b98d0b8cbdf552d68ff34e62c37973ca83941396', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc783fcc76fdc69bd19839632d23727df61a7eba', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2faf3e7de4b3f55f486567bafdb0728d016e6b69', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a356be0175c7ec10233affddaa633d94f9c61765', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fce90ba31796d42581aee6e53aca21b25780e214', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcae4942ca310ab331a452c0f04ec779c756d7d0', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7d0e88a71cb37894e30fb4bd85e5d34ba15e0f3', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '370b47ad2facf6187f757ce373ce1e4a0c16c5db', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2028a60d45720e2f62d19e47ee1c0a7c9ab8fe0', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '398a5dcd4d897c9e9e168e4d3f20338dfc1f748d', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a56a8d0a747cae64db19cde432f1d9d817f36b92', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5cebdc186b91259769b1fab83d79c4b6dba19d8', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f1c98e84f5d6a381046397b237ae37109c4e6ba', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0775e85ee452735ca61d83c8b949a874e51dd68d', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24f50b162095688b9ce5484a048485d54dfce86b', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}]",Shubh,62337564,shubhi.blog@gmail.com,User,,66,,5,19
1032068397,Feat(UF): Submit modal entities directly to server,"This PR changes the current behavior of unified form by submitting newly created entities directly to server. this reduces the duplication of code require for maintaining temporary ids as well as the complexity of redux state. 
My initial thought for late submission (submitting bulk entities) was that it will allow us to easily manipulate the entity attributes and undo the edits but after some discussion with my mentor i realize this might not worth the added complexity.",True,874,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/874,https://github.com/metabrainz/bookbrainz-site/pull/874,closed,569,773,31,34,0,14,0,0,[],2022-08-21 15:25:11+00:00,2022-09-15 11:56:35+00:00,2147484.0,"24 days, 20:31:24","[{'comment_id': 958669295, 'comment_body': ""I know we're Brain**z**, but…? :p"", 'comment_created': datetime.datetime(2022, 8, 30, 16, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 958762207, 'comment_body': ""How does this work when using an existing Series with items in it? Will seriesItems be > 0 already, even if we don't add any work?"", 'comment_created': datetime.datetime(2022, 8, 30, 17, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 958763140, 'comment_body': 'JSDocs comment here would be appreciated', 'comment_created': datetime.datetime(2022, 8, 30, 17, 41, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 958771395, 'comment_body': 'Does that mean that we should remove the `Publisher` and `Authors` sections in the redux state?', 'comment_created': datetime.datetime(2022, 8, 30, 17, 50, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 958776719, 'comment_body': 'Do we still need the `__isNew__` anywhere?\r\nI guess possibly for the front-end so that entities can be displayed in the submit summary section, but is it needed anywhere on the server-side code now that entities are created directly?', 'comment_created': datetime.datetime(2022, 8, 30, 17, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 958779156, 'comment_body': '```suggestion\r\nexport function submitSingleEntity(submissionUrl:string, entityType:EntityTypeString, callback:(newEntity)=>void, initialState = {}):SubmitResult {\r\n```', 'comment_created': datetime.datetime(2022, 8, 30, 17, 59, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 959160721, 'comment_body': ""I don't think there's any harm keeping them, also they help in preview in summary section. though we don't use them in post data since they are already been created and we don't modify them after creation. "", 'comment_created': datetime.datetime(2022, 8, 31, 4, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 959164277, 'comment_body': ""Yeah, needed only for knowing which entity is being created (edition, eg) and which are being edited (works..).\r\nsince entity editor using different routes for both operation, it doesn't need one."", 'comment_created': datetime.datetime(2022, 8, 31, 5, 6, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 959168148, 'comment_body': 'My bad, forgot about adding old series items. though I will filtering series items so only new items remains so if zero that means nothing has been added to series items.', 'comment_created': datetime.datetime(2022, 8, 31, 5, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 963881995, 'comment_body': 'This should probably not be called here, instead passing the promise and letting `sendPromiseResult` resolve the promise safely.\r\n```suggestion\r\n\t\tgetAchievementPromise,\r\n```', 'comment_created': datetime.datetime(2022, 9, 6, 15, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 965676656, 'comment_body': 'But function does return promise that resolves to entity object, right? ', 'comment_created': datetime.datetime(2022, 9, 8, 8, 44, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tr1ten', 'type': 'User'}, {'comment_id': 966012610, 'comment_body': ""Maybe I'm misreading the code, but in short by calling the function here you're executing the promise (without it being in a try-catch block; any error will be uncaught and crash the server).\r\nThe idea with the `handler.sendPromiseResult` helper is that it will take care of `await`-ing the promise in a try-catch block and figure out what to do on success or fail.\r\nAn async function *is* essentially a promise, but does not necessarily *return* a promise. In this case it returns the `processedAchievements` array."", 'comment_created': datetime.datetime(2022, 9, 8, 14, 2, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 966047087, 'comment_body': ""OK, I took a bit of time to rewrite some of the code from promises to async/await, I always get confused when I mix the two styles :)\r\n\r\nYou'll notice I separate the entity processing and achievement processing a bit, and I am passing an async function (which ~= a Promise) to sendPromiseResult rather than executing the function.\r\nSendPromiseResult will take care of `await`-ing the promise for us in a try-catch block.\r\n\r\nHere's what I came up with for the whole function:\r\n\r\n```\r\nexport function handleCreateMultipleEntities(\r\n\treq: PassportRequest,\r\n\tres: $Response\r\n) {\r\n\tconst {orm}: {orm?: any} = req.app.locals;\r\n\tconst editorJSON = req.user;\r\n\tlet currentEntity: {\r\n\t\t__isNew__: boolean | undefined,\r\n\t\taliasSet: {id: number} | null | undefined,\r\n\t\tannotation: {id: number} | null | undefined,\r\n\t\tbbid: string,\r\n\t\tdisambiguation: {id: number} | null | undefined,\r\n\t\tidentifierSet: {id: number} | null | undefined,\r\n\t\ttype: EntityTypeString\r\n\t} | null | undefined;\r\n\r\n\r\n\tconst {body}: {body: Record<string, any>} = req;\r\n\tasync function processEntity(entityKey:string) {\r\n\t\tconst entityForm = body[entityKey];\r\n\t\tconst entityType = _.upperFirst(entityForm.type);\r\n\t\tconst deriveProps = _.pick(entityForm, additionalEntityProps[_.camelCase(entityType)]);\r\n\t\tconst isNew = _.get(entityForm, '__isNew__', true);\r\n\t\tcurrentEntity = null;\r\n\t\tif (!isNew) {\r\n\t\t\tcurrentEntity = await orm.func.entity.getEntity(orm, entityType, entityForm.id, getEntityRelations(entityType as EntityTypeString));\r\n\t\t\tif (!currentEntity) {\r\n\t\t\t\tthrow new FormSubmissionError('Entity with given id not found');\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst {bookshelf} = orm;\r\n\t\tconst entityJSON = await bookshelf.transaction((transacting) =>\r\n\t\t\tprocessSingleEntity(entityForm, isNew ? null : currentEntity, null, entityType, orm, editorJSON, deriveProps, false, transacting));\r\n\r\n\t\treturn entityJSON;\r\n\t}\r\n\t// create all entities\r\n\tasync function processAllEntities() {\r\n\t\t// For each entity in the request body\r\n\t\tconst processedEntities = await Object.keys(body).reduce((promise, entityKey) =>\r\n\t\t\tpromise\r\n\t\t\t\t// submit the entity\r\n\t\t\t\t.then(() => processEntity(entityKey))\r\n\t\t\t\t// process potential achievements for this edit\r\n\t\t\t\t.then(entityJSON => processAchievement(orm, editorJSON.id, entityJSON))\r\n\t\t// Empty promise for initial value sent to .reduce\r\n\t\t, Promise.resolve());\r\n\t\treturn processedEntities;\r\n\t}\r\n\treturn handler.sendPromiseResult(\r\n\t\tres,\r\n\t\tprocessAllEntities,\r\n\t\t_bulkIndexEntities\r\n\t);\r\n}\r\n```\r\n\r\nFull disclaimer, I haven't tried to run the code, so I'll leave that for you to try, and I'll hop on to debugging that failing test ;)"", 'comment_created': datetime.datetime(2022, 9, 8, 14, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 966176028, 'comment_body': ""We discussed on IRC, I was totally wrong and I apparently can't read code :p\r\nsendPromiseResult awaits the promise but does not execute it"", 'comment_created': datetime.datetime(2022, 9, 8, 16, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '4cf66d73d37032067c539567a7f546cc4f5c7903', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5d188c90d39c897342041c823365fe8d53d0e16', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8998baa3165f8ac32a519fa266e0c9672d8b5350', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '981ca82667529a2f39af72175252eac2fdea52ad', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd89346a87b38e16801d135a88ca76aad37d664b', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1667053f9f123df3b28d57bf62a2fe1995a1c36', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd1f263ff3ffe869e65ff166efba04601b7d7a7d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a83d96cd9a059acdd88c9b41c6a572d9ffe41576', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31dc57bfb11f727885c93468114f73305e5ad06d', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcea0eda42f1d9da8082b9600eb5fecfdea7922b', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3e482f0a8cafbc4ce79143545130e8477d451ad', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f421af3f9ca7c9a8d1986957216d45aa9d2883f8', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa7360a53da830e86ec56488e93cdcff52c839ca', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '161106c627f20604c123d1dc8a3cfe27da95d341', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52c75eba3d81d22e604835d101d121f163c145e4', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19f20b5d6449201924881e6bda6272ee75062050', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eeb21f5462708b70f122492c2063bad7b0566a05', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6bbf02c64a7c0c0f1fb2c409b59e71cf124c1b', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c10322f3f35df2593864f7c9b132a2f8ec128995', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffc0bac9a0974362b40f9c2c4eed1decfd44f0e4', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8e99d611efa2de74b392676ea3289886861a421', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '480620acd1926b8558ed2814af9895b79440af0b', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec635bd449d6162e3699b747c47a7c1e00b9937f', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74620997bdb64966f0397da4051ca5255770dfad', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97d03315739a40ac030d3b9401261697c6838804', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df2bc4aa63285c4978a43b1c4305dca64f188e57', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56a620c0927b25b1822c5f2c6a956084e07e11cb', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9174023e79eba0e86c14952dc29ab597656bafe3', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90e0da0a115a883b2b290e2ec0761ae15c31e756', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa909242fd58e28037b31b21eea8ea9cab7876b5', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbf1abad338b1d706fb56a03954f96233c225ce4', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf657cb219b53406e5414b2ca22e4d392fe79659', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7534f661facb557f4f3fb30b31c7a1219cefe94', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f038b71343e792a4163e12a0abe60de16832e1e', 'committer_username': 'tr1ten', 'committer_name': 'Shubh', 'committer_email': 'shubhi.blog@gmail.com', 'commit_date': datetime.datetime(2020, 3, 18, 12, 11, 44, tzinfo=datetime.timezone.utc)}]",Shubh,62337564,shubhi.blog@gmail.com,User,,66,,5,19

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
28521896,bookbrainz-site,metabrainz/bookbrainz-site,JavaScript,278,186,15,94,6138,20,21,20,"[{'id': 1130244066, 'number': 902, 'closed': datetime.datetime(2023, 1, 13, 16, 52, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 21, 15, 41, 43, tzinfo=datetime.timezone.utc), 'time_taken': 4583429.0, 'time_delta': '53 days, 1:10:29', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 1091147006, 'number': 894, 'closed': datetime.datetime(2022, 11, 8, 15, 30, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 18, 17, 53, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1805796.0, 'time_delta': '20 days, 21:36:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1081881064, 'number': 887, 'closed': None, 'created': datetime.datetime(2022, 10, 10, 11, 7, 14, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 938, 'deletions': 24, 'state': 'open'}, {'id': 1067554552, 'number': 885, 'closed': datetime.datetime(2023, 7, 20, 15, 43, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 26, 18, 41, 26, tzinfo=datetime.timezone.utc), 'time_taken': 25650102.0, 'time_delta': '296 days, 21:01:42', 'additions': 35, 'deletions': 2, 'state': 'closed'}, {'id': 1066343419, 'number': 884, 'closed': datetime.datetime(2023, 7, 20, 15, 54, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 25, 17, 7, 1, tzinfo=datetime.timezone.utc), 'time_taken': 25742858.0, 'time_delta': '297 days, 22:47:38', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1057753968, 'number': 881, 'closed': datetime.datetime(2022, 10, 17, 14, 7, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 15, 18, 38, 49, tzinfo=datetime.timezone.utc), 'time_taken': 2748507.0, 'time_delta': '31 days, 19:28:27', 'additions': 23, 'deletions': 13, 'state': 'closed'}, {'id': 1045421018, 'number': 876, 'closed': datetime.datetime(2022, 9, 12, 14, 34, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 3, 7, 22, 44, tzinfo=datetime.timezone.utc), 'time_taken': 803528.0, 'time_delta': '9 days, 7:12:08', 'additions': 197, 'deletions': 30, 'state': 'closed'}, {'id': 1032068397, 'number': 874, 'closed': datetime.datetime(2022, 9, 15, 11, 56, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 21, 15, 25, 11, tzinfo=datetime.timezone.utc), 'time_taken': 2147484.0, 'time_delta': '24 days, 20:31:24', 'additions': 569, 'deletions': 773, 'state': 'closed'}, {'id': 1031835330, 'number': 873, 'closed': datetime.datetime(2022, 9, 8, 17, 24, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 20, 17, 18, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1641962.0, 'time_delta': '19 days, 0:06:02', 'additions': 25, 'deletions': 13, 'state': 'closed'}, {'id': 1031021871, 'number': 872, 'closed': datetime.datetime(2022, 8, 31, 11, 34, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 19, 10, 52, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1039346.0, 'time_delta': '12 days, 0:42:26', 'additions': 82, 'deletions': 125, 'state': 'closed'}, {'id': 1024136380, 'number': 871, 'closed': datetime.datetime(2023, 7, 19, 15, 8, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 17, 34, 23, tzinfo=datetime.timezone.utc), 'time_taken': 29540020.0, 'time_delta': '341 days, 21:33:40', 'additions': 212, 'deletions': 51, 'state': 'closed'}, {'id': 1019539798, 'number': 869, 'closed': datetime.datetime(2022, 9, 1, 17, 16, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 7, 12, 36, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2176792.0, 'time_delta': '25 days, 4:39:52', 'additions': 15, 'deletions': 44, 'state': 'closed'}, {'id': 1008123528, 'number': 867, 'closed': datetime.datetime(2022, 8, 5, 11, 57, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 26, 6, 53, 58, tzinfo=datetime.timezone.utc), 'time_taken': 882222.0, 'time_delta': '10 days, 5:03:42', 'additions': 15, 'deletions': 9, 'state': 'closed'}, {'id': 991832098, 'number': 860, 'closed': datetime.datetime(2022, 7, 11, 10, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 8, 16, 7, 9, tzinfo=datetime.timezone.utc), 'time_taken': 238671.0, 'time_delta': '2 days, 18:17:51', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 989669570, 'number': 858, 'closed': datetime.datetime(2022, 7, 11, 18, 1, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 4, 49, 48, tzinfo=datetime.timezone.utc), 'time_taken': 393126.0, 'time_delta': '4 days, 13:12:06', 'additions': 280, 'deletions': 72, 'state': 'closed'}, {'id': 979955717, 'number': 852, 'closed': datetime.datetime(2022, 7, 5, 16, 24, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 11, 47, 6, tzinfo=datetime.timezone.utc), 'time_taken': 707833.0, 'time_delta': '8 days, 4:37:13', 'additions': 40, 'deletions': 77, 'state': 'closed'}, {'id': 977344371, 'number': 851, 'closed': datetime.datetime(2022, 6, 27, 13, 0, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 23, 15, 45, 22, tzinfo=datetime.timezone.utc), 'time_taken': 335716.0, 'time_delta': '3 days, 21:15:16', 'additions': 7, 'deletions': 8, 'state': 'closed'}, {'id': 958161475, 'number': 850, 'closed': datetime.datetime(2022, 8, 18, 16, 55, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 4, 12, 22, 6, tzinfo=datetime.timezone.utc), 'time_taken': 6496409.0, 'time_delta': '75 days, 4:33:29', 'additions': 5366, 'deletions': 365, 'state': 'closed'}, {'id': 951718606, 'number': 849, 'closed': datetime.datetime(2022, 6, 21, 16, 8, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 31, 9, 19, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1838964.0, 'time_delta': '21 days, 6:49:24', 'additions': 24, 'deletions': 11, 'state': 'closed'}, {'id': 948949149, 'number': 848, 'closed': datetime.datetime(2022, 6, 21, 16, 9, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 27, 5, 22, 32, tzinfo=datetime.timezone.utc), 'time_taken': 2198804.0, 'time_delta': '25 days, 10:46:44', 'additions': 55, 'deletions': 23, 'state': 'closed'}, {'id': 948260978, 'number': 847, 'closed': datetime.datetime(2022, 6, 27, 18, 22, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 13, 17, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2783054.0, 'time_delta': '32 days, 5:04:14', 'additions': 773, 'deletions': 49, 'state': 'closed'}, {'id': 944771845, 'number': 845, 'closed': datetime.datetime(2022, 5, 31, 13, 4, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 23, 18, 19, 47, tzinfo=datetime.timezone.utc), 'time_taken': 672284.0, 'time_delta': '7 days, 18:44:44', 'additions': 13, 'deletions': 5, 'state': 'closed'}, {'id': 944228971, 'number': 844, 'closed': datetime.datetime(2022, 6, 21, 17, 57, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 23, 10, 15, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2533294.0, 'time_delta': '29 days, 7:41:34', 'additions': 138, 'deletions': 13, 'state': 'closed'}, {'id': 943427400, 'number': 843, 'closed': None, 'created': datetime.datetime(2022, 5, 21, 12, 38, 35, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 159, 'deletions': 2, 'state': 'open'}, {'id': 926463187, 'number': 842, 'closed': None, 'created': datetime.datetime(2022, 5, 3, 11, 36, 29, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 71, 'deletions': 5, 'state': 'open'}, {'id': 901043277, 'number': 833, 'closed': datetime.datetime(2022, 4, 6, 15, 41, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 6, 6, 7, 44, tzinfo=datetime.timezone.utc), 'time_taken': 34413.0, 'time_delta': '9:33:33', 'additions': 20, 'deletions': 1, 'state': 'closed'}, {'id': 900138171, 'number': 832, 'closed': datetime.datetime(2022, 4, 6, 15, 39, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 5, 12, 10, 39, tzinfo=datetime.timezone.utc), 'time_taken': 98958.0, 'time_delta': '1 day, 3:29:18', 'additions': 69, 'deletions': 46, 'state': 'closed'}, {'id': 887383124, 'number': 819, 'closed': datetime.datetime(2022, 6, 21, 17, 56, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 23, 15, 47, 27, tzinfo=datetime.timezone.utc), 'time_taken': 7783746.0, 'time_delta': '90 days, 2:09:06', 'additions': 19, 'deletions': 6, 'state': 'closed'}, {'id': 882077688, 'number': 815, 'closed': datetime.datetime(2022, 3, 23, 16, 23, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 17, 4, 52, 17, tzinfo=datetime.timezone.utc), 'time_taken': 559861.0, 'time_delta': '6 days, 11:31:01', 'additions': 45, 'deletions': 44, 'state': 'closed'}, {'id': 879849755, 'number': 807, 'closed': datetime.datetime(2022, 3, 15, 18, 50, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 15, 7, 36, 24, tzinfo=datetime.timezone.utc), 'time_taken': 40431.0, 'time_delta': '11:13:51', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 878329460, 'number': 804, 'closed': None, 'created': datetime.datetime(2022, 3, 13, 7, 11, 4, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 450, 'deletions': 11, 'state': 'open'}, {'id': 876502870, 'number': 802, 'closed': datetime.datetime(2022, 3, 15, 18, 37, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 10, 14, 54, 41, tzinfo=datetime.timezone.utc), 'time_taken': 445352.0, 'time_delta': '5 days, 3:42:32', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 870871842, 'number': 790, 'closed': datetime.datetime(2022, 5, 12, 15, 3, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 3, 18, 2, 36, tzinfo=datetime.timezone.utc), 'time_taken': 6037227.0, 'time_delta': '69 days, 21:00:27', 'additions': 570, 'deletions': 445, 'state': 'closed'}, {'id': 863321873, 'number': 785, 'closed': datetime.datetime(2022, 3, 15, 18, 47, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 25, 10, 50, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1583800.0, 'time_delta': '18 days, 7:56:40', 'additions': 112, 'deletions': 10, 'state': 'closed'}, {'id': 845306934, 'number': 782, 'closed': datetime.datetime(2022, 2, 10, 16, 18, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 13, 49, 45, tzinfo=datetime.timezone.utc), 'time_taken': 8907.0, 'time_delta': '2:28:27', 'additions': 8, 'deletions': 9, 'state': 'closed'}, {'id': 835320703, 'number': 771, 'closed': datetime.datetime(2022, 3, 14, 17, 19, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 30, 9, 31, 20, tzinfo=datetime.timezone.utc), 'time_taken': 3743283.0, 'time_delta': '43 days, 7:48:03', 'additions': 791, 'deletions': 12, 'state': 'closed'}, {'id': 819612569, 'number': 757, 'closed': datetime.datetime(2022, 1, 25, 13, 8, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 12, 11, 38, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1128623.0, 'time_delta': '13 days, 1:30:23', 'additions': 19, 'deletions': 4, 'state': 'closed'}, {'id': 811787698, 'number': 752, 'closed': datetime.datetime(2022, 1, 24, 16, 10, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 30, 5, 20, 25, tzinfo=datetime.timezone.utc), 'time_taken': 2199007.0, 'time_delta': '25 days, 10:50:07', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 806021720, 'number': 743, 'closed': datetime.datetime(2022, 3, 15, 18, 29, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 19, 8, 52, 12, tzinfo=datetime.timezone.utc), 'time_taken': 7465020.0, 'time_delta': '86 days, 9:37:00', 'additions': 54, 'deletions': 7, 'state': 'closed'}, {'id': 804256128, 'number': 741, 'closed': datetime.datetime(2022, 3, 2, 11, 9, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 16, 9, 43, 33, tzinfo=datetime.timezone.utc), 'time_taken': 6571569.0, 'time_delta': '76 days, 1:26:09', 'additions': 67, 'deletions': 19, 'state': 'closed'}, {'id': 799583188, 'number': 740, 'closed': datetime.datetime(2023, 9, 22, 14, 48, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 10, 5, 56, 35, tzinfo=datetime.timezone.utc), 'time_taken': 56278288.0, 'time_delta': '651 days, 8:51:28', 'additions': 59, 'deletions': 10, 'state': 'closed'}, {'id': 795304483, 'number': 734, 'closed': datetime.datetime(2021, 12, 21, 15, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 5, 14, 17, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1387325.0, 'time_delta': '16 days, 1:22:05', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 794474179, 'number': 733, 'closed': datetime.datetime(2021, 12, 21, 15, 56, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 3, 10, 43, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1573973.0, 'time_delta': '18 days, 5:12:53', 'additions': 19, 'deletions': 10, 'state': 'closed'}, {'id': 793350370, 'number': 731, 'closed': datetime.datetime(2022, 1, 25, 11, 56, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 2, 5, 32, 22, tzinfo=datetime.timezone.utc), 'time_taken': 4688668.0, 'time_delta': '54 days, 6:24:28', 'additions': 20, 'deletions': 3, 'state': 'closed'}, {'id': 791619587, 'number': 722, 'closed': datetime.datetime(2022, 1, 25, 11, 55, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 30, 12, 2, 32, tzinfo=datetime.timezone.utc), 'time_taken': 4837954.0, 'time_delta': '55 days, 23:52:34', 'additions': 146, 'deletions': 89, 'state': 'closed'}, {'id': 789952343, 'number': 720, 'closed': datetime.datetime(2021, 12, 1, 10, 55, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 27, 15, 46, 58, tzinfo=datetime.timezone.utc), 'time_taken': 328088.0, 'time_delta': '3 days, 19:08:08', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 789897442, 'number': 719, 'closed': datetime.datetime(2021, 12, 1, 10, 9, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 27, 8, 40, tzinfo=datetime.timezone.utc), 'time_taken': 350963.0, 'time_delta': '4 days, 1:29:23', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 789754270, 'number': 718, 'closed': datetime.datetime(2021, 12, 1, 11, 11, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 26, 18, 51, 1, tzinfo=datetime.timezone.utc), 'time_taken': 404458.0, 'time_delta': '4 days, 16:20:58', 'additions': 38, 'deletions': 13, 'state': 'closed'}]"
