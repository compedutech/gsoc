pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
956010973,Add Render Blocking Status to PerformanceResourceTiming,"Introducing a render blocking status field. (https://github.com/w3c/resource-timing/issues/262)
Fetch changes : https://github.com/whatwg/fetch/pull/1449
~~HTML changes: https://github.com/whatwg/html/pull/7979~~

Explainer : https://github.com/abinpaul1/resource-timing/blob/render-blocking-status-explainer/Explainer/Render_Blocking_Status.md


<!--
    This comment and the below content is programmatically generated.
    You may add a comma-separated list of anchors you'd like a
    direct link to below (e.g. #idl-serializers, #idl-sequence):

    Don't remove this comment or modify anything below this line.
    If you don't want a preview generated for this pull request,
    just replace the whole of this comment's content by ""no preview""
    and remove what's below.
-->
***
<a href=""https://pr-preview.s3.amazonaws.com/abinpaul1/resource-timing/pull/327.html"" title=""Last updated on Aug 10, 2022, 6:11 PM UTC (41acb22)"">Preview</a> | <a href=""https://pr-preview.s3.amazonaws.com/w3c/resource-timing/327/e71c2ab...abinpaul1:41acb22.html"" title=""Last updated on Aug 10, 2022, 6:11 PM UTC (41acb22)"">Diff</a>",True,327,https://api.github.com/repos/w3c/resource-timing/pulls/327,https://github.com/w3c/resource-timing/pull/327,closed,41,0,1,5,11,9,0,0,[],2022-06-02 14:57:27+00:00,2022-08-31 09:31:19+00:00,7756432.0,"89 days, 18:33:52","[{'comment_id': 942530462, 'comment_body': ""So this is rendered as `The renderBlockingStatus getter steps are to return the render-blocking status for this.`\r\n\r\nShouldn't be something like `The renderBlockingStatus getter steps are to return the render-blocking status for this's timing info's render-blocking and the relevant global object for this.`?"", 'comment_created': datetime.datetime(2022, 8, 10, 14, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sefeng211', 'type': 'User'}, {'comment_id': 942553969, 'comment_body': ""The enum's value is determined [here](https://pr-preview.s3.amazonaws.com/abinpaul1/resource-timing/pull/327.html#sec-render-blocking-status-types) using `timing info's render-blocking` and I thought `getter` would have to just return that computed enum value.\r\n\r\nAre we drafting it as `return the render-blocking status for this's timing info's render-blocking and the relevant global object for this` to signify that the `timing info's render-blocking` is used to set the value of enum that is returned?"", 'comment_created': datetime.datetime(2022, 8, 10, 14, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 942620477, 'comment_body': 'I see, I missed that enum part. \r\n\r\nI am not too sure...Just because I expect the enum should just define the meaning of each value, not involves in effectively getting the value from `timing info`. \r\n\r\nMaybe I am just picky here and causing unnecessary troubles.\r\n\r\n@noamr can confirm..', 'comment_created': datetime.datetime(2022, 8, 10, 15, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sefeng211', 'type': 'User'}, {'comment_id': 942648923, 'comment_body': ""Yes it's odd to define a getter in the enum.\r\nThe enum should describe the meaning, and the getter steps should be to get the enum value based on the boolean value as @sefeng211 said."", 'comment_created': datetime.datetime(2022, 8, 10, 16, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'noamr', 'type': 'User'}, {'comment_id': 942700746, 'comment_body': ""Cool! I've tried to update it to do that. Thanks!"", 'comment_created': datetime.datetime(2022, 8, 10, 17, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 942724594, 'comment_body': '; Otherwise', 'comment_created': datetime.datetime(2022, 8, 10, 17, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'noamr', 'type': 'User'}, {'comment_id': 942724835, 'comment_body': ""I don't understand this line, how is the global object used here?"", 'comment_created': datetime.datetime(2022, 8, 10, 17, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'noamr', 'type': 'User'}, {'comment_id': 942755682, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 10, 18, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 942757094, 'comment_body': ""I guess it's not used. Apologies for the confusion. Removed."", 'comment_created': datetime.datetime(2022, 8, 10, 18, 13, 58, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}]","[{'commit_sha': '9b99039155261f80d7532d180ad4c039f6e2a32a', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4657f205ccdb9585e21f47a1d634b8dc32ad6c9', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bc36c565a852c0feb11180aa3ed2ecbc7e7c734', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2d7aecaba156e55c5cfd4e28ec9d368f6a7d5da', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41acb220e3f1005319672c9bfb08e6371c588e1f', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}]",Abin K Paul,36098125,,User,,30,,135,43
956015387,Add render-blocking boolean to fetch timing info,"<!--
Thank you for contributing to the Fetch Standard! Please describe the change you are making and complete the checklist below if your change is not editorial.
-->
These changes are to support addition of a render blocking status field to Perfomance resource timing. Further details are available at https://github.com/w3c/resource-timing/pull/327

~~For HTML side changes see https://github.com/whatwg/html/pull/7979~~

- [x] At least two implementers are interested (and none opposed):
   * Chromium : https://chromestatus.com/feature/5166965277589504
   * Firefox : https://github.com/mozilla/standards-positions/issues/662#issuecomment-1171568555
- [x] [Tests](https://github.com/web-platform-tests/wpt) are written and can be reviewed and commented upon at:
   * https://chromium-review.googlesource.com/c/chromium/src/+/3709521
- [x] [Implementation bugs](https://github.com/whatwg/meta/blob/main/MAINTAINERS.md#handling-pull-requests) are filed:
   * Chrome: https://bugs.chromium.org/p/chromium/issues/detail?id=1337256
   * Firefox: https://bugzilla.mozilla.org/show_bug.cgi?id=1799493
   * Safari: https://bugs.webkit.org/show_bug.cgi?id=247572
   * Deno (not for CORS changes): …

(See [WHATWG Working Mode: Changes](https://whatwg.org/working-mode#changes) for more details.)


<!--
    This comment and the below content is programmatically generated.
    You may add a comma-separated list of anchors you'd like a
    direct link to below (e.g. #idl-serializers, #idl-sequence):

    Don't remove this comment or modify anything below this line.
    If you don't want a preview generated for this pull request,
    just replace the whole of this comment's content by ""no preview""
    and remove what's below.
-->
***
<a href=""https://whatpr.org/fetch/1449.html"" title=""Last updated on Jul 28, 2022, 3:12 PM UTC (ff45bb8)"">Preview</a> | <a href=""https://whatpr.org/fetch/1449/4c93f89...ff45bb8.html"" title=""Last updated on Jul 28, 2022, 3:12 PM UTC (ff45bb8)"">Diff</a>",True,1449,https://api.github.com/repos/whatwg/fetch/pulls/1449,https://github.com/whatwg/fetch/pull/1449,closed,5,1,1,2,4,1,0,0,[],2022-06-02 15:01:25+00:00,2022-07-29 03:36:23+00:00,4883698.0,"56 days, 12:34:58","[{'comment_id': 932347740, 'comment_body': '```suggestion\r\n <a for=/>coarsened shared current time</a> given <var>crossOriginIsolatedCapability</var>, and\r\n <a for=""fetch timing info"">render-blocking</a> is set to <var>request</var>\'s\r\n <a for=request>render-blocking</a>.\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 15, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}]","[{'commit_sha': '23030b87835fcc943038b115beb1974c1265aa70', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff45bb8ded158f65c84a5d68e08800226159c354', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}]",Abin K Paul,36098125,,User,,30,,135,43
1021556680,Documenting renderBlockingStatus in Resource Timing,"<!-- 👀 Thanks for opening a PR! Read comments like this one to get your PR merged faster. -->
#### Summary

New field `renderBlockingStatus` in PerfomanceResourceTiming to indicate the render-blocking nature of a resource. The attribute takes away the burden of having to rely on complex heurestics to determine which resources were actually render-blocking and provides a direct signal from the browser.


Explainer : https://github.com/abinpaul1/resource-timing/blob/render-blocking-status-explainer/Explainer/Render_Blocking_Status.md

Spec changes : https://github.com/w3c/resource-timing/pull/327

#### Motivation

Adding documentation for new attribute`renderBlockingStatus` introduced to Resource Timing. Adding sample code to demonstrate usage of the attribute.

#### Supporting details
<!-- 🔗 Link to supporting information, such as bug trackers, source control, release notes, and vendor docs. -->

CR Bug : https://bugs.chromium.org/p/chromium/issues/detail?id=1337256
Chrome status entry : https://chromestatus.com/feature/5166965277589504

#### Related issues
<!-- 🔨 If applicable, use ""Fixes #XYZ"" -->

#### Metadata
<!-- ✅ Check a box if applicable, like this: [x]

This PR…
-->
- [x] Adds a new document
- [ ] Rewrites (or significantly expands) a document
- [ ] Fixes a typo, bug, or other error

<!-- 👷‍♀️ After submitting, review the results of the ""Checks"" tab! -->
",True,19325,https://api.github.com/repos/mdn/content/pulls/19325,https://github.com/mdn/content/pull/19325,closed,53,0,2,17,17,9,1,1,[{'name': 'Content:WebAPI'}],2022-08-09 13:56:13+00:00,2022-11-02 10:43:37+00:00,7332444.0,"84 days, 20:47:24","[{'comment_id': 978569771, 'comment_body': ""Is this supposed to be `ReadOnlyInline` ?\r\n\r\n```suggestion\r\n- {{domxref('PerformanceResourceTiming.renderBlockingStatus')}} {{ReadOnlyInline}}\r\n```"", 'comment_created': datetime.datetime(2022, 9, 23, 12, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'bsmth', 'type': 'User'}, {'comment_id': 978570392, 'comment_body': 'This will need a newline before the code block', 'comment_created': datetime.datetime(2022, 9, 23, 12, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'bsmth', 'type': 'User'}, {'comment_id': 978749301, 'comment_body': 'Added', 'comment_created': datetime.datetime(2022, 9, 23, 14, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 978749945, 'comment_body': 'Yes. Updated. Thanks', 'comment_created': datetime.datetime(2022, 9, 23, 14, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 997091172, 'comment_body': ""Could we give one or two more sentences on the context, what's being blocked for rendering and why should someone use this?"", 'comment_created': datetime.datetime(2022, 10, 17, 13, 53, 8, tzinfo=datetime.timezone.utc), 'commenter': 'bsmth', 'type': 'User'}, {'comment_id': 997097939, 'comment_body': 'The style guide prefers `forEach()` or `for ... of` -> https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Writing_style_guide/Code_style_guide/JavaScript#loops_and_conditional_statements', 'comment_created': datetime.datetime(2022, 10, 17, 13, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'bsmth', 'type': 'User'}, {'comment_id': 998229240, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 10, 18, 13, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 998230078, 'comment_body': ""I've added a couple. Please have a look"", 'comment_created': datetime.datetime(2022, 10, 18, 13, 31, 46, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 998362277, 'comment_body': ""Thank you, I'll take a look shortly. By the way: how is the feature support at the moment? I would also like to try out the example you provided to test"", 'comment_created': datetime.datetime(2022, 10, 18, 15, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bsmth', 'type': 'User'}]","[{'commit_sha': '3259619d53c14029d6e1172256825f6d9b74bcf0', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2784041606122d297c1ec3a8ac95b9e5b937b07', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '325cdd087b56ea4f0272002a7c6296a8414a8a96', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf2790e5a3e8d88326793116b99da178bbd84bd8', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '851c5060f6b3f6f984c9ef835ebebfc8e72ace1b', 'committer_username': 'bsmth', 'committer_name': 'Brian Thomas Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 25, 15, 22, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a943fa4e90b64930681ef1ec7376c88dea995045', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac79f03bc5458c9f16d93c3fafd0979136736105', 'committer_username': 'bsmth', 'committer_name': 'Brian Thomas Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 25, 15, 22, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e06d53b1be49b2d01c8c3b92f9a759e5a4ce0ccd', 'committer_username': 'bsmth', 'committer_name': 'Brian Thomas Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 25, 15, 22, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2062dcfa9914eb6de097f31ce29aa54cbb2d1283', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c40939b3d040781ab69fe8e98b308806619ed234', 'committer_username': 'bsmth', 'committer_name': 'Brian Thomas Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 25, 15, 22, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46b5db832b9a5a71c142127e6c5a668d96520294', 'committer_username': 'bsmth', 'committer_name': 'Brian Thomas Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 25, 15, 22, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7cd6f05515d87651606b9db2a21de2e2dfc61a2', 'committer_username': 'bsmth', 'committer_name': 'Brian Thomas Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 25, 15, 22, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0209024ed1453a81a12e2ca5b7acbb720d578f36', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '108f030943fb738a28a4caca0deeb6a7dad665f6', 'committer_username': 'bsmth', 'committer_name': 'Brian Thomas Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 25, 15, 22, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7471f2df8a92426024f430a3fcdb33f06e40f18e', 'committer_username': 'bsmth', 'committer_name': 'Brian Thomas Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 25, 15, 22, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82527215aced8eb7a1116b4634175d0f71ed3d2a', 'committer_username': 'bsmth', 'committer_name': 'Brian Thomas Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 25, 15, 22, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '205c750d03f1ccc8e5d2a9a79adae1752365e398', 'committer_username': 'bsmth', 'committer_name': 'Brian Thomas Smith', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 25, 15, 22, 57, tzinfo=datetime.timezone.utc)}]",Abin K Paul,36098125,,User,,30,,135,43
992247754,Add response status code to PerfomanceResourceTiming,"Introducing HTTP response status code. (https://github.com/w3c/resource-timing/issues/90)
Fetch changes : https://github.com/whatwg/fetch/pull/1468

Explainer : https://github.com/abinpaul1/resource-timing/blob/explainer-resource-response-status/Explainers/Response_Status_Code.md


<!--
    This comment and the below content is programmatically generated.
    You may add a comma-separated list of anchors you'd like a
    direct link to below (e.g. #idl-serializers, #idl-sequence):

    Don't remove this comment or modify anything below this line.
    If you don't want a preview generated for this pull request,
    just replace the whole of this comment's content by ""no preview""
    and remove what's below.
-->
***
<a href=""https://pr-preview.s3.amazonaws.com/abinpaul1/resource-timing/pull/335.html"" title=""Last updated on Oct 24, 2022, 4:46 PM UTC (053cf41)"">Preview</a> | <a href=""https://pr-preview.s3.amazonaws.com/w3c/resource-timing/335/958ccdd...abinpaul1:053cf41.html"" title=""Last updated on Oct 24, 2022, 4:46 PM UTC (053cf41)"">Diff</a>",True,335,https://api.github.com/repos/w3c/resource-timing/pulls/335,https://github.com/w3c/resource-timing/pull/335,closed,27,6,1,6,2,8,0,0,[],2022-07-09 14:20:44+00:00,2022-10-27 13:18:50+00:00,9500286.0,"109 days, 22:58:06","[{'comment_id': 930328451, 'comment_body': 'I think we need to enforce this in the processing model as well. (e.g. in the getter above)', 'comment_created': datetime.datetime(2022, 7, 26, 19, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 932980182, 'comment_body': ""Do we still need to enforce this in the `getter`, since https://github.com/whatwg/fetch/pull/1468#discussion_r931266882 notes it's already enforced when we recieve it from fetch?"", 'comment_created': datetime.datetime(2022, 7, 29, 8, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 934438236, 'comment_body': 'That comment makes sense! Can you add a note indicating that info next to the getter? Thanks! :)', 'comment_created': datetime.datetime(2022, 8, 1, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 946793838, 'comment_body': 'Added', 'comment_created': datetime.datetime(2022, 8, 16, 13, 41, 13, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 1003426580, 'comment_body': 'Is that also true for same origin no-cors responses?', 'comment_created': datetime.datetime(2022, 10, 24, 15, 2, 37, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 1003427911, 'comment_body': 'Do we still need this, given the Fetch PR?', 'comment_created': datetime.datetime(2022, 10, 24, 15, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 1003538987, 'comment_body': ""Don't think so...removed it."", 'comment_created': datetime.datetime(2022, 10, 24, 16, 48, 32, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 1003540394, 'comment_body': ""Its only 0 if it's cross origin no-cors....updated it. Thanks!!"", 'comment_created': datetime.datetime(2022, 10, 24, 16, 50, 9, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}]","[{'commit_sha': '284faf4b71afa967adb946aefcae56c1e1278572', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a08b0c9e975666936e18c21d8d9f58523022129e', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32ccbbf979e20331a76879b4cbbdc0f2f0708f0c', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73299e33cba75df2d5e2c075c6174f6798feedab', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fce27ea143f2f610fc621add7ded0c03dcee07d', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '053cf4145a80615379eedbac768125dbc2196a41', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}]",Abin K Paul,36098125,,User,,30,,135,43
992247833,Pass in response status to mark resource timing,"These changes are to support addition of http response status code to Perfomance resource timing. Further details are available at https://github.com/w3c/resource-timing/pull/335

- [x] At least two implementers are interested (and none opposed):
   * Chromium : https://chromestatus.com/feature/5163838794629120
   * Firefox : https://github.com/mozilla/standards-positions/issues/665
- [x] [Tests](https://github.com/web-platform-tests/wpt) are written and can be reviewed and commented upon at:
   * https://chromium-review.googlesource.com/c/chromium/src/+/3754923
   * https://chromium-review.googlesource.com/c/chromium/src/+/3958184
- [x] [Implementation bugs](https://github.com/whatwg/meta/blob/main/MAINTAINERS.md#handling-pull-requests) are filed:
   * Chrome: https://bugs.chromium.org/p/chromium/issues/detail?id=1343293
   * Firefox: https://bugzilla.mozilla.org/show_bug.cgi?id=1796785
   * Safari: https://bugs.webkit.org/show_bug.cgi?id=246857
   * Deno (not for CORS changes): …

(See [WHATWG Working Mode: Changes](https://whatwg.org/working-mode#changes) for more details.)


<!--
    This comment and the below content is programmatically generated.
    You may add a comma-separated list of anchors you'd like a
    direct link to below (e.g. #idl-serializers, #idl-sequence):

    Don't remove this comment or modify anything below this line.
    If you don't want a preview generated for this pull request,
    just replace the whole of this comment's content by ""no preview""
    and remove what's below.
-->
***
<a href=""https://whatpr.org/fetch/1468.html"" title=""Last updated on Oct 21, 2022, 4:24 PM UTC (08d1251)"">Preview</a> | <a href=""https://whatpr.org/fetch/1468/1fbc40c...08d1251.html"" title=""Last updated on Oct 21, 2022, 4:24 PM UTC (08d1251)"">Diff</a>",True,1468,https://api.github.com/repos/whatwg/fetch/pulls/1468,https://github.com/whatwg/fetch/pull/1468,closed,13,2,1,5,10,25,0,0,[],2022-07-09 14:21:12+00:00,2022-10-22 07:08:36+00:00,9046044.0,"104 days, 16:47:24","[{'comment_id': 917650216, 'comment_body': ""I may be wrong, but I think it'd be better if in [HTTP network fetch](https://fetch.spec.whatwg.org/#http-network-fetch), in the step 9.5.4, the setting of the response's status was more explicit *and* you would also set the bodyInfo response status there. At the same time, maybe there are other places that modify the response status that I missed. "", 'comment_created': datetime.datetime(2022, 7, 11, 8, 4, 9, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 917851826, 'comment_body': ""> At the same time, maybe there are other places that modify the response status that I missed.\r\n\r\nI couldn't find any other place where this status gets modified, so I've updated such that bodyInfo response status gets set at the step you mentioned."", 'comment_created': datetime.datetime(2022, 7, 11, 12, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 917879190, 'comment_body': ""@annevk - Would it make sense to also explicitly set the response's status to |status| here? (maybe as a separate PR)"", 'comment_created': datetime.datetime(2022, 7, 11, 12, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 931108417, 'comment_body': ""This is not needed. You have [response's status](https://fetch.spec.whatwg.org/#concept-response-status) when you set the `report timing steps` in [fetch response handover](https://fetch.spec.whatwg.org/#fetch-finale). I would add it as another parameter to `Mark resource timing`.\r\n\r\nAlso, as we talked on the Chromium CL, I don't think we should automatically make this TAO-protected rather than CORS-protected. It's not exactly timing information.\r\n "", 'comment_created': datetime.datetime(2022, 7, 27, 14, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'noamr', 'type': 'User'}, {'comment_id': 931189506, 'comment_body': ""Okay, just to be sure I understand. We would pass in the status as a new parameter to [Mark resource time](https://w3c.github.io/resource-timing/#dfn-mark-resource-timing) which would in turn pass it to [Setup the resource timing entry](https://w3c.github.io/resource-timing/#dfn-setup-the-resource-timing-entry) where we would use it to set the entry's `responseStatus`.\r\n\r\n> Also, as we talked on the Chromium CL, I don't think we should automatically make this TAO-protected rather than CORS-protected. It's not exactly timing information.\r\n\r\nYeah, we don't want to. I am a bit unsure as to where the exact place to specify this is. Does it make sense to add this to [fetch response handover](https://fetch.spec.whatwg.org/#fetch-finale) as well - If the CORS check fails pass in `0` as the status to `Mark resource timing`"", 'comment_created': datetime.datetime(2022, 7, 27, 15, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 931266882, 'comment_body': ""> Okay, just to be sure I understand. We would pass in the status as a new parameter to [Mark resource time](https://w3c.github.io/resource-timing/#dfn-mark-resource-timing) which would in turn pass it to [Setup the resource timing entry](https://w3c.github.io/resource-timing/#dfn-setup-the-resource-timing-entry) where we would use it to set the entry's `responseStatus`.\r\n\r\nExactly\r\n\r\n> \r\n> > Also, as we talked on the Chromium CL, I don't think we should automatically make this TAO-protected rather than CORS-protected. It's not exactly timing information.\r\n> \r\n> Yeah, we don't want to. I am a bit unsure as to where the exact place to specify this is. Does it make sense to add this to [fetch response handover](https://fetch.spec.whatwg.org/#fetch-finale) as well - If the CORS check fails pass in `0` as the status to `Mark resource timing`\r\n\r\nActually I don't think you need to do anything. If this is a no-cors request, `response` would already be an [opaque filtered response](https://fetch.spec.whatwg.org/#concept-filtered-response-opaque) with a status of 0."", 'comment_created': datetime.datetime(2022, 7, 27, 16, 26, 10, tzinfo=datetime.timezone.utc), 'commenter': 'noamr', 'type': 'User'}, {'comment_id': 932409645, 'comment_body': ""It might be worth having a follow-up issue on how to better integrate with HTTP or indicate that's what's happening. We basically want to map an HTTP response to a Fetch response. There has been some discussion about this also with the HTTP WG, but I don't think we'll get anything formal out of that."", 'comment_created': datetime.datetime(2022, 7, 28, 15, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 932411046, 'comment_body': ""One minor thing here that I notice is incorrect for some other fields as well is that `fetch.bs` shouldn't wrap inside phrasing elements such as `<dfn>` so you can more easily search for the terms inside of them."", 'comment_created': datetime.datetime(2022, 7, 28, 15, 47, 50, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 932412815, 'comment_body': ""I think there might be an existing problem here in that an opaque response wouldn't expose body info."", 'comment_created': datetime.datetime(2022, 7, 28, 15, 49, 30, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 932422797, 'comment_body': 'We set the body info to an empty body info if TAO fails.', 'comment_created': datetime.datetime(2022, 7, 28, 15, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'noamr', 'type': 'User'}, {'comment_id': 937785165, 'comment_body': ""I was wrong about this - in the case of iframes the status would leak here. You've reached the same problem in the Chromium implementation, need to think about this :)"", 'comment_created': datetime.datetime(2022, 8, 4, 13, 31, 30, tzinfo=datetime.timezone.utc), 'commenter': 'noamr', 'type': 'User'}, {'comment_id': 946747410, 'comment_body': ""Updated it to also take into account `request`'s mode and also origin"", 'comment_created': datetime.datetime(2022, 8, 16, 12, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 979910398, 'comment_body': ""The style we try to follow (see Infra) is like this:\r\n\r\n> origin; otherwise _response_'s status."", 'comment_created': datetime.datetime(2022, 9, 26, 11, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 979912271, 'comment_body': ""I don't think the same origin check here is good. This doesn't take redirects into account.\r\n\r\nAlso, is this the internal response or not?"", 'comment_created': datetime.datetime(2022, 9, 26, 11, 53, 44, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 980254170, 'comment_body': 'To take redirects into acount, would introducing a new flag to request be a good idea - `is navigation same origin`. As [HTTP fetch step 6.6](https://fetch.spec.whatwg.org/#ref-for-timing-allow-failed%E2%91%A2) we would check if request’s [mode](https://fetch.spec.whatwg.org/#concept-request-mode) is ""navigate"" and request’s [current URL](https://fetch.spec.whatwg.org/#concept-request-current-url)’s [origin](https://url.spec.whatwg.org/#concept-url-origin) is [same origin](https://html.spec.whatwg.org/multipage/origin.html#same-origin) with request’s [origin](https://fetch.spec.whatwg.org/#concept-request-origin). If at any time this is not the case we set `is navigation same origin` to false.\r\n\r\nThis flag would then be used instead of the current check. Would this work?', 'comment_created': datetime.datetime(2022, 9, 26, 16, 14, 57, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 980271826, 'comment_body': ""Can we use https://fetch.spec.whatwg.org/#concept-request-tainted-origin? I think request's URL list is still being build up by HTML's navigate algorithm so that should be fine. cc @noamr "", 'comment_created': datetime.datetime(2022, 9, 26, 16, 33, 4, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 981619162, 'comment_body': 'Okay, so just to be clear we let `responseStatus` be 0 if request’s [mode](https://fetch.spec.whatwg.org/#concept-request-mode) is ""navigate"" and request has a [redirect-tainted origin](https://fetch.spec.whatwg.org/#concept-request-tainted-origin)?\r\n\r\n\r\n> Also, is this the internal response or not?\r\n\r\nI don\'t think it is the internal response. We want the filtered response\'s status, so that status would be 0 if its say a no-cors request as well.', 'comment_created': datetime.datetime(2022, 9, 27, 19, 10, 8, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 983759103, 'comment_body': 'I think so, but now I wonder why this is different from the other measurements. If this is specifically for navigation timing it should probably follow the current model for those. cc @noamr ', 'comment_created': datetime.datetime(2022, 9, 29, 16, 27, 7, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 984194346, 'comment_body': ""This is not about navigation timing but about iframe navigations being reported to their parent. Since they cannot be CORS fetches, we don't want to report their status if they are cross origin."", 'comment_created': datetime.datetime(2022, 9, 30, 4, 20, 1, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 984741738, 'comment_body': ""Right, but don't we have existing infrastructure for that which needs to meet the same constraints?"", 'comment_created': datetime.datetime(2022, 9, 30, 16, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 986762262, 'comment_body': ""I don't believe we do, but I could be wrong. Are you aware of such infrastructure?"", 'comment_created': datetime.datetime(2022, 10, 4, 11, 41, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 986767506, 'comment_body': 'Wait, we have https://html.spec.whatwg.org/multipage/browsing-the-web.html#navigation-params-has-cross-origin-redirects for NavTiming. I can see if/how it fits here. ', 'comment_created': datetime.datetime(2022, 10, 4, 11, 48, 13, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 998358856, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2022, 10, 18, 15, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 1001981107, 'comment_body': 'I was about to merge this, but I don\'t understand how this protects the response status when mode isn\'t ""navigate"". Shouldn\'t we be using the timing allow passed flag in that case?', 'comment_created': datetime.datetime(2022, 10, 21, 16, 28, 40, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 1001985722, 'comment_body': ""As noted in https://github.com/whatwg/fetch/pull/1468#discussion_r931266882, wouldn't the response be a filtered response here thereby protecting the response status?\r\n"", 'comment_created': datetime.datetime(2022, 10, 21, 16, 34, 31, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}]","[{'commit_sha': '03610e827d2d0626d4b54c93c9071032520c5e2b', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ecd43d15ce87a113df562034b0131d5e00c9754', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a298369f0e430e30f1e5b8592b7b9b40856d024e', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a15271de57ae97e816bcf3fb6aa8f896ea24eac', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08d1251ddcc5c42992093d3bc653813e07401346', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}]",Abin K Paul,36098125,,User,,30,,135,43
1092735737,Reuse response's has-cross-origin-redirects,"<!--
Thank you for contributing to the HTML Standard! Please describe the change you are making and complete the checklist below if your change is not editorial.
-->

Reuse response's has-cross-origin-redirects in place of navigation param's [has cross-origin redirects](https://html.spec.whatwg.org/multipage/browsing-the-web.html#navigation-params-has-cross-origin-redirects) boolean.

Discussion : https://github.com/whatwg/fetch/pull/1468#issuecomment-1274618986


<!--
    This comment and the below content is programmatically generated.
    You may add a comma-separated list of anchors you'd like a
    direct link to below (e.g. #idl-serializers, #idl-sequence):

    Don't remove this comment or modify anything below this line.
    If you don't want a preview generated for this pull request,
    just replace the whole of this comment's content by ""no preview""
    and remove what's below.
-->
***
<a href=""https://whatpr.org/html/8405/browsing-the-web.html"" title=""Last updated on Oct 21, 2022, 12:40 PM UTC (99925c8)"">/browsing-the-web.html</a>  ( <a href=""https://whatpr.org/html/8405/30c2607...99925c8/browsing-the-web.html"" title=""Last updated on Oct 21, 2022, 12:40 PM UTC (99925c8)"">diff</a> )
<a href=""https://whatpr.org/html/8405/infrastructure.html"" title=""Last updated on Oct 21, 2022, 12:40 PM UTC (99925c8)"">/infrastructure.html</a>  ( <a href=""https://whatpr.org/html/8405/30c2607...99925c8/infrastructure.html"" title=""Last updated on Oct 21, 2022, 12:40 PM UTC (99925c8)"">diff</a> )",True,8405,https://api.github.com/repos/whatwg/html/pulls/8405,https://github.com/whatwg/html/pull/8405,closed,8,15,1,3,0,2,0,0,[],2022-10-19 18:35:08+00:00,2022-10-22 07:10:12+00:00,218104.0,"2 days, 12:35:04","[{'comment_id': 999821106, 'comment_body': ""I'm not sure if this is the right way to reference it. I'm guessing we manually update this PR once fetch PR lands?"", 'comment_created': datetime.datetime(2022, 10, 19, 18, 44, 57, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 1000053752, 'comment_body': 'You need to edit the dependencies section, around line 2574.\r\n\r\nAlso, when you do, use the URL that will be final in fetch, i.e. `https://fetch.spec.whatwg.org/#response-has-cross-origin-redirects`.', 'comment_created': datetime.datetime(2022, 10, 20, 1, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'domenic', 'type': 'User'}]","[{'commit_sha': '57bc07c2d50cc4c5d1816a72bb8451dc6bb4ae46', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa7a6d82856d086c4a359f1d6199f185ae03afdb', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99925c8901d154a181e04a34127187c664094747', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}]",Abin K Paul,36098125,,User,,30,,135,43
1032968295,Add content-type to resource-timing,"Introducing Content type. (https://github.com/w3c/resource-timing/issues/203)
Fetch changes : https://github.com/whatwg/fetch/pull/1481

Explainer : https://github.com/abinpaul1/resource-timing/blob/explainer-content-type/Explainers/Content-Type.md


<!--
    This comment and the below content is programmatically generated.
    You may add a comma-separated list of anchors you'd like a
    direct link to below (e.g. #idl-serializers, #idl-sequence):

    Don't remove this comment or modify anything below this line.
    If you don't want a preview generated for this pull request,
    just replace the whole of this comment's content by ""no preview""
    and remove what's below.
-->
***

### :boom: Error: Server Error :boom: ###

[PR Preview](https://github.com/tobie/pr-preview#pr-preview) failed to build. _(Last tried on May 8, 2023, 11:28 AM UTC)_.

<details>
<summary>More</summary>







_If you don't have enough information above to solve the error by yourself (or to understand to which web service the error is related to, if any), please [file an issue](https://github.com/tobie/pr-preview/issues/new?title=Error%20not%20surfaced%20properly&body=See%20w3c/resource-timing%23341.)._
</details>
",True,341,https://api.github.com/repos/w3c/resource-timing/pulls/341,https://github.com/w3c/resource-timing/pull/341,closed,6,0,1,9,10,6,0,0,[],2022-08-22 14:59:00+00:00,2023-05-11 09:42:05+00:00,22617785.0,"261 days, 18:43:05","[{'comment_id': 958272293, 'comment_body': 'Nit: ""to the result of""', 'comment_created': datetime.datetime(2022, 8, 30, 9, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 979497627, 'comment_body': 'I think this shouldn\'t be a note, but a normative part of the prose. Maybe ""return this\'s resource info\'s content type\'s essence. The user agent may truncate the value in an [implementation defined](https://infra.spec.whatwg.org/#implementation-defined) way."" ?', 'comment_created': datetime.datetime(2022, 9, 26, 1, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 980218093, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2022, 9, 26, 15, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 980226458, 'comment_body': 'Can you also link [user agent](https://infra.spec.whatwg.org/#user-agent)?', 'comment_created': datetime.datetime(2022, 9, 26, 15, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 1021233515, 'comment_body': 'Rather than just returning the essence, this should do https://mimesniff.spec.whatwg.org/#serializing-a-mime-type, no?', 'comment_created': datetime.datetime(2022, 11, 14, 9, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 1021402091, 'comment_body': 'Yeah, that seems more appropriate. Updated.', 'comment_created': datetime.datetime(2022, 11, 14, 11, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}]","[{'commit_sha': 'a049f7b1a409f0bbb2eeb0429374a592dbefb7cf', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58f89ae6b8a90b1e5ec14b53fe7bbebeea3a7e80', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fc263d68419753409c685601e3f1078622823f1', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd187385c9e8ce0be7755e4bab6761c49829b4d3', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c629428ce86df1a1fb30be18b656dc017e791dd4', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcf3bcdb5f163c60418df9364c13deb8b1c9909f', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25bab4e48960a7513f5fac9fd54d269fa74694bc', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '584cfde3bee39143dcaae41fb0773b21a65e0148', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fe2777584949d30c48ddb74b482b79443ae4820', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}]",Abin K Paul,36098125,,User,,30,,135,43
1032969432,Pass in content type to resource-timing,"<!--
Thank you for contributing to the Fetch Standard! Please describe the change you are making and complete the checklist below if your change is not editorial.
-->
These changes are to support addition of content type attribute to Perfomance resource timing. Further details are available at https://github.com/w3c/resource-timing/pull/341

- [x] At least two implementers are interested (and none opposed):
   * Chromium: https://chromestatus.com/feature/5156068351541248
   * Mozilla: https://github.com/mozilla/standards-positions/issues/705
   * Webkit (Pending) : https://github.com/WebKit/standards-positions/issues/88
- [x] [Tests](https://github.com/web-platform-tests/wpt) are written and can be reviewed and commented upon at:
   * https://chromium-review.googlesource.com/c/chromium/src/+/3916841
   * https://chromium-review.googlesource.com/c/chromium/src/+/4058549
- [x] [Implementation bugs](https://github.com/whatwg/meta/blob/main/MAINTAINERS.md#handling-pull-requests) are filed:
   * Chrome: https://bugs.chromium.org/p/chromium/issues/detail?id=1366706
   * Firefox: https://bugzilla.mozilla.org/show_bug.cgi?id=1800443
   * Safari: https://bugs.webkit.org/show_bug.cgi?id=247887
   * Deno (not for CORS changes): …

(See [WHATWG Working Mode: Changes](https://whatwg.org/working-mode#changes) for more details.)


<!--
    This comment and the below content is programmatically generated.
    You may add a comma-separated list of anchors you'd like a
    direct link to below (e.g. #idl-serializers, #idl-sequence):

    Don't remove this comment or modify anything below this line.
    If you don't want a preview generated for this pull request,
    just replace the whole of this comment's content by ""no preview""
    and remove what's below.
-->
***
<a href=""https://whatpr.org/fetch/1481.html"" title=""Last updated on May 8, 2023, 9:31 AM UTC (7631a87)"">Preview</a> | <a href=""https://whatpr.org/fetch/1481/4502481...7631a87.html"" title=""Last updated on May 8, 2023, 9:31 AM UTC (7631a87)"">Diff</a>",True,1481,https://api.github.com/repos/whatwg/fetch/pulls/1481,https://github.com/whatwg/fetch/pull/1481,closed,21,4,1,2,22,17,2,0,"[{'name': 'security/privacy'}, {'name': 'topic: timing'}]",2022-08-22 15:00:00+00:00,2023-05-08 09:32:55+00:00,22357975.0,"258 days, 18:32:55","[{'comment_id': 958279827, 'comment_body': 'Can this be called with an opaque response?', 'comment_created': datetime.datetime(2022, 8, 30, 10, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 961858828, 'comment_body': 'Yeah, when it\'s opaque we have to keep an empty string. Updated it now. Thanks.\r\n\r\nThis seems to effectively be the same condition that we are applying to `responseStatus` as well. Would it make sense to keep the result of this condition in a variable and use it to determine `responseStatus`, `contentType` and others fields if any that would have to be gated on CORS.\r\n\r\nSomething like below : \r\n\r\nLet _shouldReport_ be `false` if response\'s type is  ""opaque""  or  fetchParams ’s request ’s mode is ""navigate "" and  response’s url ’s origin is not same origin with  request’s origin, and `true` otherwise.\r\n\r\nLet _mimeType_ be result of extracting a MIME type from response’s  header list if _shouldReport_ is true and an empty string otherwise.\r\n\r\nLet _responseStatus_ be response\'s status if _shouldReport_ is true and 0 otherwise.', 'comment_created': datetime.datetime(2022, 9, 2, 16, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 962525971, 'comment_body': 'What @noamr did elsewhere (e.g. with ""body info"" is to only initialize it when the response is not opaque. It might be worthwhile to repeat the same pattern (or hook the info you want here into ""body info"" itself, as mime type kinda feels related.\r\n\r\n@noamr - thoughts?', 'comment_created': datetime.datetime(2022, 9, 5, 6, 37, 6, tzinfo=datetime.timezone.utc), 'commenter': 'yoavweiss', 'type': 'User'}, {'comment_id': 962527834, 'comment_body': '> What @noamr did elsewhere (e.g. with ""body info"" is to only initialize it when the response is not opaque. It might be worthwhile to repeat the same pattern (or hook the info you want here into ""body info"" itself, as mime type kinda feels related.\r\n> \r\n> @noamr - thoughts?\r\n\r\nYes mime-type should be inside `body info`.', 'comment_created': datetime.datetime(2022, 9, 5, 6, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'noamr', 'type': 'User'}, {'comment_id': 967834662, 'comment_body': ""I've moved content-type inside `body info`. But can we rely on `body info`'s initialization for `content type` as well ? \r\n\r\n`body info` initialization seems to depend on [timing allow passed flag](https://fetch.spec.whatwg.org/#concept-response-timing-allow-passed). In [fetch response handover](https://fetch.spec.whatwg.org/#fetch-finale) 3.3.5, `body info` is reinitialized depending on `timing allow passed flag` which is different from the conditions we need for `content type`"", 'comment_created': datetime.datetime(2022, 9, 11, 14, 6, 23, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 979916711, 'comment_body': 'I have similar concerns here to your other PR about the same origin check and redirects, and also how to word otherwise cases.\r\n\r\nAlso, when you can only ""let"" a variable, you need to ""set"" a field (""to"" something).', 'comment_created': datetime.datetime(2022, 9, 26, 11, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 1019138691, 'comment_body': 'Nit: indentation.', 'comment_created': datetime.datetime(2022, 11, 10, 13, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 1019139282, 'comment_body': ""I don't think extracting a MIME type returns a string."", 'comment_created': datetime.datetime(2022, 11, 10, 13, 42, 35, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 1019141201, 'comment_body': 'As with the other check we probably don\'t need to check ""opaque"" here as ""opaque"" responses won\'t have a `Content-Type` header anyway? (Unless you poke at its internals, which we\'re not doing here if I remember correctly.)', 'comment_created': datetime.datetime(2022, 11, 10, 13, 43, 56, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 1019320928, 'comment_body': 'I think it would be cleanest btw if we store null or a MIME type here and let callers serialize as needed.', 'comment_created': datetime.datetime(2022, 11, 10, 15, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 1020773688, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 11, 12, 15, 27, 41, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 1020773742, 'comment_body': 'Updated to hold a MIME type.', 'comment_created': datetime.datetime(2022, 11, 12, 15, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 1020774001, 'comment_body': ""Oh right..Thanks. I've dropped the check for `opaque`."", 'comment_created': datetime.datetime(2022, 11, 12, 15, 31, 11, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 1021232030, 'comment_body': 'Nit: exceeds 100 columns.', 'comment_created': datetime.datetime(2022, 11, 14, 9, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 1021232356, 'comment_body': 'This should be _bodyInfo_ presumably?', 'comment_created': datetime.datetime(2022, 11, 14, 9, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}, {'comment_id': 1021398311, 'comment_body': 'Yes...updated', 'comment_created': datetime.datetime(2022, 11, 14, 11, 41, 47, tzinfo=datetime.timezone.utc), 'commenter': 'abinpaul1', 'type': 'User'}, {'comment_id': 1185709928, 'comment_body': 'This needs to be conditional upon _mimeType_ not being null.', 'comment_created': datetime.datetime(2023, 5, 5, 5, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'annevk', 'type': 'User'}]","[{'commit_sha': '81caaba6e1cc8d9012547b4d4dd1e3685859c7a7', 'committer_username': 'abinpaul1', 'committer_name': 'Abin K Paul', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 3, 7, 31, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7631a87fb5084895bb1f9a587cf1d6e9a6c11fd4', 'committer_username': 'annevk', 'committer_name': 'Anne van Kesteren', 'committer_email': 'annevk@annevk.nl', 'commit_date': datetime.datetime(2012, 3, 16, 13, 55, 11, tzinfo=datetime.timezone.utc)}]",Abin K Paul,36098125,,User,,30,,135,43

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
25276748,resource-timing,w3c/resource-timing,HTML,35,119,69,27,342,56,10,5,"[{'id': 1121212398, 'number': 361, 'closed': None, 'created': datetime.datetime(2022, 11, 14, 11, 27, 34, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 150, 'deletions': 0, 'state': 'open'}, {'id': 1044899037, 'number': 347, 'closed': datetime.datetime(2022, 9, 27, 6, 41, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 2, 13, 5, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2136944.0, 'time_delta': '24 days, 17:35:44', 'additions': 152, 'deletions': 0, 'state': 'closed'}, {'id': 1032968295, 'number': 341, 'closed': datetime.datetime(2023, 5, 11, 9, 42, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 14, 59, tzinfo=datetime.timezone.utc), 'time_taken': 22617785.0, 'time_delta': '261 days, 18:43:05', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 992247754, 'number': 335, 'closed': datetime.datetime(2022, 10, 27, 13, 18, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 9, 14, 20, 44, tzinfo=datetime.timezone.utc), 'time_taken': 9500286.0, 'time_delta': '109 days, 22:58:06', 'additions': 27, 'deletions': 6, 'state': 'closed'}, {'id': 987161143, 'number': 330, 'closed': datetime.datetime(2022, 9, 26, 15, 16, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 8, 47, 37, tzinfo=datetime.timezone.utc), 'time_taken': 7194515.0, 'time_delta': '83 days, 6:28:35', 'additions': 160, 'deletions': 0, 'state': 'closed'}, {'id': 987142484, 'number': 329, 'closed': datetime.datetime(2022, 7, 5, 8, 48, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 8, 28, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1207.0, 'time_delta': '0:20:07', 'additions': 58, 'deletions': 0, 'state': 'closed'}, {'id': 956010973, 'number': 327, 'closed': datetime.datetime(2022, 8, 31, 9, 31, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 2, 14, 57, 27, tzinfo=datetime.timezone.utc), 'time_taken': 7756432.0, 'time_delta': '89 days, 18:33:52', 'additions': 41, 'deletions': 0, 'state': 'closed'}]"
5777189,fetch,whatwg/fetch,HTML,325,2102,150,100,1041,273,8,27,"[{'id': 1032969432, 'number': 1481, 'closed': datetime.datetime(2023, 5, 8, 9, 32, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 15, 0, tzinfo=datetime.timezone.utc), 'time_taken': 22357975.0, 'time_delta': '258 days, 18:32:55', 'additions': 21, 'deletions': 4, 'state': 'closed'}, {'id': 992247833, 'number': 1468, 'closed': datetime.datetime(2022, 10, 22, 7, 8, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 9, 14, 21, 12, tzinfo=datetime.timezone.utc), 'time_taken': 9046044.0, 'time_delta': '104 days, 16:47:24', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 956015387, 'number': 1449, 'closed': datetime.datetime(2022, 7, 29, 3, 36, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 2, 15, 1, 25, tzinfo=datetime.timezone.utc), 'time_taken': 4883698.0, 'time_delta': '56 days, 12:34:58', 'additions': 5, 'deletions': 1, 'state': 'closed'}]"
295774370,content,mdn/content,Markdown,22446,9089,263,4608,23630,505,6,61,"[{'id': 1021556680, 'number': 19325, 'closed': datetime.datetime(2022, 11, 2, 10, 43, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 13, 56, 13, tzinfo=datetime.timezone.utc), 'time_taken': 7332444.0, 'time_delta': '84 days, 20:47:24', 'additions': 53, 'deletions': 0, 'state': 'closed'}, {'id': 898940092, 'number': 14648, 'closed': datetime.datetime(2022, 11, 30, 15, 12, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 4, 12, 9, 51, tzinfo=datetime.timezone.utc), 'time_taken': 20746969.0, 'time_delta': '240 days, 3:02:49', 'additions': 29, 'deletions': 0, 'state': 'closed'}]"
11969507,html,whatwg/html,HTML,2598,7961,700,406,12172,2038,48,168,"[{'id': 1092735737, 'number': 8405, 'closed': datetime.datetime(2022, 10, 22, 7, 10, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 19, 18, 35, 8, tzinfo=datetime.timezone.utc), 'time_taken': 218104.0, 'time_delta': '2 days, 12:35:04', 'additions': 8, 'deletions': 15, 'state': 'closed'}, {'id': 1011576682, 'number': 8139, 'closed': datetime.datetime(2022, 8, 19, 9, 49, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 5, 46, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1828976.0, 'time_delta': '21 days, 4:02:56', 'additions': 28, 'deletions': 0, 'state': 'closed'}, {'id': 956021540, 'number': 7979, 'closed': datetime.datetime(2022, 6, 18, 15, 3, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 2, 15, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1382208.0, 'time_delta': '15 days, 23:56:48', 'additions': 22, 'deletions': 7, 'state': 'closed'}]"
