pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
985597063,"Added code to add, retrieve and store extra params","This pull request is to address the task to add, retrieve and store the extra params for all (9) isotopes of a molecule(CO)

- I checked if extra_params is not empty then `Parameters = extra_params`  will be passed in fetch() method
(`extra_params = ['gamma_CO2',n_CO2']`  ----> we will pass this via fetch_hitran() only...for time being I've hard coded it)
 This will allow addition of these extra_params like gamma_CO2, n_CO2 etc in the `.data file` for that respective isotope (CO_1.data, CO_2.data....etc)
-  Then I am retrieving these column values using `getColumn` of hapi.
-  After that I stored this data into a global dataframe(temp_df) with the column name as  `CO_1_gamma_CO2`, `CO_1_n_CO2`..(molecule_isotope_param) to distinguish the isotopes columns.

Similarly, for the rest of the isotopes this `temp_df` will keep on appending column values.
 
- After retrieving and adding these columns to the dataframe, I have deleted these extra parameters from the `.data file`

 It helps in not hindering the normal workflow and to bypass the parsing methods which won't work for these extra_params added in `.data` anyways.It behaves like the normal workflow without passing extra_params in fetch() method. 
 
 Hence, we will get a consolidated dataframe with these extra parameters for all
isotopes for a molecule. I've attached a csv file of the final dataframe created.
 some values are empty since not all isotopes have exact same number of lines,
These empty values appear as NaN in dataframe, we can replace them with 0 or avg accordingly
[extra_params_CO.csv](https://github.com/radis/radis/files/9033738/extra_params_CO.csv)

 
Now, I need to add these extra_params in the final `CO.hdf5` file.
 
but first I want to know the approach to append these columns to every isotope hdf5 accordingly which is later on consolidated into a single .hdf5 file.
Below is a code snippet of hitran.py where I believe we need to integrate the 'temp_df' columns(final df having all columns)  
 
	    # Create HDF5 cache file for all isotopes
        Nlines = 0
        for iso, data_file in zip(isotope_list, data_file_list):
            df = hit2df(
                join(tempdir, data_file),
                cache=False,  # do not generate cache yet
                parse_quanta=parse_quanta,
            )
            wmin_final = min(wmin_final, df.wav.min())
            wmax_final = max(wmax_final, df.wav.max())
            Nlines += len(df)

            writer.write(
                local_file, df, append=True
            )  # create temporary files if required
",False,492,https://api.github.com/repos/radis/radis/pulls/492,https://github.com/radis/radis/pull/492,closed,60,3,2,7,6,8,0,0,[],2022-07-02 21:40:49+00:00,2022-08-13 10:09:32+00:00,3587323.0,"41 days, 12:28:43","[{'comment_id': 917425882, 'comment_body': 'what does this block do ?', 'comment_created': datetime.datetime(2022, 7, 10, 17, 37, 31, tzinfo=datetime.timezone.utc), 'commenter': 'erwanp', 'type': 'User'}, {'comment_id': 917426482, 'comment_body': 'this is not the right place to create a file. Can\'t you make the file creation happen in `download_and_parse` ? \r\n\r\nNote 2 : line 1483 :  you\'ll probably need to ask to load extra columns , i.e. add the required parameters (""gamma_CO2"", ""n_CO2"" )  to `columns`    ', 'comment_created': datetime.datetime(2022, 7, 10, 17, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'erwanp', 'type': 'User'}, {'comment_id': 917426519, 'comment_body': 'global parameter is very bad practice in Python, find another way ?', 'comment_created': datetime.datetime(2022, 7, 10, 17, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'erwanp', 'type': 'User'}, {'comment_id': 922664446, 'comment_body': ""the delete block -\r\nSo, whenever call the fetch method with Parameters= ['gamma_CO2','n_CO2'] the `.data` file contains basic attributes along with the extra parameters passed in a comma-separated manner\r\n\r\nwhen simply fetch() is called \r\n![image](https://user-images.githubusercontent.com/38047163/179351510-40c74dda-6f52-4d07-98e6-822da3a51ca5.png)\r\n\r\n\r\n**when fetch() with Parameters** we get extra values comma separated \r\n![image](https://user-images.githubusercontent.com/38047163/179351518-ddfa299c-97c6-4c34-b5b8-07a953dd0369.png)\r\n\r\n\r\nSo, these extra parameters are extracted using getColumn of HAPI and initially stored in a dataframe which is then converted in a .hdf5 file, this `delete block` basically removes the comma-separated values (which are the extra parameters) so that it does not hinder the normal workflow of parsing the basic attributes/columns.\r\nI went ahead and created the .hdf5 file of extra parameters in this manner so that it doesn't hinder the normal processing of code. Otherwise, we would have to define a different way of getting these extra parameters"", 'comment_created': datetime.datetime(2022, 7, 16, 10, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Supriya1702', 'type': 'User'}, {'comment_id': 922666549, 'comment_body': 'In today\'s commit, I have created the consolidated `.hdf5` file for `extra_params` of all isotopes of the molecule  in `download_all_isotopes` since we are downloading extra_params for all isotopes.\r\n\r\nAlso,  rather than loading  required parameters in `columns` \r\nI\'ve added a new parameter in `extra_params` in `fetch_hitran()` method  which I also had to add to `class DatabaseManager` in `dbmanager.py`.\r\nSo, through `extra_params` a user can pass the broadening coefficients like \'gamma_CO2, n_CO2\' in the `fetch_hitran() `method and a `.HDF5` file for those attributes will be created in the same location.\r\nFor instance,\r\nif user is calling -\r\n````\r\nfrom radis.io.hitran import fetch_hitran\r\nfetch_hitran(""CO"",[""gamma_CO2"",""n_CO2""])\r\n````\r\nthen a file `CO.hdf5 `will be created with the basic attributes and a file `CO_gamma_CO2_n_CO2.hdf5` will be created that has only `gamma_CO2` and `n_CO2` values for CO.', 'comment_created': datetime.datetime(2022, 7, 16, 11, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Supriya1702', 'type': 'User'}, {'comment_id': 922666736, 'comment_body': ""Yes, I've removed the use of global df in my latest commit"", 'comment_created': datetime.datetime(2022, 7, 16, 11, 5, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Supriya1702', 'type': 'User'}, {'comment_id': 922671065, 'comment_body': ""Shouldn't it has default value of None? "", 'comment_created': datetime.datetime(2022, 7, 16, 11, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'erwanp', 'type': 'User'}]","[{'commit_sha': '4ae297b852fc1d092903db30b356faf5c62e0845', 'committer_username': 'Supriya1702', 'committer_name': 'Supriya', 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 3, 16, 30, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '624078f41910c2d1c85782e2738a3c988c5f70ff', 'committer_username': 'Supriya1702', 'committer_name': 'Supriya', 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 3, 16, 30, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8efee6dba83bd8bfa05950e73079d2520b571004', 'committer_username': 'Supriya1702', 'committer_name': 'Supriya', 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 3, 16, 30, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '502b6ed9c75c670f1861d6eeec3e7b9e697c2468', 'committer_username': 'Supriya1702', 'committer_name': 'Supriya', 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 3, 16, 30, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7462d9f6df36d87432608812531e79b6b0ebc4f7', 'committer_username': 'Supriya1702', 'committer_name': 'Supriya', 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 3, 16, 30, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c25472e046f2aa3dfe67264a56c2a041da358194', 'committer_username': 'Supriya1702', 'committer_name': 'Supriya', 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 3, 16, 30, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ef2bb17f86b63a90ec7fd148e234dbd49e4e40b', 'committer_username': 'Supriya1702', 'committer_name': 'Supriya', 'committer_email': None, 'commit_date': datetime.datetime(2018, 4, 3, 16, 30, 57, tzinfo=datetime.timezone.utc)}]",Supriya,38047163,,User,,48,,1,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
118933991,radis,radis/radis,Python,119,209,11,47,3448,76,10,7,"[{'id': 1026303801, 'number': 505, 'closed': datetime.datetime(2022, 8, 17, 11, 45, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 15, 10, 49, 39, tzinfo=datetime.timezone.utc), 'time_taken': 176169.0, 'time_delta': '2 days, 0:56:09', 'additions': 263, 'deletions': 56, 'state': 'closed'}, {'id': 999654207, 'number': 495, 'closed': datetime.datetime(2022, 10, 4, 5, 11, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 18, 17, 6, 16, tzinfo=datetime.timezone.utc), 'time_taken': 6696300.0, 'time_delta': '77 days, 12:05:00', 'additions': 493, 'deletions': 43, 'state': 'closed'}, {'id': 985597063, 'number': 492, 'closed': datetime.datetime(2022, 8, 13, 10, 9, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 2, 21, 40, 49, tzinfo=datetime.timezone.utc), 'time_taken': 3587323.0, 'time_delta': '41 days, 12:28:43', 'additions': 60, 'deletions': 3, 'state': 'closed'}, {'id': 948431344, 'number': 481, 'closed': datetime.datetime(2022, 5, 30, 6, 45, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 16, 3, 14, tzinfo=datetime.timezone.utc), 'time_taken': 312141.0, 'time_delta': '3 days, 14:42:21', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 906431069, 'number': 447, 'closed': datetime.datetime(2022, 4, 12, 19, 55, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 11, 20, 11, 1, tzinfo=datetime.timezone.utc), 'time_taken': 85492.0, 'time_delta': '23:44:52', 'additions': 72, 'deletions': 3, 'state': 'closed'}, {'id': 879538200, 'number': 426, 'closed': datetime.datetime(2022, 3, 20, 20, 7, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 21, 28, 6, tzinfo=datetime.timezone.utc), 'time_taken': 513562.0, 'time_delta': '5 days, 22:39:22', 'additions': 10, 'deletions': 12, 'state': 'closed'}]"
