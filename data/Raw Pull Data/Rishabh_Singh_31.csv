pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
430868831,AC_Avoid/AP_Proximity: Push 3D data into OA Database,"This PR fixes: https://github.com/ArduPilot/ardupilot/issues/13215
The vehicle's orientation is now taken into account while projecting the location of the object from the vehicle, and then calculating its position in Earth-Frame as a Vector3f from origin. 
This greatly improves the accuracy of the location of the object. An immediate result of this being, it should now be easier to fly low altitude, high -pitch mission because the OA_DB will no longer think the obstacle is in front of it, while really its much below it. 

**TESTING:**
This PR has not yet been tested on a real vehicle but certain bench test with a pixhawk 2.4.8 clone  were done. I have also extensively tested this on SITL + Morse in multiple terrains. I hope to test this out on a real vehicle soon. 

Live example:
1. Before vs After video for low flying (I set the exact same path for master, and my branch with a **3 meters** altitude auto mission): https://www.youtube.com/watch?v=KpQODO9YYGY
Follow the map module and the path shown to see how much trouble the current master has. The actual live video can be ignored behind as I has a tough time following the vehicle around manually.  
A bumpy grass map was used:
![image](https://user-images.githubusercontent.com/36970042/84003159-3b5f4580-a987-11ea-8a32-70ff70536c86.png)

It can be quiet clearly seen that the current master has a lot of trouble navigating, but my changes seem to make things better (atleast relatively)

2. A simulation to see it can still dodge big walls after my changes: https://www.youtube.com/watch?v=auyWNQ6Eyms

3. Bench Test:
After disabling interrupts using: `hal.scheduler->disable_interrupts_save() `  and putting a US timer in both the 2D and then 3D calculations I found out the current master takes 5 us approximately , where as my branch takes 8us to iterate once.  Therefore an extra **3us**  (2.5-3.5 on average) is now taken.

4. Memory:
Although I havent done any formal testing in this area but all the Vector2f's are now 3f's. So extra float per object is now stored in the Object Database. Other than that, there should not be a major change.


Please let me know if there are more efficient ways to make these changes, or any ideas on how I can test this more. Thanks!",True,14556,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14556,https://github.com/ArduPilot/ardupilot/pull/14556,closed,73,39,9,3,3,4,2,0,"[{'name': 'Library'}, {'name': 'GSoC'}]",2020-06-08 07:36:54+00:00,2020-06-19 00:45:36+00:00,925722.0,"10 days, 17:08:42","[{'comment_id': 437085509, 'comment_body': 'can we use the ADSB_ALTITUDE_TYPE_GEOMETRIC value from mavlink?', 'comment_created': datetime.datetime(2020, 6, 9, 1, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 437098374, 'comment_body': ""We should pass the body-to_ned as a const reference.  i.e. const Matrix3f &body_to_ned.\r\n\r\nEDIT: I originally suggested we rename current_pos to either current_pos_ned or current_pos_neu.. but as long as it's neu then it's OK."", 'comment_created': datetime.datetime(2020, 6, 9, 2, 11, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 437897902, 'comment_body': ""you could remove the whole AP::ahrs().get_position(current_loc) check as we don't use current_loc anymore"", 'comment_created': datetime.datetime(2020, 6, 10, 6, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 441705690, 'comment_body': 'Nice catch! Fixed. Thanks ', 'comment_created': datetime.datetime(2020, 6, 17, 17, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}]","[{'commit_sha': '21293f0dab6236f3158c75ca838336d41a6cb666', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55707fe8fbd0d23810862a10f36c5786c1ec7079', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c81873307205f53bc2590f9f90b3b41e220e7d96', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
430868831,AC_Avoid/AP_Proximity: Push 3D data into OA Database,"This PR fixes: https://github.com/ArduPilot/ardupilot/issues/13215
The vehicle's orientation is now taken into account while projecting the location of the object from the vehicle, and then calculating its position in Earth-Frame as a Vector3f from origin. 
This greatly improves the accuracy of the location of the object. An immediate result of this being, it should now be easier to fly low altitude, high -pitch mission because the OA_DB will no longer think the obstacle is in front of it, while really its much below it. 

**TESTING:**
This PR has not yet been tested on a real vehicle but certain bench test with a pixhawk 2.4.8 clone  were done. I have also extensively tested this on SITL + Morse in multiple terrains. I hope to test this out on a real vehicle soon. 

Live example:
1. Before vs After video for low flying (I set the exact same path for master, and my branch with a **3 meters** altitude auto mission): https://www.youtube.com/watch?v=KpQODO9YYGY
Follow the map module and the path shown to see how much trouble the current master has. The actual live video can be ignored behind as I has a tough time following the vehicle around manually.  
A bumpy grass map was used:
![image](https://user-images.githubusercontent.com/36970042/84003159-3b5f4580-a987-11ea-8a32-70ff70536c86.png)

It can be quiet clearly seen that the current master has a lot of trouble navigating, but my changes seem to make things better (atleast relatively)

2. A simulation to see it can still dodge big walls after my changes: https://www.youtube.com/watch?v=auyWNQ6Eyms

3. Bench Test:
After disabling interrupts using: `hal.scheduler->disable_interrupts_save() `  and putting a US timer in both the 2D and then 3D calculations I found out the current master takes 5 us approximately , where as my branch takes 8us to iterate once.  Therefore an extra **3us**  (2.5-3.5 on average) is now taken.

4. Memory:
Although I havent done any formal testing in this area but all the Vector2f's are now 3f's. So extra float per object is now stored in the Object Database. Other than that, there should not be a major change.


Please let me know if there are more efficient ways to make these changes, or any ideas on how I can test this more. Thanks!",True,14556,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14556,https://github.com/ArduPilot/ardupilot/pull/14556,closed,73,39,9,3,3,4,2,0,"[{'name': 'Library'}, {'name': 'GSoC'}]",2020-06-08 07:36:54+00:00,2020-06-19 00:45:36+00:00,925722.0,"10 days, 17:08:42","[{'comment_id': 437085509, 'comment_body': 'can we use the ADSB_ALTITUDE_TYPE_GEOMETRIC value from mavlink?', 'comment_created': datetime.datetime(2020, 6, 9, 1, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 437098374, 'comment_body': ""We should pass the body-to_ned as a const reference.  i.e. const Matrix3f &body_to_ned.\r\n\r\nEDIT: I originally suggested we rename current_pos to either current_pos_ned or current_pos_neu.. but as long as it's neu then it's OK."", 'comment_created': datetime.datetime(2020, 6, 9, 2, 11, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 437897902, 'comment_body': ""you could remove the whole AP::ahrs().get_position(current_loc) check as we don't use current_loc anymore"", 'comment_created': datetime.datetime(2020, 6, 10, 6, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 441705690, 'comment_body': 'Nice catch! Fixed. Thanks ', 'comment_created': datetime.datetime(2020, 6, 17, 17, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}]","[{'commit_sha': '21293f0dab6236f3158c75ca838336d41a6cb666', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55707fe8fbd0d23810862a10f36c5786c1ec7079', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c81873307205f53bc2590f9f90b3b41e220e7d96', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
430868831,AC_Avoid/AP_Proximity: Push 3D data into OA Database,"This PR fixes: https://github.com/ArduPilot/ardupilot/issues/13215
The vehicle's orientation is now taken into account while projecting the location of the object from the vehicle, and then calculating its position in Earth-Frame as a Vector3f from origin. 
This greatly improves the accuracy of the location of the object. An immediate result of this being, it should now be easier to fly low altitude, high -pitch mission because the OA_DB will no longer think the obstacle is in front of it, while really its much below it. 

**TESTING:**
This PR has not yet been tested on a real vehicle but certain bench test with a pixhawk 2.4.8 clone  were done. I have also extensively tested this on SITL + Morse in multiple terrains. I hope to test this out on a real vehicle soon. 

Live example:
1. Before vs After video for low flying (I set the exact same path for master, and my branch with a **3 meters** altitude auto mission): https://www.youtube.com/watch?v=KpQODO9YYGY
Follow the map module and the path shown to see how much trouble the current master has. The actual live video can be ignored behind as I has a tough time following the vehicle around manually.  
A bumpy grass map was used:
![image](https://user-images.githubusercontent.com/36970042/84003159-3b5f4580-a987-11ea-8a32-70ff70536c86.png)

It can be quiet clearly seen that the current master has a lot of trouble navigating, but my changes seem to make things better (atleast relatively)

2. A simulation to see it can still dodge big walls after my changes: https://www.youtube.com/watch?v=auyWNQ6Eyms

3. Bench Test:
After disabling interrupts using: `hal.scheduler->disable_interrupts_save() `  and putting a US timer in both the 2D and then 3D calculations I found out the current master takes 5 us approximately , where as my branch takes 8us to iterate once.  Therefore an extra **3us**  (2.5-3.5 on average) is now taken.

4. Memory:
Although I havent done any formal testing in this area but all the Vector2f's are now 3f's. So extra float per object is now stored in the Object Database. Other than that, there should not be a major change.


Please let me know if there are more efficient ways to make these changes, or any ideas on how I can test this more. Thanks!",True,14556,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14556,https://github.com/ArduPilot/ardupilot/pull/14556,closed,73,39,9,3,3,4,2,0,"[{'name': 'Library'}, {'name': 'GSoC'}]",2020-06-08 07:36:54+00:00,2020-06-19 00:45:36+00:00,925722.0,"10 days, 17:08:42","[{'comment_id': 437085509, 'comment_body': 'can we use the ADSB_ALTITUDE_TYPE_GEOMETRIC value from mavlink?', 'comment_created': datetime.datetime(2020, 6, 9, 1, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 437098374, 'comment_body': ""We should pass the body-to_ned as a const reference.  i.e. const Matrix3f &body_to_ned.\r\n\r\nEDIT: I originally suggested we rename current_pos to either current_pos_ned or current_pos_neu.. but as long as it's neu then it's OK."", 'comment_created': datetime.datetime(2020, 6, 9, 2, 11, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 437897902, 'comment_body': ""you could remove the whole AP::ahrs().get_position(current_loc) check as we don't use current_loc anymore"", 'comment_created': datetime.datetime(2020, 6, 10, 6, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 441705690, 'comment_body': 'Nice catch! Fixed. Thanks ', 'comment_created': datetime.datetime(2020, 6, 17, 17, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}]","[{'commit_sha': '21293f0dab6236f3158c75ca838336d41a6cb666', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55707fe8fbd0d23810862a10f36c5786c1ec7079', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c81873307205f53bc2590f9f90b3b41e220e7d96', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
442472049,AC_Avoid: Extend BendyRuler functionality to search for vertical paths - Try 2,"A lot of things have changed for BendyRuler since I started working on it.. So it was just easier to start a new PR from where I left in #14623 
Testing evidence can be seen in that PR itself. 
",True,14726,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14726,https://github.com/ArduPilot/ardupilot/pull/14726,closed,283,25,11,4,4,21,0,0,[],2020-07-01 06:24:36+00:00,2020-08-23 23:53:22+00:00,4642126.0,"53 days, 17:28:46","[{'comment_id': 448147283, 'comment_body': 'We probably need to move this down one line..', 'comment_created': datetime.datetime(2020, 7, 1, 6, 40, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462093606, 'comment_body': ""Let's make sure this doesn't appear for Rover"", 'comment_created': datetime.datetime(2020, 7, 29, 7, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465670313, 'comment_body': 'As mentioned yesterday, could we make a definition at the top of this .cpp file called something like below and then use it in place of, ""#if APM_BUILD_TYPE(APM_BUILD_ArduCopter)"".  It\'s a non-functional change and I think this will make it more obvious to future developers that this ""switch"" exists.  Without it I can imagine that plane or sub developers may lose time trying to figure out why they can\'t get vertical bendyruler working.\r\n\r\n#define VERTICAL_ENABLED  APM_BUILD_TYPE(APM_BUILD_ArduCopter)', 'comment_created': datetime.datetime(2020, 8, 5, 11, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465673114, 'comment_body': 'maybe move the get_type() method to be right under the enum definition.  not a blocker of course.', 'comment_created': datetime.datetime(2020, 8, 5, 11, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465674819, 'comment_body': ""don't really need the break here I think.  It does no harm though either."", 'comment_created': datetime.datetime(2020, 8, 5, 11, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465675286, 'comment_body': 'this last line can never be reached I think.  Again it does no harm though and perhaps the compiler will complain without it.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465676481, 'comment_body': 'this becomes a fall through on non-Copter builds so I\'m a little surprised that we don\'t need to have the, ""//  FALLTHROUGH"" line in here.  Still, Is suspect the fall through is just for editors and the compilers don\'t actually care.  I guess you could add an #else and then add a ""// FALLTHROUGH"" but perhaps that\'s just more confusing.  Not a blocker in any case.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465677631, 'comment_body': 'I would call this variable ""ret"" or ""success"" but again not a blocker.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465679417, 'comment_body': 'let\'s rename ""limit"" to ""angular_limit"" or something like that.  In any case, having this temp variable is better than what the existing horizontal equivalent does.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 8, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465679909, 'comment_body': 'nitpick: maybe put some spaces after the commas.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465682135, 'comment_body': 'it\'s an existing issue for the horizontal equivalent but in any case let\'s fix this comment to say ""obstacles"" instead of  ""fence"".', 'comment_created': datetime.datetime(2020, 8, 5, 12, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465683828, 'comment_body': ""We don't normally use this pattern, instead probably more consistent to just use an if then else."", 'comment_created': datetime.datetime(2020, 8, 5, 12, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465686109, 'comment_body': 'I think we shouldn\'t use the word, ""bearing"" in this case because normally the word refers to a horizontal bearing.  Instead let\'s just use ""angle"" or similar.\r\n\r\nEDIT: I think we should rename ""vertical_bearing"" to ""pitch"".  We need to be careful about the convention though. I think in AP, a pitch of 90 is up.  -90 is downwards.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465688452, 'comment_body': 'As you\'ve mentioned before it\'s slightly odd to use the ""distance_to_dest"" which is really a horizontal distance but I think it\'s OK.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 26, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465692411, 'comment_body': ""Ok, finally a real question.. does this correctly turn off avoidance in the situation below?  I.e. will it turn off avoidance when the vehicle reaches 2?  or will it prematurely turn off when it reaches 1?  I'm just slightly concerned that the 2nd probe's bearing is directly towards the final destination horizontally but perhaps not vertically?\r\n![image](https://user-images.githubusercontent.com/1498098/89413020-068f2500-d763-11ea-87a5-6fa3e843d037.png)\r\n"", 'comment_created': datetime.datetime(2020, 8, 5, 12, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465697573, 'comment_body': ""let's get rid of the extra spaces on either side of the arrow"", 'comment_created': datetime.datetime(2020, 8, 5, 12, 42, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465697751, 'comment_body': 'little extra space after the ::', 'comment_created': datetime.datetime(2020, 8, 5, 12, 42, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465699133, 'comment_body': 'as above let\'s rename ""target_vert_bearing"" to ""target_pitch""', 'comment_created': datetime.datetime(2020, 8, 5, 12, 45, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 466626402, 'comment_body': ""@rmackay9 thanks for pointing this out to me, I missed it! \r\nYes you're correct, so what my PR will do is, climb till it clears of the margin to the obstacle.. So it will turn off avoidance at 1. In simulations and real life testing this seemed to work out great. I have been working towards a fix where, if we were climbing up to avoid an obstacle , in step 2 we will first look downwards (-90)... And if we were descending while BendyRuler was active, in step 2 we will look up (+90) first. \r\nHowever, this does require some additional logic and messing around. I have completed the rest the changes that you have asked, do you like this new logic, or do you have something else in mind?"", 'comment_created': datetime.datetime(2020, 8, 6, 19, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 466788489, 'comment_body': ""I think that logic makes sense.  My first thought was that we should look directly towards the destination (i.e. if the vehicle is at 1 then it looks down and forward towards the destination) but we never fly vertically diagonally because we're unlikely to have a sonar pointing in that direction so I think looking down is the only option."", 'comment_created': datetime.datetime(2020, 8, 7, 2, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 475283598, 'comment_body': 'got a little bit of extra whitespace at the end of this line..', 'comment_created': datetime.datetime(2020, 8, 23, 23, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': 'de0ae1532055c67ac9371365e34ac2e870ae9e8b', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b54aa35f921de9dca55b7e92581f1f37c95de236', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9865473ffb838e1152e8ae65be0ee23c9093c94b', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ef7b9af899d4da1b10783cfe73c87c927e49e7f', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
442472049,AC_Avoid: Extend BendyRuler functionality to search for vertical paths - Try 2,"A lot of things have changed for BendyRuler since I started working on it.. So it was just easier to start a new PR from where I left in #14623 
Testing evidence can be seen in that PR itself. 
",True,14726,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14726,https://github.com/ArduPilot/ardupilot/pull/14726,closed,283,25,11,4,4,21,0,0,[],2020-07-01 06:24:36+00:00,2020-08-23 23:53:22+00:00,4642126.0,"53 days, 17:28:46","[{'comment_id': 448147283, 'comment_body': 'We probably need to move this down one line..', 'comment_created': datetime.datetime(2020, 7, 1, 6, 40, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462093606, 'comment_body': ""Let's make sure this doesn't appear for Rover"", 'comment_created': datetime.datetime(2020, 7, 29, 7, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465670313, 'comment_body': 'As mentioned yesterday, could we make a definition at the top of this .cpp file called something like below and then use it in place of, ""#if APM_BUILD_TYPE(APM_BUILD_ArduCopter)"".  It\'s a non-functional change and I think this will make it more obvious to future developers that this ""switch"" exists.  Without it I can imagine that plane or sub developers may lose time trying to figure out why they can\'t get vertical bendyruler working.\r\n\r\n#define VERTICAL_ENABLED  APM_BUILD_TYPE(APM_BUILD_ArduCopter)', 'comment_created': datetime.datetime(2020, 8, 5, 11, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465673114, 'comment_body': 'maybe move the get_type() method to be right under the enum definition.  not a blocker of course.', 'comment_created': datetime.datetime(2020, 8, 5, 11, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465674819, 'comment_body': ""don't really need the break here I think.  It does no harm though either."", 'comment_created': datetime.datetime(2020, 8, 5, 11, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465675286, 'comment_body': 'this last line can never be reached I think.  Again it does no harm though and perhaps the compiler will complain without it.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465676481, 'comment_body': 'this becomes a fall through on non-Copter builds so I\'m a little surprised that we don\'t need to have the, ""//  FALLTHROUGH"" line in here.  Still, Is suspect the fall through is just for editors and the compilers don\'t actually care.  I guess you could add an #else and then add a ""// FALLTHROUGH"" but perhaps that\'s just more confusing.  Not a blocker in any case.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465677631, 'comment_body': 'I would call this variable ""ret"" or ""success"" but again not a blocker.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465679417, 'comment_body': 'let\'s rename ""limit"" to ""angular_limit"" or something like that.  In any case, having this temp variable is better than what the existing horizontal equivalent does.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 8, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465679909, 'comment_body': 'nitpick: maybe put some spaces after the commas.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465682135, 'comment_body': 'it\'s an existing issue for the horizontal equivalent but in any case let\'s fix this comment to say ""obstacles"" instead of  ""fence"".', 'comment_created': datetime.datetime(2020, 8, 5, 12, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465683828, 'comment_body': ""We don't normally use this pattern, instead probably more consistent to just use an if then else."", 'comment_created': datetime.datetime(2020, 8, 5, 12, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465686109, 'comment_body': 'I think we shouldn\'t use the word, ""bearing"" in this case because normally the word refers to a horizontal bearing.  Instead let\'s just use ""angle"" or similar.\r\n\r\nEDIT: I think we should rename ""vertical_bearing"" to ""pitch"".  We need to be careful about the convention though. I think in AP, a pitch of 90 is up.  -90 is downwards.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465688452, 'comment_body': 'As you\'ve mentioned before it\'s slightly odd to use the ""distance_to_dest"" which is really a horizontal distance but I think it\'s OK.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 26, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465692411, 'comment_body': ""Ok, finally a real question.. does this correctly turn off avoidance in the situation below?  I.e. will it turn off avoidance when the vehicle reaches 2?  or will it prematurely turn off when it reaches 1?  I'm just slightly concerned that the 2nd probe's bearing is directly towards the final destination horizontally but perhaps not vertically?\r\n![image](https://user-images.githubusercontent.com/1498098/89413020-068f2500-d763-11ea-87a5-6fa3e843d037.png)\r\n"", 'comment_created': datetime.datetime(2020, 8, 5, 12, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465697573, 'comment_body': ""let's get rid of the extra spaces on either side of the arrow"", 'comment_created': datetime.datetime(2020, 8, 5, 12, 42, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465697751, 'comment_body': 'little extra space after the ::', 'comment_created': datetime.datetime(2020, 8, 5, 12, 42, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465699133, 'comment_body': 'as above let\'s rename ""target_vert_bearing"" to ""target_pitch""', 'comment_created': datetime.datetime(2020, 8, 5, 12, 45, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 466626402, 'comment_body': ""@rmackay9 thanks for pointing this out to me, I missed it! \r\nYes you're correct, so what my PR will do is, climb till it clears of the margin to the obstacle.. So it will turn off avoidance at 1. In simulations and real life testing this seemed to work out great. I have been working towards a fix where, if we were climbing up to avoid an obstacle , in step 2 we will first look downwards (-90)... And if we were descending while BendyRuler was active, in step 2 we will look up (+90) first. \r\nHowever, this does require some additional logic and messing around. I have completed the rest the changes that you have asked, do you like this new logic, or do you have something else in mind?"", 'comment_created': datetime.datetime(2020, 8, 6, 19, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 466788489, 'comment_body': ""I think that logic makes sense.  My first thought was that we should look directly towards the destination (i.e. if the vehicle is at 1 then it looks down and forward towards the destination) but we never fly vertically diagonally because we're unlikely to have a sonar pointing in that direction so I think looking down is the only option."", 'comment_created': datetime.datetime(2020, 8, 7, 2, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 475283598, 'comment_body': 'got a little bit of extra whitespace at the end of this line..', 'comment_created': datetime.datetime(2020, 8, 23, 23, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': 'de0ae1532055c67ac9371365e34ac2e870ae9e8b', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b54aa35f921de9dca55b7e92581f1f37c95de236', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9865473ffb838e1152e8ae65be0ee23c9093c94b', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ef7b9af899d4da1b10783cfe73c87c927e49e7f', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
442472049,AC_Avoid: Extend BendyRuler functionality to search for vertical paths - Try 2,"A lot of things have changed for BendyRuler since I started working on it.. So it was just easier to start a new PR from where I left in #14623 
Testing evidence can be seen in that PR itself. 
",True,14726,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14726,https://github.com/ArduPilot/ardupilot/pull/14726,closed,283,25,11,4,4,21,0,0,[],2020-07-01 06:24:36+00:00,2020-08-23 23:53:22+00:00,4642126.0,"53 days, 17:28:46","[{'comment_id': 448147283, 'comment_body': 'We probably need to move this down one line..', 'comment_created': datetime.datetime(2020, 7, 1, 6, 40, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462093606, 'comment_body': ""Let's make sure this doesn't appear for Rover"", 'comment_created': datetime.datetime(2020, 7, 29, 7, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465670313, 'comment_body': 'As mentioned yesterday, could we make a definition at the top of this .cpp file called something like below and then use it in place of, ""#if APM_BUILD_TYPE(APM_BUILD_ArduCopter)"".  It\'s a non-functional change and I think this will make it more obvious to future developers that this ""switch"" exists.  Without it I can imagine that plane or sub developers may lose time trying to figure out why they can\'t get vertical bendyruler working.\r\n\r\n#define VERTICAL_ENABLED  APM_BUILD_TYPE(APM_BUILD_ArduCopter)', 'comment_created': datetime.datetime(2020, 8, 5, 11, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465673114, 'comment_body': 'maybe move the get_type() method to be right under the enum definition.  not a blocker of course.', 'comment_created': datetime.datetime(2020, 8, 5, 11, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465674819, 'comment_body': ""don't really need the break here I think.  It does no harm though either."", 'comment_created': datetime.datetime(2020, 8, 5, 11, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465675286, 'comment_body': 'this last line can never be reached I think.  Again it does no harm though and perhaps the compiler will complain without it.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465676481, 'comment_body': 'this becomes a fall through on non-Copter builds so I\'m a little surprised that we don\'t need to have the, ""//  FALLTHROUGH"" line in here.  Still, Is suspect the fall through is just for editors and the compilers don\'t actually care.  I guess you could add an #else and then add a ""// FALLTHROUGH"" but perhaps that\'s just more confusing.  Not a blocker in any case.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465677631, 'comment_body': 'I would call this variable ""ret"" or ""success"" but again not a blocker.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465679417, 'comment_body': 'let\'s rename ""limit"" to ""angular_limit"" or something like that.  In any case, having this temp variable is better than what the existing horizontal equivalent does.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 8, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465679909, 'comment_body': 'nitpick: maybe put some spaces after the commas.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465682135, 'comment_body': 'it\'s an existing issue for the horizontal equivalent but in any case let\'s fix this comment to say ""obstacles"" instead of  ""fence"".', 'comment_created': datetime.datetime(2020, 8, 5, 12, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465683828, 'comment_body': ""We don't normally use this pattern, instead probably more consistent to just use an if then else."", 'comment_created': datetime.datetime(2020, 8, 5, 12, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465686109, 'comment_body': 'I think we shouldn\'t use the word, ""bearing"" in this case because normally the word refers to a horizontal bearing.  Instead let\'s just use ""angle"" or similar.\r\n\r\nEDIT: I think we should rename ""vertical_bearing"" to ""pitch"".  We need to be careful about the convention though. I think in AP, a pitch of 90 is up.  -90 is downwards.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465688452, 'comment_body': 'As you\'ve mentioned before it\'s slightly odd to use the ""distance_to_dest"" which is really a horizontal distance but I think it\'s OK.', 'comment_created': datetime.datetime(2020, 8, 5, 12, 26, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465692411, 'comment_body': ""Ok, finally a real question.. does this correctly turn off avoidance in the situation below?  I.e. will it turn off avoidance when the vehicle reaches 2?  or will it prematurely turn off when it reaches 1?  I'm just slightly concerned that the 2nd probe's bearing is directly towards the final destination horizontally but perhaps not vertically?\r\n![image](https://user-images.githubusercontent.com/1498098/89413020-068f2500-d763-11ea-87a5-6fa3e843d037.png)\r\n"", 'comment_created': datetime.datetime(2020, 8, 5, 12, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465697573, 'comment_body': ""let's get rid of the extra spaces on either side of the arrow"", 'comment_created': datetime.datetime(2020, 8, 5, 12, 42, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465697751, 'comment_body': 'little extra space after the ::', 'comment_created': datetime.datetime(2020, 8, 5, 12, 42, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 465699133, 'comment_body': 'as above let\'s rename ""target_vert_bearing"" to ""target_pitch""', 'comment_created': datetime.datetime(2020, 8, 5, 12, 45, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 466626402, 'comment_body': ""@rmackay9 thanks for pointing this out to me, I missed it! \r\nYes you're correct, so what my PR will do is, climb till it clears of the margin to the obstacle.. So it will turn off avoidance at 1. In simulations and real life testing this seemed to work out great. I have been working towards a fix where, if we were climbing up to avoid an obstacle , in step 2 we will first look downwards (-90)... And if we were descending while BendyRuler was active, in step 2 we will look up (+90) first. \r\nHowever, this does require some additional logic and messing around. I have completed the rest the changes that you have asked, do you like this new logic, or do you have something else in mind?"", 'comment_created': datetime.datetime(2020, 8, 6, 19, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 466788489, 'comment_body': ""I think that logic makes sense.  My first thought was that we should look directly towards the destination (i.e. if the vehicle is at 1 then it looks down and forward towards the destination) but we never fly vertically diagonally because we're unlikely to have a sonar pointing in that direction so I think looking down is the only option."", 'comment_created': datetime.datetime(2020, 8, 7, 2, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 475283598, 'comment_body': 'got a little bit of extra whitespace at the end of this line..', 'comment_created': datetime.datetime(2020, 8, 23, 23, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': 'de0ae1532055c67ac9371365e34ac2e870ae9e8b', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b54aa35f921de9dca55b7e92581f1f37c95de236', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9865473ffb838e1152e8ae65be0ee23c9093c94b', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ef7b9af899d4da1b10783cfe73c87c927e49e7f', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
433990359,AC_Avoid: Improve BendyRuler hesitancy by avoiding significant bearing changes,"This PR is a (maybe partial) fix for #11961
This introduces two new parameters into BendyRuler (I am open to name changes, these might be a bit misleading?): 

- OA_BR_RATIO
- OA_BR_ANGLE

The change in the algorithm is that now BendyRuler avoids switching course over OA_BENDY_ANGLE unless the ratio between current margin to obstacle/fence and the newly calculated margin is at least OA_BENDY_RATIO or more. **This improves the BendyRulers hesitancy and reliability significantly in several cases**. The parameters will need to be tuned according to use case and sensor type. 

**Testing** (Please see the youtube videos at 1.5x) :
1. https://youtu.be/XXGU1xnQheQ - Testing in Rover SITL + Morse in front of a large wall
2. Https://youtu.be/hxRmumhc7GE - Slightly complex E shaped fence in SITL Copter - I have printed how many times the vehicle wanted to switch over but did not
3. https://youtu.be/buDGtFLylKo - SITL before vs after for copter

Note: I had set FENCE_MARGIN param as 5m instead of default 2.... Which gave much better results

EDIT: FIXED. BendyRuler now has its own parameter table thanks to @peterbarker!
I also tried to make BendyRuler's own set of parameter table using the main AP_OAPathPlanner.cpp  `AP_SUBGROUPINFO`. But it just was not working out, so I gave up after a while. The parameter was visible when I searched it in MavProxy but the changes would not reflect, and it stayed at default whenever I tried to change it from the terminal.
It'll be great if someone could help me with that.
Thanks!",True,14595,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14595,https://github.com/ArduPilot/ardupilot/pull/14595,closed,139,34,7,2,11,27,2,0,"[{'name': 'Library'}, {'name': 'GSoC'}]",2020-06-13 10:43:00+00:00,2020-06-24 02:42:21+00:00,921561.0,"10 days, 15:59:21","[{'comment_id': 439736195, 'comment_body': 'if (margin < (_bendy_ratio * current_course_margin)) {', 'comment_created': datetime.datetime(2020, 6, 13, 12, 38, 21, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 439736199, 'comment_body': 'indent', 'comment_created': datetime.datetime(2020, 6, 13, 12, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 439736257, 'comment_body': 'maybe is_positive(_bendy_ratio) to protect against negative values', 'comment_created': datetime.datetime(2020, 6, 13, 12, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 439737750, 'comment_body': 'I am already checking for that in AP_OABendyRuler.h while importing the value from OAPathPlanner.cpp', 'comment_created': datetime.datetime(2020, 6, 13, 13, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 441319513, 'comment_body': ""those two variable aren't really needed"", 'comment_created': datetime.datetime(2020, 6, 17, 6, 53, 33, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 443274923, 'comment_body': 'small white space thing, normally we put a space after the ""//"" and the next word.  Sorry to be annoying.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443274969, 'comment_body': 'small spelling typo in ""avoidance""', 'comment_created': datetime.datetime(2020, 6, 22, 0, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275156, 'comment_body': 'let\'s not use the word, ""avoid_"" for this variable and related function because it\'s too easy to mix up with ""avoidance"" (i.e. avoiding an object).  Instead let\'s call it ""ignore_change"" or ""ignore_bearing_change"".', 'comment_created': datetime.datetime(2020, 6, 22, 0, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275319, 'comment_body': 'let\'s remove all the ""const"" from the float and boolean variables.. sorry, it just makes the argument list too long.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275405, 'comment_body': 'small whitespace issue, add a space after ""if""', 'comment_created': datetime.datetime(2020, 6, 22, 0, 55, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275641, 'comment_body': 'hmm.. this function has the side effect of updating the _stored_bearing variable.  We pass in lots of other arguments but not this one.  I think we should either make this method a const and pass in everything it needs or not pass in hardly anything and have the function pull what it needs from the global variables.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275759, 'comment_body': 'as mentioned let\'s rename this to ""ignore_bearing_change"" or ""resist_bearing_change"" or something like that.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275971, 'comment_body': 'We should add a comment so say that index ""2"" was used by LOOKAHEAD.  This warns future developers that they can\'t use ""2"" because if they did then users who upgraded their firmware could get parameter corruption.  It\'s not really severe corruption but a variable that used index 2 could get a funny value in it.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 0, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276524, 'comment_body': 'sorry to be so picky but could we move this new bool to the end?  If possible I like to keep the ""desired"" and ""actual"" columns next to each other.  I agree we should add this new value because it will help us with support but I don\'t think we will need to check it that often... so moving it to the end should be fine.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276633, 'comment_body': '.. or maybe instead of moving it to the end, just move it after the next ""Yaw"" column.  Then all the angle related values are together but the desired and actual yaw values are together.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276836, 'comment_body': 'In the DisplayName we should put the feature at the beginning.  So let\'s start with ""Object Avoidance ... "" or ""BendyRuler.."".', 'comment_created': datetime.datetime(2020, 6, 22, 1, 6, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276950, 'comment_body': 'I think the Param value is not quite correct, it should be ""RATIO"" (or whatever is after ""AP_GROUPINFO("").', 'comment_created': datetime.datetime(2020, 6, 22, 1, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443277247, 'comment_body': 'If possible I try to not use different words for the same thing to reduce user confusion.  So for example, ""yaw"", ""bearing"", ""heading"" and ""course"" are all used interchangeably.  Let\'s stick as much as possible to just one word.  In general we use ""Yaw"" but it\'s possible that BendyRuler uses another word.  I don\'t mind too much which one we pick but let\'s try and pick just one word for the UI part at least.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 9, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443277891, 'comment_body': 'For the new parameter names, how about OA_BR_CONT_ANGLE and OA_BR_CONT_RATIO? ""CONT"" stands for ""Continue"".  I thought of using ""RESI"" for ""resist"" but ""continue"" is a positive version of this.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443278363, 'comment_body': 'the ""_stored_bearing"" name is ok but you could also call it ""_bearing_last"" or ""_bearing_prev"".  I\'m just thinking that we called another variables ""_destination_prev"" to indicate the same sort of thing so might as well make the naming convention consistent in this file.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443761234, 'comment_body': ""Can't really do much here since I am passing these values by reference and things like destination, current_loc were passed to BendyRuler as a const. I removed const from where ever I could.\r\nIf you want I can pass them as a direct variable instead?"", 'comment_created': datetime.datetime(2020, 6, 22, 18, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 443808389, 'comment_body': ""We shouldn't pass standard types as const reference normally, specially for boolean that means passing the pointer address that is bigger that the value..."", 'comment_created': datetime.datetime(2020, 6, 22, 20, 31, 7, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 443851780, 'comment_body': 'Alright, fixed! Thanks ', 'comment_created': datetime.datetime(2020, 6, 22, 22, 4, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 443852859, 'comment_body': ""I am now passing everything as arguments.... But the problem is I can't make this method a const because we call a non-const method `calc_avoidance_margin()` from our new method. "", 'comment_created': datetime.datetime(2020, 6, 22, 22, 7, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 444020785, 'comment_body': ""@rishabsingh3003, it looks to me like all these functions can be made const.  It was probably an oversight that they weren't made const initially.\r\n\r\n- calc_avoidance_margin\r\n- calc_margin_from_circular_fence\r\n- calc_margin_from_object_database\r\n- calc_margin_from_inclusion_and_exclusion_polygons\r\n- calc_margin_from_inclusion_and_exclusion_circles"", 'comment_created': datetime.datetime(2020, 6, 23, 7, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 444026754, 'comment_body': 'sorry to continue to be annoying but let\'s call this field in the structure and argument ""resist change"" (or similar) instead of ""ignore change"".  We\'ve used ResChg for the onboard log message\'s field name', 'comment_created': datetime.datetime(2020, 6, 23, 7, 45, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 444141547, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 23, 11, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}]","[{'commit_sha': 'c96a02d86cd9e87a85a29e10824c3dcfd5bb0cfc', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '709222aea44d929cd9169b50a2d8d035e60c7b1b', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
433990359,AC_Avoid: Improve BendyRuler hesitancy by avoiding significant bearing changes,"This PR is a (maybe partial) fix for #11961
This introduces two new parameters into BendyRuler (I am open to name changes, these might be a bit misleading?): 

- OA_BR_RATIO
- OA_BR_ANGLE

The change in the algorithm is that now BendyRuler avoids switching course over OA_BENDY_ANGLE unless the ratio between current margin to obstacle/fence and the newly calculated margin is at least OA_BENDY_RATIO or more. **This improves the BendyRulers hesitancy and reliability significantly in several cases**. The parameters will need to be tuned according to use case and sensor type. 

**Testing** (Please see the youtube videos at 1.5x) :
1. https://youtu.be/XXGU1xnQheQ - Testing in Rover SITL + Morse in front of a large wall
2. Https://youtu.be/hxRmumhc7GE - Slightly complex E shaped fence in SITL Copter - I have printed how many times the vehicle wanted to switch over but did not
3. https://youtu.be/buDGtFLylKo - SITL before vs after for copter

Note: I had set FENCE_MARGIN param as 5m instead of default 2.... Which gave much better results

EDIT: FIXED. BendyRuler now has its own parameter table thanks to @peterbarker!
I also tried to make BendyRuler's own set of parameter table using the main AP_OAPathPlanner.cpp  `AP_SUBGROUPINFO`. But it just was not working out, so I gave up after a while. The parameter was visible when I searched it in MavProxy but the changes would not reflect, and it stayed at default whenever I tried to change it from the terminal.
It'll be great if someone could help me with that.
Thanks!",True,14595,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14595,https://github.com/ArduPilot/ardupilot/pull/14595,closed,139,34,7,2,11,27,2,0,"[{'name': 'Library'}, {'name': 'GSoC'}]",2020-06-13 10:43:00+00:00,2020-06-24 02:42:21+00:00,921561.0,"10 days, 15:59:21","[{'comment_id': 439736195, 'comment_body': 'if (margin < (_bendy_ratio * current_course_margin)) {', 'comment_created': datetime.datetime(2020, 6, 13, 12, 38, 21, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 439736199, 'comment_body': 'indent', 'comment_created': datetime.datetime(2020, 6, 13, 12, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 439736257, 'comment_body': 'maybe is_positive(_bendy_ratio) to protect against negative values', 'comment_created': datetime.datetime(2020, 6, 13, 12, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 439737750, 'comment_body': 'I am already checking for that in AP_OABendyRuler.h while importing the value from OAPathPlanner.cpp', 'comment_created': datetime.datetime(2020, 6, 13, 13, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 441319513, 'comment_body': ""those two variable aren't really needed"", 'comment_created': datetime.datetime(2020, 6, 17, 6, 53, 33, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 443274923, 'comment_body': 'small white space thing, normally we put a space after the ""//"" and the next word.  Sorry to be annoying.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443274969, 'comment_body': 'small spelling typo in ""avoidance""', 'comment_created': datetime.datetime(2020, 6, 22, 0, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275156, 'comment_body': 'let\'s not use the word, ""avoid_"" for this variable and related function because it\'s too easy to mix up with ""avoidance"" (i.e. avoiding an object).  Instead let\'s call it ""ignore_change"" or ""ignore_bearing_change"".', 'comment_created': datetime.datetime(2020, 6, 22, 0, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275319, 'comment_body': 'let\'s remove all the ""const"" from the float and boolean variables.. sorry, it just makes the argument list too long.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275405, 'comment_body': 'small whitespace issue, add a space after ""if""', 'comment_created': datetime.datetime(2020, 6, 22, 0, 55, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275641, 'comment_body': 'hmm.. this function has the side effect of updating the _stored_bearing variable.  We pass in lots of other arguments but not this one.  I think we should either make this method a const and pass in everything it needs or not pass in hardly anything and have the function pull what it needs from the global variables.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275759, 'comment_body': 'as mentioned let\'s rename this to ""ignore_bearing_change"" or ""resist_bearing_change"" or something like that.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275971, 'comment_body': 'We should add a comment so say that index ""2"" was used by LOOKAHEAD.  This warns future developers that they can\'t use ""2"" because if they did then users who upgraded their firmware could get parameter corruption.  It\'s not really severe corruption but a variable that used index 2 could get a funny value in it.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 0, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276524, 'comment_body': 'sorry to be so picky but could we move this new bool to the end?  If possible I like to keep the ""desired"" and ""actual"" columns next to each other.  I agree we should add this new value because it will help us with support but I don\'t think we will need to check it that often... so moving it to the end should be fine.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276633, 'comment_body': '.. or maybe instead of moving it to the end, just move it after the next ""Yaw"" column.  Then all the angle related values are together but the desired and actual yaw values are together.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276836, 'comment_body': 'In the DisplayName we should put the feature at the beginning.  So let\'s start with ""Object Avoidance ... "" or ""BendyRuler.."".', 'comment_created': datetime.datetime(2020, 6, 22, 1, 6, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276950, 'comment_body': 'I think the Param value is not quite correct, it should be ""RATIO"" (or whatever is after ""AP_GROUPINFO("").', 'comment_created': datetime.datetime(2020, 6, 22, 1, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443277247, 'comment_body': 'If possible I try to not use different words for the same thing to reduce user confusion.  So for example, ""yaw"", ""bearing"", ""heading"" and ""course"" are all used interchangeably.  Let\'s stick as much as possible to just one word.  In general we use ""Yaw"" but it\'s possible that BendyRuler uses another word.  I don\'t mind too much which one we pick but let\'s try and pick just one word for the UI part at least.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 9, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443277891, 'comment_body': 'For the new parameter names, how about OA_BR_CONT_ANGLE and OA_BR_CONT_RATIO? ""CONT"" stands for ""Continue"".  I thought of using ""RESI"" for ""resist"" but ""continue"" is a positive version of this.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443278363, 'comment_body': 'the ""_stored_bearing"" name is ok but you could also call it ""_bearing_last"" or ""_bearing_prev"".  I\'m just thinking that we called another variables ""_destination_prev"" to indicate the same sort of thing so might as well make the naming convention consistent in this file.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443761234, 'comment_body': ""Can't really do much here since I am passing these values by reference and things like destination, current_loc were passed to BendyRuler as a const. I removed const from where ever I could.\r\nIf you want I can pass them as a direct variable instead?"", 'comment_created': datetime.datetime(2020, 6, 22, 18, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 443808389, 'comment_body': ""We shouldn't pass standard types as const reference normally, specially for boolean that means passing the pointer address that is bigger that the value..."", 'comment_created': datetime.datetime(2020, 6, 22, 20, 31, 7, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 443851780, 'comment_body': 'Alright, fixed! Thanks ', 'comment_created': datetime.datetime(2020, 6, 22, 22, 4, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 443852859, 'comment_body': ""I am now passing everything as arguments.... But the problem is I can't make this method a const because we call a non-const method `calc_avoidance_margin()` from our new method. "", 'comment_created': datetime.datetime(2020, 6, 22, 22, 7, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 444020785, 'comment_body': ""@rishabsingh3003, it looks to me like all these functions can be made const.  It was probably an oversight that they weren't made const initially.\r\n\r\n- calc_avoidance_margin\r\n- calc_margin_from_circular_fence\r\n- calc_margin_from_object_database\r\n- calc_margin_from_inclusion_and_exclusion_polygons\r\n- calc_margin_from_inclusion_and_exclusion_circles"", 'comment_created': datetime.datetime(2020, 6, 23, 7, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 444026754, 'comment_body': 'sorry to continue to be annoying but let\'s call this field in the structure and argument ""resist change"" (or similar) instead of ""ignore change"".  We\'ve used ResChg for the onboard log message\'s field name', 'comment_created': datetime.datetime(2020, 6, 23, 7, 45, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 444141547, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 23, 11, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}]","[{'commit_sha': 'c96a02d86cd9e87a85a29e10824c3dcfd5bb0cfc', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '709222aea44d929cd9169b50a2d8d035e60c7b1b', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
433990359,AC_Avoid: Improve BendyRuler hesitancy by avoiding significant bearing changes,"This PR is a (maybe partial) fix for #11961
This introduces two new parameters into BendyRuler (I am open to name changes, these might be a bit misleading?): 

- OA_BR_RATIO
- OA_BR_ANGLE

The change in the algorithm is that now BendyRuler avoids switching course over OA_BENDY_ANGLE unless the ratio between current margin to obstacle/fence and the newly calculated margin is at least OA_BENDY_RATIO or more. **This improves the BendyRulers hesitancy and reliability significantly in several cases**. The parameters will need to be tuned according to use case and sensor type. 

**Testing** (Please see the youtube videos at 1.5x) :
1. https://youtu.be/XXGU1xnQheQ - Testing in Rover SITL + Morse in front of a large wall
2. Https://youtu.be/hxRmumhc7GE - Slightly complex E shaped fence in SITL Copter - I have printed how many times the vehicle wanted to switch over but did not
3. https://youtu.be/buDGtFLylKo - SITL before vs after for copter

Note: I had set FENCE_MARGIN param as 5m instead of default 2.... Which gave much better results

EDIT: FIXED. BendyRuler now has its own parameter table thanks to @peterbarker!
I also tried to make BendyRuler's own set of parameter table using the main AP_OAPathPlanner.cpp  `AP_SUBGROUPINFO`. But it just was not working out, so I gave up after a while. The parameter was visible when I searched it in MavProxy but the changes would not reflect, and it stayed at default whenever I tried to change it from the terminal.
It'll be great if someone could help me with that.
Thanks!",True,14595,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14595,https://github.com/ArduPilot/ardupilot/pull/14595,closed,139,34,7,2,11,27,2,0,"[{'name': 'Library'}, {'name': 'GSoC'}]",2020-06-13 10:43:00+00:00,2020-06-24 02:42:21+00:00,921561.0,"10 days, 15:59:21","[{'comment_id': 439736195, 'comment_body': 'if (margin < (_bendy_ratio * current_course_margin)) {', 'comment_created': datetime.datetime(2020, 6, 13, 12, 38, 21, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 439736199, 'comment_body': 'indent', 'comment_created': datetime.datetime(2020, 6, 13, 12, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 439736257, 'comment_body': 'maybe is_positive(_bendy_ratio) to protect against negative values', 'comment_created': datetime.datetime(2020, 6, 13, 12, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 439737750, 'comment_body': 'I am already checking for that in AP_OABendyRuler.h while importing the value from OAPathPlanner.cpp', 'comment_created': datetime.datetime(2020, 6, 13, 13, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 441319513, 'comment_body': ""those two variable aren't really needed"", 'comment_created': datetime.datetime(2020, 6, 17, 6, 53, 33, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 443274923, 'comment_body': 'small white space thing, normally we put a space after the ""//"" and the next word.  Sorry to be annoying.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443274969, 'comment_body': 'small spelling typo in ""avoidance""', 'comment_created': datetime.datetime(2020, 6, 22, 0, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275156, 'comment_body': 'let\'s not use the word, ""avoid_"" for this variable and related function because it\'s too easy to mix up with ""avoidance"" (i.e. avoiding an object).  Instead let\'s call it ""ignore_change"" or ""ignore_bearing_change"".', 'comment_created': datetime.datetime(2020, 6, 22, 0, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275319, 'comment_body': 'let\'s remove all the ""const"" from the float and boolean variables.. sorry, it just makes the argument list too long.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 54, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275405, 'comment_body': 'small whitespace issue, add a space after ""if""', 'comment_created': datetime.datetime(2020, 6, 22, 0, 55, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275641, 'comment_body': 'hmm.. this function has the side effect of updating the _stored_bearing variable.  We pass in lots of other arguments but not this one.  I think we should either make this method a const and pass in everything it needs or not pass in hardly anything and have the function pull what it needs from the global variables.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275759, 'comment_body': 'as mentioned let\'s rename this to ""ignore_bearing_change"" or ""resist_bearing_change"" or something like that.', 'comment_created': datetime.datetime(2020, 6, 22, 0, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443275971, 'comment_body': 'We should add a comment so say that index ""2"" was used by LOOKAHEAD.  This warns future developers that they can\'t use ""2"" because if they did then users who upgraded their firmware could get parameter corruption.  It\'s not really severe corruption but a variable that used index 2 could get a funny value in it.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 0, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276524, 'comment_body': 'sorry to be so picky but could we move this new bool to the end?  If possible I like to keep the ""desired"" and ""actual"" columns next to each other.  I agree we should add this new value because it will help us with support but I don\'t think we will need to check it that often... so moving it to the end should be fine.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276633, 'comment_body': '.. or maybe instead of moving it to the end, just move it after the next ""Yaw"" column.  Then all the angle related values are together but the desired and actual yaw values are together.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276836, 'comment_body': 'In the DisplayName we should put the feature at the beginning.  So let\'s start with ""Object Avoidance ... "" or ""BendyRuler.."".', 'comment_created': datetime.datetime(2020, 6, 22, 1, 6, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443276950, 'comment_body': 'I think the Param value is not quite correct, it should be ""RATIO"" (or whatever is after ""AP_GROUPINFO("").', 'comment_created': datetime.datetime(2020, 6, 22, 1, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443277247, 'comment_body': 'If possible I try to not use different words for the same thing to reduce user confusion.  So for example, ""yaw"", ""bearing"", ""heading"" and ""course"" are all used interchangeably.  Let\'s stick as much as possible to just one word.  In general we use ""Yaw"" but it\'s possible that BendyRuler uses another word.  I don\'t mind too much which one we pick but let\'s try and pick just one word for the UI part at least.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 9, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443277891, 'comment_body': 'For the new parameter names, how about OA_BR_CONT_ANGLE and OA_BR_CONT_RATIO? ""CONT"" stands for ""Continue"".  I thought of using ""RESI"" for ""resist"" but ""continue"" is a positive version of this.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443278363, 'comment_body': 'the ""_stored_bearing"" name is ok but you could also call it ""_bearing_last"" or ""_bearing_prev"".  I\'m just thinking that we called another variables ""_destination_prev"" to indicate the same sort of thing so might as well make the naming convention consistent in this file.', 'comment_created': datetime.datetime(2020, 6, 22, 1, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 443761234, 'comment_body': ""Can't really do much here since I am passing these values by reference and things like destination, current_loc were passed to BendyRuler as a const. I removed const from where ever I could.\r\nIf you want I can pass them as a direct variable instead?"", 'comment_created': datetime.datetime(2020, 6, 22, 18, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 443808389, 'comment_body': ""We shouldn't pass standard types as const reference normally, specially for boolean that means passing the pointer address that is bigger that the value..."", 'comment_created': datetime.datetime(2020, 6, 22, 20, 31, 7, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 443851780, 'comment_body': 'Alright, fixed! Thanks ', 'comment_created': datetime.datetime(2020, 6, 22, 22, 4, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 443852859, 'comment_body': ""I am now passing everything as arguments.... But the problem is I can't make this method a const because we call a non-const method `calc_avoidance_margin()` from our new method. "", 'comment_created': datetime.datetime(2020, 6, 22, 22, 7, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 444020785, 'comment_body': ""@rishabsingh3003, it looks to me like all these functions can be made const.  It was probably an oversight that they weren't made const initially.\r\n\r\n- calc_avoidance_margin\r\n- calc_margin_from_circular_fence\r\n- calc_margin_from_object_database\r\n- calc_margin_from_inclusion_and_exclusion_polygons\r\n- calc_margin_from_inclusion_and_exclusion_circles"", 'comment_created': datetime.datetime(2020, 6, 23, 7, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 444026754, 'comment_body': 'sorry to continue to be annoying but let\'s call this field in the structure and argument ""resist change"" (or similar) instead of ""ignore change"".  We\'ve used ResChg for the onboard log message\'s field name', 'comment_created': datetime.datetime(2020, 6, 23, 7, 45, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 444141547, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 6, 23, 11, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}]","[{'commit_sha': 'c96a02d86cd9e87a85a29e10824c3dcfd5bb0cfc', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '709222aea44d929cd9169b50a2d8d035e60c7b1b', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
421284751,Rover: Add param to reset WP origin while recovering from BendyRuler,"This PR fixes https://github.com/ArduPilot/ardupilot/issues/11565

I have added a parameter (OA_RESET_ORGIN) in OA library to allow the user if they want to reset the Waypoint origin or not while recovering from Bendy Ruler.
If OA_RESET_ORIGIN is set 0, the behaviour will be as it is in master right now. 
![before](https://user-images.githubusercontent.com/36970042/82551756-6facc680-9b7e-11ea-847c-af0e8be3722a.png)


But if OA_RESET_ORGIN is set to 1, which is the default in this PR, the following happens:
![after](https://user-images.githubusercontent.com/36970042/82551764-72a7b700-9b7e-11ea-90ba-739deba3c840.png)

@rmackay9 please let me know if this is the approach you were looking for. Thanks!",True,14422,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14422,https://github.com/ArduPilot/ardupilot/pull/14422,closed,35,2,3,2,4,8,1,0,[{'name': 'Rover'}],2020-05-21 10:49:28+00:00,2020-05-29 23:55:46+00:00,738378.0,"8 days, 13:06:18","[{'comment_id': 429490617, 'comment_body': 'You cant change this number, it will reset the params to default, leave this as 4 and add the new one in as 5', 'comment_created': datetime.datetime(2020, 5, 22, 23, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 429490780, 'comment_body': 'Maybe a AP_int16 bitmask param? Then you can find 15 other things to switch on and off too!', 'comment_created': datetime.datetime(2020, 5, 22, 23, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 431998611, 'comment_body': 'I have fixed it. Thanks for the catch!', 'comment_created': datetime.datetime(2020, 5, 28, 17, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 431999063, 'comment_body': ""I have left it for now cause it doesn't make too mcuh sense to me but I will ask others and if everyone agrees, i'll do it. Thanks a lot for the review :) "", 'comment_created': datetime.datetime(2020, 5, 28, 17, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 432285354, 'comment_body': ""I'd recommend the param be called _OPTIONS."", 'comment_created': datetime.datetime(2020, 5, 29, 6, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 432660720, 'comment_body': 'might be worth changing to just get_options(), no big deal tho, you can always change it when you add some more', 'comment_created': datetime.datetime(2020, 5, 29, 18, 23, 5, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 432786249, 'comment_body': ""we don't really need this if here but it's OK.. just for next time .. "", 'comment_created': datetime.datetime(2020, 5, 29, 23, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 432808720, 'comment_body': '@rmackay9 I actually had to force push this one as a specific change later because Travis CI was failing , stating ""unused variable"" in a few vehicles', 'comment_created': datetime.datetime(2020, 5, 30, 4, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}]","[{'commit_sha': '694268feb257379ab975772a7d548e36dad130a3', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91abeedd53e66fdb3c5a892213e6a1b8c8dab22f', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
421284751,Rover: Add param to reset WP origin while recovering from BendyRuler,"This PR fixes https://github.com/ArduPilot/ardupilot/issues/11565

I have added a parameter (OA_RESET_ORGIN) in OA library to allow the user if they want to reset the Waypoint origin or not while recovering from Bendy Ruler.
If OA_RESET_ORIGIN is set 0, the behaviour will be as it is in master right now. 
![before](https://user-images.githubusercontent.com/36970042/82551756-6facc680-9b7e-11ea-847c-af0e8be3722a.png)


But if OA_RESET_ORGIN is set to 1, which is the default in this PR, the following happens:
![after](https://user-images.githubusercontent.com/36970042/82551764-72a7b700-9b7e-11ea-90ba-739deba3c840.png)

@rmackay9 please let me know if this is the approach you were looking for. Thanks!",True,14422,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14422,https://github.com/ArduPilot/ardupilot/pull/14422,closed,35,2,3,2,4,8,1,0,[{'name': 'Rover'}],2020-05-21 10:49:28+00:00,2020-05-29 23:55:46+00:00,738378.0,"8 days, 13:06:18","[{'comment_id': 429490617, 'comment_body': 'You cant change this number, it will reset the params to default, leave this as 4 and add the new one in as 5', 'comment_created': datetime.datetime(2020, 5, 22, 23, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 429490780, 'comment_body': 'Maybe a AP_int16 bitmask param? Then you can find 15 other things to switch on and off too!', 'comment_created': datetime.datetime(2020, 5, 22, 23, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 431998611, 'comment_body': 'I have fixed it. Thanks for the catch!', 'comment_created': datetime.datetime(2020, 5, 28, 17, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 431999063, 'comment_body': ""I have left it for now cause it doesn't make too mcuh sense to me but I will ask others and if everyone agrees, i'll do it. Thanks a lot for the review :) "", 'comment_created': datetime.datetime(2020, 5, 28, 17, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 432285354, 'comment_body': ""I'd recommend the param be called _OPTIONS."", 'comment_created': datetime.datetime(2020, 5, 29, 6, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 432660720, 'comment_body': 'might be worth changing to just get_options(), no big deal tho, you can always change it when you add some more', 'comment_created': datetime.datetime(2020, 5, 29, 18, 23, 5, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 432786249, 'comment_body': ""we don't really need this if here but it's OK.. just for next time .. "", 'comment_created': datetime.datetime(2020, 5, 29, 23, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 432808720, 'comment_body': '@rmackay9 I actually had to force push this one as a specific change later because Travis CI was failing , stating ""unused variable"" in a few vehicles', 'comment_created': datetime.datetime(2020, 5, 30, 4, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}]","[{'commit_sha': '694268feb257379ab975772a7d548e36dad130a3', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91abeedd53e66fdb3c5a892213e6a1b8c8dab22f', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
421284751,Rover: Add param to reset WP origin while recovering from BendyRuler,"This PR fixes https://github.com/ArduPilot/ardupilot/issues/11565

I have added a parameter (OA_RESET_ORGIN) in OA library to allow the user if they want to reset the Waypoint origin or not while recovering from Bendy Ruler.
If OA_RESET_ORIGIN is set 0, the behaviour will be as it is in master right now. 
![before](https://user-images.githubusercontent.com/36970042/82551756-6facc680-9b7e-11ea-847c-af0e8be3722a.png)


But if OA_RESET_ORGIN is set to 1, which is the default in this PR, the following happens:
![after](https://user-images.githubusercontent.com/36970042/82551764-72a7b700-9b7e-11ea-90ba-739deba3c840.png)

@rmackay9 please let me know if this is the approach you were looking for. Thanks!",True,14422,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14422,https://github.com/ArduPilot/ardupilot/pull/14422,closed,35,2,3,2,4,8,1,0,[{'name': 'Rover'}],2020-05-21 10:49:28+00:00,2020-05-29 23:55:46+00:00,738378.0,"8 days, 13:06:18","[{'comment_id': 429490617, 'comment_body': 'You cant change this number, it will reset the params to default, leave this as 4 and add the new one in as 5', 'comment_created': datetime.datetime(2020, 5, 22, 23, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 429490780, 'comment_body': 'Maybe a AP_int16 bitmask param? Then you can find 15 other things to switch on and off too!', 'comment_created': datetime.datetime(2020, 5, 22, 23, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 431998611, 'comment_body': 'I have fixed it. Thanks for the catch!', 'comment_created': datetime.datetime(2020, 5, 28, 17, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 431999063, 'comment_body': ""I have left it for now cause it doesn't make too mcuh sense to me but I will ask others and if everyone agrees, i'll do it. Thanks a lot for the review :) "", 'comment_created': datetime.datetime(2020, 5, 28, 17, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 432285354, 'comment_body': ""I'd recommend the param be called _OPTIONS."", 'comment_created': datetime.datetime(2020, 5, 29, 6, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 432660720, 'comment_body': 'might be worth changing to just get_options(), no big deal tho, you can always change it when you add some more', 'comment_created': datetime.datetime(2020, 5, 29, 18, 23, 5, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 432786249, 'comment_body': ""we don't really need this if here but it's OK.. just for next time .. "", 'comment_created': datetime.datetime(2020, 5, 29, 23, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 432808720, 'comment_body': '@rmackay9 I actually had to force push this one as a specific change later because Travis CI was failing , stating ""unused variable"" in a few vehicles', 'comment_created': datetime.datetime(2020, 5, 30, 4, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}]","[{'commit_sha': '694268feb257379ab975772a7d548e36dad130a3', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91abeedd53e66fdb3c5a892213e6a1b8c8dab22f', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
458204639,AC_Avoid: Added new OA type (Dijkstra + BendyRuler fusion),"This PR creates a new OA Type which attempts to fuse Dijkstra and BendyRuler to be used together.
The basic idea is:
1. For WP Navigation through fence, Dijkstra's calculates the shortest path
2. BendyRuler is meanwhile set to only look for Proximity Sensor found obstacles.
3. The mission is run as if it was Normal Dijkstra's, UNTIL a physical obstacle is detected.
4. After that we switch to (Dijkstra's is turned off) BendyRuler type avoidance again (for both fence + obstacles)
5. After the BendyRuler turns off (I,.e path is clear towards destination), Dijkstras is triggered to calculate new path based on deviated current position and Dijkstra's becomes active again (BendyRuler goes back to only looking for physical obstacles).

Testing:
This has been tested on Morse + SITL with fence's and obstacle in between a guided mission
https://www.youtube.com/watch?v=s0z0b2U2fAk",True,14934,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14934,https://github.com/ArduPilot/ardupilot/pull/14934,closed,93,28,5,1,4,3,0,0,[],2020-07-29 05:33:50+00:00,2020-08-26 06:43:47+00:00,2423397.0,"28 days, 1:09:57","[{'comment_id': 462085635, 'comment_body': ""Let's move the curly bracket one line higher to avoid white space"", 'comment_created': datetime.datetime(2020, 7, 29, 7, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 475806321, 'comment_body': 'I have inlcluded this bit as an extra safety check. I found this as a potential bug. Its not really needed in this PR.\r\nWhat happens is, if the two points are the same, `Vector3f::closest_distance_between_line_and_point` returns 0\r\ntherefore the line\r\n`Vector3f::closest_distance_between_line_and_point(start_NEU, end_NEU, point_cm) * 0.01f - item.radius;` would falsely return a negative margin.. Something that can be scary mid flight..', 'comment_created': datetime.datetime(2020, 8, 24, 18, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 477069165, 'comment_body': 'tiny thing but we should have a space after the ""if"".', 'comment_created': datetime.datetime(2020, 8, 26, 6, 43, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': '99132c541d61e78c26d03621898d4c70fab2da14', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
458204639,AC_Avoid: Added new OA type (Dijkstra + BendyRuler fusion),"This PR creates a new OA Type which attempts to fuse Dijkstra and BendyRuler to be used together.
The basic idea is:
1. For WP Navigation through fence, Dijkstra's calculates the shortest path
2. BendyRuler is meanwhile set to only look for Proximity Sensor found obstacles.
3. The mission is run as if it was Normal Dijkstra's, UNTIL a physical obstacle is detected.
4. After that we switch to (Dijkstra's is turned off) BendyRuler type avoidance again (for both fence + obstacles)
5. After the BendyRuler turns off (I,.e path is clear towards destination), Dijkstras is triggered to calculate new path based on deviated current position and Dijkstra's becomes active again (BendyRuler goes back to only looking for physical obstacles).

Testing:
This has been tested on Morse + SITL with fence's and obstacle in between a guided mission
https://www.youtube.com/watch?v=s0z0b2U2fAk",True,14934,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14934,https://github.com/ArduPilot/ardupilot/pull/14934,closed,93,28,5,1,4,3,0,0,[],2020-07-29 05:33:50+00:00,2020-08-26 06:43:47+00:00,2423397.0,"28 days, 1:09:57","[{'comment_id': 462085635, 'comment_body': ""Let's move the curly bracket one line higher to avoid white space"", 'comment_created': datetime.datetime(2020, 7, 29, 7, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 475806321, 'comment_body': 'I have inlcluded this bit as an extra safety check. I found this as a potential bug. Its not really needed in this PR.\r\nWhat happens is, if the two points are the same, `Vector3f::closest_distance_between_line_and_point` returns 0\r\ntherefore the line\r\n`Vector3f::closest_distance_between_line_and_point(start_NEU, end_NEU, point_cm) * 0.01f - item.radius;` would falsely return a negative margin.. Something that can be scary mid flight..', 'comment_created': datetime.datetime(2020, 8, 24, 18, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 477069165, 'comment_body': 'tiny thing but we should have a space after the ""if"".', 'comment_created': datetime.datetime(2020, 8, 26, 6, 43, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': '99132c541d61e78c26d03621898d4c70fab2da14', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
458204639,AC_Avoid: Added new OA type (Dijkstra + BendyRuler fusion),"This PR creates a new OA Type which attempts to fuse Dijkstra and BendyRuler to be used together.
The basic idea is:
1. For WP Navigation through fence, Dijkstra's calculates the shortest path
2. BendyRuler is meanwhile set to only look for Proximity Sensor found obstacles.
3. The mission is run as if it was Normal Dijkstra's, UNTIL a physical obstacle is detected.
4. After that we switch to (Dijkstra's is turned off) BendyRuler type avoidance again (for both fence + obstacles)
5. After the BendyRuler turns off (I,.e path is clear towards destination), Dijkstras is triggered to calculate new path based on deviated current position and Dijkstra's becomes active again (BendyRuler goes back to only looking for physical obstacles).

Testing:
This has been tested on Morse + SITL with fence's and obstacle in between a guided mission
https://www.youtube.com/watch?v=s0z0b2U2fAk",True,14934,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14934,https://github.com/ArduPilot/ardupilot/pull/14934,closed,93,28,5,1,4,3,0,0,[],2020-07-29 05:33:50+00:00,2020-08-26 06:43:47+00:00,2423397.0,"28 days, 1:09:57","[{'comment_id': 462085635, 'comment_body': ""Let's move the curly bracket one line higher to avoid white space"", 'comment_created': datetime.datetime(2020, 7, 29, 7, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 475806321, 'comment_body': 'I have inlcluded this bit as an extra safety check. I found this as a potential bug. Its not really needed in this PR.\r\nWhat happens is, if the two points are the same, `Vector3f::closest_distance_between_line_and_point` returns 0\r\ntherefore the line\r\n`Vector3f::closest_distance_between_line_and_point(start_NEU, end_NEU, point_cm) * 0.01f - item.radius;` would falsely return a negative margin.. Something that can be scary mid flight..', 'comment_created': datetime.datetime(2020, 8, 24, 18, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 477069165, 'comment_body': 'tiny thing but we should have a space after the ""if"".', 'comment_created': datetime.datetime(2020, 8, 26, 6, 43, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': '99132c541d61e78c26d03621898d4c70fab2da14', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
449260760,AC_Avoid: Back away if vehicle breaches margin to obstacle/fence,"This PR is another approach to solving the problem of getting the vehicle to back away from obstacles/fences.
This solves: https://github.com/ArduPilot/ardupilot/issues/7706

Another attempt was made by @IamPete1 here: https://github.com/ArduPilot/ardupilot/pull/14186
This PR takes a lot of inspiration from his original attempt but does not invoke the position controller at all.
Thanks @IamPete1! It would have been very tough to figure this out, had I not seen your experiments with the same feature.

This PR revolves around a new function: `calc_backaway_velocity`
A short explanation would be that the breach in margin is sent to this function, it calculates a speed required to move back the distance it has breached, forms a back away velocity vector. 
So take for eg, these are all the velocities that we need to back up with:
![vectors](https://user-images.githubusercontent.com/36970042/88138861-24f60c00-cc0c-11ea-9267-73ea078dfe7b.png)

This PR will calculate the maximum of each vector in every quadrant, and so reduce the vectors in each quadrant like such:
![vector _after](https://user-images.githubusercontent.com/36970042/88138992-71414c00-cc0c-11ea-8143-58633f49911e.png)

In the end, we add all these different vectors in each quadrant to get a desired backaway vel.

**Testing on Real Vehicle:** 
https://youtu.be/ofGjcBn0ueQ

**TESTING (in simulators)**
**NOTE:** please see the console (distance to obstacle is printed) and terminal to know what's happening. I keep changing the ""rc 2 1xxx""  and radius params to show the behaviour in each case
- Walls enclosing Copter from all sides: https://youtu.be/oPI0SUQVDRQ
- Walls sandwiching from two sides: https://youtu.be/uYhXsdvnaW8

-  Moving wall: STOP mode: https://youtu.be/yy1MG1cs54M
-  Exclusion Circular Fence: SLIDE mode: https://youtu.be/1tcfDt8WNVU
- Inclusion Circular Fence: SLIDE mode: https://youtu.be/aMOJX6oEnRo
- Circle Fence: STOP mode: https://youtu.be/tD5JoR1v9xM

- ROVER: https://www.youtube.com/watch?v=wk8XHju8nEk",True,14819,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14819,https://github.com/ArduPilot/ardupilot/pull/14819,closed,365,68,9,5,8,34,1,0,[{'name': 'Library'}],2020-07-15 05:53:38+00:00,2020-08-05 06:37:05+00:00,1817007.0,"21 days, 0:43:27","[{'comment_id': 454825458, 'comment_body': '`const float is_reverse = backing_up ? -1.0f : 1.0f;` maybe ?', 'comment_created': datetime.datetime(2020, 7, 15, 6, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454827856, 'comment_body': 'why changing this check ?', 'comment_created': datetime.datetime(2020, 7, 15, 6, 45, 47, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454829147, 'comment_body': 'if you move the check on desired_speed, you should move the assignement to.\r\nAs you can see on line 574 we got a possible return, so it can append that we waste desired_speed creation when we would return.', 'comment_created': datetime.datetime(2020, 7, 15, 6, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454830419, 'comment_body': 'what append line 866 if stopping_point_plus_margin is zero ? (default value)', 'comment_created': datetime.datetime(2020, 7, 15, 6, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454833160, 'comment_body': 'we should probably rename, ""is_reverse"" to something else. like reverse_factor, or just rev maybe', 'comment_created': datetime.datetime(2020, 7, 15, 6, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 454833513, 'comment_body': 'you should move this one after the is_zero check !', 'comment_created': datetime.datetime(2020, 7, 15, 6, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454833844, 'comment_body': 'move this close to is_zero() check ! see my other comments for why !', 'comment_created': datetime.datetime(2020, 7, 15, 6, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 459126866, 'comment_body': '```suggestion\r\n        find_max_quadrant_velocity(backaway_vel, quad_1_back_vel, quad_2_back_vel, quad_3_back_vel, quad_4_back_vel);\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 22, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459127054, 'comment_body': 'For all of the calls of this in this bit', 'comment_created': datetime.datetime(2020, 7, 22, 22, 49, 27, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459129486, 'comment_body': 'This is a little odd, maybe the function could return it rather than passing a pointer.', 'comment_created': datetime.datetime(2020, 7, 22, 22, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459130505, 'comment_body': 'This if could go inside the next one', 'comment_created': datetime.datetime(2020, 7, 22, 22, 59, 18, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459131798, 'comment_body': 'These is_positive checks are unnecessary, if it is init to zero any negative number will be lost in the MAX check anyway', 'comment_created': datetime.datetime(2020, 7, 22, 23, 3, 12, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459133363, 'comment_body': '```suggestion\r\n            }\r\n            if (is_zero(desired_speed)) {\r\n                // no avoidance necessary when desired speed is zero\r\n                continue;\r\n            }\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 23, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459134289, 'comment_body': 'Should probably also check that speed is not zero, I actually had add that check in a bunch of places no we cant just return instantly for zero desired velocity', 'comment_created': datetime.datetime(2020, 7, 22, 23, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459135014, 'comment_body': 'need a extra line to get rid of the stop sign thingy', 'comment_created': datetime.datetime(2020, 7, 22, 23, 13, 47, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 462063788, 'comment_body': 'Can you check if this displays on a single line?  I think our limit is 54 characters and this would be 57 if ""PreArm: "" is prefixed to it.', 'comment_created': datetime.datetime(2020, 7, 29, 6, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462064385, 'comment_body': 'Let\'s change this DisplayName to ""Avoidance maximum back away speed""', 'comment_created': datetime.datetime(2020, 7, 29, 6, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462064961, 'comment_body': '.. or ""Avoidance maximum backup speed""', 'comment_created': datetime.datetime(2020, 7, 29, 6, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462065347, 'comment_body': 'Sorry to be a little pedantic but let\'s be consistent about whether it\'s ""backaway"" or ""backup"".  So I think the parameter is called ""BACKUP_"" because this is shorter so let\'s make all the internal variables and descriptions ""backup"" as well.\r\n\r\nAlso while we\'re at it, let\'s rename _backaway_max_spd to ""backup_speed_max"".  I prefer to have the ""_max"" at the end... this wouldn\'t be a blocker but if we\'re renaming it anyway..', 'comment_created': datetime.datetime(2020, 7, 29, 6, 24, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462065723, 'comment_body': 'this ""backing_up"" is fine as-is. txs.', 'comment_created': datetime.datetime(2020, 7, 29, 6, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462067496, 'comment_body': 'I agree with IamPete1 that this is odd.  I suspect that we should remove all the ""backaway_vel.zero()"" lines.  Perhaps they are leftover from debugging.', 'comment_created': datetime.datetime(2020, 7, 29, 6, 29, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462069536, 'comment_body': 'Ah, I see.. the adjust_velocity_inclusion_and_exclusion_polygons() method (and others) can leave the backaway_vel unset if they return early (i.e. if the fence is disabled).', 'comment_created': datetime.datetime(2020, 7, 29, 6, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462070713, 'comment_body': 'MichaelDB in particular has an aversion to calling variables ""temp"" so let\'s rename it to something like ""desired_vel_orig"".', 'comment_created': datetime.datetime(2020, 7, 29, 6, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462071474, 'comment_body': 'little whitespace issue after ""margin_cm""', 'comment_created': datetime.datetime(2020, 7, 29, 6, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462075125, 'comment_body': ""Let's add some comments about the argument being used by this function."", 'comment_created': datetime.datetime(2020, 7, 29, 6, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462079971, 'comment_body': ""Let's some comments here about the inputs to this method."", 'comment_created': datetime.datetime(2020, 7, 29, 6, 58, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462080319, 'comment_body': ""let's add the comments here to explain the arguments."", 'comment_created': datetime.datetime(2020, 7, 29, 6, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 463500227, 'comment_body': ""@IamPete1 yes you are right!  Nice observation.. But I have left it as it is so that its more readable to a new user. It doesn't really add too much cost to our code, and makes everything uniform. "", 'comment_created': datetime.datetime(2020, 7, 31, 9, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 463500408, 'comment_body': 'I am sorry I did not understand this one... Can you please explain a little bit more?\r\n', 'comment_created': datetime.datetime(2020, 7, 31, 9, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 463565878, 'comment_body': ""![image](https://user-images.githubusercontent.com/33176108/89032345-5c5f6980-d32c-11ea-90ae-c3bde8d60a1a.png)\r\n\r\nIts good practice to leave a blank line at the end of the file, GitHub highlights this with a 'stop sign thingy'."", 'comment_created': datetime.datetime(2020, 7, 31, 11, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 463566911, 'comment_body': ""I don't think it makes it more readable, it makes 4 lines in to 20, better to add a nice comment explaining what is going on"", 'comment_created': datetime.datetime(2020, 7, 31, 11, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 463567199, 'comment_body': 'Oh haha okay... Thanks! I will do that :) I did not know..', 'comment_created': datetime.datetime(2020, 7, 31, 11, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 463568240, 'comment_body': 'annoyingly it only shows it in the file review tab not in the comment', 'comment_created': datetime.datetime(2020, 7, 31, 11, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 464686037, 'comment_body': ""I think the set of last_log_ms is missing here?  also let's start it with an underscore .. so make it _last_log_ms."", 'comment_created': datetime.datetime(2020, 8, 3, 22, 3, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': 'be379dddc8e81d7d2ed68769799953c18dabd025', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da8a1b266f9f20104e057293230ef4bb10969130', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9fa6dcc1daf1a2dd2a51c6f088fdfd3acae5764', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92e8d148157a46933a6277dc1e63b327a97f4d36', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70443819af120295529703828caec15d598b6dd7', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
449260760,AC_Avoid: Back away if vehicle breaches margin to obstacle/fence,"This PR is another approach to solving the problem of getting the vehicle to back away from obstacles/fences.
This solves: https://github.com/ArduPilot/ardupilot/issues/7706

Another attempt was made by @IamPete1 here: https://github.com/ArduPilot/ardupilot/pull/14186
This PR takes a lot of inspiration from his original attempt but does not invoke the position controller at all.
Thanks @IamPete1! It would have been very tough to figure this out, had I not seen your experiments with the same feature.

This PR revolves around a new function: `calc_backaway_velocity`
A short explanation would be that the breach in margin is sent to this function, it calculates a speed required to move back the distance it has breached, forms a back away velocity vector. 
So take for eg, these are all the velocities that we need to back up with:
![vectors](https://user-images.githubusercontent.com/36970042/88138861-24f60c00-cc0c-11ea-9267-73ea078dfe7b.png)

This PR will calculate the maximum of each vector in every quadrant, and so reduce the vectors in each quadrant like such:
![vector _after](https://user-images.githubusercontent.com/36970042/88138992-71414c00-cc0c-11ea-8143-58633f49911e.png)

In the end, we add all these different vectors in each quadrant to get a desired backaway vel.

**Testing on Real Vehicle:** 
https://youtu.be/ofGjcBn0ueQ

**TESTING (in simulators)**
**NOTE:** please see the console (distance to obstacle is printed) and terminal to know what's happening. I keep changing the ""rc 2 1xxx""  and radius params to show the behaviour in each case
- Walls enclosing Copter from all sides: https://youtu.be/oPI0SUQVDRQ
- Walls sandwiching from two sides: https://youtu.be/uYhXsdvnaW8

-  Moving wall: STOP mode: https://youtu.be/yy1MG1cs54M
-  Exclusion Circular Fence: SLIDE mode: https://youtu.be/1tcfDt8WNVU
- Inclusion Circular Fence: SLIDE mode: https://youtu.be/aMOJX6oEnRo
- Circle Fence: STOP mode: https://youtu.be/tD5JoR1v9xM

- ROVER: https://www.youtube.com/watch?v=wk8XHju8nEk",True,14819,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14819,https://github.com/ArduPilot/ardupilot/pull/14819,closed,365,68,9,5,8,34,1,0,[{'name': 'Library'}],2020-07-15 05:53:38+00:00,2020-08-05 06:37:05+00:00,1817007.0,"21 days, 0:43:27","[{'comment_id': 454825458, 'comment_body': '`const float is_reverse = backing_up ? -1.0f : 1.0f;` maybe ?', 'comment_created': datetime.datetime(2020, 7, 15, 6, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454827856, 'comment_body': 'why changing this check ?', 'comment_created': datetime.datetime(2020, 7, 15, 6, 45, 47, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454829147, 'comment_body': 'if you move the check on desired_speed, you should move the assignement to.\r\nAs you can see on line 574 we got a possible return, so it can append that we waste desired_speed creation when we would return.', 'comment_created': datetime.datetime(2020, 7, 15, 6, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454830419, 'comment_body': 'what append line 866 if stopping_point_plus_margin is zero ? (default value)', 'comment_created': datetime.datetime(2020, 7, 15, 6, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454833160, 'comment_body': 'we should probably rename, ""is_reverse"" to something else. like reverse_factor, or just rev maybe', 'comment_created': datetime.datetime(2020, 7, 15, 6, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 454833513, 'comment_body': 'you should move this one after the is_zero check !', 'comment_created': datetime.datetime(2020, 7, 15, 6, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454833844, 'comment_body': 'move this close to is_zero() check ! see my other comments for why !', 'comment_created': datetime.datetime(2020, 7, 15, 6, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 459126866, 'comment_body': '```suggestion\r\n        find_max_quadrant_velocity(backaway_vel, quad_1_back_vel, quad_2_back_vel, quad_3_back_vel, quad_4_back_vel);\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 22, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459127054, 'comment_body': 'For all of the calls of this in this bit', 'comment_created': datetime.datetime(2020, 7, 22, 22, 49, 27, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459129486, 'comment_body': 'This is a little odd, maybe the function could return it rather than passing a pointer.', 'comment_created': datetime.datetime(2020, 7, 22, 22, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459130505, 'comment_body': 'This if could go inside the next one', 'comment_created': datetime.datetime(2020, 7, 22, 22, 59, 18, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459131798, 'comment_body': 'These is_positive checks are unnecessary, if it is init to zero any negative number will be lost in the MAX check anyway', 'comment_created': datetime.datetime(2020, 7, 22, 23, 3, 12, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459133363, 'comment_body': '```suggestion\r\n            }\r\n            if (is_zero(desired_speed)) {\r\n                // no avoidance necessary when desired speed is zero\r\n                continue;\r\n            }\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 23, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459134289, 'comment_body': 'Should probably also check that speed is not zero, I actually had add that check in a bunch of places no we cant just return instantly for zero desired velocity', 'comment_created': datetime.datetime(2020, 7, 22, 23, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459135014, 'comment_body': 'need a extra line to get rid of the stop sign thingy', 'comment_created': datetime.datetime(2020, 7, 22, 23, 13, 47, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 462063788, 'comment_body': 'Can you check if this displays on a single line?  I think our limit is 54 characters and this would be 57 if ""PreArm: "" is prefixed to it.', 'comment_created': datetime.datetime(2020, 7, 29, 6, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462064385, 'comment_body': 'Let\'s change this DisplayName to ""Avoidance maximum back away speed""', 'comment_created': datetime.datetime(2020, 7, 29, 6, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462064961, 'comment_body': '.. or ""Avoidance maximum backup speed""', 'comment_created': datetime.datetime(2020, 7, 29, 6, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462065347, 'comment_body': 'Sorry to be a little pedantic but let\'s be consistent about whether it\'s ""backaway"" or ""backup"".  So I think the parameter is called ""BACKUP_"" because this is shorter so let\'s make all the internal variables and descriptions ""backup"" as well.\r\n\r\nAlso while we\'re at it, let\'s rename _backaway_max_spd to ""backup_speed_max"".  I prefer to have the ""_max"" at the end... this wouldn\'t be a blocker but if we\'re renaming it anyway..', 'comment_created': datetime.datetime(2020, 7, 29, 6, 24, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462065723, 'comment_body': 'this ""backing_up"" is fine as-is. txs.', 'comment_created': datetime.datetime(2020, 7, 29, 6, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462067496, 'comment_body': 'I agree with IamPete1 that this is odd.  I suspect that we should remove all the ""backaway_vel.zero()"" lines.  Perhaps they are leftover from debugging.', 'comment_created': datetime.datetime(2020, 7, 29, 6, 29, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462069536, 'comment_body': 'Ah, I see.. the adjust_velocity_inclusion_and_exclusion_polygons() method (and others) can leave the backaway_vel unset if they return early (i.e. if the fence is disabled).', 'comment_created': datetime.datetime(2020, 7, 29, 6, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462070713, 'comment_body': 'MichaelDB in particular has an aversion to calling variables ""temp"" so let\'s rename it to something like ""desired_vel_orig"".', 'comment_created': datetime.datetime(2020, 7, 29, 6, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462071474, 'comment_body': 'little whitespace issue after ""margin_cm""', 'comment_created': datetime.datetime(2020, 7, 29, 6, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462075125, 'comment_body': ""Let's add some comments about the argument being used by this function."", 'comment_created': datetime.datetime(2020, 7, 29, 6, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462079971, 'comment_body': ""Let's some comments here about the inputs to this method."", 'comment_created': datetime.datetime(2020, 7, 29, 6, 58, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462080319, 'comment_body': ""let's add the comments here to explain the arguments."", 'comment_created': datetime.datetime(2020, 7, 29, 6, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 463500227, 'comment_body': ""@IamPete1 yes you are right!  Nice observation.. But I have left it as it is so that its more readable to a new user. It doesn't really add too much cost to our code, and makes everything uniform. "", 'comment_created': datetime.datetime(2020, 7, 31, 9, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 463500408, 'comment_body': 'I am sorry I did not understand this one... Can you please explain a little bit more?\r\n', 'comment_created': datetime.datetime(2020, 7, 31, 9, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 463565878, 'comment_body': ""![image](https://user-images.githubusercontent.com/33176108/89032345-5c5f6980-d32c-11ea-90ae-c3bde8d60a1a.png)\r\n\r\nIts good practice to leave a blank line at the end of the file, GitHub highlights this with a 'stop sign thingy'."", 'comment_created': datetime.datetime(2020, 7, 31, 11, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 463566911, 'comment_body': ""I don't think it makes it more readable, it makes 4 lines in to 20, better to add a nice comment explaining what is going on"", 'comment_created': datetime.datetime(2020, 7, 31, 11, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 463567199, 'comment_body': 'Oh haha okay... Thanks! I will do that :) I did not know..', 'comment_created': datetime.datetime(2020, 7, 31, 11, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 463568240, 'comment_body': 'annoyingly it only shows it in the file review tab not in the comment', 'comment_created': datetime.datetime(2020, 7, 31, 11, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 464686037, 'comment_body': ""I think the set of last_log_ms is missing here?  also let's start it with an underscore .. so make it _last_log_ms."", 'comment_created': datetime.datetime(2020, 8, 3, 22, 3, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': 'be379dddc8e81d7d2ed68769799953c18dabd025', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da8a1b266f9f20104e057293230ef4bb10969130', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9fa6dcc1daf1a2dd2a51c6f088fdfd3acae5764', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92e8d148157a46933a6277dc1e63b327a97f4d36', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70443819af120295529703828caec15d598b6dd7', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
449260760,AC_Avoid: Back away if vehicle breaches margin to obstacle/fence,"This PR is another approach to solving the problem of getting the vehicle to back away from obstacles/fences.
This solves: https://github.com/ArduPilot/ardupilot/issues/7706

Another attempt was made by @IamPete1 here: https://github.com/ArduPilot/ardupilot/pull/14186
This PR takes a lot of inspiration from his original attempt but does not invoke the position controller at all.
Thanks @IamPete1! It would have been very tough to figure this out, had I not seen your experiments with the same feature.

This PR revolves around a new function: `calc_backaway_velocity`
A short explanation would be that the breach in margin is sent to this function, it calculates a speed required to move back the distance it has breached, forms a back away velocity vector. 
So take for eg, these are all the velocities that we need to back up with:
![vectors](https://user-images.githubusercontent.com/36970042/88138861-24f60c00-cc0c-11ea-9267-73ea078dfe7b.png)

This PR will calculate the maximum of each vector in every quadrant, and so reduce the vectors in each quadrant like such:
![vector _after](https://user-images.githubusercontent.com/36970042/88138992-71414c00-cc0c-11ea-8143-58633f49911e.png)

In the end, we add all these different vectors in each quadrant to get a desired backaway vel.

**Testing on Real Vehicle:** 
https://youtu.be/ofGjcBn0ueQ

**TESTING (in simulators)**
**NOTE:** please see the console (distance to obstacle is printed) and terminal to know what's happening. I keep changing the ""rc 2 1xxx""  and radius params to show the behaviour in each case
- Walls enclosing Copter from all sides: https://youtu.be/oPI0SUQVDRQ
- Walls sandwiching from two sides: https://youtu.be/uYhXsdvnaW8

-  Moving wall: STOP mode: https://youtu.be/yy1MG1cs54M
-  Exclusion Circular Fence: SLIDE mode: https://youtu.be/1tcfDt8WNVU
- Inclusion Circular Fence: SLIDE mode: https://youtu.be/aMOJX6oEnRo
- Circle Fence: STOP mode: https://youtu.be/tD5JoR1v9xM

- ROVER: https://www.youtube.com/watch?v=wk8XHju8nEk",True,14819,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14819,https://github.com/ArduPilot/ardupilot/pull/14819,closed,365,68,9,5,8,34,1,0,[{'name': 'Library'}],2020-07-15 05:53:38+00:00,2020-08-05 06:37:05+00:00,1817007.0,"21 days, 0:43:27","[{'comment_id': 454825458, 'comment_body': '`const float is_reverse = backing_up ? -1.0f : 1.0f;` maybe ?', 'comment_created': datetime.datetime(2020, 7, 15, 6, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454827856, 'comment_body': 'why changing this check ?', 'comment_created': datetime.datetime(2020, 7, 15, 6, 45, 47, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454829147, 'comment_body': 'if you move the check on desired_speed, you should move the assignement to.\r\nAs you can see on line 574 we got a possible return, so it can append that we waste desired_speed creation when we would return.', 'comment_created': datetime.datetime(2020, 7, 15, 6, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454830419, 'comment_body': 'what append line 866 if stopping_point_plus_margin is zero ? (default value)', 'comment_created': datetime.datetime(2020, 7, 15, 6, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454833160, 'comment_body': 'we should probably rename, ""is_reverse"" to something else. like reverse_factor, or just rev maybe', 'comment_created': datetime.datetime(2020, 7, 15, 6, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 454833513, 'comment_body': 'you should move this one after the is_zero check !', 'comment_created': datetime.datetime(2020, 7, 15, 6, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 454833844, 'comment_body': 'move this close to is_zero() check ! see my other comments for why !', 'comment_created': datetime.datetime(2020, 7, 15, 6, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 459126866, 'comment_body': '```suggestion\r\n        find_max_quadrant_velocity(backaway_vel, quad_1_back_vel, quad_2_back_vel, quad_3_back_vel, quad_4_back_vel);\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 22, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459127054, 'comment_body': 'For all of the calls of this in this bit', 'comment_created': datetime.datetime(2020, 7, 22, 22, 49, 27, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459129486, 'comment_body': 'This is a little odd, maybe the function could return it rather than passing a pointer.', 'comment_created': datetime.datetime(2020, 7, 22, 22, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459130505, 'comment_body': 'This if could go inside the next one', 'comment_created': datetime.datetime(2020, 7, 22, 22, 59, 18, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459131798, 'comment_body': 'These is_positive checks are unnecessary, if it is init to zero any negative number will be lost in the MAX check anyway', 'comment_created': datetime.datetime(2020, 7, 22, 23, 3, 12, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459133363, 'comment_body': '```suggestion\r\n            }\r\n            if (is_zero(desired_speed)) {\r\n                // no avoidance necessary when desired speed is zero\r\n                continue;\r\n            }\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 23, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459134289, 'comment_body': 'Should probably also check that speed is not zero, I actually had add that check in a bunch of places no we cant just return instantly for zero desired velocity', 'comment_created': datetime.datetime(2020, 7, 22, 23, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 459135014, 'comment_body': 'need a extra line to get rid of the stop sign thingy', 'comment_created': datetime.datetime(2020, 7, 22, 23, 13, 47, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 462063788, 'comment_body': 'Can you check if this displays on a single line?  I think our limit is 54 characters and this would be 57 if ""PreArm: "" is prefixed to it.', 'comment_created': datetime.datetime(2020, 7, 29, 6, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462064385, 'comment_body': 'Let\'s change this DisplayName to ""Avoidance maximum back away speed""', 'comment_created': datetime.datetime(2020, 7, 29, 6, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462064961, 'comment_body': '.. or ""Avoidance maximum backup speed""', 'comment_created': datetime.datetime(2020, 7, 29, 6, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462065347, 'comment_body': 'Sorry to be a little pedantic but let\'s be consistent about whether it\'s ""backaway"" or ""backup"".  So I think the parameter is called ""BACKUP_"" because this is shorter so let\'s make all the internal variables and descriptions ""backup"" as well.\r\n\r\nAlso while we\'re at it, let\'s rename _backaway_max_spd to ""backup_speed_max"".  I prefer to have the ""_max"" at the end... this wouldn\'t be a blocker but if we\'re renaming it anyway..', 'comment_created': datetime.datetime(2020, 7, 29, 6, 24, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462065723, 'comment_body': 'this ""backing_up"" is fine as-is. txs.', 'comment_created': datetime.datetime(2020, 7, 29, 6, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462067496, 'comment_body': 'I agree with IamPete1 that this is odd.  I suspect that we should remove all the ""backaway_vel.zero()"" lines.  Perhaps they are leftover from debugging.', 'comment_created': datetime.datetime(2020, 7, 29, 6, 29, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462069536, 'comment_body': 'Ah, I see.. the adjust_velocity_inclusion_and_exclusion_polygons() method (and others) can leave the backaway_vel unset if they return early (i.e. if the fence is disabled).', 'comment_created': datetime.datetime(2020, 7, 29, 6, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462070713, 'comment_body': 'MichaelDB in particular has an aversion to calling variables ""temp"" so let\'s rename it to something like ""desired_vel_orig"".', 'comment_created': datetime.datetime(2020, 7, 29, 6, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462071474, 'comment_body': 'little whitespace issue after ""margin_cm""', 'comment_created': datetime.datetime(2020, 7, 29, 6, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462075125, 'comment_body': ""Let's add some comments about the argument being used by this function."", 'comment_created': datetime.datetime(2020, 7, 29, 6, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462079971, 'comment_body': ""Let's some comments here about the inputs to this method."", 'comment_created': datetime.datetime(2020, 7, 29, 6, 58, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 462080319, 'comment_body': ""let's add the comments here to explain the arguments."", 'comment_created': datetime.datetime(2020, 7, 29, 6, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 463500227, 'comment_body': ""@IamPete1 yes you are right!  Nice observation.. But I have left it as it is so that its more readable to a new user. It doesn't really add too much cost to our code, and makes everything uniform. "", 'comment_created': datetime.datetime(2020, 7, 31, 9, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 463500408, 'comment_body': 'I am sorry I did not understand this one... Can you please explain a little bit more?\r\n', 'comment_created': datetime.datetime(2020, 7, 31, 9, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 463565878, 'comment_body': ""![image](https://user-images.githubusercontent.com/33176108/89032345-5c5f6980-d32c-11ea-90ae-c3bde8d60a1a.png)\r\n\r\nIts good practice to leave a blank line at the end of the file, GitHub highlights this with a 'stop sign thingy'."", 'comment_created': datetime.datetime(2020, 7, 31, 11, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 463566911, 'comment_body': ""I don't think it makes it more readable, it makes 4 lines in to 20, better to add a nice comment explaining what is going on"", 'comment_created': datetime.datetime(2020, 7, 31, 11, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 463567199, 'comment_body': 'Oh haha okay... Thanks! I will do that :) I did not know..', 'comment_created': datetime.datetime(2020, 7, 31, 11, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rishabsingh3003', 'type': 'User'}, {'comment_id': 463568240, 'comment_body': 'annoyingly it only shows it in the file review tab not in the comment', 'comment_created': datetime.datetime(2020, 7, 31, 11, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 464686037, 'comment_body': ""I think the set of last_log_ms is missing here?  also let's start it with an underscore .. so make it _last_log_ms."", 'comment_created': datetime.datetime(2020, 8, 3, 22, 3, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': 'be379dddc8e81d7d2ed68769799953c18dabd025', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da8a1b266f9f20104e057293230ef4bb10969130', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9fa6dcc1daf1a2dd2a51c6f088fdfd3acae5764', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92e8d148157a46933a6277dc1e63b327a97f4d36', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70443819af120295529703828caec15d598b6dd7', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
472159949,AC_Avoid: Add feature to reject obstacles near home loc,"This adds the ability for a user to potentially ignore obstacles that are within a 3 meter radius of a Copter, below ""ALT_MIN"" height above home.
This has been a problem when you're taking off, OA DB might see the ground and continue to store the obstacles. Then the user has to wait for a while before the obstacle vanishes from the DB which is irritating to say the least.
This feature is even more essential to the new 3-D depth cameras that have a large FOV and can probably see a large area of the land below while taking off. 
As a demo, see this simulation on Morse: https://youtu.be/4dU48pAg7Fg  (alt limit is set to 3 meters)",True,15136,https://api.github.com/repos/ArduPilot/ardupilot/pulls/15136,https://github.com/ArduPilot/ardupilot/pull/15136,closed,32,0,2,1,1,1,1,0,[{'name': 'WikiNeeded'}],2020-08-23 18:23:43+00:00,2020-08-23 23:49:18+00:00,19535.0,5:25:35,"[{'comment_id': 475283276, 'comment_body': 'minor typo, ""obstacle\'s"" doesn\'t need the apostrophe.  I..e ""obstacles"".', 'comment_created': datetime.datetime(2020, 8, 23, 23, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': '4336895b3ee6a5306fe7048cc046e9ce251908ba', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
472159949,AC_Avoid: Add feature to reject obstacles near home loc,"This adds the ability for a user to potentially ignore obstacles that are within a 3 meter radius of a Copter, below ""ALT_MIN"" height above home.
This has been a problem when you're taking off, OA DB might see the ground and continue to store the obstacles. Then the user has to wait for a while before the obstacle vanishes from the DB which is irritating to say the least.
This feature is even more essential to the new 3-D depth cameras that have a large FOV and can probably see a large area of the land below while taking off. 
As a demo, see this simulation on Morse: https://youtu.be/4dU48pAg7Fg  (alt limit is set to 3 meters)",True,15136,https://api.github.com/repos/ArduPilot/ardupilot/pulls/15136,https://github.com/ArduPilot/ardupilot/pull/15136,closed,32,0,2,1,1,1,1,0,[{'name': 'WikiNeeded'}],2020-08-23 18:23:43+00:00,2020-08-23 23:49:18+00:00,19535.0,5:25:35,"[{'comment_id': 475283276, 'comment_body': 'minor typo, ""obstacle\'s"" doesn\'t need the apostrophe.  I..e ""obstacles"".', 'comment_created': datetime.datetime(2020, 8, 23, 23, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': '4336895b3ee6a5306fe7048cc046e9ce251908ba', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
472159949,AC_Avoid: Add feature to reject obstacles near home loc,"This adds the ability for a user to potentially ignore obstacles that are within a 3 meter radius of a Copter, below ""ALT_MIN"" height above home.
This has been a problem when you're taking off, OA DB might see the ground and continue to store the obstacles. Then the user has to wait for a while before the obstacle vanishes from the DB which is irritating to say the least.
This feature is even more essential to the new 3-D depth cameras that have a large FOV and can probably see a large area of the land below while taking off. 
As a demo, see this simulation on Morse: https://youtu.be/4dU48pAg7Fg  (alt limit is set to 3 meters)",True,15136,https://api.github.com/repos/ArduPilot/ardupilot/pulls/15136,https://github.com/ArduPilot/ardupilot/pull/15136,closed,32,0,2,1,1,1,1,0,[{'name': 'WikiNeeded'}],2020-08-23 18:23:43+00:00,2020-08-23 23:49:18+00:00,19535.0,5:25:35,"[{'comment_id': 475283276, 'comment_body': 'minor typo, ""obstacle\'s"" doesn\'t need the apostrophe.  I..e ""obstacles"".', 'comment_created': datetime.datetime(2020, 8, 23, 23, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}]","[{'commit_sha': '4336895b3ee6a5306fe7048cc046e9ce251908ba', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
449255620,AC_Avoid: Do not show some param's for Rover and Remove extra margin used in stop behaviour in circular fences,"This PR contains to completely different commits:
1. Solves #14806
2. Is something that I found, if one notice's looks at the stop behavior in Fence for simple avoidance, Margin has been used twice in most places... So for eg: 
` if you look at line 377,378 https://github.com/ArduPilot/ardupilot/blob/1db0feea59bfc7b531fff957d7eed4ff00b1dfb7/libraries/AC_Avoidance/AC_Avoid.cpp#L377
https://github.com/ArduPilot/ardupilot/blob/1db0feea59bfc7b531fff957d7eed4ff00b1dfb7/libraries/AC_Avoidance/AC_Avoid.cpp#L378

First fence radius is calculated with a margin... Then distance to target is caculated with a margin, leading to the vehicle stopping at twice the margin.

**Testing videos** (do look at console for distance to fence, and titile for FENCE_MARGIN param) :
A. Exclusion Fence:

-  Master: https://youtu.be/SYBAOh35md4
-  After PR: https://youtu.be/nECBbCLqEJQ

B. Circular Fence:
- Master: https://youtu.be/24hvm1djefw
- After PR: https://youtu.be/zhElpfYIxs0

C. Inclusion Fence:
- After PR: https://youtu.be/GvyGbDDmWTg

You might be able to notice that the vehicle now breaches the margin just by a few cm's (I guess because of the inertia it has before stopping). I think this is better than stopping at twice the margin... Also backing away from objects is soon going to be a part of Simple Avoidance... So I guess we can afford it.",True,14817,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14817,https://github.com/ArduPilot/ardupilot/pull/14817,closed,9,9,1,2,1,0,0,0,[],2020-07-15 05:38:04+00:00,2020-07-15 06:50:19+00:00,4335.0,1:12:15,[],"[{'commit_sha': 'aa25c99cf7768b965d9dfa8c808d42e3a147d3a4', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c10babae98957fbc566639858773853d32ec89a', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
449255620,AC_Avoid: Do not show some param's for Rover and Remove extra margin used in stop behaviour in circular fences,"This PR contains to completely different commits:
1. Solves #14806
2. Is something that I found, if one notice's looks at the stop behavior in Fence for simple avoidance, Margin has been used twice in most places... So for eg: 
` if you look at line 377,378 https://github.com/ArduPilot/ardupilot/blob/1db0feea59bfc7b531fff957d7eed4ff00b1dfb7/libraries/AC_Avoidance/AC_Avoid.cpp#L377
https://github.com/ArduPilot/ardupilot/blob/1db0feea59bfc7b531fff957d7eed4ff00b1dfb7/libraries/AC_Avoidance/AC_Avoid.cpp#L378

First fence radius is calculated with a margin... Then distance to target is caculated with a margin, leading to the vehicle stopping at twice the margin.

**Testing videos** (do look at console for distance to fence, and titile for FENCE_MARGIN param) :
A. Exclusion Fence:

-  Master: https://youtu.be/SYBAOh35md4
-  After PR: https://youtu.be/nECBbCLqEJQ

B. Circular Fence:
- Master: https://youtu.be/24hvm1djefw
- After PR: https://youtu.be/zhElpfYIxs0

C. Inclusion Fence:
- After PR: https://youtu.be/GvyGbDDmWTg

You might be able to notice that the vehicle now breaches the margin just by a few cm's (I guess because of the inertia it has before stopping). I think this is better than stopping at twice the margin... Also backing away from objects is soon going to be a part of Simple Avoidance... So I guess we can afford it.",True,14817,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14817,https://github.com/ArduPilot/ardupilot/pull/14817,closed,9,9,1,2,1,0,0,0,[],2020-07-15 05:38:04+00:00,2020-07-15 06:50:19+00:00,4335.0,1:12:15,[],"[{'commit_sha': 'aa25c99cf7768b965d9dfa8c808d42e3a147d3a4', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c10babae98957fbc566639858773853d32ec89a', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
449255620,AC_Avoid: Do not show some param's for Rover and Remove extra margin used in stop behaviour in circular fences,"This PR contains to completely different commits:
1. Solves #14806
2. Is something that I found, if one notice's looks at the stop behavior in Fence for simple avoidance, Margin has been used twice in most places... So for eg: 
` if you look at line 377,378 https://github.com/ArduPilot/ardupilot/blob/1db0feea59bfc7b531fff957d7eed4ff00b1dfb7/libraries/AC_Avoidance/AC_Avoid.cpp#L377
https://github.com/ArduPilot/ardupilot/blob/1db0feea59bfc7b531fff957d7eed4ff00b1dfb7/libraries/AC_Avoidance/AC_Avoid.cpp#L378

First fence radius is calculated with a margin... Then distance to target is caculated with a margin, leading to the vehicle stopping at twice the margin.

**Testing videos** (do look at console for distance to fence, and titile for FENCE_MARGIN param) :
A. Exclusion Fence:

-  Master: https://youtu.be/SYBAOh35md4
-  After PR: https://youtu.be/nECBbCLqEJQ

B. Circular Fence:
- Master: https://youtu.be/24hvm1djefw
- After PR: https://youtu.be/zhElpfYIxs0

C. Inclusion Fence:
- After PR: https://youtu.be/GvyGbDDmWTg

You might be able to notice that the vehicle now breaches the margin just by a few cm's (I guess because of the inertia it has before stopping). I think this is better than stopping at twice the margin... Also backing away from objects is soon going to be a part of Simple Avoidance... So I guess we can afford it.",True,14817,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14817,https://github.com/ArduPilot/ardupilot/pull/14817,closed,9,9,1,2,1,0,0,0,[],2020-07-15 05:38:04+00:00,2020-07-15 06:50:19+00:00,4335.0,1:12:15,[],"[{'commit_sha': 'aa25c99cf7768b965d9dfa8c808d42e3a147d3a4', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c10babae98957fbc566639858773853d32ec89a', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
447244493,AP_Proximity: Check for valid reading before pushing to OA DB,"Has been tested on CubeOrange + Benewake Tfmini plus.
This single word addition made all the difference. False data was being pushed into OA Database (Like out of range reading, was being sent as ""0"" distance"") hence tricking BendyRuler to act against false objects.",True,14793,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14793,https://github.com/ArduPilot/ardupilot/pull/14793,closed,1,1,1,1,4,0,0,0,[],2020-07-10 06:03:50+00:00,2020-07-10 06:49:01+00:00,2711.0,0:45:11,[],"[{'commit_sha': '7626806b29d9a633d57a565e95d1c937ee848dc5', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
447244493,AP_Proximity: Check for valid reading before pushing to OA DB,"Has been tested on CubeOrange + Benewake Tfmini plus.
This single word addition made all the difference. False data was being pushed into OA Database (Like out of range reading, was being sent as ""0"" distance"") hence tricking BendyRuler to act against false objects.",True,14793,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14793,https://github.com/ArduPilot/ardupilot/pull/14793,closed,1,1,1,1,4,0,0,0,[],2020-07-10 06:03:50+00:00,2020-07-10 06:49:01+00:00,2711.0,0:45:11,[],"[{'commit_sha': '7626806b29d9a633d57a565e95d1c937ee848dc5', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
447244493,AP_Proximity: Check for valid reading before pushing to OA DB,"Has been tested on CubeOrange + Benewake Tfmini plus.
This single word addition made all the difference. False data was being pushed into OA Database (Like out of range reading, was being sent as ""0"" distance"") hence tricking BendyRuler to act against false objects.",True,14793,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14793,https://github.com/ArduPilot/ardupilot/pull/14793,closed,1,1,1,1,4,0,0,0,[],2020-07-10 06:03:50+00:00,2020-07-10 06:49:01+00:00,2711.0,0:45:11,[],"[{'commit_sha': '7626806b29d9a633d57a565e95d1c937ee848dc5', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
434341703,AC_Avoid: Check if origin is set before any obstacle avoidance algorithm is run,"Both BendyRuler and Djikstra's require origin to have been set before being run but BendyRuler does not have this check. This might lead to an issue where the location used in BendyRuler is not initialized (i.e. 0,0,0) and we still run the algorithm. 
This issue has been fixed by moving the check up from Djikstra's to PathPlanner. 
@rmackay9 @khancyr 
",True,14607,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14607,https://github.com/ArduPilot/ardupilot/pull/14607,closed,12,11,2,1,2,0,1,0,[{'name': 'Library'}],2020-06-15 07:23:11+00:00,2020-06-16 23:26:52+00:00,144221.0,"1 day, 16:03:41",[],"[{'commit_sha': 'ae89c95d117ca44ac7176f1e66a1e41518b894e0', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
434341703,AC_Avoid: Check if origin is set before any obstacle avoidance algorithm is run,"Both BendyRuler and Djikstra's require origin to have been set before being run but BendyRuler does not have this check. This might lead to an issue where the location used in BendyRuler is not initialized (i.e. 0,0,0) and we still run the algorithm. 
This issue has been fixed by moving the check up from Djikstra's to PathPlanner. 
@rmackay9 @khancyr 
",True,14607,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14607,https://github.com/ArduPilot/ardupilot/pull/14607,closed,12,11,2,1,2,0,1,0,[{'name': 'Library'}],2020-06-15 07:23:11+00:00,2020-06-16 23:26:52+00:00,144221.0,"1 day, 16:03:41",[],"[{'commit_sha': 'ae89c95d117ca44ac7176f1e66a1e41518b894e0', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80
434341703,AC_Avoid: Check if origin is set before any obstacle avoidance algorithm is run,"Both BendyRuler and Djikstra's require origin to have been set before being run but BendyRuler does not have this check. This might lead to an issue where the location used in BendyRuler is not initialized (i.e. 0,0,0) and we still run the algorithm. 
This issue has been fixed by moving the check up from Djikstra's to PathPlanner. 
@rmackay9 @khancyr 
",True,14607,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14607,https://github.com/ArduPilot/ardupilot/pull/14607,closed,12,11,2,1,2,0,1,0,[{'name': 'Library'}],2020-06-15 07:23:11+00:00,2020-06-16 23:26:52+00:00,144221.0,"1 day, 16:03:41",[],"[{'commit_sha': 'ae89c95d117ca44ac7176f1e66a1e41518b894e0', 'committer_username': 'rishabsingh3003', 'committer_name': 'Rishabh Singh', 'committer_email': 'f20171602@hyderabad.bits-pilani.ac.in', 'commit_date': datetime.datetime(2018, 3, 1, 20, 17, 10, tzinfo=datetime.timezone.utc)}]",Rishabh Singh,36970042,f20171602@hyderabad.bits-pilani.ac.in,User,,17,,6,80

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
7512484,ardupilot,ArduPilot/ardupilot,C++,17028,10398,658,1076,64544,2439,71,1010,"[{'id': 1983642552, 'number': 27625, 'closed': datetime.datetime(2024, 7, 24, 7, 53, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 23, 15, 50, 35, tzinfo=datetime.timezone.utc), 'time_taken': 57753.0, 'time_delta': '16:02:33', 'additions': 13, 'deletions': 8, 'state': 'closed'}, {'id': 1983534291, 'number': 27623, 'closed': datetime.datetime(2024, 7, 30, 1, 38, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 23, 14, 55, 26, tzinfo=datetime.timezone.utc), 'time_taken': 556971.0, 'time_delta': '6 days, 10:42:51', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 1983474584, 'number': 27622, 'closed': datetime.datetime(2024, 7, 24, 7, 45, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 23, 14, 27, 31, tzinfo=datetime.timezone.utc), 'time_taken': 62273.0, 'time_delta': '17:17:53', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1983453107, 'number': 27621, 'closed': datetime.datetime(2024, 7, 25, 0, 53, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 23, 14, 17, 15, tzinfo=datetime.timezone.utc), 'time_taken': 124568.0, 'time_delta': '1 day, 10:36:08', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1983431385, 'number': 27620, 'closed': None, 'created': datetime.datetime(2024, 7, 23, 14, 6, 55, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 4, 'deletions': 3, 'state': 'open'}, {'id': 1933337502, 'number': 27356, 'closed': None, 'created': datetime.datetime(2024, 6, 22, 3, 19, 47, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1, 'deletions': 0, 'state': 'open'}, {'id': 1899918900, 'number': 27225, 'closed': None, 'created': datetime.datetime(2024, 6, 3, 3, 48, 11, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 39, 'deletions': 3, 'state': 'open'}, {'id': 1764763885, 'number': 26482, 'closed': datetime.datetime(2024, 3, 12, 0, 30, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 11, 2, 36, 24, tzinfo=datetime.timezone.utc), 'time_taken': 78834.0, 'time_delta': '21:53:54', 'additions': 353, 'deletions': 166, 'state': 'closed'}, {'id': 1739973920, 'number': 26299, 'closed': datetime.datetime(2024, 2, 26, 23, 59, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 23, 2, 5, 58, tzinfo=datetime.timezone.utc), 'time_taken': 338023.0, 'time_delta': '3 days, 21:53:43', 'additions': 122, 'deletions': 194, 'state': 'closed'}, {'id': 1712611561, 'number': 26146, 'closed': None, 'created': datetime.datetime(2024, 2, 5, 22, 32, 55, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 144, 'deletions': 0, 'state': 'open'}, {'id': 1667415619, 'number': 25913, 'closed': datetime.datetime(2024, 3, 7, 7, 14, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 6, 17, 10, 2, tzinfo=datetime.timezone.utc), 'time_taken': 5234642.0, 'time_delta': '60 days, 14:04:02', 'additions': 16, 'deletions': 17, 'state': 'closed'}, {'id': 1650828852, 'number': 25801, 'closed': datetime.datetime(2024, 2, 5, 23, 57, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 19, 17, 51, 11, tzinfo=datetime.timezone.utc), 'time_taken': 4169170.0, 'time_delta': '48 days, 6:06:10', 'additions': 261, 'deletions': 1, 'state': 'closed'}, {'id': 1557279944, 'number': 25268, 'closed': datetime.datetime(2023, 10, 24, 23, 3, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 15, 4, 32, 23, tzinfo=datetime.timezone.utc), 'time_taken': 844291.0, 'time_delta': '9 days, 18:31:31', 'additions': 239, 'deletions': 5, 'state': 'closed'}, {'id': 1549057867, 'number': 25217, 'closed': None, 'created': datetime.datetime(2023, 10, 10, 5, 9, 6, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 164, 'deletions': 0, 'state': 'open'}, {'id': 1531600870, 'number': 25114, 'closed': None, 'created': datetime.datetime(2023, 9, 27, 3, 24, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 3, 'deletions': 1, 'state': 'open'}, {'id': 1531591951, 'number': 25112, 'closed': datetime.datetime(2023, 10, 9, 23, 18, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 27, 3, 9, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1109296.0, 'time_delta': '12 days, 20:08:16', 'additions': 1173, 'deletions': 0, 'state': 'closed'}, {'id': 1500557813, 'number': 24867, 'closed': datetime.datetime(2023, 9, 13, 1, 49, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 4, 3, 25, 37, tzinfo=datetime.timezone.utc), 'time_taken': 771819.0, 'time_delta': '8 days, 22:23:39', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1458620306, 'number': 24474, 'closed': None, 'created': datetime.datetime(2023, 8, 1, 19, 5, 48, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 122, 'deletions': 0, 'state': 'open'}, {'id': 1421856940, 'number': 24229, 'closed': None, 'created': datetime.datetime(2023, 7, 5, 21, 43, 21, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 148, 'deletions': 0, 'state': 'open'}, {'id': 1420066197, 'number': 24220, 'closed': datetime.datetime(2023, 8, 2, 23, 2, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 4, 19, 46, 58, tzinfo=datetime.timezone.utc), 'time_taken': 2517352.0, 'time_delta': '29 days, 3:15:52', 'additions': 892, 'deletions': 1, 'state': 'closed'}, {'id': 1398581902, 'number': 24097, 'closed': datetime.datetime(2023, 9, 9, 7, 21, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 19, 17, 30, 33, tzinfo=datetime.timezone.utc), 'time_taken': 7048272.0, 'time_delta': '81 days, 13:51:12', 'additions': 462, 'deletions': 222, 'state': 'closed'}, {'id': 1372220662, 'number': 23940, 'closed': datetime.datetime(2023, 6, 28, 7, 16, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 13, 29, 29, tzinfo=datetime.timezone.utc), 'time_taken': 2396814.0, 'time_delta': '27 days, 17:46:54', 'additions': 256, 'deletions': 1, 'state': 'closed'}, {'id': 1257841045, 'number': 23065, 'closed': datetime.datetime(2023, 3, 1, 20, 56, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 21, 44, 7, tzinfo=datetime.timezone.utc), 'time_taken': 83569.0, 'time_delta': '23:12:49', 'additions': 97, 'deletions': 16, 'state': 'closed'}, {'id': 1249145114, 'number': 22994, 'closed': datetime.datetime(2023, 2, 21, 20, 12, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 21, 18, 58, 13, tzinfo=datetime.timezone.utc), 'time_taken': 4475.0, 'time_delta': '1:14:35', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1241646536, 'number': 22933, 'closed': datetime.datetime(2023, 2, 21, 5, 47, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 15, 7, 31, 18, tzinfo=datetime.timezone.utc), 'time_taken': 512198.0, 'time_delta': '5 days, 22:16:38', 'additions': 247, 'deletions': 2, 'state': 'closed'}, {'id': 1229497702, 'number': 22834, 'closed': datetime.datetime(2023, 2, 15, 8, 14, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 5, 16, 8, 44, tzinfo=datetime.timezone.utc), 'time_taken': 835559.0, 'time_delta': '9 days, 16:05:59', 'additions': 39, 'deletions': 17, 'state': 'closed'}, {'id': 1220571709, 'number': 22773, 'closed': datetime.datetime(2023, 1, 31, 10, 56, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 29, 10, 14, 3, tzinfo=datetime.timezone.utc), 'time_taken': 175361.0, 'time_delta': '2 days, 0:42:41', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 1212690331, 'number': 22711, 'closed': datetime.datetime(2023, 1, 25, 7, 15, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 22, 18, 25, 55, tzinfo=datetime.timezone.utc), 'time_taken': 218973.0, 'time_delta': '2 days, 12:49:33', 'additions': 19, 'deletions': 1, 'state': 'closed'}, {'id': 1189993262, 'number': 22613, 'closed': datetime.datetime(2023, 1, 10, 2, 22, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 8, 22, 27, 34, tzinfo=datetime.timezone.utc), 'time_taken': 100510.0, 'time_delta': '1 day, 3:55:10', 'additions': 44, 'deletions': 1, 'state': 'closed'}, {'id': 1176062942, 'number': 22485, 'closed': datetime.datetime(2022, 12, 30, 22, 40, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 23, 6, 17, 17, tzinfo=datetime.timezone.utc), 'time_taken': 663819.0, 'time_delta': '7 days, 16:23:39', 'additions': 11, 'deletions': 6, 'state': 'closed'}, {'id': 1112536324, 'number': 22141, 'closed': None, 'created': datetime.datetime(2022, 11, 7, 10, 7, 58, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 195, 'deletions': 73, 'state': 'open'}, {'id': 1073808202, 'number': 21858, 'closed': datetime.datetime(2023, 7, 4, 19, 48, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 2, 10, 54, tzinfo=datetime.timezone.utc), 'time_taken': 23792086.0, 'time_delta': '275 days, 8:54:46', 'additions': 291, 'deletions': 1, 'state': 'closed'}, {'id': 1069083833, 'number': 21822, 'closed': datetime.datetime(2022, 12, 14, 20, 20, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 27, 19, 52, 27, tzinfo=datetime.timezone.utc), 'time_taken': 6740858.0, 'time_delta': '78 days, 0:27:38', 'additions': 493, 'deletions': 5, 'state': 'closed'}, {'id': 1052227885, 'number': 21685, 'closed': datetime.datetime(2023, 12, 19, 17, 51, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 10, 11, 44, 18, tzinfo=datetime.timezone.utc), 'time_taken': 40198025.0, 'time_delta': '465 days, 6:07:05', 'additions': 245, 'deletions': 0, 'state': 'closed'}, {'id': 1033193062, 'number': 21522, 'closed': datetime.datetime(2022, 8, 22, 23, 12, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 18, 20, 13, tzinfo=datetime.timezone.utc), 'time_taken': 17553.0, 'time_delta': '4:52:33', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 1033175428, 'number': 21521, 'closed': datetime.datetime(2022, 8, 24, 8, 26, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 18, 1, 31, tzinfo=datetime.timezone.utc), 'time_taken': 138297.0, 'time_delta': '1 day, 14:24:57', 'additions': 746, 'deletions': 674, 'state': 'closed'}, {'id': 941086815, 'number': 20801, 'closed': datetime.datetime(2022, 5, 19, 6, 31, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 19, 5, 32, 29, tzinfo=datetime.timezone.utc), 'time_taken': 3553.0, 'time_delta': '0:59:13', 'additions': 14, 'deletions': 2, 'state': 'closed'}, {'id': 906957278, 'number': 20513, 'closed': datetime.datetime(2022, 7, 19, 19, 45, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 12, 4, 53, 15, tzinfo=datetime.timezone.utc), 'time_taken': 8520744.0, 'time_delta': '98 days, 14:52:24', 'additions': 446, 'deletions': 316, 'state': 'closed'}, {'id': 841128367, 'number': 20015, 'closed': None, 'created': datetime.datetime(2022, 2, 6, 18, 33, 45, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 324, 'deletions': 8, 'state': 'open'}, {'id': 836032863, 'number': 19948, 'closed': datetime.datetime(2022, 2, 1, 8, 12, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 31, 11, 27, 55, tzinfo=datetime.timezone.utc), 'time_taken': 74702.0, 'time_delta': '20:45:02', 'additions': 12, 'deletions': 7, 'state': 'closed'}, {'id': 823876294, 'number': 19809, 'closed': datetime.datetime(2022, 1, 31, 5, 48, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 16, 10, 23, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1279487.0, 'time_delta': '14 days, 19:24:47', 'additions': 77, 'deletions': 0, 'state': 'closed'}, {'id': 811421244, 'number': 19631, 'closed': datetime.datetime(2022, 2, 3, 0, 10, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 29, 11, 20, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3070206.0, 'time_delta': '35 days, 12:50:06', 'additions': 71, 'deletions': 43, 'state': 'closed'}, {'id': 809756226, 'number': 19604, 'closed': None, 'created': datetime.datetime(2021, 12, 24, 15, 1, 54, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 34, 'deletions': 12, 'state': 'open'}, {'id': 808377881, 'number': 19593, 'closed': None, 'created': datetime.datetime(2021, 12, 22, 13, 1, 54, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 25, 'deletions': 27, 'state': 'open'}, {'id': 800742916, 'number': 19499, 'closed': datetime.datetime(2022, 1, 31, 5, 10, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 12, 22, 0, 7, tzinfo=datetime.timezone.utc), 'time_taken': 4259414.0, 'time_delta': '49 days, 7:10:14', 'additions': 13, 'deletions': 15, 'state': 'closed'}, {'id': 800730632, 'number': 19498, 'closed': None, 'created': datetime.datetime(2021, 12, 12, 20, 40, 52, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1023, 'deletions': 8, 'state': 'open'}, {'id': 774200823, 'number': 19162, 'closed': datetime.datetime(2021, 12, 2, 23, 2, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 5, 12, 29, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2370825.0, 'time_delta': '27 days, 10:33:45', 'additions': 286, 'deletions': 1, 'state': 'closed'}, {'id': 768203653, 'number': 19062, 'closed': None, 'created': datetime.datetime(2021, 10, 28, 10, 26, 26, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 178, 'deletions': 21, 'state': 'open'}, {'id': 747869138, 'number': 18820, 'closed': datetime.datetime(2021, 11, 16, 6, 8, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 1, 18, 59, 43, tzinfo=datetime.timezone.utc), 'time_taken': 3928114.0, 'time_delta': '45 days, 11:08:34', 'additions': 41, 'deletions': 11, 'state': 'closed'}, {'id': 746740156, 'number': 18806, 'closed': datetime.datetime(2021, 10, 11, 6, 21, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 30, 14, 9, 42, tzinfo=datetime.timezone.utc), 'time_taken': 922327.0, 'time_delta': '10 days, 16:12:07', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 727461782, 'number': 18584, 'closed': datetime.datetime(2022, 1, 31, 5, 38, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 5, 20, 11, tzinfo=datetime.timezone.utc), 'time_taken': 12734850.0, 'time_delta': '147 days, 9:27:30', 'additions': 109, 'deletions': 22, 'state': 'closed'}, {'id': 727194351, 'number': 18571, 'closed': datetime.datetime(2021, 9, 4, 9, 34, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 4, 7, 12, 17, tzinfo=datetime.timezone.utc), 'time_taken': 8541.0, 'time_delta': '2:22:21', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 717640648, 'number': 18424, 'closed': datetime.datetime(2021, 8, 30, 5, 8, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 9, 4, 34, tzinfo=datetime.timezone.utc), 'time_taken': 590650.0, 'time_delta': '6 days, 20:04:10', 'additions': 68, 'deletions': 47, 'state': 'closed'}, {'id': 704957135, 'number': 18230, 'closed': datetime.datetime(2021, 8, 17, 6, 9, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 19, 12, 2, tzinfo=datetime.timezone.utc), 'time_taken': 989874.0, 'time_delta': '11 days, 10:57:54', 'additions': 36, 'deletions': 9, 'state': 'closed'}, {'id': 699472960, 'number': 18158, 'closed': datetime.datetime(2021, 8, 9, 5, 54, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 12, 8, 5, tzinfo=datetime.timezone.utc), 'time_taken': 927966.0, 'time_delta': '10 days, 17:46:06', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 696548716, 'number': 18112, 'closed': None, 'created': datetime.datetime(2021, 7, 25, 19, 0, 15, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 39, 'deletions': 3, 'state': 'open'}, {'id': 696543949, 'number': 18111, 'closed': datetime.datetime(2021, 9, 5, 20, 11, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 25, 18, 21, 46, tzinfo=datetime.timezone.utc), 'time_taken': 3635377.0, 'time_delta': '42 days, 1:49:37', 'additions': 86, 'deletions': 55, 'state': 'closed'}, {'id': 683232182, 'number': 17930, 'closed': datetime.datetime(2021, 8, 23, 6, 0, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 20, 26, 23, tzinfo=datetime.timezone.utc), 'time_taken': 4268074.0, 'time_delta': '49 days, 9:34:34', 'additions': 750, 'deletions': 15, 'state': 'closed'}, {'id': 674790593, 'number': 17828, 'closed': None, 'created': datetime.datetime(2021, 6, 21, 18, 44, 39, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 144, 'deletions': 28, 'state': 'open'}, {'id': 663032362, 'number': 17680, 'closed': None, 'created': datetime.datetime(2021, 6, 6, 19, 23, 8, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 139, 'deletions': 66, 'state': 'open'}, {'id': 663018074, 'number': 17679, 'closed': None, 'created': datetime.datetime(2021, 6, 6, 18, 7, 51, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 31, 'deletions': 2, 'state': 'open'}, {'id': 662556744, 'number': 17667, 'closed': datetime.datetime(2021, 6, 14, 6, 59, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 18, 53, 5, tzinfo=datetime.timezone.utc), 'time_taken': 734807.0, 'time_delta': '8 days, 12:06:47', 'additions': 65, 'deletions': 23, 'state': 'closed'}, {'id': 659948514, 'number': 17632, 'closed': datetime.datetime(2021, 7, 5, 6, 21, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 10, 44, 27, tzinfo=datetime.timezone.utc), 'time_taken': 2835420.0, 'time_delta': '32 days, 19:37:00', 'additions': 106, 'deletions': 54, 'state': 'closed'}, {'id': 654149533, 'number': 17571, 'closed': datetime.datetime(2021, 6, 12, 4, 31, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 19, 14, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1415844.0, 'time_delta': '16 days, 9:17:24', 'additions': 117, 'deletions': 64, 'state': 'closed'}, {'id': 636131517, 'number': 17397, 'closed': datetime.datetime(2021, 5, 9, 23, 7, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 9, 17, 56, 8, tzinfo=datetime.timezone.utc), 'time_taken': 18675.0, 'time_delta': '5:11:15', 'additions': 26, 'deletions': 3, 'state': 'closed'}, {'id': 629991540, 'number': 17355, 'closed': datetime.datetime(2021, 5, 6, 6, 25, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 4, 18, 1, 45, tzinfo=datetime.timezone.utc), 'time_taken': 131007.0, 'time_delta': '1 day, 12:23:27', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 617542811, 'number': 17219, 'closed': datetime.datetime(2021, 5, 3, 0, 3, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 18, 19, 41, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1225369.0, 'time_delta': '14 days, 4:22:49', 'additions': 4, 'deletions': 10, 'state': 'closed'}, {'id': 617539145, 'number': 17218, 'closed': None, 'created': datetime.datetime(2021, 4, 18, 19, 16, 27, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 12, 'deletions': 5, 'state': 'open'}, {'id': 608499384, 'number': 17093, 'closed': datetime.datetime(2021, 4, 5, 4, 43, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 4, 6, 57, 3, tzinfo=datetime.timezone.utc), 'time_taken': 78386.0, 'time_delta': '21:46:26', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 593313865, 'number': 16907, 'closed': datetime.datetime(2021, 3, 22, 5, 4, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 18, 51, 5, tzinfo=datetime.timezone.utc), 'time_taken': 555218.0, 'time_delta': '6 days, 10:13:38', 'additions': 19, 'deletions': 22, 'state': 'closed'}, {'id': 593286993, 'number': 16906, 'closed': datetime.datetime(2021, 4, 5, 5, 9, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 18, 9, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1767612.0, 'time_delta': '20 days, 11:00:12', 'additions': 75, 'deletions': 3, 'state': 'closed'}, {'id': 591426587, 'number': 16880, 'closed': datetime.datetime(2021, 3, 22, 5, 21, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 12, 7, 4, 36, tzinfo=datetime.timezone.utc), 'time_taken': 857822.0, 'time_delta': '9 days, 22:17:02', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 589245233, 'number': 16865, 'closed': datetime.datetime(2021, 3, 23, 1, 2, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 10, 8, 12, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1097407.0, 'time_delta': '12 days, 16:50:07', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 587023490, 'number': 16849, 'closed': datetime.datetime(2021, 4, 19, 5, 23, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 8, 19, 1, 51, tzinfo=datetime.timezone.utc), 'time_taken': 3579696.0, 'time_delta': '41 days, 10:21:36', 'additions': 108, 'deletions': 62, 'state': 'closed'}, {'id': 582224211, 'number': 16777, 'closed': datetime.datetime(2021, 3, 2, 1, 13, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 1, 16, 57, 37, tzinfo=datetime.timezone.utc), 'time_taken': 29774.0, 'time_delta': '8:16:14', 'additions': 29, 'deletions': 0, 'state': 'closed'}, {'id': 577154114, 'number': 16697, 'closed': datetime.datetime(2021, 3, 9, 2, 2, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 21, 18, 10, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1324316.0, 'time_delta': '15 days, 7:51:56', 'additions': 172, 'deletions': 54, 'state': 'closed'}, {'id': 572381038, 'number': 16604, 'closed': datetime.datetime(2021, 3, 8, 7, 33, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 9, 14, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2067546.0, 'time_delta': '23 days, 22:19:06', 'additions': 224, 'deletions': 52, 'state': 'closed'}, {'id': 571662587, 'number': 16596, 'closed': datetime.datetime(2021, 2, 12, 7, 48, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 11, 8, 54, 10, tzinfo=datetime.timezone.utc), 'time_taken': 82447.0, 'time_delta': '22:54:07', 'additions': 16, 'deletions': 9, 'state': 'closed'}, {'id': 567042924, 'number': 16500, 'closed': datetime.datetime(2021, 2, 16, 11, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 3, 18, 21, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1097207.0, 'time_delta': '12 days, 16:46:47', 'additions': 99, 'deletions': 10, 'state': 'closed'}, {'id': 566655613, 'number': 16494, 'closed': datetime.datetime(2021, 2, 3, 8, 54, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 3, 8, 54, 11, tzinfo=datetime.timezone.utc), 'time_taken': 26.0, 'time_delta': '0:00:26', 'additions': 98, 'deletions': 1, 'state': 'closed'}, {'id': 523716175, 'number': 15850, 'closed': datetime.datetime(2020, 11, 19, 7, 46, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 19, 6, 43, 26, tzinfo=datetime.timezone.utc), 'time_taken': 3783.0, 'time_delta': '1:03:03', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 522955651, 'number': 15836, 'closed': datetime.datetime(2020, 11, 18, 9, 23, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 18, 6, 42, 58, tzinfo=datetime.timezone.utc), 'time_taken': 9649.0, 'time_delta': '2:40:49', 'additions': 3, 'deletions': 130, 'state': 'closed'}, {'id': 517261903, 'number': 15750, 'closed': datetime.datetime(2020, 11, 8, 23, 37, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 8, 6, 42, 19, tzinfo=datetime.timezone.utc), 'time_taken': 60929.0, 'time_delta': '16:55:29', 'additions': 4, 'deletions': 8, 'state': 'closed'}, {'id': 501195379, 'number': 15553, 'closed': datetime.datetime(2021, 2, 1, 5, 34, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 11, 19, 42, 56, tzinfo=datetime.timezone.utc), 'time_taken': 9712278.0, 'time_delta': '112 days, 9:51:18', 'additions': 1458, 'deletions': 632, 'state': 'closed'}, {'id': 472159949, 'number': 15136, 'closed': datetime.datetime(2020, 8, 23, 23, 49, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 23, 18, 23, 43, tzinfo=datetime.timezone.utc), 'time_taken': 19535.0, 'time_delta': '5:25:35', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 470686443, 'number': 15111, 'closed': datetime.datetime(2020, 10, 11, 19, 45, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 6, 16, 59, tzinfo=datetime.timezone.utc), 'time_taken': 4541290.0, 'time_delta': '52 days, 13:28:10', 'additions': 89, 'deletions': 2, 'state': 'closed'}, {'id': 458204639, 'number': 14934, 'closed': datetime.datetime(2020, 8, 26, 6, 43, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 5, 33, 50, tzinfo=datetime.timezone.utc), 'time_taken': 2423397.0, 'time_delta': '28 days, 1:09:57', 'additions': 93, 'deletions': 28, 'state': 'closed'}, {'id': 449260760, 'number': 14819, 'closed': datetime.datetime(2020, 8, 5, 6, 37, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 5, 53, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1817007.0, 'time_delta': '21 days, 0:43:27', 'additions': 365, 'deletions': 68, 'state': 'closed'}, {'id': 449255620, 'number': 14817, 'closed': datetime.datetime(2020, 7, 15, 6, 50, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 5, 38, 4, tzinfo=datetime.timezone.utc), 'time_taken': 4335.0, 'time_delta': '1:12:15', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 447249233, 'number': 14794, 'closed': datetime.datetime(2021, 7, 25, 19, 1, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 6, 18, 16, tzinfo=datetime.timezone.utc), 'time_taken': 32877805.0, 'time_delta': '380 days, 12:43:25', 'additions': 36, 'deletions': 2, 'state': 'closed'}, {'id': 447244493, 'number': 14793, 'closed': datetime.datetime(2020, 7, 10, 6, 49, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 6, 3, 50, tzinfo=datetime.timezone.utc), 'time_taken': 2711.0, 'time_delta': '0:45:11', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 442521446, 'number': 14727, 'closed': datetime.datetime(2020, 7, 1, 8, 13, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 8, 10, 32, tzinfo=datetime.timezone.utc), 'time_taken': 173.0, 'time_delta': '0:02:53', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 442472049, 'number': 14726, 'closed': datetime.datetime(2020, 8, 23, 23, 53, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 6, 24, 36, tzinfo=datetime.timezone.utc), 'time_taken': 4642126.0, 'time_delta': '53 days, 17:28:46', 'additions': 283, 'deletions': 25, 'state': 'closed'}, {'id': 437407553, 'number': 14647, 'closed': datetime.datetime(2020, 6, 23, 0, 42, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 12, 38, 34, tzinfo=datetime.timezone.utc), 'time_taken': 216248.0, 'time_delta': '2 days, 12:04:08', 'additions': 5, 'deletions': 6, 'state': 'closed'}, {'id': 435616007, 'number': 14623, 'closed': datetime.datetime(2020, 7, 1, 6, 24, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 5, 41, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1212185.0, 'time_delta': '14 days, 0:43:05', 'additions': 229, 'deletions': 28, 'state': 'closed'}, {'id': 434341703, 'number': 14607, 'closed': datetime.datetime(2020, 6, 16, 23, 26, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 7, 23, 11, tzinfo=datetime.timezone.utc), 'time_taken': 144221.0, 'time_delta': '1 day, 16:03:41', 'additions': 12, 'deletions': 11, 'state': 'closed'}, {'id': 433990359, 'number': 14595, 'closed': datetime.datetime(2020, 6, 24, 2, 42, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 10, 43, tzinfo=datetime.timezone.utc), 'time_taken': 921561.0, 'time_delta': '10 days, 15:59:21', 'additions': 139, 'deletions': 34, 'state': 'closed'}, {'id': 430868831, 'number': 14556, 'closed': datetime.datetime(2020, 6, 19, 0, 45, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 7, 36, 54, tzinfo=datetime.timezone.utc), 'time_taken': 925722.0, 'time_delta': '10 days, 17:08:42', 'additions': 73, 'deletions': 39, 'state': 'closed'}, {'id': 421284751, 'number': 14422, 'closed': datetime.datetime(2020, 5, 29, 23, 55, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 21, 10, 49, 28, tzinfo=datetime.timezone.utc), 'time_taken': 738378.0, 'time_delta': '8 days, 13:06:18', 'additions': 35, 'deletions': 2, 'state': 'closed'}, {'id': 418167794, 'number': 14370, 'closed': datetime.datetime(2021, 1, 3, 7, 54, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 14, 18, 15, 57, tzinfo=datetime.timezone.utc), 'time_taken': 20180339.0, 'time_delta': '233 days, 13:38:59', 'additions': 125, 'deletions': 1, 'state': 'closed'}, {'id': 412444601, 'number': 14259, 'closed': datetime.datetime(2020, 10, 27, 6, 15, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 2, 12, 26, 54, tzinfo=datetime.timezone.utc), 'time_taken': 15356891.0, 'time_delta': '177 days, 17:48:11', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 408761077, 'number': 14188, 'closed': None, 'created': datetime.datetime(2020, 4, 24, 20, 55, 9, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 16, 'deletions': 2, 'state': 'open'}, {'id': 407787746, 'number': 14170, 'closed': datetime.datetime(2020, 4, 23, 23, 25, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 23, 9, 18, 35, tzinfo=datetime.timezone.utc), 'time_taken': 50786.0, 'time_delta': '14:06:26', 'additions': 19, 'deletions': 0, 'state': 'closed'}, {'id': 407178400, 'number': 14164, 'closed': datetime.datetime(2020, 4, 22, 22, 26, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 22, 9, 52, 55, tzinfo=datetime.timezone.utc), 'time_taken': 45229.0, 'time_delta': '12:33:49', 'additions': 67, 'deletions': 0, 'state': 'closed'}, {'id': 405454175, 'number': 14123, 'closed': datetime.datetime(2020, 6, 20, 11, 39, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 18, 6, 39, 58, tzinfo=datetime.timezone.utc), 'time_taken': 5461149.0, 'time_delta': '63 days, 4:59:09', 'additions': 17, 'deletions': 8, 'state': 'closed'}, {'id': 402294063, 'number': 14065, 'closed': None, 'created': datetime.datetime(2020, 4, 12, 6, 16, 7, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 13, 'deletions': 14, 'state': 'open'}, {'id': 401350627, 'number': 14038, 'closed': datetime.datetime(2020, 4, 21, 11, 12, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 9, 10, 46, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1038396.0, 'time_delta': '12 days, 0:26:36', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 400683062, 'number': 14021, 'closed': datetime.datetime(2020, 4, 10, 2, 18, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 8, 7, 42, 48, tzinfo=datetime.timezone.utc), 'time_taken': 153348.0, 'time_delta': '1 day, 18:35:48', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 400097581, 'number': 14016, 'closed': datetime.datetime(2020, 4, 7, 8, 57, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 7, 45, 50, tzinfo=datetime.timezone.utc), 'time_taken': 4272.0, 'time_delta': '1:11:12', 'additions': 53, 'deletions': 53, 'state': 'closed'}, {'id': 398495104, 'number': 13994, 'closed': datetime.datetime(2020, 4, 6, 23, 5, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 4, 9, 20, 46, tzinfo=datetime.timezone.utc), 'time_taken': 222266.0, 'time_delta': '2 days, 13:44:26', 'additions': 52, 'deletions': 0, 'state': 'closed'}, {'id': 396939191, 'number': 13962, 'closed': datetime.datetime(2020, 4, 6, 23, 9, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 1, 11, 36, 41, tzinfo=datetime.timezone.utc), 'time_taken': 473586.0, 'time_delta': '5 days, 11:33:06', 'additions': 83, 'deletions': 0, 'state': 'closed'}, {'id': 396112726, 'number': 13940, 'closed': datetime.datetime(2020, 4, 1, 6, 11, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 31, 6, 47, 55, tzinfo=datetime.timezone.utc), 'time_taken': 84234.0, 'time_delta': '23:23:54', 'additions': 0, 'deletions': 46, 'state': 'closed'}, {'id': 395662136, 'number': 13934, 'closed': datetime.datetime(2020, 4, 20, 23, 22, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 30, 13, 45, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1849029.0, 'time_delta': '21 days, 9:37:09', 'additions': 2, 'deletions': 40, 'state': 'closed'}, {'id': 394831380, 'number': 13910, 'closed': datetime.datetime(2020, 3, 30, 23, 7, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 27, 15, 49, 28, tzinfo=datetime.timezone.utc), 'time_taken': 285503.0, 'time_delta': '3 days, 7:18:23', 'additions': 46, 'deletions': 1, 'state': 'closed'}, {'id': 394179429, 'number': 13898, 'closed': datetime.datetime(2020, 6, 15, 23, 27, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 26, 13, 44, 39, tzinfo=datetime.timezone.utc), 'time_taken': 7033361.0, 'time_delta': '81 days, 9:42:41', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 392379760, 'number': 13867, 'closed': datetime.datetime(2020, 3, 23, 23, 26, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 23, 13, 19, 6, tzinfo=datetime.timezone.utc), 'time_taken': 36420.0, 'time_delta': '10:07:00', 'additions': 14, 'deletions': 5, 'state': 'closed'}, {'id': 385285236, 'number': 13759, 'closed': datetime.datetime(2020, 6, 17, 7, 44, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 8, 16, 23, 10, tzinfo=datetime.timezone.utc), 'time_taken': 8695309.0, 'time_delta': '100 days, 15:21:49', 'additions': 16, 'deletions': 8, 'state': 'closed'}, {'id': 385190929, 'number': 13754, 'closed': datetime.datetime(2020, 6, 17, 7, 43, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 7, 20, 40, 17, tzinfo=datetime.timezone.utc), 'time_taken': 8766192.0, 'time_delta': '101 days, 11:03:12', 'additions': 7, 'deletions': 29, 'state': 'closed'}, {'id': 381264205, 'number': 13686, 'closed': None, 'created': datetime.datetime(2020, 2, 28, 8, 23, 55, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 15, 'deletions': 4, 'state': 'open'}, {'id': 379742840, 'number': 13670, 'closed': None, 'created': datetime.datetime(2020, 2, 25, 18, 52, 9, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 7, 'deletions': 1, 'state': 'open'}, {'id': 379621226, 'number': 13667, 'closed': datetime.datetime(2020, 3, 3, 0, 37, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 25, 14, 39, 56, tzinfo=datetime.timezone.utc), 'time_taken': 554245.0, 'time_delta': '6 days, 9:57:25', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 377083004, 'number': 13614, 'closed': datetime.datetime(2020, 2, 25, 0, 2, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 19, 10, 22, 50, tzinfo=datetime.timezone.utc), 'time_taken': 481195.0, 'time_delta': '5 days, 13:39:55', 'additions': 7, 'deletions': 16, 'state': 'closed'}, {'id': 376432887, 'number': 13600, 'closed': datetime.datetime(2020, 2, 19, 0, 45, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 18, 6, 0, 44, tzinfo=datetime.timezone.utc), 'time_taken': 67479.0, 'time_delta': '18:44:39', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 371820182, 'number': 13505, 'closed': datetime.datetime(2020, 2, 17, 23, 14, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 6, 10, 25, 45, tzinfo=datetime.timezone.utc), 'time_taken': 996528.0, 'time_delta': '11 days, 12:48:48', 'additions': 24, 'deletions': 3, 'state': 'closed'}, {'id': 369878301, 'number': 13446, 'closed': datetime.datetime(2020, 2, 19, 2, 28, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 1, 9, 33, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1529715.0, 'time_delta': '17 days, 16:55:15', 'additions': 83, 'deletions': 0, 'state': 'closed'}, {'id': 367894401, 'number': 13401, 'closed': datetime.datetime(2020, 1, 29, 7, 57, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 28, 8, 55, 48, tzinfo=datetime.timezone.utc), 'time_taken': 82896.0, 'time_delta': '23:01:36', 'additions': 54, 'deletions': 0, 'state': 'closed'}, {'id': 364150753, 'number': 13308, 'closed': datetime.datetime(2021, 2, 4, 6, 37, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 17, 13, 50, 55, tzinfo=datetime.timezone.utc), 'time_taken': 33151567.0, 'time_delta': '383 days, 16:46:07', 'additions': 48, 'deletions': 1, 'state': 'closed'}, {'id': 361980940, 'number': 13250, 'closed': datetime.datetime(2020, 1, 13, 9, 34, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 13, 7, 57, 59, tzinfo=datetime.timezone.utc), 'time_taken': 5810.0, 'time_delta': '1:36:50', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 361726411, 'number': 13234, 'closed': datetime.datetime(2020, 2, 17, 6, 34, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 11, 12, 39, 55, tzinfo=datetime.timezone.utc), 'time_taken': 3174899.0, 'time_delta': '36 days, 17:54:59', 'additions': 20, 'deletions': 11, 'state': 'closed'}, {'id': 359072116, 'number': 13162, 'closed': datetime.datetime(2020, 3, 2, 11, 24, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 3, 18, 0, 6, tzinfo=datetime.timezone.utc), 'time_taken': 5073849.0, 'time_delta': '58 days, 17:24:09', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 358578575, 'number': 13152, 'closed': None, 'created': datetime.datetime(2020, 1, 2, 7, 54, 10, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 91, 'deletions': 5, 'state': 'open'}, {'id': 356762480, 'number': 13109, 'closed': datetime.datetime(2021, 2, 4, 6, 36, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 25, 8, 20, 44, tzinfo=datetime.timezone.utc), 'time_taken': 35158541.0, 'time_delta': '406 days, 22:15:41', 'additions': 326, 'deletions': 2, 'state': 'closed'}, {'id': 285857334, 'number': 11518, 'closed': datetime.datetime(2019, 6, 12, 7, 3, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 6, 15, 31, 21, tzinfo=datetime.timezone.utc), 'time_taken': 487947.0, 'time_delta': '5 days, 15:32:27', 'additions': 43, 'deletions': 43, 'state': 'closed'}]"
