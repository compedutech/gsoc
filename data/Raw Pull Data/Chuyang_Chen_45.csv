pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
717156055,Support Rust types by retrieving them from debug info,"# Support Rust types by retrieving them from debug info

*This is the pull request for my [GSoC project](https://summerofcode.withgoogle.com/projects/#4718337369571328), and the last commit for this project is c96bc561b75c99093a0e72d961f48c077201e0a4.*

## What we have done

We wrote a parser to parse the type info contained in debug info generated by rustc, the Rust compiler. It indicates the types of data used in a Rust program, and these types are then used to construct initial type trees for Enzyme's type analysis. It facilitate Enzyme to use Rust types to assist its synthesis of differentiated functions.

## How to use it

The API contains two functions. One is in TypeAnalysis/RustDebugInfo.h

```C++
TypeTree parseDIType(DbgDeclareInst& I, DataLayout& DL);
```

It extract the type info from an instruction's debug info and build the type tree according to it. It doesn't care what location the type tree is associated with and only gives the type tree corresponding to the debug info type structure.

We also add a function to `TypeAnalyzer` class defined in TypeAnalysis/TypeAnalysis.h

```C++
void considerRustDebugInfo();
```

It looks up for the LLVM intrinsic [`llvm.dbg.declare`](https://www.llvm.org/docs/SourceLevelDebugging.html#llvm-dbg-declare) which is used by rustc to indicate declaration of a local variables, computes type trees for them, and infuses them to data related to these variables. Then, the type info will be propagated.

## Supported types

We now support data of the following types in Rust:

- Scalars (`u8`, `i8`, `f32`, `f64`, ...)
- Structs (defined by the `struct` keyword)
- Arrays (eg. `[f32; 4]`)
- Vectors (`Vec<T>`)
- Boxes (`Box<T>`)
- Pointers (`*const T`, `*mut T`)
- References (`&T`, `&mut T`)
- Unions (defined by the `union` keyword)

## Implementation

For someone who is interested in the implementation details, I can give a brief sketch. In short, the debug info types are in a recursive style. So, the process to parse them is just determining the types of different offsets in current layer according to current node, and then traversing all sub-nodes and getting types of offsets in their layers. To implement this, we write override functions for different kinds of debug info type nodes in TypeAnalysis/TypeAnalysis.cpp. They don't affect the usage of the parser, so we didn't expose them to the API.

A spacial case that should be mentioned when constructing type trees is that when the type to be parsed is `*u8` we just ignore it and return an empty tree, and `considerRustDebugInfo` will do nothing after receiving that empty tree. This is because that in Rust, any pointer type can be casted to `*u8` which may cause mismatch between the debug info types and the actual types of the underlying data.

## TODOs

The most urgent ones are extending the parser to more types and testing it thoroughly. TODOs are listed below according to their emergency.

- [ ] Support slices
- [ ] Support enums
- [ ] Support traits
- [ ] Test and debug

In the future, we may add predefined derivatives for frequently used functions in Rust to improve efficiency of compiling and running the differentiated functions. But that will be another story.",True,307,https://api.github.com/repos/EnzymeAD/Enzyme/pulls/307,https://github.com/EnzymeAD/Enzyme/pull/307,closed,1655,2,27,30,15,8,0,0,[],2021-08-21 13:56:47+00:00,2021-12-01 19:31:30+00:00,8832883.0,"102 days, 5:34:43","[{'comment_id': 693592599, 'comment_body': 'Is fnName needed here?', 'comment_created': datetime.datetime(2021, 8, 23, 1, 6, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wsmoses', 'type': 'User'}, {'comment_id': 693592668, 'comment_body': ""I'd consider wrapping this in an optional argument -- I think there's already a rust specific one even."", 'comment_created': datetime.datetime(2021, 8, 23, 1, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wsmoses', 'type': 'User'}, {'comment_id': 693901969, 'comment_body': ""No, it's a mistake. I'll delete it later."", 'comment_created': datetime.datetime(2021, 8, 23, 11, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'cychen2021', 'type': 'User'}, {'comment_id': 693902910, 'comment_body': 'Hmm, what do you mean by ""wrapping this in an optional argument""? Wrap what to where?', 'comment_created': datetime.datetime(2021, 8, 23, 11, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'cychen2021', 'type': 'User'}, {'comment_id': 740312703, 'comment_body': 'Remove these?', 'comment_created': datetime.datetime(2021, 11, 1, 15, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wsmoses', 'type': 'User'}, {'comment_id': 740342394, 'comment_body': '> Remove these?\r\n\r\nDo you mean removing the stars around build or anything else? @wsmoses \r\n\r\n\r\n', 'comment_created': datetime.datetime(2021, 11, 1, 16, 17, 28, tzinfo=datetime.timezone.utc), 'commenter': 'cychen2021', 'type': 'User'}, {'comment_id': 740342968, 'comment_body': ""I'd just leave the .gitignore the way it is."", 'comment_created': datetime.datetime(2021, 11, 1, 16, 18, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wsmoses', 'type': 'User'}, {'comment_id': 740347576, 'comment_body': ""> I'd just leave the .gitignore the way it is.\r\n\r\nOK I'll revert it."", 'comment_created': datetime.datetime(2021, 11, 1, 16, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'cychen2021', 'type': 'User'}]","[{'commit_sha': 'de3b12805ccddb1de48942eafa88b38d3cae55a4', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f58a4823822cb3b4b728e7d1b78491606d1cc56', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec2f746fcd26d2a05ce571f44cd3654812c041c7', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75b6301df44a13901265961e15649fec8251875c', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b363b5b543a4e5295973a2e80f77ac52726b93c', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f662274d4782097b1ad504ed214651cb3ac3fa0b', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c96bc561b75c99093a0e72d961f48c077201e0a4', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8240b1e5d479b090505e829c7de601a950cec92f', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2773fe1b05a5313a918416c3f5d9677cabd6cfe4', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e1ad9c7702c4dd9d539e87172dc2e32679a7a85', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7231c3145ea950b7f9cea6f673ed6fc14df79923', 'committer_username': 'wsmoses', 'committer_name': 'William Moses', 'committer_email': 'gh@wsmoses.com', 'commit_date': datetime.datetime(2011, 12, 13, 11, 52, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f2998076599a09a3fb4a72d50dd19a6469ae7e5', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b08016cb93e8ccf5cde8034c03a5b7f2ba2a185b', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0041f95790ef37a74dbe488e07d9379c16bb0f48', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b52a6bc774857eab4eda007f0e66beace29bd10', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a387cacb5ef5f088682a7586b6e2b233be233037', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd2fbbba94a94a05d7209ea789c7844f04d0620b', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ec2ebdaf9eef0ad35247660bb116b44b2afebb8', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6274a39c0d35293b34d28007927d1559a25d07cd', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2910c219ebffb22aeb0e315b07b8951529636b77', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aea95053be2aaf9834bdb29fee56538d6286c06f', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '532b47ab2606303919f6e3d6c072fd48e548e391', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '910c623c6f0a806bd4e7a67749f2a7c9d0fda60f', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'deb708e155d785fd99298aaff24aee79c43ce6dc', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c31053effa988df0b79d88119ecd04f288226a8', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0deafb3469cc7cbeec81f6d196203507d26c157b', 'committer_username': 'ZuseZ4', 'committer_name': 'Manuel Drehwald', 'committer_email': 'git@manuel.drehwald.info', 'commit_date': datetime.datetime(2017, 2, 1, 14, 7, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '497b67ac8c0ca8c4b594ecfc094a8539e01c61e1', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19239132a8ca94e7550769c21c3dcdb6a06b435b', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e8e1b6387caa51cdeac3aa4d0d77d34046d8107', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f092c93a848c472b6d8a1f09dcd132dc64e2df1b', 'committer_username': 'cychen2021', 'committer_name': 'Chuyang Chen', 'committer_email': 'chen.13875@osu.edu', 'commit_date': datetime.datetime(2016, 10, 18, 2, 5, 35, tzinfo=datetime.timezone.utc)}]",Chuyang Chen,22901252,chen.13875@osu.edu,User,,36,,14,14

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
172835975,Enzyme,EnzymeAD/Enzyme,LLVM,102,1242,30,50,2162,142,159,54,"[{'id': 717156055, 'number': 307, 'closed': datetime.datetime(2021, 12, 1, 19, 31, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 13, 56, 47, tzinfo=datetime.timezone.utc), 'time_taken': 8832883.0, 'time_delta': '102 days, 5:34:43', 'additions': 1655, 'deletions': 2, 'state': 'closed'}]"
