pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
671737971,"MRG, ENH: Create a tutorial for how to find intracranial electrode contacts from a CT and an MR image","Addresses part of #9155.

This is a tutorial for how to:

1) Align a CT to an MR using Dipy
2) Find the electrode contacts using a GUI (another PR for the GUI but it's the `img_pipe` one)
3) Warp the electrode contacts to `fsaverage` using Dipy

This prepares you to start the working with SEEG and working with ECoG tutorials which require you to already have electrode positions in MNI space before starting but don't explain how you find them.",True,9484,https://api.github.com/repos/mne-tools/mne-python/pulls/9484,https://github.com/mne-tools/mne-python/pull/9484,closed,641,13,13,55,40,29,0,0,[],2021-06-16 17:54:26+00:00,2021-06-24 15:00:07+00:00,680741.0,"7 days, 21:05:41","[{'comment_id': 655637841, 'comment_body': 'Do not use private attributes in examples, can this be accessed via `viewer.figure.axes[0]` for example? Or maybe `viewer.fig.axes[0]`?', 'comment_created': datetime.datetime(2021, 6, 21, 19, 10, 15, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657181563, 'comment_body': ""This is not specific to viz actually. A better place is `mne/surface.py`, it's where we put most of our our surface- and volume-mangling routines (and this is both)"", 'comment_created': datetime.datetime(2021, 6, 23, 14, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657190078, 'comment_body': '```suggestion\r\n    triangles = numpy_support.vtk_to_numpy(\r\n        polydata.GetPolys().GetConnectivityArray()).reshape(-1, 3)\r\n```', 'comment_created': datetime.datetime(2021, 6, 23, 15, 0, 18, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657194453, 'comment_body': ""```suggestion\r\nT1 = nib.load(op.join(misc_path, 'seeg', 'sample_seeg_T1.mgz'))\r\n```"", 'comment_created': datetime.datetime(2021, 6, 23, 15, 4, 18, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657194590, 'comment_body': ""```suggestion\r\nCT = nib.load(op.join(misc_path, 'seeg', 'sample_seeg_CT.mgz'))\r\n```"", 'comment_created': datetime.datetime(2021, 6, 23, 15, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657203039, 'comment_body': ""```suggestion\r\n    op.join(subjects_dir, 'fsaverage', 'mri', 'brain.mgz'))\r\n```"", 'comment_created': datetime.datetime(2021, 6, 23, 15, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657203318, 'comment_body': ""```suggestion\r\n    'fsaverage', subjects_dir=subjects_dir)\r\n```"", 'comment_created': datetime.datetime(2021, 6, 23, 15, 12, 8, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657203482, 'comment_body': ""```suggestion\r\nfig = mne.viz.plot_alignment(raw.info, trans, 'fsaverage',\r\n```"", 'comment_created': datetime.datetime(2021, 6, 23, 15, 12, 20, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657204844, 'comment_body': 'We usually reserve ""subject"" in tutorials like this to be the individual subject, so I wouldn\'t use `fsaverage` here. It\'s only used in a couple of places anyway.\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 6, 23, 15, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657208028, 'comment_body': 'Do you not have the original-unaligned CT? Or did it come aligned already? I\'m inclined to have some form of ""unaligned CT"" (can be this one) as the version stored in the dataset if it reflects the more general case that most people will have. It\'s better than faking it in the tutorial itself.', 'comment_created': datetime.datetime(2021, 6, 23, 15, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657312327, 'comment_body': 'What do you think about making `peak_to_volume` and `mne` function? Maybe renamed to `marching_voxels` or something. Where would it go if so?', 'comment_created': datetime.datetime(2021, 6, 23, 17, 22, 11, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 657313499, 'comment_body': 'Ok this was just copying the seeg tutorial', 'comment_created': datetime.datetime(2021, 6, 23, 17, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 657314211, 'comment_body': 'I thought you needed the freesurfer to get the header. I must be mistaken.', 'comment_created': datetime.datetime(2021, 6, 23, 17, 24, 53, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 657317854, 'comment_body': 'In that example, there is only ever one freesurfer subject: fsaverage. Here there are two: the actual subject, and the template (fsaverage).', 'comment_created': datetime.datetime(2021, 6, 23, 17, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657320235, 'comment_body': ""To me marching cubes (subject of this comment) should go in `mne/surface.py`. But if you're talking about some iEEG-specific (probably) function that maps X/Y/Z locations from one MRI volume into another would probably be useful. But let's get this tutorial working and merged, then hash out an API for this second function in another issue / PR / discussion. Let's make it work, then make it pretty."", 'comment_created': datetime.datetime(2021, 6, 23, 17, 32, 59, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657445548, 'comment_body': 'Oops I missed seeing this comment and made a `voxel_neighbors` function in `mne/surface.py` it would be fine to pull out and put back in the tutorial but the tutorial is a lot cleaner without it. Some of the slicing is really better not shown in a tutorial, seems unnecessarily confusing although generalizable to N dimensions.', 'comment_created': datetime.datetime(2021, 6, 23, 20, 40, 18, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 657540462, 'comment_body': ""Why is this recommended? it doesn't seem like it should be necessary for the affine to be computed correctly. The center-of-mass alignment should render this step unnecessary"", 'comment_created': datetime.datetime(2021, 6, 24, 0, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657540612, 'comment_body': 'I would call this `CT_aligned` and the one above `CT_orig`', 'comment_created': datetime.datetime(2021, 6, 24, 0, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657541899, 'comment_body': ""This code is *very* similar to what we have with the code in `mne.morph._compute_morph_sdr`, and it's also referenced above. I think it's worth exposing some public function that calls that function internally to simplify this (the public version would probably only be a few lines at most). Maybe `mne.morph.align_volumes(img_from, img_to, zooms=None, n_iter_sdr=(...), ...)` and the call here would be something like:\r\n```\r\naffreg, _ = mne.morph.align_volumes(\r\n    subject_brain, template_brain, zooms=(5, 5, 5),  # zooms != 1 here just for speed\r\n    n_sdr_iter=())  # skip SDR step just for speed\r\nreg_affine = affreg.affine\r\n```\r\nThe second output here would be the SDR morph, which is None because `n_sdr_iter=()` here. And below we just say the complete call that was used actually didn't set `n_sdr_iter`, and is skipped here for speed because it takes too long. This is kind of where I was headed with the refactoring of `mne.morph._compute_morph_sdr`, so it shouldn't require too much code to get there I don't think. (The logging provided by that, including the R^2 values, is really nice, too, I think.)\r\n\r\nBut does it really still take too long when we use `zooms=(5, 5, 5)` and tweak the iterations? We use this in another example and it's fine:\r\n\r\nhttps://github.com/mne-tools/mne-python/blob/653ada8b9b0d4937d0944afd5ad29712600892a5/examples/inverse/morph_volume_stc.py#L83-L87"", 'comment_created': datetime.datetime(2021, 6, 24, 0, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657544308, 'comment_body': 'Ahh so one difference is that this is computed at the native resolution rather than the reduced space. So maybe we need an API like `zooms=dict(affine=(5, 5, 5), sdr=(1, 1, 1))` in the `mne.morph.align_volumes` function.', 'comment_created': datetime.datetime(2021, 6, 24, 0, 30, 47, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657546255, 'comment_body': 'I guess this is extraneous, it was in `img_pipe` so I thought there was a good reason for it but I guess `recon-all` works just as well without it.', 'comment_created': datetime.datetime(2021, 6, 24, 0, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 657547002, 'comment_body': 'I would ask whoever wrote the recommendation what it\'s based on. If it\'s just ""nice to have"" then maybe we don\'t need it.\r\n\r\nOr maybe better we can update the dataset (again!) to have the actual original, not-ACPC-aligned T1, plus a voxel number (found in FreeView) of the ACPC, and write a little function `img_realigned = mne.morph.realign_acpc(img, acpc_voxel)` that does this. That could be a follow-up PR, though :)', 'comment_created': datetime.datetime(2021, 6, 24, 0, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657547233, 'comment_body': '(My naive sense is that this is probably just ""good FreeSurfer practice"", in which case it should live in some separate FreeSurfer tutorial and we should talk about this there. But if it\'s for example standard in iEEG specifically but not MRI generally to do this then it should live here.)', 'comment_created': datetime.datetime(2021, 6, 24, 0, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657549124, 'comment_body': ""Yes, it still takes too long because those are downsampled by a factor of 5 and for accuracy, the SDR needs to be computed on the full-resolution brain although the affine registration can be on the downsampled brain.\r\n\r\nMaybe this should be another PR to get this moving. Or if you want to refactor that would be good too but that's more things that might break and have to be fixed on the way and this is already getting quite extensive."", 'comment_created': datetime.datetime(2021, 6, 24, 0, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 657549399, 'comment_body': 'Yeah, that was the gist of my comment above, sorry should have read this one first.', 'comment_created': datetime.datetime(2021, 6, 24, 0, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 657550612, 'comment_body': ""Okay for now I'll just fix the tests I broke and then we can hopefully merge. Then I'll make a quick follow-up to finish the refactoring / new function idea. That's mostly separable anyway so will make reviewing easier anyway!"", 'comment_created': datetime.datetime(2021, 6, 24, 0, 50, 46, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657553784, 'comment_body': 'How much of this can be replaced by https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.label.html ?', 'comment_created': datetime.datetime(2021, 6, 24, 1, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 657584493, 'comment_body': ""I gave it a college try, but it really just doesn't work very well or at least I don't know how to make it work. See 0e449d5 if you want to give it a try but I think having a specific function is really helpful for being computationally efficient. I think messing with parameters it could maybe work but there is an issue that one whole electrode gets labeled together which makes it tougher to sort out on the back end."", 'comment_created': datetime.datetime(2021, 6, 24, 2, 42, 13, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 658135787, 'comment_body': ""We probably don't need this"", 'comment_created': datetime.datetime(2021, 6, 24, 17, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}]","[{'commit_sha': '01e48df48ccc25fbb4c7108c3d0dc418a6bd62e6', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf2d2bad75d2bf96f3b88db401c31a3c86341e77', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd26bba8a967caf738b6ab90aa05078732ad4159c', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b86964bf901836c6280b68da3aa7f49dbcf1ffcb', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f06d10d0f730d2769da1575db9c8dd71ac3fb529', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c837c7941e4bb7275611cf14825cf005f5483595', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '075804fee95e6bdc4d826c8f8bb45e8888ecbc22', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd93172eafb8f777e54854767ebd2df2595e0a27d', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '268d9d4ce54cbf3894b393099a288a5620dada3c', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8aa8e379983d154abe026aa9cc71a8cbc322793', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e5a3f09f775ab423d1dc87ca0448d3f80fa3cad', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70ea5e9479d2fdade2c7753cff116bf94360a84f', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db24efb446c60e1f56c36d6b71e49b71793fbe3d', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f187391d306dfbd752e9118e06667b320025460', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86c6e53e5b21cbb8513ab658b6ba0e2b55469c55', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1573b76b7a5d73cf8987e8167c3934b3b8fc0409', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edabfc4f850ee2786e667bc7d587310dd71be7e7', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bf4e0fe08b4ed580d92bc3d4a8b64e067e5c64c', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33a0ac4e45eee971ac8be022039e5cebed3f2330', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79a6c5880f22bcd3f77970b73f00d621db9109d5', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e821ed5d091716d521efba722a5b73806e90132', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a5b4fafa834017aeffc8bcdf82fce7ff4e58481', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c2f6fef7ccdcd129e1d9243c51adc4562f5681', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f709304a014e3531d07ffdf4bf5ed2a90966be8', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec34e28a33e8aad62bc0738e2d3c3d99a7aea0d2', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24b58fb1b8d7d3fbf0930bd24db8a687822fdf34', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71a42d983e5b4a99aafad2c1acba5f0dddca82f9', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31530c57a9b5188fff471a799710b14d62f27ccc', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c95f7e63093b12ccd550f2907c04ffce6b519594', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae2b084e490530abd76913b8e5b50006e8d11573', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4d42f75e2c439f654ac8755a38f896a6fde184f', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27192c9b2f5b8d79ddb80f686f561b8fb34ae9c2', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99713ce9a614f824eb5cba4f4bd9288a69bd9d25', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1cec5c4e116b8c649375715e39ff1125b14b1ba', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb487e16ef897a4e19eaf3c429bf1e269142c376', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4282ae47c518c85c0901f66109aaf701a45dad60', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '953e86fecf7b1961685221a91dab962e27e45f4c', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8affcb493f8b09e8b75f903979a4545cf24822ae', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1324175872ad69e9603dd2d5ad30ceb6a8552771', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7793ac0f37c3f32109c600589982715704999ae7', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '080c50e5ea2a4855d0a606dcc423e5fbae286c72', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acf54209098cd3042ffeacd85fce669ce4aff0dc', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8855822c65273e776383e0db7e8bd485fa282800', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1107ac866a0ae44ef45049ef2c9700c23ef6b52a', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af4a052cfe820ded546b596c2907659daabe7f33', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '611e88e8e6c95e0341198631c8353bb64c894b37', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbf4df4ca6d7148774262edd727ae133d762b4a6', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e449d5c61bfa8de2b5e7d6d4257706bdb72fd5f', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9d3823f907bf751f5a0d1c93bce4fdcb9003686', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '196a6de0a7c4b8d93f096ee3723951cc6af13e5e', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ff6fcaee36d82cb9b2011b7a6d73d0e706781e2', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0600bb7dcc9b4bdb72d3c269d03f6d4dab75cc5c', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f565d3e6288a026ef02a7346d1e510460240713', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f46dd826bb63ec806db91113dd03330cbcbfd62', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29eaf89400d0234031724e58a908f3c8ebfda8a6', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
686435649,"[ENH, MRG] Encapsulate warp elec image in function","I thought the checks that the image warp worked properly and handling of the coordinate frames would be better handled by a function than leaving to copy paste. After writing it, the function seems rather cumbersome so it would be nice to get a review and maybe this isn't the best way to go about it. I tried splitting it into a piece for making an image and a piece for warping an image but that was cumbersome as well.

Also I didn't write a test because it is just too cumbersome but the example did work...
",True,9544,https://api.github.com/repos/mne-tools/mne-python/pulls/9544,https://github.com/mne-tools/mne-python/pull/9544,closed,394,110,10,22,23,28,0,0,[],2021-07-09 02:08:27+00:00,2021-07-16 22:16:04+00:00,677257.0,"7 days, 20:07:37","[{'comment_id': 666939490, 'comment_body': ""let's default to `temalpte='fsaverage'`. It's a reasonable choice and I assume many people will want it"", 'comment_created': datetime.datetime(2021, 7, 9, 13, 14, 27, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 666939946, 'comment_body': ""I don't think it's too onerous to require that the template is in the `subjects_dir` so we can just have one (i.e., get rid of `template_subjects_dir` and just use `subjects_dir`). `ln -s` exists for people who hate `cp -a`"", 'comment_created': datetime.datetime(2021, 7, 9, 13, 15, 5, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 668427465, 'comment_body': 'In our example they are in different directories so that would make things complicated. I think this is okay', 'comment_created': datetime.datetime(2021, 7, 13, 4, 58, 52, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 668703439, 'comment_body': ""So far the other functions that operate on two structurals in MNE (`mne coreg` / `mne.gui.coregistration`, `mne.compute_source_morph`) all use a single `subjects_dir`. I'm +1 or refactoring our sEEG example to adhere to this standard rather than adopt a new standard here, but I can live with something like this if we decide we want to do it all three places (here, coreg, morph).\r\n\r\nAlso we should consider if it's worth having the argument names here match what we have either for `compute_volume_registration` (moving/static) or `compute_source_morph` (subject_from/subject_to), or at least get close to that. My vote is to standardize around `subject_from` and `subject_to`, and maybe even update `compute_volume_registration` to have `image_from` and `image_to` to match."", 'comment_created': datetime.datetime(2021, 7, 13, 12, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 668877686, 'comment_body': ""+1 to only have one subjects_dir\r\n\r\nthat's why we fetch all the time fsaverage in our study. it's not big"", 'comment_created': datetime.datetime(2021, 7, 13, 15, 30, 5, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 668895764, 'comment_body': 'and yes +1 for image_from and image_to and subject_from/subject_to\r\nI find it very readable.', 'comment_created': datetime.datetime(2021, 7, 13, 15, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 669059269, 'comment_body': 'Maybe this will help teach someone reading the tutorial about symbolic links :)\r\nSounds convincing to me', 'comment_created': datetime.datetime(2021, 7, 13, 19, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 669067950, 'comment_body': 'Did you look in `mne/channels/*` and `mne/io/_digitization.py` to see if there is existing code that is close to this that could be refactored? Also this seems like the sort of thing that should live in one of those places', 'comment_created': datetime.datetime(2021, 7, 13, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 669068231, 'comment_body': ""Put as little code as possible into each context manager. So in each of these cases I think it's just the `warp_montage_volume` call"", 'comment_created': datetime.datetime(2021, 7, 13, 19, 58, 27, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 669068654, 'comment_body': 'old API with `template_subjects_dir`? ', 'comment_created': datetime.datetime(2021, 7, 13, 19, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 669804142, 'comment_body': 'Good point, thanks', 'comment_created': datetime.datetime(2021, 7, 14, 17, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 669858026, 'comment_body': ""Hmmm this is was a lot more complicated than I thought because the `dig` doesn't have the channel names...\r\n\r\nI'll push what I have, I think it's better but it's still a bit convoluted I think."", 'comment_created': datetime.datetime(2021, 7, 14, 18, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 670514356, 'comment_body': ""`decimal=1` means `0.1` i.e., 10 cm (units here are in meters). Surely this can be better? Also you don't need to explicitly `np.array` this and we always `from numpy.testing import assert_almost_equal` so I would do:\r\n```\r\n    assert_almost_equal(montage_warped.dig[0]['r'], [-0.31, 0.29, -0.35], decimal=3)\r\n```\r\nbut this fails\r\n```\r\nmne/tests/test_surface.py:287: in test_warp_montage_volume\r\n    np.testing.assert_almost_equal(\r\nE   AssertionError: \r\nE   Arrays are not almost equal to 3 decimals\r\nE   \r\nE   Mismatched elements: 3 / 3 (100%)\r\nE   Max absolute difference: 0.062\r\nE   Max relative difference: 0.2137931\r\nE    x: array([-0.313,  0.352, -0.325])\r\nE    y: array([-0.31,  0.29, -0.35])\r\n```\r\nThis actually seems quite far off (5cm!)"", 'comment_created': datetime.datetime(2021, 7, 15, 14, 26, 40, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 670517796, 'comment_body': ""This should really be:\r\n```\r\n    _validate_type(reg_affine, np.ndarray, 'reg_affine')\r\n    _check_option('reg_affine.shape', reg_affine.shape, ((4, 4),))\r\n    _validate_type(sdr_morph, (DiffeomorphicMap, None), 'sdr_morph')\r\n```\r\nbecause users shouldn't have to use SDR if affine is good enough. But these arguments are just passed unmodified to `apply_volume_registration` so these checks should live there (if they don't already) and here omitted (DRY):\r\n```suggestion\r\n```"", 'comment_created': datetime.datetime(2021, 7, 15, 14, 30, 22, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 670745296, 'comment_body': ""So I can make the tests a lot more precise but it depends a lot on the SDR and how many iterations. I thought it was rather frustrating how precise the arbitrary numbers were in the SDR morph tests in `morph.py` for ranges of numbers so I tried to make this test a bit looser so that it wouldn't fail in the future if things were changed slightly since it's really not that precise unless you use many more iterations. i.e. at this level of test with the roughness it is actually off by 5 cm from the high-precision truth so I think it makes sense to make tests that are appropriately loose. Happy to change to be more precise if that's not convincing to you."", 'comment_created': datetime.datetime(2021, 7, 15, 19, 23, 6, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 670746367, 'comment_body': 'Good point!', 'comment_created': datetime.datetime(2021, 7, 15, 19, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 670750378, 'comment_body': '5 cm is really far. I would expect even an affine transformation alone (and probably even a rigid affine!) to be off by less for any given point. Hence this makes me worry a bit that something is systematically wrong with the code or the test...', 'comment_created': datetime.datetime(2021, 7, 15, 19, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 671434869, 'comment_body': 'Hooray simplification!', 'comment_created': datetime.datetime(2021, 7, 16, 18, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 671438295, 'comment_body': ""Actually now that we have proper `pial` surfaces in the dataset, can you just load and plot them instead? It should further simplify the example because you don't have to marching cubes + transform, just load and plot"", 'comment_created': datetime.datetime(2021, 7, 16, 18, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 671438516, 'comment_body': '(and actually you can use `mne.viz.plot_alignment` to do this for you in one line!)', 'comment_created': datetime.datetime(2021, 7, 16, 18, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 671439314, 'comment_body': 'Sure, sounds good', 'comment_created': datetime.datetime(2021, 7, 16, 18, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 671444786, 'comment_body': ""Actually can you do this in one of the other PRs? It seems like getting this PR merged is a bottleneck for the others, so I'd rather wait for CIs now and merge this ASAP"", 'comment_created': datetime.datetime(2021, 7, 16, 18, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 671450310, 'comment_body': ""So we took out the `bem` surfaces in the paring down so we can't plot the head...\r\n\r\nMaybe a PR for a later date"", 'comment_created': datetime.datetime(2021, 7, 16, 18, 28, 57, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 671454358, 'comment_body': ""Better to have `coord_frame='mri'` here for view comparisons?"", 'comment_created': datetime.datetime(2021, 7, 16, 18, 36, 13, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 671455400, 'comment_body': ""I don't think it's critical to show the head but if we need to update the dataset at some point we could add it"", 'comment_created': datetime.datetime(2021, 7, 16, 18, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 671459563, 'comment_body': ""Not sure I get your meaning. Isn't it in `mri`?"", 'comment_created': datetime.datetime(2021, 7, 16, 18, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 671461829, 'comment_body': ""default `coord_frame='head'`\r\n\r\nhttps://mne.tools/stable/generated/mne.viz.plot_alignment.html#mne-viz-plot-alignment"", 'comment_created': datetime.datetime(2021, 7, 16, 18, 50, 8, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 671462614, 'comment_body': ""(you can see in [my comment](https://github.com/mne-tools/mne-python/issues/9520#issuecomment-880968547) that I pass `coord_frame='mri'`, if you don't do this then `plot_alignment` plots everything in head coordinates, while `Brain` always plots in MRI coords)"", 'comment_created': datetime.datetime(2021, 7, 16, 18, 51, 29, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}]","[{'commit_sha': 'c3a4d313b5fc17d8a604c7a48e5dfbf8db65f4c9', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8280048ecb195d98f5ad7c844641f6cceb9f536a', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc40db03f8e7510587b8ac98a4d23a1bebfeab5d', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abfa8e07611faaed0a0107dcfec0b5089a7351e0', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '278d2e1b7cef0d39abbc6d3dd37db9b3668c41e2', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '978d916595d0330d40842f711666279cc8c7ea0e', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '141f9f3ef9f1f109f340bdec5b605b27a5c2e2c2', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2622355374856471b4acaef29cbf3bfcf5147fbd', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a7e61b488700466bc12f1411d708325f3db5588', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94bb3d06932b353c72bffede9f7aa4d9815a812c', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1809b7849bba3d3941e88c4ad1d889a3a22bcbaf', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb51fe49b4a52ca9ed0a6bef7cc925ea37b67e73', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '047b8463c438882c0285437ac41209fa91249046', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '469e0ce6f12831d01ddd6b62805dafef304c93cd', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe6eb29aa4074f1e35a8379ac2dac8f886ac0953', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066b7b31104c4c2daa593de2508a05ed775e4ada', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '673377c47e658bab22689d795489b43f2aec8f77', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1ddbbe0edf5f9a814402140292d9b3bf4a2c601', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '731233086176818f0eb760f0332708c7202cea78', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79a312f18384c359009c0970bddc2b6ab6f46d12', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2f11340059b02b7ff023a086f26f8064cf1ca7e', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08996b3f9eb76f8c4cb0bd01eb3ce19e5ff9e19b', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
694717864,[ENH] Clarify SEEG tutorial coordinate frames,"This clarifies and I think simplifies what's going on with the coordinate transforms for the SEEG case.

I think this will be really helpful for the GUI as they will hopefully be able to follow the same steps.",True,9601,https://api.github.com/repos/mne-tools/mne-python/pulls/9601,https://github.com/mne-tools/mne-python/pull/9601,closed,78,95,6,4,6,3,0,0,[],2021-07-21 21:22:06+00:00,2021-07-22 17:40:19+00:00,73093.0,20:18:13,"[{'comment_id': 674915854, 'comment_body': '```suggestion\r\n- Add :meth:`mne.channels.DigMontage.apply_trans` to apply a transform directly to a montage (:gh:`9601` by `Alex Rockhill`_)\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 15, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 675062176, 'comment_body': 'sorry I saw this late. Is it kosher to have sEEG data as fif files and thus be transformed to ""head"" coordinates? Don\'t you normally get the coordinates in MRI coordinates as a separate text file or mat file?', 'comment_created': datetime.datetime(2021, 7, 22, 18, 22, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jasmainak', 'type': 'User'}, {'comment_id': 675081439, 'comment_body': 'Yeah I agree it\'s not ideal but I think to be backward compatible with MEG/EEG, FIF requires it to be in the ""head"" frame. I\'ve thought it a bit like how Freesurfer uses surface RAS as its internal representation frame, MNE uses ""head"". They are all arbitrary reference frames and at least there is a standard and you know how it\'s stored. Ideally the coordinate frame could be specified in the FIF but that seems like pretty large change.', 'comment_created': datetime.datetime(2021, 7, 22, 18, 51, 31, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}]","[{'commit_sha': 'ff8540cde1e33ebe6c8cdca33e4b0f79ab3de00b', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1b416e72249095a428a55a58b88a7cb4e79e77', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ff2241e1fd1c7c02aaf121c8b3199e6d3a0e769', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281b5f460611d55f348537fae06988c522c8f555', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
670835920,[DOC] Hyphenation consistency,Most tutorials are like so `_tut-working-with-ecog` but a few used underscores as in `_tut_working_with_ecog`. This just makes them all consistent the way the majority are.,True,9480,https://api.github.com/repos/mne-tools/mne-python/pulls/9480,https://github.com/mne-tools/mne-python/pull/9480,closed,34,34,26,4,4,0,0,0,[],2021-06-15 23:34:31+00:00,2021-06-17 18:02:43+00:00,152892.0,"1 day, 18:28:12",[],"[{'commit_sha': '2cad053e89d806814b6235a35d15b91f63271d41', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82135d6e270cb23341252a12a837456682c0a764', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cd59b4403bc3e9d208bea13bba8b3eae05866a9', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb92e106f4c249726c9b3eb5f6d7b65e2432f5fb', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
686174140,"[MRG, MAINT] Move freesurfer functions in `mne/source_space.py` to `mne/_freesurfer.py`","Helps with refactoring for https://github.com/mne-tools/mne-python/issues/9520.

The freesurfer lookup table access seems oddly placed in `source_space.py`. I think `utils.config.py` makes sense because that is where `get_subjects_dir` is.

This would allow the lookup table to be accessed for plotting ROIs in other modules.",True,9543,https://api.github.com/repos/mne-tools/mne-python/pulls/9543,https://github.com/mne-tools/mne-python/pull/9543,closed,710,664,25,11,10,2,0,0,[],2021-07-08 16:46:13+00:00,2021-07-12 13:02:48+00:00,332195.0,"3 days, 20:16:35","[{'comment_id': 667471273, 'comment_body': 'is this an API change @alexrockhill ', 'comment_created': datetime.datetime(2021, 7, 11, 12, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 667645223, 'comment_body': ""That looks like it is the API that it was before, I just corrected it because it would have been a change but instead we just imported and noqa'd to shallow reference it in coreg"", 'comment_created': datetime.datetime(2021, 7, 12, 5, 59, 57, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}]","[{'commit_sha': 'a990ce1a89fcd264c4ff1c053d92203eb319e77f', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e7c09ba11947f71d371683bf1dec4365392e20', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89dbcf6aa5eb5efa571b00f957560d42ebdac625', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26bf23134953759a405852e7c716352996a7d8e5', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db85b9d5a546ebf72440b58c4e382f6f7a99483b', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2074a4f67410e8dea07ea4047f5d74577d05275', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e124c8230299ee284fc37621c49880cc13c91058', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '953e07e7eee2557d289e8cc76c99f0e73dc8eabf', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4afff0fbbbe1e3199fea5d2a10501deb0a68bf6f', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4034212bcf5329ad854e6a5cc54be44b8da3eb92', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e5451741a796e92a2f570e4f7334094ea9f73c1', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
691118248,"[DOC, MRG] Add ""info"" to `docdict`",This adds consistency by referencing info from the `docdict`.,True,9574,https://api.github.com/repos/mne-tools/mne-python/pulls/9574,https://github.com/mne-tools/mne-python/pull/9574,closed,185,243,48,12,1,10,0,0,[],2021-07-16 00:47:47+00:00,2021-07-16 22:07:47+00:00,76800.0,21:20:00,"[{'comment_id': 671314738, 'comment_body': ""```suggestion\r\n    %(info_not_none)s\r\n        Specifies the channels to include. Bad channels (in ``info['bads']``)\r\n        are not used.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 16, 14, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 671322460, 'comment_body': '```suggestion\r\n    %(info_not_none)s If possible, the channel lists will be sorted\r\n    posterior-to-anterior; otherwise they default to the order specified in\r\n        ``info[""ch_names""]``.\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 14, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 671323431, 'comment_body': ""```suggestion\r\n    %(info)s Used to determine which channel naming convention to use, e.g.\r\n        ``'MEG 0111'`` (with space) for old Neuromag systems and ``'MEG0111'``\r\n        (without space) for new ones.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 16, 14, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 671325238, 'comment_body': '```suggestion\r\n        %(info_not_none)s Used for fitting. If not available, consider using\r\n            :func:`mne.create_info`.\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 15, 2, 21, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 671325408, 'comment_body': '```suggestion\r\n        %(info_not_none)s Used for fitting. If not available, consider using\r\n            :func:`mne.create_info`.\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 15, 2, 36, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 671327828, 'comment_body': '```suggestion\r\n    %(info_not_none)s Warning: will be modified in-place.\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 15, 6, 18, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 671328104, 'comment_body': '```suggestion\r\n    info : mne.Info\r\n        The modified measurement info.\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 15, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 671329479, 'comment_body': '```suggestion\r\n    %(info)s Only necessary if ``inst`` is a :class:`mne.Covariance`\r\n        object (since this does not provide ``inst.info``).\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 15, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 671332572, 'comment_body': 'use f-strings in new code, not `%s`\r\n\r\n```suggestion\r\n_info_base = (\'The :class:`mne.Info` object with information about the \'\r\n              \'sensors and methods of measurement.\')\r\ndocdict[\'info_not_none\'] = f""""""\r\ninfo : mne.Info\r\n    {_info_base}\r\n""""""\r\ndocdict[\'info\'] = """"""\r\ninfo : mne.Info | None\r\n    {_info_base}\r\n""""""\r\ndocdict[\'info_str\'] = """"""\r\ninfo : mne.Info | str\r\n    {_info_base} If ``str``, then it should be a filepath to a file with\r\n    measurement information (e.g. :class:`mne.io.Raw`).\r\n""""""\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 15, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 671334475, 'comment_body': ""```suggestion\r\n    %(info_not_none)s\r\n        Specifies the channels to include. Bad channels (in ``info['bads']``)\r\n        are not used.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 16, 15, 15, 40, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}]","[{'commit_sha': 'ac18ae64ff13a6e615b8faad87c6053f66215da8', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66ac47ed6dd303cde7ba29f8facd5a5489d32f2f', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db016b95a883eaf3df3478f0a94114c93a9fd622', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6b97d88541a71d53d76fa2dff5283aa7bd3d476', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed17536e58e8e869212b3df7ef0cef0a762b5d3', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa3c943c8c0aff3d7b1707a263a19fb3761c5931', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36ef834a8bc3f1ab27d95dd1750f6ba55d41cbb4', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90c1b7e7f8d4fd4140c6d343d499aefde253c78c', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6704426a490724b423faff405806783d3c0f4a2', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b5ada173afcb1970a27d921d689be7eb97ee29e', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8fb4a77b07e3880fa942465fee391d3a4697051', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1cbf7cd933c6391fefc1674bfdfa93713c4fafc', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
693686151,"[ENH, MRG] Update show_view API","Fixes #9597
Fixes #9595

So it looks like `focalpoint` was already an option as a keyword argument of `view` in `mne.viz.Brain.show_view`. I thought it would be helpful to pull all the arguments out of the keyword argument to be documented and explain clearly that if a string such as 'lateral' is passed, it will take precedence as that way seems clear to me. All the arguments could also all be keyword arguments of `view` as in `mne.viz.Brain.add_volume_labels(legend=...)`, that's an easy change, doesn't make a lot of sense to do it half and half. 

The other part that is changed is that if `hemi=None` then it is assigned to volume which is already in use as for volume data/as a catchall term. I think this makes it a bit cleaner and clearer what's going on with the views, to me at least.

Just an idea for how to make things a bit simpler hopefully.",True,9598,https://api.github.com/repos/mne-tools/mne-python/pulls/9598,https://github.com/mne-tools/mne-python/pull/9598,closed,141,83,5,12,10,14,0,0,[],2021-07-20 18:13:51+00:00,2021-07-21 14:46:59+00:00,73988.0,20:33:08,"[{'comment_id': 673380725, 'comment_body': 'please move back, having it moved up here makes the diff harder to read and blame harder to follow with minimal gain', 'comment_created': datetime.datetime(2021, 7, 20, 18, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 673381208, 'comment_body': 'do not change order of arguments, you will break existing working code', 'comment_created': datetime.datetime(2021, 7, 20, 18, 30, 21, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 673381249, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2021, 7, 20, 18, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 673381783, 'comment_body': ""This is a backward incompatible API change that will break existing working code. We can make this change (I think it's worth it) but we'll need a proper deprecation cycle"", 'comment_created': datetime.datetime(2021, 7, 20, 18, 31, 14, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 673382179, 'comment_body': 'use `assert_allclose` rather than `assert np.allclose`, the error message is better when it fails and it has better defaults for testing (`atol=0` which makes more sense than `atol=1e-7` in general)', 'comment_created': datetime.datetime(2021, 7, 20, 18, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 673384075, 'comment_body': 'Better as keyword arguments in `view`? That might be more backward compatible, then just `roll` and `distance` are depreciated', 'comment_created': datetime.datetime(2021, 7, 20, 18, 34, 53, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 673386221, 'comment_body': ""I think I actually prefer the way you have it now (other than order of arguments, new ones need to be at the end), otherwise people end up writing stuff like `show_view(dict(azimuth=..., elevation=..., focalpoint=...))` instead of just `show_view(azimuth=..., elevation=..., focalpoint=...)` so `dict` is just an extra unnecessary hoop to jump through.\r\n\r\nBasically we need to support `view` as dict rather than `None | str` (what we're deprecating toward) until 0.25 comes out"", 'comment_created': datetime.datetime(2021, 7, 20, 18, 38, 32, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 673560406, 'comment_body': 'This should actually go under API because it introduces a deprecation', 'comment_created': datetime.datetime(2021, 7, 20, 23, 36, 49, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 673561240, 'comment_body': ""It's not uncommon to want *text* in only one window (and bottom right is at least a somewhat reasonable default), and this is a backward incompatible change. I think I'd just leave the old default actually, we could deprecate but again I'm not 100% convinced text should be treated the same way as data."", 'comment_created': datetime.datetime(2021, 7, 20, 23, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 673561769, 'comment_body': ""Order is still wrong, new args must go at the end or it will break people's previously working code with no warning, e.g. if someone had `brain.show_view(None, 15, 0.1, 0, 0)` it is now broken. If we really want to change the order, you at least need to do:\r\n```\r\n    def show_view(self, view=None, roll=None, distance=None,\r\n                  *, azimuth=None, elevation=None, focalpoint=None,\r\n                  row=None, col=None, hemi=None, align=True):\r\n```\r\nbut even this will break people's code. Thus even though it's not as clean, I'd rather keep the old order:\r\n```suggestion\r\n    def show_view(self, view=None, roll=None, distance=None,\r\n                  row=None, col=None, hemi=None, align=True,\r\n                  azimuth=None, elevation=None, focalpoint=None):\r\n```\r\n"", 'comment_created': datetime.datetime(2021, 7, 20, 23, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 673562437, 'comment_body': ""To properly deprecate, you need to set the default of `row` to something like `'deprecated'`, and if it's not passed (and there is more than one view!) warn that the old behavior will be used in 0.24 (row=0) but new behavior (row=None) will occur in 0.25"", 'comment_created': datetime.datetime(2021, 7, 20, 23, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 673562753, 'comment_body': '... also there are more deprecations than this, i.e., `row` and `col` both need deprecation cycles', 'comment_created': datetime.datetime(2021, 7, 20, 23, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 673589910, 'comment_body': ""Ok I'll just leave the default as `-1` and document the bottom left behavior"", 'comment_created': datetime.datetime(2021, 7, 21, 1, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 673590882, 'comment_body': ""Ok, I figured people didn't use that many ordered arguments but your right better to be safe"", 'comment_created': datetime.datetime(2021, 7, 21, 1, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}]","[{'commit_sha': '468c35f3c1c2d8db24d07924f215d6f6c39bd364', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6115c71ccd6a12f0c41a89c936052a8e7e444c26', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cd4c75d2097fe22b77e87ffb9b39dedf3da6c9f', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef1cdb622a3c16cad4fc098fa5883d529b5eff81', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e633e4d38dc3e6949e198c883d08146dcc131c17', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4d1abf583a61be705e9dd8580549fdb90869289', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edc6a13b2985508f973e9726a7692c99cbf3d1de', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbbdb35cf9896aeccd9213da6812c6bee1ea4203', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4172c4136f826854a5e49216607017f99acbce84', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa6cf12454909e61468836e9157ce15fc4a9ae78', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08d3bdc7351de72f8a7f79a4cfa83651a389f491', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e1ff164b5638885f428cbda93fba7fa70e57a03', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
694589041,"[BUG, MRG] Fix tutorial + example show_view to use correct keyword args","This is in reference to #9598.

Also if there were two hemispheres but the same view, it would do the depreciation warning so I fixed that.",True,9599,https://api.github.com/repos/mne-tools/mne-python/pulls/9599,https://github.com/mne-tools/mne-python/pull/9599,closed,24,19,7,3,4,1,0,0,[],2021-07-21 18:09:35+00:00,2021-07-21 19:08:23+00:00,3528.0,0:58:48,"[{'comment_id': 674227692, 'comment_body': 'What a nicer API :)', 'comment_created': datetime.datetime(2021, 7, 21, 18, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}]","[{'commit_sha': '653df968ceb5881adcf591e57fd9c7511ae26a32', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ba07ae1eafccdbc4996f37cf2c7b77c975498a2', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90ad91feaaef4ec9f84f3129a072c57deb0437f2', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
694717864,[ENH] Clarify SEEG tutorial coordinate frames,"This clarifies and I think simplifies what's going on with the coordinate transforms for the SEEG case.

I think this will be really helpful for the GUI as they will hopefully be able to follow the same steps.",True,9601,https://api.github.com/repos/mne-tools/mne-python/pulls/9601,https://github.com/mne-tools/mne-python/pull/9601,closed,78,95,6,4,6,3,0,0,[],2021-07-21 21:22:06+00:00,2021-07-22 17:40:19+00:00,73093.0,20:18:13,"[{'comment_id': 674915854, 'comment_body': '```suggestion\r\n- Add :meth:`mne.channels.DigMontage.apply_trans` to apply a transform directly to a montage (:gh:`9601` by `Alex Rockhill`_)\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 15, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 675062176, 'comment_body': 'sorry I saw this late. Is it kosher to have sEEG data as fif files and thus be transformed to ""head"" coordinates? Don\'t you normally get the coordinates in MRI coordinates as a separate text file or mat file?', 'comment_created': datetime.datetime(2021, 7, 22, 18, 22, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jasmainak', 'type': 'User'}, {'comment_id': 675081439, 'comment_body': 'Yeah I agree it\'s not ideal but I think to be backward compatible with MEG/EEG, FIF requires it to be in the ""head"" frame. I\'ve thought it a bit like how Freesurfer uses surface RAS as its internal representation frame, MNE uses ""head"". They are all arbitrary reference frames and at least there is a standard and you know how it\'s stored. Ideally the coordinate frame could be specified in the FIF but that seems like pretty large change.', 'comment_created': datetime.datetime(2021, 7, 22, 18, 51, 31, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}]","[{'commit_sha': 'ff8540cde1e33ebe6c8cdca33e4b0f79ab3de00b', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1b416e72249095a428a55a58b88a7cb4e79e77', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ff2241e1fd1c7c02aaf121c8b3199e6d3a0e769', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281b5f460611d55f348537fae06988c522c8f555', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
698126964,"[MAINT, MRG] Move `_check_mri` to _freesurfer.py",Puts `_check_mri` in a more appropriate module.,True,9617,https://api.github.com/repos/mne-tools/mne-python/pulls/9617,https://github.com/mne-tools/mne-python/pull/9617,closed,17,19,4,2,1,3,0,0,[],2021-07-27 19:18:23+00:00,2021-07-27 20:23:58+00:00,3935.0,1:05:35,"[{'comment_id': 677735111, 'comment_body': ""It doesn't seem like this should need to be nested, does it actually need to be?"", 'comment_created': datetime.datetime(2021, 7, 27, 19, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 677735518, 'comment_body': ""The other one is, I'll pull them both out"", 'comment_created': datetime.datetime(2021, 7, 27, 19, 24, 15, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 677737879, 'comment_body': 'This is better, internal MNE imports should be nested only when required by import cycle problems', 'comment_created': datetime.datetime(2021, 7, 27, 19, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}]","[{'commit_sha': 'a34f200f2e2ac3e9dd12d6a5b5655b181879e943', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c8ebb4b0fbbc25f88953a7a30a0547e1a42cb95', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
698183946,"[ENH, MRG] Add `mne.viz.Brain.add_head` method to display head",Fixes #9584.,True,9618,https://api.github.com/repos/mne-tools/mne-python/pulls/9618,https://github.com/mne-tools/mne-python/pull/9618,closed,132,69,6,7,11,18,0,0,[],2021-07-27 20:58:22+00:00,2021-07-29 23:10:59+00:00,180757.0,"2 days, 2:12:37","[{'comment_id': 678030114, 'comment_body': 'fix docstring', 'comment_created': datetime.datetime(2021, 7, 28, 7, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 678650304, 'comment_body': ""This should be refactored with the code and API in `plot_alignment` to support multiple sources for the head as well as dense/sparse representations, etc. Sometimes people will want the dense surface, sometimes the sparse, and `plot_alignment` has some control over this (including a nice `'auto'` option that should be the default here)."", 'comment_created': datetime.datetime(2021, 7, 28, 21, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 678669213, 'comment_body': 'So is it worth making an intermediate step where `plot_alignment` and `mne.viz.Brain` share private helper functions or should we just make one PR that makes `plot_alignment` a shallow wrapper for `mne.viz.Brain`?', 'comment_created': datetime.datetime(2021, 7, 28, 21, 36, 33, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 678677495, 'comment_body': ""Let's just start with refactoring the head stuff. Refactoring it all is a much bigger undertaking. Piecemeal is much easier to review"", 'comment_created': datetime.datetime(2021, 7, 28, 21, 52, 4, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 678713097, 'comment_body': 'Ok one refactoring complete!', 'comment_created': datetime.datetime(2021, 7, 28, 23, 15, 15, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 679098839, 'comment_body': 'This does not match the return type in the docstring (to do that, you\'d want to return `(None, None)`. It seems like for public function this should raise an error.\r\n\r\nThis is in a private module, so maybe you want this to stay private? I think it should be private... In that case it\'s better to (still) have it prefixed by `_` in that case (even though the module also is) because if we ever import it in some public module (like `mne.bem` or something) it will become ""accidentally public"". So underscores on function names even in `_`-prefixed modules are still useful/helpful. It also makes it immediately clear in the places that it\'s used that we can change the API if we want.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 679099627, 'comment_body': 'You need a `@fill_doc` decorator here for the `%(subject)s` to fill in. But really you want `*, verbose=None` at the end and `@verbose` because some of the subfunctions call `logger.info`.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 21, 53, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 679100786, 'comment_body': 'This returns a `dict` not an `rr, tris` pair', 'comment_created': datetime.datetime(2021, 7, 29, 12, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 679101888, 'comment_body': 'This returns a dict', 'comment_created': datetime.datetime(2021, 7, 29, 12, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 679102054, 'comment_body': 'This returns a dict', 'comment_created': datetime.datetime(2021, 7, 29, 12, 25, 34, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 679102238, 'comment_body': 'The return value always appears to be a dict or None, is this outdated?', 'comment_created': datetime.datetime(2021, 7, 29, 12, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 679102529, 'comment_body': 'BEM is not documented', 'comment_created': datetime.datetime(2021, 7, 29, 12, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 679105231, 'comment_body': 'After seeing all these doc errors, it might be cleaner just to remove the docstring altogether. Docstrings on private functions tend to get outdated rather quickly, so I tend not to use them (and often remove them on private functions) nowadays.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 679442773, 'comment_body': ""To be consistent with how it was before, this should be the `__repr__`, so:\r\n```suggestion\r\n                f'MRI file {mri!r} not found and no subject provided')\r\n```"", 'comment_created': datetime.datetime(2021, 7, 29, 19, 51, 19, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 679442967, 'comment_body': ""```suggestion\r\n            raise FileNotFoundError(f'MRI file {mri!r} not found')\r\n```"", 'comment_created': datetime.datetime(2021, 7, 29, 19, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 679451475, 'comment_body': 'just a note-to-self that we should consider unifying our ""matplotlib-compatible color"" docstrings, which are rather heterogeneous at the moment (`git grep matplotlib-` for a sampling).  But not necessary for this PR', 'comment_created': datetime.datetime(2021, 7, 29, 20, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 679453712, 'comment_body': ""I'm a little surprised this passed our docstring tests.  I think I would have done\r\n```suggestion\r\n        alpha : float\r\n            Opacity of the head surface. Must be between 0 and 1 (inclusive).\r\n            Default is 0.5.\r\n```\r\nbecause `float in [0, 1]` reads like Python code, confusingly suggesting this param can take on one of 2 values (`0` or `1`)"", 'comment_created': datetime.datetime(2021, 7, 29, 20, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'drammock', 'type': 'User'}, {'comment_id': 679460480, 'comment_body': 'Eric wrote that :)', 'comment_created': datetime.datetime(2021, 7, 29, 20, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}]","[{'commit_sha': '13c87e6a69d9d0e72aa670859ad32c60c3a76da5', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dc8bae62aeb8f03c7e3d440b63a32fddc3d0cc0', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fd8723592a97d6315be0231779feb98c531f080', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3e6ebd1619261e1529fecc035bddbc84bb234ec', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96b26a378f5516f50ebc8f911eb863cd5f8dea4c', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04b53799c446e993860bacc5fcda6179fc2a066e', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d00dca24b357bb8d04c318eee959b5251fd0ba4', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
698874959,"[MAINT, MRG] Better transform error that prints coordinate frames",I thought it would be helpful to have the allowed coordinate frames for a transform. I also updated to fstring syntax while I was there so that the PR would do a bit more maintenance but that can be reverted if it's not helpful. ,True,9622,https://api.github.com/repos/mne-tools/mne-python/pulls/9622,https://github.com/mne-tools/mne-python/pull/9622,closed,33,30,1,1,2,1,0,0,[],2021-07-28 17:21:55+00:00,2021-07-28 20:53:21+00:00,12686.0,3:31:26,"[{'comment_id': 678643285, 'comment_body': 'Someday we should just use `_check_option` for this', 'comment_created': datetime.datetime(2021, 7, 28, 20, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}]","[{'commit_sha': '01cc888b069594cd7e66f938d6a60b1d909b4aa7', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
698969243,"[MAINT, MRG] Refactor BEM code","This wasn't nearly as much of a pain as I thought. This simplifies things quite a bit and has the code from developing the GUI that can now be shared in `_freesurfer.py`.

Addresses comments in #9586.

Basically, instead of this very confusing which axis to flip and order of everything, the MRI is just reoriented to RAS and everything is follows from there.

Should be easy to use this code in the GUI, good idea @larsoner.",True,9625,https://api.github.com/repos/mne-tools/mne-python/pulls/9625,https://github.com/mne-tools/mne-python/pull/9625,closed,97,86,5,3,7,5,0,0,[],2021-07-28 19:47:05+00:00,2021-07-29 12:34:06+00:00,60421.0,16:47:01,"[{'comment_id': 678620660, 'comment_body': 'Did you `git grep _plot_mri_contours` to make sure no other returns need to be changed? IIRC this is shared across BEM plotting and dipole plotting', 'comment_created': datetime.datetime(2021, 7, 28, 20, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 678622025, 'comment_body': ""Can you verify in the nibabel code that this just ends up being a view on the data? slices are always views, and I think `.transpose`s are, too (?), and in theory this is all that should be needed and nibabel is generally very well coded so probably does this... but please do check so we can all sleep better at night.\r\n\r\nIf it doesn't create a view, we should maybe create an issue about enhancing their code to return a view if possible. (This is should be better memory--wise). *EDIT: And in the meantime, not being a view is not a show-stopper so we can merge anyway.*"", 'comment_created': datetime.datetime(2021, 7, 28, 20, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 678626193, 'comment_body': 'Yeah I had to change the one in `report.py` but that was it', 'comment_created': datetime.datetime(2021, 7, 28, 20, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 678630295, 'comment_body': 'https://github.com/nipy/nibabel/blob/62aea04248e70d7c4529954ca41685d7f75a0b1e/nibabel/orientations.py#L154:L172\r\n\r\nLooks nothing here makes a copy.', 'comment_created': datetime.datetime(2021, 7, 28, 20, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 678630436, 'comment_body': ""So I think we're good"", 'comment_created': datetime.datetime(2021, 7, 28, 20, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}]","[{'commit_sha': 'b4c744b2a68531d212b4dd7eca5ec763d398ebf6', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7afecc430715201951e34aa0d32be05edc0c825', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91214dbef78c3e745f7f7f15de620bd608d09deb', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
700556673,"[BUG, MRG] fix coordinate frame in fNIRS bug",Fixes #9627.,True,9630,https://api.github.com/repos/mne-tools/mne-python/pulls/9630,https://github.com/mne-tools/mne-python/pull/9630,closed,3,0,2,2,6,0,0,0,[],2021-07-30 20:55:51+00:00,2021-07-31 15:25:17+00:00,66566.0,18:29:26,[],"[{'commit_sha': '3740fcaab0c7af258efa998298c02fb035ae3ae8', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '529a1836e653e64a5d7ecc65230cef3106d23730', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29
692211177,"[ENH, MRG] Add intracranial electrode localization GUI","Add a GUI that allows users to find their intracranial electrode montage from a CT, an MRI and the Freesurfer recon-all from it, and an `info` object that supplies the names to be found and is return with a modified montage.

Closes mne-tools/mne-python#9559

Very rough version, no review yet.",True,9586,https://api.github.com/repos/mne-tools/mne-python/pulls/9586,https://github.com/mne-tools/mne-python/pull/9586,closed,1273,91,13,2,63,52,0,0,[],2021-07-19 02:14:22+00:00,2021-09-17 16:52:17+00:00,5236675.0,"60 days, 14:37:55","[{'comment_id': 674540733, 'comment_body': 'can you micmic clicks ? I suspect this test leads to limited coverage no?', 'comment_created': datetime.datetime(2021, 7, 22, 6, 50, 32, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 674828743, 'comment_body': ""Yes, hopefully that will be done soon, I've been sorting out the API (e.g. other PR) but this is next "", 'comment_created': datetime.datetime(2021, 7, 22, 14, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 678626937, 'comment_body': ""You should not instantiate a QApplication directly, first you check for `.instance` and if it's none you instantiate. Look at how our own `mne/viz/backends/_pyvista.py` and `mne/conftest.py` do it. In this case I think we should refactor the version in `_pyvista.py` to some new `mne.viz._qt` perhaps that just contains code to instantiate a QApplication and set it to use our icon (if we're the ones instantiating it). The `_pyvista.py` code already does this check-and-set, so this code just needs to be moved and used in multiple places"", 'comment_created': datetime.datetime(2021, 7, 28, 20, 25, 15, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 678628334, 'comment_body': 'Ok I can give that a shot', 'comment_created': datetime.datetime(2021, 7, 28, 20, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 687536888, 'comment_body': '```suggestion\r\n    """"""Estimate the head->mri transform.\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 9, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mmagnuski', 'type': 'User'}, {'comment_id': 689717076, 'comment_body': '-1 on this, it means we have something wrong with our `compute_volume_registration` code that should be fixed. Our pipeline should do something equivalent to theirs. Maybe the simplest thing is to actually use their pipeline under the hood in our code?', 'comment_created': datetime.datetime(2021, 8, 16, 17, 15, 42, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 689727699, 'comment_body': 'Yeah, we could do that', 'comment_created': datetime.datetime(2021, 8, 16, 17, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 689729578, 'comment_body': ""Ah so the main thing we added that wasn't supported by their pipeline is `zooms`"", 'comment_created': datetime.datetime(2021, 8, 16, 17, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 690601188, 'comment_body': ""After thinking about it, I think this might be okay, the CT-MR alignment is incredibly finicky and does not refactor well with the much more stable MR-MR alignments. If you think it's worth looking into more detail what is going wrong, I'm fine doing that but seems like not the best use of time to me. We have a solution that works and the API is pretty good. To me, it's much better that it works optimally and looks a little bit worse than if everything is all nicely factored but it's slightly inaccurate and I've spent a lot of time trying to fix this part already."", 'comment_created': datetime.datetime(2021, 8, 17, 17, 59, 53, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 690605782, 'comment_body': "">  ... the CT-MR alignment is incredibly finicky and does not refactor well with the much more stable MR-MR alignments... To me, it's much better that it works optimally and looks a little bit worse than if everything is all nicely factored but it's slightly inaccurate and I've spent a lot of time trying to fix this part already.\r\n\r\nTo me it sounds like you are implicitly arguing for getting rid of our own `compute_volume_registration` / `apply_volume_registration` code in favor of directly calling `dipy` functions. This is because the real use case we currently have for our own versions of these functions is exactly for doing MR-CT alignment. Should we get rid of them?"", 'comment_created': datetime.datetime(2021, 8, 17, 18, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 690617113, 'comment_body': 'Sounds reasonable to me', 'comment_created': datetime.datetime(2021, 8, 17, 18, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 694874653, 'comment_body': ""@alexrockhill can you try reverting the resample-each-step in favor of `starting_affine`? Having recently made a PR to dipy I see that's all their code does really. If it indeed works as well as `affine_registration` (when all `niter` are used the same way) then I wouldn't mind keeping `compute_volume_registration`, because 1) it supports `zooms` and 2) stays in sync with our `compute_source_morph` code.\r\n\r\nWe can set `niter_*` to whatever they need to be to be equivalent with `affine_registration` because `compute_volume_registration` is a new function."", 'comment_created': datetime.datetime(2021, 8, 24, 13, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 699511959, 'comment_body': 'This has not been addressed', 'comment_created': datetime.datetime(2021, 8, 31, 16, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 699512226, 'comment_body': 'This needs to be removed', 'comment_created': datetime.datetime(2021, 8, 31, 16, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 699521714, 'comment_body': 'Leftover sentence?', 'comment_created': datetime.datetime(2021, 8, 31, 17, 10, 59, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 699522207, 'comment_body': '```suggestion\r\n#   - Click in each image to navigate to each electrode contact\r\n```', 'comment_created': datetime.datetime(2021, 8, 31, 17, 11, 42, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 699522581, 'comment_body': '```suggestion\r\n#   - Press ""Mark"", or ""M"" to associate that position with that contact\r\n```\r\n\r\nIIRC, that was the keyboard shortcut right?', 'comment_created': datetime.datetime(2021, 8, 31, 17, 12, 15, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 699524178, 'comment_body': 'To be more explicit, I would then perhaps add something along the lines of:\r\n\r\n- Repeat for each contact, until all contacts are marked. You can tell contacts are marked if they are colored(?) in. \r\n- When you are done, you can close the GUI and the contact coordinates will be saved in the Raw object', 'comment_created': datetime.datetime(2021, 8, 31, 17, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 699601790, 'comment_body': 'remove?', 'comment_created': datetime.datetime(2021, 8, 31, 19, 9, 33, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 699602763, 'comment_body': 'can you vectorize this?', 'comment_created': datetime.datetime(2021, 8, 31, 19, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 699602971, 'comment_body': 'please vectorize this', 'comment_created': datetime.datetime(2021, 8, 31, 19, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 699603964, 'comment_body': '```suggestion\r\n# commissure and posterior commissure (ACPC-aligned). This is recommended\r\n```', 'comment_created': datetime.datetime(2021, 8, 31, 19, 12, 56, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 699605920, 'comment_body': ""I don't like this. You alter the mne-sample-data folder. Why not fetching fsaverage in the sample_seeg folder?"", 'comment_created': datetime.datetime(2021, 8, 31, 19, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 699606227, 'comment_body': '```suggestion\r\n#   - Click in each image to navigate to each electrode contact\r\n```', 'comment_created': datetime.datetime(2021, 8, 31, 19, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 699606754, 'comment_body': '```suggestion\r\n#   - Find a typical electrode contact err toward the largest type used.\r\n#   - Press ""Mark"" to put a marker in that location.\r\n#   - Adjust the radius slider so that it is just bigger than the contact.\r\n#   - Adjust the CT threshold slider so that the contacts have black\r\n#     space between them.\r\n```', 'comment_created': datetime.datetime(2021, 8, 31, 19, 17, 29, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 699607056, 'comment_body': 'automatically still relevant?', 'comment_created': datetime.datetime(2021, 8, 31, 19, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 699607439, 'comment_body': '```suggestion\r\n# after closing the GUI and can now be saved.\r\n```', 'comment_created': datetime.datetime(2021, 8, 31, 19, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 699621351, 'comment_body': ""This was @larsoner 's suggested way of doing it"", 'comment_created': datetime.datetime(2021, 8, 31, 19, 41, 26, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 699628126, 'comment_body': 'why @larsoner ? I see this a side effects from a script', 'comment_created': datetime.datetime(2021, 8, 31, 19, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 699629691, 'comment_body': ""Seems like a fairly harmless one. `fetch_fsaverage` to `mne-misc-data` directory also modifies / creates a side effect, just to that dataset instead of `sample`. This could be done, but it will use some hundreds of MBs and some download time rather than being instantaneous. I'm fine either way"", 'comment_created': datetime.datetime(2021, 8, 31, 19, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 699765647, 'comment_body': ""Can we just remove the `symlink` when we're done?"", 'comment_created': datetime.datetime(2021, 9, 1, 0, 49, 50, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 700063770, 'comment_body': ""hum... keep it like this then but I would suggest to do this really at the top of the file with a big warning that it's just for the demo here. You should not have to do this on your own data."", 'comment_created': datetime.datetime(2021, 9, 1, 9, 56, 35, tzinfo=datetime.timezone.utc), 'commenter': 'agramfort', 'type': 'User'}, {'comment_id': 700295535, 'comment_body': 'I originally had a `subjects_dir` parameter for the template as well, perhaps we should just put that back ', 'comment_created': datetime.datetime(2021, 9, 1, 14, 55, 12, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 700302521, 'comment_body': 'Works for me', 'comment_created': datetime.datetime(2021, 9, 1, 15, 2, 27, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 700329565, 'comment_body': 'This has a failure in the `--pre` ~~branch~~ CI that uses latest GitHub `main`/`master` of PyVista and PyVistaQt, can you replicate and fix?', 'comment_created': datetime.datetime(2021, 9, 1, 15, 32, 19, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 700330985, 'comment_body': ""Revert this too until we can make a separate PR to sort out `compute_volume_registration`? Also please open an issue for this and I'll milestone for 0.24 so we don't forget"", 'comment_created': datetime.datetime(2021, 9, 1, 15, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 700331620, 'comment_body': 'I think I commented on this before, but this should be deduplicated with how we do it in `_brain`. It comes with benefits like setting the application icon to `MNE` for example', 'comment_created': datetime.datetime(2021, 9, 1, 15, 34, 41, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 700333155, 'comment_body': ""Can you open an issue about deduplicating this with our notebook/qt abstraction? It'll require some work but having exactly one place where we deal with Qt5-specific stuff (e.g., a transition to Qt6 support, PyQt versus PySide support, etc.) is much more maintainable. See for example how a new GUI is being built in the framework via https://github.com/mne-tools/mne-python/pull/9689.\r\n\r\nI'm okay with putting this PyQt5 native version in as a first version, though, to make it available in the meantime."", 'comment_created': datetime.datetime(2021, 9, 1, 15, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 700335640, 'comment_body': ""Some comment on how these were derived would be good. Even better would be to use the matplotlib color cycle, as it's designed for this purpose IIRC. If this is the matplotlib color cycle, it would be better to use a private function like `_get_unique_colors` that quickly computed this array and returned it. This would allow for example easy customization using `with plt.rc_context({'prop_cycle': ...}):` before calling the GUI"", 'comment_created': datetime.datetime(2021, 9, 1, 15, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 700337316, 'comment_body': ""This should only be used in tests. What you should do here instead below is `nib = _import_nibabel('use iEEG GUI')`"", 'comment_created': datetime.datetime(2021, 9, 1, 15, 41, 14, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 700339595, 'comment_body': ""This is not the standard way to create an embedded Qt Canvas. See how it's done in `_brain.py`, which is based on the [standard example for it](https://matplotlib.org/stable/gallery/user_interfaces/embedding_in_qt_sgskip.html). You should not have to manually close anything."", 'comment_created': datetime.datetime(2021, 9, 1, 15, 43, 45, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 700339988, 'comment_body': 'You should not do this if possible because it will cause matplotlib to instantiate its GUI backend. If you refactor the creation below you end up not needing it anyway.', 'comment_created': datetime.datetime(2021, 9, 1, 15, 44, 13, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 700342078, 'comment_body': ""Let's try the two-subjects-dirs approach here"", 'comment_created': datetime.datetime(2021, 9, 1, 15, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 700500714, 'comment_body': 'I thought we were in agreement with @agramfort that we would do this in the future when the overhead cost was lower...', 'comment_created': datetime.datetime(2021, 9, 1, 19, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 700501230, 'comment_body': 'Sure, doing that now', 'comment_created': datetime.datetime(2021, 9, 1, 19, 19, 6, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 700502464, 'comment_body': ""I used these colors because the color cycle didn't work very well...\r\n\r\nI'll add a comment."", 'comment_created': datetime.datetime(2021, 9, 1, 19, 20, 47, tzinfo=datetime.timezone.utc), 'commenter': 'alexrockhill', 'type': 'User'}, {'comment_id': 700518094, 'comment_body': 'Okay I just added it to #9710', 'comment_created': datetime.datetime(2021, 9, 1, 19, 37, 18, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 701111383, 'comment_body': 'Great that you could leave this as is!', 'comment_created': datetime.datetime(2021, 9, 2, 13, 58, 56, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 701112971, 'comment_body': ""Looking in `mne/viz/_brain/_brain.py` what I see is:\r\n```\r\n        self._renderer = _get_renderer(name=self._title, size=size,\r\n                                       bgcolor=background,\r\n                                       shape=shape,\r\n                                       fig=figure)\r\n        self._renderer._window_close_connect(self._clean)\r\n        self._renderer._window_set_theme(theme)\r\n        self.plotter = self._renderer.plotter\r\n```\r\nSo I think the fix here is:\r\n```suggestion\r\n        self._renderer = _get_renderer(\r\n            name='IEEG Locator', size=(400, 400), bgcolor='w')\r\n        plt_grid.addWidget(self._renderer.plotter)\r\n```\r\n"", 'comment_created': datetime.datetime(2021, 9, 2, 14, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 701212355, 'comment_body': ""Why? You shouldn't need to make a copy like this"", 'comment_created': datetime.datetime(2021, 9, 2, 15, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 701213623, 'comment_body': ""Same. In fact you shouldn't even need the `np.array` at all:\r\n```suggestion\r\n        ch_coord[:] = (np.where(warped_data == val), float).mean(axis=1)\r\n```"", 'comment_created': datetime.datetime(2021, 9, 2, 15, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}, {'comment_id': 701261016, 'comment_body': ""From the logs:\r\n```\r\nmne\\gui\\tests\\test_ieeg_locate_gui.py:100: in test_ieeg_elec_locate_gui_display\r\n    _fake_click(gui._figs[2], gui.figs[2].axes[0],\r\nE   AttributeError: 'IntracranialElectrodeLocator' object has no attribute 'figs'\r\n```\r\nIt's possible the PyVista errors all just come from this (?), so I'll fix it here and hopefully that fixes CIs.\r\n```suggestion\r\n        _fake_click(gui._figs[2], gui._figs[2].axes[0],\r\n```"", 'comment_created': datetime.datetime(2021, 9, 2, 16, 51, 7, tzinfo=datetime.timezone.utc), 'commenter': 'larsoner', 'type': 'User'}]","[{'commit_sha': '606545957b9c424fd7a90dafdc9c60c7d5194fd8', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57094f1970724a94481d9712af0daffd7cf1afa0', 'committer_username': 'alexrockhill', 'committer_name': 'Alex Rockhill', 'committer_email': 'aprockhill@mailbox.org', 'commit_date': datetime.datetime(2015, 7, 23, 19, 47, 6, tzinfo=datetime.timezone.utc)}]",Alex Rockhill,13473576,aprockhill@mailbox.org,User,,61,,39,29

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
1301584,mne-python,mne-tools/mne-python,Python,1306,2656,81,378,18091,526,31,60,"[{'id': 1849845168, 'number': 12593, 'closed': datetime.datetime(2024, 5, 2, 0, 1, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 1, 15, 0, 54, tzinfo=datetime.timezone.utc), 'time_taken': 32419.0, 'time_delta': '9:00:19', 'additions': 101, 'deletions': 25, 'state': 'closed'}, {'id': 1841460962, 'number': 12576, 'closed': datetime.datetime(2024, 4, 27, 9, 40, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 25, 18, 13, 41, tzinfo=datetime.timezone.utc), 'time_taken': 142019.0, 'time_delta': '1 day, 15:26:59', 'additions': 25, 'deletions': 37, 'state': 'closed'}, {'id': 1832629912, 'number': 12555, 'closed': None, 'created': datetime.datetime(2024, 4, 19, 23, 21, 11, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 330, 'deletions': 2, 'state': 'open'}, {'id': 1730411312, 'number': 12448, 'closed': datetime.datetime(2024, 2, 16, 23, 38, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 16, 22, 47, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3088.0, 'time_delta': '0:51:28', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1720993960, 'number': 12436, 'closed': datetime.datetime(2024, 2, 12, 16, 50, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 11, 15, 53, 15, tzinfo=datetime.timezone.utc), 'time_taken': 89823.0, 'time_delta': '1 day, 0:57:03', 'additions': 15, 'deletions': 5, 'state': 'closed'}, {'id': 1692519677, 'number': 12382, 'closed': datetime.datetime(2024, 2, 8, 17, 43, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 23, 20, 32, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1372256.0, 'time_delta': '15 days, 21:10:56', 'additions': 23, 'deletions': 5, 'state': 'closed'}, {'id': 1665275945, 'number': 12336, 'closed': datetime.datetime(2024, 1, 10, 13, 19, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 4, 20, 44, 44, tzinfo=datetime.timezone.utc), 'time_taken': 491659.0, 'time_delta': '5 days, 16:34:19', 'additions': 197, 'deletions': 38, 'state': 'closed'}, {'id': 1663953717, 'number': 12334, 'closed': datetime.datetime(2024, 1, 4, 17, 12, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 4, 0, 8, 36, tzinfo=datetime.timezone.utc), 'time_taken': 61441.0, 'time_delta': '17:04:01', 'additions': 185, 'deletions': 27, 'state': 'closed'}, {'id': 1649983173, 'number': 12315, 'closed': None, 'created': datetime.datetime(2023, 12, 19, 9, 7, 52, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 464, 'deletions': 691, 'state': 'open'}, {'id': 1649824565, 'number': 12311, 'closed': datetime.datetime(2023, 12, 31, 2, 35, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 19, 7, 2, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1020774.0, 'time_delta': '11 days, 19:32:54', 'additions': 109, 'deletions': 55, 'state': 'closed'}, {'id': 1624687541, 'number': 12252, 'closed': datetime.datetime(2023, 12, 1, 18, 15, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 1, 0, 12, 37, tzinfo=datetime.timezone.utc), 'time_taken': 65000.0, 'time_delta': '18:03:20', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1508594387, 'number': 11974, 'closed': datetime.datetime(2023, 9, 8, 23, 19, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 8, 22, 52, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1623.0, 'time_delta': '0:27:03', 'additions': 13, 'deletions': 0, 'state': 'closed'}, {'id': 1476603959, 'number': 11889, 'closed': datetime.datetime(2023, 8, 22, 15, 49, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 15, 22, 50, 10, tzinfo=datetime.timezone.utc), 'time_taken': 579552.0, 'time_delta': '6 days, 16:59:12', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1453072188, 'number': 11839, 'closed': datetime.datetime(2023, 8, 1, 22, 48, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 2, 3, 50, tzinfo=datetime.timezone.utc), 'time_taken': 420280.0, 'time_delta': '4 days, 20:44:40', 'additions': 445, 'deletions': 420, 'state': 'closed'}, {'id': 1440084368, 'number': 11812, 'closed': datetime.datetime(2023, 12, 1, 18, 14, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 18, 23, 55, 40, tzinfo=datetime.timezone.utc), 'time_taken': 11729923.0, 'time_delta': '135 days, 18:18:43', 'additions': 549, 'deletions': 3, 'state': 'closed'}, {'id': 1433881961, 'number': 11803, 'closed': datetime.datetime(2023, 9, 2, 17, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 13, 22, 52, 49, tzinfo=datetime.timezone.utc), 'time_taken': 4386491.0, 'time_delta': '50 days, 18:28:11', 'additions': 277, 'deletions': 98, 'state': 'closed'}, {'id': 1389119976, 'number': 11730, 'closed': datetime.datetime(2023, 6, 14, 17, 3, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 12, 17, 26, 26, tzinfo=datetime.timezone.utc), 'time_taken': 171407.0, 'time_delta': '1 day, 23:36:47', 'additions': 16, 'deletions': 12, 'state': 'closed'}, {'id': 1359665197, 'number': 11698, 'closed': datetime.datetime(2023, 5, 23, 19, 3, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 22, 17, 52, 54, tzinfo=datetime.timezone.utc), 'time_taken': 90652.0, 'time_delta': '1 day, 1:10:52', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 1324458807, 'number': 11646, 'closed': datetime.datetime(2023, 4, 27, 19, 47, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 23, 19, 9, 22, tzinfo=datetime.timezone.utc), 'time_taken': 347909.0, 'time_delta': '4 days, 0:38:29', 'additions': 78, 'deletions': 641, 'state': 'closed'}, {'id': 1300572582, 'number': 11616, 'closed': datetime.datetime(2023, 4, 13, 14, 11, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 3, 19, 24, 19, tzinfo=datetime.timezone.utc), 'time_taken': 845255.0, 'time_delta': '9 days, 18:47:35', 'additions': 88, 'deletions': 52, 'state': 'closed'}, {'id': 1295357035, 'number': 11612, 'closed': datetime.datetime(2023, 3, 30, 6, 27, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 29, 22, 15, 57, tzinfo=datetime.timezone.utc), 'time_taken': 29511.0, 'time_delta': '8:11:51', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1293322510, 'number': 11607, 'closed': datetime.datetime(2023, 3, 28, 22, 3, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 28, 16, 35, 57, tzinfo=datetime.timezone.utc), 'time_taken': 19679.0, 'time_delta': '5:27:59', 'additions': 45, 'deletions': 4, 'state': 'closed'}, {'id': 1280824218, 'number': 11572, 'closed': datetime.datetime(2023, 3, 22, 15, 15, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 17, 23, 0, 13, tzinfo=datetime.timezone.utc), 'time_taken': 404129.0, 'time_delta': '4 days, 16:15:29', 'additions': 371, 'deletions': 48, 'state': 'closed'}, {'id': 1279359481, 'number': 11567, 'closed': datetime.datetime(2023, 3, 20, 18, 53, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 16, 21, 43, 4, tzinfo=datetime.timezone.utc), 'time_taken': 335447.0, 'time_delta': '3 days, 21:10:47', 'additions': 437, 'deletions': 153, 'state': 'closed'}, {'id': 1268466655, 'number': 11547, 'closed': datetime.datetime(2023, 3, 9, 6, 12, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 8, 21, 11, 15, tzinfo=datetime.timezone.utc), 'time_taken': 32448.0, 'time_delta': '9:00:48', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 1260976674, 'number': 11525, 'closed': datetime.datetime(2023, 4, 3, 18, 34, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 2, 19, 48, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2760367.0, 'time_delta': '31 days, 22:46:07', 'additions': 1759, 'deletions': 44, 'state': 'closed'}, {'id': 1260965293, 'number': 11524, 'closed': datetime.datetime(2023, 4, 3, 18, 33, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 2, 19, 36, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2761058.0, 'time_delta': '31 days, 22:57:38', 'additions': 1685, 'deletions': 43, 'state': 'closed'}, {'id': 1244090217, 'number': 11489, 'closed': datetime.datetime(2023, 2, 16, 23, 14, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 16, 17, 50, 19, tzinfo=datetime.timezone.utc), 'time_taken': 19458.0, 'time_delta': '5:24:18', 'additions': 15, 'deletions': 9, 'state': 'closed'}, {'id': 1237402605, 'number': 11467, 'closed': datetime.datetime(2023, 2, 11, 0, 38, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 10, 23, 27, 7, tzinfo=datetime.timezone.utc), 'time_taken': 4278.0, 'time_delta': '1:11:18', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1232594132, 'number': 11459, 'closed': datetime.datetime(2023, 2, 8, 13, 42, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 7, 21, 11, 3, tzinfo=datetime.timezone.utc), 'time_taken': 59504.0, 'time_delta': '16:31:44', 'additions': 7, 'deletions': 15, 'state': 'closed'}, {'id': 1227378270, 'number': 11446, 'closed': datetime.datetime(2023, 2, 6, 17, 54, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 2, 23, 51, 45, tzinfo=datetime.timezone.utc), 'time_taken': 324188.0, 'time_delta': '3 days, 18:03:08', 'additions': 218, 'deletions': 8, 'state': 'closed'}, {'id': 1223693284, 'number': 11440, 'closed': datetime.datetime(2023, 2, 1, 6, 53, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 31, 17, 55, 55, tzinfo=datetime.timezone.utc), 'time_taken': 46659.0, 'time_delta': '12:57:39', 'additions': 15, 'deletions': 2, 'state': 'closed'}, {'id': 1222258751, 'number': 11437, 'closed': datetime.datetime(2023, 2, 7, 3, 28, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 30, 20, 20, 52, tzinfo=datetime.timezone.utc), 'time_taken': 630439.0, 'time_delta': '7 days, 7:07:19', 'additions': 272, 'deletions': 8, 'state': 'closed'}, {'id': 1222074754, 'number': 11436, 'closed': datetime.datetime(2023, 1, 30, 22, 30, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 30, 18, 12, 31, tzinfo=datetime.timezone.utc), 'time_taken': 15470.0, 'time_delta': '4:17:50', 'additions': 16, 'deletions': 5, 'state': 'closed'}, {'id': 1200648297, 'number': 11421, 'closed': datetime.datetime(2023, 1, 18, 17, 0, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 17, 18, 0, 38, tzinfo=datetime.timezone.utc), 'time_taken': 82797.0, 'time_delta': '22:59:57', 'additions': 38, 'deletions': 9, 'state': 'closed'}, {'id': 1182956219, 'number': 11402, 'closed': datetime.datetime(2023, 1, 5, 19, 7, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 2, 23, 17, 16, tzinfo=datetime.timezone.utc), 'time_taken': 244201.0, 'time_delta': '2 days, 19:50:01', 'additions': 71, 'deletions': 2, 'state': 'closed'}, {'id': 1182866338, 'number': 11401, 'closed': datetime.datetime(2023, 1, 3, 15, 45, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 2, 20, 8, 37, tzinfo=datetime.timezone.utc), 'time_taken': 70609.0, 'time_delta': '19:36:49', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 1154977670, 'number': 11361, 'closed': datetime.datetime(2022, 12, 21, 20, 55, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 8, 23, 29, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1113965.0, 'time_delta': '12 days, 21:26:05', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 1143575884, 'number': 11352, 'closed': datetime.datetime(2023, 4, 3, 18, 33, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 2, 18, 5, 17, tzinfo=datetime.timezone.utc), 'time_taken': 10542493.0, 'time_delta': '122 days, 0:28:13', 'additions': 1662, 'deletions': 43, 'state': 'closed'}, {'id': 1142795153, 'number': 11350, 'closed': datetime.datetime(2022, 12, 2, 12, 20, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 2, 6, 14, 29, tzinfo=datetime.timezone.utc), 'time_taken': 21988.0, 'time_delta': '6:06:28', 'additions': 70, 'deletions': 1369, 'state': 'closed'}, {'id': 1116593987, 'number': 11313, 'closed': datetime.datetime(2022, 11, 15, 5, 24, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 9, 19, 49, 30, tzinfo=datetime.timezone.utc), 'time_taken': 466479.0, 'time_delta': '5 days, 9:34:39', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 1088201789, 'number': 11251, 'closed': datetime.datetime(2022, 10, 15, 18, 25, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 15, 17, 11, tzinfo=datetime.timezone.utc), 'time_taken': 4443.0, 'time_delta': '1:14:03', 'additions': 11, 'deletions': 10, 'state': 'closed'}, {'id': 1064636095, 'number': 11197, 'closed': datetime.datetime(2022, 9, 23, 4, 37, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 22, 20, 43, 20, tzinfo=datetime.timezone.utc), 'time_taken': 28439.0, 'time_delta': '7:53:59', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 1040306907, 'number': 11116, 'closed': datetime.datetime(2022, 9, 3, 9, 10, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 29, 23, 55, 45, tzinfo=datetime.timezone.utc), 'time_taken': 378910.0, 'time_delta': '4 days, 9:15:10', 'additions': 85, 'deletions': 61, 'state': 'closed'}, {'id': 1037382673, 'number': 11096, 'closed': datetime.datetime(2022, 10, 24, 9, 37, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 26, 1, 0, 23, tzinfo=datetime.timezone.utc), 'time_taken': 5128602.0, 'time_delta': '59 days, 8:36:42', 'additions': 268, 'deletions': 9, 'state': 'closed'}, {'id': 1037371841, 'number': 11095, 'closed': datetime.datetime(2022, 8, 29, 15, 5, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 26, 0, 38, 32, tzinfo=datetime.timezone.utc), 'time_taken': 311198.0, 'time_delta': '3 days, 14:26:38', 'additions': 149, 'deletions': 7, 'state': 'closed'}, {'id': 1027898255, 'number': 11038, 'closed': datetime.datetime(2022, 8, 17, 20, 55, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 17, 32, 59, tzinfo=datetime.timezone.utc), 'time_taken': 98534.0, 'time_delta': '1 day, 3:22:14', 'additions': 28, 'deletions': 8, 'state': 'closed'}, {'id': 1021962558, 'number': 11020, 'closed': datetime.datetime(2022, 8, 15, 16, 24, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 20, 43, 17, tzinfo=datetime.timezone.utc), 'time_taken': 502847.0, 'time_delta': '5 days, 19:40:47', 'additions': 20, 'deletions': 14, 'state': 'closed'}, {'id': 1020452027, 'number': 11016, 'closed': datetime.datetime(2022, 8, 8, 19, 0, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 8, 15, 37, 8, tzinfo=datetime.timezone.utc), 'time_taken': 12209.0, 'time_delta': '3:23:29', 'additions': 3, 'deletions': 19, 'state': 'closed'}, {'id': 1015664611, 'number': 10999, 'closed': datetime.datetime(2022, 8, 29, 17, 13, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 22, 39, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2313235.0, 'time_delta': '26 days, 18:33:55', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 1014187995, 'number': 10986, 'closed': datetime.datetime(2022, 8, 16, 1, 26, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 1, 18, 14, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1235478.0, 'time_delta': '14 days, 7:11:18', 'additions': 73, 'deletions': 5, 'state': 'closed'}, {'id': 1012486480, 'number': 10980, 'closed': datetime.datetime(2022, 8, 23, 17, 14, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 30, 1, 48, 34, tzinfo=datetime.timezone.utc), 'time_taken': 2129162.0, 'time_delta': '24 days, 15:26:02', 'additions': 26, 'deletions': 10, 'state': 'closed'}, {'id': 1012466924, 'number': 10979, 'closed': datetime.datetime(2022, 8, 2, 19, 37, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 30, 0, 5, 38, tzinfo=datetime.timezone.utc), 'time_taken': 329526.0, 'time_delta': '3 days, 19:32:06', 'additions': 12, 'deletions': 2, 'state': 'closed'}, {'id': 1012461909, 'number': 10978, 'closed': datetime.datetime(2022, 8, 2, 14, 28, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 23, 45, 42, tzinfo=datetime.timezone.utc), 'time_taken': 312173.0, 'time_delta': '3 days, 14:42:53', 'additions': 29, 'deletions': 1, 'state': 'closed'}, {'id': 1011135552, 'number': 10972, 'closed': datetime.datetime(2022, 7, 28, 19, 2, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 28, 18, 0, 18, tzinfo=datetime.timezone.utc), 'time_taken': 3707.0, 'time_delta': '1:01:47', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1004545938, 'number': 10945, 'closed': datetime.datetime(2022, 7, 27, 15, 9, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 21, 18, 35, 13, tzinfo=datetime.timezone.utc), 'time_taken': 506055.0, 'time_delta': '5 days, 20:34:15', 'additions': 250, 'deletions': 330, 'state': 'closed'}, {'id': 1003075867, 'number': 10940, 'closed': datetime.datetime(2022, 7, 21, 14, 26, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 22, 31, 5, tzinfo=datetime.timezone.utc), 'time_taken': 57307.0, 'time_delta': '15:55:07', 'additions': 117, 'deletions': 91, 'state': 'closed'}, {'id': 1001007866, 'number': 10935, 'closed': datetime.datetime(2022, 7, 19, 21, 12, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 19, 16, 33, 37, tzinfo=datetime.timezone.utc), 'time_taken': 16750.0, 'time_delta': '4:39:10', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 994888612, 'number': 10920, 'closed': datetime.datetime(2022, 12, 2, 1, 32, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 12, 23, 59, 18, tzinfo=datetime.timezone.utc), 'time_taken': 12274378.0, 'time_delta': '142 days, 1:32:58', 'additions': 1369, 'deletions': 70, 'state': 'closed'}, {'id': 994853521, 'number': 10917, 'closed': datetime.datetime(2022, 7, 13, 12, 52, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 12, 22, 43, 25, tzinfo=datetime.timezone.utc), 'time_taken': 50930.0, 'time_delta': '14:08:50', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 993683872, 'number': 10915, 'closed': datetime.datetime(2022, 7, 12, 15, 23, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 11, 23, 59, 11, tzinfo=datetime.timezone.utc), 'time_taken': 55445.0, 'time_delta': '15:24:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 992068757, 'number': 10913, 'closed': datetime.datetime(2022, 8, 4, 17, 39, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 8, 22, 5, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2316880.0, 'time_delta': '26 days, 19:34:40', 'additions': 2043, 'deletions': 68, 'state': 'closed'}, {'id': 978739063, 'number': 10826, 'closed': datetime.datetime(2022, 7, 8, 17, 55, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 21, 26, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1196952.0, 'time_delta': '13 days, 20:29:12', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 978622259, 'number': 10825, 'closed': datetime.datetime(2022, 6, 24, 21, 59, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 18, 49, 55, tzinfo=datetime.timezone.utc), 'time_taken': 11391.0, 'time_delta': '3:09:51', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 978602446, 'number': 10824, 'closed': datetime.datetime(2022, 6, 24, 21, 54, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 18, 23, 17, tzinfo=datetime.timezone.utc), 'time_taken': 12691.0, 'time_delta': '3:31:31', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 975953010, 'number': 10803, 'closed': datetime.datetime(2022, 7, 8, 18, 38, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 22, 22, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1368919.0, 'time_delta': '15 days, 20:15:19', 'additions': 1940, 'deletions': 2113, 'state': 'closed'}, {'id': 975495238, 'number': 10802, 'closed': datetime.datetime(2022, 6, 24, 14, 8, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 17, 13, 38, tzinfo=datetime.timezone.utc), 'time_taken': 161711.0, 'time_delta': '1 day, 20:55:11', 'additions': 119, 'deletions': 66, 'state': 'closed'}, {'id': 974167199, 'number': 10800, 'closed': datetime.datetime(2022, 6, 22, 14, 38, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 21, 21, 17, 38, tzinfo=datetime.timezone.utc), 'time_taken': 62477.0, 'time_delta': '17:21:17', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 970857600, 'number': 10778, 'closed': datetime.datetime(2022, 6, 17, 19, 12, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 17, 17, 33, 12, tzinfo=datetime.timezone.utc), 'time_taken': 5955.0, 'time_delta': '1:39:15', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 968733844, 'number': 10777, 'closed': datetime.datetime(2022, 6, 24, 22, 21, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 23, 47, 34, tzinfo=datetime.timezone.utc), 'time_taken': 772458.0, 'time_delta': '8 days, 22:34:18', 'additions': 647, 'deletions': 473, 'state': 'closed'}, {'id': 967501908, 'number': 10765, 'closed': datetime.datetime(2022, 6, 15, 18, 32, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 14, 23, 25, 5, tzinfo=datetime.timezone.utc), 'time_taken': 68816.0, 'time_delta': '19:06:56', 'additions': 9, 'deletions': 2, 'state': 'closed'}, {'id': 952524351, 'number': 10692, 'closed': datetime.datetime(2022, 6, 1, 15, 19, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 31, 23, 34, 20, tzinfo=datetime.timezone.utc), 'time_taken': 56683.0, 'time_delta': '15:44:43', 'additions': 21, 'deletions': 48, 'state': 'closed'}, {'id': 944744214, 'number': 10667, 'closed': datetime.datetime(2022, 5, 23, 19, 57, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 23, 17, 46, 8, tzinfo=datetime.timezone.utc), 'time_taken': 7868.0, 'time_delta': '2:11:08', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 943317505, 'number': 10661, 'closed': datetime.datetime(2022, 5, 23, 10, 4, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 21, 1, 25, 40, tzinfo=datetime.timezone.utc), 'time_taken': 203927.0, 'time_delta': '2 days, 8:38:47', 'additions': 66, 'deletions': 9, 'state': 'closed'}, {'id': 934131511, 'number': 10626, 'closed': datetime.datetime(2022, 5, 12, 13, 30, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 11, 20, 44, 39, tzinfo=datetime.timezone.utc), 'time_taken': 60372.0, 'time_delta': '16:46:12', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 931744873, 'number': 10617, 'closed': datetime.datetime(2022, 5, 11, 20, 2, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 9, 23, 12, 18, tzinfo=datetime.timezone.utc), 'time_taken': 161393.0, 'time_delta': '1 day, 20:49:53', 'additions': 151, 'deletions': 86, 'state': 'closed'}, {'id': 931609959, 'number': 10616, 'closed': datetime.datetime(2022, 5, 10, 6, 26, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 9, 20, 22, 54, tzinfo=datetime.timezone.utc), 'time_taken': 36213.0, 'time_delta': '10:03:33', 'additions': 18, 'deletions': 0, 'state': 'closed'}, {'id': 926030980, 'number': 10587, 'closed': datetime.datetime(2022, 5, 4, 8, 7, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 2, 22, 33, 45, tzinfo=datetime.timezone.utc), 'time_taken': 120854.0, 'time_delta': '1 day, 9:34:14', 'additions': 206, 'deletions': 12, 'state': 'closed'}, {'id': 925785634, 'number': 10586, 'closed': datetime.datetime(2022, 5, 3, 12, 13, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 2, 17, 36, 39, tzinfo=datetime.timezone.utc), 'time_taken': 66987.0, 'time_delta': '18:36:27', 'additions': 19, 'deletions': 3, 'state': 'closed'}, {'id': 925749697, 'number': 10584, 'closed': datetime.datetime(2022, 5, 3, 16, 41, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 2, 16, 51, 57, tzinfo=datetime.timezone.utc), 'time_taken': 85766.0, 'time_delta': '23:49:26', 'additions': 7, 'deletions': 6, 'state': 'closed'}, {'id': 919983220, 'number': 10571, 'closed': datetime.datetime(2022, 4, 30, 9, 2, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 26, 23, 31, 28, tzinfo=datetime.timezone.utc), 'time_taken': 293460.0, 'time_delta': '3 days, 9:31:00', 'additions': 620, 'deletions': 21, 'state': 'closed'}, {'id': 916601652, 'number': 10558, 'closed': datetime.datetime(2022, 4, 23, 12, 18, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 22, 16, 3, 46, tzinfo=datetime.timezone.utc), 'time_taken': 72900.0, 'time_delta': '20:15:00', 'additions': 6, 'deletions': 18, 'state': 'closed'}, {'id': 915911205, 'number': 10557, 'closed': datetime.datetime(2022, 4, 22, 14, 44, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 22, 1, 4, 14, tzinfo=datetime.timezone.utc), 'time_taken': 49225.0, 'time_delta': '13:40:25', 'additions': 105, 'deletions': 33, 'state': 'closed'}, {'id': 915849685, 'number': 10556, 'closed': datetime.datetime(2022, 4, 22, 4, 18, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 21, 22, 52, 29, tzinfo=datetime.timezone.utc), 'time_taken': 19566.0, 'time_delta': '5:26:06', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 911138885, 'number': 10534, 'closed': datetime.datetime(2022, 4, 21, 16, 27, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 15, 22, 36, 35, tzinfo=datetime.timezone.utc), 'time_taken': 496230.0, 'time_delta': '5 days, 17:50:30', 'additions': 263, 'deletions': 9, 'state': 'closed'}, {'id': 909456208, 'number': 10525, 'closed': datetime.datetime(2022, 4, 14, 13, 49, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 14, 0, 14, 26, tzinfo=datetime.timezone.utc), 'time_taken': 48903.0, 'time_delta': '13:35:03', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 899486473, 'number': 10493, 'closed': datetime.datetime(2022, 4, 5, 6, 18, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 4, 21, 5, 27, tzinfo=datetime.timezone.utc), 'time_taken': 33195.0, 'time_delta': '9:13:15', 'additions': 14, 'deletions': 20, 'state': 'closed'}, {'id': 882736340, 'number': 10443, 'closed': datetime.datetime(2022, 3, 17, 21, 22, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 17, 18, 19, 19, tzinfo=datetime.timezone.utc), 'time_taken': 10978.0, 'time_delta': '3:02:58', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 882657693, 'number': 10441, 'closed': datetime.datetime(2022, 3, 17, 17, 21, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 17, 17, 0, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1254.0, 'time_delta': '0:20:54', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 881724797, 'number': 10439, 'closed': datetime.datetime(2022, 3, 16, 22, 16, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 16, 19, 27, 19, tzinfo=datetime.timezone.utc), 'time_taken': 10141.0, 'time_delta': '2:49:01', 'additions': 38, 'deletions': 36, 'state': 'closed'}, {'id': 877709142, 'number': 10432, 'closed': datetime.datetime(2022, 3, 11, 21, 17, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 11, 18, 31, 53, tzinfo=datetime.timezone.utc), 'time_taken': 9908.0, 'time_delta': '2:45:08', 'additions': 141, 'deletions': 134, 'state': 'closed'}, {'id': 870889129, 'number': 10409, 'closed': datetime.datetime(2022, 3, 3, 18, 56, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 3, 18, 21, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2096.0, 'time_delta': '0:34:56', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 868530365, 'number': 10407, 'closed': datetime.datetime(2022, 3, 2, 21, 56, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 2, 1, 3, 4, tzinfo=datetime.timezone.utc), 'time_taken': 75201.0, 'time_delta': '20:53:21', 'additions': 3363, 'deletions': 2953, 'state': 'closed'}, {'id': 865338712, 'number': 10401, 'closed': datetime.datetime(2022, 3, 1, 16, 30, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 26, 23, 50, 21, tzinfo=datetime.timezone.utc), 'time_taken': 232819.0, 'time_delta': '2 days, 16:40:19', 'additions': 254, 'deletions': 92, 'state': 'closed'}, {'id': 863065484, 'number': 10395, 'closed': datetime.datetime(2022, 2, 28, 16, 10, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 25, 3, 46, 22, tzinfo=datetime.timezone.utc), 'time_taken': 303841.0, 'time_delta': '3 days, 12:24:01', 'additions': 373, 'deletions': 37, 'state': 'closed'}, {'id': 862926221, 'number': 10393, 'closed': datetime.datetime(2022, 2, 25, 17, 0, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 24, 22, 42, 34, tzinfo=datetime.timezone.utc), 'time_taken': 65886.0, 'time_delta': '18:18:06', 'additions': 33, 'deletions': 21, 'state': 'closed'}, {'id': 860956686, 'number': 10384, 'closed': datetime.datetime(2022, 2, 23, 14, 24, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 23, 1, 2, 39, tzinfo=datetime.timezone.utc), 'time_taken': 48137.0, 'time_delta': '13:22:17', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 860674876, 'number': 10381, 'closed': datetime.datetime(2022, 2, 22, 20, 43, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 22, 17, 40, 41, tzinfo=datetime.timezone.utc), 'time_taken': 10971.0, 'time_delta': '3:02:51', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 860026125, 'number': 10375, 'closed': datetime.datetime(2022, 2, 22, 15, 16, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 22, 4, 32, 56, tzinfo=datetime.timezone.utc), 'time_taken': 38628.0, 'time_delta': '10:43:48', 'additions': 43, 'deletions': 57, 'state': 'closed'}, {'id': 859786268, 'number': 10373, 'closed': datetime.datetime(2022, 2, 22, 15, 44, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 21, 19, 32, 26, tzinfo=datetime.timezone.utc), 'time_taken': 72734.0, 'time_delta': '20:12:14', 'additions': 214, 'deletions': 58, 'state': 'closed'}, {'id': 859692801, 'number': 10370, 'closed': datetime.datetime(2022, 2, 21, 23, 45, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 21, 17, 14, 8, tzinfo=datetime.timezone.utc), 'time_taken': 23459.0, 'time_delta': '6:30:59', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 852397980, 'number': 10341, 'closed': datetime.datetime(2022, 2, 14, 18, 48, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 18, 46, 53, tzinfo=datetime.timezone.utc), 'time_taken': 114.0, 'time_delta': '0:01:54', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 852393592, 'number': 10340, 'closed': datetime.datetime(2022, 2, 14, 18, 41, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 18, 41, 12, tzinfo=datetime.timezone.utc), 'time_taken': 32.0, 'time_delta': '0:00:32', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 852369776, 'number': 10338, 'closed': datetime.datetime(2022, 2, 14, 18, 18, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 18, 14, 54, tzinfo=datetime.timezone.utc), 'time_taken': 194.0, 'time_delta': '0:03:14', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 852368662, 'number': 10337, 'closed': datetime.datetime(2022, 2, 14, 18, 14, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 18, 13, 54, tzinfo=datetime.timezone.utc), 'time_taken': 22.0, 'time_delta': '0:00:22', 'additions': 259, 'deletions': 1, 'state': 'closed'}, {'id': 852249952, 'number': 10335, 'closed': datetime.datetime(2022, 2, 14, 17, 49, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 16, 17, 21, tzinfo=datetime.timezone.utc), 'time_taken': 5547.0, 'time_delta': '1:32:27', 'additions': 19, 'deletions': 7, 'state': 'closed'}, {'id': 849151975, 'number': 10328, 'closed': datetime.datetime(2022, 2, 12, 16, 18, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 12, 16, 12, 3, tzinfo=datetime.timezone.utc), 'time_taken': 390.0, 'time_delta': '0:06:30', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 848306983, 'number': 10326, 'closed': datetime.datetime(2022, 2, 12, 0, 18, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 12, 0, 1, 42, tzinfo=datetime.timezone.utc), 'time_taken': 997.0, 'time_delta': '0:16:37', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 846645290, 'number': 10322, 'closed': datetime.datetime(2022, 2, 11, 2, 55, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 11, 2, 53, 18, tzinfo=datetime.timezone.utc), 'time_taken': 142.0, 'time_delta': '0:02:22', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 843290597, 'number': 10313, 'closed': datetime.datetime(2022, 2, 9, 0, 47, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 8, 22, 13, 42, tzinfo=datetime.timezone.utc), 'time_taken': 9221.0, 'time_delta': '2:33:41', 'additions': 10, 'deletions': 5, 'state': 'closed'}, {'id': 839887765, 'number': 10298, 'closed': datetime.datetime(2022, 2, 9, 0, 37, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 4, 3, 22, 46, tzinfo=datetime.timezone.utc), 'time_taken': 422074.0, 'time_delta': '4 days, 21:14:34', 'additions': 103, 'deletions': 23, 'state': 'closed'}, {'id': 826836058, 'number': 10226, 'closed': datetime.datetime(2022, 1, 20, 15, 9, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 19, 19, 36, 16, tzinfo=datetime.timezone.utc), 'time_taken': 70397.0, 'time_delta': '19:33:17', 'additions': 20, 'deletions': 12, 'state': 'closed'}, {'id': 824118667, 'number': 10212, 'closed': datetime.datetime(2022, 1, 19, 16, 20, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 17, 3, 6, 32, tzinfo=datetime.timezone.utc), 'time_taken': 220443.0, 'time_delta': '2 days, 13:14:03', 'additions': 127, 'deletions': 42, 'state': 'closed'}, {'id': 822234358, 'number': 10202, 'closed': datetime.datetime(2022, 1, 15, 13, 37, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 14, 7, 27, 58, tzinfo=datetime.timezone.utc), 'time_taken': 108551.0, 'time_delta': '1 day, 6:09:11', 'additions': 33, 'deletions': 9, 'state': 'closed'}, {'id': 816090886, 'number': 10185, 'closed': datetime.datetime(2022, 1, 8, 12, 29, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 7, 4, 53, 36, tzinfo=datetime.timezone.utc), 'time_taken': 113768.0, 'time_delta': '1 day, 7:36:08', 'additions': 30, 'deletions': 1, 'state': 'closed'}, {'id': 814400535, 'number': 10179, 'closed': datetime.datetime(2022, 1, 5, 7, 40, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 5, 5, 15, 9, tzinfo=datetime.timezone.utc), 'time_taken': 8733.0, 'time_delta': '2:25:33', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 806855213, 'number': 10159, 'closed': datetime.datetime(2021, 12, 20, 18, 55, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 20, 17, 32, 20, tzinfo=datetime.timezone.utc), 'time_taken': 5002.0, 'time_delta': '1:23:22', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 806320691, 'number': 10155, 'closed': datetime.datetime(2021, 12, 20, 22, 45, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 20, 6, 31, 24, tzinfo=datetime.timezone.utc), 'time_taken': 58474.0, 'time_delta': '16:14:34', 'additions': 55, 'deletions': 29, 'state': 'closed'}, {'id': 806300140, 'number': 10154, 'closed': datetime.datetime(2021, 12, 20, 23, 56, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 20, 5, 57, 48, tzinfo=datetime.timezone.utc), 'time_taken': 64717.0, 'time_delta': '17:58:37', 'additions': 68, 'deletions': 10, 'state': 'closed'}, {'id': 785282801, 'number': 10024, 'closed': datetime.datetime(2021, 11, 24, 21, 37, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 20, 21, 55, 30, tzinfo=datetime.timezone.utc), 'time_taken': 344549.0, 'time_delta': '3 days, 23:42:29', 'additions': 40, 'deletions': 9, 'state': 'closed'}, {'id': 785111138, 'number': 10021, 'closed': datetime.datetime(2021, 11, 23, 16, 14, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 20, 0, 36, 16, tzinfo=datetime.timezone.utc), 'time_taken': 315489.0, 'time_delta': '3 days, 15:38:09', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 777780652, 'number': 9991, 'closed': datetime.datetime(2021, 11, 11, 17, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 10, 16, 26, 57, tzinfo=datetime.timezone.utc), 'time_taken': 91083.0, 'time_delta': '1 day, 1:18:03', 'additions': 27, 'deletions': 36, 'state': 'closed'}, {'id': 777000346, 'number': 9987, 'closed': datetime.datetime(2021, 11, 10, 17, 21, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 9, 21, 21, 18, tzinfo=datetime.timezone.utc), 'time_taken': 72011.0, 'time_delta': '20:00:11', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 776994507, 'number': 9986, 'closed': datetime.datetime(2021, 11, 10, 17, 25, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 9, 21, 12, 12, tzinfo=datetime.timezone.utc), 'time_taken': 72790.0, 'time_delta': '20:13:10', 'additions': 7, 'deletions': 5, 'state': 'closed'}, {'id': 775934949, 'number': 9981, 'closed': datetime.datetime(2021, 11, 9, 12, 57, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 8, 20, 30, 39, tzinfo=datetime.timezone.utc), 'time_taken': 59226.0, 'time_delta': '16:27:06', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 775888204, 'number': 9980, 'closed': datetime.datetime(2021, 11, 9, 12, 56, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 8, 19, 25, 41, tzinfo=datetime.timezone.utc), 'time_taken': 63075.0, 'time_delta': '17:31:15', 'additions': 39, 'deletions': 24, 'state': 'closed'}, {'id': 775870165, 'number': 9978, 'closed': datetime.datetime(2021, 11, 8, 21, 44, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 8, 19, 2, 40, tzinfo=datetime.timezone.utc), 'time_taken': 9690.0, 'time_delta': '2:41:30', 'additions': 29, 'deletions': 2, 'state': 'closed'}, {'id': 772950235, 'number': 9952, 'closed': datetime.datetime(2021, 11, 5, 14, 15, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 4, 1, 26, 16, tzinfo=datetime.timezone.utc), 'time_taken': 132566.0, 'time_delta': '1 day, 12:49:26', 'additions': 59, 'deletions': 4, 'state': 'closed'}, {'id': 772884263, 'number': 9950, 'closed': datetime.datetime(2021, 11, 5, 13, 36, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 3, 22, 49, 29, tzinfo=datetime.timezone.utc), 'time_taken': 139628.0, 'time_delta': '1 day, 14:47:08', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 771121053, 'number': 9940, 'closed': datetime.datetime(2021, 11, 2, 14, 41, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 2, 6, 25, 11, tzinfo=datetime.timezone.utc), 'time_taken': 29791.0, 'time_delta': '8:16:31', 'additions': 9, 'deletions': 5, 'state': 'closed'}, {'id': 767768541, 'number': 9911, 'closed': datetime.datetime(2021, 10, 28, 12, 31, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 27, 20, 34, 22, tzinfo=datetime.timezone.utc), 'time_taken': 57408.0, 'time_delta': '15:56:48', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 766931669, 'number': 9907, 'closed': datetime.datetime(2021, 11, 1, 20, 2, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 27, 0, 8, 45, tzinfo=datetime.timezone.utc), 'time_taken': 503607.0, 'time_delta': '5 days, 19:53:27', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 763475469, 'number': 9884, 'closed': datetime.datetime(2021, 10, 21, 17, 17, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 21, 17, 5, 30, tzinfo=datetime.timezone.utc), 'time_taken': 737.0, 'time_delta': '0:12:17', 'additions': 197, 'deletions': 1, 'state': 'closed'}, {'id': 762732595, 'number': 9882, 'closed': datetime.datetime(2021, 10, 21, 16, 21, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 20, 21, 43, 8, tzinfo=datetime.timezone.utc), 'time_taken': 67120.0, 'time_delta': '18:38:40', 'additions': 226, 'deletions': 1, 'state': 'closed'}, {'id': 747836967, 'number': 9800, 'closed': datetime.datetime(2021, 10, 5, 14, 22, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 1, 18, 4, 43, tzinfo=datetime.timezone.utc), 'time_taken': 332290.0, 'time_delta': '3 days, 20:18:10', 'additions': 227, 'deletions': 3, 'state': 'closed'}, {'id': 743805109, 'number': 9785, 'closed': datetime.datetime(2021, 10, 7, 21, 36, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 27, 20, 25, 44, tzinfo=datetime.timezone.utc), 'time_taken': 868275.0, 'time_delta': '10 days, 1:11:15', 'additions': 210, 'deletions': 1, 'state': 'closed'}, {'id': 743741946, 'number': 9784, 'closed': datetime.datetime(2021, 9, 29, 2, 40, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 27, 19, 4, 38, tzinfo=datetime.timezone.utc), 'time_taken': 113776.0, 'time_delta': '1 day, 7:36:16', 'additions': 403, 'deletions': 118, 'state': 'closed'}, {'id': 740577890, 'number': 9770, 'closed': datetime.datetime(2021, 9, 22, 16, 52, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 15, 22, 47, tzinfo=datetime.timezone.utc), 'time_taken': 5364.0, 'time_delta': '1:29:24', 'additions': 5, 'deletions': 2, 'state': 'closed'}, {'id': 733223176, 'number': 9732, 'closed': datetime.datetime(2021, 9, 14, 14, 46, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 14, 0, 44, 47, tzinfo=datetime.timezone.utc), 'time_taken': 50477.0, 'time_delta': '14:01:17', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 725100598, 'number': 9711, 'closed': datetime.datetime(2021, 9, 2, 13, 45, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 1, 23, 40, 59, tzinfo=datetime.timezone.utc), 'time_taken': 50678.0, 'time_delta': '14:04:38', 'additions': 8, 'deletions': 8, 'state': 'closed'}, {'id': 720804643, 'number': 9702, 'closed': datetime.datetime(2021, 8, 30, 23, 11, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 26, 20, 1, 25, tzinfo=datetime.timezone.utc), 'time_taken': 356992.0, 'time_delta': '4 days, 3:09:52', 'additions': 209, 'deletions': 19, 'state': 'closed'}, {'id': 717499164, 'number': 9688, 'closed': datetime.datetime(2021, 8, 24, 20, 7, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 5, 0, 20, tzinfo=datetime.timezone.utc), 'time_taken': 140848.0, 'time_delta': '1 day, 15:07:28', 'additions': 187, 'deletions': 41, 'state': 'closed'}, {'id': 717051755, 'number': 9684, 'closed': datetime.datetime(2021, 8, 21, 9, 47, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 23, 53, 26, tzinfo=datetime.timezone.utc), 'time_taken': 35656.0, 'time_delta': '9:54:16', 'additions': 34, 'deletions': 2, 'state': 'closed'}, {'id': 716916195, 'number': 9682, 'closed': datetime.datetime(2021, 8, 20, 20, 25, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 18, 14, 7, tzinfo=datetime.timezone.utc), 'time_taken': 7876.0, 'time_delta': '2:11:16', 'additions': 189, 'deletions': 75, 'state': 'closed'}, {'id': 703731611, 'number': 9644, 'closed': datetime.datetime(2021, 8, 4, 21, 35, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 16, 59, 52, tzinfo=datetime.timezone.utc), 'time_taken': 16527.0, 'time_delta': '4:35:27', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 701755309, 'number': 9636, 'closed': datetime.datetime(2021, 8, 2, 21, 52, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 20, 18, 52, tzinfo=datetime.timezone.utc), 'time_taken': 5638.0, 'time_delta': '1:33:58', 'additions': 19, 'deletions': 3, 'state': 'closed'}, {'id': 700556673, 'number': 9630, 'closed': datetime.datetime(2021, 7, 31, 15, 25, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 30, 20, 55, 51, tzinfo=datetime.timezone.utc), 'time_taken': 66566.0, 'time_delta': '18:29:26', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 699045909, 'number': 9626, 'closed': datetime.datetime(2021, 9, 16, 7, 9, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 22, 8, 17, tzinfo=datetime.timezone.utc), 'time_taken': 4266099.0, 'time_delta': '49 days, 9:01:39', 'additions': 113, 'deletions': 0, 'state': 'closed'}, {'id': 698969243, 'number': 9625, 'closed': datetime.datetime(2021, 7, 29, 12, 34, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 19, 47, 5, tzinfo=datetime.timezone.utc), 'time_taken': 60421.0, 'time_delta': '16:47:01', 'additions': 97, 'deletions': 86, 'state': 'closed'}, {'id': 698874959, 'number': 9622, 'closed': datetime.datetime(2021, 7, 28, 20, 53, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 17, 21, 55, tzinfo=datetime.timezone.utc), 'time_taken': 12686.0, 'time_delta': '3:31:26', 'additions': 33, 'deletions': 30, 'state': 'closed'}, {'id': 698183946, 'number': 9618, 'closed': datetime.datetime(2021, 7, 29, 23, 10, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 20, 58, 22, tzinfo=datetime.timezone.utc), 'time_taken': 180757.0, 'time_delta': '2 days, 2:12:37', 'additions': 132, 'deletions': 69, 'state': 'closed'}, {'id': 698126964, 'number': 9617, 'closed': datetime.datetime(2021, 7, 27, 20, 23, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 19, 18, 23, tzinfo=datetime.timezone.utc), 'time_taken': 3935.0, 'time_delta': '1:05:35', 'additions': 17, 'deletions': 19, 'state': 'closed'}, {'id': 694717864, 'number': 9601, 'closed': datetime.datetime(2021, 7, 22, 17, 40, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 21, 22, 6, tzinfo=datetime.timezone.utc), 'time_taken': 73093.0, 'time_delta': '20:18:13', 'additions': 78, 'deletions': 95, 'state': 'closed'}, {'id': 694589041, 'number': 9599, 'closed': datetime.datetime(2021, 7, 21, 19, 8, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 18, 9, 35, tzinfo=datetime.timezone.utc), 'time_taken': 3528.0, 'time_delta': '0:58:48', 'additions': 24, 'deletions': 19, 'state': 'closed'}, {'id': 693686151, 'number': 9598, 'closed': datetime.datetime(2021, 7, 21, 14, 46, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 18, 13, 51, tzinfo=datetime.timezone.utc), 'time_taken': 73988.0, 'time_delta': '20:33:08', 'additions': 141, 'deletions': 83, 'state': 'closed'}, {'id': 692211177, 'number': 9586, 'closed': datetime.datetime(2021, 9, 17, 16, 52, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 2, 14, 22, tzinfo=datetime.timezone.utc), 'time_taken': 5236675.0, 'time_delta': '60 days, 14:37:55', 'additions': 1273, 'deletions': 91, 'state': 'closed'}, {'id': 692144818, 'number': 9585, 'closed': datetime.datetime(2021, 8, 19, 21, 9, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 20, 27, 57, tzinfo=datetime.timezone.utc), 'time_taken': 2767264.0, 'time_delta': '32 days, 0:41:04', 'additions': 896, 'deletions': 655, 'state': 'closed'}, {'id': 691699308, 'number': 9579, 'closed': datetime.datetime(2021, 7, 19, 15, 48, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 19, 26, 40, tzinfo=datetime.timezone.utc), 'time_taken': 246112.0, 'time_delta': '2 days, 20:21:52', 'additions': 90, 'deletions': 93, 'state': 'closed'}, {'id': 691118248, 'number': 9574, 'closed': datetime.datetime(2021, 7, 16, 22, 7, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 0, 47, 47, tzinfo=datetime.timezone.utc), 'time_taken': 76800.0, 'time_delta': '21:20:00', 'additions': 185, 'deletions': 243, 'state': 'closed'}, {'id': 686453633, 'number': 9545, 'closed': datetime.datetime(2021, 7, 19, 13, 43, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 3, 6, 19, tzinfo=datetime.timezone.utc), 'time_taken': 902247.0, 'time_delta': '10 days, 10:37:27', 'additions': 356, 'deletions': 85, 'state': 'closed'}, {'id': 686435649, 'number': 9544, 'closed': datetime.datetime(2021, 7, 16, 22, 16, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 2, 8, 27, tzinfo=datetime.timezone.utc), 'time_taken': 677257.0, 'time_delta': '7 days, 20:07:37', 'additions': 394, 'deletions': 110, 'state': 'closed'}, {'id': 686174140, 'number': 9543, 'closed': datetime.datetime(2021, 7, 12, 13, 2, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 16, 46, 13, tzinfo=datetime.timezone.utc), 'time_taken': 332195.0, 'time_delta': '3 days, 20:16:35', 'additions': 710, 'deletions': 664, 'state': 'closed'}, {'id': 686050137, 'number': 9540, 'closed': datetime.datetime(2021, 7, 19, 22, 48, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 14, 7, 48, tzinfo=datetime.timezone.utc), 'time_taken': 981669.0, 'time_delta': '11 days, 8:41:09', 'additions': 248, 'deletions': 55, 'state': 'closed'}, {'id': 681297903, 'number': 9515, 'closed': datetime.datetime(2021, 7, 2, 16, 47, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 23, 23, 31, tzinfo=datetime.timezone.utc), 'time_taken': 149063.0, 'time_delta': '1 day, 17:24:23', 'additions': 490, 'deletions': 281, 'state': 'closed'}, {'id': 677385543, 'number': 9504, 'closed': datetime.datetime(2021, 6, 25, 9, 36, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 19, 33, 19, tzinfo=datetime.timezone.utc), 'time_taken': 50596.0, 'time_delta': '14:03:16', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 671737971, 'number': 9484, 'closed': datetime.datetime(2021, 6, 24, 15, 0, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 17, 54, 26, tzinfo=datetime.timezone.utc), 'time_taken': 680741.0, 'time_delta': '7 days, 21:05:41', 'additions': 641, 'deletions': 13, 'state': 'closed'}, {'id': 670835920, 'number': 9480, 'closed': datetime.datetime(2021, 6, 17, 18, 2, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 23, 34, 31, tzinfo=datetime.timezone.utc), 'time_taken': 152892.0, 'time_delta': '1 day, 18:28:12', 'additions': 34, 'deletions': 34, 'state': 'closed'}, {'id': 670675533, 'number': 9478, 'closed': datetime.datetime(2021, 6, 16, 19, 2, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 19, 11, 32, tzinfo=datetime.timezone.utc), 'time_taken': 85867.0, 'time_delta': '23:51:07', 'additions': 46, 'deletions': 13, 'state': 'closed'}, {'id': 618503637, 'number': 9320, 'closed': datetime.datetime(2021, 4, 20, 13, 38, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 19, 20, 49, 14, tzinfo=datetime.timezone.utc), 'time_taken': 60533.0, 'time_delta': '16:48:53', 'additions': 1, 'deletions': 5, 'state': 'closed'}, {'id': 601902945, 'number': 9201, 'closed': datetime.datetime(2021, 3, 28, 20, 56, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 26, 21, 6, 42, tzinfo=datetime.timezone.utc), 'time_taken': 172160.0, 'time_delta': '1 day, 23:49:20', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 596716327, 'number': 9163, 'closed': datetime.datetime(2021, 3, 19, 18, 44, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 16, 21, 15, tzinfo=datetime.timezone.utc), 'time_taken': 8604.0, 'time_delta': '2:23:24', 'additions': 16, 'deletions': 8, 'state': 'closed'}, {'id': 593397084, 'number': 9087, 'closed': datetime.datetime(2021, 3, 23, 13, 41, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 21, 14, 15, tzinfo=datetime.timezone.utc), 'time_taken': 664034.0, 'time_delta': '7 days, 16:27:14', 'additions': 182, 'deletions': 140, 'state': 'closed'}, {'id': 593221303, 'number': 9066, 'closed': datetime.datetime(2021, 3, 15, 20, 46, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 16, 33, 32, tzinfo=datetime.timezone.utc), 'time_taken': 15197.0, 'time_delta': '4:13:17', 'additions': 5, 'deletions': 9, 'state': 'closed'}, {'id': 542153510, 'number': 8670, 'closed': datetime.datetime(2020, 12, 18, 21, 20, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 17, 21, 55, 6, tzinfo=datetime.timezone.utc), 'time_taken': 84308.0, 'time_delta': '23:25:08', 'additions': 227, 'deletions': 0, 'state': 'closed'}, {'id': 427599331, 'number': 7863, 'closed': datetime.datetime(2020, 6, 5, 18, 13, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 4, 5, 32, 25, tzinfo=datetime.timezone.utc), 'time_taken': 132085.0, 'time_delta': '1 day, 12:41:25', 'additions': 158, 'deletions': 163, 'state': 'closed'}, {'id': 342870057, 'number': 7087, 'closed': datetime.datetime(2020, 9, 3, 21, 45, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 19, 20, 14, 40, tzinfo=datetime.timezone.utc), 'time_taken': 24975025.0, 'time_delta': '289 days, 1:30:25', 'additions': 184, 'deletions': 64, 'state': 'closed'}, {'id': 341822660, 'number': 7072, 'closed': datetime.datetime(2019, 11, 17, 16, 18, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 17, 5, 36, 14, tzinfo=datetime.timezone.utc), 'time_taken': 38539.0, 'time_delta': '10:42:19', 'additions': 145, 'deletions': 0, 'state': 'closed'}, {'id': 338727826, 'number': 7039, 'closed': datetime.datetime(2019, 11, 11, 18, 0, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 8, 15, 27, 50, tzinfo=datetime.timezone.utc), 'time_taken': 268365.0, 'time_delta': '3 days, 2:32:45', 'additions': 23, 'deletions': 3, 'state': 'closed'}, {'id': 338461222, 'number': 7036, 'closed': datetime.datetime(2019, 11, 9, 14, 17, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 8, 5, 9, 31, tzinfo=datetime.timezone.utc), 'time_taken': 119271.0, 'time_delta': '1 day, 9:07:51', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 324473534, 'number': 6910, 'closed': datetime.datetime(2019, 11, 13, 7, 19, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 4, 1, 34, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3476711.0, 'time_delta': '40 days, 5:45:11', 'additions': 594, 'deletions': 55, 'state': 'closed'}, {'id': 284688576, 'number': 6402, 'closed': datetime.datetime(2019, 9, 9, 7, 46, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 3, 19, 0, 6, tzinfo=datetime.timezone.utc), 'time_taken': 8426783.0, 'time_delta': '97 days, 12:46:23', 'additions': 1789, 'deletions': 0, 'state': 'closed'}, {'id': 223371177, 'number': 5617, 'closed': datetime.datetime(2019, 9, 30, 21, 4, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 10, 16, 19, 37, 17, tzinfo=datetime.timezone.utc), 'time_taken': 30158859.0, 'time_delta': '349 days, 1:27:39', 'additions': 1922, 'deletions': 5, 'state': 'closed'}, {'id': 223368972, 'number': 5616, 'closed': datetime.datetime(2018, 10, 16, 19, 38, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 10, 16, 19, 29, 12, tzinfo=datetime.timezone.utc), 'time_taken': 572.0, 'time_delta': '0:09:32', 'additions': 516, 'deletions': 264, 'state': 'closed'}, {'id': 202662265, 'number': 5355, 'closed': datetime.datetime(2018, 8, 7, 20, 57, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 7, 19, 19, 36, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1646493.0, 'time_delta': '19 days, 1:21:33', 'additions': 515, 'deletions': 262, 'state': 'closed'}]"
