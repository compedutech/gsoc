pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
596247089,Fixes #9: Add rendertron analyzer [docker based],"Signed-off-by: Shubham Pandey <shubhampcpandey13@gmail.com>

# Description
This adds a new docker analyzer that uses `rendertron` to capture a screenshot of a web page.
https://github.com/intelowlproject/IntelOwl/issues/9#issuecomment-801867465

~~work in progress, initials reviews appreciated!~~
1. ~~Issue with `renderton` using `--no-sandbox` flag: I did set up a sandbox either by using the chrome itself or using the sandbox with chromium that `puppeteer` installs, right now I'm looking for a solution to - `Failed to move to new namespace: PID namespaces supported, Network namespace supported, but failed: errno = Operation not permitted`  [Relevant Documentation](https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#setting-up-chrome-linux-sandbox)~~

2. Refactor code and dockerfile

## Related issues
Related to #9 by @mlodic 

## Type of change

Please delete options that are not relevant.

- [x] New feature (non-breaking change which adds functionality).
- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [x] The pull request is for the branch develop
- [x] If I added a new analyzer, I updated the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md). If the analyzer provides additional optional configuration, I added the available options here: [Advanced-Usage](./Advanced-Usage.md)
- [x] If I added external libraries/packages that use restrictive licenses, please add them in the [ReadMe - Legal Notice](https://github.com/certego/IntelOwl/blob/master/README.md) section
- [x] I added new secrets in the files [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/env_file_app_travis) and in the docs: [Installation](./Installation.md)
- [x] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one.
  
# Real World Example
![image](https://user-images.githubusercontent.com/51958314/111741349-64185200-88ac-11eb-9fc1-cc7f74733619.png)
",True,370,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/370,https://github.com/intelowlproject/IntelOwl/pull/370,closed,1737,22,14,9,7,8,0,0,[],2021-03-19 06:30:29+00:00,2021-03-20 16:11:25+00:00,121256.0,"1 day, 9:40:56","[{'comment_id': 597667258, 'comment_body': 'could this be the problem. In this case the `return` would just exit from the new function instead of the `_docker_run` function', 'comment_created': datetime.datetime(2021, 3, 19, 13, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 597667924, 'comment_body': 'I got anything else about the error for Thug.', 'comment_created': datetime.datetime(2021, 3, 19, 13, 15, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 597704137, 'comment_body': 'my bad,  thank you', 'comment_created': datetime.datetime(2021, 3, 19, 14, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 597869479, 'comment_body': ""isn't this too much maybe?"", 'comment_created': datetime.datetime(2021, 3, 19, 17, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 597887093, 'comment_body': ""Yep, you are right. This was for testing purpose as the proxy I was using was too slow.\r\nI'll change it to 150s."", 'comment_created': datetime.datetime(2021, 3, 19, 18, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 598074632, 'comment_body': 'Do we really need our own Dockerfile for rendertron? Do they not provide their own managed image on docker hub that we could directly use? ', 'comment_created': datetime.datetime(2021, 3, 20, 7, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 598074717, 'comment_body': 'Probably not required here since renderton does not the log the way other containers do.', 'comment_created': datetime.datetime(2021, 3, 20, 7, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 598076741, 'comment_body': ""No, they don't provide now. Ref https://github.com/GoogleChrome/rendertron#deploying-using-docker"", 'comment_created': datetime.datetime(2021, 3, 20, 7, 26, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': 'd5f8903a59cba6d353392b196882dbcc489898ec', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b9b21fc84737b32734d78e051ede92f131dc792', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1913aba7a5a6c9e1a5b622e1fc8026a1ec38f8f0', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99ae905042118ab2bf271c421f637ddf15a8c231', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7018f6d20ef6ed958b9c48070d42c666aa9d8e93', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02aeea91e6eea6ad352f59ddb1ecc402cc4eb947', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e924874929d06a2ee7281faad538d84505392f61', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '903669a71f7b5aa376d3ee3ac8286abeb29372ae', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3e5727d83212ac27c9dfafdcd267c94a6de5658', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
592435532,Add IBM X-Force Exchange Observable Analyzer,"Signed-off-by: Shubham Pandey <shubhampcpandey13@gmail.com>

# Description
Fixes #139 by @bowling
This adds an observable analyzer `XForceExchange`. Refer [139#issuecomment-798273872](https://github.com/intelowlproject/IntelOwl/issues/139#issuecomment-798273872)

## Type of change
- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] If I added a new analyzer, I updated the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md). If the analyzer provides additional optional configuration, I added the available options here: [Advanced-Usage](./Advanced-Usage.md)
- [x] I added new secrets in the files [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/env_file_app_travis) and in the docs: [Installation](./Installation.md)
- [x] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one.
  
# Real World Example
![image](https://user-images.githubusercontent.com/51958314/111050898-5b231d00-8475-11eb-8017-e7071e92923e.png)

Log Files - [xforce_logs.zip](https://github.com/intelowlproject/IntelOwl/files/6135666/xforce_logs.zip)

",True,362,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/362,https://github.com/intelowlproject/IntelOwl/pull/362,closed,117,1,8,1,2,3,0,0,[],2021-03-13 22:25:32+00:00,2021-03-16 08:08:09+00:00,207757.0,"2 days, 9:42:37","[{'comment_id': 594387190, 'comment_body': 'we can avoid the duplication of testing code. Check how this is managed in `utils.py`.\r\n\r\nYou can create a new class `CommonTestCases_ip_url_hash` for this case and handle it similarly.', 'comment_created': datetime.datetime(2021, 3, 15, 14, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 594387976, 'comment_body': 'combination of `-` and `_` could be a little tricky. Please remove them: `XForceExchange`', 'comment_created': datetime.datetime(2021, 3, 15, 14, 32, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 594495977, 'comment_body': ""That's so cool! I have changed this now :)"", 'comment_created': datetime.datetime(2021, 3, 15, 16, 34, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': 'fa8cdb88337d16440c36f9ab3bd7178ecc02ace0', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
597345376,Add screenshotapi.net analyzer,"Signed-off-by: Shubham Pandey <shubhampcpandey13@gmail.com>

# Description
This adds a url analyzer SSAPINet which gets a screenshot of a web page from screenshotapi.net. It is a complimentary analyzer to `rendertron` analyzer (internal).

Ref: https://github.com/intelowlproject/IntelOwl/issues/9#issuecomment-801867465

## Related issues
Related to #9 by @mlodic 

## Type of change
- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] If I added a new analyzer, I updated the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md). If the analyzer provides additional optional configuration, I added the available options here: [Advanced-Usage](./Advanced-Usage.md)
- [x] I added new secrets in the files [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/env_file_app_travis) and in the docs: [Installation](./Installation.md)
- [x] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one.

# Real World Example
- `output` param == `image` 
![image](https://user-images.githubusercontent.com/51958314/111882982-95913a80-89de-11eb-849d-21fbadc0cf92.png)
- `output` param == `json` 
![image](https://user-images.githubusercontent.com/51958314/111883012-b9548080-89de-11eb-9f05-f87d95317f1e.png)

Note: This provides flexibility for a param `destroy_screenshot`, from the docs ""If true the screenshot is not stored on our servers. This means that you must download the image because it is only available once after you've called the API.""",True,372,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/372,https://github.com/intelowlproject/IntelOwl/pull/372,closed,104,1,8,1,1,0,0,0,[],2021-03-20 19:23:43+00:00,2021-03-22 15:41:50+00:00,159487.0,"1 day, 20:18:07",[],"[{'commit_sha': '7f37e8fd08825a7779b59b65ae0ad0b2238c4f37', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
615220124,[Fixes #348] Add ThreatFox analyzer,"# Description

This adds [ThreatFox](https://threatfox.abuse.ch/api/) analyzer.

## Related issues
Fixes #348

## Type of change

Please delete options that are not relevant.

- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] If I added a new analyzer, I updated the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md).
- [x] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one.
  
# Real World Example
```json
{""id"":470,""tags"":[],""source"":""admin"",""is_sample"":false,""md5"":""8fe2e6655a85d5006cb33f743d75dc30"",""observable_name"":""139.180.203.104"",""observable_classification"":""ip"",""file_name"":"""",""file_mimetype"":"""",""status"":""reported_without_fails"",""analyzers_requested"":[""ThreatFox""],""run_all_available_analyzers"":false,""analyzers_to_execute"":[""ThreatFox""],""analysis_reports"":[{""name"":""ThreatFox"",""errors"":[],""report"":{""data"":[{""id"":""1337"",""ioc"":""139.180.203.104:443"",""tags"":[""CobaltStrike""],""malware"":""win.cobalt_strike"",""ioc_type"":""ip:port"",""reporter"":""d4rksystem"",""last_seen"":null,""reference"":null,""first_seen"":""2021-01-04 15:22:41 UTC"",""threat_type"":""payload_delivery"",""ioc_type_desc"":""ip:port combination that delivery a malware payload"",""malware_alias"":""Agentemis,BEACON,CobaltStrike"",""malware_samples"":[],""confidence_level"":50,""malware_malpedia"":""https://malpedia.caad.fkie.fraunhofer.de/details/win.cobalt_strike"",""threat_type_desc"":""Indicator that identifies a malware distribution server (payload delivery)"",""malware_printable"":""Cobalt Strike""}],""query_status"":""ok""},""success"":true,""process_time"":1.2841122150421143,""started_time"":1618400735.38396,""started_time_str"":""2021-04-14 11:45:35""}],""received_request_time"":""2021-04-14T11:45:35.209328Z"",""finished_analysis_time"":""2021-04-14T11:45:36.696161Z"",""force_privacy"":false,""disable_external_analyzers"":false,""errors"":[],""runtime_configuration"":{}}
```
",True,414,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/414,https://github.com/intelowlproject/IntelOwl/pull/414,closed,55,0,5,1,2,0,0,0,[],2021-04-14 12:58:27+00:00,2021-04-14 14:02:38+00:00,3851.0,1:04:11,[],"[{'commit_sha': '9b62bb8a1deb44ad17a2474a8940651e59a07c62', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
620282450,Fixes #10: Add Malpedia Analyzer,"# Description
This adds an analyzer to scan a binary or a zip file `(pwd:infected)` against all the yara rules available in Malpedia.

## Related issues
Fixes #10 

## Type of change
- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] If I added a new analyzer, I updated the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md). If the analyzer provides additional optional configuration, I added the available options here: [Advanced-Usage](./Advanced-Usage.md)
- [x] I added new secrets in the files [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/docker/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/docker/env_file_app_ci) and in the docs: [Installation](./Installation.md)
- [x] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)

# Real World Example
Used `test_files.zip` file.

```json
{ ""id"":486, ""tags"":[ ], ""source"":""admin"", ""is_sample"":true, ""md5"":""6b1a8b7221590a7a9afc2e12ebe2b410"", ""observable_name"":"""", ""observable_classification"":"""", ""file_name"":""test_files.zip"", ""file_mimetype"":""application/zip"", ""status"":""reported_without_fails"", ""analyzers_requested"":[ ""Malpedia_Scan"" ], ""run_all_available_analyzers"":false, ""analyzers_to_execute"":[ ""Malpedia_Scan"" ], ""analysis_reports"":[ { ""name"":""Malpedia_Scan"", ""errors"":[ ], ""report"":{ ""file.dll"":{ }, ""file.exe"":{ }, ""file.jse"":{ }, ""page.html"":{ }, ""sample.apk"":{ }, ""document.doc"":{ }, ""document.pdf"":{ }, ""document.rtf"":{ }, ""document.xls"":{ }, ""non_valid_pe.exe"":{ } }, ""success"":true, ""process_time"":11.735009670257568, ""started_time"":1619014061.493967, ""started_time_str"":""2021-04-21 14:07:41"" } ], ""received_request_time"":""2021-04-21T14:07:41.247331Z"", ""finished_analysis_time"":""2021-04-21T14:07:53.257500Z"", ""force_privacy"":false, ""disable_external_analyzers"":false, ""errors"":[ ], ""runtime_configuration"":{ } }
```
",True,425,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/425,https://github.com/intelowlproject/IntelOwl/pull/425,closed,79,0,7,2,1,4,0,0,[],2021-04-21 14:44:49+00:00,2021-04-21 16:40:16+00:00,6927.0,1:55:27,"[{'comment_id': 617638918, 'comment_body': 'I would add the supported mimetypes because the scan should work only for binaries.\r\n\r\n""application/x-dosexec"", ""application/x-executable"", ""application/x-macbinary"", ""application/mac-binary"", ""application/octet-stream""(for shellcodes),\r\n\r\nfor zips: ""application/x-zip-compressed"", ""application/zip""\r\n\r\nIdk if there could be others to use.', 'comment_created': datetime.datetime(2021, 4, 21, 15, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 617639816, 'comment_body': 'is this too much maybe? How much time was necessary to scan the zip you tested?', 'comment_created': datetime.datetime(2021, 4, 21, 15, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 617649644, 'comment_body': 'Hmm, 12 seconds', 'comment_created': datetime.datetime(2021, 4, 21, 15, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 617656201, 'comment_body': 'ok so we could just set this as 30 I guess', 'comment_created': datetime.datetime(2021, 4, 21, 15, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}]","[{'commit_sha': 'a8e5df6c0780a3a1e5cec34bac1da5c7faee5204', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61c1f4a6cbdbe8718c16604f70056a1c9025f637', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
573018556,Add new api to kill ongoing job,"Signed-off-by: Shubham Pandey <shubhampcpandey13@gmail.com>
Fixes #225 by @Eshaan7 

# Description
This PR adds a new API `kill_running_job` which would receive job_id as a parameter and revoke the running celery tasks associated with it. Once this is done, the job's status is set `killed`.

Note: The task ids are stored in cache once the task is set, in `start_analyzers` function.

## Type of change

Please delete options that are not relevant.

- [x] New feature (non-breaking change which adds functionality).
- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [x] The pull request is for the branch develop
- [ ] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [ ] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one.
  
# Real World Example
![image](https://user-images.githubusercontent.com/51958314/107865550-a4d81200-6e8d-11eb-8257-9f69b9ca30ad.png)
Here the job was killed before all the tasks could run.",True,337,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/337,https://github.com/intelowlproject/IntelOwl/pull/337,closed,75,3,5,4,2,9,0,0,[],2021-02-14 00:58:55+00:00,2021-02-15 08:04:17+00:00,111922.0,"1 day, 7:05:22","[{'comment_id': 575775958, 'comment_body': 'I would prefer if this is made as an utility function and kept in general.py as `kill_running_analysis`. ', 'comment_created': datetime.datetime(2021, 2, 14, 8, 49, 2, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 575776425, 'comment_body': 'Change the URL format to `/api/kill_analysis?job_id`', 'comment_created': datetime.datetime(2021, 2, 14, 8, 54, 1, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 575783939, 'comment_body': 'Regarding this permission, would also need to add an entry for `assign_perm(""api_app.change_job"",grp)` in the post_migrate signal handler under signal_handler.py', 'comment_created': datetime.datetime(2021, 2, 14, 9, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 575822220, 'comment_body': ""I'm waiting for the pr on post migrate signal. I'll change this once it's done. For now, I added the entry in the save one."", 'comment_created': datetime.datetime(2021, 2, 14, 15, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 575873693, 'comment_body': 'Imma merge your PR first and make changes accordingly since the tests are failing for the other PR. ', 'comment_created': datetime.datetime(2021, 2, 14, 22, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 575874018, 'comment_body': 'Is there a particular reason why you changed this? The reason for using `send_task` was to avoid cyclic import of `tasks` module. Is it not possible to pass custom `task_id` when using `send_task`? ', 'comment_created': datetime.datetime(2021, 2, 14, 22, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 575923610, 'comment_body': ""`apply_async` provides an argument to set task id, all examples I saw were using it. \r\nBut it actually calls `send_task` under the hood. So yes, it should be possible to continue using it.\r\nhttps://github.com/celery/celery/blob/a5357cab8aa80ff701a1970f55dc1e1083a161f5/celery/app/task.py#L561-L566\r\n\r\nAlso, I'll change it to import from the `app` instead of `execute` module.\r\nRef: https://docs.celeryproject.org/en/v4.4.7/internals/deprecation.html#modules-to-remove"", 'comment_created': datetime.datetime(2021, 2, 15, 3, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 575927661, 'comment_body': 'This can be resolved.', 'comment_created': datetime.datetime(2021, 2, 15, 3, 44, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 575927809, 'comment_body': 'This can be resolved as well.', 'comment_created': datetime.datetime(2021, 2, 15, 3, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': '81efc042bd18d4ac147e2dc89a88e05f18aa0e67', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c76107372dd5d38113478ba85d7783070bee5e13', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bf5592259c884752a17f745e144065075309eef', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa193e73646ddcae2ed71471d2a545d120099006', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
574342114,chore: change url format for kill job to jobs/{job_id}/kill,"# Description
This modifies the `kill api view` to use `@action` decorator under `JobViewSet`.
The URL would change to ` /api/jobs/{job_id}/kill`  from `/api/kill_running_analysis?job_id`.
Asked by @Eshaan7 

## Related issues
#225

# Checklist

- [x] The pull request is for the branch develop.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one.
",True,339,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/339,https://github.com/intelowlproject/IntelOwl/pull/339,closed,49,52,2,1,0,2,0,0,[],2021-02-16 17:04:16+00:00,2021-02-17 14:28:37+00:00,77061.0,21:24:21,"[{'comment_id': 576999215, 'comment_body': ""Shouldn't it be `detail=False`? We do not want this action to be available to collections /lists."", 'comment_created': datetime.datetime(2021, 2, 16, 17, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 577004442, 'comment_body': 'It should be `True`.\r\nIf `detail=True` the router will return a single object, `detail=False` will return a list of objects.', 'comment_created': datetime.datetime(2021, 2, 16, 17, 29, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': '4785b1e8a139b2e3b4e7f12dad1c0f375052b7c6', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
573729968,add kill running job api + cmd,"Signed-off-by: Shubham Pandey <shubhampcpandey13@gmail.com>
Fixes #67 by @Eshaan7

# Description
This adds the function and cmd for the new `kill_running_analysis` API added in [IntelOwl #337](https://github.com/intelowlproject/IntelOwl/pull/337)
 
## Type of change
- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one.
  
# Real World Example
![image](https://user-images.githubusercontent.com/51958314/107981778-c6014580-6fe8-11eb-89fc-55d7f0192f73.png)

",True,68,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/68,https://github.com/intelowlproject/pyintelowl/pull/68,closed,59,1,3,1,2,14,0,0,[],2021-02-15 18:26:43+00:00,2021-02-16 17:52:33+00:00,84350.0,23:25:50,"[{'comment_id': 576367131, 'comment_body': 'We should choose different emojis I think. For killed and failed.', 'comment_created': datetime.datetime(2021, 2, 15, 18, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 576367308, 'comment_body': 'Should probably be emphasized with some underline/bold. ', 'comment_created': datetime.datetime(2021, 2, 15, 18, 29, 46, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 576368749, 'comment_body': ""Well actually I don't think there are any suitable emoji. So this can be left as is. "", 'comment_created': datetime.datetime(2021, 2, 15, 18, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 576369402, 'comment_body': ""And we should display 'not killed' too, in case `ans` is false."", 'comment_created': datetime.datetime(2021, 2, 15, 18, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 576369700, 'comment_body': 'So when it successfully gets killed, render it with green color as a representation of success and when it doesn\'t get killed for whatever reason render ""Failed to kill"" with red color. ', 'comment_created': datetime.datetime(2021, 2, 15, 18, 36, 27, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 576373350, 'comment_body': ""Actually `ans` is true only when `STATUS 200`. `IntelOwlClientException` would be raised in the other case, so it won't reach here. A refactor would be needed"", 'comment_created': datetime.datetime(2021, 2, 15, 18, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 576380077, 'comment_body': 'I just saw I pushed the commit without that exception being raised. I think I should look for a way to raise the exception as well show the text `Failed to kill`, then.', 'comment_created': datetime.datetime(2021, 2, 15, 19, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 576381942, 'comment_body': 'I can return the exception from `kill_running_job` and raise it once I display the text.', 'comment_created': datetime.datetime(2021, 2, 15, 19, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 576391591, 'comment_body': '![image](https://user-images.githubusercontent.com/51958314/107987320-ca7f2b80-6ff3-11eb-9777-b7a54d3e935a.png)\r\n', 'comment_created': datetime.datetime(2021, 2, 15, 19, 37, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 576392206, 'comment_body': 'This seems fine I guess.', 'comment_created': datetime.datetime(2021, 2, 15, 19, 39, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 576465491, 'comment_body': '> I can return the exception from `kill_running_job` and raise it once I display the text.\n\nNo, can\'t do that. This will be hard to understand/handle for the users using pyintelowl as a library. You can keep the class member function same as before and just `rprint(""Failed to kill"")` in the except block of cmd function before the logger.fatal statement.', 'comment_created': datetime.datetime(2021, 2, 15, 23, 16, 6, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 576474571, 'comment_body': 'Hmm, my bad.', 'comment_created': datetime.datetime(2021, 2, 15, 23, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 577000775, 'comment_body': 'Replace this with new', 'comment_created': datetime.datetime(2021, 2, 16, 17, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 577000847, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2021, 2, 16, 17, 24, 15, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': 'afa361d0f167fa70f59b2440dcf1b8992a1aee22', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
574626000,(fixes #64) - add delete_job_by_id func + cmd,"Signed-off-by: Shubham Pandey <shubhampcpandey13@gmail.com>
Fixes #64 by @Eshaan7

# Description
This adds the function and cmd for the new `delete job` API added in [IntelOwl #335](https://github.com/intelowlproject/IntelOwl/pull/335)
 
## Type of change
- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one.
  
# Real World Example
![image](https://user-images.githubusercontent.com/51958314/108154542-17055c80-7103-11eb-8763-fe0ec884553d.png)


",True,71,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/71,https://github.com/intelowlproject/pyintelowl/pull/71,closed,48,6,3,1,0,0,0,0,[],2021-02-17 04:03:42+00:00,2021-02-17 04:23:11+00:00,1169.0,0:19:29,[],"[{'commit_sha': 'c961c58e9355bc4d74db766e6acedfa706222ec3', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
607995621,[Fixes #82] Add image visualizer component,"This adds a component for the display of an image result  - either base64 or from a URL.

Fixes #82

## Output

###  1. Initial
<img height=""500"" width=""500"" src=""https://user-images.githubusercontent.com/51958314/113413949-71b7f680-93d9-11eb-8213-391b48748bd5.png"" />

### 2. After (type - URL)
<img height=""500"" width=""500"" src=""https://user-images.githubusercontent.com/51958314/113414077-bc397300-93d9-11eb-9581-3c67292b4643.png"" />

### 3. Base64 Image
<img height=""500"" width=""500"" src=""https://user-images.githubusercontent.com/51958314/113413962-7aa8c800-93d9-11eb-8740-007ece962059.png"" />
",True,88,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/88,https://github.com/intelowlproject/IntelOwl-ng/pull/88,closed,53,0,5,2,3,1,0,0,[],2021-04-02 11:59:45+00:00,2021-04-03 11:31:18+00:00,84693.0,23:31:33,"[{'comment_id': 606236142, 'comment_body': 'using the `Object.prototype.hasOwnProperty` to check for key would be a more ""javascript"" approach, I believe.', 'comment_created': datetime.datetime(2021, 4, 2, 13, 25, 49, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': 'dc8e2414dc16285868be163bf2677ea2229e1d9f', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '520b8ad1eb467f5ac54a507fbb313a3d64d4b129', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
611777991,[Fixes #81] Add new component for social links,"Fixes #81 
This creates a new component to separate the social links from the login component.

- [x] PR targets develop branch",True,91,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/91,https://github.com/intelowlproject/IntelOwl-ng/pull/91,closed,67,56,7,5,1,5,0,0,[],2021-04-08 18:28:24+00:00,2021-04-13 06:27:11+00:00,388727.0,"4 days, 11:58:47","[{'comment_id': 610503179, 'comment_body': 'no need for the `onInit` interface.', 'comment_created': datetime.datetime(2021, 4, 9, 9, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 610503407, 'comment_body': 'remove this after removing the `onInit` interface.', 'comment_created': datetime.datetime(2021, 4, 9, 9, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 611202839, 'comment_body': ""can you just remove the `-component` from the name everywhere ? didn't notice it before but is pretty redundant."", 'comment_created': datetime.datetime(2021, 4, 11, 15, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 611202903, 'comment_body': 'should be `SocialLinksComponent`.', 'comment_created': datetime.datetime(2021, 4, 11, 15, 12, 41, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 611207912, 'comment_body': 'My bad, it does look weird, I created the component with that name.\r\n', 'comment_created': datetime.datetime(2021, 4, 11, 15, 49, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': 'e84d42ce4ff2388cb05edab906687fd6011804af', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0260cf70d74924aff520b54360bfdcea07f0dae4', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a623cfb1103d0175d74e6299900c9f431084a9db', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b1f6edef9cd66ebde250dd3bd768db1fa3a013d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a190d18d8a782298f855fe0148d375308d37ad04', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
675090407,Initialize Connectors Manager sub app,"# Description
- [x] Add `connectors_manager` sub app
- [x] Add config file and verification
- [x] Cache the verified json
- [x] Validate keys of `secrets` in serializer
- [x] Add connector report serializer 

## Related issues
#397

## Type of change

- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)
",True,499,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/499,https://github.com/intelowlproject/IntelOwl/pull/499,closed,519,11,23,17,1,22,0,0,[],2021-06-22 05:32:24+00:00,2021-07-01 14:54:11+00:00,811307.0,"9 days, 9:21:47","[{'comment_id': 655888281, 'comment_body': '```suggestion\n    status = models.CharField(max_length=50, choices=STATUS_CHOICES)\n```\n\n`False` is the default value Django uses for `blank`, so `blank=False` can be removed.', 'comment_created': datetime.datetime(2021, 6, 22, 5, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}, {'comment_id': 655889053, 'comment_body': '`False` is the default value Django uses for `blank`, so `blank=False` can be removed.', 'comment_created': datetime.datetime(2021, 6, 22, 5, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}, {'comment_id': 656033181, 'comment_body': ""What is this field for? I didn't really understand `SerializerMethodField` and what it does..."", 'comment_created': datetime.datetime(2021, 6, 22, 9, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 656058074, 'comment_body': 'Can we do this using `Viewsets`? If so, any particular reason of choosing one over the other for our usecase?', 'comment_created': datetime.datetime(2021, 6, 22, 9, 47, 11, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 656100066, 'comment_body': 'https://www.django-rest-framework.org/api-guide/fields/#serializermethodfield', 'comment_created': datetime.datetime(2021, 6, 22, 10, 45, 41, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 656102779, 'comment_body': ""We use viewsets when we have corresponding models using which we can define a `queryset`. But since we don't have model for Connector, we use a generic view.\n\n- In a viewset, you define methods like `create`, `list`, `destroy` which corresponds to the HTTP methods `POST`, `GET`, `DELETE` respectively. These are direct operations on the defined queryset and model. (mostly you don't have to define these methods yourself because DRF takes care of it)\n- In a view class, you can define methods like `get`, `post` etc. which correspond to the HTTP methods of same name. This is useful when you wish to define a custom view with custom logic that does not necessarily depend on a model/queryset.\n\nFor further clarification, please refer to the DRF docs, they are pretty well written."", 'comment_created': datetime.datetime(2021, 6, 22, 10, 49, 57, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 656105161, 'comment_body': ""Basically `verification` will be populated by calling the `get_verification(self, obj)` method. So it's a  dynamic field that gets it value from a function call."", 'comment_created': datetime.datetime(2021, 6, 22, 10, 53, 31, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 656192718, 'comment_body': 'the `if` is not necessary,', 'comment_created': datetime.datetime(2021, 6, 22, 12, 55, 53, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 656196391, 'comment_body': 'instead of `cache.get` or `cache.set` use the `@cache_memoize` decorator from https://github.com/peterbe/django-cache-memoize. The package is already included in IntelOwl.', 'comment_created': datetime.datetime(2021, 6, 22, 13, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 656197066, 'comment_body': 'I prefer relative paths over absolute paths: `from .serializers import ConnectorConfigSerializer`.', 'comment_created': datetime.datetime(2021, 6, 22, 13, 0, 47, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 656200927, 'comment_body': 'what if you pass the data to the serializer like: \r\n\r\n```python3\r\ndata=[{""key_name"": key, **secret_dict} for key, secret_dict in secrets.items()] # list comprehension + spread operator\r\n``` \r\n\r\nThis way you are passing to it a `dict` only and not a `tuple`.', 'comment_created': datetime.datetime(2021, 6, 22, 13, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 656201931, 'comment_body': 'if done this way: https://github.com/intelowlproject/IntelOwl/pull/499/commits/d9b1872e344d58f76c454106af7fbffe1498d2dc#r656200927\r\n\r\nthen no need for handling tuple.', 'comment_created': datetime.datetime(2021, 6, 22, 13, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 656203688, 'comment_body': 'on line 79, the code is:\r\n\r\n```python3\r\nif ""required"" in secret_dict and secret_dict[""required""]:\r\n```\r\n\r\na clean and short way to achieve this would be:\r\n\r\n```python3\r\nif secret_dict,get(""required"", False):\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 13, 8, 43, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 656206057, 'comment_body': ""I'd prefer this method to be under the `ConnectorConfigSerializer` as a `@classmethod` with name `read_and_verify_config`. Then we can do something like: `ConnectorConfigSerializer.read_and_verify_config()`; \r\n\r\nI mean, it's just better to keep related code together in one class."", 'comment_created': datetime.datetime(2021, 6, 22, 13, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657776550, 'comment_body': ""This is buggy. You cannot mix `cache_memoize` and `cache.set` like this. What u should do is not return a tuple of (success, config) instead raise `ValidationError` inside `read_and_verify_config` if verification failed. `cache_memoize` won't cache exceptions so the result will be cached only if were successful."", 'comment_created': datetime.datetime(2021, 6, 24, 9, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657777524, 'comment_body': 'raise `rfs.ValidationError(serializer_errors)`.', 'comment_created': datetime.datetime(2021, 6, 24, 9, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657779601, 'comment_body': 'I removed that in the last commit.\r\n\r\nThat seems right.', 'comment_created': datetime.datetime(2021, 6, 24, 9, 21, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 657801184, 'comment_body': 'This will raise 400 on errors and the table would stay empty.\r\nTODO: Handle on UI with something like ""There are some errors in the configuration file""', 'comment_created': datetime.datetime(2021, 6, 24, 9, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 657814911, 'comment_body': 'To be changed to the new format when `AnalyzerReport` is up (since UI breaks now)', 'comment_created': datetime.datetime(2021, 6, 24, 10, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 661348500, 'comment_body': '```suggestion\n    operations = [migrations.RunPython(create_default_clients, migrations.RunPython.noop)]\n```\n\nUnless a `reverse_code` function is provided then the migration cannot be ran backwards. Django will throw an error if you try. This complicates rolling back production to the previous version of the app.\n\nSolve this by either explicit writing a function that undoes the `fowards` mutations, or simply do `migrations.RunPython(create_default_clients, migrations.RunPython.noop)`.', 'comment_created': datetime.datetime(2021, 6, 30, 10, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}, {'comment_id': 661355784, 'comment_body': '@Eshaan7 thoughts?', 'comment_created': datetime.datetime(2021, 6, 30, 11, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 661381148, 'comment_body': 'I think it can be safely ignored.', 'comment_created': datetime.datetime(2021, 6, 30, 11, 40, 21, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': '709b9f8a873390e133fa979fa447bde1cd277920', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71db188a37fe90ab250b1e712123f38101b76cc4', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '865ea1b71bbe78566fd97058dfb67a47b2feafca', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9b1872e344d58f76c454106af7fbffe1498d2dc', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a10295fd50c2b5bee5575cd8d46d845e9fd8903', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96ac2b13959807fb911bda564db5572482c40626', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33319b45015f706e8781ffe22fc05274c1814b40', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f93b7d0ac67e5fbd595d1405ee34a691f4535a65', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc6dddc0f29238224d684d4b6207774c0e050629', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00650826620fcf0a3b38c814802adb600b4989ed', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1fb5c77db78a4725d7fbe9ea0db4bfdaacb20ef', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '014f6bb3c04d19865659681b97be10c883be79d5', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ed4b032c0f662f3315062160a316c10c8e06a6a', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6e57f67113743ba9ed99a9595fce8386683a3d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3b7e2999a262587e65d9fc2e861633483602346', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de949a7b88ea36d29e25eb27853b6e8d65e3e25d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7543aad07af79fa5b5c9f477f1f2d483edc8db79', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
683011711,chore: refactor common code in sub-apps | greedy cache configs,"# Description

This overrides AppConfig.ready in subapps to cache configs before server starts

## Type of change

Please delete options that are not relevant.

- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop-2
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [x] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)
",True,518,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/518,https://github.com/intelowlproject/IntelOwl/pull/518,closed,263,314,12,7,1,3,0,0,[],2021-07-03 11:38:12+00:00,2021-07-05 16:49:05+00:00,191453.0,"2 days, 5:10:53","[{'comment_id': 664020230, 'comment_body': 'According to Django internal style guide, `status` should come before `Meta`.', 'comment_created': datetime.datetime(2021, 7, 5, 15, 45, 2, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}, {'comment_id': 664020232, 'comment_body': 'As above, `errors` should come before `Meta`.', 'comment_created': datetime.datetime(2021, 7, 5, 15, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}, {'comment_id': 664020233, 'comment_body': 'Same as above: `errors` should come before `Meta`.', 'comment_created': datetime.datetime(2021, 7, 5, 15, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}]","[{'commit_sha': '3c6c701084dc7fad3040bdec11ac62cdcccb8bf9', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17b79017cb4b7b4cf5bd64cab1f0471f80d4372c', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36e716eef5f6adb71a66ccb5df6c66291632d3b6', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b35ec8c55a674da98980ebca0b488fbd7bb18ae', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97a2296e5bb44ee15903dace5ca67b3d947169c6', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc775f891d0fe975f35ac82c904cd1ece9a229d2', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00138170a167ee5f7ad5bc285e58917c4cc79616', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
684721318,"`Plugin`, `Connector`, controllers,  dataclasses, tons of refactoring","# Description
- [x] Refactor `BaseAnalyzerMixin` for reuse
- [x] Add base class `BaseConnectorMixin` `and Connector`
- [x] Add celery tasks to trigger connectors
- [x] Fix in `ConnectorReport` model
- [x] Add no of connectors called and connectors process time
- [X] Address issues and refactor 
- [X] Move `runtime_configuration` field
- [x] Fix Analyzer Subclasses

## Related issues
Fixes #512 

## Type of change

- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [x] The pull request is for the branch develop
- [ ] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [ ] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)",True,524,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/524,https://github.com/intelowlproject/IntelOwl/pull/524,closed,1966,2455,114,46,2,11,0,2,[],2021-07-06 22:34:14+00:00,2021-07-13 17:49:44+00:00,587730.0,"6 days, 19:15:30","[{'comment_id': 667504863, 'comment_body': 'This should be inside an `if/else` because we only want to set this header if the `api_key` is not `None`.', 'comment_created': datetime.datetime(2021, 7, 11, 16, 24, 22, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 667504930, 'comment_body': 'It should be `params.get`', 'comment_created': datetime.datetime(2021, 7, 11, 16, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 667505456, 'comment_body': '`if self.observable_classification == ""url"":`\r\n\r\ninstead of hardcoding `""url""` string, use `AnalyzerConfigSerializer.ObservableTypes.URL`', 'comment_created': datetime.datetime(2021, 7, 11, 16, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 667505682, 'comment_body': ""`self.__api_key` so it's private."", 'comment_created': datetime.datetime(2021, 7, 11, 16, 31, 14, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 667505756, 'comment_body': ""`self.__api_key` so it's private."", 'comment_created': datetime.datetime(2021, 7, 11, 16, 31, 40, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 667506434, 'comment_body': 'replace `config_dict[""run_hash""]` with `config_dict.get(""run_hash"", False)`', 'comment_created': datetime.datetime(2021, 7, 11, 16, 37, 12, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 667944171, 'comment_body': 'Instead of importing this here, use `self._serializer.ObservableTypes`', 'comment_created': datetime.datetime(2021, 7, 12, 13, 45, 38, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 668067458, 'comment_body': 'not working now because job status is still `running` here', 'comment_created': datetime.datetime(2021, 7, 12, 16, 10, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 668075410, 'comment_body': 'I guess because `_job` is a cached property', 'comment_created': datetime.datetime(2021, 7, 12, 16, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 668986107, 'comment_body': 'According to Django internal style guide, `connector` should come before `Meta`.', 'comment_created': datetime.datetime(2021, 7, 13, 17, 49, 43, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}, {'comment_id': 668986109, 'comment_body': 'According to Django internal style guide, `__str__` should come before `append_error`.', 'comment_created': datetime.datetime(2021, 7, 13, 17, 49, 43, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}]","[{'commit_sha': 'a1b3b59d078e4df5ef7b480a44b99d6ab6270921', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dd57cf195a89fa90d7911911aaa8bc158a845be', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1b8849c72ce54b28ddf1faeede9efa255ff8c94', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a40b7896e056288bec0483ba134667084094277', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e723dad128bfe2f9d6f0fcf3ed0f306965843657', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '064812a7ed090d53c213880232619bf3117be261', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90262b048df379f50352fda31ba07448d58888d3', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b781b37fc64e2a11d8e371198db73067797641a3', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd5d484c61b7b7544aca36712c57679c93ab38a5', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9e0e142aaef340fceba8d827cae9f255846b251', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8e08d8a4b8309b075395e9e31dc4c9d63b9b01f', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7eb3fea7e99f1bd89d6590d0c84c883ae098a093', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94f60eba76d3b9ddbf1bf417df0310dbb839fe2b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b7bd6ec746c87fb1629d265e596838ecb565286', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e33afa0336ca6361276618d358ab695554b2bcab', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '450d46b8851b1a5082d1b75b0fb7b4b6e33d5af9', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f404feced707e52cf503176ee63620d2c26fccd', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec540feed3b8a0c6ad8a90c12fba2b6f69304098', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a2721cda4d6c1a663e64ee74b1c79e5220a6d33', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad787b6fb38d128f100fb72e42b355d926ea5b0b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b79907cf778082e4e231364cc67b90f4b23b35b', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '807b2b8bb7f7dd43df80bb5e8d4495c52605320a', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93ef85bd9d08c68c86c49e74ef1de80496b56809', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa51209fb08e85f43772f28aa93cb85d0a00a71d', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d057b1507bda054cddc50f0fc0a339b44105d54', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a02295df037638600510f6992427c2160cc51dc', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e9b66f0611cad73b43fa7ffb3aa96bb44ee48a7', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2587e7eabd4ae9d09e58fcaff0b3c594f39dcc79', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c545d9e2ed89e5aaf97b97a5a05118815469e5fa', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5263ee99b6c3acda393c4718cdfd7b2e43955b53', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99908203ca3c418ccd25eb746a655b7445b5dc7b', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fe7a0eb8b264d242b513f8b8564ad764a7acf2f', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee468ad2abcdaa4a546089996e980224a179390b', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f9cd480564299468c80818ab07b23d102c03b37', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8aad3c2ccd406ee9ca317acd1421741c8e2948e7', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60e2560222393d69ffb466a7630f1cc9f8156578', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da1c4a2f670cb3ec34b7d08400cd0b16947914f6', 'committer_username': 'm0mosenpai', 'committer_name': 'Sarthak Khattar', 'committer_email': 'sarthakoct@gmail.com', 'commit_date': datetime.datetime(2016, 2, 23, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3b1767c79b1768c69a5ec2563715cd84b2d5f27', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aab76b0cd5da01529e00602727e52ae008faecb6', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9042261273f92ea6c28578176967a7bc62f1ccc1', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9739307560afd73e4b6ddbef82bbcee4863f61fb', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1ea7860311687b670c99ffe8e63486add39a745', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aea2f4973bfcd2433d3dfda0e83040e0793feb10', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b25b000691a5fe2655a631851ec58e83bd980951', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69e611c61b0e3653dea0f67744faff78dd0edccc', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b388e5895e5b9f4163289fcf0895c060899107b7', 'committer_username': 'eshaan7', 'committer_name': 'Eshaan Bansal', 'committer_email': 'eshaan7bansal@gmail.com', 'commit_date': datetime.datetime(2015, 12, 21, 18, 29, 8, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
689630517,"chore: `ConnectorConfig` dataclass, refactor enums","# Description
This adds `ConnectorConfig` dataclass and will replace dicts with the dataclasses added.

## Related issues
Fixes #529 

## Type of change

- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [x] The pull request is for the branch develop
- [ ] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [ ] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)
",True,530,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/530,https://github.com/intelowlproject/IntelOwl/pull/530,closed,52,30,6,3,1,2,0,0,[],2021-07-14 06:39:20+00:00,2021-07-14 08:23:20+00:00,6240.0,1:44:00,"[{'comment_id': 669334363, 'comment_body': 'Could you rename this to like `BaseEnum`? Including ""Analyzer"" in its name is kinda confusing. ', 'comment_created': datetime.datetime(2021, 7, 14, 6, 43, 31, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 669334908, 'comment_body': ""There's a `AbstractConfig.is_ready_to_use` shorthand method for this."", 'comment_created': datetime.datetime(2021, 7, 14, 6, 44, 33, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': '642443e284bc224b48ef4a1442f18b8528cd06da', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cba2dc054a849743df37583c87aa8f0893567d2d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4effbfa2081d48b79c21942859127374b164bb6b', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
691031986,Fixes #539: Update Plugin and subclasses to use dataclasses,"Fixes #539 

## Type of change
- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [x] The pull request is for the branch develop
- [ ] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [ ] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)",True,544,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/544,https://github.com/intelowlproject/IntelOwl/pull/544,closed,97,163,32,2,0,0,0,0,[],2021-07-15 20:59:36+00:00,2021-07-19 08:12:07+00:00,299551.0,"3 days, 11:12:31",[],"[{'commit_sha': 'b848cc7c3bbbce8937d90865517c60da67789f52', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88bdbe11bc60f878bd0d664d2fbf6e380cc194ab', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
688257939,Fixes #12: Add MISP Connector,"# Description
This connector creates an event and attribute on provided MISP instance after a job analysis finished.

- [x] Docs work to be handled in #562 

## Related issues
Fixes #12 

## Type of change

- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)

# Real World Example
```json
{""Event"": {""id"": ""60"", ""Org"": {""id"": ""1"", ""name"": ""ORGNAME"", ""uuid"": ""9d522381-861e-46a2-838c-62023b538793"", ""local"": true}, ""Tag"": [{""id"": ""9"", ""name"": ""source:intelowl"", ""local"": 0, ""colour"": ""#6627b1"", ""user_id"": ""0"", ""hide_tag"": false, ""is_galaxy"": false, ""exportable"": true, ""numerical_value"": null, ""is_custom_galaxy"": false}, {""id"": ""1"", ""name"": ""tlp:white"", ""local"": 0, ""colour"": ""#e80866"", ""user_id"": ""0"", ""hide_tag"": false, ""is_galaxy"": false, ""exportable"": true, ""numerical_value"": null, ""is_custom_galaxy"": false}], ""Orgc"": {""id"": ""1"", ""name"": ""ORGNAME"", ""uuid"": ""9d522381-861e-46a2-838c-62023b538793"", ""local"": true}, ""date"": ""2021-07-14"", ""info"": ""Intelowl Job-60: file.html|12c0f7cc05cbae1475bf6c0caaa1ac70"", ""uuid"": ""371cd335-8cfd-47fb-a1b2-baca0a1c0c49"", ""Galaxy"": [], ""Object"": [], ""locked"": false, ""org_id"": ""1"", ""orgc_id"": ""1"", ""analysis"": ""2"", ""Attribute"": [{""id"": ""86"", ""type"": ""filename|md5"", ""uuid"": ""37df934f-d2f4-4cad-9361-00291925a04c"", ""value"": ""file.html|12c0f7cc05cbae1475bf6c0caaa1ac70"", ""Galaxy"": [], ""to_ids"": true, ""comment"": ""Analyzers Executed: ['File_Info']"", ""deleted"": false, ""category"": ""Payload delivery"", ""event_id"": ""60"", ""last_seen"": null, ""object_id"": ""0"", ""timestamp"": ""1626268307"", ""first_seen"": null, ""distribution"": ""5"", ""ShadowAttribute"": [], ""object_relation"": null, ""sharing_group_id"": ""0"", ""disable_correlation"": false}, {""id"": ""87"", ""type"": ""mime-type"", ""uuid"": ""b47ee9f1-7e65-4e06-a288-d4b4a7b06c8d"", ""value"": ""text/html"", ""Galaxy"": [], ""to_ids"": false, ""comment"": """", ""deleted"": false, ""category"": ""Artifacts dropped"", ""event_id"": ""60"", ""last_seen"": null, ""object_id"": ""0"", ""timestamp"": ""1626268307"", ""first_seen"": null, ""distribution"": ""5"", ""ShadowAttribute"": [], ""object_relation"": null, ""sharing_group_id"": ""0"", ""disable_correlation"": false}, {""id"": ""88"", ""type"": ""link"", ""uuid"": ""3f78e608-565e-4c4e-b4f2-4992e4e2f35a"", ""value"": ""http://localhost/pages/scan/result/60"", ""Galaxy"": [], ""to_ids"": false, ""comment"": ""View Analysis on IntelOwl"", ""deleted"": false, ""category"": ""External analysis"", ""event_id"": ""60"", ""last_seen"": null, ""object_id"": ""0"", ""timestamp"": ""1626268307"", ""first_seen"": null, ""distribution"": ""5"", ""ShadowAttribute"": [], ""object_relation"": null, ""sharing_group_id"": ""0"", ""disable_correlation"": true}], ""published"": false, ""timestamp"": ""1626268307"", ""EventReport"": [], ""RelatedEvent"": [{""Event"": {""id"": ""59"", ""Org"": {""id"": ""1"", ""name"": ""ORGNAME"", ""uuid"": ""9d522381-861e-46a2-838c-62023b538793""}, ""Orgc"": {""id"": ""1"", ""name"": ""ORGNAME"", ""uuid"": ""9d522381-861e-46a2-838c-62023b538793""}, ""date"": ""2021-07-14"", ""info"": ""Intelowl Job-59: file.html|12c0f7cc05cbae1475bf6c0caaa1ac70"", ""uuid"": ""9cd59957-bcc3-4468-9eb1-d0cef5d78226"", ""org_id"": ""1"", ""orgc_id"": ""1"", ""analysis"": ""2"", ""published"": false, ""timestamp"": ""1626267670"", ""distribution"": ""0"", ""threat_level_id"": ""4""}}], ""distribution"": ""0"", ""extends_uuid"": """", ""ShadowAttribute"": [], ""attribute_count"": ""3"", ""threat_level_id"": ""4"", ""sharing_group_id"": ""0"", ""publish_timestamp"": ""0"", ""disable_correlation"": false, ""event_creator_email"": ""admin@admin.test"", ""proposal_email_lock"": false}}
```
<details>
      <summary>Click to expand</summary>
<img src=""https://user-images.githubusercontent.com/51958314/125629041-09328bf7-dff3-4ca3-9287-1d737e095e8c.png"" />

</details>",True,528,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/528,https://github.com/intelowlproject/IntelOwl/pull/528,closed,188,3,6,11,0,10,0,1,[],2021-07-12 23:38:48+00:00,2021-07-26 15:56:10+00:00,1181842.0,"13 days, 16:17:22","[{'comment_id': 668988156, 'comment_body': 'use absolute import. `from api_app.blah blah import Connector`', 'comment_created': datetime.datetime(2021, 7, 13, 17, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 669453266, 'comment_body': 'TODO', 'comment_created': datetime.datetime(2021, 7, 14, 9, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 669476539, 'comment_body': 'for the files, maybe it is better to use the attribute `filename|md5`. Otherwise we could add an additional attribute for the `md5` too.\r\n\r\nAlso, for the mimetype, we could add a separated attribute `mime-type`\r\n\r\nSee: https://www.circl.lu/doc/misp/categories-and-types/\r\n', 'comment_created': datetime.datetime(2021, 7, 14, 10, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 669609348, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 14, 13, 21, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 675331745, 'comment_body': 'I can\'t do much about this, does it make sense to ask for it in the config?\r\n\r\n```\r\n...\r\nconfig: {\r\n    ...\r\n    ""intelowl_instance_url"": ""http://myintelowl.com""\r\n}\r\n\r\n\r\n```', 'comment_created': datetime.datetime(2021, 7, 23, 6, 23, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 675363395, 'comment_body': 'Considering that this is more a ""project"" config rather than a ""connector"" config, could it make sense to add that value as a variable in `settings.py` and extract the configuration from the `env_file_app` if set? \r\nThen we could set a default like ""localhost"" if it is not set\r\n\r\nIn this way we could use that info in other parts of the project in the future maybe', 'comment_created': datetime.datetime(2021, 7, 23, 7, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 675458159, 'comment_body': ""Yep, that's better, should have thought of that."", 'comment_created': datetime.datetime(2021, 7, 23, 10, 13, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 675534110, 'comment_body': 'In this function, having 2 different `return` code is not a particular problem because the function is short and we all get what is happening.\r\n\r\nAnyway, it would be cleaner to just use `return` only a single time in the code. In this way it is easier to read by other programmers because there is no hidden behavior that could led to return the function before expected.\r\n\r\nSo, in this case, you can just use a variable, change it when you find a match and then return that variable only a single time at the end of the code.', 'comment_created': datetime.datetime(2021, 7, 23, 12, 41, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 675534147, 'comment_body': 'to avoid to have 0 coverage for this code, is it possible to try to make a more advanced patching?\r\n\r\nyou can see as an example how we patched the MWdb library [here](https://github.com/intelowlproject/IntelOwl/blob/develop-2/api_app/analyzers_manager/file_analyzers/mwdb_scan.py#L18)\r\n\r\nIs it enough to just set the attributes and methods required by our code. In this way all the logic unrelated to the library pymisp would be correctly tested.', 'comment_created': datetime.datetime(2021, 7, 23, 12, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 675648443, 'comment_body': ""done, I've added a mock class only for the methods which connect with the instance."", 'comment_created': datetime.datetime(2021, 7, 23, 15, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': '32e6179f3ff4782d8e91c1ab36a2291321c8f579', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad48af49bc554953b00d72f77d9eb29a732ec1eb', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8fa296f75e4fb7f9062d83a768c2c579a4c4ebd', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b31f5e462aef4684d6f55cb15c3f47338beeb376', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '210d812f15c23c4b51aa94c1c0f2ecc87f9eb310', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '376c69d6aadc269f3e97331e61e5d67367677cd7', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4b8da7a10576646ce9758c3e4083c1c7868a804', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75fe48bc332e88c606f2e39df33b72c1b490e9b4', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8e0eb000cc4830a03a07543f7086307fe7e3f60', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98dedc82c124a19d07af170664676a613f8fc823', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '825fd461eb66df47a0e698827b6603e6e20cf46f', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
700774539,Fixes: #11 Add OpenCTI connector,"# Description
This adds a connector for OpenCTI. It creates a report and an observable from the job data on a connected OpenCTI instance.

- [x] Docs work to be handled in #562 

Notes
- `requests` was downgraded to `2.25.1` for `pycti==4.5.5`
- IP validation on GUI doesn't allow `IPv6` addresses. 

## Related issues
#11 

## Type of change

- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] If I added external libraries/packages that use restrictive licenses, please add them in the [ReadMe - Legal Notice](https://github.com/certego/IntelOwl/blob/master/README.md) section
- [x] I added new secrets in the files [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/docker/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/docker/env_file_app_ci) and in the docs: [Installation](./Installation.md)
- [x] I have added tests 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)


# Real World Example
<details>
      <summary>Click to expand</summary>
<img src=""https://user-images.githubusercontent.com/51958314/127753401-ad10cee3-b16c-4616-84b1-7c7573881328.png"" />
<img src=""https://user-images.githubusercontent.com/51958314/127753404-f998e90d-56db-4353-9cf2-eb16fa70e249.png"" />
<img src=""https://user-images.githubusercontent.com/51958314/128049987-f63abbd6-c629-4338-bf52-8abde7efd241.png"" />
</details>",True,602,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/602,https://github.com/intelowlproject/IntelOwl/pull/602,closed,264,4,5,10,5,30,0,0,[],2021-07-31 22:12:09+00:00,2021-08-06 10:56:22+00:00,477853.0,"5 days, 12:44:13","[{'comment_id': 680744965, 'comment_body': 'just a nitpick but: line 9, use absolute import.', 'comment_created': datetime.datetime(2021, 8, 2, 7, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 681724892, 'comment_body': 'is there any chance to avoid the call of this creation every time we execute this connector? I mean, this should be executed only once.', 'comment_created': datetime.datetime(2021, 8, 3, 12, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 681726155, 'comment_body': 'is it possible to use f-format here? \r\n\r\nAnyway, should not this be executed only once like the Organization creation?', 'comment_created': datetime.datetime(2021, 8, 3, 12, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 681728540, 'comment_body': 'could we format the string to be more ""readable""? I mean, for an end user there is no need to see the brackets and the quotes. Something like ""analyzer1, analyzer2"" would be more clear', 'comment_created': datetime.datetime(2021, 8, 3, 12, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 681729443, 'comment_body': 'is it possible to add as ""opencti labels"" the tags of the IntelOwl report?', 'comment_created': datetime.datetime(2021, 8, 3, 12, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 681730158, 'comment_body': 'this is really good', 'comment_created': datetime.datetime(2021, 8, 3, 12, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 681731889, 'comment_body': 'what happens if that observable was already inserted before? It is not inserted again, am I right?', 'comment_created': datetime.datetime(2021, 8, 3, 12, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 681734991, 'comment_body': 'If you can do the same to the MIPS connector too, it would be great for the readers', 'comment_created': datetime.datetime(2021, 8, 3, 13, 0, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 681738230, 'comment_body': 'I need the uuid of an author for further steps.\nEdit: I can save that after the first call.', 'comment_created': datetime.datetime(2021, 8, 3, 13, 4, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 681740836, 'comment_body': 'if we save the uuid in a new table of the DB at the time of the first creation? and we try to retrieve it at the time of the analysis? If we do not find it, we can just follow the normal flow.', 'comment_created': datetime.datetime(2021, 8, 3, 13, 8, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 681743979, 'comment_body': 'As long as the type and values are same, it just updates the existing one.', 'comment_created': datetime.datetime(2021, 8, 3, 13, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 681744357, 'comment_body': ""Something like `cached_property` could work. Similar to how we use a session in PyIntelOwl ([reference](https://github.com/intelowlproject/pyintelowl/blob/681096d37690a63c26e133956e7036f04295ec43/pyintelowl/pyintelowl.py#L33-L50)), so it's called only once but is cached for rest of the life cycle of the object."", 'comment_created': datetime.datetime(2021, 8, 3, 13, 12, 2, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 681744851, 'comment_body': 'Yep', 'comment_created': datetime.datetime(2021, 8, 3, 13, 12, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 681745548, 'comment_body': '```\r\n"", "".join(self._job.analyzers_to_execute)\r\n```\r\n\r\nwould be one way.', 'comment_created': datetime.datetime(2021, 8, 3, 13, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 681746604, 'comment_body': '> As long as the type and values are same, it just updates the existing one.\r\n\r\nThis should be code comment.', 'comment_created': datetime.datetime(2021, 8, 3, 13, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 681898117, 'comment_body': '~updates~ returns', 'comment_created': datetime.datetime(2021, 8, 3, 16, 1, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 682391735, 'comment_body': ""`cached_property` won't be useful as it would stay only with the instance and these are already called once per instance.\r\nWe need something more persistent."", 'comment_created': datetime.datetime(2021, 8, 4, 8, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 683234030, 'comment_body': ""I do not like this. If we want to persist some data, we can use django's cache framework. The [django-cache-memoize](https://github.com/peterbe/django-cache-memoize) library is already installed."", 'comment_created': datetime.datetime(2021, 8, 5, 8, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683235147, 'comment_body': 'or simply use the `django.core.cache.cache.set(cache_key, function_out, expiration)`', 'comment_created': datetime.datetime(2021, 8, 5, 8, 19, 40, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683264757, 'comment_body': ""Thanks, I'll use `cache_memoize` here."", 'comment_created': datetime.datetime(2021, 8, 5, 8, 58, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 683530316, 'comment_body': ""Caching indefinitely can lead to various bugs that will be super hard to debug. For example, the `pycti.Identity` call depends on the `self.opencti_instance` value so if user were to change the URL, things will break. I'll go through the pycti docs and refer a better solution."", 'comment_created': datetime.datetime(2021, 8, 5, 14, 52, 46, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683534077, 'comment_body': ""From the PyCTI docs,\r\n\r\n> The Threat-Actor entity will only be created if it doesn’t exists By setting update to True it acts like an upsert and updates fields of an existing Threat-Actor entity.\r\n\r\nThe same applies to the `pycti.Identity.create` method (they do not document this but I looked at the [code](https://github.com/OpenCTI-Platform/client-python/blob/f75785e4cd6c249eb1db3dc53126cc0ca98370bb/pycti/entities/opencti_identity.py#L8)). So we don't need to have our own caching, we can just provide `update=True` keyword argument."", 'comment_created': datetime.datetime(2021, 8, 5, 14, 56, 52, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683536353, 'comment_body': 'Things will also break if users manually change something on the OpenCTI dashboard.', 'comment_created': datetime.datetime(2021, 8, 5, 14, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683537503, 'comment_body': 'The same applies to `MarkingDefinition`. [permalink](https://github.com/OpenCTI-Platform/client-python/blob/f75785e4cd6c249eb1db3dc53126cc0ca98370bb/pycti/entities/opencti_marking_definition.py#L141).', 'comment_created': datetime.datetime(2021, 8, 5, 15, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683539750, 'comment_body': 'A way to test if this does work as intended or not would be to run 2 connector calls and see that only one Identity was created.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683540971, 'comment_body': ""Earlier, I thought we were caching only for a particular instance of a connector call else I'd have pointed this out at that moment only."", 'comment_created': datetime.datetime(2021, 8, 5, 15, 4, 34, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 683856861, 'comment_body': ""@mlodic If you were concerned that it would create two identities, it wouldn't ((I have tested this multiple times already)). I thought we were avoiding making that call after first one."", 'comment_created': datetime.datetime(2021, 8, 5, 23, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 683857359, 'comment_body': 'Thanks for pointing this out, it slipped out of my mind. It would also break if the user deleted the identity from the dashboard.', 'comment_created': datetime.datetime(2021, 8, 5, 23, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 683857918, 'comment_body': ""I'm reverting back to what I did earlier."", 'comment_created': datetime.datetime(2021, 8, 5, 23, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 683861109, 'comment_body': ""I agree that we do not need our own caching and handling, let's leave it to the API."", 'comment_created': datetime.datetime(2021, 8, 6, 0, 7, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': 'a6ca14e35a3e8c7f7c97f314c6e7ad64e3c3815e', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c74349b374ee00afff61e755f5ea552ff4408371', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e6360c0e290b3751c4462109166b5c5546e04ae', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dd621dc0a74b3ead167451802bf39e433f48651', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecc73d7b7728af2a6100af83f885bfa8f414c17c', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '662f05d5f1a8cc3790dc6701d7bd93f366a3ca91', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '559a9956ee6dd9c4fe0ab52ec57fbc3310b44edf', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5108bfa06f949cbb218b5acaa4740f8f7cea3cb', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '829a9e6d7a4c6cc47816f72b5c15fdcff7c70331', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e62a309a8247bdc14c7675bebcea132f7b2635a5', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
710640751,Fixes #625: Add YETI Connector,"# Description
Adds connector for YETI platform

## Related issues
#625 

## Type of change

- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] If I added a new analyzer, I updated the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md). If the analyzer provides additional optional configuration, I added the available options here: [Advanced-Usage](./Advanced-Usage.md)
- [x] If I added external libraries/packages that use restrictive licenses, please add them in the [ReadMe - Legal Notice](https://github.com/certego/IntelOwl/blob/master/README.md) section
- [x] I added new secrets in the files [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/docker/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/docker/env_file_app_ci) and in the docs: [Installation](./Installation.md)
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)

# Real World Example
![Screenshot from 2021-08-12 13-28-59](https://user-images.githubusercontent.com/51958314/129181135-f3a0b06b-95c6-4203-80d5-7f10e8f6e61e.png)

",True,631,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/631,https://github.com/intelowlproject/IntelOwl/pull/631,closed,116,2,7,7,1,8,0,0,[],2021-08-12 10:24:35+00:00,2021-08-13 11:46:09+00:00,91294.0,"1 day, 1:21:34","[{'comment_id': 687586418, 'comment_body': 'https://github.com/intelowlproject/IntelOwl/issues/426#issuecomment-897511057', 'comment_created': datetime.datetime(2021, 8, 12, 10, 26, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 687593119, 'comment_body': 'nitpick: move this import to top.', 'comment_created': datetime.datetime(2021, 8, 12, 10, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 687593396, 'comment_body': 'and keep the `api_app` imports together.\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 10, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 687593635, 'comment_body': 'just seems more clean :sweat_smile: ', 'comment_created': datetime.datetime(2021, 8, 12, 10, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 687594292, 'comment_body': 'I think it could be useful to suffix the description with `| {obs_name} | {obs_classification}`.', 'comment_created': datetime.datetime(2021, 8, 12, 10, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 687596789, 'comment_body': '```\r\nfind or create observable on YETI, linking the successful analysis on IntelOwl.\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 10, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 687597444, 'comment_body': 'change here too.', 'comment_created': datetime.datetime(2021, 8, 12, 10, 43, 15, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 687599110, 'comment_body': 'sometimes I forget to check auto imports :sweat_smile: ', 'comment_created': datetime.datetime(2021, 8, 12, 10, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': '23b31a1de3d6e35d32aba2a34f3bc285c838761c', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fb9880aebf80ca283a4776a3f53c41bb3b492e0', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '258d71c381dbaa52b4bef10c28b3b5b514b6c280', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a653fdbef1564b4bb80d5c53b7a792af594d8ab0', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0d7a53b47aaa0a45ce85e19d498112ddfe7a12f', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8ff8efe9e99e131ef05a6a69eef14deebee32fc', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60dfd6cd5ed4db0cbe1e32c1e8caf4ccbcd0df31', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
701218788,Fixes #401: Opencti analyzer,"# Description
This adds an observable analyzer that searches for observables on a connected OpenCTI instance and returns all linked reports.

Notes
- `requests` was downgraded to `2.25.1` for `pycti==4.5.5`

## Related issues
#401 

## Type of change

- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] If I added a new analyzer, I updated the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md). If the analyzer provides additional optional configuration, I added the available options here: [Advanced-Usage](./Advanced-Usage.md)
- [x] If I added external libraries/packages that use restrictive licenses, please add them in the [ReadMe - Legal Notice](https://github.com/certego/IntelOwl/blob/master/README.md) section
- [x] I added new secrets in the files [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/docker/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/docker/env_file_app_ci) and in the docs: [Installation](./Installation.md)
- [x] I have added tests
- [ ] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)
 
# Real World Example
![image](https://user-images.githubusercontent.com/51958314/127820644-d9498fae-ad11-4935-a0f4-0554139119d4.png)
",True,603,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/603,https://github.com/intelowlproject/IntelOwl/pull/603,closed,148,1,8,5,3,5,0,0,[],2021-08-02 07:41:43+00:00,2021-08-03 12:41:05+00:00,104362.0,"1 day, 4:59:22","[{'comment_id': 680728996, 'comment_body': 'Is this intentional?', 'comment_created': datetime.datetime(2021, 8, 2, 7, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'm0mosenpai', 'type': 'User'}, {'comment_id': 680736201, 'comment_body': ""Yep, I'll update the description."", 'comment_created': datetime.datetime(2021, 8, 2, 7, 50, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 680749207, 'comment_body': 'small nitpick: use absolute import.', 'comment_created': datetime.datetime(2021, 8, 2, 8, 1, 5, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 681645490, 'comment_body': 'The circular reference could be a result of this. Define different `return_value` here.', 'comment_created': datetime.datetime(2021, 8, 3, 10, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 681649710, 'comment_body': 'thank you so much', 'comment_created': datetime.datetime(2021, 8, 3, 10, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}]","[{'commit_sha': '203ae0dc3303303adba5bed67803732665a849b7', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbbc6bf2dce4bd5b29e7066af5a5f04b7e2d85ce', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '374b7488c1a29137079fd5043654934fe93a74fd', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e9f372bedca94d3709ede21a6873de218ab8e8d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd3ba76bf26140221ec3e6a7ce231aeb1cbe4d09', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
712064819,Fixes #426: Add Yeti analyzer,"# Description
Add analyzer for yeti platform.

## Related issues
Fixes #426 

## Type of change

- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] If I added a new analyzer, I updated the file [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md). If the analyzer provides additional optional configuration, I added the available options here: [Advanced-Usage](./Advanced-Usage.md)
- [x] If I added external libraries/packages that use restrictive licenses, please add them in the [ReadMe - Legal Notice](https://github.com/certego/IntelOwl/blob/master/README.md) section
- [x] I added new secrets in the files [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/docker/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/docker/env_file_app_ci) and in the docs: [Installation](./Installation.md)
- [ ] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)
  

# Real World Example
![image](https://user-images.githubusercontent.com/51958314/129306150-2e4f0fee-7d0e-460a-9dd6-6da76dac1dff.png)

with `regex = true`
![screencapture-localhost-pages-scan-result-50-2021-08-13-18_01_31](https://user-images.githubusercontent.com/51958314/129357515-e94e9dff-cdc6-45d2-a5bf-8695e200910f.png)
",True,632,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/632,https://github.com/intelowlproject/IntelOwl/pull/632,closed,104,0,7,4,1,0,0,0,[],2021-08-13 04:49:11+00:00,2021-08-13 12:58:10+00:00,29339.0,8:08:59,[],"[{'commit_sha': '415c137759cd37a1e03dce3e578f6ccc9ba22bbb', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a80751629c9307ac5e9f7daecfdd96a730aa621d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cd9c107227911d6659fccd83ee7f0d5ceb61ec3', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9989c67c2773b918d4ba9f114f8d385a6a40bc19', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
696575865,Add plugin kill action,"# Description

- [x] Add `PluginActionViewSet` for extending to analyzers and connectors
- [x] Add `AnalyzerActionViewSet`
- [x] Add `ConnectorActionViewSet`
- [x] Update to store `task_id` in db instead of caching ( #533 )
- [x] Fix logic for job kill (mass `run_analyzer` kill)
- [x] Add unit tests

## Related issues
#534 (1. Plugin Kill)

# Checklist

- [x] The pull request is for the branch develop
- [x] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)

# Real World Example
![image](https://user-images.githubusercontent.com/51958314/126915871-b11d0326-9f4b-43f8-95a9-46b2bf6843d4.png)
![image](https://user-images.githubusercontent.com/51958314/126916783-b031bb89-1856-42fd-822e-f6e76aff2336.png)
",True,572,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/572,https://github.com/intelowlproject/IntelOwl/pull/572,closed,348,42,18,11,0,6,0,0,[],2021-07-25 22:47:37+00:00,2021-07-27 13:53:05+00:00,140728.0,"1 day, 15:05:28","[{'comment_id': 676742431, 'comment_body': 'This `.filter` should be applied before calling `.revoke`. No point in revoking task IDs for analyzers that already finished.', 'comment_created': datetime.datetime(2021, 7, 26, 16, 3, 50, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 676743895, 'comment_body': '`from rest_framework.exceptions import NotFound`\r\n\r\nand then `raise NotFound()`, dont use `Http404`.', 'comment_created': datetime.datetime(2021, 7, 26, 16, 5, 40, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 676744113, 'comment_body': 'same in `analyzers_manager.views`.', 'comment_created': datetime.datetime(2021, 7, 26, 16, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 676748220, 'comment_body': '```python\r\ndef filter_analyzers(serialized_data: Dict, warnings: List) -> Dict[str, str]\r\n```\r\n\r\nafter new changes.', 'comment_created': datetime.datetime(2021, 7, 26, 16, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 676776844, 'comment_body': 'I guess you meant\r\n```python\r\ndef start_analyzers(\r\n    job_id: int,\r\n    analyzers_to_execute: List[str],\r\n    runtime_configuration: Dict[str, Dict] = None,\r\n) -> Dict[str, str]:\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 16, 48, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 676778333, 'comment_body': 'Right! sorry. ', 'comment_created': datetime.datetime(2021, 7, 26, 16, 50, 43, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': '3242bfa8458e1e85e89597f69d84dca522235146', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8eda75d37b8d96a03d7d6c589f1fe478c1fe41b7', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3089f89bade067c8ecd0d9e21079055b4149d2c5', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ee92fd8782795ea5e44d49dd9916ce357b4c6c8', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c1994bc9298b7f11392cbbc96805f6287bca961', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e0fc810d88c2e65a07a1b5e49395bebbb6964d6', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45604851152a2a851efda86abedab9e69541442f', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49c0fe21b1c1b3e7842ca89b33a2717b7ea9fbbb', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff3641a4052b51065847de6babe11d4b99bcc7c', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10521539d561f9d04a5a40576bdc9cc25ba35393', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62cc761bfb15efddf5b4e9af4c0268cc99cf1d7a', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
698270668,"Plugin `retry` functionality (w/ views, tests)","# Description
This adds an action `retry` for retrying a failed/killed plugin call.  Arguments are reconstructed and the plugin call starts again in a new celery task. Post this, `PluginReport` is updated with a new report. Job status is updated in the case of analyzers.

## Related issues
#534 (2. Plugin Retry)

# Checklist

- [x] The pull request is for the branch develop
- [x] I have added tests in the [Tests](https://github.com/intelowlproject/IntelOwl/blob/master/tests) folder. 
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)
 

# Real World Example
![image](https://user-images.githubusercontent.com/51958314/127242785-84b56c3c-3dcc-464f-a00e-8d89fdb2f6ee.png)
![image](https://user-images.githubusercontent.com/51958314/127243387-984b0990-22fb-4fa7-9af9-6c771d127e3f.png)
",True,582,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/582,https://github.com/intelowlproject/IntelOwl/pull/582,closed,246,119,22,11,2,17,0,0,[],2021-07-28 00:27:05+00:00,2021-07-30 11:31:35+00:00,212670.0,"2 days, 11:04:30","[{'comment_id': 678040570, 'comment_body': ""Can't we use the `get_or_create` or `update_or_create` method instead ? what do u think ?"", 'comment_created': datetime.datetime(2021, 7, 28, 7, 21, 16, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 678041198, 'comment_body': 'shortway would be to use the `Job.update_status()` method.', 'comment_created': datetime.datetime(2021, 7, 28, 7, 22, 13, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 678044755, 'comment_body': 'The logic duplication of `init_report_object` method in the 2 subclasses would be redundant after #583.', 'comment_created': datetime.datetime(2021, 7, 28, 7, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 678083713, 'comment_body': 'The `report.runtime_configuration` won\'t work like this.\r\n\r\nThe `runtime_configuration` stored in `AbstractReport` stores only the key-value pairs but the `start_analyzers` method expects `runtime_configuration` in the format: `{""ANALYZER_NAME"": {""key1"": ""value1"", ""key2"": ""value2""} }`', 'comment_created': datetime.datetime(2021, 7, 28, 8, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 678085211, 'comment_body': 'Actually, since we are calling the `start_analyzers`, this is not required because is done inside that method.\r\n\r\nSee here: https://github.com/intelowlproject/IntelOwl/blob/03b51e47269ad4af27e0c3c09338ea8f0ce2ea63/api_app/analyzers_manager/controller.py#L123-L125', 'comment_created': datetime.datetime(2021, 7, 28, 8, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 678093424, 'comment_body': 'anyways I have to update an existing object, `get_or_create` would only be useful if I had to avoid duplicating some object', 'comment_created': datetime.datetime(2021, 7, 28, 8, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 678100844, 'comment_body': ""well, I haven't checked out on `update_or_create` yet, looks like it should do it."", 'comment_created': datetime.datetime(2021, 7, 28, 8, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 678163676, 'comment_body': 'According to Django internal style guide, `__str__` should come before `analyzer_name`.', 'comment_created': datetime.datetime(2021, 7, 28, 10, 10, 40, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}, {'comment_id': 678163681, 'comment_body': 'According to Django internal style guide, `__str__` should come before `connector_name`.', 'comment_created': datetime.datetime(2021, 7, 28, 10, 10, 40, tzinfo=datetime.timezone.utc), 'commenter': 'code-review-doctor[bot]', 'type': 'Bot'}, {'comment_id': 678216910, 'comment_body': 'The implementation of `get_object` is the same in both subclasses, so it can be moved to `PluginActionViewSet`.', 'comment_created': datetime.datetime(2021, 7, 28, 11, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 678218117, 'comment_body': ""I'd prefer to change the `get_report_class` to:\r\n\r\n```python3\r\n    @property\r\n    @abstractmethod\r\n    def report_model(self):\r\n        raise NotImplementedError()\r\n```\r\n\r\nthen in the subclass:\r\n\r\n```python3\r\n    @property\r\n    def report_model(self):\r\n       return AnalyzerReport\r\n```"", 'comment_created': datetime.datetime(2021, 7, 28, 11, 35, 57, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 678220427, 'comment_body': 'https://github.com/intelowlproject/IntelOwl/pull/582#discussion_r678218117', 'comment_created': datetime.datetime(2021, 7, 28, 11, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 679105630, 'comment_body': 'rreturn 204 status code.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 679105800, 'comment_body': 'return 204 status code.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 30, 46, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 679107538, 'comment_body': 'missing the `runtime_configuration = {report.name: report.runtime_configuration}` as is there in the `_start_retry` of `AnalyzerActionViewSet`.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 33, 21, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 679110495, 'comment_body': ""Line 61 to 66.\r\n\r\ni'd say that this part of the code should be a method named `perform_kill()`   (if you see the DRF code, that's the naming convention they follow of prefixing w/ `perform_` string). Then we do not require `_post_kill` since we can simply override the method in the subclasses and call `super()`."", 'comment_created': datetime.datetime(2021, 7, 29, 12, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 679111679, 'comment_body': 'Similar change could be made for `_start_retry` such as `perform_retry` where we can simply call `super()` and then subsequent individual logic.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 39, 15, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': '9221d20a757a8ef94d59b93fb8eaefbb1a7829ef', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70e936ada5a0049e349d59c8f8973b178f5edf2f', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5a2bbb9a43b2461b1727b9a214b394d38f6ee97', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a1889eea27b17eb83c2c0379a5bd819f475da55', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d6df6192971e8ec3a0a52d308ff0f640c38db18', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3e0839bb4406985653d4d2f3c48198b5a22ac53', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e723cb168f63cf7651315bfd7ee96c3482fdd620', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7298e61e21a276fec54f5c6230a9b3258716fc95', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c4925d5353993052682d2a725dc6b48e4f72568', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df115ca87da0284a753e95e9901ae8db70bd3a67', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fb5e825fe6469b722e2b6c0d107aadec51b7a1d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
707128091,Fixes #534: Add healthcheck for docker analyzers and connectors,"# Description

- [x] docker based analyzers
- [x] connectors (workaround)
- [x]  boolean in analyzers (`docker_based`)  list for clients
- [x] unit tests 

## Related issues
#534 

## Type of change
- [x] New feature (non-breaking change which adds functionality).

# Checklist

- [x] The pull request is for the branch develop
- [x] The tests gave 0 errors.
- [x] `Black` gave 0 errors.
- [x] `Flake` gave 0 errors.
- [ ] I squashed the commits into a single one. (optional, they will be squashed anyway by the maintainer)",True,627,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/627,https://github.com/intelowlproject/IntelOwl/pull/627,closed,321,60,21,12,2,8,0,0,[],2021-08-10 08:13:16+00:00,2021-08-13 08:41:02+00:00,260866.0,"3 days, 0:27:46","[{'comment_id': 686682199, 'comment_body': ""The `get_as_dataclasses` function reads the entire config and then turns each `dict` object to a dataclass. So here there is much waste of computatation.\r\n\r\nI think we could define a function, like:\r\n\r\n```python3\r\n@classmethod\r\nAnalyzerConfig.get(cls, analyzer_name: str) -> Union[AnalyzerConfig, None]:\r\n```\r\n\r\nbasically this would serve as queryset alike for dataclasses, to get an analyzer directly by it's name. `None` indicating it doesn't exist."", 'comment_created': datetime.datetime(2021, 8, 11, 9, 58, 27, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 686778898, 'comment_body': 'Although I like that we can use an abstract method like this, but because of how things are intertwined at the moment this will cause circular imports and what not.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 686779159, 'comment_body': 'This is causing circular import.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 686779603, 'comment_body': ""I'd say directly define the `get` function in the subclasses. "", 'comment_created': datetime.datetime(2021, 8, 11, 12, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 686779963, 'comment_body': 'and in the `AbstractConfig`, wrap it w/ the `abstractmethod` decorator and call `raise NotImplemented()`.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 686781424, 'comment_body': 'Similar to `dict_to_dataclass` method, we can have `AbstractConfig.from_dict` method.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 27, 29, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 687481227, 'comment_body': 'I do not really get why this is implemented in such a complex manner.', 'comment_created': datetime.datetime(2021, 8, 12, 8, 1, 53, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 687483472, 'comment_body': 'We can just hardcode: `url = cc._read_secrets(secrets_filter=[""url_key_name""])[""url_key_name""]`', 'comment_created': datetime.datetime(2021, 8, 12, 8, 5, 23, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': '56319b0a9d18d347f74f69b1a7426b2c3e88ddf4', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c97e7a169463fde9607c49bf63607fd2131f7afe', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '474143b9ddb025ec954efdf39bd87b7e31e830a9', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91c1480801e71a4aa28ed80bde1d301741e81015', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79f37a29b56b27179fffef50367f0b34409afe16', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c362d18c59ba760470c33c84a22930ff9e2a69fc', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2745bb58be39457f2614fd39ad823f2201735939', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd17c61d136878eadcdddc2e1b2b47ddd7515c6af', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56afbf4b2fb94929648737f44b0b112f8af56f85', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92db5dd851c3f63756d952c4f5d4b53f4ed0a6b2', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa1c51fa21b11f61b0d7a2d4e7b9b01edb1e64c0', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e6d5b659ac826f574a07e77ed3c03ff313550d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
669258508,Add connector table and section for reports,"Related to #101 

- [x] Add connectors table
- [x] Add Connector service
- [x] Add connector reports section In job analysis page
- [x] Handle connector reports using results service",True,109,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/109,https://github.com/intelowlproject/IntelOwl-ng/pull/109,closed,495,175,20,22,1,7,0,0,[],2021-06-14 06:26:02+00:00,2021-07-01 15:08:46+00:00,1500164.0,"17 days, 8:42:44","[{'comment_id': 651763202, 'comment_body': 'what does this do ?', 'comment_created': datetime.datetime(2021, 6, 15, 12, 56, 54, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 651783260, 'comment_body': ""It's for debugging purpose, will remove that later!"", 'comment_created': datetime.datetime(2021, 6, 15, 13, 20, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sp35', 'type': 'User'}, {'comment_id': 657863808, 'comment_body': 'We should have 3 interfaces. An `IAbstractConfig` interface which could be `extended` into 2: `IConnectorConfig` and `IAnalyzerConfig`. (using the `extends` keyword)', 'comment_created': datetime.datetime(2021, 6, 24, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657865128, 'comment_body': 'No need of extra `return` and curly brackets, would be cleaner if done as an inline arrow function.', 'comment_created': datetime.datetime(2021, 6, 24, 11, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 657866107, 'comment_body': ""The renaming is pretty redundant now so I think it's best to revert it back to it's original name."", 'comment_created': datetime.datetime(2021, 6, 24, 11, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 662366297, 'comment_body': 'Have you added a `no_of_connectors_executed = SerializerMethodField()` in the `JobListSerializer` for this ? similar to [get_no_of_analyzers_executed](https://github.com/intelowlproject/IntelOwl/blob/8f14384c315613567d39b3c5aa612d61f05c3b91/api_app/serializers.py#L66).', 'comment_created': datetime.datetime(2021, 7, 1, 14, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}, {'comment_id': 662480987, 'comment_body': 'https://github.com/orgs/intelowlproject/projects/2#card-64203186', 'comment_created': datetime.datetime(2021, 7, 1, 17, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'eshaan7', 'type': 'User'}]","[{'commit_sha': '2a28440f7f8129296ae11019b57218c0d989a9a5', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60695257e4a6f792c2e3a90a9594fe07aefc3c3d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec8f3f8409eb3a755b0f129f568af69185e55bc', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77a2ef9db1abda6d8a19a0f019d35ad14ada2498', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3ce0283fcb5a17531a3230d1cfb0d09f8f50a9f', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d8fb5885b588a450a774b2a35257ff45928e8e', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b24d3b95dfde690cce485d96a55df1d15c9b3e07', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dec157e4af138775647056975d57c98dab1058b2', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0174f72c353083dce3cbe75b120ef09a5550fd8', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6706f1f45fddd1f8b97462d56b81423b41353f76', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d3abbafa2cf7b98e73aa3cbe3bd239b8e747627', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '685787279b2296a3d05f1d99d6f335d07b9c9560', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bd1a62262bdff4ce172266f485a88124a1bf371', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd3684cda92eb6367d5c5420b499b650b0c0f36d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19fa85950746936fc991cfeec610c6a99353b8a5', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd4eb50bf88331ce6c5743cb4939346b7f149b3d', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b85237d304b3349eec348974a454c74369685e', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5cd14276d277f422aa01d27a3e05dd5bc8afecd', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1cd6ecc237c5253da5cb5034904a8a2ec4d9f9c', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b979619a700f31c175f107213242a0bdeefb4038', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dddba5a6ba267ec867ee4122e1875b0e69dffa34', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20fea1954d32a004189b809dddf5ba991c804ad5', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
702258707,Fixes #123: Add plugin retry and kill actions to ui,"Fixes #123 

- [x] Added service and components for actions
- [x] Added polling for connectors
- [x] disable actions to avoid validation error
- [x] Refactor code
- [x] use flex fields for polling connector reports

### Results
![image](https://user-images.githubusercontent.com/51958314/128019497-2f2136fc-bb9a-481e-8770-86f81113a4c8.png)
",True,125,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/125,https://github.com/intelowlproject/IntelOwl-ng/pull/125,closed,287,30,6,6,3,0,0,0,[],2021-08-03 12:59:09+00:00,2021-08-06 10:51:09+00:00,251520.0,"2 days, 21:52:00",[],"[{'commit_sha': '3c0016a7f7613d61599537b949410673b83f234f', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '457ed1b7d2819b01d67381a778e13b92fde8a129', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a35fdf69c1122f69ebcb5ba87bea13855b468032', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef029716d676d322c69e017c01d9f08d6f2e01b2', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f343c12f335a7725c03c6e852ad2b87435f1d72', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6975c42f5967d3d84ba9426f38e9eaed424311f6', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
711229547,Fixes #130: Add healthcheck to analyzer and connector table,"- [x] analyzer table
- [x] connector table

Fixes #130 

![image](https://user-images.githubusercontent.com/51958314/129234740-3ed0daaf-5214-42d4-8678-b24c84f1b615.png)
![image](https://user-images.githubusercontent.com/51958314/129243334-1232a9a1-dc4e-4f40-8b5f-308ddff0b014.png)![image](https://user-images.githubusercontent.com/51958314/129241126-950c9b40-185a-4d41-8bb3-23d2ad8df831.png)
",True,135,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/135,https://github.com/intelowlproject/IntelOwl-ng/pull/135,closed,182,4,6,2,0,0,0,0,[],2021-08-12 16:38:59+00:00,2021-08-13 09:05:55+00:00,59216.0,16:26:56,[],"[{'commit_sha': '20a334faf4e079a4d74479148071f264723658e0', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c8562be2ffaf1bc46077e9adaf6d3d348aa968e', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
705233558,"Fixes #94: Add report metrics, fix report sorting","- [x] #94 

Adds metrics for reports of the form: `Started: 10/12, Running: 3/12, Completed: 7/12`
Now the sorting priority for `status` is `success > failed > killed > running > pending`
Sorting: `status` (primary), `name` (`asc`, secondary)

![image](https://user-images.githubusercontent.com/51958314/128466909-11c16e06-1403-4b06-8e72-a1075d3d89af.png)


- [x] #128 
![image](https://user-images.githubusercontent.com/51958314/128466990-cf76154f-3971-40b9-8a2b-3644546922d6.png)
",True,129,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/129,https://github.com/intelowlproject/IntelOwl-ng/pull/129,closed,56,20,3,3,1,0,0,0,[],2021-08-06 06:41:46+00:00,2021-08-06 09:28:20+00:00,9994.0,2:46:34,[],"[{'commit_sha': 'dcd2192ec63d4595328698bf2dc8c6db0f6fd7f6', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '552bfe8eda46d2ab3dcbbbda50e117ca177b2a6c', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a44de192d0eefccbe34861f4748e58aefbe90b1', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
712495431,Fixes #136: Refactor plugin services,"Fixes #136 

refactor `PluginService` and extend analyzer/connector services from it
cleanup after refactor
",True,137,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/137,https://github.com/intelowlproject/IntelOwl-ng/pull/137,closed,134,150,6,1,0,0,0,0,[],2021-08-13 16:37:16+00:00,2021-08-17 13:10:09+00:00,333173.0,"3 days, 20:32:53",[],"[{'commit_sha': 'ad3f1fa6dcb072a14c72f5fbc95f246b31901251', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
684725128,Alert for connectors and hint card for configured hover,"UI updates for changes done in https://github.com/intelowlproject/IntelOwl/pull/524

Other Related Issue: #117 

- [x] Add alerts for connector table based on job status
- [x] Add hint card for hover action in analyzer and connector tables. 

... more changes",True,119,https://api.github.com/repos/intelowlproject/IntelOwl-ng/pulls/119,https://github.com/intelowlproject/IntelOwl-ng/pull/119,closed,48,9,8,2,0,0,0,1,[],2021-07-06 22:44:13+00:00,2021-07-12 20:52:29+00:00,511696.0,"5 days, 22:08:16",[],"[{'commit_sha': '122b12b36c7d8d899de967000cef31654e245b35', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fac2c9b71c2b72364dec6805464b078d5dd28016', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
706281527,Add cli and method for `get-connector-config`,Part of #87 ,True,112,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/112,https://github.com/intelowlproject/pyintelowl/pull/112,closed,110,3,7,2,0,0,0,0,[],2021-08-09 07:23:42+00:00,2021-08-09 11:11:17+00:00,13655.0,3:47:35,[],"[{'commit_sha': '215c55b7b15ba5b0da5f2188b0f45b4475fd978f', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06fc19288b65e61211aac1dff5eda673a0bed95a', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
706417927,#111: Add cli and methods for plugin kill/retry,Part of #111 ,True,113,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/113,https://github.com/intelowlproject/pyintelowl/pull/113,closed,320,9,10,8,1,0,0,0,[],2021-08-09 11:00:33+00:00,2021-08-09 14:56:21+00:00,14148.0,3:55:48,[],"[{'commit_sha': 'ce2a0bd2017772b097762369fd6e5f5753347aec', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96c36408f96e9c0dbe575b76978871e7966a682e', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7b98da6a97906fb2f0b74c5d9ad3fc823f5f99', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '876dcccdb247a2d3c87ad30fd45755d0fd365376', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58ff2c12dde164096e6ca9e01a5e2281946c892a', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b7680c1b464e0fbdd7290f6739adfa1961b84a2', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2214c9a73bc554b760cb3c388d2cf1a7d0c83f9', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55c9b68d485dd588f0dc50c0b30c870326b98886', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46
711417898,Fixes #111: Add cli and methods for plugin healthcheck,Part of #111 ,True,114,https://api.github.com/repos/intelowlproject/pyintelowl/pulls/114,https://github.com/intelowlproject/pyintelowl/pull/114,closed,177,15,7,3,1,0,0,0,[],2021-08-12 18:50:17+00:00,2021-08-13 08:49:50+00:00,50373.0,13:59:33,[],"[{'commit_sha': '0107c4047cb277387c582b06dc3c43219fc17007', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ec46d5f66372c95b3c6a8b41faaeb08c48d1223', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fac5457c00e71c625021f300977e50e5a24f624', 'committer_username': 'sp35', 'committer_name': 'Shubham Pandey', 'committer_email': 'shubhampcpandey13@gmail.com', 'commit_date': datetime.datetime(2019, 6, 18, 12, 59, 57, tzinfo=datetime.timezone.utc)}]",Shubham Pandey,51958314,shubhampcpandey13@gmail.com,User,,26,,12,46

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
231109256,IntelOwl,intelowlproject/IntelOwl,Python,423,3675,81,60,2443,78,58,17,"[{'id': 720709367, 'number': 666, 'closed': datetime.datetime(2021, 8, 31, 9, 14, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 26, 17, 23, 53, tzinfo=datetime.timezone.utc), 'time_taken': 402622.0, 'time_delta': '4 days, 15:50:22', 'additions': 170, 'deletions': 72, 'state': 'closed'}, {'id': 720647475, 'number': 664, 'closed': datetime.datetime(2021, 8, 26, 17, 39, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 26, 15, 53, 32, tzinfo=datetime.timezone.utc), 'time_taken': 6368.0, 'time_delta': '1:46:08', 'additions': 13, 'deletions': 193, 'state': 'closed'}, {'id': 717928955, 'number': 651, 'closed': datetime.datetime(2021, 9, 10, 14, 18, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 15, 14, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1551897.0, 'time_delta': '17 days, 23:04:57', 'additions': 139, 'deletions': 64, 'state': 'closed'}, {'id': 716456136, 'number': 641, 'closed': datetime.datetime(2021, 8, 20, 14, 50, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 5, 33, 5, tzinfo=datetime.timezone.utc), 'time_taken': 33418.0, 'time_delta': '9:16:58', 'additions': 129, 'deletions': 40, 'state': 'closed'}, {'id': 712064819, 'number': 632, 'closed': datetime.datetime(2021, 8, 13, 12, 58, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 4, 49, 11, tzinfo=datetime.timezone.utc), 'time_taken': 29339.0, 'time_delta': '8:08:59', 'additions': 104, 'deletions': 0, 'state': 'closed'}, {'id': 710640751, 'number': 631, 'closed': datetime.datetime(2021, 8, 13, 11, 46, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 10, 24, 35, tzinfo=datetime.timezone.utc), 'time_taken': 91294.0, 'time_delta': '1 day, 1:21:34', 'additions': 116, 'deletions': 2, 'state': 'closed'}, {'id': 707128091, 'number': 627, 'closed': datetime.datetime(2021, 8, 13, 8, 41, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 8, 13, 16, tzinfo=datetime.timezone.utc), 'time_taken': 260866.0, 'time_delta': '3 days, 0:27:46', 'additions': 321, 'deletions': 60, 'state': 'closed'}, {'id': 706254419, 'number': 623, 'closed': datetime.datetime(2021, 8, 9, 14, 47, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 6, 28, 8, tzinfo=datetime.timezone.utc), 'time_taken': 29954.0, 'time_delta': '8:19:14', 'additions': 490, 'deletions': 255, 'state': 'closed'}, {'id': 705569877, 'number': 622, 'closed': datetime.datetime(2021, 8, 9, 12, 56, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 15, 26, 19, tzinfo=datetime.timezone.utc), 'time_taken': 250224.0, 'time_delta': '2 days, 21:30:24', 'additions': 17, 'deletions': 8, 'state': 'closed'}, {'id': 701218788, 'number': 603, 'closed': datetime.datetime(2021, 8, 3, 12, 41, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 7, 41, 43, tzinfo=datetime.timezone.utc), 'time_taken': 104362.0, 'time_delta': '1 day, 4:59:22', 'additions': 148, 'deletions': 1, 'state': 'closed'}, {'id': 700774539, 'number': 602, 'closed': datetime.datetime(2021, 8, 6, 10, 56, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 31, 22, 12, 9, tzinfo=datetime.timezone.utc), 'time_taken': 477853.0, 'time_delta': '5 days, 12:44:13', 'additions': 264, 'deletions': 4, 'state': 'closed'}, {'id': 698270668, 'number': 582, 'closed': datetime.datetime(2021, 7, 30, 11, 31, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 0, 27, 5, tzinfo=datetime.timezone.utc), 'time_taken': 212670.0, 'time_delta': '2 days, 11:04:30', 'additions': 246, 'deletions': 119, 'state': 'closed'}, {'id': 696575865, 'number': 572, 'closed': datetime.datetime(2021, 7, 27, 13, 53, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 25, 22, 47, 37, tzinfo=datetime.timezone.utc), 'time_taken': 140728.0, 'time_delta': '1 day, 15:05:28', 'additions': 348, 'deletions': 42, 'state': 'closed'}, {'id': 696274258, 'number': 571, 'closed': datetime.datetime(2021, 7, 27, 13, 53, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 1, 33, 19, tzinfo=datetime.timezone.utc), 'time_taken': 303617.0, 'time_delta': '3 days, 12:20:17', 'additions': 7, 'deletions': 12, 'state': 'closed'}, {'id': 695692323, 'number': 563, 'closed': datetime.datetime(2021, 7, 23, 6, 50, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 6, 4, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2722.0, 'time_delta': '0:45:22', 'additions': 31, 'deletions': 9, 'state': 'closed'}, {'id': 691031986, 'number': 544, 'closed': datetime.datetime(2021, 7, 19, 8, 12, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 15, 20, 59, 36, tzinfo=datetime.timezone.utc), 'time_taken': 299551.0, 'time_delta': '3 days, 11:12:31', 'additions': 97, 'deletions': 163, 'state': 'closed'}, {'id': 689630517, 'number': 530, 'closed': datetime.datetime(2021, 7, 14, 8, 23, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 6, 39, 20, tzinfo=datetime.timezone.utc), 'time_taken': 6240.0, 'time_delta': '1:44:00', 'additions': 52, 'deletions': 30, 'state': 'closed'}, {'id': 688257939, 'number': 528, 'closed': datetime.datetime(2021, 7, 26, 15, 56, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 23, 38, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1181842.0, 'time_delta': '13 days, 16:17:22', 'additions': 188, 'deletions': 3, 'state': 'closed'}, {'id': 684721318, 'number': 524, 'closed': datetime.datetime(2021, 7, 13, 17, 49, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 22, 34, 14, tzinfo=datetime.timezone.utc), 'time_taken': 587730.0, 'time_delta': '6 days, 19:15:30', 'additions': 1966, 'deletions': 2455, 'state': 'closed'}, {'id': 683011711, 'number': 518, 'closed': datetime.datetime(2021, 7, 5, 16, 49, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 11, 38, 12, tzinfo=datetime.timezone.utc), 'time_taken': 191453.0, 'time_delta': '2 days, 5:10:53', 'additions': 263, 'deletions': 314, 'state': 'closed'}, {'id': 675090407, 'number': 499, 'closed': datetime.datetime(2021, 7, 1, 14, 54, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 5, 32, 24, tzinfo=datetime.timezone.utc), 'time_taken': 811307.0, 'time_delta': '9 days, 9:21:47', 'additions': 519, 'deletions': 11, 'state': 'closed'}, {'id': 672290860, 'number': 492, 'closed': datetime.datetime(2021, 6, 19, 4, 56, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 6, 53, 3, tzinfo=datetime.timezone.utc), 'time_taken': 165793.0, 'time_delta': '1 day, 22:03:13', 'additions': 234, 'deletions': 108, 'state': 'closed'}, {'id': 669283746, 'number': 483, 'closed': datetime.datetime(2021, 6, 14, 7, 24, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 6, 56, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1712.0, 'time_delta': '0:28:32', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 647434042, 'number': 453, 'closed': datetime.datetime(2021, 5, 19, 9, 39, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 19, 8, 58, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2417.0, 'time_delta': '0:40:17', 'additions': 376, 'deletions': 0, 'state': 'closed'}, {'id': 620282450, 'number': 425, 'closed': datetime.datetime(2021, 4, 21, 16, 40, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 21, 14, 44, 49, tzinfo=datetime.timezone.utc), 'time_taken': 6927.0, 'time_delta': '1:55:27', 'additions': 79, 'deletions': 0, 'state': 'closed'}, {'id': 615220124, 'number': 414, 'closed': datetime.datetime(2021, 4, 14, 14, 2, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 14, 12, 58, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3851.0, 'time_delta': '1:04:11', 'additions': 55, 'deletions': 0, 'state': 'closed'}, {'id': 597345376, 'number': 372, 'closed': datetime.datetime(2021, 3, 22, 15, 41, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 20, 19, 23, 43, tzinfo=datetime.timezone.utc), 'time_taken': 159487.0, 'time_delta': '1 day, 20:18:07', 'additions': 104, 'deletions': 1, 'state': 'closed'}, {'id': 596247089, 'number': 370, 'closed': datetime.datetime(2021, 3, 20, 16, 11, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 6, 30, 29, tzinfo=datetime.timezone.utc), 'time_taken': 121256.0, 'time_delta': '1 day, 9:40:56', 'additions': 1737, 'deletions': 22, 'state': 'closed'}, {'id': 592435532, 'number': 362, 'closed': datetime.datetime(2021, 3, 16, 8, 8, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 13, 22, 25, 32, tzinfo=datetime.timezone.utc), 'time_taken': 207757.0, 'time_delta': '2 days, 9:42:37', 'additions': 117, 'deletions': 1, 'state': 'closed'}, {'id': 574342114, 'number': 339, 'closed': datetime.datetime(2021, 2, 17, 14, 28, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 16, 17, 4, 16, tzinfo=datetime.timezone.utc), 'time_taken': 77061.0, 'time_delta': '21:24:21', 'additions': 49, 'deletions': 52, 'state': 'closed'}, {'id': 573018556, 'number': 337, 'closed': datetime.datetime(2021, 2, 15, 8, 4, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 14, 0, 58, 55, tzinfo=datetime.timezone.utc), 'time_taken': 111922.0, 'time_delta': '1 day, 7:05:22', 'additions': 75, 'deletions': 3, 'state': 'closed'}]"
218579196,pyintelowl,intelowlproject/pyintelowl,Python,26,58,9,13,309,13,8,6,"[{'id': 721284589, 'number': 121, 'closed': datetime.datetime(2021, 8, 31, 7, 53, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 27, 12, 13, 5, tzinfo=datetime.timezone.utc), 'time_taken': 330033.0, 'time_delta': '3 days, 19:40:33', 'additions': 65, 'deletions': 17, 'state': 'closed'}, {'id': 716688290, 'number': 119, 'closed': datetime.datetime(2021, 8, 20, 14, 50, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 12, 12, 28, tzinfo=datetime.timezone.utc), 'time_taken': 9506.0, 'time_delta': '2:38:26', 'additions': 24, 'deletions': 70, 'state': 'closed'}, {'id': 711417898, 'number': 114, 'closed': datetime.datetime(2021, 8, 13, 8, 49, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 18, 50, 17, tzinfo=datetime.timezone.utc), 'time_taken': 50373.0, 'time_delta': '13:59:33', 'additions': 177, 'deletions': 15, 'state': 'closed'}, {'id': 706417927, 'number': 113, 'closed': datetime.datetime(2021, 8, 9, 14, 56, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 11, 0, 33, tzinfo=datetime.timezone.utc), 'time_taken': 14148.0, 'time_delta': '3:55:48', 'additions': 320, 'deletions': 9, 'state': 'closed'}, {'id': 706281527, 'number': 112, 'closed': datetime.datetime(2021, 8, 9, 11, 11, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 7, 23, 42, tzinfo=datetime.timezone.utc), 'time_taken': 13655.0, 'time_delta': '3:47:35', 'additions': 110, 'deletions': 3, 'state': 'closed'}, {'id': 574626000, 'number': 71, 'closed': datetime.datetime(2021, 2, 17, 4, 23, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 17, 4, 3, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1169.0, 'time_delta': '0:19:29', 'additions': 48, 'deletions': 6, 'state': 'closed'}, {'id': 573729968, 'number': 68, 'closed': datetime.datetime(2021, 2, 16, 17, 52, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 15, 18, 26, 43, tzinfo=datetime.timezone.utc), 'time_taken': 84350.0, 'time_delta': '23:25:50', 'additions': 59, 'deletions': 1, 'state': 'closed'}]"
263673442,IntelOwl-ng,intelowlproject/IntelOwl-ng,TypeScript,17,86,11,3,160,25,22,16,"[{'id': 721840632, 'number': 143, 'closed': datetime.datetime(2021, 8, 31, 8, 44, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 28, 20, 14, 49, tzinfo=datetime.timezone.utc), 'time_taken': 217786.0, 'time_delta': '2 days, 12:29:46', 'additions': 84, 'deletions': 21, 'state': 'closed'}, {'id': 716457342, 'number': 139, 'closed': datetime.datetime(2021, 8, 20, 13, 14, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 5, 36, 44, tzinfo=datetime.timezone.utc), 'time_taken': 27454.0, 'time_delta': '7:37:34', 'additions': 100, 'deletions': 65, 'state': 'closed'}, {'id': 712495431, 'number': 137, 'closed': datetime.datetime(2021, 8, 17, 13, 10, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 16, 37, 16, tzinfo=datetime.timezone.utc), 'time_taken': 333173.0, 'time_delta': '3 days, 20:32:53', 'additions': 134, 'deletions': 150, 'state': 'closed'}, {'id': 711229547, 'number': 135, 'closed': datetime.datetime(2021, 8, 13, 9, 5, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 16, 38, 59, tzinfo=datetime.timezone.utc), 'time_taken': 59216.0, 'time_delta': '16:26:56', 'additions': 182, 'deletions': 4, 'state': 'closed'}, {'id': 705233558, 'number': 129, 'closed': datetime.datetime(2021, 8, 6, 9, 28, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 6, 41, 46, tzinfo=datetime.timezone.utc), 'time_taken': 9994.0, 'time_delta': '2:46:34', 'additions': 56, 'deletions': 20, 'state': 'closed'}, {'id': 702258707, 'number': 125, 'closed': datetime.datetime(2021, 8, 6, 10, 51, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 12, 59, 9, tzinfo=datetime.timezone.utc), 'time_taken': 251520.0, 'time_delta': '2 days, 21:52:00', 'additions': 287, 'deletions': 30, 'state': 'closed'}, {'id': 684725128, 'number': 119, 'closed': datetime.datetime(2021, 7, 12, 20, 52, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 22, 44, 13, tzinfo=datetime.timezone.utc), 'time_taken': 511696.0, 'time_delta': '5 days, 22:08:16', 'additions': 48, 'deletions': 9, 'state': 'closed'}, {'id': 684512132, 'number': 118, 'closed': datetime.datetime(2021, 7, 6, 16, 19, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 16, 16, 20, tzinfo=datetime.timezone.utc), 'time_taken': 192.0, 'time_delta': '0:03:12', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 670200374, 'number': 112, 'closed': datetime.datetime(2021, 6, 15, 8, 52, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 8, 45, 10, tzinfo=datetime.timezone.utc), 'time_taken': 435.0, 'time_delta': '0:07:15', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 669330568, 'number': 110, 'closed': datetime.datetime(2021, 6, 14, 8, 7, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 7, 58, 33, tzinfo=datetime.timezone.utc), 'time_taken': 509.0, 'time_delta': '0:08:29', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 669258508, 'number': 109, 'closed': datetime.datetime(2021, 7, 1, 15, 8, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 6, 26, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1500164.0, 'time_delta': '17 days, 8:42:44', 'additions': 495, 'deletions': 175, 'state': 'closed'}, {'id': 611777991, 'number': 91, 'closed': datetime.datetime(2021, 4, 13, 6, 27, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 8, 18, 28, 24, tzinfo=datetime.timezone.utc), 'time_taken': 388727.0, 'time_delta': '4 days, 11:58:47', 'additions': 67, 'deletions': 56, 'state': 'closed'}, {'id': 607995621, 'number': 88, 'closed': datetime.datetime(2021, 4, 3, 11, 31, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 11, 59, 45, tzinfo=datetime.timezone.utc), 'time_taken': 84693.0, 'time_delta': '23:31:33', 'additions': 53, 'deletions': 0, 'state': 'closed'}]"
