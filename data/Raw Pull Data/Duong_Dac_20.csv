pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
685180029,Python typing stub generation,"Add stub generation to `gen2.py`, addressing #14590.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or other license that is incompatible with OpenCV
- [x] The PR is proposed to proper branch
- [x] There is reference to original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake
",True,20370,https://api.github.com/repos/opencv/opencv/pulls/20370,https://github.com/opencv/opencv/pull/20370,closed,3449,40,21,7,28,12,2,1,"[{'name': 'category: python bindings'}, {'name': 'GSoC'}]",2021-07-07 13:06:53+00:00,2023-05-26 15:25:46+00:00,59451533.0,"688 days, 2:18:53","[{'comment_id': 665593364, 'comment_body': 'There is an existing class in OpenCV Python -> `cv2.UMat` so this type alias is redundant.', 'comment_created': datetime.datetime(2021, 7, 7, 17, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'VadimLevin', 'type': 'User'}, {'comment_id': 690668824, 'comment_body': '`TOUCH` is available only since CMake 3.12. Prefer to use version with wider compatibility:\r\n```cmake\r\nexecute_process(\r\n        COMMAND ${CMAKE_COMMAND} -E touch ""py.typed""\r\n        WORKING_DIRECTORY ""${__loader_path}/cv2""\r\n)\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 19, 41, 29, tzinfo=datetime.timezone.utc), 'commenter': 'VadimLevin', 'type': 'User'}, {'comment_id': 846373074, 'comment_body': 'dont think you need to import Dict \r\n\r\n""use built-in generics (list, dict, tuple, set), instead of importing them from typing, except in type aliases, in base classes, and for arbitrary length tuples (Tuple[int, ...]);""\r\n\r\nhttps://github.com/python/typeshed/blob/master/CONTRIBUTING.md', 'comment_created': datetime.datetime(2022, 4, 8, 18, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'bschnurr', 'type': 'User'}, {'comment_id': 972353807, 'comment_body': 'This. Same thing for `Union` and `Optional`: you should use `|` instead.\r\nCollections (Callable, Sequence, Iterable), should be imported from `collections.abc`.', 'comment_created': datetime.datetime(2022, 9, 15, 19, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Avasam', 'type': 'User'}, {'comment_id': 1039710579, 'comment_body': 'This patch targeting Python 3.6+ since it is default on many platforms in production.', 'comment_created': datetime.datetime(2022, 12, 5, 15, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'VadimLevin', 'type': 'User'}, {'comment_id': 1039758497, 'comment_body': ""> This patch targeting Python 3.6+ since it is default on many platforms in production.\r\n\r\nStub files are not restricted to a python version, since they are never executed. You should always use the most modern syntax supported by type-checkers. That's also why `from __future__ import annotations` is a useless statement in stubs.\r\n\r\nType-checkers also don't actively support EOL versions.\r\n\r\nThat being said, mypy *does* have some bugs left with pipe unions when checking against python 3.7 ."", 'comment_created': datetime.datetime(2022, 12, 5, 15, 40, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Avasam', 'type': 'User'}, {'comment_id': 1083883389, 'comment_body': '`distutils` is deprecated:\r\n\r\nhttps://peps.python.org/pep-0632/', 'comment_created': datetime.datetime(2023, 1, 23, 10, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1083903625, 'comment_body': '> python_loader\r\n\r\nThis path is handled by `modules/python/python_loader.cmake` script.\r\n\r\n`python_loader.cmake` controls:\r\n- [ ] installation rules (currently missing in this PR), including sub-modules\r\n- [ ] support for standalone mode of Python bindings ([example](http://pullrequest.opencv.org/buildbot/builders/4_x_winpack-build-win64-vc14/builds/100022))', 'comment_created': datetime.datetime(2023, 1, 23, 10, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1083916061, 'comment_body': 'To succeed with merge we need to be ready for features on 5.x branch.\r\nThe source of problem is here: #19156\r\n\r\nPossible way 1:\r\n- backport from 5.x this feature (only python part) and add some standalone test for python bindings\r\n- update PR to handle ""named arguments""\r\n\r\nPossible way 2:\r\n- open a second PR for 5.x branch with typing stubs update which handles ""named arguments""\r\n\r\nCons 2:\r\n- synchronization issues between 4.x and 5.x PRs\r\n- no Python PRs during the ""Merge 4.x"" as changes from 4.x are ignored (changes from .x PR are used).\r\n\r\nCons 1:\r\n- extra work to add ""standalone"" Python binding test (without modification of OpenCV C++ API).', 'comment_created': datetime.datetime(2023, 1, 23, 11, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 1095579655, 'comment_body': ""Can you elaborate a bit more about \r\n> support for standalone mode of Python bindings\r\n\r\nI'm not familiar with OpenCV Python standalone build"", 'comment_created': datetime.datetime(2023, 2, 3, 9, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'VadimLevin', 'type': 'User'}, {'comment_id': 1101277384, 'comment_body': 'Named arguments are unrolled as expected after PR #19156 is merged\r\n\r\n```python\r\n# Functions\r\n@typing.overload\r\ndef copyMatAndDumpNamedArguments(src: cv2.typing.MatLike, dst: cv2.typing.MatLike | None = ..., lambda_: int = ..., sigma: float = ...) -> tuple[str, cv2.typing.MatLike]: ...\r\n@typing.overload\r\ndef copyMatAndDumpNamedArguments(src: cv2.UMat, dst: cv2.UMat | None = ..., lambda_: int = ..., sigma: float = ...) -> tuple[str, cv2.UMat]: ...\r\n```', 'comment_created': datetime.datetime(2023, 2, 9, 10, 45, 59, tzinfo=datetime.timezone.utc), 'commenter': 'VadimLevin', 'type': 'User'}, {'comment_id': 1101281188, 'comment_body': 'OpenCV Python standalone build used to build binding without full OpenCV project (through using `find_package(OpenCV)`):\r\n- https://github.com/opencv/opencv/blame/4.7.0/modules/python/standalone.cmake', 'comment_created': datetime.datetime(2023, 2, 9, 10, 49, 27, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}]","[{'commit_sha': '426b44d0dbc556f507cd34a0afde8d12f24cf3d3', 'committer_username': 'ddacw', 'committer_name': 'Duong Dac', 'committer_email': None, 'commit_date': datetime.datetime(2016, 5, 11, 12, 0, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2feede031e335aeaa8d1555675c0108d6777d5d9', 'committer_username': 'ddacw', 'committer_name': 'Duong Dac', 'committer_email': None, 'commit_date': datetime.datetime(2016, 5, 11, 12, 0, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13d3995261a5b8df2ff4ed9151ae0695aac3d9f9', 'committer_username': 'ddacw', 'committer_name': 'Duong Dac', 'committer_email': None, 'commit_date': datetime.datetime(2016, 5, 11, 12, 0, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24fdcfe81c904e6a105c72f1128cce9451d06758', 'committer_username': 'ddacw', 'committer_name': 'Duong Dac', 'committer_email': None, 'commit_date': datetime.datetime(2016, 5, 11, 12, 0, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5acc827e6715307752502f7ecfaf79673e4eeb4', 'committer_username': 'VadimLevin', 'committer_name': 'Vadim Levin', 'committer_email': 'vadim.levin@xperience.ai', 'commit_date': datetime.datetime(2014, 2, 9, 12, 28, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5721f052e1bd653007774f16e5fc30acc79099a', 'committer_username': 'ddacw', 'committer_name': 'Duong Dac', 'committer_email': None, 'commit_date': datetime.datetime(2016, 5, 11, 12, 0, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97beac525d1bd92785a84bad7bad76b2f11cbe71', 'committer_username': 'VadimLevin', 'committer_name': 'Vadim Levin', 'committer_email': 'vadim.levin@xperience.ai', 'commit_date': datetime.datetime(2014, 2, 9, 12, 28, 57, tzinfo=datetime.timezone.utc)}]",Duong Dac,19305859,,User,,25,,6,25

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
5108051,opencv,opencv/opencv,C++,55708,77632,2656,2195,34493,2602,6,135,"[{'id': 703482515, 'number': 20502, 'closed': datetime.datetime(2021, 8, 6, 7, 7, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 13, 34, 12, tzinfo=datetime.timezone.utc), 'time_taken': 149613.0, 'time_delta': '1 day, 17:33:33', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 685180029, 'number': 20370, 'closed': datetime.datetime(2023, 5, 26, 15, 25, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 13, 6, 53, tzinfo=datetime.timezone.utc), 'time_taken': 59451533.0, 'time_delta': '688 days, 2:18:53', 'additions': 3449, 'deletions': 40, 'state': 'closed'}]"
