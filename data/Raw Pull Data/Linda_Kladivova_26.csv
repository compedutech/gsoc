pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
650629038,wxGUI: Split widget initialization from notebook logic,"Splits widget initialization (data catalog, display etc.) from notebook logic. Makes smaller methods for each widget creation.",True,1591,https://api.github.com/repos/OSGeo/grass/pulls/1591,https://github.com/OSGeo/grass/pull/1591,closed,54,30,1,4,0,3,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-05-22 13:34:43+00:00,2021-05-30 04:19:08+00:00,657865.0,"7 days, 14:44:25","[{'comment_id': 638956414, 'comment_body': ""Unless createWidgets is used also elesewhere, I think it's unnecessary function, I would just put there its content directly, it will be more readable."", 'comment_created': datetime.datetime(2021, 5, 25, 16, 16, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 638957073, 'comment_body': ""This function probably shouldn't return the notebook."", 'comment_created': datetime.datetime(2021, 5, 25, 16, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 638958116, 'comment_body': 'The work widget seems to be redundant in the function names.', 'comment_created': datetime.datetime(2021, 5, 25, 16, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'b12c11f761c81833b1feacd52b5b3e8f2ca2eb8d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '13bab7e4acf5128d799450ca57409ce079756ac9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db3a815f59ccab674e1bfab1655d9cf0dd83fd17', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd9f0ecf15ac5cb6cb2620112a9eb269cebea9124', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
657760373,wxGUI: create parallel wx.frame for Single Window layout development,"This PR serves for preparing a coding environment for building a separate Single Window application. It creates a copy of GMFrame which is ready for adapting and developing a new Single Window Layout solution through Google Summer of Code.
",True,1604,https://api.github.com/repos/OSGeo/grass/pulls/1604,https://github.com/OSGeo/grass/pull/1604,closed,2257,2,3,12,6,2,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-05-30 17:36:47+00:00,2021-06-04 15:42:35+00:00,425148.0,"4 days, 22:05:48","[{'comment_id': 644006035, 'comment_body': 'Could you please fix these instead of ignoring them?', 'comment_created': datetime.datetime(2021, 6, 2, 14, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 645571657, 'comment_body': 'Fixed. :-)', 'comment_created': datetime.datetime(2021, 6, 4, 13, 29, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '799de72ba07001e2b047a6987b2d712927766139', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42e3f8d1d8d616cdfb6eeb9d91468cf4ee91fdfe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '48494583320b5df712d2143c68550115fe9b6b59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '516e5ec0a36400296ee91abc0a9419b663b02fe5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '511c87a95b2ce71cde6f23a65c293cee90aea0cb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f52bded2c561333412651a27abaa0203dda71c1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6f2198d5edc977294e083faf078339e33a73c156', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b2e970dd95556a176cd2684e45f137c8645e1cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc4efb434818932cc695fd9eb8c134fa9b1d3667', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '71dae221425a0de4178c48f76d69aa20506a2b9a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eeee30f83f9928197c330a94732915c98341a7db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8c019b15d97f069be7a4e482054bf0faa927bade', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
662547142,wxGUI: Single-Window GUI: arrangement of basic widgets,"This PR deals with the base settings for the full screen layout with main dockable panes. 
Map Displays as well as 3D view are not solved in this PR - we just need to prepare the base structure here.

There are two main things that we need to figure out:

- Any content ""not dockable"" pane is necessary in terms of implementation. So first we need to decide whether to employ Data Catalog as the content pane.  The advantage is that all other panes would be dockable then. :-) And also after changes made last year the Data Catalog is kind of the center point of GRASS so it could make sense to have it as the content  pane. The con is that visually it might look a bit strange. There the layout I suggest so far in this PR (using wx.AUI):

![tmploc-PERMANENT - GRASS GIS_010](https://user-images.githubusercontent.com/49241681/120901314-a88bd200-c5ff-11eb-957e-770806292f40.png)

- Second important thing is to decide which library to use. We have two options: the traditional **wx.AUI** C++ library and the newer **wx.lib.agw.aui** python library. I tried to compared them a bit. There is a bit strange thing about wx.AUI -> MinimizeButton method does not work to me although according to https://wxpython.org/Phoenix/docs/html/wx.aui.AuiPaneInfo.html#wx.aui.AuiPaneInfo.MinimizeButton documentation, it should work. :-( The second thing I have come up with so far is the missing guide docking styles such as nice aui.AUI_MGR_WHIDBEY_DOCKING_GUIDES style.
Both of these functions work for wx.lib.agw.aui.

But there may be (and probably are) more things that are not implemented for wx.AUI. But I think we do not have to make the decision about the library right now.



",True,1621,https://api.github.com/repos/OSGeo/grass/pulls/1621,https://github.com/OSGeo/grass/pull/1621,closed,156,155,1,7,11,8,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-05 18:26:24+00:00,2021-06-13 19:04:07+00:00,693463.0,"8 days, 0:37:43","[{'comment_id': 646063619, 'comment_body': 'change to BindEvents', 'comment_created': datetime.datetime(2021, 6, 6, 2, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 649662667, 'comment_body': 'There is a note warning about using this function in the [documentation](https://wxpython.org/Phoenix/docs/html/wx.functions.html#wx.DisplaySize), so I suggest to follow it.', 'comment_created': datetime.datetime(2021, 6, 11, 3, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 649997435, 'comment_body': 'Ok, but then I think it will be a bit more complex, shell I take into consideration two monitors or is it okay if I set the size according to the first monitor? I am in the process of preparing Ubuntu on my second laptop, so now on my VirtualBox I am limited in terms of trying startup for different monitors set as default. :-( But if I get it right, [0] may represent the primary monitor anyway.', 'comment_created': datetime.datetime(2021, 6, 11, 13, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 650001127, 'comment_body': 'I am not sure if [0] really means primary, it is not written anywhere... if not it could be possible to determine which monitor it is according to GetPosition, but unfortunately, I do not have the second monitor to try it out.', 'comment_created': datetime.datetime(2021, 6, 11, 13, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 650009637, 'comment_body': 'mmm.. actually, neither on them work (neither wx.DisplaySize nor wx.Display(0).GetGeometry().Get(Size)... I need to have self.Maximize(True) to extend GRASS on the whole screen. I will have a look on it again tomorrow.', 'comment_created': datetime.datetime(2021, 6, 11, 14, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 650024986, 'comment_body': 'This should be `wx.Display().GetGeometry()` which gives you the wx.Rect of the display the application was started on.\r\n\r\nBut `wx.DisplaySize()` gives me (3520, 1080) when I have 2 displays.', 'comment_created': datetime.datetime(2021, 6, 11, 14, 29, 54, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 650026535, 'comment_body': ""Also you shouldn't need this here since you Maximize the window later, no?"", 'comment_created': datetime.datetime(2021, 6, 11, 14, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 650385290, 'comment_body': 'Ok. I already get it. :-)  We do not have to deal with different sizes of 2 displays at all.', 'comment_created': datetime.datetime(2021, 6, 12, 12, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': 'd3003e8fb1eeadef75cd69f300e5429f12665a24', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4894f8da22036cd12284c09fc7d3721b9d681c5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bd8860c337a04237de5af4730f16ed3a8a199cb5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f4086205918124b363332990031bfe1c70f13bc1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7e1d0464273626410157324945ff7c4023fa3941', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '44d4eebd2d5969058c46329459119ae9f01282e5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '76a7e4b5a0cd196d8ebe37d7fb16d778c59b888e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
588353917,wxGUI refactoring: New WorkspaceManager class,"In order to finish the PR #1321, some refactoring needs to take place.
The first change is the allocation of class for workspace management from Layer Manager.

This is the first PR which starts the refactoring to prepare GUI for designing and implementing the Single Layout window option on which (if everything will turned out well) I would like to work this summer within GSoC :-)",True,1437,https://api.github.com/repos/OSGeo/grass/pulls/1437,https://github.com/OSGeo/grass/pull/1437,closed,525,502,9,19,3,29,2,0,"[{'name': 'enhancement'}, {'name': 'GUI'}]",2021-03-09 17:35:28+00:00,2021-04-10 02:43:46+00:00,2711298.0,"31 days, 9:08:18","[{'comment_id': 593839741, 'comment_body': ""The signals here and the new methods in giface add only a little to the separation of the classes. This, in connection with the `WriteWorkspaceFile` class already knowing all the details of lmgr and whole GUI, suggests that this new class should just do the same, i.e., accessing all the components, while reading the workspace. So, what I'm saying is, let's not change `WriteWorkspaceFile` for now, instead follow the design which is already there and that is individual widgets don't know about workspace, workspace know about every widget. I think this will allow you to finish this without touching every workspace-related class in GUI."", 'comment_created': datetime.datetime(2021, 3, 14, 4, 25, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 593904105, 'comment_body': 'I agree with that. But giface is still needed for `workspaceChanged(self)`. I think this function belongs rather to Workspace Manager than to Layer Manager.\r\n\r\nAnyway, I have the error about Loading. It is still the same as you may remember I talked about it during our video call:\r\n![chyba](https://user-images.githubusercontent.com/49241681/111070972-56da1c80-84d4-11eb-98e8-5c79bf77c401.PNG)\r\n\r\nI tried to change the order of commands in GMFrame init a bit but it did not help... not sure where is the problem. I tried master and here it works fine (yet it is de facto the same, just place in a different file).', 'comment_created': datetime.datetime(2021, 3, 14, 13, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 594448537, 'comment_body': '@petrasovaa  I have already found the error. ', 'comment_created': datetime.datetime(2021, 3, 15, 15, 40, 41, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 595691530, 'comment_body': ""I know this was just moved over, but I think setting the title here doesn't make much sense. This is called when something tracked by workspace is being changed, so title should be staying the same. "", 'comment_created': datetime.datetime(2021, 3, 17, 3, 43, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 595691939, 'comment_body': 'These methods were moved, search for all the removed methods to make sure they are not being used anywhere.', 'comment_created': datetime.datetime(2021, 3, 17, 3, 45, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 595694178, 'comment_body': 'I would remove workspaceFile from the constructor.', 'comment_created': datetime.datetime(2021, 3, 17, 3, 52, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 595694988, 'comment_body': 'Simplify:\r\n```\r\nif workspaceFile:\r\n    if self.workspace_manager.Load(workspaceFile):\r\n        self._setTitle()\r\n```', 'comment_created': datetime.datetime(2021, 3, 17, 3, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 595695884, 'comment_body': 'This should be set by workspace_manager, not here.', 'comment_created': datetime.datetime(2021, 3, 17, 3, 58, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 595696806, 'comment_body': 'GUI still crashes on start, not sure why it works for you. This is needed as well:\r\n```\r\n--- a/gui/wxpython/xml/toolboxes.xml\r\n+++ b/gui/wxpython/xml/toolboxes.xml\r\n@@ -227,8 +227,6 @@\r\n       <wxgui-item name=""Save""/>\r\n       <wxgui-item name=""SaveAs""/>\r\n       <wxgui-item name=""Close""/>\r\n-      <separator/>\r\n-      <wxgui-item name=""LoadGRCFileTclTkGUI""/>\r\n     </items>\r\n   </toolbox>\r\n   <toolbox name=""MapDisplay"">\r\n\r\n```', 'comment_created': datetime.datetime(2021, 3, 17, 4, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 598147338, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 3, 20, 19, 0, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 598147515, 'comment_body': 'I think it is all right.', 'comment_created': datetime.datetime(2021, 3, 20, 19, 2, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 598147577, 'comment_body': 'Not sure how to simplify, but I moved it to WorkspaceManager.', 'comment_created': datetime.datetime(2021, 3, 20, 19, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 598210415, 'comment_body': ""I meant exactly what I suggested. See also comments in the manager's constructor."", 'comment_created': datetime.datetime(2021, 3, 21, 2, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 598211154, 'comment_body': ""That's not what I meant, I think it was better before. workspaceFile should be attribute of WorkspaceManager. Loading doesn't need to be in the constructor, you only set workspaceFile to None, then load the file (if requested) from lmgr. Load method should then save the file into workspaceFile. The point is the manager manages the state of workspace file, not lmgr, lmgr just tells it to load a file."", 'comment_created': datetime.datetime(2021, 3, 21, 2, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 598211220, 'comment_body': 'I think self.workspaceChanged = True is enough', 'comment_created': datetime.datetime(2021, 3, 21, 2, 49, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 598253000, 'comment_body': 'Ok @petrasovaa, This makes sense. What do you think now, after the last commit?', 'comment_created': datetime.datetime(2021, 3, 21, 9, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 598399664, 'comment_body': ""But SaveToWorkspaceFile doesn't exist anymore?"", 'comment_created': datetime.datetime(2021, 3, 22, 3, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 598400072, 'comment_body': 'I wonder what this is for?', 'comment_created': datetime.datetime(2021, 3, 22, 3, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 598400198, 'comment_body': ""Check the correct import for Py3 and remove, we don't keep compatibility with Python2 anymore."", 'comment_created': datetime.datetime(2021, 3, 22, 3, 13, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 598405497, 'comment_body': 'This is also called from vdigit/preferences.py.', 'comment_created': datetime.datetime(2021, 3, 22, 3, 35, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 598407047, 'comment_body': 'This looks good!', 'comment_created': datetime.datetime(2021, 3, 22, 3, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 600127388, 'comment_body': 'I would also add workspaceChanged to AddLayer method.', 'comment_created': datetime.datetime(2021, 3, 24, 3, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 601514130, 'comment_body': 'For nothing. :-) Removed.', 'comment_created': datetime.datetime(2021, 3, 25, 14, 2, 7, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 602817207, 'comment_body': 'Looking more into this method, would you agree CanClosePage should go into the manager?', 'comment_created': datetime.datetime(2021, 3, 28, 2, 3, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 602817266, 'comment_body': ""If you move CanClosePage to manager, this wouldn't be needed. "", 'comment_created': datetime.datetime(2021, 3, 28, 2, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 602818158, 'comment_body': 'So this needs to be added also to StandaloneGrassInterface', 'comment_created': datetime.datetime(2021, 3, 28, 2, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 602891414, 'comment_body': 'Yes, I agree, but there is a bit problem now with the OnCloseWindow method in mapdisp frame.py. I suggest letting the ugly `self._layerManager.workspace_manager.CanClosePage` solution and in the next PR I would move the majority of this  `OnCloseWindow` method to lmgr. Do you agree with that?', 'comment_created': datetime.datetime(2021, 3, 28, 15, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 602892194, 'comment_body': 'Sorry, of course, you are right.', 'comment_created': datetime.datetime(2021, 3, 28, 15, 20, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 604571354, 'comment_body': ""I agree, although I am not sure about moving the method to lmgr, that might be tricky. I don't like the method name CanClosePage but I don't have better idea at this moment."", 'comment_created': datetime.datetime(2021, 3, 31, 3, 37, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'c7d2926ad3ed53eb1d8611b2b938cbb06f00e7bb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5d1d37d3362ede7e5318f14fe64557ad177bb0d2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cb184726eba081f3bffe9a3b57d92ef869b678e6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9ed2ea1d3f9f7cf25d3d6b807935fda0a73543f3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a87d92a2f3f9f4fafe0f2ad232ec085976e0f4d8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3cec3bfa3a01463a63396dfdd753c128b0de07ce', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf8d2db4f88e30b2ac515a246ea3949e2babb568', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd8c777a0b74780e1ae4b9addf5716483ff0b159d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1076991496a6733b080f082ee9f65cafe3803b31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a8209a11dd8b11d9f9fb370b2679a4e6f4b4319d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '08438d638f7e4f42e1335362eafd228844e91ccf', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '89411e60950c248ac989f643b6ccc812dd9b2e8d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4504bace511b6fc13d94f301ccfb365767dc85d4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '832db7423d60fe0b7383fb70a512002e4eff7d79', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '33158fb06e22322cf5344563284b7ce8d5ff26a0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a2be6380f4649d949e798ef8905c4bae5ab148eb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5e4fe03d4e96336aafaa30daa41e31a87e3d3713', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'de1c9c8c6fae40fae8fac9fa196aaab48b1d0465', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2978d610a9ab359ed309b2d3e740459a1ed80066', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
668864914,wxGUI: SaveToFile() missing 1 required positional argument,"missing argument added

fixes #1636",True,1637,https://api.github.com/repos/OSGeo/grass/pulls/1637,https://github.com/OSGeo/grass/pull/1637,closed,1,1,1,1,0,0,2,0,"[{'name': 'bug'}, {'name': 'GUI'}]",2021-06-12 13:06:29+00:00,2021-06-12 20:00:24+00:00,24835.0,6:53:55,[],"[{'commit_sha': '0ca942e86432cf2564aec5934959d5f8f20c92fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
670523148,wxGUI: refactoring: build display status bar based on wx.StatusBar widget,"This PR redesigning the form of display map status bar implementation.
It was originally created directly using CreateStatusBar function, which is, however, directly connected to the wx.Frame widget. 
For further implementation of the SingleLayout, we need to replace MapFrame widget by MapPanel widget. 
MapPanel widget does not support CreateStatusBar function.

Reimplemented status bar in a Map Display for a better context:
![Map Display 1_024](https://user-images.githubusercontent.com/49241681/122086346-3cf8f000-cdc9-11eb-8235-f49cb8a26d4b.png)

Original status bar:
![Map Display 1_023](https://user-images.githubusercontent.com/49241681/122083676-b04d3280-cdc6-11eb-8a60-f3dc65558c1c.png)
",True,1646,https://api.github.com/repos/OSGeo/grass/pulls/1646,https://github.com/OSGeo/grass/pull/1646,closed,34,13,3,10,2,5,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-15 15:39:46+00:00,2021-06-16 16:38:36+00:00,89930.0,"1 day, 0:58:50","[{'comment_id': 652323712, 'comment_body': 'Get rid of the panel, just work with the statusbar directly.', 'comment_created': datetime.datetime(2021, 6, 16, 3, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652323973, 'comment_body': 'add PaneBorder(False)', 'comment_created': datetime.datetime(2021, 6, 16, 3, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652324679, 'comment_body': 'I suggest to override SetStatusText function (meaning create your own where you call self.statusbar.SetStatusText)', 'comment_created': datetime.datetime(2021, 6, 16, 3, 34, 59, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652729704, 'comment_body': 'It\'s enough to show/hide the pane. Also I would remove the unused show functions from sbManager, but check if they are really unused.\r\n\r\n```suggestion\r\n    def ShowStatusbar(self, show):\r\n        """"""Show/hide pane associated with statusbar""""""\r\n        self._mgr.GetPane(""statusbar"").Show(show)\r\n        self._mgr.Update()\r\n\r\n    def IsStatusbarShown(self):\r\n        """"""Check if statusbar is shown""""""\r\n        return self._mgr.GetPane(""statusbar"").IsShown()\r\n\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 14, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652850258, 'comment_body': 'I think it works fine now.', 'comment_created': datetime.datetime(2021, 6, 16, 16, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '6ff34c131bf9b68172aaae44493c588728bca92c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9188ea133743c044a876534cb80805b621530f5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cf49cc312df7111d62aa609f1709bdd47a38f886', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ea2087339635b88da8f2506fdc6f21a843e43120', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ad6898713e516f29c69d4f4736a7e0b0f968467', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dd4fb900dfdd87fed63049392442a9a106248321', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3c438caa607d6acfc05ab679a9d34d3d9fcd463b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '83ffe2b0583d6e2782e86c570848d4ff6953e167', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a23950dc7b37a22f73d4f2c6473fa1a109ff072', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eb40179ce56543d9665f883d497e18e6fd92d7a6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
673912684,wxGUI: Workspace save fails with SbManager has no IsShown,"I tried to find all occurrences by grep -Irn ""anager.Show"" and grep -Irn ""anager.IsShown"", now it should be ok.",True,1665,https://api.github.com/repos/OSGeo/grass/pulls/1665,https://github.com/OSGeo/grass/pull/1665,closed,4,4,3,1,0,0,3,0,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-19 17:48:43+00:00,2021-06-20 02:45:39+00:00,32216.0,8:56:56,[],"[{'commit_sha': 'e6a1cb25120df86fc834dc6766cab4b16e709327', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
685861352,wxGUI/MapSwipe: Show comp. extent option in statusbar does not work #1714,,True,1717,https://api.github.com/repos/OSGeo/grass/pulls/1717,https://github.com/OSGeo/grass/pull/1717,closed,3,3,1,1,0,0,3,0,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-07-08 09:52:24+00:00,2021-07-08 13:45:57+00:00,14013.0,3:53:33,[],"[{'commit_sha': '10c38e9ac9e54a26f2a07241eaed8b707b1d9d00', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
692065714,wxGUI: Single-Window GUI: Integrate new map display wx.Panels into a AuiNotebook center pane #1735,"This PR follows up the changes that are about to be merged - https://github.com/OSGeo/grass/pull/1729, https://github.com/OSGeo/grass/pull/1689, https://github.com/OSGeo/grass/pull/1675.

So far, it is based on my local merged branch which already knows these changes. But I think even without the mentor's testing it makes sense to start working on this as later we can rebase it.

This PR aims at the basic integration of the new Map Display into the center AuiNotebook pane. Apart from this integration, it repairs existing event handlers and methods. It does not add any new ones.

As we have basically several small things for coding, I have eventually decided to solve them in this one PR. Some of them require changing of one, two rows, so it probably does not make sense to have more than one PR.

Tasks are as follow:

- [x]  Remove methods related to the depreciated Map Display wx.Frame.

- [x]  Fix behaviour when adding or switching to a new location (now it does not close previously opened map displays)

- [x]  Make a newly added AuiNotebook tab active when adding a new Display tab.

- [x]  Edit an existing closing event for the Display tab. This event should close the related AuiNotebook tab.

- [x]  Edit an existing event for the switching between Display tabs. This event should make the related AuiNotebook tab active.

- [x] Fix an existing RenameDisplay event handler.

- [x] Fix adding and removing of the 3D View pane. Decide where should this tab go when launching 3D for the first time.
",True,1732,https://api.github.com/repos/OSGeo/grass/pulls/1732,https://github.com/OSGeo/grass/pull/1732,closed,190,144,1,5,0,3,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-07-18 10:24:46+00:00,2021-07-30 13:16:40+00:00,1047114.0,"12 days, 2:51:54","[{'comment_id': 674476583, 'comment_body': ""Let's just pick one here and set it directly."", 'comment_created': datetime.datetime(2021, 7, 22, 3, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674478467, 'comment_body': ""style=wx.EXPAND doesn't look correct to me, is that in the documentation somewhere?"", 'comment_created': datetime.datetime(2021, 7, 22, 3, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674941547, 'comment_body': 'Ok. I have chosen aui.AuiDefaultTabArt() (https://docs.wxpython.org/wx.lib.agw.aui.tabart.AuiDefaultTabArt.html#wx.lib.agw.aui.tabart.AuiDefaultTabArt)', 'comment_created': datetime.datetime(2021, 7, 22, 15, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '60d55fc7c3a6a1064d199790713305cc968eb3ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75a1a1f75646e4bf3603b55e199edbeed1d96051', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7513c666f7bb56e983e902fea2f157f27514cf82', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c2b95204f03819666300c0ffa8c04915162a756', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '66f7d9cd5389a739b01e695e2e2c649a0dc4ec22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
692065714,wxGUI: Single-Window GUI: Integrate new map display wx.Panels into a AuiNotebook center pane #1735,"This PR follows up the changes that are about to be merged - https://github.com/OSGeo/grass/pull/1729, https://github.com/OSGeo/grass/pull/1689, https://github.com/OSGeo/grass/pull/1675.

So far, it is based on my local merged branch which already knows these changes. But I think even without the mentor's testing it makes sense to start working on this as later we can rebase it.

This PR aims at the basic integration of the new Map Display into the center AuiNotebook pane. Apart from this integration, it repairs existing event handlers and methods. It does not add any new ones.

As we have basically several small things for coding, I have eventually decided to solve them in this one PR. Some of them require changing of one, two rows, so it probably does not make sense to have more than one PR.

Tasks are as follow:

- [x]  Remove methods related to the depreciated Map Display wx.Frame.

- [x]  Fix behaviour when adding or switching to a new location (now it does not close previously opened map displays)

- [x]  Make a newly added AuiNotebook tab active when adding a new Display tab.

- [x]  Edit an existing closing event for the Display tab. This event should close the related AuiNotebook tab.

- [x]  Edit an existing event for the switching between Display tabs. This event should make the related AuiNotebook tab active.

- [x] Fix an existing RenameDisplay event handler.

- [x] Fix adding and removing of the 3D View pane. Decide where should this tab go when launching 3D for the first time.
",True,1732,https://api.github.com/repos/OSGeo/grass/pulls/1732,https://github.com/OSGeo/grass/pull/1732,closed,190,144,1,5,0,3,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-07-18 10:24:46+00:00,2021-07-30 13:16:40+00:00,1047114.0,"12 days, 2:51:54","[{'comment_id': 674476583, 'comment_body': ""Let's just pick one here and set it directly."", 'comment_created': datetime.datetime(2021, 7, 22, 3, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674478467, 'comment_body': ""style=wx.EXPAND doesn't look correct to me, is that in the documentation somewhere?"", 'comment_created': datetime.datetime(2021, 7, 22, 3, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674941547, 'comment_body': 'Ok. I have chosen aui.AuiDefaultTabArt() (https://docs.wxpython.org/wx.lib.agw.aui.tabart.AuiDefaultTabArt.html#wx.lib.agw.aui.tabart.AuiDefaultTabArt)', 'comment_created': datetime.datetime(2021, 7, 22, 15, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '60d55fc7c3a6a1064d199790713305cc968eb3ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75a1a1f75646e4bf3603b55e199edbeed1d96051', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7513c666f7bb56e983e902fea2f157f27514cf82', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c2b95204f03819666300c0ffa8c04915162a756', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '66f7d9cd5389a739b01e695e2e2c649a0dc4ec22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
705511599,wxGUI/Single-Window: New change page event for AuiNotebook,,True,1780,https://api.github.com/repos/OSGeo/grass/pulls/1780,https://github.com/OSGeo/grass/pull/1780,closed,12,4,2,12,0,4,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-06 14:05:31+00:00,2021-08-13 02:35:21+00:00,563390.0,"6 days, 12:29:50","[{'comment_id': 684578641, 'comment_body': 'There is _onMapDisplayFocus in lmgr/frame.py, which seems to be doing what you need, why this new method?', 'comment_created': datetime.datetime(2021, 8, 7, 3, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686127461, 'comment_body': 'The _onMapDisplayFocus cannot be used as is written now due to the notebookLayerPage parameter. We also make only one Bind to map notebook not many Binds for each Display frame. So the situation is a bit different now.\r\n\r\nBut at least I a bit adapted OnMapNotebookPageChanged method to use a condition from _onMapDisplayFocus (we talked about it in e-mail). Please, write me what you think. _onMapDisplayFocus is not used anywhere else, so I think we no longer need it.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 686220677, 'comment_body': ""What exception is actually thrown here? It's better to use the specific one to make it more clear what it is trying to do."", 'comment_created': datetime.datetime(2021, 8, 10, 18, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686732086, 'comment_body': 'It is the TypeError. If I understand it right, the OnMapNotebookChanged is also called during the processing of NewDisplay method. The map panel is already known but the layertree not, so thats the reason why it throws this exception.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '30c8e8aa461b3eeb146433bb51b341d3db2b5132', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fbb9593b25f2f7472c197c31dad6d10508bf16a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4a66b7b8197c5212d602da603b657598ad09f642', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68375dad7bd3675862620c651497b14e1dfed306', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1b1e225890fbc21a48c8745da7f05479182738a7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cb3e24de21e063d7d44d8936093c5eefa32f18b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fa5d81e10eb5980d166e031485b622a517dfe98', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feb2c1b77252ac9e540aebf42e9a2cbeb4dc8abb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e27abb2a8af398a24cdd625a32f7a655b736611', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8d85b216fef373c369c68f671adf16017b1522d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a085b55fc8510142918bb88b45722061d920b8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '428c3a5ed02ef9ea68047d98fff728833d3e380c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
703364590,wxGUI/Single-Window: arrange a startup GUI,"This PR implements the startup GUI arrangement according to the third proposal from https://github.com/OSGeo/grass/issues/1747 which looks as follows:
![126859885-4cc53bf0-293c-42e5-9716-ff51eb7e0e83](https://user-images.githubusercontent.com/49241681/128175406-0ad69859-4bdb-4bd7-b908-7a5acc83dfd4.png)
",True,1775,https://api.github.com/repos/OSGeo/grass/pulls/1775,https://github.com/OSGeo/grass/pull/1775,closed,14,6,1,5,3,7,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-04 11:59:38+00:00,2021-08-17 16:33:02+00:00,1139604.0,"13 days, 4:33:24","[{'comment_id': 683098555, 'comment_body': ""You can get the notebooks like this:\r\n```suggestion\r\n        notebook = self._auimgr.GetNotebooks()[0]\r\n```\r\nbut it's also not ideal."", 'comment_created': datetime.datetime(2021, 8, 5, 3, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 683686570, 'comment_body': 'Not ideal, but better. :-)\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 18, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 685667621, 'comment_body': 'I was playing with the sizing and this is the only thing that worked:\r\n```\r\n+        pane = self._auimgr.GetPane(notebook)\r\n+        pane.MinSize(self.goutput.GetMinSize())\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 3, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686738251, 'comment_body': 'Yes, it works, thank you Anicka.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 687389559, 'comment_body': 'I have found out why it displays invalid map size 0,413. The problem is in the function ChangeMapSize which is called several times each time with GetClientSize() parameter. And this parameter is being changed. I tried to write down the process with ""GetClientSize"" during the startup:\r\n\r\nOnIdle\r\n(0, 413)\r\nInvalid map size 0,413\r\n_updateM\r\n(569, 421)\r\nOnIdle\r\n(569, 421)\r\n_updateM\r\n(569, 421)\r\n\r\nThe problem is in the first call of OnIdle, then it is alright...\r\nBut I think that the problem is generally caused by a very small map size.\r\nWhen we set the size of notebook based on Modules tab, it is alright. And it also alright in terms of GTKCheck warnings in cmd.\r\nSo, I would propose to use Modules tab for this purpose and do not deal with render.py. What do you think @petrasovaa ?', 'comment_created': datetime.datetime(2021, 8, 12, 5, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 687391315, 'comment_body': '> I have found out why it displays invalid map size 0,413. The problem is in the function ChangeMapSize which is called several times each time with GetClientSize() parameter. And this parameter is being changed. I tried to write down the process with ""GetClientSize"" during the startup:\r\n> \r\n> OnIdle\r\n> (0, 413)\r\n> Invalid map size 0,413\r\n> _updateM\r\n> (569, 421)\r\n> OnIdle\r\n> (569, 421)\r\n> _updateM\r\n> (569, 421)\r\n> \r\n> The problem is in the first call of OnIdle, then it is alright...\r\n> But I think that the problem is generally caused by very small map size.\r\n> When we set the size of notebook based on Modules tab, it is alright. And it also alright in terms of GTKCheck warnings in cmd.\r\n> So, I would propose to use Modules tab for this purpose and do not deal with render.py. What do you think @petrasovaa ?\r\n\r\nSorry, fault. Those warnings are still displayed:\r\n(wxgui.py:10746): Gtk-WARNING **: 00:04:09.085: Negative content width -6 (allocation 4, extents 5x5) while allocating gadget (node checkbutton, owner GtkCheckButton)\r\n\r\n(wxgui.py:10746): Gtk-CRITICAL **: 00:04:09.085: gtk_box_gadget_distribute: assertion \'size >= 0\' failed in GtkCheckButton\r\n\r\n(wxgui.py:10746): Gtk-WARNING **: 00:04:09.156: Negative content width -6 (allocation 4, extents 5x5) while allocating gadget (node checkbutton, owner GtkCheckButton)\r\n\r\n(wxgui.py:10746): Gtk-CRITICAL **: 00:04:09.157: gtk_box_gadget_distribute: assertion \'size >= 0\' failed in GtkCheckButton\r\n\r\nI tried also the thing with BestSize but it does not work - notebook is shrunk (same as the second picture in this PR).\r\n\r\nIf we used python tab, warnings would not be displayed, but the notebook would be too narrow (a bit wider than the situation on the second picture though).\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 5, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 688201214, 'comment_body': ""I don't think we should decide that based on the errors we get, they are apparently very arbitrary. Set it to modules tab for now and the errors need to be dealt with separately (not urgent). The ChangeMapSize error reporting could just be removed, it's not needed and the GTK errors are likely coming from the statusbar, so that's again differnt."", 'comment_created': datetime.datetime(2021, 8, 13, 2, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '1cd4c5364c5ac6cf2761909738354ae89c2eb309', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ec615cb080083c6d91a1cb97b2d24ad26c7d2a3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c6bcb601be9d5284391baf4e627e61f92908ce4c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '607e68c34d54b1cb3096fdb721d3295802aa495d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cf905b4401aa31a3a8e4f36a3134a13fc84e3c66', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
705511599,wxGUI/Single-Window: New change page event for AuiNotebook,,True,1780,https://api.github.com/repos/OSGeo/grass/pulls/1780,https://github.com/OSGeo/grass/pull/1780,closed,12,4,2,12,0,4,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-06 14:05:31+00:00,2021-08-13 02:35:21+00:00,563390.0,"6 days, 12:29:50","[{'comment_id': 684578641, 'comment_body': 'There is _onMapDisplayFocus in lmgr/frame.py, which seems to be doing what you need, why this new method?', 'comment_created': datetime.datetime(2021, 8, 7, 3, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686127461, 'comment_body': 'The _onMapDisplayFocus cannot be used as is written now due to the notebookLayerPage parameter. We also make only one Bind to map notebook not many Binds for each Display frame. So the situation is a bit different now.\r\n\r\nBut at least I a bit adapted OnMapNotebookPageChanged method to use a condition from _onMapDisplayFocus (we talked about it in e-mail). Please, write me what you think. _onMapDisplayFocus is not used anywhere else, so I think we no longer need it.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 686220677, 'comment_body': ""What exception is actually thrown here? It's better to use the specific one to make it more clear what it is trying to do."", 'comment_created': datetime.datetime(2021, 8, 10, 18, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686732086, 'comment_body': 'It is the TypeError. If I understand it right, the OnMapNotebookChanged is also called during the processing of NewDisplay method. The map panel is already known but the layertree not, so thats the reason why it throws this exception.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '30c8e8aa461b3eeb146433bb51b341d3db2b5132', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fbb9593b25f2f7472c197c31dad6d10508bf16a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4a66b7b8197c5212d602da603b657598ad09f642', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68375dad7bd3675862620c651497b14e1dfed306', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1b1e225890fbc21a48c8745da7f05479182738a7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cb3e24de21e063d7d44d8936093c5eefa32f18b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fa5d81e10eb5980d166e031485b622a517dfe98', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feb2c1b77252ac9e540aebf42e9a2cbeb4dc8abb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e27abb2a8af398a24cdd625a32f7a655b736611', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8d85b216fef373c369c68f671adf16017b1522d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a085b55fc8510142918bb88b45722061d920b8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '428c3a5ed02ef9ea68047d98fff728833d3e380c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
703364590,wxGUI/Single-Window: arrange a startup GUI,"This PR implements the startup GUI arrangement according to the third proposal from https://github.com/OSGeo/grass/issues/1747 which looks as follows:
![126859885-4cc53bf0-293c-42e5-9716-ff51eb7e0e83](https://user-images.githubusercontent.com/49241681/128175406-0ad69859-4bdb-4bd7-b908-7a5acc83dfd4.png)
",True,1775,https://api.github.com/repos/OSGeo/grass/pulls/1775,https://github.com/OSGeo/grass/pull/1775,closed,14,6,1,5,3,7,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-04 11:59:38+00:00,2021-08-17 16:33:02+00:00,1139604.0,"13 days, 4:33:24","[{'comment_id': 683098555, 'comment_body': ""You can get the notebooks like this:\r\n```suggestion\r\n        notebook = self._auimgr.GetNotebooks()[0]\r\n```\r\nbut it's also not ideal."", 'comment_created': datetime.datetime(2021, 8, 5, 3, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 683686570, 'comment_body': 'Not ideal, but better. :-)\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 18, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 685667621, 'comment_body': 'I was playing with the sizing and this is the only thing that worked:\r\n```\r\n+        pane = self._auimgr.GetPane(notebook)\r\n+        pane.MinSize(self.goutput.GetMinSize())\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 3, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686738251, 'comment_body': 'Yes, it works, thank you Anicka.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 687389559, 'comment_body': 'I have found out why it displays invalid map size 0,413. The problem is in the function ChangeMapSize which is called several times each time with GetClientSize() parameter. And this parameter is being changed. I tried to write down the process with ""GetClientSize"" during the startup:\r\n\r\nOnIdle\r\n(0, 413)\r\nInvalid map size 0,413\r\n_updateM\r\n(569, 421)\r\nOnIdle\r\n(569, 421)\r\n_updateM\r\n(569, 421)\r\n\r\nThe problem is in the first call of OnIdle, then it is alright...\r\nBut I think that the problem is generally caused by a very small map size.\r\nWhen we set the size of notebook based on Modules tab, it is alright. And it also alright in terms of GTKCheck warnings in cmd.\r\nSo, I would propose to use Modules tab for this purpose and do not deal with render.py. What do you think @petrasovaa ?', 'comment_created': datetime.datetime(2021, 8, 12, 5, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 687391315, 'comment_body': '> I have found out why it displays invalid map size 0,413. The problem is in the function ChangeMapSize which is called several times each time with GetClientSize() parameter. And this parameter is being changed. I tried to write down the process with ""GetClientSize"" during the startup:\r\n> \r\n> OnIdle\r\n> (0, 413)\r\n> Invalid map size 0,413\r\n> _updateM\r\n> (569, 421)\r\n> OnIdle\r\n> (569, 421)\r\n> _updateM\r\n> (569, 421)\r\n> \r\n> The problem is in the first call of OnIdle, then it is alright...\r\n> But I think that the problem is generally caused by very small map size.\r\n> When we set the size of notebook based on Modules tab, it is alright. And it also alright in terms of GTKCheck warnings in cmd.\r\n> So, I would propose to use Modules tab for this purpose and do not deal with render.py. What do you think @petrasovaa ?\r\n\r\nSorry, fault. Those warnings are still displayed:\r\n(wxgui.py:10746): Gtk-WARNING **: 00:04:09.085: Negative content width -6 (allocation 4, extents 5x5) while allocating gadget (node checkbutton, owner GtkCheckButton)\r\n\r\n(wxgui.py:10746): Gtk-CRITICAL **: 00:04:09.085: gtk_box_gadget_distribute: assertion \'size >= 0\' failed in GtkCheckButton\r\n\r\n(wxgui.py:10746): Gtk-WARNING **: 00:04:09.156: Negative content width -6 (allocation 4, extents 5x5) while allocating gadget (node checkbutton, owner GtkCheckButton)\r\n\r\n(wxgui.py:10746): Gtk-CRITICAL **: 00:04:09.157: gtk_box_gadget_distribute: assertion \'size >= 0\' failed in GtkCheckButton\r\n\r\nI tried also the thing with BestSize but it does not work - notebook is shrunk (same as the second picture in this PR).\r\n\r\nIf we used python tab, warnings would not be displayed, but the notebook would be too narrow (a bit wider than the situation on the second picture though).\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 5, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 688201214, 'comment_body': ""I don't think we should decide that based on the errors we get, they are apparently very arbitrary. Set it to modules tab for now and the errors need to be dealt with separately (not urgent). The ChangeMapSize error reporting could just be removed, it's not needed and the GTK errors are likely coming from the statusbar, so that's again differnt."", 'comment_created': datetime.datetime(2021, 8, 13, 2, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '1cd4c5364c5ac6cf2761909738354ae89c2eb309', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ec615cb080083c6d91a1cb97b2d24ad26c7d2a3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c6bcb601be9d5284391baf4e627e61f92908ce4c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '607e68c34d54b1cb3096fdb721d3295802aa495d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cf905b4401aa31a3a8e4f36a3134a13fc84e3c66', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
705511599,wxGUI/Single-Window: New change page event for AuiNotebook,,True,1780,https://api.github.com/repos/OSGeo/grass/pulls/1780,https://github.com/OSGeo/grass/pull/1780,closed,12,4,2,12,0,4,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-06 14:05:31+00:00,2021-08-13 02:35:21+00:00,563390.0,"6 days, 12:29:50","[{'comment_id': 684578641, 'comment_body': 'There is _onMapDisplayFocus in lmgr/frame.py, which seems to be doing what you need, why this new method?', 'comment_created': datetime.datetime(2021, 8, 7, 3, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686127461, 'comment_body': 'The _onMapDisplayFocus cannot be used as is written now due to the notebookLayerPage parameter. We also make only one Bind to map notebook not many Binds for each Display frame. So the situation is a bit different now.\r\n\r\nBut at least I a bit adapted OnMapNotebookPageChanged method to use a condition from _onMapDisplayFocus (we talked about it in e-mail). Please, write me what you think. _onMapDisplayFocus is not used anywhere else, so I think we no longer need it.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 686220677, 'comment_body': ""What exception is actually thrown here? It's better to use the specific one to make it more clear what it is trying to do."", 'comment_created': datetime.datetime(2021, 8, 10, 18, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686732086, 'comment_body': 'It is the TypeError. If I understand it right, the OnMapNotebookChanged is also called during the processing of NewDisplay method. The map panel is already known but the layertree not, so thats the reason why it throws this exception.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '30c8e8aa461b3eeb146433bb51b341d3db2b5132', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fbb9593b25f2f7472c197c31dad6d10508bf16a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4a66b7b8197c5212d602da603b657598ad09f642', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68375dad7bd3675862620c651497b14e1dfed306', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1b1e225890fbc21a48c8745da7f05479182738a7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cb3e24de21e063d7d44d8936093c5eefa32f18b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fa5d81e10eb5980d166e031485b622a517dfe98', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feb2c1b77252ac9e540aebf42e9a2cbeb4dc8abb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e27abb2a8af398a24cdd625a32f7a655b736611', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8d85b216fef373c369c68f671adf16017b1522d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a085b55fc8510142918bb88b45722061d920b8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '428c3a5ed02ef9ea68047d98fff728833d3e380c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
712175076,wxGUI/Single-Window: New close page event for AuiNotebook,"This PR addresses several smaller tasks:

- [x] Implements a new aui.EVT_AUINOTEBOOK_PAGE_CLOSE event
- [x] Fixes OnDisplayClose and OnDisplayCloseAll event handlers which are important for the closing of a map notebook page from File menu
- [x] Update list of shorcuts so that the map notebook page can be also closed by CTRL+W shortcut

It moves all OnCloseWindow logic to NewDisplay method.
Multi-Window GUI is not influenced by any changes.

By merging this PR the Issue https://github.com/OSGeo/grass/issues/1750 will be closed.",False,1789,https://api.github.com/repos/OSGeo/grass/pulls/1789,https://github.com/OSGeo/grass/pull/1789,closed,64,19,2,3,2,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-13 08:39:56+00:00,2022-01-13 11:08:43+00:00,13228127.0,"153 days, 2:28:47",[],"[{'commit_sha': '1e58b89703982a3250a37acb258652c8eea977da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae09c8a0f780241ef53b161f89e663792b005cd8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '56f6e8bbcea6c0bde3e15cb6990cfbab6cf297d8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
707493182,wxGUI: NewDisplay button moved to LMToolsToolbar,"On the video call on August 5th, we decided to put the NewDisplay button to LMToolsToolbar. It is a more straightforward way how to approach this function, especially for a new Single-Window GUI. But it is also a more advantageous solution for a current Multi-Window layout.

Before:
![pred](https://user-images.githubusercontent.com/49241681/128902304-ad6aa953-df87-4814-9c3d-67e71893ebf5.PNG)
The NewDisplay button is a part of the toolbar for the Display panel.

After:
![po](https://user-images.githubusercontent.com/49241681/128902543-d1500836-53ad-4485-9c3a-5ea745fa9ba6.PNG)
The NewDisplay button is a part of the upper Tools toolbar, so it is available always regardless of which notebook tab is active.

",True,1783,https://api.github.com/repos/OSGeo/grass/pulls/1783,https://github.com/OSGeo/grass/pull/1783,closed,5,5,1,1,0,0,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-10 17:01:25+00:00,2021-08-11 03:14:41+00:00,36796.0,10:13:16,[],"[{'commit_sha': 'b395258232ecdfb3a4eb174a523551e7c3d8789a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
709087062,wxGUI: Each layertree has its own display toolbar,"Before:
![Screenshot from 2021-08-11 09-53-50](https://user-images.githubusercontent.com/49241681/129052297-168e814e-0d3a-4531-8219-f7e8ae03e49b.png)

After:
![Screenshot from 2021-08-11 09-29-24](https://user-images.githubusercontent.com/49241681/129051790-c1bfde51-852d-4446-bd0c-a8b7942adda5.png)
",True,1785,https://api.github.com/repos/OSGeo/grass/pulls/1785,https://github.com/OSGeo/grass/pull/1785,closed,23,54,2,3,2,0,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-11 14:55:00+00:00,2021-08-19 02:13:40+00:00,645520.0,"7 days, 11:18:40",[],"[{'commit_sha': '4fc8c2c6be868258a4195b70ae269cf6942e4694', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '531fca482e025ae0fb954e7a2acd60bf18baf519', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fcd187f80dc3239dfcd9c2c0c49b6d317c3117df', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
714117350,wxGUI: new design for GNotebooks,"This PR creates a new design without using an old green color for GNotebooks.
It involves GNotebooks for lmgr, nviz, vnet and dmgr (all notebooks which use globalvar.FNPageColor variable).
I think it is a good idea to have the look of all these notebooks uniform.

Multi-Window GUI lmgr notebook before:
![normalmulti](https://user-images.githubusercontent.com/49241681/129676879-39202dbb-474d-4254-9720-05cfc1489997.PNG)


",True,1801,https://api.github.com/repos/OSGeo/grass/pulls/1801,https://github.com/OSGeo/grass/pull/1801,closed,62,98,13,11,13,6,4,0,"[{'name': 'enhancement'}, {'name': 'question'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-17 10:29:57+00:00,2021-10-05 14:42:36+00:00,4248759.0,"49 days, 4:12:39","[{'comment_id': 698121505, 'comment_body': 'Please update the docstring above (system colors).', 'comment_created': datetime.datetime(2021, 8, 30, 2, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 698137587, 'comment_body': ""Could you completely remove this style? It doesn't make sense to leave it there, it's very similar to the simple top style."", 'comment_created': datetime.datetime(2021, 8, 30, 3, 26, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 702535321, 'comment_body': 'I wanted to remove the Fancy green, not Basic left, what is supposed to be Normal style?', 'comment_created': datetime.datetime(2021, 9, 6, 3, 10, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 702535466, 'comment_body': 'keep this', 'comment_created': datetime.datetime(2021, 9, 6, 3, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 702535552, 'comment_body': 'remove this', 'comment_created': datetime.datetime(2021, 9, 6, 3, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 702536075, 'comment_body': 'Hmm, uses system colours and does not respect system colors at the same time?', 'comment_created': datetime.datetime(2021, 9, 6, 3, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '7c9190e8147cac9fa58739e6b64eaa9f61114e68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73d0fcac28ea4aac154c1d5c05d31f028622e98d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37b30881c74696e532efd9f3283605b3e77d3dc2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ed7426de08215dd8a08acaafd976f4108f7f4510', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1d925926978204ebcdaacd15cd517f48b086cb4f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5b661ca8ca7f7dd5e8f1715503405c42fb013425', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5c407991eb3aaf897964f4b299150bf4473a6ba5', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57a4627593f4512b825d5c00d60e33575b346f63', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bceec205dc9e32cdab59be04fd47fcee04f3fd93', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '302cf48eb5e476318740d842e3ffaede42d4f5cf', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'af3cf7cd1425090c4176a09d579a02a661c0b706', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
650629038,wxGUI: Split widget initialization from notebook logic,"Splits widget initialization (data catalog, display etc.) from notebook logic. Makes smaller methods for each widget creation.",True,1591,https://api.github.com/repos/OSGeo/grass/pulls/1591,https://github.com/OSGeo/grass/pull/1591,closed,54,30,1,4,0,3,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-05-22 13:34:43+00:00,2021-05-30 04:19:08+00:00,657865.0,"7 days, 14:44:25","[{'comment_id': 638956414, 'comment_body': ""Unless createWidgets is used also elesewhere, I think it's unnecessary function, I would just put there its content directly, it will be more readable."", 'comment_created': datetime.datetime(2021, 5, 25, 16, 16, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 638957073, 'comment_body': ""This function probably shouldn't return the notebook."", 'comment_created': datetime.datetime(2021, 5, 25, 16, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 638958116, 'comment_body': 'The work widget seems to be redundant in the function names.', 'comment_created': datetime.datetime(2021, 5, 25, 16, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'b12c11f761c81833b1feacd52b5b3e8f2ca2eb8d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '13bab7e4acf5128d799450ca57409ce079756ac9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db3a815f59ccab674e1bfab1655d9cf0dd83fd17', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd9f0ecf15ac5cb6cb2620112a9eb269cebea9124', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
657760373,wxGUI: create parallel wx.frame for Single Window layout development,"This PR serves for preparing a coding environment for building a separate Single Window application. It creates a copy of GMFrame which is ready for adapting and developing a new Single Window Layout solution through Google Summer of Code.
",True,1604,https://api.github.com/repos/OSGeo/grass/pulls/1604,https://github.com/OSGeo/grass/pull/1604,closed,2257,2,3,12,6,2,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-05-30 17:36:47+00:00,2021-06-04 15:42:35+00:00,425148.0,"4 days, 22:05:48","[{'comment_id': 644006035, 'comment_body': 'Could you please fix these instead of ignoring them?', 'comment_created': datetime.datetime(2021, 6, 2, 14, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 645571657, 'comment_body': 'Fixed. :-)', 'comment_created': datetime.datetime(2021, 6, 4, 13, 29, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '799de72ba07001e2b047a6987b2d712927766139', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42e3f8d1d8d616cdfb6eeb9d91468cf4ee91fdfe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '48494583320b5df712d2143c68550115fe9b6b59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '516e5ec0a36400296ee91abc0a9419b663b02fe5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '511c87a95b2ce71cde6f23a65c293cee90aea0cb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f52bded2c561333412651a27abaa0203dda71c1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6f2198d5edc977294e083faf078339e33a73c156', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b2e970dd95556a176cd2684e45f137c8645e1cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc4efb434818932cc695fd9eb8c134fa9b1d3667', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '71dae221425a0de4178c48f76d69aa20506a2b9a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eeee30f83f9928197c330a94732915c98341a7db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8c019b15d97f069be7a4e482054bf0faa927bade', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
654594668,wxGUI: easier switching between locations (GRASS GIS 8),"When switching to a map layer in a different location this message will appear:

![Map layer in different location_004](https://user-images.githubusercontent.com/49241681/119783444-d3a15380-be92-11eb-8b85-b6b43c6a851b.png)


",True,1598,https://api.github.com/repos/OSGeo/grass/pulls/1598,https://github.com/OSGeo/grass/pull/1598,closed,28,13,1,7,2,14,2,0,"[{'name': 'enhancement'}, {'name': 'GUI'}]",2021-05-27 07:27:08+00:00,2021-05-31 19:38:54+00:00,389506.0,"4 days, 12:11:46","[{'comment_id': 641578553, 'comment_body': 'The reason I used the word ""disappear"" in the original issue is that it expresses well the confusion a user may have when the layers are unloaded, i.e., something unexpected happened. Furthermore, ""disappear"" in this context may sound as ""underlying data will be deleted"". I don\'t have another suggestion at this point, but Perhaps mentioning again the reason for it in connection with the change in wording can bring some understanding.', 'comment_created': datetime.datetime(2021, 5, 28, 14, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 641877233, 'comment_body': 'What is the reason for moving this if out of the function?', 'comment_created': datetime.datetime(2021, 5, 29, 2, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 641893333, 'comment_body': 'The reason is that we display a layer only if a switching is successful. I had another idea how to solve this issue - make a optional argument display_layer for SwitchMapset method. But finally I realized that SwitchMapset is something not much related to displaying layer.\nNow code also seems to me a bit clearer because SwitchMapset really switch in all cases.\nMaking a display_layer argument would be much shorter in code but I think not much meaningful in terms of logic.\nOr we could return True or False from SwitchMapset but I am not sure If this function should return something, It is more of procedure. What do you think @petrasovaa ?', 'comment_created': datetime.datetime(2021, 5, 29, 5, 32, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 642012818, 'comment_body': 'I see. I would be in favor of returning true/false since we need to use can_switch_mapset_interactive anyway every time we want to switch it, so it may be better have it in the SwitchMapset method.', 'comment_created': datetime.datetime(2021, 5, 30, 3, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 642013217, 'comment_body': 'Maybe something along the lines ""All current Map Displays will be closed""?', 'comment_created': datetime.datetime(2021, 5, 30, 3, 38, 19, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 642078665, 'comment_body': 'And put it on the next line? Now it looks as follows: ![switch](https://user-images.githubusercontent.com/49241681/120106511-78ef4c80-c15d-11eb-92da-0623421ba425.PNG)\r\n', 'comment_created': datetime.datetime(2021, 5, 30, 13, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 642110966, 'comment_body': ""Just a small change for consistency, it should be quoted as `<location>`, not `'location'`."", 'comment_created': datetime.datetime(2021, 5, 30, 18, 21, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 642114753, 'comment_body': '`{0} {1} {2}` should be `{map_name} {map_mapset} {map_location}`?', 'comment_created': datetime.datetime(2021, 5, 30, 18, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 642114955, 'comment_body': 'This looks like ""will be closed in any case"". I think the new paragraph needs to be between ""...the current location"" and ""All current Map..."".', 'comment_created': datetime.datetime(2021, 5, 30, 19, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 642357589, 'comment_body': 'Ok, then I would suggest this formulation:\r\n![easier_switch](https://user-images.githubusercontent.com/49241681/120173687-90cddb80-c204-11eb-9ab7-c1843b31b522.PNG)\r\n\r\n', 'comment_created': datetime.datetime(2021, 5, 31, 9, 38, 7, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 642479250, 'comment_body': 'That message sounds a bit intimidating to me... Can we say something like: \r\n\r\n```\r\nMap <bla> is not in the current location. To be able to display it you need to switch to <blabla> location. \r\nNote that if you switch there all current Map Displays will be closed. \r\n\r\nDo you want to switch anyway?\r\n```\r\n\r\nToo long? My intention is to ""explain"" in short that to display a map from a different location the user needs to switch there.\r\n', 'comment_created': datetime.datetime(2021, 5, 31, 13, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'veroandreo', 'type': 'User'}, {'comment_id': 642593870, 'comment_body': 'I like your idea more Vero. It is true that it is quite long but we need to fully explain it. @petrasovaa, @wenzeslaus  do you agree with that? ', 'comment_created': datetime.datetime(2021, 5, 31, 16, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 642603306, 'comment_body': '> That message sounds a bit intimidating to me... Can we say something like:\r\n> \r\n> ```\r\n> Map <bla> is not in the current location. To be able to display it you need to switch to <blabla> location. \r\n> Note that if you switch there all current Map Displays will be closed. \r\n> \r\n> Do you want to switch anyway?\r\n> ```\r\n> \r\n> Too long? My intention is to ""explain"" in short that to display a map from a different location the user needs to switch there.\r\n\r\nI think @veroandreo \'s formulation is a bit more appealing. However, I think the button labels are too wordy. What about `Cancel` (as default) and `Switch`?', 'comment_created': datetime.datetime(2021, 5, 31, 17, 1, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nilason', 'type': 'User'}, {'comment_id': 642608911, 'comment_body': ""After Nilason's and Vero's notes :-) :\r\n![switch](https://user-images.githubusercontent.com/49241681/120225070-e033fc00-c244-11eb-9259-8736b3b433a2.PNG)\r\n"", 'comment_created': datetime.datetime(2021, 5, 31, 17, 17, 53, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': 'c716c88d2ef820f02dd970047b390ed21ee07d0d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '07da676654678950f39b7c7cf56e4710854ed2e8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '78c4bf19279869a21861a36c671944d8fa159af0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '07acfea40de9c324cc1e59e3f78da867181f0a76', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3639fd354d52883985680bf2265864b9bf5157fa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '720bff5cd49081bd7d5a2d4815f10cbe7b97c7ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '591cd3063fd9bede87118c396c3c3afbacc6f773', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
662547142,wxGUI: Single-Window GUI: arrangement of basic widgets,"This PR deals with the base settings for the full screen layout with main dockable panes. 
Map Displays as well as 3D view are not solved in this PR - we just need to prepare the base structure here.

There are two main things that we need to figure out:

- Any content ""not dockable"" pane is necessary in terms of implementation. So first we need to decide whether to employ Data Catalog as the content pane.  The advantage is that all other panes would be dockable then. :-) And also after changes made last year the Data Catalog is kind of the center point of GRASS so it could make sense to have it as the content  pane. The con is that visually it might look a bit strange. There the layout I suggest so far in this PR (using wx.AUI):

![tmploc-PERMANENT - GRASS GIS_010](https://user-images.githubusercontent.com/49241681/120901314-a88bd200-c5ff-11eb-957e-770806292f40.png)

- Second important thing is to decide which library to use. We have two options: the traditional **wx.AUI** C++ library and the newer **wx.lib.agw.aui** python library. I tried to compared them a bit. There is a bit strange thing about wx.AUI -> MinimizeButton method does not work to me although according to https://wxpython.org/Phoenix/docs/html/wx.aui.AuiPaneInfo.html#wx.aui.AuiPaneInfo.MinimizeButton documentation, it should work. :-( The second thing I have come up with so far is the missing guide docking styles such as nice aui.AUI_MGR_WHIDBEY_DOCKING_GUIDES style.
Both of these functions work for wx.lib.agw.aui.

But there may be (and probably are) more things that are not implemented for wx.AUI. But I think we do not have to make the decision about the library right now.



",True,1621,https://api.github.com/repos/OSGeo/grass/pulls/1621,https://github.com/OSGeo/grass/pull/1621,closed,156,155,1,7,11,8,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-05 18:26:24+00:00,2021-06-13 19:04:07+00:00,693463.0,"8 days, 0:37:43","[{'comment_id': 646063619, 'comment_body': 'change to BindEvents', 'comment_created': datetime.datetime(2021, 6, 6, 2, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 649662667, 'comment_body': 'There is a note warning about using this function in the [documentation](https://wxpython.org/Phoenix/docs/html/wx.functions.html#wx.DisplaySize), so I suggest to follow it.', 'comment_created': datetime.datetime(2021, 6, 11, 3, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 649997435, 'comment_body': 'Ok, but then I think it will be a bit more complex, shell I take into consideration two monitors or is it okay if I set the size according to the first monitor? I am in the process of preparing Ubuntu on my second laptop, so now on my VirtualBox I am limited in terms of trying startup for different monitors set as default. :-( But if I get it right, [0] may represent the primary monitor anyway.', 'comment_created': datetime.datetime(2021, 6, 11, 13, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 650001127, 'comment_body': 'I am not sure if [0] really means primary, it is not written anywhere... if not it could be possible to determine which monitor it is according to GetPosition, but unfortunately, I do not have the second monitor to try it out.', 'comment_created': datetime.datetime(2021, 6, 11, 13, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 650009637, 'comment_body': 'mmm.. actually, neither on them work (neither wx.DisplaySize nor wx.Display(0).GetGeometry().Get(Size)... I need to have self.Maximize(True) to extend GRASS on the whole screen. I will have a look on it again tomorrow.', 'comment_created': datetime.datetime(2021, 6, 11, 14, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 650024986, 'comment_body': 'This should be `wx.Display().GetGeometry()` which gives you the wx.Rect of the display the application was started on.\r\n\r\nBut `wx.DisplaySize()` gives me (3520, 1080) when I have 2 displays.', 'comment_created': datetime.datetime(2021, 6, 11, 14, 29, 54, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 650026535, 'comment_body': ""Also you shouldn't need this here since you Maximize the window later, no?"", 'comment_created': datetime.datetime(2021, 6, 11, 14, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 650385290, 'comment_body': 'Ok. I already get it. :-)  We do not have to deal with different sizes of 2 displays at all.', 'comment_created': datetime.datetime(2021, 6, 12, 12, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': 'd3003e8fb1eeadef75cd69f300e5429f12665a24', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4894f8da22036cd12284c09fc7d3721b9d681c5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bd8860c337a04237de5af4730f16ed3a8a199cb5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f4086205918124b363332990031bfe1c70f13bc1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7e1d0464273626410157324945ff7c4023fa3941', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '44d4eebd2d5969058c46329459119ae9f01282e5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '76a7e4b5a0cd196d8ebe37d7fb16d778c59b888e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
668864914,wxGUI: SaveToFile() missing 1 required positional argument,"missing argument added

fixes #1636",True,1637,https://api.github.com/repos/OSGeo/grass/pulls/1637,https://github.com/OSGeo/grass/pull/1637,closed,1,1,1,1,0,0,2,0,"[{'name': 'bug'}, {'name': 'GUI'}]",2021-06-12 13:06:29+00:00,2021-06-12 20:00:24+00:00,24835.0,6:53:55,[],"[{'commit_sha': '0ca942e86432cf2564aec5934959d5f8f20c92fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
670523148,wxGUI: refactoring: build display status bar based on wx.StatusBar widget,"This PR redesigning the form of display map status bar implementation.
It was originally created directly using CreateStatusBar function, which is, however, directly connected to the wx.Frame widget. 
For further implementation of the SingleLayout, we need to replace MapFrame widget by MapPanel widget. 
MapPanel widget does not support CreateStatusBar function.

Reimplemented status bar in a Map Display for a better context:
![Map Display 1_024](https://user-images.githubusercontent.com/49241681/122086346-3cf8f000-cdc9-11eb-8235-f49cb8a26d4b.png)

Original status bar:
![Map Display 1_023](https://user-images.githubusercontent.com/49241681/122083676-b04d3280-cdc6-11eb-8a60-f3dc65558c1c.png)
",True,1646,https://api.github.com/repos/OSGeo/grass/pulls/1646,https://github.com/OSGeo/grass/pull/1646,closed,34,13,3,10,2,5,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-15 15:39:46+00:00,2021-06-16 16:38:36+00:00,89930.0,"1 day, 0:58:50","[{'comment_id': 652323712, 'comment_body': 'Get rid of the panel, just work with the statusbar directly.', 'comment_created': datetime.datetime(2021, 6, 16, 3, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652323973, 'comment_body': 'add PaneBorder(False)', 'comment_created': datetime.datetime(2021, 6, 16, 3, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652324679, 'comment_body': 'I suggest to override SetStatusText function (meaning create your own where you call self.statusbar.SetStatusText)', 'comment_created': datetime.datetime(2021, 6, 16, 3, 34, 59, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652729704, 'comment_body': 'It\'s enough to show/hide the pane. Also I would remove the unused show functions from sbManager, but check if they are really unused.\r\n\r\n```suggestion\r\n    def ShowStatusbar(self, show):\r\n        """"""Show/hide pane associated with statusbar""""""\r\n        self._mgr.GetPane(""statusbar"").Show(show)\r\n        self._mgr.Update()\r\n\r\n    def IsStatusbarShown(self):\r\n        """"""Check if statusbar is shown""""""\r\n        return self._mgr.GetPane(""statusbar"").IsShown()\r\n\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 14, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652850258, 'comment_body': 'I think it works fine now.', 'comment_created': datetime.datetime(2021, 6, 16, 16, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '6ff34c131bf9b68172aaae44493c588728bca92c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9188ea133743c044a876534cb80805b621530f5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cf49cc312df7111d62aa609f1709bdd47a38f886', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ea2087339635b88da8f2506fdc6f21a843e43120', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ad6898713e516f29c69d4f4736a7e0b0f968467', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dd4fb900dfdd87fed63049392442a9a106248321', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3c438caa607d6acfc05ab679a9d34d3d9fcd463b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '83ffe2b0583d6e2782e86c570848d4ff6953e167', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a23950dc7b37a22f73d4f2c6473fa1a109ff072', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eb40179ce56543d9665f883d497e18e6fd92d7a6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
673912684,wxGUI: Workspace save fails with SbManager has no IsShown,"I tried to find all occurrences by grep -Irn ""anager.Show"" and grep -Irn ""anager.IsShown"", now it should be ok.",True,1665,https://api.github.com/repos/OSGeo/grass/pulls/1665,https://github.com/OSGeo/grass/pull/1665,closed,4,4,3,1,0,0,3,0,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-19 17:48:43+00:00,2021-06-20 02:45:39+00:00,32216.0,8:56:56,[],"[{'commit_sha': 'e6a1cb25120df86fc834dc6766cab4b16e709327', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
673599586,wxGUI: refactoring: Map Display inheriting from wx.Panel,WIP,False,1656,https://api.github.com/repos/OSGeo/grass/pulls/1656,https://github.com/OSGeo/grass/pull/1656,closed,0,0,0,0,0,1,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-18 16:27:34+00:00,2021-06-22 14:07:32+00:00,337198.0,"3 days, 21:39:58","[{'comment_id': 654738528, 'comment_body': 'You need to specify parent here I think', 'comment_created': datetime.datetime(2021, 6, 19, 2, 58, 59, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]",[],Linda Karlovska,49241681,,User,,12,,1,4
673599586,wxGUI: refactoring: Map Display inheriting from wx.Panel,WIP,False,1656,https://api.github.com/repos/OSGeo/grass/pulls/1656,https://github.com/OSGeo/grass/pull/1656,closed,0,0,0,0,0,1,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-18 16:27:34+00:00,2021-06-22 14:07:32+00:00,337198.0,"3 days, 21:39:58","[{'comment_id': 654738528, 'comment_body': 'You need to specify parent here I think', 'comment_created': datetime.datetime(2021, 6, 19, 2, 58, 59, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]",[],Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
685861352,wxGUI/MapSwipe: Show comp. extent option in statusbar does not work #1714,,True,1717,https://api.github.com/repos/OSGeo/grass/pulls/1717,https://github.com/OSGeo/grass/pull/1717,closed,3,3,1,1,0,0,3,0,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-07-08 09:52:24+00:00,2021-07-08 13:45:57+00:00,14013.0,3:53:33,[],"[{'commit_sha': '10c38e9ac9e54a26f2a07241eaed8b707b1d9d00', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
692065714,wxGUI: Single-Window GUI: Integrate new map display wx.Panels into a AuiNotebook center pane #1735,"This PR follows up the changes that are about to be merged - https://github.com/OSGeo/grass/pull/1729, https://github.com/OSGeo/grass/pull/1689, https://github.com/OSGeo/grass/pull/1675.

So far, it is based on my local merged branch which already knows these changes. But I think even without the mentor's testing it makes sense to start working on this as later we can rebase it.

This PR aims at the basic integration of the new Map Display into the center AuiNotebook pane. Apart from this integration, it repairs existing event handlers and methods. It does not add any new ones.

As we have basically several small things for coding, I have eventually decided to solve them in this one PR. Some of them require changing of one, two rows, so it probably does not make sense to have more than one PR.

Tasks are as follow:

- [x]  Remove methods related to the depreciated Map Display wx.Frame.

- [x]  Fix behaviour when adding or switching to a new location (now it does not close previously opened map displays)

- [x]  Make a newly added AuiNotebook tab active when adding a new Display tab.

- [x]  Edit an existing closing event for the Display tab. This event should close the related AuiNotebook tab.

- [x]  Edit an existing event for the switching between Display tabs. This event should make the related AuiNotebook tab active.

- [x] Fix an existing RenameDisplay event handler.

- [x] Fix adding and removing of the 3D View pane. Decide where should this tab go when launching 3D for the first time.
",True,1732,https://api.github.com/repos/OSGeo/grass/pulls/1732,https://github.com/OSGeo/grass/pull/1732,closed,190,144,1,5,0,3,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-07-18 10:24:46+00:00,2021-07-30 13:16:40+00:00,1047114.0,"12 days, 2:51:54","[{'comment_id': 674476583, 'comment_body': ""Let's just pick one here and set it directly."", 'comment_created': datetime.datetime(2021, 7, 22, 3, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674478467, 'comment_body': ""style=wx.EXPAND doesn't look correct to me, is that in the documentation somewhere?"", 'comment_created': datetime.datetime(2021, 7, 22, 3, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674941547, 'comment_body': 'Ok. I have chosen aui.AuiDefaultTabArt() (https://docs.wxpython.org/wx.lib.agw.aui.tabart.AuiDefaultTabArt.html#wx.lib.agw.aui.tabart.AuiDefaultTabArt)', 'comment_created': datetime.datetime(2021, 7, 22, 15, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '60d55fc7c3a6a1064d199790713305cc968eb3ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75a1a1f75646e4bf3603b55e199edbeed1d96051', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7513c666f7bb56e983e902fea2f157f27514cf82', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c2b95204f03819666300c0ffa8c04915162a756', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '66f7d9cd5389a739b01e695e2e2c649a0dc4ec22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
692065714,wxGUI: Single-Window GUI: Integrate new map display wx.Panels into a AuiNotebook center pane #1735,"This PR follows up the changes that are about to be merged - https://github.com/OSGeo/grass/pull/1729, https://github.com/OSGeo/grass/pull/1689, https://github.com/OSGeo/grass/pull/1675.

So far, it is based on my local merged branch which already knows these changes. But I think even without the mentor's testing it makes sense to start working on this as later we can rebase it.

This PR aims at the basic integration of the new Map Display into the center AuiNotebook pane. Apart from this integration, it repairs existing event handlers and methods. It does not add any new ones.

As we have basically several small things for coding, I have eventually decided to solve them in this one PR. Some of them require changing of one, two rows, so it probably does not make sense to have more than one PR.

Tasks are as follow:

- [x]  Remove methods related to the depreciated Map Display wx.Frame.

- [x]  Fix behaviour when adding or switching to a new location (now it does not close previously opened map displays)

- [x]  Make a newly added AuiNotebook tab active when adding a new Display tab.

- [x]  Edit an existing closing event for the Display tab. This event should close the related AuiNotebook tab.

- [x]  Edit an existing event for the switching between Display tabs. This event should make the related AuiNotebook tab active.

- [x] Fix an existing RenameDisplay event handler.

- [x] Fix adding and removing of the 3D View pane. Decide where should this tab go when launching 3D for the first time.
",True,1732,https://api.github.com/repos/OSGeo/grass/pulls/1732,https://github.com/OSGeo/grass/pull/1732,closed,190,144,1,5,0,3,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-07-18 10:24:46+00:00,2021-07-30 13:16:40+00:00,1047114.0,"12 days, 2:51:54","[{'comment_id': 674476583, 'comment_body': ""Let's just pick one here and set it directly."", 'comment_created': datetime.datetime(2021, 7, 22, 3, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674478467, 'comment_body': ""style=wx.EXPAND doesn't look correct to me, is that in the documentation somewhere?"", 'comment_created': datetime.datetime(2021, 7, 22, 3, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674941547, 'comment_body': 'Ok. I have chosen aui.AuiDefaultTabArt() (https://docs.wxpython.org/wx.lib.agw.aui.tabart.AuiDefaultTabArt.html#wx.lib.agw.aui.tabart.AuiDefaultTabArt)', 'comment_created': datetime.datetime(2021, 7, 22, 15, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '60d55fc7c3a6a1064d199790713305cc968eb3ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75a1a1f75646e4bf3603b55e199edbeed1d96051', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7513c666f7bb56e983e902fea2f157f27514cf82', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c2b95204f03819666300c0ffa8c04915162a756', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '66f7d9cd5389a739b01e695e2e2c649a0dc4ec22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
692065714,wxGUI: Single-Window GUI: Integrate new map display wx.Panels into a AuiNotebook center pane #1735,"This PR follows up the changes that are about to be merged - https://github.com/OSGeo/grass/pull/1729, https://github.com/OSGeo/grass/pull/1689, https://github.com/OSGeo/grass/pull/1675.

So far, it is based on my local merged branch which already knows these changes. But I think even without the mentor's testing it makes sense to start working on this as later we can rebase it.

This PR aims at the basic integration of the new Map Display into the center AuiNotebook pane. Apart from this integration, it repairs existing event handlers and methods. It does not add any new ones.

As we have basically several small things for coding, I have eventually decided to solve them in this one PR. Some of them require changing of one, two rows, so it probably does not make sense to have more than one PR.

Tasks are as follow:

- [x]  Remove methods related to the depreciated Map Display wx.Frame.

- [x]  Fix behaviour when adding or switching to a new location (now it does not close previously opened map displays)

- [x]  Make a newly added AuiNotebook tab active when adding a new Display tab.

- [x]  Edit an existing closing event for the Display tab. This event should close the related AuiNotebook tab.

- [x]  Edit an existing event for the switching between Display tabs. This event should make the related AuiNotebook tab active.

- [x] Fix an existing RenameDisplay event handler.

- [x] Fix adding and removing of the 3D View pane. Decide where should this tab go when launching 3D for the first time.
",True,1732,https://api.github.com/repos/OSGeo/grass/pulls/1732,https://github.com/OSGeo/grass/pull/1732,closed,190,144,1,5,0,3,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-07-18 10:24:46+00:00,2021-07-30 13:16:40+00:00,1047114.0,"12 days, 2:51:54","[{'comment_id': 674476583, 'comment_body': ""Let's just pick one here and set it directly."", 'comment_created': datetime.datetime(2021, 7, 22, 3, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674478467, 'comment_body': ""style=wx.EXPAND doesn't look correct to me, is that in the documentation somewhere?"", 'comment_created': datetime.datetime(2021, 7, 22, 3, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674941547, 'comment_body': 'Ok. I have chosen aui.AuiDefaultTabArt() (https://docs.wxpython.org/wx.lib.agw.aui.tabart.AuiDefaultTabArt.html#wx.lib.agw.aui.tabart.AuiDefaultTabArt)', 'comment_created': datetime.datetime(2021, 7, 22, 15, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '60d55fc7c3a6a1064d199790713305cc968eb3ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75a1a1f75646e4bf3603b55e199edbeed1d96051', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7513c666f7bb56e983e902fea2f157f27514cf82', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c2b95204f03819666300c0ffa8c04915162a756', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '66f7d9cd5389a739b01e695e2e2c649a0dc4ec22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
692065714,wxGUI: Single-Window GUI: Integrate new map display wx.Panels into a AuiNotebook center pane #1735,"This PR follows up the changes that are about to be merged - https://github.com/OSGeo/grass/pull/1729, https://github.com/OSGeo/grass/pull/1689, https://github.com/OSGeo/grass/pull/1675.

So far, it is based on my local merged branch which already knows these changes. But I think even without the mentor's testing it makes sense to start working on this as later we can rebase it.

This PR aims at the basic integration of the new Map Display into the center AuiNotebook pane. Apart from this integration, it repairs existing event handlers and methods. It does not add any new ones.

As we have basically several small things for coding, I have eventually decided to solve them in this one PR. Some of them require changing of one, two rows, so it probably does not make sense to have more than one PR.

Tasks are as follow:

- [x]  Remove methods related to the depreciated Map Display wx.Frame.

- [x]  Fix behaviour when adding or switching to a new location (now it does not close previously opened map displays)

- [x]  Make a newly added AuiNotebook tab active when adding a new Display tab.

- [x]  Edit an existing closing event for the Display tab. This event should close the related AuiNotebook tab.

- [x]  Edit an existing event for the switching between Display tabs. This event should make the related AuiNotebook tab active.

- [x] Fix an existing RenameDisplay event handler.

- [x] Fix adding and removing of the 3D View pane. Decide where should this tab go when launching 3D for the first time.
",True,1732,https://api.github.com/repos/OSGeo/grass/pulls/1732,https://github.com/OSGeo/grass/pull/1732,closed,190,144,1,5,0,3,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-07-18 10:24:46+00:00,2021-07-30 13:16:40+00:00,1047114.0,"12 days, 2:51:54","[{'comment_id': 674476583, 'comment_body': ""Let's just pick one here and set it directly."", 'comment_created': datetime.datetime(2021, 7, 22, 3, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674478467, 'comment_body': ""style=wx.EXPAND doesn't look correct to me, is that in the documentation somewhere?"", 'comment_created': datetime.datetime(2021, 7, 22, 3, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674941547, 'comment_body': 'Ok. I have chosen aui.AuiDefaultTabArt() (https://docs.wxpython.org/wx.lib.agw.aui.tabart.AuiDefaultTabArt.html#wx.lib.agw.aui.tabart.AuiDefaultTabArt)', 'comment_created': datetime.datetime(2021, 7, 22, 15, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '60d55fc7c3a6a1064d199790713305cc968eb3ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75a1a1f75646e4bf3603b55e199edbeed1d96051', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7513c666f7bb56e983e902fea2f157f27514cf82', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c2b95204f03819666300c0ffa8c04915162a756', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '66f7d9cd5389a739b01e695e2e2c649a0dc4ec22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
691621749,wxGUI: remove deprecated methods from MapDisplay,"Replaces deprecated methods IsStandalone and GetLayerManager from map display with giface and signals.

@lindakladivova, this may be little difficult to review, but even testing would be helpful.",True,1729,https://api.github.com/repos/OSGeo/grass/pulls/1729,https://github.com/OSGeo/grass/pull/1729,closed,106,174,20,8,2,0,1,0,[{'name': 'GUI'}],2021-07-16 16:48:06+00:00,2021-07-26 02:27:42+00:00,812376.0,"9 days, 9:39:36",[],"[{'commit_sha': 'd10acb0ce8030b8fae24051e46b978c5f2ab2554', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1729e546da472abf15fe8e10a048b03431822a6', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be279759393b601a2edd98699c45be45ac108793', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff0ca3b5367e6e7d3dd4f9f662ef4ab685ffbc48', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5b7132e72eeaf2612c972196f8e23f8ccc191c9', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '450abb9346ac08ab6a4041cd62bc56dc0b2ee5c6', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a81bf0c59b0e96e0c50e8b1655e575f52a4b1c18', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d8f06e15ee52c47ba55ce169f75b690bbe93cf7', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Anna Petrasova,7494312,,User,,58,,0,56
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
703364590,wxGUI/Single-Window: arrange a startup GUI,"This PR implements the startup GUI arrangement according to the third proposal from https://github.com/OSGeo/grass/issues/1747 which looks as follows:
![126859885-4cc53bf0-293c-42e5-9716-ff51eb7e0e83](https://user-images.githubusercontent.com/49241681/128175406-0ad69859-4bdb-4bd7-b908-7a5acc83dfd4.png)
",True,1775,https://api.github.com/repos/OSGeo/grass/pulls/1775,https://github.com/OSGeo/grass/pull/1775,closed,14,6,1,5,3,7,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-04 11:59:38+00:00,2021-08-17 16:33:02+00:00,1139604.0,"13 days, 4:33:24","[{'comment_id': 683098555, 'comment_body': ""You can get the notebooks like this:\r\n```suggestion\r\n        notebook = self._auimgr.GetNotebooks()[0]\r\n```\r\nbut it's also not ideal."", 'comment_created': datetime.datetime(2021, 8, 5, 3, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 683686570, 'comment_body': 'Not ideal, but better. :-)\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 18, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 685667621, 'comment_body': 'I was playing with the sizing and this is the only thing that worked:\r\n```\r\n+        pane = self._auimgr.GetPane(notebook)\r\n+        pane.MinSize(self.goutput.GetMinSize())\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 3, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686738251, 'comment_body': 'Yes, it works, thank you Anicka.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 687389559, 'comment_body': 'I have found out why it displays invalid map size 0,413. The problem is in the function ChangeMapSize which is called several times each time with GetClientSize() parameter. And this parameter is being changed. I tried to write down the process with ""GetClientSize"" during the startup:\r\n\r\nOnIdle\r\n(0, 413)\r\nInvalid map size 0,413\r\n_updateM\r\n(569, 421)\r\nOnIdle\r\n(569, 421)\r\n_updateM\r\n(569, 421)\r\n\r\nThe problem is in the first call of OnIdle, then it is alright...\r\nBut I think that the problem is generally caused by a very small map size.\r\nWhen we set the size of notebook based on Modules tab, it is alright. And it also alright in terms of GTKCheck warnings in cmd.\r\nSo, I would propose to use Modules tab for this purpose and do not deal with render.py. What do you think @petrasovaa ?', 'comment_created': datetime.datetime(2021, 8, 12, 5, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 687391315, 'comment_body': '> I have found out why it displays invalid map size 0,413. The problem is in the function ChangeMapSize which is called several times each time with GetClientSize() parameter. And this parameter is being changed. I tried to write down the process with ""GetClientSize"" during the startup:\r\n> \r\n> OnIdle\r\n> (0, 413)\r\n> Invalid map size 0,413\r\n> _updateM\r\n> (569, 421)\r\n> OnIdle\r\n> (569, 421)\r\n> _updateM\r\n> (569, 421)\r\n> \r\n> The problem is in the first call of OnIdle, then it is alright...\r\n> But I think that the problem is generally caused by very small map size.\r\n> When we set the size of notebook based on Modules tab, it is alright. And it also alright in terms of GTKCheck warnings in cmd.\r\n> So, I would propose to use Modules tab for this purpose and do not deal with render.py. What do you think @petrasovaa ?\r\n\r\nSorry, fault. Those warnings are still displayed:\r\n(wxgui.py:10746): Gtk-WARNING **: 00:04:09.085: Negative content width -6 (allocation 4, extents 5x5) while allocating gadget (node checkbutton, owner GtkCheckButton)\r\n\r\n(wxgui.py:10746): Gtk-CRITICAL **: 00:04:09.085: gtk_box_gadget_distribute: assertion \'size >= 0\' failed in GtkCheckButton\r\n\r\n(wxgui.py:10746): Gtk-WARNING **: 00:04:09.156: Negative content width -6 (allocation 4, extents 5x5) while allocating gadget (node checkbutton, owner GtkCheckButton)\r\n\r\n(wxgui.py:10746): Gtk-CRITICAL **: 00:04:09.157: gtk_box_gadget_distribute: assertion \'size >= 0\' failed in GtkCheckButton\r\n\r\nI tried also the thing with BestSize but it does not work - notebook is shrunk (same as the second picture in this PR).\r\n\r\nIf we used python tab, warnings would not be displayed, but the notebook would be too narrow (a bit wider than the situation on the second picture though).\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 5, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 688201214, 'comment_body': ""I don't think we should decide that based on the errors we get, they are apparently very arbitrary. Set it to modules tab for now and the errors need to be dealt with separately (not urgent). The ChangeMapSize error reporting could just be removed, it's not needed and the GTK errors are likely coming from the statusbar, so that's again differnt."", 'comment_created': datetime.datetime(2021, 8, 13, 2, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '1cd4c5364c5ac6cf2761909738354ae89c2eb309', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ec615cb080083c6d91a1cb97b2d24ad26c7d2a3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c6bcb601be9d5284391baf4e627e61f92908ce4c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '607e68c34d54b1cb3096fdb721d3295802aa495d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cf905b4401aa31a3a8e4f36a3134a13fc84e3c66', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
705511599,wxGUI/Single-Window: New change page event for AuiNotebook,,True,1780,https://api.github.com/repos/OSGeo/grass/pulls/1780,https://github.com/OSGeo/grass/pull/1780,closed,12,4,2,12,0,4,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-06 14:05:31+00:00,2021-08-13 02:35:21+00:00,563390.0,"6 days, 12:29:50","[{'comment_id': 684578641, 'comment_body': 'There is _onMapDisplayFocus in lmgr/frame.py, which seems to be doing what you need, why this new method?', 'comment_created': datetime.datetime(2021, 8, 7, 3, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686127461, 'comment_body': 'The _onMapDisplayFocus cannot be used as is written now due to the notebookLayerPage parameter. We also make only one Bind to map notebook not many Binds for each Display frame. So the situation is a bit different now.\r\n\r\nBut at least I a bit adapted OnMapNotebookPageChanged method to use a condition from _onMapDisplayFocus (we talked about it in e-mail). Please, write me what you think. _onMapDisplayFocus is not used anywhere else, so I think we no longer need it.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 686220677, 'comment_body': ""What exception is actually thrown here? It's better to use the specific one to make it more clear what it is trying to do."", 'comment_created': datetime.datetime(2021, 8, 10, 18, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686732086, 'comment_body': 'It is the TypeError. If I understand it right, the OnMapNotebookChanged is also called during the processing of NewDisplay method. The map panel is already known but the layertree not, so thats the reason why it throws this exception.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '30c8e8aa461b3eeb146433bb51b341d3db2b5132', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fbb9593b25f2f7472c197c31dad6d10508bf16a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4a66b7b8197c5212d602da603b657598ad09f642', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68375dad7bd3675862620c651497b14e1dfed306', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1b1e225890fbc21a48c8745da7f05479182738a7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cb3e24de21e063d7d44d8936093c5eefa32f18b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fa5d81e10eb5980d166e031485b622a517dfe98', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feb2c1b77252ac9e540aebf42e9a2cbeb4dc8abb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e27abb2a8af398a24cdd625a32f7a655b736611', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8d85b216fef373c369c68f671adf16017b1522d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a085b55fc8510142918bb88b45722061d920b8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '428c3a5ed02ef9ea68047d98fff728833d3e380c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
705511599,wxGUI/Single-Window: New change page event for AuiNotebook,,True,1780,https://api.github.com/repos/OSGeo/grass/pulls/1780,https://github.com/OSGeo/grass/pull/1780,closed,12,4,2,12,0,4,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-06 14:05:31+00:00,2021-08-13 02:35:21+00:00,563390.0,"6 days, 12:29:50","[{'comment_id': 684578641, 'comment_body': 'There is _onMapDisplayFocus in lmgr/frame.py, which seems to be doing what you need, why this new method?', 'comment_created': datetime.datetime(2021, 8, 7, 3, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686127461, 'comment_body': 'The _onMapDisplayFocus cannot be used as is written now due to the notebookLayerPage parameter. We also make only one Bind to map notebook not many Binds for each Display frame. So the situation is a bit different now.\r\n\r\nBut at least I a bit adapted OnMapNotebookPageChanged method to use a condition from _onMapDisplayFocus (we talked about it in e-mail). Please, write me what you think. _onMapDisplayFocus is not used anywhere else, so I think we no longer need it.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 686220677, 'comment_body': ""What exception is actually thrown here? It's better to use the specific one to make it more clear what it is trying to do."", 'comment_created': datetime.datetime(2021, 8, 10, 18, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686732086, 'comment_body': 'It is the TypeError. If I understand it right, the OnMapNotebookChanged is also called during the processing of NewDisplay method. The map panel is already known but the layertree not, so thats the reason why it throws this exception.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '30c8e8aa461b3eeb146433bb51b341d3db2b5132', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fbb9593b25f2f7472c197c31dad6d10508bf16a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4a66b7b8197c5212d602da603b657598ad09f642', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68375dad7bd3675862620c651497b14e1dfed306', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1b1e225890fbc21a48c8745da7f05479182738a7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cb3e24de21e063d7d44d8936093c5eefa32f18b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fa5d81e10eb5980d166e031485b622a517dfe98', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feb2c1b77252ac9e540aebf42e9a2cbeb4dc8abb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e27abb2a8af398a24cdd625a32f7a655b736611', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8d85b216fef373c369c68f671adf16017b1522d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a085b55fc8510142918bb88b45722061d920b8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '428c3a5ed02ef9ea68047d98fff728833d3e380c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
703364590,wxGUI/Single-Window: arrange a startup GUI,"This PR implements the startup GUI arrangement according to the third proposal from https://github.com/OSGeo/grass/issues/1747 which looks as follows:
![126859885-4cc53bf0-293c-42e5-9716-ff51eb7e0e83](https://user-images.githubusercontent.com/49241681/128175406-0ad69859-4bdb-4bd7-b908-7a5acc83dfd4.png)
",True,1775,https://api.github.com/repos/OSGeo/grass/pulls/1775,https://github.com/OSGeo/grass/pull/1775,closed,14,6,1,5,3,7,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-04 11:59:38+00:00,2021-08-17 16:33:02+00:00,1139604.0,"13 days, 4:33:24","[{'comment_id': 683098555, 'comment_body': ""You can get the notebooks like this:\r\n```suggestion\r\n        notebook = self._auimgr.GetNotebooks()[0]\r\n```\r\nbut it's also not ideal."", 'comment_created': datetime.datetime(2021, 8, 5, 3, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 683686570, 'comment_body': 'Not ideal, but better. :-)\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 18, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 685667621, 'comment_body': 'I was playing with the sizing and this is the only thing that worked:\r\n```\r\n+        pane = self._auimgr.GetPane(notebook)\r\n+        pane.MinSize(self.goutput.GetMinSize())\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 3, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686738251, 'comment_body': 'Yes, it works, thank you Anicka.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 687389559, 'comment_body': 'I have found out why it displays invalid map size 0,413. The problem is in the function ChangeMapSize which is called several times each time with GetClientSize() parameter. And this parameter is being changed. I tried to write down the process with ""GetClientSize"" during the startup:\r\n\r\nOnIdle\r\n(0, 413)\r\nInvalid map size 0,413\r\n_updateM\r\n(569, 421)\r\nOnIdle\r\n(569, 421)\r\n_updateM\r\n(569, 421)\r\n\r\nThe problem is in the first call of OnIdle, then it is alright...\r\nBut I think that the problem is generally caused by a very small map size.\r\nWhen we set the size of notebook based on Modules tab, it is alright. And it also alright in terms of GTKCheck warnings in cmd.\r\nSo, I would propose to use Modules tab for this purpose and do not deal with render.py. What do you think @petrasovaa ?', 'comment_created': datetime.datetime(2021, 8, 12, 5, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 687391315, 'comment_body': '> I have found out why it displays invalid map size 0,413. The problem is in the function ChangeMapSize which is called several times each time with GetClientSize() parameter. And this parameter is being changed. I tried to write down the process with ""GetClientSize"" during the startup:\r\n> \r\n> OnIdle\r\n> (0, 413)\r\n> Invalid map size 0,413\r\n> _updateM\r\n> (569, 421)\r\n> OnIdle\r\n> (569, 421)\r\n> _updateM\r\n> (569, 421)\r\n> \r\n> The problem is in the first call of OnIdle, then it is alright...\r\n> But I think that the problem is generally caused by very small map size.\r\n> When we set the size of notebook based on Modules tab, it is alright. And it also alright in terms of GTKCheck warnings in cmd.\r\n> So, I would propose to use Modules tab for this purpose and do not deal with render.py. What do you think @petrasovaa ?\r\n\r\nSorry, fault. Those warnings are still displayed:\r\n(wxgui.py:10746): Gtk-WARNING **: 00:04:09.085: Negative content width -6 (allocation 4, extents 5x5) while allocating gadget (node checkbutton, owner GtkCheckButton)\r\n\r\n(wxgui.py:10746): Gtk-CRITICAL **: 00:04:09.085: gtk_box_gadget_distribute: assertion \'size >= 0\' failed in GtkCheckButton\r\n\r\n(wxgui.py:10746): Gtk-WARNING **: 00:04:09.156: Negative content width -6 (allocation 4, extents 5x5) while allocating gadget (node checkbutton, owner GtkCheckButton)\r\n\r\n(wxgui.py:10746): Gtk-CRITICAL **: 00:04:09.157: gtk_box_gadget_distribute: assertion \'size >= 0\' failed in GtkCheckButton\r\n\r\nI tried also the thing with BestSize but it does not work - notebook is shrunk (same as the second picture in this PR).\r\n\r\nIf we used python tab, warnings would not be displayed, but the notebook would be too narrow (a bit wider than the situation on the second picture though).\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 5, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 688201214, 'comment_body': ""I don't think we should decide that based on the errors we get, they are apparently very arbitrary. Set it to modules tab for now and the errors need to be dealt with separately (not urgent). The ChangeMapSize error reporting could just be removed, it's not needed and the GTK errors are likely coming from the statusbar, so that's again differnt."", 'comment_created': datetime.datetime(2021, 8, 13, 2, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '1cd4c5364c5ac6cf2761909738354ae89c2eb309', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ec615cb080083c6d91a1cb97b2d24ad26c7d2a3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c6bcb601be9d5284391baf4e627e61f92908ce4c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '607e68c34d54b1cb3096fdb721d3295802aa495d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cf905b4401aa31a3a8e4f36a3134a13fc84e3c66', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
705511599,wxGUI/Single-Window: New change page event for AuiNotebook,,True,1780,https://api.github.com/repos/OSGeo/grass/pulls/1780,https://github.com/OSGeo/grass/pull/1780,closed,12,4,2,12,0,4,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-06 14:05:31+00:00,2021-08-13 02:35:21+00:00,563390.0,"6 days, 12:29:50","[{'comment_id': 684578641, 'comment_body': 'There is _onMapDisplayFocus in lmgr/frame.py, which seems to be doing what you need, why this new method?', 'comment_created': datetime.datetime(2021, 8, 7, 3, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686127461, 'comment_body': 'The _onMapDisplayFocus cannot be used as is written now due to the notebookLayerPage parameter. We also make only one Bind to map notebook not many Binds for each Display frame. So the situation is a bit different now.\r\n\r\nBut at least I a bit adapted OnMapNotebookPageChanged method to use a condition from _onMapDisplayFocus (we talked about it in e-mail). Please, write me what you think. _onMapDisplayFocus is not used anywhere else, so I think we no longer need it.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 686220677, 'comment_body': ""What exception is actually thrown here? It's better to use the specific one to make it more clear what it is trying to do."", 'comment_created': datetime.datetime(2021, 8, 10, 18, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686732086, 'comment_body': 'It is the TypeError. If I understand it right, the OnMapNotebookChanged is also called during the processing of NewDisplay method. The map panel is already known but the layertree not, so thats the reason why it throws this exception.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '30c8e8aa461b3eeb146433bb51b341d3db2b5132', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fbb9593b25f2f7472c197c31dad6d10508bf16a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4a66b7b8197c5212d602da603b657598ad09f642', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68375dad7bd3675862620c651497b14e1dfed306', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1b1e225890fbc21a48c8745da7f05479182738a7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cb3e24de21e063d7d44d8936093c5eefa32f18b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fa5d81e10eb5980d166e031485b622a517dfe98', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feb2c1b77252ac9e540aebf42e9a2cbeb4dc8abb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e27abb2a8af398a24cdd625a32f7a655b736611', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8d85b216fef373c369c68f671adf16017b1522d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a085b55fc8510142918bb88b45722061d920b8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '428c3a5ed02ef9ea68047d98fff728833d3e380c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
712175076,wxGUI/Single-Window: New close page event for AuiNotebook,"This PR addresses several smaller tasks:

- [x] Implements a new aui.EVT_AUINOTEBOOK_PAGE_CLOSE event
- [x] Fixes OnDisplayClose and OnDisplayCloseAll event handlers which are important for the closing of a map notebook page from File menu
- [x] Update list of shorcuts so that the map notebook page can be also closed by CTRL+W shortcut

It moves all OnCloseWindow logic to NewDisplay method.
Multi-Window GUI is not influenced by any changes.

By merging this PR the Issue https://github.com/OSGeo/grass/issues/1750 will be closed.",False,1789,https://api.github.com/repos/OSGeo/grass/pulls/1789,https://github.com/OSGeo/grass/pull/1789,closed,64,19,2,3,2,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-13 08:39:56+00:00,2022-01-13 11:08:43+00:00,13228127.0,"153 days, 2:28:47",[],"[{'commit_sha': '1e58b89703982a3250a37acb258652c8eea977da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae09c8a0f780241ef53b161f89e663792b005cd8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '56f6e8bbcea6c0bde3e15cb6990cfbab6cf297d8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
707493182,wxGUI: NewDisplay button moved to LMToolsToolbar,"On the video call on August 5th, we decided to put the NewDisplay button to LMToolsToolbar. It is a more straightforward way how to approach this function, especially for a new Single-Window GUI. But it is also a more advantageous solution for a current Multi-Window layout.

Before:
![pred](https://user-images.githubusercontent.com/49241681/128902304-ad6aa953-df87-4814-9c3d-67e71893ebf5.PNG)
The NewDisplay button is a part of the toolbar for the Display panel.

After:
![po](https://user-images.githubusercontent.com/49241681/128902543-d1500836-53ad-4485-9c3a-5ea745fa9ba6.PNG)
The NewDisplay button is a part of the upper Tools toolbar, so it is available always regardless of which notebook tab is active.

",True,1783,https://api.github.com/repos/OSGeo/grass/pulls/1783,https://github.com/OSGeo/grass/pull/1783,closed,5,5,1,1,0,0,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-10 17:01:25+00:00,2021-08-11 03:14:41+00:00,36796.0,10:13:16,[],"[{'commit_sha': 'b395258232ecdfb3a4eb174a523551e7c3d8789a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
709087062,wxGUI: Each layertree has its own display toolbar,"Before:
![Screenshot from 2021-08-11 09-53-50](https://user-images.githubusercontent.com/49241681/129052297-168e814e-0d3a-4531-8219-f7e8ae03e49b.png)

After:
![Screenshot from 2021-08-11 09-29-24](https://user-images.githubusercontent.com/49241681/129051790-c1bfde51-852d-4446-bd0c-a8b7942adda5.png)
",True,1785,https://api.github.com/repos/OSGeo/grass/pulls/1785,https://github.com/OSGeo/grass/pull/1785,closed,23,54,2,3,2,0,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-11 14:55:00+00:00,2021-08-19 02:13:40+00:00,645520.0,"7 days, 11:18:40",[],"[{'commit_sha': '4fc8c2c6be868258a4195b70ae269cf6942e4694', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '531fca482e025ae0fb954e7a2acd60bf18baf519', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fcd187f80dc3239dfcd9c2c0c49b6d317c3117df', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
712175076,wxGUI/Single-Window: New close page event for AuiNotebook,"This PR addresses several smaller tasks:

- [x] Implements a new aui.EVT_AUINOTEBOOK_PAGE_CLOSE event
- [x] Fixes OnDisplayClose and OnDisplayCloseAll event handlers which are important for the closing of a map notebook page from File menu
- [x] Update list of shorcuts so that the map notebook page can be also closed by CTRL+W shortcut

It moves all OnCloseWindow logic to NewDisplay method.
Multi-Window GUI is not influenced by any changes.

By merging this PR the Issue https://github.com/OSGeo/grass/issues/1750 will be closed.",False,1789,https://api.github.com/repos/OSGeo/grass/pulls/1789,https://github.com/OSGeo/grass/pull/1789,closed,64,19,2,3,2,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-13 08:39:56+00:00,2022-01-13 11:08:43+00:00,13228127.0,"153 days, 2:28:47",[],"[{'commit_sha': '1e58b89703982a3250a37acb258652c8eea977da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae09c8a0f780241ef53b161f89e663792b005cd8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '56f6e8bbcea6c0bde3e15cb6990cfbab6cf297d8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
709087062,wxGUI: Each layertree has its own display toolbar,"Before:
![Screenshot from 2021-08-11 09-53-50](https://user-images.githubusercontent.com/49241681/129052297-168e814e-0d3a-4531-8219-f7e8ae03e49b.png)

After:
![Screenshot from 2021-08-11 09-29-24](https://user-images.githubusercontent.com/49241681/129051790-c1bfde51-852d-4446-bd0c-a8b7942adda5.png)
",True,1785,https://api.github.com/repos/OSGeo/grass/pulls/1785,https://github.com/OSGeo/grass/pull/1785,closed,23,54,2,3,2,0,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-11 14:55:00+00:00,2021-08-19 02:13:40+00:00,645520.0,"7 days, 11:18:40",[],"[{'commit_sha': '4fc8c2c6be868258a4195b70ae269cf6942e4694', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '531fca482e025ae0fb954e7a2acd60bf18baf519', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fcd187f80dc3239dfcd9c2c0c49b6d317c3117df', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
712175076,wxGUI/Single-Window: New close page event for AuiNotebook,"This PR addresses several smaller tasks:

- [x] Implements a new aui.EVT_AUINOTEBOOK_PAGE_CLOSE event
- [x] Fixes OnDisplayClose and OnDisplayCloseAll event handlers which are important for the closing of a map notebook page from File menu
- [x] Update list of shorcuts so that the map notebook page can be also closed by CTRL+W shortcut

It moves all OnCloseWindow logic to NewDisplay method.
Multi-Window GUI is not influenced by any changes.

By merging this PR the Issue https://github.com/OSGeo/grass/issues/1750 will be closed.",False,1789,https://api.github.com/repos/OSGeo/grass/pulls/1789,https://github.com/OSGeo/grass/pull/1789,closed,64,19,2,3,2,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-13 08:39:56+00:00,2022-01-13 11:08:43+00:00,13228127.0,"153 days, 2:28:47",[],"[{'commit_sha': '1e58b89703982a3250a37acb258652c8eea977da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae09c8a0f780241ef53b161f89e663792b005cd8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '56f6e8bbcea6c0bde3e15cb6990cfbab6cf297d8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
712175076,wxGUI/Single-Window: New close page event for AuiNotebook,"This PR addresses several smaller tasks:

- [x] Implements a new aui.EVT_AUINOTEBOOK_PAGE_CLOSE event
- [x] Fixes OnDisplayClose and OnDisplayCloseAll event handlers which are important for the closing of a map notebook page from File menu
- [x] Update list of shorcuts so that the map notebook page can be also closed by CTRL+W shortcut

It moves all OnCloseWindow logic to NewDisplay method.
Multi-Window GUI is not influenced by any changes.

By merging this PR the Issue https://github.com/OSGeo/grass/issues/1750 will be closed.",False,1789,https://api.github.com/repos/OSGeo/grass/pulls/1789,https://github.com/OSGeo/grass/pull/1789,closed,64,19,2,3,2,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-13 08:39:56+00:00,2022-01-13 11:08:43+00:00,13228127.0,"153 days, 2:28:47",[],"[{'commit_sha': '1e58b89703982a3250a37acb258652c8eea977da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae09c8a0f780241ef53b161f89e663792b005cd8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '56f6e8bbcea6c0bde3e15cb6990cfbab6cf297d8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
712175076,wxGUI/Single-Window: New close page event for AuiNotebook,"This PR addresses several smaller tasks:

- [x] Implements a new aui.EVT_AUINOTEBOOK_PAGE_CLOSE event
- [x] Fixes OnDisplayClose and OnDisplayCloseAll event handlers which are important for the closing of a map notebook page from File menu
- [x] Update list of shorcuts so that the map notebook page can be also closed by CTRL+W shortcut

It moves all OnCloseWindow logic to NewDisplay method.
Multi-Window GUI is not influenced by any changes.

By merging this PR the Issue https://github.com/OSGeo/grass/issues/1750 will be closed.",False,1789,https://api.github.com/repos/OSGeo/grass/pulls/1789,https://github.com/OSGeo/grass/pull/1789,closed,64,19,2,3,2,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-13 08:39:56+00:00,2022-01-13 11:08:43+00:00,13228127.0,"153 days, 2:28:47",[],"[{'commit_sha': '1e58b89703982a3250a37acb258652c8eea977da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae09c8a0f780241ef53b161f89e663792b005cd8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '56f6e8bbcea6c0bde3e15cb6990cfbab6cf297d8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
650629038,wxGUI: Split widget initialization from notebook logic,"Splits widget initialization (data catalog, display etc.) from notebook logic. Makes smaller methods for each widget creation.",True,1591,https://api.github.com/repos/OSGeo/grass/pulls/1591,https://github.com/OSGeo/grass/pull/1591,closed,54,30,1,4,0,3,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-05-22 13:34:43+00:00,2021-05-30 04:19:08+00:00,657865.0,"7 days, 14:44:25","[{'comment_id': 638956414, 'comment_body': ""Unless createWidgets is used also elesewhere, I think it's unnecessary function, I would just put there its content directly, it will be more readable."", 'comment_created': datetime.datetime(2021, 5, 25, 16, 16, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 638957073, 'comment_body': ""This function probably shouldn't return the notebook."", 'comment_created': datetime.datetime(2021, 5, 25, 16, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 638958116, 'comment_body': 'The work widget seems to be redundant in the function names.', 'comment_created': datetime.datetime(2021, 5, 25, 16, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'b12c11f761c81833b1feacd52b5b3e8f2ca2eb8d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '13bab7e4acf5128d799450ca57409ce079756ac9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db3a815f59ccab674e1bfab1655d9cf0dd83fd17', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd9f0ecf15ac5cb6cb2620112a9eb269cebea9124', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
670523148,wxGUI: refactoring: build display status bar based on wx.StatusBar widget,"This PR redesigning the form of display map status bar implementation.
It was originally created directly using CreateStatusBar function, which is, however, directly connected to the wx.Frame widget. 
For further implementation of the SingleLayout, we need to replace MapFrame widget by MapPanel widget. 
MapPanel widget does not support CreateStatusBar function.

Reimplemented status bar in a Map Display for a better context:
![Map Display 1_024](https://user-images.githubusercontent.com/49241681/122086346-3cf8f000-cdc9-11eb-8235-f49cb8a26d4b.png)

Original status bar:
![Map Display 1_023](https://user-images.githubusercontent.com/49241681/122083676-b04d3280-cdc6-11eb-8a60-f3dc65558c1c.png)
",True,1646,https://api.github.com/repos/OSGeo/grass/pulls/1646,https://github.com/OSGeo/grass/pull/1646,closed,34,13,3,10,2,5,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-15 15:39:46+00:00,2021-06-16 16:38:36+00:00,89930.0,"1 day, 0:58:50","[{'comment_id': 652323712, 'comment_body': 'Get rid of the panel, just work with the statusbar directly.', 'comment_created': datetime.datetime(2021, 6, 16, 3, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652323973, 'comment_body': 'add PaneBorder(False)', 'comment_created': datetime.datetime(2021, 6, 16, 3, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652324679, 'comment_body': 'I suggest to override SetStatusText function (meaning create your own where you call self.statusbar.SetStatusText)', 'comment_created': datetime.datetime(2021, 6, 16, 3, 34, 59, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652729704, 'comment_body': 'It\'s enough to show/hide the pane. Also I would remove the unused show functions from sbManager, but check if they are really unused.\r\n\r\n```suggestion\r\n    def ShowStatusbar(self, show):\r\n        """"""Show/hide pane associated with statusbar""""""\r\n        self._mgr.GetPane(""statusbar"").Show(show)\r\n        self._mgr.Update()\r\n\r\n    def IsStatusbarShown(self):\r\n        """"""Check if statusbar is shown""""""\r\n        return self._mgr.GetPane(""statusbar"").IsShown()\r\n\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 14, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 652850258, 'comment_body': 'I think it works fine now.', 'comment_created': datetime.datetime(2021, 6, 16, 16, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '6ff34c131bf9b68172aaae44493c588728bca92c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9188ea133743c044a876534cb80805b621530f5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cf49cc312df7111d62aa609f1709bdd47a38f886', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ea2087339635b88da8f2506fdc6f21a843e43120', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ad6898713e516f29c69d4f4736a7e0b0f968467', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dd4fb900dfdd87fed63049392442a9a106248321', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3c438caa607d6acfc05ab679a9d34d3d9fcd463b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '83ffe2b0583d6e2782e86c570848d4ff6953e167', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a23950dc7b37a22f73d4f2c6473fa1a109ff072', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eb40179ce56543d9665f883d497e18e6fd92d7a6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
675470424,wxGUI: refactoring: Map Display inheriting from wx.Panel,"Map Display GUI logic is being changed. For purposes of the Single-Window GUI,  MapFrameBase was replaced by MapPanelBase. It subsequently influeced all GUI tools which had been build based on MapFrameBase.
All these tools had to be adapted for new wx.Panel based solution. It had to be coded at once so that's the reason why this PR is too long.

There is the list of influenced GUI tools:
- regular Map Display
- GCP display (standalone g.gui.gcp)
- iclass (standalone g.gui.iclass)
- mapswipe (standalone g.gui.mapswipe)
- g.gui.image2target
- g.gui.photo2target
- g.gui.rdigit
- g.gui.vdigit
- d.mon
- example (standalone g.gui.example)

",True,1675,https://api.github.com/repos/OSGeo/grass/pulls/1675,https://github.com/OSGeo/grass/pull/1675,closed,914,468,23,59,24,13,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-22 14:22:13+00:00,2021-12-16 15:24:38+00:00,15296545.0,"177 days, 1:02:25","[{'comment_id': 657597759, 'comment_body': ""You can just pass the frame here, don't use self.currentPage.mapframe. Probably the same for mapdisplay."", 'comment_created': datetime.datetime(2021, 6, 24, 3, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658454363, 'comment_body': ""The nested function is not needed here anymore, so I suggest just putting the code in the main body of the function. Also use the parameter `page`, don't use GetMapDisplay,  because that refers to the current one, not necessarily the one connected to `page`."", 'comment_created': datetime.datetime(2021, 6, 25, 3, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 658456011, 'comment_body': 'Also these changes in closing will likely impact standalone displays (d.mon, g.guiv/rdigit).', 'comment_created': datetime.datetime(2021, 6, 25, 3, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207092, 'comment_body': 'Originally, mapdisplay was attribute of layertree, not notebook page, so I think it should stay that way to not introduce more changes than necessary.\r\nJust return mapdisplay (not `self.currentPage.mapdisplay`) and then pass it to _setupMapDisplay.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207175, 'comment_body': 'This could be probably moved back to layertree, no?', 'comment_created': datetime.datetime(2021, 6, 26, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659207532, 'comment_body': ""I wonder what the Refresh and Update are for here, just wondering if it's even necessary."", 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 659286675, 'comment_body': '> This could be probably moved back to layertree, no?\r\n\r\nOr to CreateNewMapDisplay method? We do not need layertree to get to know the show parameter.', 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 659286727, 'comment_body': ""> I wonder what the Refresh and Update are for here, just wondering if it's even necessary.\r\n\r\nYou're right.. not needed."", 'comment_created': datetime.datetime(2021, 6, 27, 8, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666975955, 'comment_body': 'I think this should be `def ShowFullScreen(self, show)` to resemble the actual TopLevelWindow method and inside you would hide/show the toolbars and I think also statusbar. Method IsFullScreen should be defined outside of this method.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666988505, 'comment_body': 'if shortcuts_table is an attribute, no need to pass it here.', 'comment_created': datetime.datetime(2021, 7, 9, 14, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 667291865, 'comment_body': 'Coded :-)', 'comment_created': datetime.datetime(2021, 7, 10, 5, 11, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 669253732, 'comment_body': 'frame.Show()', 'comment_created': datetime.datetime(2021, 7, 14, 3, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 680558415, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2021, 8, 1, 19, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dfb068df24eb095adff6f0600468b96da04f47ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7028d321b843f5d1a5d9c14b3c5e5c66248fbe0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a847d103ba7ccbb845530e799ff9616963177b74', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '57ee1ea4c324a9ccba851c751fb3806606dc780b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8fa60e61ce8e7fa001dae4a6f98045987ed15192', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4d7dc3f01614eacb717abd2e7bc7af6e8393cb62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '965719c1f44219ca2835829b24e6fb13ef7623aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aebe27b98093e5e28125e8bee20af76c23aa50ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc2273692963f2956ea7ab19d06ba68e963d2e0b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a31d2308e40b0e294e9e236b4395d633b5b393b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ae1bde3e993942f8ddace910db3f792a9584407', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37d14407ed254a2e661bd44f46b61235b2bbadd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67845af3ee180e39791dfc79eacbb49cd9aeb750', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e0c12714df4eeaaa27127585aaf39f4dcfec97c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9df815ceca52d46bb8beac3a15c8c4a0d3886eb0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79b910835e2caa8183044ba391a809465a40ddff', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a461d0931b03aa13abac9cb34f70c9ceb6f7f20f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7fda15f99fcebc443b5a19f8adb759c70b597ed4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e05f3be05db65b7447317ba532828b195380d5ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7ddee0d2b38cbfe7d6b30f89c1b4f708af981150', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73185f885307c592167c7ce540b172f4cbf931b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e11b3794a9d7bfab1ba9188641cd29ae1fa71d43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e62e5c7fb6e21f3ca06932816f19d3fb8c40155', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '327a82c521b307ce6b66c37f8942360adee91962', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4452ae97f4f68e03cc38359ea3716e02714f4f11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '46c4ef1b02e552614a2ec91b463cdeedb80eed11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0645377aa661a46ab39fa42522698d812bc07975', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4031c6ca2049542104c389e233ebabf66044170', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cac609d306ed2003ddc10c7d0b154850d41d1c87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '858c90b9ded64a7179fae0b2cd97885140bbd8cd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eaa85a3efa82e149df894603c6c363885a89684f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9461e14a9ff9c0a28945aecadd24c73a2499b5d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0830504bf33f5d9d795824781ed6a59c8d069f02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5343ac84bf689b91d6b582df73a47c6847c7d1c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c86e731931ed4e80e10ef2af20abf24e6075db8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '972c5b612e9bcc1f3fdf5e0ab03a8aca92184656', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '442b099a0f2edb0c1a2f2914322b8eac0098611e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd94fc604dcd5f89f68d4ce499cacbb5a8336b8fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0afc6218aa535629b0d1f57232d126cbe645cbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8841e25d6d457067f7737a0fcce585dab0ec2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a605a31e704faca0185c19914b79cb8f251e45a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f32775bef01168f888276f0ce4211882029b5449', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe5a920f68d378e76d3182d2a29bdcb8e441d970', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc0295b4d90549f7b92c9a0269940dbfc976973', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef0ad45a53b007211230cf1f20687ac99c887e05', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8f4e30e614a6ead6ca0a5dd001e6366478d79ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b5a209d53b54f7ab107738b1340803f90737316', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a0bfdcda0d4626248956c7f5ae844449883ed1fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1cad717773a4c085434772cab7fcbfa4caff93b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fdd73b5354652927a87119ecec3f10bf8cf9de7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '742b65754de7aeed21a5c1bdc61ac7fb53d97b25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '642d6f2a7a505293f73a758d9346f70f64da34b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42dbca2d94011b8da8e23a1e338ee395ddf31da3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '11fc57b8e15920b3d23c537f49b675776d41460d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3939ec4048601d41c121f9a4cf4e8a6e99c02907', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3722b0e7d433059f648c2bb231566534a2947042', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4515ad0a9986c794ac7480eae27e6b7d6769ad59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4880a3e49e2bdbc7b49e92d4f461673c5d1c0925', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e6847ca30a9509233577d4d99d5fdf92283926d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
679724343,wxGUI: refactoring: build GUI tools' status bars based on wx.StatusBar widget,"This PR builds status bars based on wx.StatusBar for SwipeMapFrame, IClassMapFrame, Image2Target Frame, Photo2Image Frame, and GCP manager MapFrame.
Some general methods related to a status bar and toolbars moved to gui_core class MapFrameBase.",True,1689,https://api.github.com/repos/OSGeo/grass/pulls/1689,https://github.com/OSGeo/grass/pull/1689,closed,429,442,7,25,7,9,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-29 08:38:37+00:00,2021-07-29 03:13:03+00:00,2572466.0,"29 days, 18:34:26","[{'comment_id': 665830957, 'comment_body': ""Didn't notice this before, but this doesn't seem to have anything to do with statusbar, so it shouldn't be inside the if."", 'comment_created': datetime.datetime(2021, 7, 8, 2, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665840269, 'comment_body': ""Not sure why not keep AddToolbars as it was. The ifs there don't make much sense, also passing the toolbar names in constructor is not particularly useful unless you create different mapswipe tools with different toolbars."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665841570, 'comment_body': ""Shouldn't this then go into the base class as well? It seems it will be the same every time. Perhaps you can put this into separate method in the base class and call it from the child classes."", 'comment_created': datetime.datetime(2021, 7, 8, 3, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 665909990, 'comment_body': 'Well, I just wanted to unify names and functionality since I call AddToolbar in ShowAllToolbars method in the base class.\n', 'comment_created': datetime.datetime(2021, 7, 8, 6, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 665941909, 'comment_body': 'It is true that we do not need ShowAllToolbars method for Map Swipe but everything which in the base class could be generally usable in all childs. So, if we let AddToolbars the ShowAllToolbars method will need to override.', 'comment_created': datetime.datetime(2021, 7, 8, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 666213997, 'comment_body': ""Ok, that makes sense, so feel free to put it back. Perhaps the names of toolbars don't need to be in the constructor since they are fixed anyway,"", 'comment_created': datetime.datetime(2021, 7, 8, 13, 52, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666215185, 'comment_body': 'I think `addStatusbarPane` would sound better.', 'comment_created': datetime.datetime(2021, 7, 8, 13, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 666238126, 'comment_body': 'Also for that case when AddToolbar would be used more times (while adding/removing), then you need to adjust the code to not create a new toolbar every time.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 677942823, 'comment_body': 'To avoid potential problems like in #1763:\r\n```suggestion\r\n        return list(self.toolbars.keys())\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 3, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '4cc30ecb976e44b81959a977f6db716c6189e88f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '30a89651223a807d22812084bcfd2726bf6855f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c0c129b4c26d4c0abd9c8d2f75911bc2d4aa9ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '18a3e2b69fae60ef4f14e13a7ffea58182c3160f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a93dc222f119029f5d2f1b13cb0bfe66bf442a72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6176ba39c4f0d32b2f2f6ea987dc6b6aa2c00f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '199d28a876ccf526115495a0256444a0d8bb5b09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8807903c1a5e604fdc4c4a928a350eabdcdbc4bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '32bb43bc8977289925ab0cf392e36e002bd71dde', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab5cdc28fe17c32cd16e01be90765da4b066de31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '84e3eec3ec4ea512c20207059d589231544bef64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e6921394a82128604ddb4983a461c0c44684d40', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8a317bb772cfee52e819c5ea0246112e1c08601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4f1c0f59c80e4403a5edcf5a3cd301964e0df517', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b362be7d1a4c35f5e1f3f46d2e7832cc634e6d12', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00082d470d473018112854160f8bec6819fba56f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40a1f070c8b5b24dfc578fc77af038be862a384c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '180d6889a3e17a374870176e715c6c3b0b775951', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c51107fa04c63102989294e4e4e1f807a07094db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8e68a08c78392426eee9e5baaeabd7b492756cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e7a6c2e34d837e4d46f974d734c4cf67df47a9b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7b94e8a91134376863621a97fcb5836de71f14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e947ab4479661894bde9d2aa6125021bc457f5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1db19f00fb19f94cfc3c053b3228d8a216ab6a41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '65843e75440666a92e281d9176b33643855a7c33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
657760373,wxGUI: create parallel wx.frame for Single Window layout development,"This PR serves for preparing a coding environment for building a separate Single Window application. It creates a copy of GMFrame which is ready for adapting and developing a new Single Window Layout solution through Google Summer of Code.
",True,1604,https://api.github.com/repos/OSGeo/grass/pulls/1604,https://github.com/OSGeo/grass/pull/1604,closed,2257,2,3,12,6,2,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-05-30 17:36:47+00:00,2021-06-04 15:42:35+00:00,425148.0,"4 days, 22:05:48","[{'comment_id': 644006035, 'comment_body': 'Could you please fix these instead of ignoring them?', 'comment_created': datetime.datetime(2021, 6, 2, 14, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 645571657, 'comment_body': 'Fixed. :-)', 'comment_created': datetime.datetime(2021, 6, 4, 13, 29, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '799de72ba07001e2b047a6987b2d712927766139', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42e3f8d1d8d616cdfb6eeb9d91468cf4ee91fdfe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '48494583320b5df712d2143c68550115fe9b6b59', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '516e5ec0a36400296ee91abc0a9419b663b02fe5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '511c87a95b2ce71cde6f23a65c293cee90aea0cb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f52bded2c561333412651a27abaa0203dda71c1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6f2198d5edc977294e083faf078339e33a73c156', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b2e970dd95556a176cd2684e45f137c8645e1cfc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cc4efb434818932cc695fd9eb8c134fa9b1d3667', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '71dae221425a0de4178c48f76d69aa20506a2b9a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eeee30f83f9928197c330a94732915c98341a7db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8c019b15d97f069be7a4e482054bf0faa927bade', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
662547142,wxGUI: Single-Window GUI: arrangement of basic widgets,"This PR deals with the base settings for the full screen layout with main dockable panes. 
Map Displays as well as 3D view are not solved in this PR - we just need to prepare the base structure here.

There are two main things that we need to figure out:

- Any content ""not dockable"" pane is necessary in terms of implementation. So first we need to decide whether to employ Data Catalog as the content pane.  The advantage is that all other panes would be dockable then. :-) And also after changes made last year the Data Catalog is kind of the center point of GRASS so it could make sense to have it as the content  pane. The con is that visually it might look a bit strange. There the layout I suggest so far in this PR (using wx.AUI):

![tmploc-PERMANENT - GRASS GIS_010](https://user-images.githubusercontent.com/49241681/120901314-a88bd200-c5ff-11eb-957e-770806292f40.png)

- Second important thing is to decide which library to use. We have two options: the traditional **wx.AUI** C++ library and the newer **wx.lib.agw.aui** python library. I tried to compared them a bit. There is a bit strange thing about wx.AUI -> MinimizeButton method does not work to me although according to https://wxpython.org/Phoenix/docs/html/wx.aui.AuiPaneInfo.html#wx.aui.AuiPaneInfo.MinimizeButton documentation, it should work. :-( The second thing I have come up with so far is the missing guide docking styles such as nice aui.AUI_MGR_WHIDBEY_DOCKING_GUIDES style.
Both of these functions work for wx.lib.agw.aui.

But there may be (and probably are) more things that are not implemented for wx.AUI. But I think we do not have to make the decision about the library right now.



",True,1621,https://api.github.com/repos/OSGeo/grass/pulls/1621,https://github.com/OSGeo/grass/pull/1621,closed,156,155,1,7,11,8,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-05 18:26:24+00:00,2021-06-13 19:04:07+00:00,693463.0,"8 days, 0:37:43","[{'comment_id': 646063619, 'comment_body': 'change to BindEvents', 'comment_created': datetime.datetime(2021, 6, 6, 2, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 649662667, 'comment_body': 'There is a note warning about using this function in the [documentation](https://wxpython.org/Phoenix/docs/html/wx.functions.html#wx.DisplaySize), so I suggest to follow it.', 'comment_created': datetime.datetime(2021, 6, 11, 3, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 649997435, 'comment_body': 'Ok, but then I think it will be a bit more complex, shell I take into consideration two monitors or is it okay if I set the size according to the first monitor? I am in the process of preparing Ubuntu on my second laptop, so now on my VirtualBox I am limited in terms of trying startup for different monitors set as default. :-( But if I get it right, [0] may represent the primary monitor anyway.', 'comment_created': datetime.datetime(2021, 6, 11, 13, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 650001127, 'comment_body': 'I am not sure if [0] really means primary, it is not written anywhere... if not it could be possible to determine which monitor it is according to GetPosition, but unfortunately, I do not have the second monitor to try it out.', 'comment_created': datetime.datetime(2021, 6, 11, 13, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 650009637, 'comment_body': 'mmm.. actually, neither on them work (neither wx.DisplaySize nor wx.Display(0).GetGeometry().Get(Size)... I need to have self.Maximize(True) to extend GRASS on the whole screen. I will have a look on it again tomorrow.', 'comment_created': datetime.datetime(2021, 6, 11, 14, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 650024986, 'comment_body': 'This should be `wx.Display().GetGeometry()` which gives you the wx.Rect of the display the application was started on.\r\n\r\nBut `wx.DisplaySize()` gives me (3520, 1080) when I have 2 displays.', 'comment_created': datetime.datetime(2021, 6, 11, 14, 29, 54, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 650026535, 'comment_body': ""Also you shouldn't need this here since you Maximize the window later, no?"", 'comment_created': datetime.datetime(2021, 6, 11, 14, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 650385290, 'comment_body': 'Ok. I already get it. :-)  We do not have to deal with different sizes of 2 displays at all.', 'comment_created': datetime.datetime(2021, 6, 12, 12, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': 'd3003e8fb1eeadef75cd69f300e5429f12665a24', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4894f8da22036cd12284c09fc7d3721b9d681c5c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bd8860c337a04237de5af4730f16ed3a8a199cb5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f4086205918124b363332990031bfe1c70f13bc1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7e1d0464273626410157324945ff7c4023fa3941', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '44d4eebd2d5969058c46329459119ae9f01282e5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '76a7e4b5a0cd196d8ebe37d7fb16d778c59b888e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
692065714,wxGUI: Single-Window GUI: Integrate new map display wx.Panels into a AuiNotebook center pane #1735,"This PR follows up the changes that are about to be merged - https://github.com/OSGeo/grass/pull/1729, https://github.com/OSGeo/grass/pull/1689, https://github.com/OSGeo/grass/pull/1675.

So far, it is based on my local merged branch which already knows these changes. But I think even without the mentor's testing it makes sense to start working on this as later we can rebase it.

This PR aims at the basic integration of the new Map Display into the center AuiNotebook pane. Apart from this integration, it repairs existing event handlers and methods. It does not add any new ones.

As we have basically several small things for coding, I have eventually decided to solve them in this one PR. Some of them require changing of one, two rows, so it probably does not make sense to have more than one PR.

Tasks are as follow:

- [x]  Remove methods related to the depreciated Map Display wx.Frame.

- [x]  Fix behaviour when adding or switching to a new location (now it does not close previously opened map displays)

- [x]  Make a newly added AuiNotebook tab active when adding a new Display tab.

- [x]  Edit an existing closing event for the Display tab. This event should close the related AuiNotebook tab.

- [x]  Edit an existing event for the switching between Display tabs. This event should make the related AuiNotebook tab active.

- [x] Fix an existing RenameDisplay event handler.

- [x] Fix adding and removing of the 3D View pane. Decide where should this tab go when launching 3D for the first time.
",True,1732,https://api.github.com/repos/OSGeo/grass/pulls/1732,https://github.com/OSGeo/grass/pull/1732,closed,190,144,1,5,0,3,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-07-18 10:24:46+00:00,2021-07-30 13:16:40+00:00,1047114.0,"12 days, 2:51:54","[{'comment_id': 674476583, 'comment_body': ""Let's just pick one here and set it directly."", 'comment_created': datetime.datetime(2021, 7, 22, 3, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674478467, 'comment_body': ""style=wx.EXPAND doesn't look correct to me, is that in the documentation somewhere?"", 'comment_created': datetime.datetime(2021, 7, 22, 3, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 674941547, 'comment_body': 'Ok. I have chosen aui.AuiDefaultTabArt() (https://docs.wxpython.org/wx.lib.agw.aui.tabart.AuiDefaultTabArt.html#wx.lib.agw.aui.tabart.AuiDefaultTabArt)', 'comment_created': datetime.datetime(2021, 7, 22, 15, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '60d55fc7c3a6a1064d199790713305cc968eb3ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75a1a1f75646e4bf3603b55e199edbeed1d96051', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7513c666f7bb56e983e902fea2f157f27514cf82', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c2b95204f03819666300c0ffa8c04915162a756', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '66f7d9cd5389a739b01e695e2e2c649a0dc4ec22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
703364590,wxGUI/Single-Window: arrange a startup GUI,"This PR implements the startup GUI arrangement according to the third proposal from https://github.com/OSGeo/grass/issues/1747 which looks as follows:
![126859885-4cc53bf0-293c-42e5-9716-ff51eb7e0e83](https://user-images.githubusercontent.com/49241681/128175406-0ad69859-4bdb-4bd7-b908-7a5acc83dfd4.png)
",True,1775,https://api.github.com/repos/OSGeo/grass/pulls/1775,https://github.com/OSGeo/grass/pull/1775,closed,14,6,1,5,3,7,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-04 11:59:38+00:00,2021-08-17 16:33:02+00:00,1139604.0,"13 days, 4:33:24","[{'comment_id': 683098555, 'comment_body': ""You can get the notebooks like this:\r\n```suggestion\r\n        notebook = self._auimgr.GetNotebooks()[0]\r\n```\r\nbut it's also not ideal."", 'comment_created': datetime.datetime(2021, 8, 5, 3, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 683686570, 'comment_body': 'Not ideal, but better. :-)\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 18, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 685667621, 'comment_body': 'I was playing with the sizing and this is the only thing that worked:\r\n```\r\n+        pane = self._auimgr.GetPane(notebook)\r\n+        pane.MinSize(self.goutput.GetMinSize())\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 3, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686738251, 'comment_body': 'Yes, it works, thank you Anicka.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 687389559, 'comment_body': 'I have found out why it displays invalid map size 0,413. The problem is in the function ChangeMapSize which is called several times each time with GetClientSize() parameter. And this parameter is being changed. I tried to write down the process with ""GetClientSize"" during the startup:\r\n\r\nOnIdle\r\n(0, 413)\r\nInvalid map size 0,413\r\n_updateM\r\n(569, 421)\r\nOnIdle\r\n(569, 421)\r\n_updateM\r\n(569, 421)\r\n\r\nThe problem is in the first call of OnIdle, then it is alright...\r\nBut I think that the problem is generally caused by a very small map size.\r\nWhen we set the size of notebook based on Modules tab, it is alright. And it also alright in terms of GTKCheck warnings in cmd.\r\nSo, I would propose to use Modules tab for this purpose and do not deal with render.py. What do you think @petrasovaa ?', 'comment_created': datetime.datetime(2021, 8, 12, 5, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 687391315, 'comment_body': '> I have found out why it displays invalid map size 0,413. The problem is in the function ChangeMapSize which is called several times each time with GetClientSize() parameter. And this parameter is being changed. I tried to write down the process with ""GetClientSize"" during the startup:\r\n> \r\n> OnIdle\r\n> (0, 413)\r\n> Invalid map size 0,413\r\n> _updateM\r\n> (569, 421)\r\n> OnIdle\r\n> (569, 421)\r\n> _updateM\r\n> (569, 421)\r\n> \r\n> The problem is in the first call of OnIdle, then it is alright...\r\n> But I think that the problem is generally caused by very small map size.\r\n> When we set the size of notebook based on Modules tab, it is alright. And it also alright in terms of GTKCheck warnings in cmd.\r\n> So, I would propose to use Modules tab for this purpose and do not deal with render.py. What do you think @petrasovaa ?\r\n\r\nSorry, fault. Those warnings are still displayed:\r\n(wxgui.py:10746): Gtk-WARNING **: 00:04:09.085: Negative content width -6 (allocation 4, extents 5x5) while allocating gadget (node checkbutton, owner GtkCheckButton)\r\n\r\n(wxgui.py:10746): Gtk-CRITICAL **: 00:04:09.085: gtk_box_gadget_distribute: assertion \'size >= 0\' failed in GtkCheckButton\r\n\r\n(wxgui.py:10746): Gtk-WARNING **: 00:04:09.156: Negative content width -6 (allocation 4, extents 5x5) while allocating gadget (node checkbutton, owner GtkCheckButton)\r\n\r\n(wxgui.py:10746): Gtk-CRITICAL **: 00:04:09.157: gtk_box_gadget_distribute: assertion \'size >= 0\' failed in GtkCheckButton\r\n\r\nI tried also the thing with BestSize but it does not work - notebook is shrunk (same as the second picture in this PR).\r\n\r\nIf we used python tab, warnings would not be displayed, but the notebook would be too narrow (a bit wider than the situation on the second picture though).\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 5, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 688201214, 'comment_body': ""I don't think we should decide that based on the errors we get, they are apparently very arbitrary. Set it to modules tab for now and the errors need to be dealt with separately (not urgent). The ChangeMapSize error reporting could just be removed, it's not needed and the GTK errors are likely coming from the statusbar, so that's again differnt."", 'comment_created': datetime.datetime(2021, 8, 13, 2, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '1cd4c5364c5ac6cf2761909738354ae89c2eb309', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ec615cb080083c6d91a1cb97b2d24ad26c7d2a3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c6bcb601be9d5284391baf4e627e61f92908ce4c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '607e68c34d54b1cb3096fdb721d3295802aa495d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cf905b4401aa31a3a8e4f36a3134a13fc84e3c66', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
705511599,wxGUI/Single-Window: New change page event for AuiNotebook,,True,1780,https://api.github.com/repos/OSGeo/grass/pulls/1780,https://github.com/OSGeo/grass/pull/1780,closed,12,4,2,12,0,4,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-06 14:05:31+00:00,2021-08-13 02:35:21+00:00,563390.0,"6 days, 12:29:50","[{'comment_id': 684578641, 'comment_body': 'There is _onMapDisplayFocus in lmgr/frame.py, which seems to be doing what you need, why this new method?', 'comment_created': datetime.datetime(2021, 8, 7, 3, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686127461, 'comment_body': 'The _onMapDisplayFocus cannot be used as is written now due to the notebookLayerPage parameter. We also make only one Bind to map notebook not many Binds for each Display frame. So the situation is a bit different now.\r\n\r\nBut at least I a bit adapted OnMapNotebookPageChanged method to use a condition from _onMapDisplayFocus (we talked about it in e-mail). Please, write me what you think. _onMapDisplayFocus is not used anywhere else, so I think we no longer need it.', 'comment_created': datetime.datetime(2021, 8, 10, 16, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 686220677, 'comment_body': ""What exception is actually thrown here? It's better to use the specific one to make it more clear what it is trying to do."", 'comment_created': datetime.datetime(2021, 8, 10, 18, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 686732086, 'comment_body': 'It is the TypeError. If I understand it right, the OnMapNotebookChanged is also called during the processing of NewDisplay method. The map panel is already known but the layertree not, so thats the reason why it throws this exception.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '30c8e8aa461b3eeb146433bb51b341d3db2b5132', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fbb9593b25f2f7472c197c31dad6d10508bf16a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4a66b7b8197c5212d602da603b657598ad09f642', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68375dad7bd3675862620c651497b14e1dfed306', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1b1e225890fbc21a48c8745da7f05479182738a7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cb3e24de21e063d7d44d8936093c5eefa32f18b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1fa5d81e10eb5980d166e031485b622a517dfe98', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feb2c1b77252ac9e540aebf42e9a2cbeb4dc8abb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6e27abb2a8af398a24cdd625a32f7a655b736611', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8d85b216fef373c369c68f671adf16017b1522d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a085b55fc8510142918bb88b45722061d920b8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '428c3a5ed02ef9ea68047d98fff728833d3e380c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
712175076,wxGUI/Single-Window: New close page event for AuiNotebook,"This PR addresses several smaller tasks:

- [x] Implements a new aui.EVT_AUINOTEBOOK_PAGE_CLOSE event
- [x] Fixes OnDisplayClose and OnDisplayCloseAll event handlers which are important for the closing of a map notebook page from File menu
- [x] Update list of shorcuts so that the map notebook page can be also closed by CTRL+W shortcut

It moves all OnCloseWindow logic to NewDisplay method.
Multi-Window GUI is not influenced by any changes.

By merging this PR the Issue https://github.com/OSGeo/grass/issues/1750 will be closed.",False,1789,https://api.github.com/repos/OSGeo/grass/pulls/1789,https://github.com/OSGeo/grass/pull/1789,closed,64,19,2,3,2,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-13 08:39:56+00:00,2022-01-13 11:08:43+00:00,13228127.0,"153 days, 2:28:47",[],"[{'commit_sha': '1e58b89703982a3250a37acb258652c8eea977da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae09c8a0f780241ef53b161f89e663792b005cd8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '56f6e8bbcea6c0bde3e15cb6990cfbab6cf297d8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
668864914,wxGUI: SaveToFile() missing 1 required positional argument,"missing argument added

fixes #1636",True,1637,https://api.github.com/repos/OSGeo/grass/pulls/1637,https://github.com/OSGeo/grass/pull/1637,closed,1,1,1,1,0,0,2,0,"[{'name': 'bug'}, {'name': 'GUI'}]",2021-06-12 13:06:29+00:00,2021-06-12 20:00:24+00:00,24835.0,6:53:55,[],"[{'commit_sha': '0ca942e86432cf2564aec5934959d5f8f20c92fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
673912684,wxGUI: Workspace save fails with SbManager has no IsShown,"I tried to find all occurrences by grep -Irn ""anager.Show"" and grep -Irn ""anager.IsShown"", now it should be ok.",True,1665,https://api.github.com/repos/OSGeo/grass/pulls/1665,https://github.com/OSGeo/grass/pull/1665,closed,4,4,3,1,0,0,3,0,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-06-19 17:48:43+00:00,2021-06-20 02:45:39+00:00,32216.0,8:56:56,[],"[{'commit_sha': 'e6a1cb25120df86fc834dc6766cab4b16e709327', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
680272301,MapSwipe window has wrong title,,True,1692,https://api.github.com/repos/OSGeo/grass/pulls/1692,https://github.com/OSGeo/grass/pull/1692,closed,1,1,1,2,1,0,2,0,"[{'name': 'bug'}, {'name': 'GUI'}]",2021-06-29 18:28:09+00:00,2021-06-30 02:45:20+00:00,29831.0,8:17:11,[],"[{'commit_sha': '907f8f526cb0d607dd7037fbc2af7054ee483f4b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a1d911694b79c18a4c4632b361cf82cd1704363d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
685861352,wxGUI/MapSwipe: Show comp. extent option in statusbar does not work #1714,,True,1717,https://api.github.com/repos/OSGeo/grass/pulls/1717,https://github.com/OSGeo/grass/pull/1717,closed,3,3,1,1,0,0,3,0,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-07-08 09:52:24+00:00,2021-07-08 13:45:57+00:00,14013.0,3:53:33,[],"[{'commit_sha': '10c38e9ac9e54a26f2a07241eaed8b707b1d9d00', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
707493182,wxGUI: NewDisplay button moved to LMToolsToolbar,"On the video call on August 5th, we decided to put the NewDisplay button to LMToolsToolbar. It is a more straightforward way how to approach this function, especially for a new Single-Window GUI. But it is also a more advantageous solution for a current Multi-Window layout.

Before:
![pred](https://user-images.githubusercontent.com/49241681/128902304-ad6aa953-df87-4814-9c3d-67e71893ebf5.PNG)
The NewDisplay button is a part of the toolbar for the Display panel.

After:
![po](https://user-images.githubusercontent.com/49241681/128902543-d1500836-53ad-4485-9c3a-5ea745fa9ba6.PNG)
The NewDisplay button is a part of the upper Tools toolbar, so it is available always regardless of which notebook tab is active.

",True,1783,https://api.github.com/repos/OSGeo/grass/pulls/1783,https://github.com/OSGeo/grass/pull/1783,closed,5,5,1,1,0,0,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-10 17:01:25+00:00,2021-08-11 03:14:41+00:00,36796.0,10:13:16,[],"[{'commit_sha': 'b395258232ecdfb3a4eb174a523551e7c3d8789a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
709087062,wxGUI: Each layertree has its own display toolbar,"Before:
![Screenshot from 2021-08-11 09-53-50](https://user-images.githubusercontent.com/49241681/129052297-168e814e-0d3a-4531-8219-f7e8ae03e49b.png)

After:
![Screenshot from 2021-08-11 09-29-24](https://user-images.githubusercontent.com/49241681/129051790-c1bfde51-852d-4446-bd0c-a8b7942adda5.png)
",True,1785,https://api.github.com/repos/OSGeo/grass/pulls/1785,https://github.com/OSGeo/grass/pull/1785,closed,23,54,2,3,2,0,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-11 14:55:00+00:00,2021-08-19 02:13:40+00:00,645520.0,"7 days, 11:18:40",[],"[{'commit_sha': '4fc8c2c6be868258a4195b70ae269cf6942e4694', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '531fca482e025ae0fb954e7a2acd60bf18baf519', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fcd187f80dc3239dfcd9c2c0c49b6d317c3117df', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
714117350,wxGUI: new design for GNotebooks,"This PR creates a new design without using an old green color for GNotebooks.
It involves GNotebooks for lmgr, nviz, vnet and dmgr (all notebooks which use globalvar.FNPageColor variable).
I think it is a good idea to have the look of all these notebooks uniform.

Multi-Window GUI lmgr notebook before:
![normalmulti](https://user-images.githubusercontent.com/49241681/129676879-39202dbb-474d-4254-9720-05cfc1489997.PNG)


",True,1801,https://api.github.com/repos/OSGeo/grass/pulls/1801,https://github.com/OSGeo/grass/pull/1801,closed,62,98,13,11,13,6,4,0,"[{'name': 'enhancement'}, {'name': 'question'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2021-08-17 10:29:57+00:00,2021-10-05 14:42:36+00:00,4248759.0,"49 days, 4:12:39","[{'comment_id': 698121505, 'comment_body': 'Please update the docstring above (system colors).', 'comment_created': datetime.datetime(2021, 8, 30, 2, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 698137587, 'comment_body': ""Could you completely remove this style? It doesn't make sense to leave it there, it's very similar to the simple top style."", 'comment_created': datetime.datetime(2021, 8, 30, 3, 26, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 702535321, 'comment_body': 'I wanted to remove the Fancy green, not Basic left, what is supposed to be Normal style?', 'comment_created': datetime.datetime(2021, 9, 6, 3, 10, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 702535466, 'comment_body': 'keep this', 'comment_created': datetime.datetime(2021, 9, 6, 3, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 702535552, 'comment_body': 'remove this', 'comment_created': datetime.datetime(2021, 9, 6, 3, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 702536075, 'comment_body': 'Hmm, uses system colours and does not respect system colors at the same time?', 'comment_created': datetime.datetime(2021, 9, 6, 3, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '7c9190e8147cac9fa58739e6b64eaa9f61114e68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73d0fcac28ea4aac154c1d5c05d31f028622e98d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37b30881c74696e532efd9f3283605b3e77d3dc2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ed7426de08215dd8a08acaafd976f4108f7f4510', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1d925926978204ebcdaacd15cd517f48b086cb4f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5b661ca8ca7f7dd5e8f1715503405c42fb013425', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5c407991eb3aaf897964f4b299150bf4473a6ba5', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57a4627593f4512b825d5c00d60e33575b346f63', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bceec205dc9e32cdab59be04fd47fcee04f3fd93', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '302cf48eb5e476318740d842e3ffaede42d4f5cf', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'af3cf7cd1425090c4176a09d579a02a661c0b706', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
187247007,grass,OSGeo/grass,C,297,816,46,123,22887,534,18,123,"[{'id': 1928494697, 'number': 3896, 'closed': datetime.datetime(2024, 8, 14, 15, 27, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 19, 11, 5, 50, tzinfo=datetime.timezone.utc), 'time_taken': 4854097.0, 'time_delta': '56 days, 4:21:37', 'additions': 232, 'deletions': 117, 'state': 'closed'}, {'id': 1886047419, 'number': 3732, 'closed': datetime.datetime(2024, 5, 27, 14, 13, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 24, 6, 25, 3, tzinfo=datetime.timezone.utc), 'time_taken': 287332.0, 'time_delta': '3 days, 7:48:52', 'additions': 10, 'deletions': 5, 'state': 'closed'}, {'id': 1873615963, 'number': 3714, 'closed': datetime.datetime(2024, 5, 16, 15, 44, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 16, 14, 29, 46, tzinfo=datetime.timezone.utc), 'time_taken': 4462.0, 'time_delta': '1:14:22', 'additions': 33, 'deletions': 21, 'state': 'closed'}, {'id': 1847411178, 'number': 3679, 'closed': datetime.datetime(2024, 5, 9, 13, 47, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 30, 8, 57, 55, tzinfo=datetime.timezone.utc), 'time_taken': 794995.0, 'time_delta': '9 days, 4:49:55', 'additions': 383, 'deletions': 36, 'state': 'closed'}, {'id': 1829200763, 'number': 3622, 'closed': datetime.datetime(2024, 5, 2, 15, 3, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 18, 10, 6, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1227408.0, 'time_delta': '14 days, 4:56:48', 'additions': 428, 'deletions': 139, 'state': 'closed'}, {'id': 1724280674, 'number': 3421, 'closed': datetime.datetime(2024, 5, 10, 13, 15, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 13, 16, 43, 26, tzinfo=datetime.timezone.utc), 'time_taken': 7504344.0, 'time_delta': '86 days, 20:32:24', 'additions': 113, 'deletions': 23, 'state': 'closed'}, {'id': 1710521802, 'number': 3402, 'closed': datetime.datetime(2024, 2, 7, 8, 58, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 4, 19, 7, 6, tzinfo=datetime.timezone.utc), 'time_taken': 222703.0, 'time_delta': '2 days, 13:51:43', 'additions': 52, 'deletions': 45, 'state': 'closed'}, {'id': 1681836956, 'number': 3365, 'closed': datetime.datetime(2024, 2, 18, 9, 24, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 16, 20, 53, 31, tzinfo=datetime.timezone.utc), 'time_taken': 2809832.0, 'time_delta': '32 days, 12:30:32', 'additions': 743, 'deletions': 182, 'state': 'closed'}, {'id': 1668775651, 'number': 3342, 'closed': datetime.datetime(2024, 1, 18, 14, 36, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 8, 11, 43, 12, tzinfo=datetime.timezone.utc), 'time_taken': 874373.0, 'time_delta': '10 days, 2:52:53', 'additions': 300, 'deletions': 154, 'state': 'closed'}, {'id': 1596395008, 'number': 3234, 'closed': datetime.datetime(2023, 12, 8, 4, 6, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 10, 15, 27, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2378306.0, 'time_delta': '27 days, 12:38:26', 'additions': 372, 'deletions': 115, 'state': 'closed'}, {'id': 1378843687, 'number': 3024, 'closed': datetime.datetime(2023, 6, 21, 8, 57, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 11, 48, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1372157.0, 'time_delta': '15 days, 21:09:17', 'additions': 59, 'deletions': 41, 'state': 'closed'}, {'id': 1378529656, 'number': 3017, 'closed': datetime.datetime(2024, 4, 27, 2, 52, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 8, 25, 43, tzinfo=datetime.timezone.utc), 'time_taken': 28232786.0, 'time_delta': '326 days, 18:26:26', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1375834093, 'number': 2994, 'closed': datetime.datetime(2023, 6, 3, 11, 39, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 2, 14, 1, 36, tzinfo=datetime.timezone.utc), 'time_taken': 77868.0, 'time_delta': '21:37:48', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1212067769, 'number': 2768, 'closed': datetime.datetime(2023, 2, 28, 18, 1, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 20, 21, 4, 44, tzinfo=datetime.timezone.utc), 'time_taken': 3358631.0, 'time_delta': '38 days, 20:57:11', 'additions': 63, 'deletions': 2, 'state': 'closed'}, {'id': 1196853073, 'number': 2746, 'closed': datetime.datetime(2023, 2, 8, 21, 11, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 13, 15, 10, 35, tzinfo=datetime.timezone.utc), 'time_taken': 2268030.0, 'time_delta': '26 days, 6:00:30', 'additions': 33, 'deletions': 82, 'state': 'closed'}, {'id': 1185150509, 'number': 2728, 'closed': datetime.datetime(2023, 1, 10, 17, 50, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 4, 16, 22, 28, tzinfo=datetime.timezone.utc), 'time_taken': 523660.0, 'time_delta': '6 days, 1:27:40', 'additions': 28, 'deletions': 1, 'state': 'closed'}, {'id': 1177318960, 'number': 2718, 'closed': datetime.datetime(2023, 1, 13, 15, 19, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 25, 20, 11, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1624072.0, 'time_delta': '18 days, 19:07:52', 'additions': 99, 'deletions': 8, 'state': 'closed'}, {'id': 1145107605, 'number': 2682, 'closed': datetime.datetime(2023, 1, 5, 14, 52, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 4, 15, 48, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2761466.0, 'time_delta': '31 days, 23:04:26', 'additions': 49, 'deletions': 70, 'state': 'closed'}, {'id': 1136684004, 'number': 2667, 'closed': datetime.datetime(2023, 6, 2, 12, 43, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 27, 12, 50, 27, tzinfo=datetime.timezone.utc), 'time_taken': 16156381.0, 'time_delta': '186 days, 23:53:01', 'additions': 507, 'deletions': 127, 'state': 'closed'}, {'id': 1045117603, 'number': 2568, 'closed': datetime.datetime(2022, 10, 28, 4, 10, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 2, 16, 54, 31, tzinfo=datetime.timezone.utc), 'time_taken': 4792543.0, 'time_delta': '55 days, 11:15:43', 'additions': 193, 'deletions': 77, 'state': 'closed'}, {'id': 872484205, 'number': 2251, 'closed': datetime.datetime(2022, 3, 21, 13, 21, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 6, 15, 51, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1287052.0, 'time_delta': '14 days, 21:30:52', 'additions': 100, 'deletions': 47, 'state': 'closed'}, {'id': 854576117, 'number': 2216, 'closed': datetime.datetime(2022, 2, 25, 2, 6, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 16, 16, 8, 40, tzinfo=datetime.timezone.utc), 'time_taken': 727062.0, 'time_delta': '8 days, 9:57:42', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 854471566, 'number': 2214, 'closed': datetime.datetime(2022, 2, 20, 3, 30, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 16, 14, 30, 16, tzinfo=datetime.timezone.utc), 'time_taken': 305986.0, 'time_delta': '3 days, 12:59:46', 'additions': 385, 'deletions': 1, 'state': 'closed'}, {'id': 847811829, 'number': 2190, 'closed': datetime.datetime(2022, 2, 11, 17, 59, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 11, 16, 5, 13, tzinfo=datetime.timezone.utc), 'time_taken': 6839.0, 'time_delta': '1:53:59', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 841641941, 'number': 2178, 'closed': datetime.datetime(2022, 2, 8, 4, 38, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 7, 11, 56, 27, tzinfo=datetime.timezone.utc), 'time_taken': 60150.0, 'time_delta': '16:42:30', 'additions': 16, 'deletions': 24, 'state': 'closed'}, {'id': 839400810, 'number': 2155, 'closed': datetime.datetime(2022, 2, 9, 21, 21, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 3, 15, 9, 44, tzinfo=datetime.timezone.utc), 'time_taken': 540702.0, 'time_delta': '6 days, 6:11:42', 'additions': 70, 'deletions': 282, 'state': 'closed'}, {'id': 839127472, 'number': 2153, 'closed': datetime.datetime(2022, 3, 2, 5, 17, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 3, 10, 10, 12, tzinfo=datetime.timezone.utc), 'time_taken': 2315251.0, 'time_delta': '26 days, 19:07:31', 'additions': 108, 'deletions': 92, 'state': 'closed'}, {'id': 829795776, 'number': 2121, 'closed': datetime.datetime(2022, 1, 26, 5, 9, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 23, 17, 22, 26, tzinfo=datetime.timezone.utc), 'time_taken': 215231.0, 'time_delta': '2 days, 11:47:11', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 825760842, 'number': 2106, 'closed': datetime.datetime(2022, 1, 20, 2, 6, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 18, 18, 24, 2, tzinfo=datetime.timezone.utc), 'time_taken': 114167.0, 'time_delta': '1 day, 7:42:47', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 821096401, 'number': 2089, 'closed': datetime.datetime(2022, 1, 28, 4, 30, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 13, 15, 14, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1257402.0, 'time_delta': '14 days, 13:16:42', 'additions': 212, 'deletions': 67, 'state': 'closed'}, {'id': 820064155, 'number': 2087, 'closed': datetime.datetime(2022, 1, 31, 14, 31, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 12, 20, 40, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1619457.0, 'time_delta': '18 days, 17:50:57', 'additions': 94, 'deletions': 5, 'state': 'closed'}, {'id': 809102450, 'number': 2031, 'closed': datetime.datetime(2022, 1, 12, 19, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 23, 11, 50, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1755351.0, 'time_delta': '20 days, 7:35:51', 'additions': 345, 'deletions': 7, 'state': 'closed'}, {'id': 805112297, 'number': 2021, 'closed': datetime.datetime(2021, 12, 17, 14, 52, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 17, 7, 26, 35, tzinfo=datetime.timezone.utc), 'time_taken': 26743.0, 'time_delta': '7:25:43', 'additions': 1, 'deletions': 10, 'state': 'closed'}, {'id': 749955321, 'number': 1927, 'closed': datetime.datetime(2021, 12, 10, 19, 49, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 5, 14, 48, 44, tzinfo=datetime.timezone.utc), 'time_taken': 5720440.0, 'time_delta': '66 days, 5:00:40', 'additions': 48, 'deletions': 48, 'state': 'closed'}, {'id': 721789179, 'number': 1830, 'closed': datetime.datetime(2021, 8, 29, 2, 39, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 28, 13, 48, 45, tzinfo=datetime.timezone.utc), 'time_taken': 46224.0, 'time_delta': '12:50:24', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 714117350, 'number': 1801, 'closed': datetime.datetime(2021, 10, 5, 14, 42, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 10, 29, 57, tzinfo=datetime.timezone.utc), 'time_taken': 4248759.0, 'time_delta': '49 days, 4:12:39', 'additions': 62, 'deletions': 98, 'state': 'closed'}, {'id': 712175076, 'number': 1789, 'closed': datetime.datetime(2022, 1, 13, 11, 8, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 8, 39, 56, tzinfo=datetime.timezone.utc), 'time_taken': 13228127.0, 'time_delta': '153 days, 2:28:47', 'additions': 64, 'deletions': 19, 'state': 'closed'}, {'id': 709087062, 'number': 1785, 'closed': datetime.datetime(2021, 8, 19, 2, 13, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 14, 55, tzinfo=datetime.timezone.utc), 'time_taken': 645520.0, 'time_delta': '7 days, 11:18:40', 'additions': 23, 'deletions': 54, 'state': 'closed'}, {'id': 707493182, 'number': 1783, 'closed': datetime.datetime(2021, 8, 11, 3, 14, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 17, 1, 25, tzinfo=datetime.timezone.utc), 'time_taken': 36796.0, 'time_delta': '10:13:16', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 705511599, 'number': 1780, 'closed': datetime.datetime(2021, 8, 13, 2, 35, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 14, 5, 31, tzinfo=datetime.timezone.utc), 'time_taken': 563390.0, 'time_delta': '6 days, 12:29:50', 'additions': 12, 'deletions': 4, 'state': 'closed'}, {'id': 703364590, 'number': 1775, 'closed': datetime.datetime(2021, 8, 17, 16, 33, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 11, 59, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1139604.0, 'time_delta': '13 days, 4:33:24', 'additions': 14, 'deletions': 6, 'state': 'closed'}, {'id': 692065714, 'number': 1732, 'closed': datetime.datetime(2021, 7, 30, 13, 16, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 10, 24, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1047114.0, 'time_delta': '12 days, 2:51:54', 'additions': 190, 'deletions': 144, 'state': 'closed'}, {'id': 685861352, 'number': 1717, 'closed': datetime.datetime(2021, 7, 8, 13, 45, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 9, 52, 24, tzinfo=datetime.timezone.utc), 'time_taken': 14013.0, 'time_delta': '3:53:33', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 680272301, 'number': 1692, 'closed': datetime.datetime(2021, 6, 30, 2, 45, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 18, 28, 9, tzinfo=datetime.timezone.utc), 'time_taken': 29831.0, 'time_delta': '8:17:11', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 679724343, 'number': 1689, 'closed': datetime.datetime(2021, 7, 29, 3, 13, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 8, 38, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2572466.0, 'time_delta': '29 days, 18:34:26', 'additions': 429, 'deletions': 442, 'state': 'closed'}, {'id': 675470424, 'number': 1675, 'closed': datetime.datetime(2021, 12, 16, 15, 24, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 14, 22, 13, tzinfo=datetime.timezone.utc), 'time_taken': 15296545.0, 'time_delta': '177 days, 1:02:25', 'additions': 914, 'deletions': 468, 'state': 'closed'}, {'id': 673912684, 'number': 1665, 'closed': datetime.datetime(2021, 6, 20, 2, 45, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 17, 48, 43, tzinfo=datetime.timezone.utc), 'time_taken': 32216.0, 'time_delta': '8:56:56', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 673599586, 'number': 1656, 'closed': datetime.datetime(2021, 6, 22, 14, 7, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 16, 27, 34, tzinfo=datetime.timezone.utc), 'time_taken': 337198.0, 'time_delta': '3 days, 21:39:58', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 670523148, 'number': 1646, 'closed': datetime.datetime(2021, 6, 16, 16, 38, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 15, 39, 46, tzinfo=datetime.timezone.utc), 'time_taken': 89930.0, 'time_delta': '1 day, 0:58:50', 'additions': 34, 'deletions': 13, 'state': 'closed'}, {'id': 668864914, 'number': 1637, 'closed': datetime.datetime(2021, 6, 12, 20, 0, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 13, 6, 29, tzinfo=datetime.timezone.utc), 'time_taken': 24835.0, 'time_delta': '6:53:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 662547142, 'number': 1621, 'closed': datetime.datetime(2021, 6, 13, 19, 4, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 18, 26, 24, tzinfo=datetime.timezone.utc), 'time_taken': 693463.0, 'time_delta': '8 days, 0:37:43', 'additions': 156, 'deletions': 155, 'state': 'closed'}, {'id': 657760373, 'number': 1604, 'closed': datetime.datetime(2021, 6, 4, 15, 42, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 30, 17, 36, 47, tzinfo=datetime.timezone.utc), 'time_taken': 425148.0, 'time_delta': '4 days, 22:05:48', 'additions': 2257, 'deletions': 2, 'state': 'closed'}, {'id': 654594668, 'number': 1598, 'closed': datetime.datetime(2021, 5, 31, 19, 38, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 7, 27, 8, tzinfo=datetime.timezone.utc), 'time_taken': 389506.0, 'time_delta': '4 days, 12:11:46', 'additions': 28, 'deletions': 13, 'state': 'closed'}, {'id': 650629038, 'number': 1591, 'closed': datetime.datetime(2021, 5, 30, 4, 19, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 13, 34, 43, tzinfo=datetime.timezone.utc), 'time_taken': 657865.0, 'time_delta': '7 days, 14:44:25', 'additions': 54, 'deletions': 30, 'state': 'closed'}, {'id': 650603658, 'number': 1590, 'closed': datetime.datetime(2021, 5, 30, 4, 22, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 10, 13, 50, tzinfo=datetime.timezone.utc), 'time_taken': 670099.0, 'time_delta': '7 days, 18:08:19', 'additions': 56, 'deletions': 11, 'state': 'closed'}, {'id': 645154697, 'number': 1577, 'closed': datetime.datetime(2021, 6, 12, 20, 3, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 15, 14, 21, 30, tzinfo=datetime.timezone.utc), 'time_taken': 2439739.0, 'time_delta': '28 days, 5:42:19', 'additions': 75, 'deletions': 178, 'state': 'closed'}, {'id': 610023920, 'number': 1504, 'closed': datetime.datetime(2021, 4, 8, 12, 46, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 6, 17, 18, 25, tzinfo=datetime.timezone.utc), 'time_taken': 156491.0, 'time_delta': '1 day, 19:28:11', 'additions': 13, 'deletions': 7, 'state': 'closed'}, {'id': 607848169, 'number': 1497, 'closed': datetime.datetime(2023, 11, 18, 17, 50, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 6, 37, 8, tzinfo=datetime.timezone.utc), 'time_taken': 82984381.0, 'time_delta': '960 days, 11:13:01', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 602275833, 'number': 1485, 'closed': datetime.datetime(2021, 3, 29, 0, 13, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 28, 17, 20, 31, tzinfo=datetime.timezone.utc), 'time_taken': 24775.0, 'time_delta': '6:52:55', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 588353917, 'number': 1437, 'closed': datetime.datetime(2021, 4, 10, 2, 43, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 9, 17, 35, 28, tzinfo=datetime.timezone.utc), 'time_taken': 2711298.0, 'time_delta': '31 days, 9:08:18', 'additions': 525, 'deletions': 502, 'state': 'closed'}, {'id': 578632509, 'number': 1400, 'closed': datetime.datetime(2021, 4, 13, 4, 45, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 23, 17, 41, 35, tzinfo=datetime.timezone.utc), 'time_taken': 4187040.0, 'time_delta': '48 days, 11:04:00', 'additions': 344, 'deletions': 1228, 'state': 'closed'}, {'id': 571981404, 'number': 1321, 'closed': datetime.datetime(2021, 3, 24, 20, 4, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 11, 17, 19, 24, tzinfo=datetime.timezone.utc), 'time_taken': 3552314.0, 'time_delta': '41 days, 2:45:14', 'additions': 61, 'deletions': 68, 'state': 'closed'}, {'id': 544101854, 'number': 1205, 'closed': datetime.datetime(2023, 3, 7, 11, 9, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 22, 12, 48, 4, tzinfo=datetime.timezone.utc), 'time_taken': 69546085.0, 'time_delta': '804 days, 22:21:25', 'additions': 33, 'deletions': 4, 'state': 'closed'}, {'id': 544074547, 'number': 1204, 'closed': datetime.datetime(2021, 1, 27, 2, 57, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 22, 11, 54, 16, tzinfo=datetime.timezone.utc), 'time_taken': 3078200.0, 'time_delta': '35 days, 15:03:20', 'additions': 128, 'deletions': 61, 'state': 'closed'}, {'id': 542035507, 'number': 1183, 'closed': datetime.datetime(2020, 12, 21, 20, 4, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 17, 18, 5, 21, tzinfo=datetime.timezone.utc), 'time_taken': 352745.0, 'time_delta': '4 days, 1:59:05', 'additions': 58, 'deletions': 9, 'state': 'closed'}, {'id': 539008000, 'number': 1173, 'closed': datetime.datetime(2020, 12, 15, 19, 48, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 13, 19, 38, 58, tzinfo=datetime.timezone.utc), 'time_taken': 173360.0, 'time_delta': '2 days, 0:09:20', 'additions': 11, 'deletions': 32, 'state': 'closed'}, {'id': 518626460, 'number': 1078, 'closed': datetime.datetime(2020, 12, 15, 20, 7, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 10, 16, 52, 25, tzinfo=datetime.timezone.utc), 'time_taken': 3035734.0, 'time_delta': '35 days, 3:15:34', 'additions': 197, 'deletions': 7, 'state': 'closed'}, {'id': 516149416, 'number': 1070, 'closed': datetime.datetime(2020, 12, 15, 15, 1, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 5, 15, 33, 54, tzinfo=datetime.timezone.utc), 'time_taken': 3454034.0, 'time_delta': '39 days, 23:27:14', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 474010280, 'number': 937, 'closed': datetime.datetime(2021, 1, 27, 15, 2, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 16, 9, 28, tzinfo=datetime.timezone.utc), 'time_taken': 13301561.0, 'time_delta': '153 days, 22:52:41', 'additions': 13, 'deletions': 1, 'state': 'closed'}, {'id': 473981327, 'number': 936, 'closed': datetime.datetime(2020, 8, 26, 16, 42, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 15, 21, 8, tzinfo=datetime.timezone.utc), 'time_taken': 4861.0, 'time_delta': '1:21:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 470884654, 'number': 920, 'closed': datetime.datetime(2020, 8, 24, 4, 10, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 12, 47, 36, tzinfo=datetime.timezone.utc), 'time_taken': 314571.0, 'time_delta': '3 days, 15:22:51', 'additions': 343, 'deletions': 211, 'state': 'closed'}, {'id': 470167193, 'number': 916, 'closed': datetime.datetime(2020, 11, 22, 4, 19, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 13, 31, 42, tzinfo=datetime.timezone.utc), 'time_taken': 8174839.0, 'time_delta': '94 days, 14:47:19', 'additions': 15, 'deletions': 75, 'state': 'closed'}, {'id': 470130392, 'number': 915, 'closed': datetime.datetime(2020, 8, 20, 3, 26, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 12, 25, 52, tzinfo=datetime.timezone.utc), 'time_taken': 54030.0, 'time_delta': '15:00:30', 'additions': 25, 'deletions': 10, 'state': 'closed'}, {'id': 470042118, 'number': 914, 'closed': datetime.datetime(2020, 8, 19, 17, 52, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 9, 34, 32, tzinfo=datetime.timezone.utc), 'time_taken': 29883.0, 'time_delta': '8:18:03', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 468024526, 'number': 906, 'closed': datetime.datetime(2020, 8, 18, 17, 13, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 14, 45, 12, tzinfo=datetime.timezone.utc), 'time_taken': 354501.0, 'time_delta': '4 days, 2:28:21', 'additions': 127, 'deletions': 35, 'state': 'closed'}, {'id': 466861464, 'number': 904, 'closed': datetime.datetime(2020, 8, 19, 17, 42, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 15, 53, 13, tzinfo=datetime.timezone.utc), 'time_taken': 611358.0, 'time_delta': '7 days, 1:49:18', 'additions': 333, 'deletions': 239, 'state': 'closed'}, {'id': 465145424, 'number': 886, 'closed': datetime.datetime(2020, 8, 12, 13, 35, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 9, 12, 20, 56, tzinfo=datetime.timezone.utc), 'time_taken': 263667.0, 'time_delta': '3 days, 1:14:27', 'additions': 26, 'deletions': 4, 'state': 'closed'}, {'id': 462802226, 'number': 875, 'closed': datetime.datetime(2020, 8, 8, 2, 23, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 14, 26, 13, tzinfo=datetime.timezone.utc), 'time_taken': 302240.0, 'time_delta': '3 days, 11:57:20', 'additions': 76, 'deletions': 34, 'state': 'closed'}, {'id': 461780523, 'number': 870, 'closed': datetime.datetime(2020, 8, 10, 18, 14, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 2, 9, 1, 19, tzinfo=datetime.timezone.utc), 'time_taken': 724411.0, 'time_delta': '8 days, 9:13:31', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 460894257, 'number': 868, 'closed': datetime.datetime(2020, 8, 20, 4, 13, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 1, 8, 3, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1627795.0, 'time_delta': '18 days, 20:09:55', 'additions': 84, 'deletions': 4, 'state': 'closed'}, {'id': 459360730, 'number': 858, 'closed': datetime.datetime(2020, 8, 8, 2, 26, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 16, 19, 48, tzinfo=datetime.timezone.utc), 'time_taken': 727591.0, 'time_delta': '8 days, 10:06:31', 'additions': 179, 'deletions': 12, 'state': 'closed'}, {'id': 458462469, 'number': 849, 'closed': datetime.datetime(2020, 8, 11, 16, 46, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 14, 4, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1132926.0, 'time_delta': '13 days, 2:42:06', 'additions': 117, 'deletions': 35, 'state': 'closed'}, {'id': 458383229, 'number': 848, 'closed': datetime.datetime(2020, 8, 4, 12, 6, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 11, 40, 56, tzinfo=datetime.timezone.utc), 'time_taken': 519929.0, 'time_delta': '6 days, 0:25:29', 'additions': 196, 'deletions': 108, 'state': 'closed'}, {'id': 456128296, 'number': 830, 'closed': datetime.datetime(2020, 7, 25, 3, 4, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 24, 7, 38, 39, tzinfo=datetime.timezone.utc), 'time_taken': 69978.0, 'time_delta': '19:26:18', 'additions': 147, 'deletions': 175, 'state': 'closed'}, {'id': 453688701, 'number': 811, 'closed': datetime.datetime(2020, 7, 24, 3, 24, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 17, 55, 57, tzinfo=datetime.timezone.utc), 'time_taken': 293331.0, 'time_delta': '3 days, 9:28:51', 'additions': 275, 'deletions': 18, 'state': 'closed'}, {'id': 452079528, 'number': 802, 'closed': datetime.datetime(2020, 7, 23, 1, 59, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 18, 49, 8, tzinfo=datetime.timezone.utc), 'time_taken': 371421.0, 'time_delta': '4 days, 7:10:21', 'additions': 17, 'deletions': 17, 'state': 'closed'}, {'id': 450275738, 'number': 795, 'closed': datetime.datetime(2020, 7, 24, 4, 18, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 15, 14, 24, tzinfo=datetime.timezone.utc), 'time_taken': 651840.0, 'time_delta': '7 days, 13:04:00', 'additions': 135, 'deletions': 70, 'state': 'closed'}, {'id': 448951069, 'number': 790, 'closed': datetime.datetime(2020, 7, 24, 2, 0, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 14, 15, 23, 53, tzinfo=datetime.timezone.utc), 'time_taken': 815787.0, 'time_delta': '9 days, 10:36:27', 'additions': 214, 'deletions': 121, 'state': 'closed'}, {'id': 448878125, 'number': 789, 'closed': datetime.datetime(2020, 7, 22, 2, 21, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 14, 13, 23, 39, tzinfo=datetime.timezone.utc), 'time_taken': 651463.0, 'time_delta': '7 days, 12:57:43', 'additions': 34, 'deletions': 25, 'state': 'closed'}, {'id': 448366554, 'number': 783, 'closed': datetime.datetime(2020, 7, 17, 3, 50, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 16, 36, 36, tzinfo=datetime.timezone.utc), 'time_taken': 299617.0, 'time_delta': '3 days, 11:13:37', 'additions': 97, 'deletions': 96, 'state': 'closed'}, {'id': 444862259, 'number': 771, 'closed': datetime.datetime(2020, 7, 14, 3, 22, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 6, 15, 54, 11, tzinfo=datetime.timezone.utc), 'time_taken': 646117.0, 'time_delta': '7 days, 11:28:37', 'additions': 466, 'deletions': 252, 'state': 'closed'}, {'id': 443536293, 'number': 761, 'closed': datetime.datetime(2020, 7, 13, 3, 5, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 2, 13, 59, 15, tzinfo=datetime.timezone.utc), 'time_taken': 911199.0, 'time_delta': '10 days, 13:06:39', 'additions': 281, 'deletions': 152, 'state': 'closed'}, {'id': 442754587, 'number': 756, 'closed': datetime.datetime(2020, 7, 2, 2, 0, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 14, 54, 23, tzinfo=datetime.timezone.utc), 'time_taken': 39960.0, 'time_delta': '11:06:00', 'additions': 15, 'deletions': 14, 'state': 'closed'}, {'id': 442678497, 'number': 755, 'closed': datetime.datetime(2020, 7, 2, 1, 48, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 12, 51, 13, tzinfo=datetime.timezone.utc), 'time_taken': 46664.0, 'time_delta': '12:57:44', 'additions': 34, 'deletions': 53, 'state': 'closed'}, {'id': 440097311, 'number': 736, 'closed': datetime.datetime(2020, 6, 26, 1, 39, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 15, 29, 42, tzinfo=datetime.timezone.utc), 'time_taken': 36595.0, 'time_delta': '10:09:55', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 438788813, 'number': 731, 'closed': datetime.datetime(2020, 7, 1, 1, 56, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 20, 0, 35, tzinfo=datetime.timezone.utc), 'time_taken': 626137.0, 'time_delta': '7 days, 5:55:37', 'additions': 179, 'deletions': 77, 'state': 'closed'}, {'id': 438030371, 'number': 728, 'closed': datetime.datetime(2020, 6, 25, 2, 48, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 15, 47, 26, tzinfo=datetime.timezone.utc), 'time_taken': 212478.0, 'time_delta': '2 days, 11:01:18', 'additions': 80, 'deletions': 85, 'state': 'closed'}, {'id': 437025601, 'number': 721, 'closed': datetime.datetime(2020, 6, 23, 2, 32, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 10, 36, 12, tzinfo=datetime.timezone.utc), 'time_taken': 316598.0, 'time_delta': '3 days, 15:56:38', 'additions': 55, 'deletions': 83, 'state': 'closed'}, {'id': 433804729, 'number': 705, 'closed': datetime.datetime(2020, 6, 23, 2, 48, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 17, 31, 34, tzinfo=datetime.timezone.utc), 'time_taken': 897415.0, 'time_delta': '10 days, 9:16:55', 'additions': 56, 'deletions': 1, 'state': 'closed'}, {'id': 422453525, 'number': 670, 'closed': datetime.datetime(2020, 6, 13, 2, 35, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 24, 18, 47, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1669642.0, 'time_delta': '19 days, 7:47:22', 'additions': 150, 'deletions': 126, 'state': 'closed'}, {'id': 422330368, 'number': 664, 'closed': datetime.datetime(2020, 6, 20, 18, 8, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 23, 21, 38, 41, tzinfo=datetime.timezone.utc), 'time_taken': 2406579.0, 'time_delta': '27 days, 20:29:39', 'additions': 13, 'deletions': 25, 'state': 'closed'}, {'id': 421002122, 'number': 657, 'closed': datetime.datetime(2020, 5, 30, 1, 37, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 20, 28, 5, tzinfo=datetime.timezone.utc), 'time_taken': 796139.0, 'time_delta': '9 days, 5:08:59', 'additions': 4, 'deletions': 12, 'state': 'closed'}, {'id': 419661176, 'number': 646, 'closed': datetime.datetime(2020, 5, 23, 1, 31, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 18, 18, 12, 40, tzinfo=datetime.timezone.utc), 'time_taken': 371919.0, 'time_delta': '4 days, 7:18:39', 'additions': 56, 'deletions': 54, 'state': 'closed'}, {'id': 400382150, 'number': 493, 'closed': datetime.datetime(2020, 4, 9, 15, 51, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 16, 42, 30, tzinfo=datetime.timezone.utc), 'time_taken': 169742.0, 'time_delta': '1 day, 23:09:02', 'additions': 12, 'deletions': 22, 'state': 'closed'}]"
