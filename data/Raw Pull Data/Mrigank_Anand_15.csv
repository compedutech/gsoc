pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
705701271,Refactor Javascript Code,,True,333,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/333,https://github.com/OWASP/Python-Honeypot/pull/333,closed,497,539,3,1,0,7,0,0,[],2021-08-06 19:28:43+00:00,2021-08-18 07:26:28+00:00,993465.0,"11 days, 11:57:45","[{'comment_id': 684776296, 'comment_body': ""what's the change here?"", 'comment_created': datetime.datetime(2021, 8, 8, 13, 34, 46, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 684776608, 'comment_body': '@spiderxm  : should be declared as "" let"" write as every iteration it\'s changing the value?', 'comment_created': datetime.datetime(2021, 8, 8, 13, 36, 41, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 684776702, 'comment_body': ""shouldn't this be removed completely as it's not doing anything?"", 'comment_created': datetime.datetime(2021, 8, 8, 13, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 684777144, 'comment_body': 'shouldn\'t the variable name be descriptive other than ""d""? something like data or manipulation_data ', 'comment_created': datetime.datetime(2021, 8, 8, 13, 40, 46, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 684818053, 'comment_body': 'same for this, can be removed if nothing is done after catching error', 'comment_created': datetime.datetime(2021, 8, 8, 19, 23, 11, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 684818097, 'comment_body': 'error function needs to be there,maybe log or something to understand what went wrong', 'comment_created': datetime.datetime(2021, 8, 8, 19, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 684896046, 'comment_body': 'ok will add it', 'comment_created': datetime.datetime(2021, 8, 9, 4, 27, 44, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}]","[{'commit_sha': '538fda8551749cf230c111b71f366367fd9f20e9', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
699222441,adding and updating tests,,True,329,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/329,https://github.com/OWASP/Python-Honeypot/pull/329,closed,51,14,2,2,1,0,0,0,[],2021-07-29 05:32:17+00:00,2021-07-29 08:08:48+00:00,9391.0,2:36:31,[],"[{'commit_sha': '360406fcf86a588797c286490a9e22f872cb9a1c', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bad6949393f8c5335ce400ddd9a1b27ed0ed869f', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
694073908,Adding scroll in `/api/events/explore/<event_type>` Api,"Adding scroll in `/api/events/explore/<event_type>` Api.
When all records needed to be fetched with a specific query. We can specify `limit=infinte` in query params to fetch all records in one go. If one specifies `limit > 10000` it will be set to 10000",True,320,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/320,https://github.com/OWASP/Python-Honeypot/pull/320,closed,48,36,3,1,0,0,0,0,[],2021-07-21 05:59:50+00:00,2021-07-21 18:23:35+00:00,44625.0,12:23:45,[],"[{'commit_sha': '91c9179fdf5f01d842d77c75fce56198e098e203', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
689954666,Adding internationalization,"Support for
- English
- German
- Russian

With menu to toggle between languages
![Screenshot 2021-07-14 at 7 43 43 PM](https://user-images.githubusercontent.com/53966291/125637240-0b7b6153-06bc-4828-9b55-4a12346a7575.png)
![Screenshot 2021-07-14 at 7 43 55 PM](https://user-images.githubusercontent.com/53966291/125637268-3fe01c5d-5df5-4053-bb62-103cbb7e3938.png)
![Screenshot 2021-07-14 at 7 44 04 PM](https://user-images.githubusercontent.com/53966291/125637281-1550909a-acff-42a2-a39b-acc092a859b1.png)
",True,315,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/315,https://github.com/OWASP/Python-Honeypot/pull/315,closed,676,155,25,35,5,2,0,0,[],2021-07-14 14:16:04+00:00,2021-07-28 22:24:15+00:00,1238891.0,"14 days, 8:08:11",[],"[{'commit_sha': '6f82272e25e3902a7fc624915a9d175f0e19ec69', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c021b4b1ef8aca1f5dfa3719ab4123fb54e5e8f', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1d993770aa80e3156cab30949c733b50d10ba4a', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffba2db1fe30b98705e254caa9d3bb9e206e79d0', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51c8513bf51b81a5d02f20d52fe934dc891302ba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd7006c608ac22048e94fd85298a1df6deaaacbe3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '07e985e093f93c6240784c9fbc78ce53f015fc92', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b6397cba12cb6163bdaf358fdd0cead3d37cee7a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'faf874070178bdada5846c90c91a65d8984473a0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '526f29e1660dc701e9e6d4679e7b09603b93a4aa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5e4b378970560ffc4299d206f6f8bd8b083e6a02', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '04266e03a39b7078072444f564c3398aea4d4f1b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd97b8c84faac1ee67714f40c22c2b1e9b719274f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae93eead004e6dc4c92f5b021115f5be000bc48a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8a30aa87e8393f46f31582d9f7b174970f5dc492', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25fa57ada23f2a6f2cc5362a177ad5d3437fb0e9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dd75a239cc44d933fdd6601af64cb2faea174a06', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '377a11fd2b1fd0978505578d5bc6da3cd37996ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6df8aced4dad314bab754fbc05b1143aef6ea735', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a460c1bcc71d3bddee77860a7d1100fb4ef6075', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '61889c6fa58cfdf641df24024bdc9be2091b41c9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '13ef3907f0644ad16d1970afdeeddf05da7f1189', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27f97e2ec26bbb602f7d39259642a2ae795bb3e2', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fedc6f7b392ac69425f75f8b9979fd665075625', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f7d553c2079037e03bc0a4b51147a7011140b58', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd6c94068164f6f23395c8fbf8811a2cc0afde614', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '19ccb40580f430bda77be7c53ae5c1672030ac61', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e4888472456600378b7decf39de41601ce53ceba', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c75a14e6c20ca6e36c18bb52a9b151b9863bf39', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffb213a33a80152619f9ae07e1fdefc4ca5e8a6f', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23aae73bf26fe3878053484c11fb62e5ab0a19f0', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5647eaee9cc34c179dc8d4257761c58e67c40d1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '748fb186e576430e25081ba0a2d2584ceab65ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fc892594ebc5ae93153d7c3aa8f2488e441c6168', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '50b110792cbea4a2d4bca4cb289c8ca7337b0f51', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Mrigank Anand,53966291,,User,,137,,99,147
696511135,show error - cannot connect to elasticsearch,"If elasticsearch server is not running. This error is produced. It is because a part of code is executed before starting of the server which uses elasticsearch client .
<img width=""1440"" alt=""Screenshot 2021-07-25 at 7 48 16 PM"" src=""https://user-images.githubusercontent.com/53966291/126902662-b2f15cb9-e3fd-4831-bbac-8d8533860c25.png"">

After fixing it
<img width=""1440"" alt=""Screenshot 2021-07-25 at 7 53 41 PM"" src=""https://user-images.githubusercontent.com/53966291/126902675-7f2ddd7f-4001-41c5-9575-06390c051dd5.png"">
",True,321,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/321,https://github.com/OWASP/Python-Honeypot/pull/321,closed,17,9,3,2,1,0,0,0,[],2021-07-25 14:29:14+00:00,2021-07-27 09:22:10+00:00,154376.0,"1 day, 18:52:56",[],"[{'commit_sha': '155210432d64ac62e6c3057ebd397282a69df77c', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2438317dd515be8d45c6e7e1488dc367f68e96f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Mrigank Anand,53966291,,User,,137,,99,147
696537041,fix requirements checking code,,True,322,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/322,https://github.com/OWASP/Python-Honeypot/pull/322,closed,15,10,2,1,3,2,0,0,[],2021-07-25 17:27:43+00:00,2021-07-27 09:20:44+00:00,143581.0,"1 day, 15:53:01","[{'comment_id': 676817741, 'comment_body': 'why is this changed?', 'comment_created': datetime.datetime(2021, 7, 26, 17, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 676885489, 'comment_body': '@dhirensr Sorry accidentally committed that code. It was giving some error like no host name present. So I fixed it in local. Removed it.', 'comment_created': datetime.datetime(2021, 7, 26, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}]","[{'commit_sha': '397c4b102f0ed86bb6bede476fd5c543ce71d307', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
683629738,adding docs and swagger configuration,"<img width=""1440"" alt=""Screenshot 2021-07-05 at 5 08 16 PM"" src=""https://user-images.githubusercontent.com/53966291/124465973-b0cc5e00-ddb3-11eb-95d5-1291a0595c65.png"">
<img width=""1440"" alt=""Screenshot 2021-07-05 at 5 08 28 PM"" src=""https://user-images.githubusercontent.com/53966291/124465991-b6c23f00-ddb3-11eb-825b-c50816d8199f.png"">
Partially solves #310 
Docs added for 

- [x]   ./api/server.py:243:@app.route(""/api/events/count/<event_type>"", methods=[""GET""])
- [x]   ./api/server.py:272:@app.route(""/api/events/count/groupby/<event_type>/"", methods=[""GET""])
- [x]   ./api/server.py:319:@app.route(""/api/events/explore/<event_type>"", methods=[""GET""])
- [x]   ./api/server.py:368:@app.route(""/api/pcap/download"", methods=[""GET""])
- [x]  ./api/server.py:394:@app.route(""/api/core/list/modules"", methods=[""GET""])

Swagger ui can be checked from - `/api/docs`",True,311,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/311,https://github.com/OWASP/Python-Honeypot/pull/311,closed,229,19,2,2,1,0,0,0,[],2021-07-05 11:43:03+00:00,2021-07-20 16:58:08+00:00,1314905.0,"15 days, 5:15:05",[],"[{'commit_sha': 'ea8fadd56b6309c8f0499c1a79e5fc3576d28878', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd26507a467591aff621e0bd7b45434ec5e2d8787', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
681002014,Pull request template,Adding pull request template.,True,304,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/304,https://github.com/OWASP/Python-Honeypot/pull/304,closed,38,0,1,1,0,0,0,0,[],2021-06-30 15:54:11+00:00,2021-07-20 16:57:11+00:00,1731780.0,"20 days, 1:03:00",[],"[{'commit_sha': '095d2f23d062217bcd504306f18eb951a2754d8c', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
680872756,Fix all record count,Fixing all event count. Fixes issue #291 ,True,303,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/303,https://github.com/OWASP/Python-Honeypot/pull/303,closed,17,0,1,1,0,0,0,0,[],2021-06-30 13:22:49+00:00,2021-07-20 16:55:27+00:00,1740758.0,"20 days, 3:32:38",[],"[{'commit_sha': '49656f3ca5e5df3e8e7a709d8cb4999c07f3d237', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
676456483,download chart functionality ,"
![](https://user-images.githubusercontent.com/53966291/123061607-69e07f00-d429-11eb-90bc-6900c315240a.png)
 - [x] Download chart functionality added",True,299,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/299,https://github.com/OWASP/Python-Honeypot/pull/299,closed,81,34,4,1,1,3,0,0,[],2021-06-23 16:46:28+00:00,2021-07-20 16:56:20+00:00,2333392.0,"27 days, 0:09:52","[{'comment_id': 659807678, 'comment_body': '@spiderxm : why do we need this ?', 'comment_created': datetime.datetime(2021, 6, 28, 13, 53, 40, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 659916898, 'comment_body': 'I forgot to remove it. Previously I was trying to use font-awesome icon. Will remove it.\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 16, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 659921363, 'comment_body': 'removed\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 16, 5, 47, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}]","[{'commit_sha': 'deb4aedaec58419e911ef77fe33ea8cb041fe9e1', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
672427745,Improve error handling in log explorer.,"![Screenshot 2021-06-17 at 2 48 00 PM](https://user-images.githubusercontent.com/53966291/122368488-04991380-cf7b-11eb-81cd-626383d42a82.png)
![Screenshot 2021-06-17 at 2 47 34 PM](https://user-images.githubusercontent.com/53966291/122368550-0fec3f00-cf7b-11eb-91ff-5fd0f676b10c.png)
",True,293,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/293,https://github.com/OWASP/Python-Honeypot/pull/293,closed,61,30,3,1,0,6,0,0,[],2021-06-17 09:18:50+00:00,2021-07-20 16:55:01+00:00,2878571.0,"33 days, 7:36:11","[{'comment_id': 656125975, 'comment_body': 'end_date==="" ""', 'comment_created': datetime.datetime(2021, 6, 22, 11, 25, 20, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 656126629, 'comment_body': ""let's not clear the message until it's fixed. i think it's a better design"", 'comment_created': datetime.datetime(2021, 6, 22, 11, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 656254762, 'comment_body': 'yeah\r\n', 'comment_created': datetime.datetime(2021, 6, 22, 14, 4, 1, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 656254936, 'comment_body': 'oops', 'comment_created': datetime.datetime(2021, 6, 22, 14, 4, 12, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 656640915, 'comment_body': 'this is the only change for this PR, rest looks good functionality wise :smile: \r\n\r\nwe should reset the error message here, it would only come here when there is no error!', 'comment_created': datetime.datetime(2021, 6, 22, 23, 9, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 656839020, 'comment_body': 'Sure\r\n', 'comment_created': datetime.datetime(2021, 6, 23, 7, 39, 31, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}]","[{'commit_sha': '72705ab0be28ab997c6802eaeccd2e393c942b43', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
670314760,Bulk export,"Adding feature for user to export data as json
![Screenshot 2021-06-15 at 4 51 41 PM](https://user-images.githubusercontent.com/53966291/122044297-f8d21380-cdf9-11eb-8366-1744715f367a.png)
",True,292,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/292,https://github.com/OWASP/Python-Honeypot/pull/292,closed,114,15,3,4,8,7,0,0,[],2021-06-15 11:22:01+00:00,2021-07-27 15:41:43+00:00,3644382.0,"42 days, 4:19:42","[{'comment_id': 655756552, 'comment_body': ""hello, there's a data consistency isssue.\r\nI see a lot of entries in the explorer UI, but when I export in json I only get 10 records from the table's first page.\r\nthat's also the case for CSV and  excel function so not only in the json export.\r\nI've raised a ticket for Ali, we'll check if we want all records export or only for a single page. (https://github.com/OWASP/Python-Honeypot/issues/297)\r\n"", 'comment_created': datetime.datetime(2021, 6, 21, 22, 58, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 656119062, 'comment_body': 'break; ? better not to rely on Automatic Semicolon Insertion', 'comment_created': datetime.datetime(2021, 6, 22, 11, 14, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 656119234, 'comment_body': '                     const filename = get_export_fileName(\'csv\') + "".csv""', 'comment_created': datetime.datetime(2021, 6, 22, 11, 15, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 656121458, 'comment_body': ""is this needed? i checked few examples where remove wasn't used\r\nif needed then let it be, am just asking out of curiosity"", 'comment_created': datetime.datetime(2021, 6, 22, 11, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 656212984, 'comment_body': 'ill check', 'comment_created': datetime.datetime(2021, 6, 22, 13, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 673334482, 'comment_body': 'Data is fetched directly from the api rather than the table. ', 'comment_created': datetime.datetime(2021, 7, 20, 17, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 673336015, 'comment_body': '@Ali-Razmjoo. The buttons are added inside the table. But on choosing on one. Data is fetched from api based on user filter and then converted to appropriate format and downloaded.', 'comment_created': datetime.datetime(2021, 7, 20, 17, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}]","[{'commit_sha': '018fa79a9860ee9c216883ae22217abf9faeb687', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d130fe1400fc30a1b6cb26e3f7f6c90c2afe457', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57061d8d7e2571b60326d69bb82af2fac6a3e804', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '358415e2efb429a0e495dbe28af87ec37de25356', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Mrigank Anand,53966291,,User,,137,,99,147
663626060,Update Api's,"Get API to work
- [x] @app.route(""/api/events/count/groupby/<event_type>/<element>"", methods=[""GET""])
- [x] @app.route(""/api/events/explore/<event_type>"", methods=[""GET""])
 
<img width=""1440"" alt=""Screenshot 2021-06-07 at 12 49 21 PM"" src=""https://user-images.githubusercontent.com/53966291/120983262-2a623380-c797-11eb-808d-9534461430c7.png"">
<img width=""1440"" alt=""Screenshot 2021-06-07 at 1 56 38 PM"" src=""https://user-images.githubusercontent.com/53966291/120984366-38fd1a80-c798-11eb-9d2c-60e2c222e153.png"">
<img width=""1440"" alt=""Screenshot 2021-06-07 at 1 54 54 PM"" src=""https://user-images.githubusercontent.com/53966291/120984390-3ef2fb80-c798-11eb-8f7e-3b1946b32af9.png"">
<img src=""https://user-images.githubusercontent.com/53966291/121171541-3ec82e00-c874-11eb-9384-e612c6b2e863.png""> 
<img src=""https://user-images.githubusercontent.com/53966291/121171655-628b7400-c874-11eb-9ef4-cd7cecfd5d42.png""> ",True,289,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/289,https://github.com/OWASP/Python-Honeypot/pull/289,closed,116,93,3,4,3,20,1,0,[{'name': 'enhancement'}],2021-06-07 14:38:23+00:00,2021-07-20 16:48:03+00:00,3722980.0,"43 days, 2:09:40","[{'comment_id': 649306030, 'comment_body': ""this is a bad design as *args can be any number of arguments and explicitly we should be able to state how many arguments does a function expect:\r\n\r\nBad\r\n\r\ndef make_complex(*args):\r\n    x, y = args\r\n    return dict(**locals())\r\n\r\nGood\r\n\r\ndef make_complex(x, y):\r\n    return {'x': x, 'y': y}\r\n\r\n"", 'comment_created': datetime.datetime(2021, 6, 10, 15, 44, 14, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 649306392, 'comment_body': ""can you also explain why we need this? it's not clear from function name what it really does"", 'comment_created': datetime.datetime(2021, 6, 10, 15, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 649310003, 'comment_body': ""why do we need a filter(None)? we can instead use list comprehension just to remove the None's from the list. what do you think?"", 'comment_created': datetime.datetime(2021, 6, 10, 15, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 649310775, 'comment_body': 'this is a function name also hence ""filter"" as a variable name should be avoided and named to filter_by or something else', 'comment_created': datetime.datetime(2021, 6, 10, 15, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 649311954, 'comment_body': 'readability is compromised, should be according to pep8 conventions (79 chars per line).\r\n', 'comment_created': datetime.datetime(2021, 6, 10, 15, 50, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 649313610, 'comment_body': '""i"" is not a good name here and also not understandable what ""i"" actually is. \r\nfor even in elasticsearch_events or something like that would be better.', 'comment_created': datetime.datetime(2021, 6, 10, 15, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 649314012, 'comment_body': 'why is there hits of hits ? nested hits here? i think the structure of data is not correctly set/decided.', 'comment_created': datetime.datetime(2021, 6, 10, 15, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 649314843, 'comment_body': 'good one! ', 'comment_created': datetime.datetime(2021, 6, 10, 15, 53, 39, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 649323362, 'comment_body': ""i think it's not needed to check if it exists this ways because create_top_values_to_plot_structure function does that already. \r\nIf I misunderstood this, you can correct me by giving an example"", 'comment_created': datetime.datetime(2021, 6, 10, 16, 1, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 649385544, 'comment_body': 'we can name it `event` or `record` if its fine', 'comment_created': datetime.datetime(2021, 6, 10, 17, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 649387886, 'comment_body': '<img width=""1440"" alt=""Screenshot 2021-06-10 at 10 59 46 PM"" src=""https://user-images.githubusercontent.com/53966291/121570552-9070e400-ca3f-11eb-86a3-c25dc78035dc.png"">\r\nSearch in elastic-search returns records in this way', 'comment_created': datetime.datetime(2021, 6, 10, 17, 30, 44, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 649400669, 'comment_body': 'yes we can use that\r\n```py\r\nquery = {\r\n        ""query"": {\r\n            ""bool"": {\r\n                ""must"": [condition for condition in [\r\n                    filter_by_date(date)[\'query\'],\r\n                    filter_by_element(filter_by, element_value)[\'query\']\r\n                ] if condition]\r\n            }\r\n        }\r\n}\r\n```\r\nIs this alright\r\n', 'comment_created': datetime.datetime(2021, 6, 10, 17, 49, 12, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 649407829, 'comment_body': ""[condition for condition in [\r\n                    filter_by_date(date)['query'],\r\n                    filter_by_element(filter_by, element_value)['query']\r\n                ] if condition] \r\n\r\nshould be in a different variable above and then directly used in the query would be better"", 'comment_created': datetime.datetime(2021, 6, 10, 17, 59, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 649432955, 'comment_body': '`create_top_values_to_plot_structure` creates array if it doesn\'t exist. The issue with current scenario is when the graphs are reloaded than the result is appended to the existing array. What I did was to check the keys already existed or not in the array and then update the value. But we should clear the array because if some new keys come in the result then the graph will show more than 10 results.\r\n\r\n### Screenshot of dashboard - ( it shows double records - after one update)\r\n<img width=""1440"" alt=""Screenshot 2021-06-11 at 12 02 25 AM"" src=""https://user-images.githubusercontent.com/53966291/121579008-ec8c3600-ca48-11eb-9aa7-184d4697707b.png"">\r\n ', 'comment_created': datetime.datetime(2021, 6, 10, 18, 39, 2, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 651161473, 'comment_body': 'when the variable name is query then why do we need to mention inside the dict too?', 'comment_created': datetime.datetime(2021, 6, 14, 18, 0, 14, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 651162914, 'comment_body': ""can you please explain where's the must coming from or what's the must thing? "", 'comment_created': datetime.datetime(2021, 6, 14, 18, 2, 32, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 651163874, 'comment_body': 'why do you need to check the last ""if"" condition? is it ever going to be None?', 'comment_created': datetime.datetime(2021, 6, 14, 18, 4, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 651178686, 'comment_body': '\r\nmust | The clause (query) must appear in matching documents and will contribute to the score.\r\n-- | --\r\n\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html\r\n\r\nWhen we need to query with multiple fields we use bool query in elasticsearch.\r\n\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 14, 18, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 651180399, 'comment_body': '```\r\nGET /_search\r\n{\r\n  ""query"" : {\r\n     ""match"" : {\r\n         ""field"": ""value""   \r\n    } \r\n  }\r\n}\r\n```\r\nThis is the basic structure of query in elasticsearch so that\'s why its needed.', 'comment_created': datetime.datetime(2021, 6, 14, 18, 29, 47, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}, {'comment_id': 651184743, 'comment_body': '```py\r\ndef filter_by_element(filter_by, element_value):\r\n    return {\r\n        ""query"": {\r\n            ""multi_match"": {\r\n                ""query"": element_value,\r\n                ""fields"": [\'*\']\r\n            }\r\n        }\r\n    } if filter_by and element_value else {\r\n        ""query"": {}\r\n    }\r\n```\r\n\r\nif the `if` condition fails in this case it returns an empty query and same for `filter_by_date` function which is treated as error by elasticsearch. So I added the If condition to remove empty dictionaries ', 'comment_created': datetime.datetime(2021, 6, 14, 18, 36, 10, tzinfo=datetime.timezone.utc), 'commenter': 'spiderxm', 'type': 'User'}]","[{'commit_sha': 'd0488959e3d81d607c0530acae4a61f80439a6e2', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e077c66910a012547dbd4eb1513057100c36f5b', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dd13df5551c96dbd8d9d74cab669797e66038aa', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79fc299a6cab473ec9164b2e733ef921028758e1', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
666983372,Updating docs and readme,Updating docs and readme file with appropriate information.,True,290,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/290,https://github.com/OWASP/Python-Honeypot/pull/290,closed,31,12,4,1,0,0,0,0,[],2021-06-10 15:08:17+00:00,2021-06-11 19:44:49+00:00,102992.0,"1 day, 4:36:32",[],"[{'commit_sha': '01c73040690301e98d6fddd1adf181a4b6a86334', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
647736479,Fix issue when 0 log records are returned from the api,"<img src=""https://i.ibb.co/x5q368x/Whats-App-Image-2021-05-19-at-8-01-13-PM.jpg"">  </img>
### Fixes the issue #281 ",True,282,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/282,https://github.com/OWASP/Python-Honeypot/pull/282,closed,25,22,1,1,1,0,0,0,[],2021-05-19 14:34:35+00:00,2021-05-31 17:24:48+00:00,1047013.0,"12 days, 2:50:13",[],"[{'commit_sha': '124024fc42006dd0166a936bd233c08e5890e6d1', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147
648046172,Fix minor bug in chart colors,"The rgb color need to be closed with `)`. Fixed it.
Old
```js
window.chartColors = {
    red: ""rgb(255, 0, 0)"",
    pink: ""rgb(255, 0, 191)"",
    orange: ""rgb(255, 159, 64)"",
    yellow: ""rgb(255, 205, 86)"",
    green: ""rgb(75, 192, 192)"",
    green_yellow: ""rgb(191, 255, 0)"",
    blue: ""rgb(54, 162, 235)"",
    purple: ""rgb(153, 102, 255)"",
    grey: ""rgb(201, 203, 207)"",
    cyan: ""rgb(0, 255, 255"" 
};

var colors_array = [""rgb(255, 0, 0)"", ""rgb(255, 0, 191)"", ""rgb(255, 159, 64)"", ""rgb(255, 205, 86)"", ""rgb(75, 192, 192)"",
    ""rgb(191, 255, 0)"", ""rgb(54, 162, 235)"", ""rgb(153, 102, 255)"", ""rgb(201, 203, 207)"", ""rgb(0, 255, 255""]

```
New
```js
window.chartColors = {
    red: ""rgb(255, 0, 0)"",
    pink: ""rgb(255, 0, 191)"",
    orange: ""rgb(255, 159, 64)"",
    yellow: ""rgb(255, 205, 86)"",
    green: ""rgb(75, 192, 192)"",
    green_yellow: ""rgb(191, 255, 0)"",
    blue: ""rgb(54, 162, 235)"",
    purple: ""rgb(153, 102, 255)"",
    grey: ""rgb(201, 203, 207)"",
    cyan: ""rgb(0, 255, 255)""
};

var colors_array = [""rgb(255, 0, 0)"", ""rgb(255, 0, 191)"", ""rgb(255, 159, 64)"", ""rgb(255, 205, 86)"", ""rgb(75, 192, 192)"",
    ""rgb(191, 255, 0)"", ""rgb(54, 162, 235)"", ""rgb(153, 102, 255)"", ""rgb(201, 203, 207)"", ""rgb(0, 255, 255)""]

```",True,283,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/283,https://github.com/OWASP/Python-Honeypot/pull/283,closed,2,2,1,1,1,0,0,0,[],2021-05-19 20:58:06+00:00,2021-05-31 17:25:13+00:00,1024027.0,"11 days, 20:27:07",[],"[{'commit_sha': '3546e6fe37c94d35b3fa24b07db83b4a79bffcb5', 'committer_username': 'spiderxm', 'committer_name': 'Mrigank Anand', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 10, 8, 21, 46, tzinfo=datetime.timezone.utc)}]",Mrigank Anand,53966291,,User,,137,,99,147

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
139342061,Python-Honeypot,OWASP/Python-Honeypot,Python,138,421,24,15,1145,21,53,15,"[{'id': 1059387592, 'number': 364, 'closed': datetime.datetime(2022, 9, 17, 19, 22, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 17, 19, 21, 41, tzinfo=datetime.timezone.utc), 'time_taken': 35.0, 'time_delta': '0:00:35', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1037877957, 'number': 363, 'closed': None, 'created': datetime.datetime(2022, 8, 26, 11, 58, 4, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 154, 'deletions': 2, 'state': 'open'}, {'id': 1014615220, 'number': 361, 'closed': datetime.datetime(2022, 9, 17, 18, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 4, 54, 13, tzinfo=datetime.timezone.utc), 'time_taken': 4023587.0, 'time_delta': '46 days, 13:39:47', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 1009988535, 'number': 360, 'closed': None, 'created': datetime.datetime(2022, 7, 27, 18, 24, 15, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 377, 'deletions': 32, 'state': 'open'}, {'id': 1003912838, 'number': 357, 'closed': None, 'created': datetime.datetime(2022, 7, 21, 9, 17, 55, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1021, 'deletions': 2, 'state': 'open'}, {'id': 993367778, 'number': 356, 'closed': datetime.datetime(2022, 9, 17, 18, 33, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 11, 17, 28, 53, tzinfo=datetime.timezone.utc), 'time_taken': 5879050.0, 'time_delta': '68 days, 1:04:10', 'additions': 32, 'deletions': 1, 'state': 'closed'}, {'id': 985551966, 'number': 355, 'closed': datetime.datetime(2022, 9, 17, 18, 32, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 2, 16, 28, 26, tzinfo=datetime.timezone.utc), 'time_taken': 6660254.0, 'time_delta': '77 days, 2:04:14', 'additions': 57, 'deletions': 0, 'state': 'closed'}, {'id': 980891505, 'number': 353, 'closed': datetime.datetime(2022, 9, 17, 18, 32, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 28, 4, 25, 59, tzinfo=datetime.timezone.utc), 'time_taken': 7049188.0, 'time_delta': '81 days, 14:06:28', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 980889667, 'number': 352, 'closed': datetime.datetime(2022, 6, 28, 4, 22, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 28, 4, 22, 33, tzinfo=datetime.timezone.utc), 'time_taken': 19.0, 'time_delta': '0:00:19', 'additions': 73, 'deletions': 67, 'state': 'closed'}, {'id': 980245316, 'number': 350, 'closed': datetime.datetime(2022, 7, 21, 8, 10, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 16, 0, 38, tzinfo=datetime.timezone.utc), 'time_taken': 2045376.0, 'time_delta': '23 days, 16:09:36', 'additions': 9, 'deletions': 1, 'state': 'closed'}, {'id': 883219158, 'number': 347, 'closed': datetime.datetime(2022, 7, 2, 23, 46, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 18, 8, 34, 57, tzinfo=datetime.timezone.utc), 'time_taken': 9213100.0, 'time_delta': '106 days, 15:11:40', 'additions': 69, 'deletions': 65, 'state': 'closed'}, {'id': 776252469, 'number': 343, 'closed': datetime.datetime(2021, 12, 6, 17, 9, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 9, 7, 16, 56, tzinfo=datetime.timezone.utc), 'time_taken': 2368382.0, 'time_delta': '27 days, 9:53:02', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 768528349, 'number': 341, 'closed': datetime.datetime(2021, 10, 28, 21, 27, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 28, 16, 48, 29, tzinfo=datetime.timezone.utc), 'time_taken': 16719.0, 'time_delta': '4:38:39', 'additions': 10, 'deletions': 6, 'state': 'closed'}, {'id': 768512331, 'number': 339, 'closed': datetime.datetime(2021, 10, 29, 12, 23, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 28, 16, 25, 52, tzinfo=datetime.timezone.utc), 'time_taken': 71854.0, 'time_delta': '19:57:34', 'additions': 1, 'deletions': 36, 'state': 'closed'}, {'id': 714991776, 'number': 334, 'closed': datetime.datetime(2021, 9, 4, 11, 14, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 11, 28, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1468000.0, 'time_delta': '16 days, 23:46:40', 'additions': 19, 'deletions': 16, 'state': 'closed'}, {'id': 705701271, 'number': 333, 'closed': datetime.datetime(2021, 8, 18, 7, 26, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 19, 28, 43, tzinfo=datetime.timezone.utc), 'time_taken': 993465.0, 'time_delta': '11 days, 11:57:45', 'additions': 497, 'deletions': 539, 'state': 'closed'}, {'id': 699222441, 'number': 329, 'closed': datetime.datetime(2021, 7, 29, 8, 8, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 5, 32, 17, tzinfo=datetime.timezone.utc), 'time_taken': 9391.0, 'time_delta': '2:36:31', 'additions': 51, 'deletions': 14, 'state': 'closed'}, {'id': 699211919, 'number': 328, 'closed': datetime.datetime(2021, 7, 29, 8, 6, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 5, 6, 53, tzinfo=datetime.timezone.utc), 'time_taken': 10804.0, 'time_delta': '3:00:04', 'additions': 45, 'deletions': 6, 'state': 'closed'}, {'id': 699204169, 'number': 327, 'closed': datetime.datetime(2021, 7, 29, 5, 1, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 4, 53, 14, tzinfo=datetime.timezone.utc), 'time_taken': 507.0, 'time_delta': '0:08:27', 'additions': 10, 'deletions': 6, 'state': 'closed'}, {'id': 699012380, 'number': 325, 'closed': datetime.datetime(2021, 7, 28, 21, 8, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 21, 2, 30, tzinfo=datetime.timezone.utc), 'time_taken': 361.0, 'time_delta': '0:06:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 699005946, 'number': 324, 'closed': datetime.datetime(2021, 7, 28, 20, 51, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 20, 51, 1, tzinfo=datetime.timezone.utc), 'time_taken': 51.0, 'time_delta': '0:00:51', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 696537041, 'number': 322, 'closed': datetime.datetime(2021, 7, 27, 9, 20, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 25, 17, 27, 43, tzinfo=datetime.timezone.utc), 'time_taken': 143581.0, 'time_delta': '1 day, 15:53:01', 'additions': 15, 'deletions': 10, 'state': 'closed'}, {'id': 696511135, 'number': 321, 'closed': datetime.datetime(2021, 7, 27, 9, 22, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 25, 14, 29, 14, tzinfo=datetime.timezone.utc), 'time_taken': 154376.0, 'time_delta': '1 day, 18:52:56', 'additions': 17, 'deletions': 9, 'state': 'closed'}, {'id': 694073908, 'number': 320, 'closed': datetime.datetime(2021, 7, 21, 18, 23, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 5, 59, 50, tzinfo=datetime.timezone.utc), 'time_taken': 44625.0, 'time_delta': '12:23:45', 'additions': 48, 'deletions': 36, 'state': 'closed'}, {'id': 689954666, 'number': 315, 'closed': datetime.datetime(2021, 7, 28, 22, 24, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 14, 16, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1238891.0, 'time_delta': '14 days, 8:08:11', 'additions': 676, 'deletions': 155, 'state': 'closed'}, {'id': 689953832, 'number': 314, 'closed': datetime.datetime(2021, 7, 14, 14, 15, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 14, 15, 4, tzinfo=datetime.timezone.utc), 'time_taken': 13.0, 'time_delta': '0:00:13', 'additions': 242, 'deletions': 43, 'state': 'closed'}, {'id': 683629738, 'number': 311, 'closed': datetime.datetime(2021, 7, 20, 16, 58, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 11, 43, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1314905.0, 'time_delta': '15 days, 5:15:05', 'additions': 229, 'deletions': 19, 'state': 'closed'}, {'id': 681002014, 'number': 304, 'closed': datetime.datetime(2021, 7, 20, 16, 57, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 15, 54, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1731780.0, 'time_delta': '20 days, 1:03:00', 'additions': 38, 'deletions': 0, 'state': 'closed'}, {'id': 680872756, 'number': 303, 'closed': datetime.datetime(2021, 7, 20, 16, 55, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 13, 22, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1740758.0, 'time_delta': '20 days, 3:32:38', 'additions': 17, 'deletions': 0, 'state': 'closed'}, {'id': 676456483, 'number': 299, 'closed': datetime.datetime(2021, 7, 20, 16, 56, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 16, 46, 28, tzinfo=datetime.timezone.utc), 'time_taken': 2333392.0, 'time_delta': '27 days, 0:09:52', 'additions': 81, 'deletions': 34, 'state': 'closed'}, {'id': 676059564, 'number': 298, 'closed': datetime.datetime(2021, 6, 23, 16, 44, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 8, 20, 4, tzinfo=datetime.timezone.utc), 'time_taken': 30278.0, 'time_delta': '8:24:38', 'additions': 82, 'deletions': 34, 'state': 'closed'}, {'id': 672427745, 'number': 293, 'closed': datetime.datetime(2021, 7, 20, 16, 55, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 9, 18, 50, tzinfo=datetime.timezone.utc), 'time_taken': 2878571.0, 'time_delta': '33 days, 7:36:11', 'additions': 61, 'deletions': 30, 'state': 'closed'}, {'id': 670314760, 'number': 292, 'closed': datetime.datetime(2021, 7, 27, 15, 41, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 11, 22, 1, tzinfo=datetime.timezone.utc), 'time_taken': 3644382.0, 'time_delta': '42 days, 4:19:42', 'additions': 114, 'deletions': 15, 'state': 'closed'}, {'id': 666983372, 'number': 290, 'closed': datetime.datetime(2021, 6, 11, 19, 44, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 15, 8, 17, tzinfo=datetime.timezone.utc), 'time_taken': 102992.0, 'time_delta': '1 day, 4:36:32', 'additions': 31, 'deletions': 12, 'state': 'closed'}, {'id': 663626060, 'number': 289, 'closed': datetime.datetime(2021, 7, 20, 16, 48, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 14, 38, 23, tzinfo=datetime.timezone.utc), 'time_taken': 3722980.0, 'time_delta': '43 days, 2:09:40', 'additions': 116, 'deletions': 93, 'state': 'closed'}, {'id': 660033768, 'number': 288, 'closed': datetime.datetime(2021, 7, 20, 17, 2, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 12, 45, 48, tzinfo=datetime.timezone.utc), 'time_taken': 4162585.0, 'time_delta': '48 days, 4:16:25', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 648046172, 'number': 283, 'closed': datetime.datetime(2021, 5, 31, 17, 25, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 19, 20, 58, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1024027.0, 'time_delta': '11 days, 20:27:07', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 647736479, 'number': 282, 'closed': datetime.datetime(2021, 5, 31, 17, 24, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 19, 14, 34, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1047013.0, 'time_delta': '12 days, 2:50:13', 'additions': 25, 'deletions': 22, 'state': 'closed'}, {'id': 603524104, 'number': 260, 'closed': datetime.datetime(2021, 4, 20, 17, 0, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 30, 9, 0, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1843213.0, 'time_delta': '21 days, 8:00:13', 'additions': 47, 'deletions': 0, 'state': 'closed'}, {'id': 603508189, 'number': 259, 'closed': datetime.datetime(2021, 3, 30, 8, 58, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 30, 8, 40, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1094.0, 'time_delta': '0:18:14', 'additions': 47, 'deletions': 0, 'state': 'closed'}]"
