pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1888647581,fix doc build failure,resolve doc build error https://github.com/TuringLang/NormalizingFlows.jl/actions/runs/9237984159/job/25415674162,True,35,https://api.github.com/repos/TuringLang/NormalizingFlows.jl/pulls/35,https://github.com/TuringLang/NormalizingFlows.jl/pull/35,closed,6,0,1,3,0,0,0,0,[],2024-05-26 02:30:02+00:00,2024-05-26 14:41:50+00:00,43908.0,12:11:48,[],"[{'commit_sha': '5b0d85b69a6c6e6134609ba4032876dd02c1315e', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7064cf9fc015ed9be67543492b1557a4b628ff5d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f73a04d644f0445efc9639775b68d3a45d71533d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}]",David Xu,42751767,,User,,48,,68,24
1440037762,add more synthetic targets,"as per issue #14 
- [x]  synthetic examples that are challenging to sample 
   - [x] Banana  
   - [x] Cross distribution 
   - [x] warped Gaussian
   - [x] neal's funnel
",True,20,https://api.github.com/repos/TuringLang/NormalizingFlows.jl/pulls/20,https://github.com/TuringLang/NormalizingFlows.jl/pull/20,closed,206,1721,5,23,3,25,0,1,[],2023-07-18 22:52:12+00:00,2023-08-23 19:33:45+00:00,3098493.0,"35 days, 20:41:33","[{'comment_id': 1267825782, 'comment_body': 'You can use maths in Julia docstrings:) https://documenter.juliadocs.org/dev/man/latex/', 'comment_created': datetime.datetime(2023, 7, 19, 9, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267829270, 'comment_body': 'The Cross distribution is a 2-dimension 4-component Gaussian distribution with a ""cross"" \r\nshape that is symmetric about the y- and x-axises. The mixture is defined as\r\n\r\n```math\r\n\\begin{aligned}\r\np(x) =\r\n& 0.25 \\mathcal{N}(x | (0, \\mu), (\\sigma, 1)) + \\\\\r\n& 0.25 \\mathcal{N}(x | (\\mu, 0), (1, \\sigma)) + \\\\\r\n& 0.25 \\mathcal{N}(x | (0, -\\mu), (\\sigma, 1)) + \\\\\r\n& 0.25 \\mathcal{N}(x | (-\\mu, 0), (1, \\sigma)))\r\n\\end{aligned}\r\n```\r\n\r\nwhere ``\\mu`` and ``\\sigma`` are the mean and standard deviation of the Gaussian components, \r\nrespectively. See an example of the Cross distribution in Page 18 of [1].\r\n', 'comment_created': datetime.datetime(2023, 7, 19, 9, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267830457, 'comment_body': ""Couldn't make the above a suggestion because GH can't handle it :shrug: But you can just copy the source of it."", 'comment_created': datetime.datetime(2023, 7, 19, 9, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267830752, 'comment_body': 'Oh neat! Going to have to read this:)', 'comment_created': datetime.datetime(2023, 7, 19, 9, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267831709, 'comment_body': '```suggestion\r\n    ""component mean""\r\n    μ::T\r\n    ""component standard deviation""\r\n    σ::T\r\n```', 'comment_created': datetime.datetime(2023, 7, 19, 9, 41, 21, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267831970, 'comment_body': '```suggestion\r\n# Fields\r\n$(FIELDS)\r\n```', 'comment_created': datetime.datetime(2023, 7, 19, 9, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267835192, 'comment_body': 'This is a bit confusing I think. Generally speaking, we try to avoid a constructor of some type `A` returning some other type `B`. But also, why are we doing this? It seems that this makes all of the above with `Cross` completely useless? Or am I misunderstanding something? :grimacing: ', 'comment_created': datetime.datetime(2023, 7, 19, 9, 44, 31, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267836032, 'comment_body': '```suggestion\r\n    ""Dimension of the distribution, must be >= 2""\r\n    dim::Int\r\n    ""Mean of the first dimension""\r\n    μ::T\r\n    ""Standard deviation of the first dimension, must be > 0""\r\n    σ::T\r\n```', 'comment_created': datetime.datetime(2023, 7, 19, 9, 45, 13, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267836226, 'comment_body': '```suggestion\r\n$(FIELDS)\r\n```', 'comment_created': datetime.datetime(2023, 7, 19, 9, 45, 24, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267836606, 'comment_body': 'Maybe use latex here too?', 'comment_created': datetime.datetime(2023, 7, 19, 9, 45, 46, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267837096, 'comment_body': ""Is this needed? I thought once you've implemented `rand`, you're gucci?"", 'comment_created': datetime.datetime(2023, 7, 19, 9, 46, 13, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267839371, 'comment_body': 'Same here with the usage of `$(FIELDS)`', 'comment_created': datetime.datetime(2023, 7, 19, 9, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267839482, 'comment_body': 'Latex <3', 'comment_created': datetime.datetime(2023, 7, 19, 9, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267841776, 'comment_body': 'Unfortuantely, subscripts `₁` and similar are somewhat flaky in the rendering. IIRC on some devices this is just shown as squares :grimacing: So just do `_1` instead, despite the reduction in visual pleasantries :upside_down_face:  ', 'comment_created': datetime.datetime(2023, 7, 19, 9, 50, 20, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1267843056, 'comment_body': ""Note that this `$(FIELDS)` is from DocStringExtensions.jl (https://github.com/JuliaDocs/DocStringExtensions.jl), but it's worth the dependency. "", 'comment_created': datetime.datetime(2023, 7, 19, 9, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1286287312, 'comment_body': ""Why is this implemented, do you remember?\r\n\r\nAFAIK this doesn't do anything unless you also implement `rand`?"", 'comment_created': datetime.datetime(2023, 8, 7, 19, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1287828220, 'comment_body': 'This is a fair point to make! Here the Cross distribution is simply providing a convenient wrapper for that Gaussian mixture. And it is a typical synthetic distribution tested for NFs. ', 'comment_created': datetime.datetime(2023, 8, 9, 1, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'zuhengxu', 'type': 'User'}, {'comment_id': 1288009853, 'comment_body': 'umm, I followed the intruction here: https://juliastats.org/Distributions.jl/v0.14/extends.html#Create-a-Multivariate-Distribution-1. Look like at least `length`, `sampler` and `_rand!` need to be implemented for a new distribution?', 'comment_created': datetime.datetime(2023, 8, 9, 6, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'zuhengxu', 'type': 'User'}, {'comment_id': 1290267972, 'comment_body': ""But then there's no need to define `Cross` as a `struct`, right? As in, if it's just a convenient wrapper to construct a `Cross`, then this function highlighted here will be sufficient on its own, removing the need for the `struct` defined above, on?:)"", 'comment_created': datetime.datetime(2023, 8, 10, 14, 57, 31, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1294240469, 'comment_body': 'For funnel I think we do need as per: https://juliastats.org/Distributions.jl/v0.14/extends.html#Create-a-Multivariate-Distribution-1', 'comment_created': datetime.datetime(2023, 8, 15, 6, 31, 34, tzinfo=datetime.timezone.utc), 'commenter': 'zuhengxu', 'type': 'User'}, {'comment_id': 1297142921, 'comment_body': ""You've resolved our previous discussion, but it doesn't seem like any changes have been made?\r\n\r\nWhat I was saying is that we should just remove this struct completely, since it's never used (`Cross` just returns a `MixtureModel`, so there's no need for `Cross` as its own type):\r\n```suggestion\r\n```"", 'comment_created': datetime.datetime(2023, 8, 17, 12, 23, 16, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1297144111, 'comment_body': '```suggestion\r\nCross() = Cross(2.0, 0.15)\r\n```', 'comment_created': datetime.datetime(2023, 8, 17, 12, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1297146514, 'comment_body': ""But it has a default implementation that is sufficient, see Distributions.jl docs on `sampler` here: https://juliastats.org/Distributions.jl/v0.14/extends.html#Distributions.sampler-Tuple{Distributions.Distribution}\r\n\r\nIn particular:\r\n\r\n> If such a sampler exists, it can be provide with this sampler method, which would be used for batch sampling. The general fallback is sampler(d::Distribution) = d.\r\n\r\nSo it's only necessary to implement in the scenario where this default implementation isn't sufficient:)"", 'comment_created': datetime.datetime(2023, 8, 17, 12, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1297148230, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 17, 12, 27, 57, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1299311972, 'comment_body': 'Oh I see  Sorry that I completely misunderstood your previous suggetion. Fixed now!', 'comment_created': datetime.datetime(2023, 8, 20, 6, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'zuhengxu', 'type': 'User'}]","[{'commit_sha': '4b8c336e3edf5859a673d8b79d6888479dca42f5', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84b33d1e2c45ec9f20f83bd4bdcb93cdeec03fe1', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12cf3737327196d6bee2b9c6c2ea098ba3232640', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e59a3e95ad9b78af2172a638efd0bd0d244bef6d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70fd868af42a10a1619e8c397489f1774c96b5e5', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8aa16e004fcebb3d5af3f72c580c8ffc175114c8', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9899d5a2e4d53fd046dc8bb14c8a32a3036b612', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb16935efdb277021eea8ed7e841bbc602a27d40', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a43c0407a29363b295e42eccfb82c21f62f66681', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b80caa3095b08a7aba26cf0a4086e1ba016a8e0', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0febbbc350cdb514320f3afa48533de95498fe95', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bada04d1ade29d36f05d3d6a618f5c7796d4031f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb3d0e364edac70bdbae47cd9ce5cbbdee1b2d72', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08bf056294fffb8420e45ef7f089a0fed4c7cd7d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '374107d885b1d78a00cfb8470bd6ca1baa08b680', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e399274450946207c3e38a1fbd23f7cc97b7a486', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ccd5544c3cc56f5c1ecf2ac9e5c10e038f56a48', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1b6d0a0a110df2fcd0e9fe3ad94b5cfaf14b9ac', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5ebaeee642171fb0d56718d84ef71d8bfbe9c7', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f6c512af7981945a580998e495dab70c5efe93a', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a95556a601f43cde280195c4843ce235a7208359', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e8babb9985404449917d44bfd804c08f7f92617', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09a2d17af8ab07b147651e0ffba45660c38d167b', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}]",David Xu,42751767,,User,,48,,68,24
1428808551,add support for hasconverged + conditional loading pkgs,"- [x] add support for user defined stepping criterion for trianing loop (issue #7 )
- [x] make Zygote, ForwardDiff, ReverseDiff, Enzyme pkg extension (issue #6)",True,8,https://api.github.com/repos/TuringLang/NormalizingFlows.jl/pulls/8,https://github.com/TuringLang/NormalizingFlows.jl/pull/8,closed,175,1799,16,22,1,7,1,1,[{'name': 'enhancement'}],2023-07-11 06:32:53+00:00,2023-08-03 18:47:56+00:00,2031303.0,"23 days, 12:15:03","[{'comment_id': 1262214510, 'comment_body': 'One should only import the package itself (NormalizingFlows) and the weak dependency (Enzyme), no other packages. Not even standard libraries. They should be loaded eg indirectly via the main package.', 'comment_created': datetime.datetime(2023, 7, 13, 8, 33, 36, tzinfo=datetime.timezone.utc), 'commenter': 'devmotion', 'type': 'User'}, {'comment_id': 1283536022, 'comment_body': '```suggestion\r\n    return θ, map(identity, opt_stats), st\r\n```', 'comment_created': datetime.datetime(2023, 8, 3, 17, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1283537180, 'comment_body': ""And just make `opt_stats = []` and `push!(opt_stats, stat)` above (I can't make a suggestion to code that doesn't show up in the diff)."", 'comment_created': datetime.datetime(2023, 8, 3, 17, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1283544729, 'comment_body': ""We could probably support compilation of the tape using some shenanigans with Memoize.jl or something (to avoid `compile` re-compiling the tape on every call to `value_and_gradient`). \r\n\r\nBut let's not bother with this for now :+1: Maybe make an issue to keep track of it or smth?"", 'comment_created': datetime.datetime(2023, 8, 3, 18, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1283545014, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 3, 18, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1283602956, 'comment_body': ""It seems compat entries for Enzyme and Requires are missing - I think this has to be fixed before tagging a release (packages with missing compat entries can't be added to the general registry IIRC)."", 'comment_created': datetime.datetime(2023, 8, 3, 18, 59, 51, tzinfo=datetime.timezone.utc), 'commenter': 'devmotion', 'type': 'User'}, {'comment_id': 1283606696, 'comment_body': 'Good point! Yeah, I always forget adding compat entries for denpencies. Will include those in next PR (should be merged soon).', 'comment_created': datetime.datetime(2023, 8, 3, 19, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'zuhengxu', 'type': 'User'}]","[{'commit_sha': '4f591afc71f9ec509bfc82103a6889715b8ab28a', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e31807e491942be89b2db00e88597e9eb1463e5', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99ac0c1fc4c6698cfe5a5f9be0cb45f75d786098', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4f5efac40999e524a3666d2d5592fdafa30b83d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b345e7801c41256bbfc1dbe48cd0acc7dd700adf', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f10512fb108c526af395253127c9bdb73dbd1e9f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b93dbe8d83489345323a02afe6d880a568f2755b', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c1c88a89347ff962465122ac616c59cbf2d70f6', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d2844fccdc1a3183ed4b93d0b6b80d5764a15ef', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fdcb0e73eb8f0c25ee496ad002d216556b5b276', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddad59e9ac3eba85d4d7725b45173cc45fd908ac', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef60ee1f9316d7578fefa6c568f825e8b3e2f65e', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a5deb0789645089e52dee6ed22778cab26315b9', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25d42113b26b08249bf5c73541f1544b53280a85', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df5edddd303346ee7b587f370d91996ea48b623f', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44143b4f45505923a5c315129c782f650226af5', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b03e9221c3a3423d1486ea3f4426c7bd6c7d6173', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9acf70165eb43d0e4393f046cd3a3eff1fda5b3', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6bf68bdfc8d30e96482d9689dc8fab97a9c6b3f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '701c5b5e707b65f663993735ba9ef3949e537ffb', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d057222fcd4b32cc6159dbd665fe0c6fd51ca4d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9412027ec73a39d7704a7fb4711208418f41a6bb', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}]",David Xu,42751767,,User,,48,,68,24
1475311197,Documentation,add docs for the pkg,True,27,https://api.github.com/repos/TuringLang/NormalizingFlows.jl/pulls/27,https://github.com/TuringLang/NormalizingFlows.jl/pull/27,closed,579,13,14,46,1,27,0,0,[],2023-08-15 01:17:26+00:00,2023-08-23 11:35:43+00:00,728297.0,"8 days, 10:18:17","[{'comment_id': 1295114297, 'comment_body': '```suggestion\r\nIn more details, given the base distribution, usually a standard Gaussian distribution, i.e., $q_0 = \\mathcal{N}(0, I)$,\r\n```', 'comment_created': datetime.datetime(2023, 8, 15, 21, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'cpfiffer', 'type': 'User'}, {'comment_id': 1295114570, 'comment_body': '```suggestion\r\nwhere $\\theta = (\\theta_1, \\dots, \\theta_N)$ is the parameter to be learned, and $q_{\\theta}$ is the variational distribution (flow distribution). This describes **sampling procedure** of normalizing flows, which requires sending draws through a forward pass of these flow layers.\r\n```', 'comment_created': datetime.datetime(2023, 8, 15, 21, 4, 3, tzinfo=datetime.timezone.utc), 'commenter': 'cpfiffer', 'type': 'User'}, {'comment_id': 1295114909, 'comment_body': '```suggestion\r\nSince all the transformations are invertible (techinically [diffeomorphic](https://en.wikipedia.org/wiki/Diffeomorphism)), we can evaluate the density of a normalizing flow distribution $q_{\\theta}$ by the change of variable formula:\r\n```', 'comment_created': datetime.datetime(2023, 8, 15, 21, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'cpfiffer', 'type': 'User'}, {'comment_id': 1296160145, 'comment_body': '```suggestion\r\n```\r\n```\r\nthe syntax highlighting is a bit strange, plain code block should be fine. \r\n', 'comment_created': datetime.datetime(2023, 8, 16, 16, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296166975, 'comment_body': ""```suggestion\r\nThe purpose of this package is to provide a simple and flexible interface for variational inference (VI) and normalizing flows (NF) for Bayesian computation or generative modeling.\r\n```\r\nIt is generally a good idea to keep one sentence per line, because it's easier to track changes.\r\n\r\nThis will apply to all documentations in markdown."", 'comment_created': datetime.datetime(2023, 8, 16, 16, 32, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296174165, 'comment_body': '```suggestion\r\nIn more details, given the base distribution, usually a standard Gaussian distribution, i.e., $q_0 = \\mathcal{N}(0, I)$,\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296177297, 'comment_body': '```suggestion\r\nand $q_{\\theta}$ is the transformed distribution (typically called the\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296177873, 'comment_body': '```suggestion\r\nsending draws from the base distribution through a forward pass of these flow layers.\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 43, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296178263, 'comment_body': '```suggestion\r\nSince all the transformations are invertible (technically diffeomorphic), we\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296183546, 'comment_body': '```suggestion\r\nAlternatively, one can do*\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296185775, 'comment_body': '```suggestion\r\nThen we can train the flow by maximizing the ELBO using the [`train_flow`](@ref) function as follows: \r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 50, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296187983, 'comment_body': '```suggestion\r\n## Example Using Planar Flow\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296188138, 'comment_body': '```suggestion\r\n#### The Target Distribution\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296188312, 'comment_body': '```suggestion\r\n#### The Planar Flow \r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 53, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296188575, 'comment_body': '```suggestion\r\n#### Flow Training\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 53, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296188881, 'comment_body': '```suggestion\r\n## Evaluating Trained Flow \r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 53, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296189715, 'comment_body': '```suggestion\r\n# Defining Your Own Flow Layer\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 54, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296191106, 'comment_body': '```suggestion\r\nlayer -- an `Affine Coupling Layer` (Dinh *et al.*, 2016) -- using `Bijectors.jl` and `Flux.jl`.\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 56, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296192779, 'comment_body': '```suggestion\r\nHere $\\theta$ can be an arbitrary function, e.g., a neural network.\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296193557, 'comment_body': '```suggestion\r\nThe affine coupling layer is a special case of the coupling transformation, where the coupling law $f$ is an affine function:\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296194172, 'comment_body': '```suggestion\r\n## Implementing Affine Coupling Layer\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 16, 59, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296198215, 'comment_body': '```suggestion\r\nFollowing the user interface of `Bijectors.jl`, we define a struct `AffineCoupling` as a subtype of `Bijectors.Bijector`.\r\nThe functions `parition` , `combine` are used to partition and recombine a vector into 3 disjoint subvectors. \r\nAnd `PartitionMask` is used to store this partition rule. \r\nThese three functions are\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 17, 2, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296199248, 'comment_body': '```suggestion\r\n#### Implement the Forward and Inverse Transformations\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 17, 3, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296199470, 'comment_body': '```suggestion\r\n#### Implement the Log-determinant of the Jacobian\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 17, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296200241, 'comment_body': '```suggestion\r\n#### Construct Normalizing Flow\r\n```', 'comment_created': datetime.datetime(2023, 8, 16, 17, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sunxd3', 'type': 'User'}, {'comment_id': 1296986014, 'comment_body': 'Is ""captalizing all initials"" a convention for documentaion? This is okay for me, but generally when I write papers, I only captilize the first character or specific words for section title. ', 'comment_created': datetime.datetime(2023, 8, 17, 9, 52, 47, tzinfo=datetime.timezone.utc), 'commenter': 'zuhengxu', 'type': 'User'}, {'comment_id': 1297559151, 'comment_body': ""I think it's a style choice. Historically, the Turing docs try to capitalize the first letters."", 'comment_created': datetime.datetime(2023, 8, 17, 17, 53, 56, tzinfo=datetime.timezone.utc), 'commenter': 'cpfiffer', 'type': 'User'}]","[{'commit_sha': 'ec8c4c3c98dc9a7a4f90d9e65f23b4ec2d510d06', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c609b6e44a9917e5cd499cf89f27697ec7cd55ca', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6232581acff4730b52a9b28844e1ebda4d69eeb', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d26737e01a7adb088faf91b7590ee6cfe053c73', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81a6514653e3f492da6e0f846c3ba6b931c90238', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '980487edc3f67fcd3e09a796a2a00af2bfc3550f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '128da10989b12bd50de9833cb5678cca1037e069', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9926538eb85592c207118b52e8e5a30531918f0b', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f056311f1156e3fc13feae973043173f9a059f82', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eec2362c16d51fec189a86ca0676b31595765312', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f26b90b111ac8400bd10c252849a09330f311da9', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36bd72d4cfedc48b58893a79c6c5eb6fd02320e5', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37eb101e6e5baef472032a89000394f32c7419da', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6f21c249ca5dccb36dec43b2613f7957ee4d262', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39e49a72a05bdd7eafa8f4a75cbee2b556e60323', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87932a6e6386c6c389725eba58180f4f9c9d0e8f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d22c5cc269abcec8af0c8adf1e57641a4d502e2', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d911f9697bac265377b9ae6ccb921f9c8e99429', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2db21e5cfc14ae600ecd1a25df55303824893fd', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84975a0113695bc6f05c98a53c98ff8d1eb1bdc5', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70024c2ed3b44ea143d7178bb55c0a56d9a85cc2', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39913b751cdf34f082d36c0ee041a52b0bbd9604', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e63832c73caefc643e33719f1539e3725a8a09c', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a762a594aecc724e412d8360cb70eab1f5267290', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0146a796e799832f4f7c13e2b3466d09bcd2d0a0', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb8b6b93259f880284f28cdb5b461f6ece4034ea', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '183ea30b7f22d0a810408a86419b4d9f2f632137', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f359a32af88bcb8dfb1329bc4cf33bf51898e129', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51e9ec26b619a1c33e766c936056b7fde648481c', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37be7ea9469881be91cd0c1f1527eb1d0b99a6be', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c457b13e8a4ae6bca68a794fc8327cada1f70201', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63d51ca7227bc81e514510cb36e22b386880e634', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '732a1ae2ee1d750b6452bc1ea330b0326d465a2e', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48a3111d3020bdcc96c9212f520c1de2b60bd853', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19443f07d3009a9dc8a446fe95fc8933f17c9974', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b437ccf6410d99c33416433544aa4059c134e27', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52bfb9eee9b1de4f8442daefaf93d520294bccf2', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e0116994208640c6cce4b98fa6aa1f50a56776b', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b10a0e1e229d6140479fe15f2a6eb1dc27dada55', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '791f3984b8fe19f68ac16e3109e2a070b876dbc2', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '535ff505b8f47a9a9b81eac9ca5cc7002c0019bc', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca5606ad5f4daaa6f2eb5c6fadbbb02784d1c78f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b492957b92c1c73bc5b986614dd68f347b296ef9', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d13c3a087fa608728c14b0e763c705cf5c12565', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c53f306796efe735f63aa9a3af9638d45a540c5c', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7115e28b61bffdd4321b51fdc6e47739c624e628', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}]",David Xu,42751767,,User,,48,,68,24
1428808551,add support for hasconverged + conditional loading pkgs,"- [x] add support for user defined stepping criterion for trianing loop (issue #7 )
- [x] make Zygote, ForwardDiff, ReverseDiff, Enzyme pkg extension (issue #6)",True,8,https://api.github.com/repos/TuringLang/NormalizingFlows.jl/pulls/8,https://github.com/TuringLang/NormalizingFlows.jl/pull/8,closed,175,1799,16,22,1,7,1,1,[{'name': 'enhancement'}],2023-07-11 06:32:53+00:00,2023-08-03 18:47:56+00:00,2031303.0,"23 days, 12:15:03","[{'comment_id': 1262214510, 'comment_body': 'One should only import the package itself (NormalizingFlows) and the weak dependency (Enzyme), no other packages. Not even standard libraries. They should be loaded eg indirectly via the main package.', 'comment_created': datetime.datetime(2023, 7, 13, 8, 33, 36, tzinfo=datetime.timezone.utc), 'commenter': 'devmotion', 'type': 'User'}, {'comment_id': 1283536022, 'comment_body': '```suggestion\r\n    return θ, map(identity, opt_stats), st\r\n```', 'comment_created': datetime.datetime(2023, 8, 3, 17, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1283537180, 'comment_body': ""And just make `opt_stats = []` and `push!(opt_stats, stat)` above (I can't make a suggestion to code that doesn't show up in the diff)."", 'comment_created': datetime.datetime(2023, 8, 3, 17, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1283544729, 'comment_body': ""We could probably support compilation of the tape using some shenanigans with Memoize.jl or something (to avoid `compile` re-compiling the tape on every call to `value_and_gradient`). \r\n\r\nBut let's not bother with this for now :+1: Maybe make an issue to keep track of it or smth?"", 'comment_created': datetime.datetime(2023, 8, 3, 18, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1283545014, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 3, 18, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1283602956, 'comment_body': ""It seems compat entries for Enzyme and Requires are missing - I think this has to be fixed before tagging a release (packages with missing compat entries can't be added to the general registry IIRC)."", 'comment_created': datetime.datetime(2023, 8, 3, 18, 59, 51, tzinfo=datetime.timezone.utc), 'commenter': 'devmotion', 'type': 'User'}, {'comment_id': 1283606696, 'comment_body': 'Good point! Yeah, I always forget adding compat entries for denpencies. Will include those in next PR (should be merged soon).', 'comment_created': datetime.datetime(2023, 8, 3, 19, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'zuhengxu', 'type': 'User'}]","[{'commit_sha': '4f591afc71f9ec509bfc82103a6889715b8ab28a', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e31807e491942be89b2db00e88597e9eb1463e5', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99ac0c1fc4c6698cfe5a5f9be0cb45f75d786098', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4f5efac40999e524a3666d2d5592fdafa30b83d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b345e7801c41256bbfc1dbe48cd0acc7dd700adf', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f10512fb108c526af395253127c9bdb73dbd1e9f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b93dbe8d83489345323a02afe6d880a568f2755b', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c1c88a89347ff962465122ac616c59cbf2d70f6', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d2844fccdc1a3183ed4b93d0b6b80d5764a15ef', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fdcb0e73eb8f0c25ee496ad002d216556b5b276', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddad59e9ac3eba85d4d7725b45173cc45fd908ac', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef60ee1f9316d7578fefa6c568f825e8b3e2f65e', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a5deb0789645089e52dee6ed22778cab26315b9', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25d42113b26b08249bf5c73541f1544b53280a85', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df5edddd303346ee7b587f370d91996ea48b623f', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44143b4f45505923a5c315129c782f650226af5', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b03e9221c3a3423d1486ea3f4426c7bd6c7d6173', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9acf70165eb43d0e4393f046cd3a3eff1fda5b3', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6bf68bdfc8d30e96482d9689dc8fab97a9c6b3f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '701c5b5e707b65f663993735ba9ef3949e537ffb', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d057222fcd4b32cc6159dbd665fe0c6fd51ca4d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9412027ec73a39d7704a7fb4711208418f41a6bb', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}]",David Xu,42751767,,User,,48,,68,24
1486759380,Fix math display errors in readme ,,True,28,https://api.github.com/repos/TuringLang/NormalizingFlows.jl/pulls/28,https://github.com/TuringLang/NormalizingFlows.jl/pull/28,closed,14,11,1,3,1,0,0,0,[],2023-08-23 17:00:19+00:00,2023-08-23 19:33:58+00:00,9219.0,2:33:39,[],"[{'commit_sha': '74cf8bc8ac59771d605f044bbc6e23b2545514f9', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d94820b0708f82742582f41f6ca6952bdc897e3', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9427d5c9393d91b994293fbf30e105e976058d2', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}]",David Xu,42751767,,User,,48,,68,24
1432405708,more NF examples,"as per issue #15 

- [ ] implement a set of famous NFs illustrating the usage of `NormalizingFlows.jl` + `Bijectors.jl` (a tentative list)
   - [x] planar and radial flow 
   - [x] [Real NVP](https://arxiv.org/abs/1605.08803)
   - [x] [Neural Spline flow](https://arxiv.org/abs/1906.04032)
   - [ ] [Neural Autoregressive Flows](https://arxiv.org/abs/1804.00779)
   - [x] [Sparse Hamiltonian flow](https://arxiv.org/abs/2203.05723)
   - [x] [Hamiltonian VAE](https://arxiv.org/abs/1805.11328)",False,11,https://api.github.com/repos/TuringLang/NormalizingFlows.jl/pulls/11,https://github.com/TuringLang/NormalizingFlows.jl/pull/11,open,1243,53,17,42,0,0,2,1,"[{'name': 'documentation'}, {'name': 'enhancement'}]",2023-07-13 05:45:02+00:00,,0.0,,[],"[{'commit_sha': '4f591afc71f9ec509bfc82103a6889715b8ab28a', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e31807e491942be89b2db00e88597e9eb1463e5', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99ac0c1fc4c6698cfe5a5f9be0cb45f75d786098', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4f5efac40999e524a3666d2d5592fdafa30b83d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b345e7801c41256bbfc1dbe48cd0acc7dd700adf', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f10512fb108c526af395253127c9bdb73dbd1e9f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b93dbe8d83489345323a02afe6d880a568f2755b', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c1c88a89347ff962465122ac616c59cbf2d70f6', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d2844fccdc1a3183ed4b93d0b6b80d5764a15ef', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fdcb0e73eb8f0c25ee496ad002d216556b5b276', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddad59e9ac3eba85d4d7725b45173cc45fd908ac', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef60ee1f9316d7578fefa6c568f825e8b3e2f65e', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a5deb0789645089e52dee6ed22778cab26315b9', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25d42113b26b08249bf5c73541f1544b53280a85', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df5edddd303346ee7b587f370d91996ea48b623f', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44143b4f45505923a5c315129c782f650226af5', 'committer_username': 'sunxd3', 'committer_name': 'Xianda Sun', 'committer_email': None, 'commit_date': datetime.datetime(2013, 9, 11, 5, 55, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b03e9221c3a3423d1486ea3f4426c7bd6c7d6173', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9acf70165eb43d0e4393f046cd3a3eff1fda5b3', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6bf68bdfc8d30e96482d9689dc8fab97a9c6b3f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fabf20a55a2341e5eb7657a8746aae41c42f2906', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7964f917cb85ab548c3a855d3473f25291c0e188', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01de9d4ee82746f5e419929464199532a7fd6a8d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6993d339f1ec76bca160c8c4bec56e906266a2c7', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '810881f6e4b8241cc1eab71fc5fe6ba26fe0ab04', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0277c9e91cc548e8ed629468f2ba9160ea02820d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bc02bf318ac8ae6089cea943d3186cce5fa547d', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '144c668150b1f9f9bb641b8f2eddcf675ce9cd33', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2678198febaa2442e32e13383c39f716c9dd862b', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab7ac649dc76ea6dc870e7f7f6c0591fc5ec66ca', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '308ab61129e94e458cfe118ad4be8c65e94c8e41', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceafbde22c318461155301cf3717680ec48c1015', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5589f36ebb3a21a40e5c388256480beced26578f', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de01e0e478a7a3d0560c5fbf3f385da9149be7bc', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a85722d69febf34b6766608c482efae26f9da9', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8a8f5f8d1186154470eb1fbc63b281a45b2a0f7', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c858b109381dfbc0adee12c29fff02f6eb076b0c', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baef6a964e39175e6182d055bbce0668a36239ce', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03236802cdd5b90689a390830b96d670beab8f1a', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '144b06a4ef677d914b6a66e1c151170ed410f3d6', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70a4b75a353d8057ea1032a27ea780d9b1cde51', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30cfc329a6167788e3c3b4851fda78bb0b1275fb', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00387d3853a761efe80bea7208cc56b6d31e8734', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}]",David Xu,42751767,,User,,48,,68,24
1470557626,Initial work on CUDA-compat,"It seems overloading an external package in an extension doesn't work (which is probably for the better), so atm the CUDA tests are failing.

But if we move the overloads into the main package, they run. So probably should do that from now on.",False,25,https://api.github.com/repos/TuringLang/NormalizingFlows.jl/pulls/25,https://github.com/TuringLang/NormalizingFlows.jl/pull/25,open,214,7,12,20,6,7,0,0,[],2023-08-10 15:25:49+00:00,,0.0,,"[{'comment_id': 1297128769, 'comment_body': '@zuhengxu do you know why this change of yours was necessary? I thought `Random.randn!(rng, x)` should just dispatch to `CUDA.randn!(rng, x)`? ', 'comment_created': datetime.datetime(2023, 8, 17, 12, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1297132302, 'comment_body': ""Usage of `length` here will cause some issues, e.g. what if `s` is wrapping a matrix distribution?\r\n\r\nMaybe `(undef, size(s)..., n)` will do? But I don't quite recall what is the correct size here; should be somewhere in the Distributions.jl docs."", 'comment_created': datetime.datetime(2023, 8, 17, 12, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1297133708, 'comment_body': 'Is this needed now (after you removed the test-file you were using)?\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 17, 12, 14, 33, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1297134900, 'comment_body': 'Is this a deprecation or something? If so, should we maybe add compat entry to the tests?', 'comment_created': datetime.datetime(2023, 8, 17, 12, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'torfjelde', 'type': 'User'}, {'comment_id': 1299276858, 'comment_body': ""ahh, you are right---this is not necessary. I think I just made the change to ensure it's actually calling the cuda sampling. I can change it back."", 'comment_created': datetime.datetime(2023, 8, 19, 22, 57, 43, tzinfo=datetime.timezone.utc), 'commenter': 'zuhengxu', 'type': 'User'}, {'comment_id': 1299277032, 'comment_body': ""This file is needed if we want some of the Flux.jl chain to run properly on GPU. But you are right, it's not used for the current examples---they are all runing on CPUs. I'll remove it later"", 'comment_created': datetime.datetime(2023, 8, 19, 23, 0, 30, tzinfo=datetime.timezone.utc), 'commenter': 'zuhengxu', 'type': 'User'}, {'comment_id': 1299277356, 'comment_body': ""yeah, it is deprecated, see https://github.com/FluxML/Optimisers.jl/blob/6eaf26da61f3f1f7f6f663b0d413e3c124742014/src/rules.jl#L1C1-L1C2. I'll update the compat entry.  "", 'comment_created': datetime.datetime(2023, 8, 19, 23, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'zuhengxu', 'type': 'User'}]","[{'commit_sha': '4d54b64f9cb13532813a93741dd1a315bd2cd015', 'committer_username': 'torfjelde', 'committer_name': 'Tor Erlend Fjelde', 'committer_email': None, 'commit_date': datetime.datetime(2015, 2, 19, 13, 3, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bbe2979c9bddd600742ecd611cf4ece875837b0', 'committer_username': 'torfjelde', 'committer_name': 'Tor Erlend Fjelde', 'committer_email': None, 'commit_date': datetime.datetime(2015, 2, 19, 13, 3, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9f3f1acdb055878d59a210777b4e1a8e33552b5', 'committer_username': 'torfjelde', 'committer_name': 'Tor Erlend Fjelde', 'committer_email': None, 'commit_date': datetime.datetime(2015, 2, 19, 13, 3, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3619cab6046a448637b98c3aa172cd2d5990de8', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dde183283607157c035d3aa0186930002fcf85e', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f795a1525c86f477ac0ea24bbde3922d9f11c26', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '847a520d0cfecb4436ff35be69e07d4292c1030c', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51dc577122bd304e19189615e98a101b83dfc2a5', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a56c05e756fe65dfa72eed4625cfafa5c013236', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ec4317baff2394002d2fb247c1b55ac876d658e', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1fa4b974a7b164020e8d0f25fe2e596d51c61a4', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb0737288da6d4fc1ac34e8994e14ac3a0599e36', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84fce4c1bd30652feb1d1fc614cbc6193319f3fb', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b573508f3345fb8cb7a932cbb2f6e809e3e367d5', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8457d4db848a02b8a13e24a70a976ca04ea0a05', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c21400af342fe9d6b6fe5db6f8714261eb59e809', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ced915ef36b51eec039c4ef92326f3bfd3fc04b', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45c8e0a5b6195c0d10c540b59deea2024a011143', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4be9588af0c5c7f2e18ced2c2863c768567cf515', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e72b9df793c7aea84f47e4316fb686eb3091a6a', 'committer_username': 'zuhengxu', 'committer_name': 'David Xu', 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 27, 19, 57, 23, tzinfo=datetime.timezone.utc)}]",Tor Erlend Fjelde,11074788,,User,,106,,8,81

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
648577512,NormalizingFlows.jl,TuringLang/NormalizingFlows.jl,Julia,2,28,8,8,144,13,4,3,"[{'id': 1888647581, 'number': 35, 'closed': datetime.datetime(2024, 5, 26, 14, 41, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 26, 2, 30, 2, tzinfo=datetime.timezone.utc), 'time_taken': 43908.0, 'time_delta': '12:11:48', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 1486759380, 'number': 28, 'closed': datetime.datetime(2023, 8, 23, 19, 33, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 17, 0, 19, tzinfo=datetime.timezone.utc), 'time_taken': 9219.0, 'time_delta': '2:33:39', 'additions': 14, 'deletions': 11, 'state': 'closed'}, {'id': 1475311197, 'number': 27, 'closed': datetime.datetime(2023, 8, 23, 11, 35, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 15, 1, 17, 26, tzinfo=datetime.timezone.utc), 'time_taken': 728297.0, 'time_delta': '8 days, 10:18:17', 'additions': 579, 'deletions': 13, 'state': 'closed'}, {'id': 1440037762, 'number': 20, 'closed': datetime.datetime(2023, 8, 23, 19, 33, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 18, 22, 52, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3098493.0, 'time_delta': '35 days, 20:41:33', 'additions': 206, 'deletions': 1721, 'state': 'closed'}, {'id': 1440031957, 'number': 19, 'closed': datetime.datetime(2023, 7, 18, 22, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 18, 22, 44, 24, tzinfo=datetime.timezone.utc), 'time_taken': 96.0, 'time_delta': '0:01:36', 'additions': 319, 'deletions': 1794, 'state': 'closed'}, {'id': 1432405708, 'number': 11, 'closed': None, 'created': datetime.datetime(2023, 7, 13, 5, 45, 2, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1243, 'deletions': 53, 'state': 'open'}, {'id': 1428808551, 'number': 8, 'closed': datetime.datetime(2023, 8, 3, 18, 47, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 11, 6, 32, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2031303.0, 'time_delta': '23 days, 12:15:03', 'additions': 175, 'deletions': 1799, 'state': 'closed'}, {'id': 1378966124, 'number': 1, 'closed': datetime.datetime(2023, 6, 30, 22, 40, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 13, 4, tzinfo=datetime.timezone.utc), 'time_taken': 2194577.0, 'time_delta': '25 days, 9:36:17', 'additions': 2648, 'deletions': 5, 'state': 'closed'}]"
