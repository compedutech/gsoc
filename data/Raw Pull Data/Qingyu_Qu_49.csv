pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1251258144,Add MIRK6 method,"Corresponding paper: [Runge-Kutta Software with Defect Control for Boundary Value ODEs](https://epubs.siam.org/doi/10.1137/S1064827593251496)

Convergence test:

![MIRK6](https://user-images.githubusercontent.com/52615090/220847015-b0a3c92d-f474-4f8f-8d4f-a357126a16a7.png)
",True,84,https://api.github.com/repos/SciML/BoundaryValueDiffEq.jl/pulls/84,https://github.com/SciML/BoundaryValueDiffEq.jl/pull/84,closed,120,8,6,1,0,0,0,0,[],2023-02-23 07:44:37+00:00,2023-02-23 13:18:33+00:00,20036.0,5:33:56,[],"[{'commit_sha': 'e8148437f6ca4d7afd01b7a3df318fe74d54ec4e', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1369107836,Add defect control adaptivity,"Fix: #12 
Fix: #54 

Relating reference: https://netlib.org/ode/mirkdc.f

I just built the basic structure for the defect control adaptivity, it still needs a lot of work to get this program working.

The detailed explanation can be viewed on [my blog post](https://erikqqy.github.io/2023/05/29/preparation/)

ping @ChrisRackauckas  @YingboMa  @avik-pal ",True,89,https://api.github.com/repos/SciML/BoundaryValueDiffEq.jl/pulls/89,https://github.com/SciML/BoundaryValueDiffEq.jl/pull/89,closed,600,177,10,30,5,33,0,0,[],2023-05-29 13:04:04+00:00,2023-07-24 15:36:25+00:00,4847541.0,"56 days, 2:32:21","[{'comment_id': 1210826765, 'comment_body': '```suggestion\r\n""""""\r\n    redistribute(mesh_current, n, Nsub_star, s_hat)\r\n\r\nGenerate a new mesh \r\n\r\n""""""\r\n```', 'comment_created': datetime.datetime(2023, 5, 30, 21, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'avik-pal', 'type': 'User'}, {'comment_id': 1210827297, 'comment_body': 'Same for others below', 'comment_created': datetime.datetime(2023, 5, 30, 21, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'avik-pal', 'type': 'User'}, {'comment_id': 1233085536, 'comment_body': 'Can you describe what this one is doing?', 'comment_created': datetime.datetime(2023, 6, 17, 16, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1233085619, 'comment_body': 'are these pulled from the paper?', 'comment_created': datetime.datetime(2023, 6, 17, 16, 5, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1233085715, 'comment_body': ""I don't undersatnd why one would redistribute. Wouldn't this make it so you aren't clustering the points where the error is the most anymore?"", 'comment_created': datetime.datetime(2023, 6, 17, 16, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1233085759, 'comment_body': 'why is this global?', 'comment_created': datetime.datetime(2023, 6, 17, 16, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1235546309, 'comment_body': 'The discrete solution ```Y``` is a local variable in the loop of iteration, so I set ```Y``` as global so we can finally build a solution based on ```Y```.', 'comment_created': datetime.datetime(2023, 6, 20, 16, 53, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1235546361, 'comment_body': 'From my understanding, after we redistribute the mesh and by using the new mesh to generate a new discrete solution, the new solution would have a smaller error.', 'comment_created': datetime.datetime(2023, 6, 20, 16, 53, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1235546404, 'comment_body': ""The BVP book does have the specification of r1, r2 and r3\r\n\r\n![image](https://github.com/SciML/BoundaryValueDiffEq.jl/assets/52615090/0faade0d-8147-4505-b1dd-1720397a4420)\r\n\r\n\r\nBut both the book and the paper don't elaborate on the setting of the other parameters, so I set these parameters according to the FORTRAN routine."", 'comment_created': datetime.datetime(2023, 6, 20, 16, 53, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1235546448, 'comment_body': 'The redistribute part generates a new mesh to make sure that on the next iteration, the new solution on the new mesh would have a smaller defect estimation.\r\n\r\nBased on the judging quantities we computed before using defect and mesh function values, we compare the ratio $\\frac{r1}{r3}$ with $\\rho$ to decide whether we halve the mesh or make a redistribute.\r\n```julia\r\n    s_hat = zeros(Float64, n)\r\n    for i in 1:n\r\n        h = mesh_current[i + 1] - mesh_current[i]\r\n        norm = abs(defect[i, idamax(defect[i, :])])\r\n        s_hat[i] = (norm / tol)^(1.0 / (p + 1)) / h\r\n        if s_hat[i] * h > r1\r\n            r1 = s_hat[i] * h\r\n        end\r\n        r2 = r2 + s_hat[i] * h\r\n    end\r\n    r3 = r2 / n\r\n    n_predict::Int64 = round(Int, (safety_factor * r2) + 1)\r\n    if abs((n_predict - n) / n) < 0.1\r\n        n_predict = round(Int, 1.1 * n)\r\n    end\r\n```\r\n If we need to redistribute(r1/r3>rho), we redistribute a new mesh, I keep some detailed notes on the redistribute process here: https://erikqqy.github.io/2023/06/04/gsoc-1st-week/#Redistribute-mesh', 'comment_created': datetime.datetime(2023, 6, 20, 16, 53, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1258421830, 'comment_body': 'Do we need this to be mutable? It seems that the array elements are being updated later.', 'comment_created': datetime.datetime(2023, 7, 10, 15, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'avik-pal', 'type': 'User'}, {'comment_id': 1258460160, 'comment_body': ""```julia\r\nfor i in 1:(N - 1)\r\n    h = x[i + 1] - x[i]\r\n    # Update K\r\n    update_K!(S, cache, TU, i, h)\r\n    for r in 1:s\r\n        x_new = x[i] + c[r] * h\r\n        y_new = (1 - v[r]) * y[i] + v[r] * y[i + 1]\r\n        if r > 1\r\n            y_new += h * sum(j -> X[r, j] * K[j], 1:(r - 1))\r\n        end\r\n        temp = zeros(Float64, M)\r\n        fun!(temp, y_new, S.p, x_new)\r\n        K[r] = temp[:]\r\n    end\r\n    # Update residual\r\n    residual[i] = y[i + 1] - y[i] - h * sum(j -> b[j] * K[j], 1:s)\r\n    cache.k_discrete[i, :] = K[:]\r\nend\r\n```\r\n\r\nThe MIRK cache stores the discrete stages from evaluating ```PHI``` in the nonlinear solving process. Since we only need discrete stages from the final nonlinear solving step, I think the previous steps can be omitted, but I didn't figure out an executable way, e.g. judging if this step is the last time we evaluate ```PHI```ðŸ¤”."", 'comment_created': datetime.datetime(2023, 7, 10, 15, 46, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1266905830, 'comment_body': 'why does this need a declaration?', 'comment_created': datetime.datetime(2023, 7, 18, 14, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266906443, 'comment_body': ""oh the nothing case. Ehh that's kind of not nice but it works"", 'comment_created': datetime.datetime(2023, 7, 18, 14, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266907424, 'comment_body': 'Surface things as kwargs in a follow up?', 'comment_created': datetime.datetime(2023, 7, 18, 15, 0, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266907820, 'comment_body': 'Why `Int64` instead of `Int`?', 'comment_created': datetime.datetime(2023, 7, 18, 15, 0, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266908332, 'comment_body': ""what's the reason for this type declaration, and why Int64?"", 'comment_created': datetime.datetime(2023, 7, 18, 15, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266908842, 'comment_body': ""Don't use the datatype, that won't specialize "", 'comment_created': datetime.datetime(2023, 7, 18, 15, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266909508, 'comment_body': 'Why require Int64?', 'comment_created': datetime.datetime(2023, 7, 18, 15, 1, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266910441, 'comment_body': 'This will fail on 32-bit OS with the coercion to Int64.', 'comment_created': datetime.datetime(2023, 7, 18, 15, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266910939, 'comment_body': 'Why are these type declarations needed?', 'comment_created': datetime.datetime(2023, 7, 18, 15, 2, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266911462, 'comment_body': '```suggestion\r\n        mesh_new[2 * i] = (mesh_current[i + 1] + mesh_current[i]) / 2\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 15, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266911833, 'comment_body': '```suggestion\r\n    mesh_new = zeros(eltype(mesh_current), 2 * n + 1)\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 15, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266912149, 'comment_body': ""In fact we shouldn't assume array here either, but make an issue for that."", 'comment_created': datetime.datetime(2023, 7, 18, 15, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266912730, 'comment_body': 'not type matching', 'comment_created': datetime.datetime(2023, 7, 18, 15, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266913108, 'comment_body': 'Assumes Float64', 'comment_created': datetime.datetime(2023, 7, 18, 15, 4, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266913567, 'comment_body': ""```suggestion\r\n    weights_2, weights_2_prime = interp_weights(1 - tau_star, alg)\r\n```\r\n\r\netc. shouldn't assume float64"", 'comment_created': datetime.datetime(2023, 7, 18, 15, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266914115, 'comment_body': '```suggestion\r\n        tm1 = tau - 1\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 15, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266914267, 'comment_body': ""Etc., shouldn't assume Float64"", 'comment_created': datetime.datetime(2023, 7, 18, 15, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266914630, 'comment_body': 'Rational -> convert', 'comment_created': datetime.datetime(2023, 7, 18, 15, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266915553, 'comment_body': ""It's mutating the values but not the cache itself"", 'comment_created': datetime.datetime(2023, 7, 18, 15, 5, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1266963713, 'comment_body': ""I think while we can know the type of ```tau_star```, why don't we directly use Float to avoid redundant type conversion?"", 'comment_created': datetime.datetime(2023, 7, 18, 15, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1266972229, 'comment_body': 'Like what we did in OrdinaryDiffEq.jl?\r\nlike\r\n```\r\na1=convert(T, 111//222)\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 15, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}]","[{'commit_sha': 'e2fc9446e287a9068a5ce0a73d3198b4c2e9642f', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33b221e86e354eac6160c8748822f9cc363cf8c3', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2dd8f6984e166d43d69dd251bbf61e633c888bc', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d028baa39debae9a6495a3a837969e1efb36fd1', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adcc35a9b21604322a5b6a0a29dabe5abcc96076', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8863e4536587a3a9e0b1deca30b8c355d2094b96', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f9e437a252f2a67371cf3a0560976a62dd69531', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bfc50e04f82b62afe0717ef2b56047c96a2dfa7', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '642e5c87e9495e6f461f72d25c9d209420e602e8', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13cbeaefb8a273461e22b4d142e3eef4075c98aa', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd79c04b3c74e11440fa904f7336d48aa2100dc65', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebfd30e1ee946548db0188a32a0cd4d1c5f25455', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64295282cda567042d7e9a827e4b96303861f621', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb7ff3720c727a05e9e930ab25b7c48696caa263', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cbfecf42ef903c4bd83d31b1b2aee7b8b50710b', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f59a7066018a783d5691d9d1ee0d7502bb35658', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38d4eaa108208315670929bf593a4e28efeb5433', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fece70a205ebbef8133f08b7c60dd9a77d396bd', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2409831a3f76ffdc3c9d31f474af3b2d9032c57a', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89148bb12ca5364f90d826c9d222f6d34729450a', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '711acd09853a1fa14d40a6828a2b993bd155fd5c', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cf2a9fb3f8d4964ca2235940519a176b9d9e180', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d22794dbda965956f25857e9adbbe5ca772d76a', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c2cc234983640b990664bdd119c1b78997acbce', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbebe2fbdca49f00848190a451385cb29afe1273', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a13f1d4bbcc5a5771548ebee44ef765f96d54f31', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a02c6e0b113607a7304aae6fea0b50e0a81cbb3b', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14d5a346b869fcaea6a8688f32cfa6793c4b5f4f', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '100989969117c4f5f1465cc07b54a851d244e0cb', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a4860f01fde4d7c4a777adcb324c6f4c71981fe', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1405253605,Fix stage in collocation,"When we are calculating the subcomponents of the residual function

$$
\Phi_i=y_{i+1}-y_{i}-h\sum_{r=1}^sb_{r}K_{r}
$$

we are actually iterating from 1 to $s$ instead of the algorithm order.",True,91,https://api.github.com/repos/SciML/BoundaryValueDiffEq.jl/pulls/91,https://github.com/SciML/BoundaryValueDiffEq.jl/pull/91,closed,68,65,11,2,1,0,0,0,[],2023-06-23 15:41:59+00:00,2023-06-24 16:15:04+00:00,88385.0,"1 day, 0:33:05",[],"[{'commit_sha': '6e7c9f4f5a7f19dbe227069ddc4c9a8bd7e394cd', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55445f9da744cf748980eb2a24abfb73e1bc9be4', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1435779645,Add MIRK5 method,,True,92,https://api.github.com/repos/SciML/BoundaryValueDiffEq.jl/pulls/92,https://github.com/SciML/BoundaryValueDiffEq.jl/pull/92,closed,145,44,13,1,1,0,0,0,[],2023-07-15 09:23:30+00:00,2023-07-22 21:16:10+00:00,647560.0,"7 days, 11:52:40",[],"[{'commit_sha': 'e20749fbf29e0d101631117db15b841539c58acf', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1447983466,refactor: Fix MIRKTableau and MIRKInterpTableau,"The previous indexing in defect estimation is pretty weird, this PR adds ```MIRKInterpTableau``` to store the interpolants coefficients",True,94,https://api.github.com/repos/SciML/BoundaryValueDiffEq.jl/pulls/94,https://github.com/SciML/BoundaryValueDiffEq.jl/pull/94,closed,138,91,5,1,1,0,0,0,[],2023-07-25 08:38:36+00:00,2023-07-30 19:11:04+00:00,469948.0,"5 days, 10:32:28",[],"[{'commit_sha': 'a2a4b9687f5dfcdb94b96d65a8a0fbffc8d36a74', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1459990521,Add MIRK3 method,"This PR adds the MIRK3 method from [MIRKDC](https://netlib.org/ode/mirkdc.f)
![MIRK3](https://github.com/SciML/BoundaryValueDiffEq.jl/assets/52615090/518888f4-199b-40ca-b19e-b78e6add9d61)
",True,95,https://api.github.com/repos/SciML/BoundaryValueDiffEq.jl/pulls/95,https://github.com/SciML/BoundaryValueDiffEq.jl/pull/95,closed,108,6,7,2,2,0,0,0,[],2023-08-02 15:28:51+00:00,2023-08-06 07:26:19+00:00,316648.0,"3 days, 15:57:28",[],"[{'commit_sha': '12860405896b5a275a5dd0efa6698882cf5632e5', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b4b7b0790a3818f956cdd8aef11eaa38e8e4992', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1474533417,[skip ci] Update README,Update the README,True,99,https://api.github.com/repos/SciML/BoundaryValueDiffEq.jl/pulls/99,https://github.com/SciML/BoundaryValueDiffEq.jl/pull/99,closed,29,4,1,2,0,0,0,0,[],2023-08-14 14:27:05+00:00,2023-08-14 14:45:09+00:00,1084.0,0:18:04,[],"[{'commit_sha': 'f4f1fd956ca6369054bfd5310700ec0e63d3c93b', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae0504d140219ed5a3ec0a6d9253ca55de5686e6', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1475990413,Update docs for solvers,Update docs,True,100,https://api.github.com/repos/SciML/BoundaryValueDiffEq.jl/pulls/100,https://github.com/SciML/BoundaryValueDiffEq.jl/pull/100,closed,29,0,1,1,0,0,0,0,[],2023-08-15 14:36:52+00:00,2023-08-15 15:43:50+00:00,4018.0,1:06:58,[],"[{'commit_sha': '0cd0bd3bd2050e8ed81cdc3e4a70f4a3ffaa3907', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1477759176,Add MIRK2 method,Add MIRK2 method,True,101,https://api.github.com/repos/SciML/BoundaryValueDiffEq.jl/pulls/101,https://github.com/SciML/BoundaryValueDiffEq.jl/pull/101,closed,56,7,7,1,0,0,0,0,[],2023-08-16 16:17:17+00:00,2023-08-16 17:29:00+00:00,4303.0,1:11:43,[],"[{'commit_sha': 'a583064b1f0ba28803428035b30b5627672c0980', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1481422755,Fix initial guess interface,"Fix #27 
Fix #30

The PR fixes the initial guess interface of the MIRK method. It is just working but still needs further optimization to avoid potential bugs.",True,102,https://api.github.com/repos/SciML/BoundaryValueDiffEq.jl/pulls/102,https://github.com/SciML/BoundaryValueDiffEq.jl/pull/102,closed,39,26,9,3,3,5,0,0,[],2023-08-19 10:55:22+00:00,2023-08-23 09:29:05+00:00,340423.0,"3 days, 22:33:43","[{'comment_id': 1299171784, 'comment_body': 'Judging if the provided ```u0``` is an initial guess or the initial condition in this way is pretty awkward, do we have any other solutions to check the type of ```u0```?', 'comment_created': datetime.datetime(2023, 8, 19, 10, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1299217396, 'comment_body': ""I don't think we have a better way."", 'comment_created': datetime.datetime(2023, 8, 19, 16, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1299235073, 'comment_body': 'Is a convergence test checking htis?', 'comment_created': datetime.datetime(2023, 8, 19, 17, 53, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1299298972, 'comment_body': ""The interpolation coefficients don't affect the convergence test, but they did affect the ensemble test. I found the previous interpolation coefficients in MIRK6 are wrong, so I directly changed them in this PR.\r\n\r\n```fortran\r\nc_star(1) = 7.0d0/16.0d0\r\nc_star(2) = 3.0d0/8.0d0\r\nc_star(3) = 9.0d0/16.0d0\r\nc_star(4) = 1.0d0/8.0d0\r\n\r\nv_star(1) = 7.0d0/16.0d0\r\nv_star(2) = 3.0d0/8.0d0\r\nv_star(3) = 9.0d0/16.0d0\r\nv_star(4) = 1.0d0/8.0d0\r\n```"", 'comment_created': datetime.datetime(2023, 8, 20, 4, 44, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1302745187, 'comment_body': ""Let's do a follow up with some convergence or regression test on the interpolation. The interpolation coefficients should be used as the post solution interpolation, so I think that's the first priority: make `sol(t)` work at higher order using this continuous definition (and save the `k`'s to the solution). Once that's the case, we can add a dense convergence test which will use non-grid values to test the convergence, and that should then test the accuracy of the interpolation."", 'comment_created': datetime.datetime(2023, 8, 23, 9, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': 'fbe3b6c8ec9b5c26dbf4c618caa43ea883331d5e', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33e3f57573488078b5c096c542c08319015b8f84', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b374ccf622943da2a434a0f199440ea409f2b36c', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1188987723,Implement DPRKN5 method,"Corresponding paper: [Bettis, D. G. ""A Runge-Kutta NystrÃ¶m algorithm."" Celestial mechanics 8.2 (1973): 229-233.](https://link.springer.com/article/10.1007/BF01231421)

Convergence test:

![err](https://user-images.githubusercontent.com/52615090/211134696-2a492c7b-e9b0-4290-af75-0ca98403146b.png)


The adaptive methods regression test fails, I think the implementation is correct since the algorithm convergence is fine, need some help on the adaptive methods regression testsðŸ¤”.",True,1831,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1831,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1831,closed,325,8,7,8,5,7,0,0,[],2023-01-07 06:36:45+00:00,2023-01-10 07:06:53+00:00,261008.0,"3 days, 0:30:08","[{'comment_id': 1064724430, 'comment_body': 'That seems a bit high. Are you sure the adaptivity parameters are correct?', 'comment_created': datetime.datetime(2023, 1, 9, 14, 50, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1064795570, 'comment_body': 'One of the adaptive parameters is wrong, just fixed!', 'comment_created': datetime.datetime(2023, 1, 9, 15, 52, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1064798402, 'comment_body': 'use rationals for these?', 'comment_created': datetime.datetime(2023, 1, 9, 15, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'oscardssmith', 'type': 'User'}, {'comment_id': 1064798778, 'comment_body': 'hehe it happens', 'comment_created': datetime.datetime(2023, 1, 9, 15, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1064810763, 'comment_body': 'Sorry, I am a little confused, the coefficients should be compiled floats, why use rationals here?', 'comment_created': datetime.datetime(2023, 1, 9, 16, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1064881406, 'comment_body': 'The reason is for better accuracy. If `T` is a `BigFloat` than `convert(T, 1//96)` will have way more correct digits.', 'comment_created': datetime.datetime(2023, 1, 9, 17, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'oscardssmith', 'type': 'User'}, {'comment_id': 1065303255, 'comment_body': 'there are more rationals.', 'comment_created': datetime.datetime(2023, 1, 10, 3, 31, 20, tzinfo=datetime.timezone.utc), 'commenter': 'oscardssmith', 'type': 'User'}]","[{'commit_sha': '9e79edcf1439b461e263e0f3d298b4a4250e110d', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5b44a68e07d4a5721e6f1b4170c701622f924fc', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0409c25b5d38b0a0ce9c8cd14a78f4eb52d23c81', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94c3c0b2909f64d7c4cdd9afe0ab7aa20f8780e1', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5a248a5926512f0164ce68b3f847f0c3e95d76d', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dcb8d68b6ea0fb6afef9b99a003ad0ea1439035', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ecfb9ebac285099d19ac20b4dd953f920d401e4', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d8bb9961e09ad9dfd934b5f25b5e3c03a062ab6', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1190258005,Add ERKN7 method,"This PR implement the 7 order Runge Kutta Nystrom method in issue #1495.

Corresponding paper: [Tsitouras and Simon ""On high order Rungeâ€“Kuttaâ€“NystrÃ¶m pairs""](https://doi.org/10.1016/j.cam.2021.113753)

Fix: #1495 

![hamonic](https://user-images.githubusercontent.com/52615090/211249861-c77196fe-ca80-4e88-82b4-d93f4826870f.png)

![algconvergence_hamonic](https://user-images.githubusercontent.com/52615090/211249855-4eca4a0c-c50a-4d4f-8e7e-31843f374230.png)

Out of place harmonic

![outofplace_algconvergence_hamonic](https://user-images.githubusercontent.com/52615090/211249863-10e2538f-39a4-4c49-be04-bd674914cc0b.png)
",True,1832,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1832,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1832,closed,335,3,7,1,0,0,0,0,[],2023-01-09 06:16:42+00:00,2023-01-09 16:05:19+00:00,35317.0,9:48:37,[],"[{'commit_sha': 'ab8a4fb103351a004704d23347073f89d5a0e6a4', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1193258441,Add more optional threading,"This PR continues the work by @ranocha in PR #1508 and adds the optional threading to all of the explicit RK methods.

Fix: #1511 

I still have some questions:

1. As for the algorithm ```Vern7``` and ```Vern9```, in the second perform step function concerning ```Vern7Cache``` and ```Vern9Cache```:

```julia
perform_step!(integrator, cache::Vern7Cache{<:Array}, repeat_step = false)
```

```julia
perform_step!(integrator, cache::Vern9Cache{<:Array}, repeat_step = false)
```
  it uses ```@simd``` rather than ```@..```, do we need to add optional threading here too?

2. As for the algorithms ```Feagin```, I didn't see any ```@..``` used in these algorithms, do we need to add optional threading for these algorithms?

",True,1833,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1833,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1833,closed,2898,757,14,5,9,0,0,0,[],2023-01-11 04:19:19+00:00,2023-01-11 17:40:49+00:00,48090.0,13:21:30,[],"[{'commit_sha': '06f8ed627094a1c41368dd7665fe1ab70bc3d2d5', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1561ea939bb8ee7b0a02ecab345452516edab21', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7719e415b125db457b7590b793ba80dae0e5d61', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e1142cebaabd2d22619abbde7ab071d969b9c3b', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5199fa15e8eeae27eea26906d7325d507536b24', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1200272026,"Remove unnecessary branches of Vern7, Vern9 and Tsit5","This PR continues the work in #1833, remove the unnecessary ```Array{Float64}``` branches for ```Vern7``` and ```Vern9```",True,1835,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1835,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1835,closed,0,474,2,2,4,0,0,0,[],2023-01-17 13:23:13+00:00,2023-01-17 15:05:36+00:00,6143.0,1:42:23,[],"[{'commit_sha': 'd527ebc1a67d00f8a2aff8f47ab02a142a19d5d3', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41737e6cf756225c6e282c26847714b342e222a8', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1209888663,Add docs for optional threading,This PR finishes the work in #1833 ,True,1837,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1837,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1837,closed,10,0,1,2,0,3,0,0,[],2023-01-19 11:30:07+00:00,2023-01-19 12:41:46+00:00,4299.0,1:11:39,"[{'comment_id': 1081168715, 'comment_body': '```suggestion\r\nWith the help of [FastBroadcast.jl](https://github.com/YingboMa/FastBroadcast.jl), \r\nwe can use threaded parallelism to reduce compute time for all of the explicit Runge-Kutta methods!\r\nThe `thread` option determines whether internal broadcasting on appropriate CPU arrays should be serial\r\n(`thread = OrdinaryDiffEq.False()`, default) or use multiple threads \r\n(`thread = OrdinaryDiffEq.True()`) when Julia is started with multiple threads. \r\nWhen we call `solve(prob, alg(thread=OrdinaryDiffEq.True()))`,\r\nwe can turn on the multithreading option to achieve acceleration\r\n(for sufficiently large problems).\r\n\r\n```', 'comment_created': datetime.datetime(2023, 1, 19, 11, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ranocha', 'type': 'User'}, {'comment_id': 1081169080, 'comment_body': 'Multithreading is not about compilation time', 'comment_created': datetime.datetime(2023, 1, 19, 11, 59, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ranocha', 'type': 'User'}, {'comment_id': 1081213148, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2023, 1, 19, 12, 45, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}]","[{'commit_sha': 'af6f4d68e7f39723ccb88144db5992dd6d9de315', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35c872254e09489258cc286d46ec798246e8c3ca', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1209888663,Add docs for optional threading,This PR finishes the work in #1833 ,True,1837,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1837,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1837,closed,10,0,1,2,0,3,0,0,[],2023-01-19 11:30:07+00:00,2023-01-19 12:41:46+00:00,4299.0,1:11:39,"[{'comment_id': 1081168715, 'comment_body': '```suggestion\r\nWith the help of [FastBroadcast.jl](https://github.com/YingboMa/FastBroadcast.jl), \r\nwe can use threaded parallelism to reduce compute time for all of the explicit Runge-Kutta methods!\r\nThe `thread` option determines whether internal broadcasting on appropriate CPU arrays should be serial\r\n(`thread = OrdinaryDiffEq.False()`, default) or use multiple threads \r\n(`thread = OrdinaryDiffEq.True()`) when Julia is started with multiple threads. \r\nWhen we call `solve(prob, alg(thread=OrdinaryDiffEq.True()))`,\r\nwe can turn on the multithreading option to achieve acceleration\r\n(for sufficiently large problems).\r\n\r\n```', 'comment_created': datetime.datetime(2023, 1, 19, 11, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ranocha', 'type': 'User'}, {'comment_id': 1081169080, 'comment_body': 'Multithreading is not about compilation time', 'comment_created': datetime.datetime(2023, 1, 19, 11, 59, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ranocha', 'type': 'User'}, {'comment_id': 1081213148, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2023, 1, 19, 12, 45, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}]","[{'commit_sha': 'af6f4d68e7f39723ccb88144db5992dd6d9de315', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35c872254e09489258cc286d46ec798246e8c3ca', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1212319035,Add DPRKN6FM method,"This PR add ```DPRKN6FM``` method.

Corresponding paper: [Families of Runge-Kutta-Nystrom Formulae](https://academic.oup.com/imajna/article/7/2/235/735233)

Convergence tests:

![DPRKN6FM](https://user-images.githubusercontent.com/52615090/213861173-29fe5be4-a65a-40f0-b14f-76a119a7312b.png)
",True,1841,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1841,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1841,closed,324,7,7,1,0,0,0,0,[],2023-01-21 09:38:55+00:00,2023-01-21 16:13:40+00:00,23685.0,6:34:45,[],"[{'commit_sha': '2858bc9b184be1d60e171e342ef48f8b07e49e5f', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1213495391,Throw error when using partitioned ODE methods with ODEProblem,"This PR is a simple fix of the error message for the case when we use the methods for partitioned ODE with ODEProblem.

Fix: #1738 

![error](https://user-images.githubusercontent.com/52615090/214057813-05d298c3-9349-4276-9578-bd7759dc84ea.png)

I think maybe we can also define a specific type for these partitioned ODE i.e. `OrdinaryDiffEqPartitionedAlgorithms`, it would be easier for the judgement.",True,1843,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1843,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1843,closed,43,31,2,7,3,4,0,0,[],2023-01-23 14:01:15+00:00,2023-01-25 15:04:07+00:00,176572.0,"2 days, 1:02:52","[{'comment_id': 1084108519, 'comment_body': 'Use a subtype instead', 'comment_created': datetime.datetime(2023, 1, 23, 14, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1084109680, 'comment_body': 'Those generate an ODEProblem though. It should instead check the `prob.problem_type`.', 'comment_created': datetime.datetime(2023, 1, 23, 14, 15, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1084210586, 'comment_body': 'I am not sure if I am getting it right, so we need to specify a type of algorithms like ```abstract OrdinaryDiffEqPartitionedAlgorithms <: OrdinaryDiffEqAlgorithms end```, and then redefine all of the partitioned ODE methods like ```struct Nystrom4 <: OrdinaryDiffEqPartitionedAlgorithms end```?', 'comment_created': datetime.datetime(2023, 1, 23, 15, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1085139931, 'comment_body': 'Yes, otherwise that type check allocates and is not inferred.', 'comment_created': datetime.datetime(2023, 1, 24, 11, 15, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': 'e3143d8525a6d0431bc592ae342b7d23fd0b7fdb', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5c41a9caac40e60dd2277cc63c332c060837d20', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50dca534a6e6c7766d3048f3d5052b42265c4d81', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '813081001787fab5d0a2c8b287d5ab4e085c1b50', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07c9f827c24ab0d347dbd237b070b11bf9c0c6a1', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '590428abfe15e8ccdd6c6fb5e6237672553685b3', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '531599f07f8ee879c9d642c5f54286892de9571b', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1220565489,Add MSRK54 method,"Part of the #1601 

Corresponding paper: https://arxiv.org/pdf/2108.12590.pdf

![MSRK54](https://user-images.githubusercontent.com/52615090/215318476-3bed388a-dfa2-4fec-9b25-1b0ab7f60184.png)
",True,1854,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1854,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1854,closed,277,1,7,3,5,1,0,0,[],2023-01-29 09:51:30+00:00,2023-01-29 12:11:24+00:00,8394.0,2:19:54,"[{'comment_id': 1089917466, 'comment_body': '```suggestion\r\nalg_order(alg::MSRK54) = 5\r\n```\r\n\r\n?', 'comment_created': datetime.datetime(2023, 1, 29, 9, 55, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': '974af72e1d52424250c69b1bbc3207e5c617fa20', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66a4af38d95ddb6518fb24804ec0492d5c078172', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ee739c21d06841a36bf02037ded174b68b89dfc', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1224389687,Add MSRK6 method,"Corresponding paper: https://arxiv.org/abs/2202.08443, ref: #1601 

Convergence test:

![MSRK6](https://user-images.githubusercontent.com/52615090/215974628-b0f02eca-c617-4c99-8e75-5d32d74e4a39.png)
",True,1859,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1859,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1859,closed,266,1,7,2,0,0,0,0,[],2023-02-01 07:07:37+00:00,2023-02-02 16:04:20+00:00,118603.0,"1 day, 8:56:43",[],"[{'commit_sha': 'f1db7b877ddf8de78f9b35077c55ac469f60512d', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c0646734020438c6feaebf9fd4c00e4aefa8324', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1243032205,Add ESDIRK436L2SA2 method,"Corresponding paper: https://www.sciencedirect.com/science/article/abs/pii/S0168927419301801

Part of #1448 

![SDIRK](https://user-images.githubusercontent.com/52615090/219257924-f1282951-ad38-4286-96b9-6f9f6360eb67.png)
",True,1873,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1873,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1873,closed,345,4,8,4,1,2,0,0,[],2023-02-16 03:07:18+00:00,2023-02-18 11:53:32+00:00,204374.0,"2 days, 8:46:14","[{'comment_id': 1110447445, 'comment_body': 'Also `lorenz`?', 'comment_created': datetime.datetime(2023, 2, 17, 23, 38, 29, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 1110541874, 'comment_body': 'I am pretty sure lorenz is defined a few lines before in this file.', 'comment_created': datetime.datetime(2023, 2, 18, 3, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}]","[{'commit_sha': '4db695f4835577332e27b996cbf47b5447435ed5', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '883ed1ef7a6483cfa25695e282828809e3b58bd4', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '203c62f1b2035b0a99639365061d514c91b08c3c', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '769966975f40e0e03d8a50353e1af91de0bb6c01', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1243045167,Add CONTRIBUTING.md,,True,1874,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1874,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1874,closed,5,0,1,2,1,0,0,0,[],2023-02-16 03:26:26+00:00,2023-02-16 11:53:06+00:00,30400.0,8:26:40,[],"[{'commit_sha': 'fecccd9d9ca7de20b0969d38aa7dcd4e9851f574', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ca8813bb839a3d362a07b058a0ba5b8a41ce681', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1246029654,Add ESDIRK437L2SA method,"Corresponding paper: https://www.sciencedirect.com/science/article/abs/pii/S0168927419301801

Part of https://github.com/SciML/OrdinaryDiffEq.jl/issues/1448

![ESDIRK437L2SA](https://user-images.githubusercontent.com/52615090/219866950-d483cd1c-83b4-4f53-b410-e61abb29eb4f.png)
",True,1877,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1877,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1877,closed,386,11,9,1,3,0,0,0,[],2023-02-18 12:56:18+00:00,2023-02-19 17:11:35+00:00,101717.0,"1 day, 4:15:17",[],"[{'commit_sha': '3b603bd07c600bf6fa160506138055d7fa59bb0c', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1246888754,Add ESDIRK547L2SA2 method,"Corresponding paper: https://www.sciencedirect.com/science/article/abs/pii/S0168927419301801

Part of https://github.com/SciML/OrdinaryDiffEq.jl/issues/1448

![ESDIRK547L2SA2](https://user-images.githubusercontent.com/52615090/220052379-705ba8f5-4245-42d6-81a1-fba65d4892c2.png)
",True,1880,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1880,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1880,closed,378,2,8,2,0,0,0,0,[],2023-02-20 08:28:33+00:00,2023-02-20 13:28:33+00:00,18000.0,5:00:00,[],"[{'commit_sha': '4b56c4ef3c1835302eb3929d3a93e6a71a44d43b', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e2186c0a2586a1f7f6e39522d1e355189ceb96b', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1259021832,Add SIR54 method,"Fix: #1408 
Corresponding paper: [Rungeâ€“Kutta pairs suited for SIR-type epidemic models](https://onlinelibrary.wiley.com/doi/abs/10.1002/mma.7104)

Convergence test:

![SIR54](https://user-images.githubusercontent.com/52615090/222186159-149f6b52-bcec-43ac-af27-55d40aa88e66.png)
",True,1888,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1888,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1888,closed,468,25,11,2,2,0,0,0,[],2023-03-01 15:31:55+00:00,2023-03-01 16:23:39+00:00,3104.0,0:51:44,[],"[{'commit_sha': '2ab691adb99bb3d284081ed378ce8e9b652d8f9c', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd42a1b3c4a1d3dbe19adf7cf082ecdbc85ea1f6b', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1295849805,Add CG4a method,"Part of #1064 

Corresponding paper: https://link.springer.com/content/pdf/10.1023/A:1016645730465.pdf

Convergence test:

![CG4a_convergence](https://user-images.githubusercontent.com/52615090/228780097-25098246-9cc9-4c6c-8e5c-33e7a00a86d9.png)
",True,1921,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1921,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1921,closed,82,4,7,1,2,0,0,0,[],2023-03-30 08:46:51+00:00,2023-03-31 14:19:30+00:00,106359.0,"1 day, 5:32:39",[],"[{'commit_sha': '76eb8b4e2881544ce2ab32d544584ce594756fc8', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1457282073,Add missing methods to docs,This PR adds the missing methods to docs.,True,2006,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/2006,https://github.com/SciML/OrdinaryDiffEq.jl/pull/2006,closed,22,5,7,1,0,0,0,0,[],2023-08-01 02:16:51+00:00,2023-08-01 02:42:10+00:00,1519.0,0:25:19,[],"[{'commit_sha': '82d2be48736a79479044f90009b14e311e221419', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1461387481,Finish all stage_limiter! and step_limiter!,"Fix: #1985 

This PR adds ```stage_limiter!``` and ```step_limiter!``` for all of the explicit RK methods' ```perform_step!```.",True,2008,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/2008,https://github.com/SciML/OrdinaryDiffEq.jl/pull/2008,closed,318,39,6,4,2,6,0,0,[],2023-08-03 12:31:19+00:00,2023-08-12 22:40:15+00:00,814136.0,"9 days, 10:08:56","[{'comment_id': 1285181097, 'comment_body': ""This isn't the sciml format?"", 'comment_created': datetime.datetime(2023, 8, 6, 9, 9, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1285181238, 'comment_body': '```suggestion\r\n    Anas5Cache(u, uprev, k1, k2, k3, k4, k5, k6, k7, utilde, tmp, atmp, tab, alg.stage_limiter!, alg.step_limiter!, alg.thread)\r\n```', 'comment_created': datetime.datetime(2023, 8, 6, 9, 10, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1285181373, 'comment_body': '```suggestion\r\n@cache struct Anas5Cache{uType, rateType, uNoUnitsType, TabType, StageLimiter, StepLimiter, Thread} <:\r\n```', 'comment_created': datetime.datetime(2023, 8, 6, 9, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1285240272, 'comment_body': 'Weird, I did use the SciML format before committingðŸ¤”', 'comment_created': datetime.datetime(2023, 8, 6, 16, 41, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1285240317, 'comment_body': ""I'll have to look into that."", 'comment_created': datetime.datetime(2023, 8, 6, 16, 42, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1285881473, 'comment_body': ""Don't know if it's only on my computer, here is the versioninfo:\r\n\r\n```julia\r\njulia> versioninfo()\r\nJulia Version 1.9.0\r\nCommit 8e63055292 (2023-05-07 11:25 UTC)\r\nPlatform Info:\r\n  OS: Windows (x86_64-w64-mingw32)\r\n  CPU: 8 Ã— Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz\r\n  WORD_SIZE: 64\r\n  LIBM: libopenlibm\r\n  LLVM: libLLVM-14.0.6 (ORCJIT, skylake)\r\n  Threads: 1 on 8 virtual cores\r\n```\r\nJuliaFormatter.jl version:\r\n\r\n```julia\r\n(@v1.9) pkg> st JuliaFormatter\r\nStatus `D:\\Julia\\.julia\\environments\\v1.9\\Project.toml`\r\n  [98e50ef6] JuliaFormatter v1.0.34\r\n```"", 'comment_created': datetime.datetime(2023, 8, 7, 13, 38, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}]","[{'commit_sha': '543f4bd6779480d225de1d5f58e384f4f46d8aa0', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20372f03de36c3a8f6dd4ee036a9924ee4f3868c', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cdd92534d5865071569366e7a03081036b40d92', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e9012a690e3eebb0cb63b1b8b138977128d8f22', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1477759098,Change exp to exponential! in linear methods,"Fix #2009 

Before:

![old_generic](https://github.com/SciML/OrdinaryDiffEq.jl/assets/52615090/4fc9d82f-feca-4d0e-9b1a-c5c4a4d6c9f0)

After:

![new_generic](https://github.com/SciML/OrdinaryDiffEq.jl/assets/52615090/0f17f687-d017-4c33-8f59-073480cc0edf)

It is weird that I didn't see any acceleration here. Maybe I did something wrong here. But I think now it is supporting AD now?",True,2018,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/2018,https://github.com/SciML/OrdinaryDiffEq.jl/pull/2018,closed,179,97,4,8,6,3,0,0,[],2023-08-16 16:17:14+00:00,2023-08-23 06:05:46+00:00,568112.0,"6 days, 13:48:32","[{'comment_id': 1296257076, 'comment_body': 'This cache should be constructed during the cache construction time.', 'comment_created': datetime.datetime(2023, 8, 16, 17, 58, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1297208163, 'comment_body': 'Sorry, I am a little confused, while the cache construction is located in ```linear_cache.jl```, you mean we should construct the exponential matrix cache during the algorithm cache construction process right? My understanding is that we can allocate the matrix once in algorithms cache construction like ```exp_cache = ExponentialUtilities.alloc_mem(f, exp_method)``` and pass the allocated matrix to perform_step and use copies of that allocated matrix to complete ```exponential!``` instead of allocating many times in perform_step.', 'comment_created': datetime.datetime(2023, 8, 17, 13, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1297809814, 'comment_body': '> My understanding is that we can allocate the matrix once in algorithms cache construction like exp_cache = ExponentialUtilities.alloc_mem(f, exp_method) and pass the allocated matrix to perform_step and use copies of that allocated matrix to complete exponential! instead of allocating many times in perform_step.\r\n\r\nYes exactly. The `alloc_mem` call is intended to be called just once, and its cache can be reused in every `exponential!` call from that point on. That would greatly reduce the allocations of these calls.', 'comment_created': datetime.datetime(2023, 8, 17, 22, 28, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': '284de8fe72f5ab24359f547cba1bed8440e33266', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bf4b5a5685e74fc7f9ca19c4f66a2c865c9614e', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab382f893ea13b401fa15c73a14265c797a90a64', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f006d51e2972d38c11e34e35421350712a82543e', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b92dc51ea8aaca431381b5bfe0053404640a40cd', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3074832d255e9de1ce619f4e195054c37a490836', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635c5c43545d8d9a724b39eaa13e1ee9df4810a6', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5141a0e324299c04d021cd874a2fd0f765112cd5', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1212635281,Add isinplace checks for DDEFunction,"This PR adds isinplace checks for ```DDEFunction```

Fix: #372 ",True,373,https://api.github.com/repos/SciML/SciMLBase.jl/pulls/373,https://github.com/SciML/SciMLBase.jl/pull/373,closed,103,0,2,2,4,0,0,0,[],2023-01-22 15:33:59+00:00,2023-01-23 10:12:32+00:00,67113.0,18:38:33,[],"[{'commit_sha': '9b8954854579e1a464eba79c657c1e1ce2990671', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '236087040c6741dd9d950f3ba8a65b56debc38be', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1209882759,Add BVPFunction,"This PR adds ```BVPFunction```. I think it would be nice for BoundaryValueDiffEq.jl to have this feature, since we have all kinds of ```*Function``` for all kinds of problems.

It is very interesting that after I added the ```BVPFunction``` feature to SciMLBase.jl and used the simple pendulum example to test if the ```BVPFunction``` can be directly used to solve the problem, and tada!ðŸŽ‰

![bvpfunction](https://user-images.githubusercontent.com/52615090/213429111-d8e9dae4-5eb5-499b-b077-f6f59f432b10.png)


![simplependulum](https://user-images.githubusercontent.com/52615090/213429170-3016fa99-0e4b-4ae0-94a6-4ad1e99db3e5.png)
",True,370,https://api.github.com/repos/SciML/SciMLBase.jl/pulls/370,https://github.com/SciML/SciMLBase.jl/pull/370,closed,479,54,9,10,8,14,0,0,[],2023-01-19 11:24:52+00:00,2023-09-04 22:45:51+00:00,19740059.0,"228 days, 11:20:59","[{'comment_id': 1292816235, 'comment_body': 'If `BVPFunction` stores `bc` should be duplicate the storage in `BVProblem` again?', 'comment_created': datetime.datetime(2023, 8, 13, 15, 56, 37, tzinfo=datetime.timezone.utc), 'commenter': 'avik-pal', 'type': 'User'}, {'comment_id': 1292818195, 'comment_body': 'Yeah, indeed, the problem construction process in ```BVProblem``` is similar with ```SDEProblem```, they both have duplicate ```bc``` in ```BVProblem``` and ```g``` in ```SDEProblem```, but if we want to have a ```BVPFunction``` stores both ```f``` and ```bc```, duplicating ```bc``` could really making the problem constructor concise. We need to note that when we are unpacking ```BVProblem```, we actually get a ```BVPFunction``` but not ```f```.\r\n\r\nhttps://github.com/SciML/SciMLBase.jl/blob/4d926fccf201c68f8194c66e5580cec104bd047d/src/problems/sde_problems.jl#L130-L132', 'comment_created': datetime.datetime(2023, 8, 13, 16, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1294830950, 'comment_body': ""In that case it's fair to stay consistent.\r\n\r\nMaybe we can add an additional dispatch on BVPFunction where we automatically pull out the `bc` during problem construction that way user wont have to do `BVProblem(BVPFunction(f, bc), bc...)` and instead can specify `BVProblem(BVPFunction(f, bc)....)`"", 'comment_created': datetime.datetime(2023, 8, 15, 16, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'avik-pal', 'type': 'User'}, {'comment_id': 1295310973, 'comment_body': 'I think you mean a dispatch on ```BVProblem``` right? Just updated and now we can directly specify ```BVProblem(BVPFunction(f, bc).....)``` to construct a ```BVProblem```.\r\nDo we need to do the same for ```SDEProblem``` and ```SDEFunction```? The problem construct of ```SDEProblem``` also need users to do somthing like ```SDEProblem(SDEFunction(f, g), g)```, see here: https://docs.sciml.ai/DiffEqDocs/stable/tutorials/sde_example/#Using-Higher-Order-Methods', 'comment_created': datetime.datetime(2023, 8, 16, 2, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1296013891, 'comment_body': ""@ChrisRackauckas  do you think this is a valid API choice? Is there a particular reason other Problem Types don't have this?"", 'comment_created': datetime.datetime(2023, 8, 16, 14, 34, 56, tzinfo=datetime.timezone.utc), 'commenter': 'avik-pal', 'type': 'User'}, {'comment_id': 1296623664, 'comment_body': ""That was done so it would be non-breaking. But I'd be happy to just change the SDEProblem one at this point since it has effectively deprecated the `prob.g` a long time back."", 'comment_created': datetime.datetime(2023, 8, 17, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1297170891, 'comment_body': 'Updated both ```BVProblem``` and ```SDEProblem```.', 'comment_created': datetime.datetime(2023, 8, 17, 12, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1297326197, 'comment_body': 'It looks like the change of ```SDEProblem``` is a breaking one.', 'comment_created': datetime.datetime(2023, 8, 17, 14, 42, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1297365615, 'comment_body': 'can you handle downstream?', 'comment_created': datetime.datetime(2023, 8, 17, 15, 9, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1297442846, 'comment_body': 'Sure, I am working on fixing downstream errors', 'comment_created': datetime.datetime(2023, 8, 17, 16, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1298584597, 'comment_body': ""I am a little lost here, there are three ways of constructing a ```BVProblem```:\r\n(1). Directly construction from scratch\r\n```julia\r\nprob = BVProblem(f, bc, u0, tspan)\r\n```\r\n(2). Use ```BVPFunction```\r\n```julia\r\nprob = BVProblem(BVPFunction(f, bc), u0, tspan)\r\n```\r\n(3). Another way of using ```BVPFunction```\r\n```julia\r\nprob = BVProblem(BVPFunction(f, bc), bc, u0, tspan)\r\n```\r\n\r\nAs for ```SDEProblem```, the definitions are similar, so my question is that it looks the (2) and (3) dispatches can't exist at the same time, so I think we are deprecating (3) and using (2) instead?"", 'comment_created': datetime.datetime(2023, 8, 18, 15, 27, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1302746840, 'comment_body': 'yes', 'comment_created': datetime.datetime(2023, 8, 23, 9, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1302747736, 'comment_body': ""this fallback won't work since it will drop information like Jacobian types."", 'comment_created': datetime.datetime(2023, 8, 23, 9, 30, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1305764925, 'comment_body': 'It looks like deprecating (3) and using (2) in ```SDEProblem``` and ```SDEFunction``` is way more complicated than ```BVProblem``` and ```BVPFunction```. ```SplitSDEProblem```, ```DynamicalSDEProblem``` and maybe some functions in ModelingToolkit.jl and JumpProcess.jl etc. are all relying on (3) in problem constructor, the new change in this PR would cause a lot of errors and break a lot of APIs.', 'comment_created': datetime.datetime(2023, 8, 25, 14, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}]","[{'commit_sha': 'ac60b895cb14b691211a3578277d24e95fa5495d', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a24ffd822aa2c7a13115d8f5d8e34e9eea37286', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cf85c43aced812d700445537c221758936e217f', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8046eb99f3917acdc92ace1fd58417ac44005e2d', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a734ff8771052996a20166f0f62f172dc882f089', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6fa298f8aecb649e1fd17ee2178bba4dc9bd571', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '681b9e1b4b83d7f9733958fa1db9b8abdc44f2f3', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61b726da8f4bd12bf8f1349f055aac610c1236de', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98afac4ade8c0741d66e66f5c69a35d813b3fde6', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30fb3c2ee317df772da1983a1be6600ba2f63868', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1409154470,Throw appropriate error when analytic is not given,"This is just a minor fix, when we are plotting a solution **without an analytical solution** but we set ```plot_analytic=true```, the error is weird:

![image](https://github.com/SciML/SciMLBase.jl/assets/52615090/965e67b2-7e15-48b0-8b55-37631c9a1be3)",True,459,https://api.github.com/repos/SciML/SciMLBase.jl/pulls/459,https://github.com/SciML/SciMLBase.jl/pull/459,closed,1,0,1,1,1,0,0,0,[],2023-06-27 05:54:58+00:00,2023-07-30 20:21:28+00:00,2903190.0,"33 days, 14:26:30",[],"[{'commit_sha': '9cdba55e8ed7333c3726687f92fd50eb9403e3bc', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1423995092,Improve initial guess for TwoPointBVProblem,,True,462,https://api.github.com/repos/SciML/SciMLBase.jl/pulls/462,https://github.com/SciML/SciMLBase.jl/pull/462,closed,27,0,1,2,1,0,0,0,[],2023-07-07 05:00:06+00:00,2023-07-30 15:00:04+00:00,2023198.0,"23 days, 9:59:58",[],"[{'commit_sha': '71968d0b76a61f7295f17b25bf13e71220f57a81', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc07f97fad05693fc8c0ec3de7ef3d8c3d5641f9', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1453486906,Fix promoted tspan for BVProblem and ODEProblem,,True,474,https://api.github.com/repos/SciML/SciMLBase.jl/pulls/474,https://github.com/SciML/SciMLBase.jl/pull/474,closed,26,10,5,7,2,6,0,0,[],2023-07-28 09:14:40+00:00,2023-07-30 20:21:00+00:00,212780.0,"2 days, 11:06:20","[{'comment_id': 1278526853, 'comment_body': ""What's up with this formatting? This doesn't look like the right formatter."", 'comment_created': datetime.datetime(2023, 7, 30, 7, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1278526902, 'comment_body': '@isaacsas do you know what could be causing this?', 'comment_created': datetime.datetime(2023, 7, 30, 7, 57, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1278561497, 'comment_body': 'The formatting? No idea. There werenâ€™t any recent changes, and the last change was for function declaration signatures only right?', 'comment_created': datetime.datetime(2023, 7, 30, 12, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 1278561585, 'comment_body': ' Maybe this was a manual reformatting that rejected the auto format?', 'comment_created': datetime.datetime(2023, 7, 30, 12, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 1278576693, 'comment_body': '@ErikQQY can you please minimize the change here and do the formatting in a different PR?', 'comment_created': datetime.datetime(2023, 7, 30, 14, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1278582010, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 7, 30, 15, 25, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}]","[{'commit_sha': '841a0a7526e45cb731370300bcf41658db9addb8', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43a25807b797e9eff29af45cdf8188b53bff4762', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '086869a124b26088af62d402412c9481e8e3d9b3', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e163b633c091ff24dc2b505f628483ef8534d02b', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcf854e5796f60f6758919fb3dea2512f701ff98', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6a8b5223b0a7f4173c42ebc9ebcb20e871c997f', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bf34a8f53c6ac115fc727f2333df0be3a56a310', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1190270352,Fix DiffEqDevDocs broken link,,True,636,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/636,https://github.com/SciML/DiffEqDocs.jl/pull/636,closed,1,1,1,1,0,0,0,0,[],2023-01-09 06:30:24+00:00,2023-01-09 14:06:16+00:00,27352.0,7:35:52,[],"[{'commit_sha': '5f7beaaf52a61d864008e00a2d1350c85d97610d', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1191954140,Add docs for DPRKN5 and ERKN7,"In PR [OrdinaryDiffEq.jl#1831](https://github.com/SciML/OrdinaryDiffEq.jl/pull/1831) and PR [OrdinaryDiffEq.jl#1832](https://github.com/SciML/OrdinaryDiffEq.jl/pull/1832), new Runge-Kutta-NystrÃ¶m methods DPRKN5 and ERKN7 are added.

This PR adds the corresponding docs.",True,638,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/638,https://github.com/SciML/DiffEqDocs.jl/pull/638,closed,4,0,1,1,0,0,0,0,[],2023-01-10 07:46:49+00:00,2023-01-10 08:04:49+00:00,1080.0,0:18:00,[],"[{'commit_sha': '19511c9c06cab10bd624544a5543baa5df96a83e', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1212585332,Add docs for DPRKN4 and DPRKN6FM,,True,643,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/643,https://github.com/SciML/DiffEqDocs.jl/pull/643,closed,2,0,1,1,0,0,0,0,[],2023-01-22 12:31:57+00:00,2023-01-22 15:43:43+00:00,11506.0,3:11:46,[],"[{'commit_sha': 'e8d9c2702879ab962d58bec7532cee6e81f5ba4e', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1229522461,"Add docs for MSRK 5, 6 and Stepanov5 methods",,True,646,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/646,https://github.com/SciML/DiffEqDocs.jl/pull/646,closed,3,0,1,1,0,0,0,0,[],2023-02-05 16:56:48+00:00,2023-02-05 18:36:58+00:00,6010.0,1:40:10,[],"[{'commit_sha': '3dbb59dd7836a2eb616c6bc57a137dbc79032e9c', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1229522461,"Add docs for MSRK 5, 6 and Stepanov5 methods",,True,646,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/646,https://github.com/SciML/DiffEqDocs.jl/pull/646,closed,3,0,1,1,0,0,0,0,[],2023-02-05 16:56:48+00:00,2023-02-05 18:36:58+00:00,6010.0,1:40:10,[],"[{'commit_sha': '3dbb59dd7836a2eb616c6bc57a137dbc79032e9c', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1258429276,Add docs for new ESDIRK methods,,True,654,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/654,https://github.com/SciML/DiffEqDocs.jl/pull/654,closed,4,0,1,1,0,0,0,0,[],2023-03-01 08:47:29+00:00,2023-03-01 09:05:35+00:00,1086.0,0:18:06,[],"[{'commit_sha': '757cedc3e70a56574caeb21861cbe2e97c9a469b', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1303449389,"Add docs for SIR54, CG4a and Alshina methods","Track https://github.com/SciML/OrdinaryDiffEq.jl/pull/1888, https://github.com/SciML/OrdinaryDiffEq.jl/pull/1921 and https://github.com/SciML/OrdinaryDiffEq.jl/pull/1898",True,668,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/668,https://github.com/SciML/DiffEqDocs.jl/pull/668,closed,14,8,5,1,0,0,0,0,[],2023-04-05 16:01:49+00:00,2023-04-05 17:14:32+00:00,4363.0,1:12:43,[],"[{'commit_sha': '705aae243967b1f53218b06e5ac6258412e7ead1', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1340569041,Update BVP tutorial,,True,673,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/673,https://github.com/SciML/DiffEqDocs.jl/pull/673,closed,9,3,2,1,0,0,0,0,[],2023-05-06 02:38:40+00:00,2023-06-21 15:41:24+00:00,4021364.0,"46 days, 13:02:44",[],"[{'commit_sha': 'b618d6ebfdeb735da2b537deaf9bd8ac68298a39', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1417220283,Add BVP test problems docs,This PR add the BVP test problems docstrings to docs.,True,677,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/677,https://github.com/SciML/DiffEqDocs.jl/pull/677,closed,299,228,25,1,1,0,0,0,[],2023-07-03 02:43:47+00:00,2023-07-22 12:09:41+00:00,1675554.0,"19 days, 9:25:54",[],"[{'commit_sha': '86e48f67e65d60b6829eea7b980cc13940388cb0', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1459408155,Fix BVProblemLibrary docs,This PR fixes the BVP test problems docstrings,True,679,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/679,https://github.com/SciML/DiffEqDocs.jl/pull/679,closed,4,2,2,1,0,0,0,0,[],2023-08-02 09:04:05+00:00,2023-08-02 12:25:49+00:00,12104.0,3:21:44,[],"[{'commit_sha': '224404605f09e3fe56c700b367dcc0fead9dc3ad', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1474616291,Update BVP docs,Update some recent BVP developments,True,680,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/680,https://github.com/SciML/DiffEqDocs.jl/pull/680,closed,21,23,2,3,0,0,0,0,[],2023-08-14 15:16:17+00:00,2023-08-19 16:20:01+00:00,435824.0,"5 days, 1:03:44",[],"[{'commit_sha': '5f305075a644ff35f032665c457610941ba05de8', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '511009835ae591fdb7a3e4a22a16e84c0527f933', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39ad55e3c8fc36e6e13a0a77260babb7cd0ecb26', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1406694155,Add BVProblemLibrary,"Part of #16 

Add BVProblemLibrary, only done with the linear BVP part, after this PR is merged, I will add the rest problems.

Reference: https://archimede.uniba.it/~bvpsolvers/testsetbvpsolvers/?page_id=29",True,108,https://api.github.com/repos/SciML/DiffEqProblemLibrary.jl/pulls/108,https://github.com/SciML/DiffEqProblemLibrary.jl/pull/108,closed,1105,0,7,3,1,1,0,0,[],2023-06-25 14:13:20+00:00,2023-06-26 14:01:37+00:00,85697.0,23:48:17,"[{'comment_id': 1241445029, 'comment_body': '```suggestion\r\n\r\n```', 'comment_created': datetime.datetime(2023, 6, 26, 2, 32, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': '5b543987d399f5e60f57d35e6e8f869065c24e30', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe2d5122a5576da094315d318f8b0a408b0b2c8a', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6436f1655234a9019958ccc1ea28c1a1e12bec6b', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1413577915,Add nonlinear BVP test problems,Implement nonlinear test problems in https://archimede.uniba.it/~bvpsolvers/testsetbvpsolvers/?page_id=29,True,109,https://api.github.com/repos/SciML/DiffEqProblemLibrary.jl/pulls/109,https://github.com/SciML/DiffEqProblemLibrary.jl/pull/109,closed,1966,1049,3,2,0,0,0,0,[],2023-06-29 15:38:35+00:00,2023-06-30 13:53:57+00:00,80122.0,22:15:22,[],"[{'commit_sha': 'fc2cfd3e058cfbbc31bad030edf157e1e6538360', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7d6a56e8259bdfea92cb494e97e8edd3ad8cc07', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1416744061,Add the rest BVP test prblems,"Fix #16 

Reference: https://archimede.uniba.it/~bvpsolvers/testsetbvpsolvers/?page_id=29",True,110,https://api.github.com/repos/SciML/DiffEqProblemLibrary.jl/pulls/110,https://github.com/SciML/DiffEqProblemLibrary.jl/pull/110,closed,692,317,15,1,2,0,0,0,[],2023-07-02 13:40:39+00:00,2023-07-02 16:39:36+00:00,10737.0,2:58:57,[],"[{'commit_sha': 'e4167f2c31ab21467f617ec99bcf6338a944425a', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1224645515,Add DiscreteFunction,Part of #993 ,True,2058,https://api.github.com/repos/SciML/ModelingToolkit.jl/pulls/2058,https://github.com/SciML/ModelingToolkit.jl/pull/2058,closed,80,1,3,7,5,2,0,0,[],2023-02-01 10:26:38+00:00,2023-02-05 03:10:04+00:00,319406.0,"3 days, 16:43:26","[{'comment_id': 1095736513, 'comment_body': '```suggestion\r\ndf = DiscreteFunction(sys)\r\n```', 'comment_created': datetime.datetime(2023, 2, 3, 12, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': 'eba6937a902f2e53ce7e386516ac34cf370fa063', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd90e5743cf46356e797d9f3268ca0e08a90c414d', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d8928b0195af35dc9743d467c771a824a47aa0d', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dacf9ce024943716fc5e919d5b9039ab9850ac33', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72cfbd6e071959f585c5722d4b2ca0a836f9b6c5', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '150b2f090c5536884bdeb55f359a149c3d8f6e59', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7842edba047a93144a2e1a4b003e1d15d7d69530', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1198104050,Add transistor amplifier DAE problem,"This PR adds the DAE test problem in https://archimede.uniba.it/~testset/testsetivpsolvers/?page_id=26, part of the issue of #17 

```julia
prob = DAEProblem(transamp, du0, u0, tspan)
sol = solve(prob, DFBDF())
```

![transamp](https://user-images.githubusercontent.com/52615090/212554621-c7064870-1ea1-4bf2-936f-c83f2a9de7ca.png)
",True,100,https://api.github.com/repos/SciML/DiffEqProblemLibrary.jl/pulls/100,https://github.com/SciML/DiffEqProblemLibrary.jl/pull/100,closed,58,1,1,1,0,0,0,0,[],2023-01-15 16:55:13+00:00,2023-01-15 17:41:43+00:00,2790.0,0:46:30,[],"[{'commit_sha': 'a9ef68900f4330afbea01e78f5d4ae26e32c5532', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1454781088,Revive docs,"I think this PR could revive the documentation

JuliaCon hackathon yeah!!ðŸ¥³

Fixes https://github.com/SciML/DiffEqFlux.jl/issues/846",True,848,https://api.github.com/repos/SciML/DiffEqFlux.jl/pulls/848,https://github.com/SciML/DiffEqFlux.jl/pull/848,closed,6,3,4,7,4,3,0,0,[],2023-07-29 14:33:09+00:00,2023-07-31 00:55:16+00:00,123727.0,"1 day, 10:22:07","[{'comment_id': 1278478623, 'comment_body': '```suggestion\r\nusing Flux, DiffEqFlux, DifferentialEquations, Statistics, Plots, ReverseDiff, Random, IterTools, Lux\r\n```', 'comment_created': datetime.datetime(2023, 7, 30, 1, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 1278482762, 'comment_body': '```suggestion\r\nusing Flux, DiffEqFlux, DifferentialEquations, Statistics, Plots, ReverseDiff, Random, IterTools, Lux, ComponentArrays\r\n```', 'comment_created': datetime.datetime(2023, 7, 30, 3, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}, {'comment_id': 1278512010, 'comment_body': '```suggestion\r\nusing Flux, DiffEqFlux, DifferentialEquations, Statistics, Plots, ReverseDiff, Random, IterTools, Lux, ComponentArrays, Optimization\r\n```', 'comment_created': datetime.datetime(2023, 7, 30, 5, 44, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ErikQQY', 'type': 'User'}]","[{'commit_sha': '70546f24385bcbefcdef738bb5a6a8fc2cbee315', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '345d7ac96314ada2cb0cf3086d198e3ceeee30e8', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a27dd170975c104f9945063c332aad2ec8109dc0', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cafd12d1b04b0675837d279e412a46dc7cc70da5', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f52431276640c0db4a6a81bb0689e5696bb9ff5', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1502ed7e91f780f2ac7933a35aed987d8635e0e', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7054a973dc139a89b68516d0381f142c2388c1f', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1450298669,Replace ADAM with Adam etc,"See https://github.com/FluxML/Optimisers.jl/pull/78, ```ADAM``` has changed to ```Adam```, so I think a unified name would be great.
Fix #846",True,847,https://api.github.com/repos/SciML/DiffEqFlux.jl/pulls/847,https://github.com/SciML/DiffEqFlux.jl/pull/847,closed,73,73,20,3,0,0,0,0,[],2023-07-26 13:41:38+00:00,2023-07-31 06:13:14+00:00,405096.0,"4 days, 16:31:36",[],"[{'commit_sha': '51ad636a0aa1d6263268953b98bf848dc55d6f10', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '948081eb39a097a2352e2c8847d94607e81026ef', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ec24fdd6ac8cab092b3992886dd6b4b896f6cd1', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70
1407545511,Fix TrustRegion docstring,"![image](https://github.com/SciML/NonlinearSolve.jl/assets/52615090/03f704be-dce7-4b82-a2e4-216ea40eafa6)
",True,193,https://api.github.com/repos/SciML/NonlinearSolve.jl/pulls/193,https://github.com/SciML/NonlinearSolve.jl/pull/193,closed,17,14,3,2,2,1,0,0,[],2023-06-26 09:22:44+00:00,2023-06-26 12:43:41+00:00,12057.0,3:20:57,"[{'comment_id': 1242082087, 'comment_body': 'This looks like the old formatter rule.', 'comment_created': datetime.datetime(2023, 6, 26, 11, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': 'c5c6d4bffb45edf0e7b6d8f056f387d4bec689e1', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f43450f92fdeb9030219a7e7bb59d7c788ec05d', 'committer_username': 'ErikQQY', 'committer_name': 'Qingyu Qu', 'committer_email': None, 'commit_date': datetime.datetime(2019, 7, 7, 2, 16, 27, tzinfo=datetime.timezone.utc)}]",Qingyu Qu,52615090,,User,,172,,200,70

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
86002678,BoundaryValueDiffEq.jl,SciML/BoundaryValueDiffEq.jl,Julia,32,42,11,25,711,24,5,4,"[{'id': 2025193072, 'number': 208, 'closed': None, 'created': datetime.datetime(2024, 8, 19, 9, 29, 6, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 88, 'deletions': 75, 'state': 'open'}, {'id': 2019771109, 'number': 206, 'closed': datetime.datetime(2024, 8, 16, 10, 30, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 14, 17, 17, 4, tzinfo=datetime.timezone.utc), 'time_taken': 148391.0, 'time_delta': '1 day, 17:13:11', 'additions': 87, 'deletions': 75, 'state': 'closed'}, {'id': 2006241290, 'number': 205, 'closed': datetime.datetime(2024, 8, 8, 11, 42, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 6, 14, 39, 1, tzinfo=datetime.timezone.utc), 'time_taken': 162193.0, 'time_delta': '1 day, 21:03:13', 'additions': 49, 'deletions': 43, 'state': 'closed'}, {'id': 1995616301, 'number': 203, 'closed': datetime.datetime(2024, 7, 31, 9, 10, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 31, 5, 40, 44, tzinfo=datetime.timezone.utc), 'time_taken': 12600.0, 'time_delta': '3:30:00', 'additions': 44, 'deletions': 7, 'state': 'closed'}, {'id': 1990389942, 'number': 202, 'closed': datetime.datetime(2024, 8, 17, 11, 4, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 27, 6, 6, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1832282.0, 'time_delta': '21 days, 4:58:02', 'additions': 42, 'deletions': 19, 'state': 'closed'}, {'id': 1990374375, 'number': 201, 'closed': datetime.datetime(2024, 7, 27, 13, 10, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 27, 5, 36, 53, tzinfo=datetime.timezone.utc), 'time_taken': 27237.0, 'time_delta': '7:33:57', 'additions': 27, 'deletions': 1, 'state': 'closed'}, {'id': 1989355787, 'number': 200, 'closed': datetime.datetime(2024, 7, 26, 14, 24, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 26, 12, 22, 37, tzinfo=datetime.timezone.utc), 'time_taken': 7312.0, 'time_delta': '2:01:52', 'additions': 12, 'deletions': 5, 'state': 'closed'}, {'id': 1980646654, 'number': 198, 'closed': datetime.datetime(2024, 7, 23, 12, 0, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 22, 7, 59, 7, tzinfo=datetime.timezone.utc), 'time_taken': 100865.0, 'time_delta': '1 day, 4:01:05', 'additions': 15, 'deletions': 10, 'state': 'closed'}, {'id': 1976528194, 'number': 196, 'closed': datetime.datetime(2024, 7, 19, 10, 48, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 18, 17, 38, 28, tzinfo=datetime.timezone.utc), 'time_taken': 61819.0, 'time_delta': '17:10:19', 'additions': 121, 'deletions': 45, 'state': 'closed'}, {'id': 1967740107, 'number': 195, 'closed': datetime.datetime(2024, 7, 18, 16, 49, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 13, 8, 47, 59, tzinfo=datetime.timezone.utc), 'time_taken': 460886.0, 'time_delta': '5 days, 8:01:26', 'additions': 83, 'deletions': 81, 'state': 'closed'}, {'id': 1952893728, 'number': 194, 'closed': None, 'created': datetime.datetime(2024, 7, 4, 6, 6, 10, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 757, 'deletions': 18, 'state': 'open'}, {'id': 1908524665, 'number': 189, 'closed': datetime.datetime(2024, 7, 18, 17, 38, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 7, 6, 23, 4, tzinfo=datetime.timezone.utc), 'time_taken': 3582918.0, 'time_delta': '41 days, 11:15:18', 'additions': 143, 'deletions': 93, 'state': 'closed'}, {'id': 1790942048, 'number': 177, 'closed': datetime.datetime(2024, 3, 26, 16, 50, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 26, 7, 29, 8, tzinfo=datetime.timezone.utc), 'time_taken': 33681.0, 'time_delta': '9:21:21', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 1742041885, 'number': 169, 'closed': datetime.datetime(2024, 2, 25, 21, 15, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 25, 5, 23, 53, tzinfo=datetime.timezone.utc), 'time_taken': 57073.0, 'time_delta': '15:51:13', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1672332376, 'number': 159, 'closed': datetime.datetime(2024, 1, 10, 20, 28, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 10, 12, 22, 17, tzinfo=datetime.timezone.utc), 'time_taken': 29144.0, 'time_delta': '8:05:44', 'additions': 211, 'deletions': 22, 'state': 'closed'}, {'id': 1657229585, 'number': 156, 'closed': datetime.datetime(2023, 12, 26, 13, 36, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 26, 13, 1, 25, tzinfo=datetime.timezone.utc), 'time_taken': 2107.0, 'time_delta': '0:35:07', 'additions': 14, 'deletions': 1, 'state': 'closed'}, {'id': 1590172324, 'number': 140, 'closed': datetime.datetime(2023, 11, 7, 12, 31, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 7, 9, 16, 47, tzinfo=datetime.timezone.utc), 'time_taken': 11687.0, 'time_delta': '3:14:47', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1553442982, 'number': 119, 'closed': datetime.datetime(2023, 10, 12, 6, 44, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 12, 5, 36, 7, tzinfo=datetime.timezone.utc), 'time_taken': 4087.0, 'time_delta': '1:08:07', 'additions': 60, 'deletions': 48, 'state': 'closed'}, {'id': 1521583916, 'number': 112, 'closed': datetime.datetime(2023, 9, 23, 14, 0, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 19, 15, 45, 23, tzinfo=datetime.timezone.utc), 'time_taken': 339322.0, 'time_delta': '3 days, 22:15:22', 'additions': 124, 'deletions': 15, 'state': 'closed'}, {'id': 1495702657, 'number': 105, 'closed': datetime.datetime(2023, 8, 30, 15, 29, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 30, 15, 5, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1428.0, 'time_delta': '0:23:48', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1494789437, 'number': 103, 'closed': datetime.datetime(2023, 8, 30, 10, 56, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 30, 4, 5, 26, tzinfo=datetime.timezone.utc), 'time_taken': 24681.0, 'time_delta': '6:51:21', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1481422755, 'number': 102, 'closed': datetime.datetime(2023, 8, 23, 9, 29, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 19, 10, 55, 22, tzinfo=datetime.timezone.utc), 'time_taken': 340423.0, 'time_delta': '3 days, 22:33:43', 'additions': 39, 'deletions': 26, 'state': 'closed'}, {'id': 1477759176, 'number': 101, 'closed': datetime.datetime(2023, 8, 16, 17, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 16, 17, 17, tzinfo=datetime.timezone.utc), 'time_taken': 4303.0, 'time_delta': '1:11:43', 'additions': 56, 'deletions': 7, 'state': 'closed'}, {'id': 1475990413, 'number': 100, 'closed': datetime.datetime(2023, 8, 15, 15, 43, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 15, 14, 36, 52, tzinfo=datetime.timezone.utc), 'time_taken': 4018.0, 'time_delta': '1:06:58', 'additions': 29, 'deletions': 0, 'state': 'closed'}, {'id': 1474533417, 'number': 99, 'closed': datetime.datetime(2023, 8, 14, 14, 45, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 14, 14, 27, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1084.0, 'time_delta': '0:18:04', 'additions': 29, 'deletions': 4, 'state': 'closed'}, {'id': 1459990521, 'number': 95, 'closed': datetime.datetime(2023, 8, 6, 7, 26, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 2, 15, 28, 51, tzinfo=datetime.timezone.utc), 'time_taken': 316648.0, 'time_delta': '3 days, 15:57:28', 'additions': 108, 'deletions': 6, 'state': 'closed'}, {'id': 1447983466, 'number': 94, 'closed': datetime.datetime(2023, 7, 30, 19, 11, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 8, 38, 36, tzinfo=datetime.timezone.utc), 'time_taken': 469948.0, 'time_delta': '5 days, 10:32:28', 'additions': 138, 'deletions': 91, 'state': 'closed'}, {'id': 1435779645, 'number': 92, 'closed': datetime.datetime(2023, 7, 22, 21, 16, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 15, 9, 23, 30, tzinfo=datetime.timezone.utc), 'time_taken': 647560.0, 'time_delta': '7 days, 11:52:40', 'additions': 145, 'deletions': 44, 'state': 'closed'}, {'id': 1405253605, 'number': 91, 'closed': datetime.datetime(2023, 6, 24, 16, 15, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 23, 15, 41, 59, tzinfo=datetime.timezone.utc), 'time_taken': 88385.0, 'time_delta': '1 day, 0:33:05', 'additions': 68, 'deletions': 65, 'state': 'closed'}, {'id': 1369107836, 'number': 89, 'closed': datetime.datetime(2023, 7, 24, 15, 36, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 29, 13, 4, 4, tzinfo=datetime.timezone.utc), 'time_taken': 4847541.0, 'time_delta': '56 days, 2:32:21', 'additions': 600, 'deletions': 177, 'state': 'closed'}, {'id': 1251258144, 'number': 84, 'closed': datetime.datetime(2023, 2, 23, 13, 18, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 23, 7, 44, 37, tzinfo=datetime.timezone.utc), 'time_taken': 20036.0, 'time_delta': '5:33:56', 'additions': 120, 'deletions': 8, 'state': 'closed'}]"
71651195,OrdinaryDiffEq.jl,SciML/OrdinaryDiffEq.jl,Julia,199,527,19,142,8855,334,54,36,"[{'id': 1477759098, 'number': 2018, 'closed': datetime.datetime(2023, 8, 23, 6, 5, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 16, 17, 14, tzinfo=datetime.timezone.utc), 'time_taken': 568112.0, 'time_delta': '6 days, 13:48:32', 'additions': 179, 'deletions': 97, 'state': 'closed'}, {'id': 1461387481, 'number': 2008, 'closed': datetime.datetime(2023, 8, 12, 22, 40, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 3, 12, 31, 19, tzinfo=datetime.timezone.utc), 'time_taken': 814136.0, 'time_delta': '9 days, 10:08:56', 'additions': 318, 'deletions': 39, 'state': 'closed'}, {'id': 1457282073, 'number': 2006, 'closed': datetime.datetime(2023, 8, 1, 2, 42, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 2, 16, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1519.0, 'time_delta': '0:25:19', 'additions': 22, 'deletions': 5, 'state': 'closed'}, {'id': 1295849805, 'number': 1921, 'closed': datetime.datetime(2023, 3, 31, 14, 19, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 30, 8, 46, 51, tzinfo=datetime.timezone.utc), 'time_taken': 106359.0, 'time_delta': '1 day, 5:32:39', 'additions': 82, 'deletions': 4, 'state': 'closed'}, {'id': 1259021832, 'number': 1888, 'closed': datetime.datetime(2023, 3, 1, 16, 23, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 1, 15, 31, 55, tzinfo=datetime.timezone.utc), 'time_taken': 3104.0, 'time_delta': '0:51:44', 'additions': 468, 'deletions': 25, 'state': 'closed'}, {'id': 1246888754, 'number': 1880, 'closed': datetime.datetime(2023, 2, 20, 13, 28, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 20, 8, 28, 33, tzinfo=datetime.timezone.utc), 'time_taken': 18000.0, 'time_delta': '5:00:00', 'additions': 378, 'deletions': 2, 'state': 'closed'}, {'id': 1246029654, 'number': 1877, 'closed': datetime.datetime(2023, 2, 19, 17, 11, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 18, 12, 56, 18, tzinfo=datetime.timezone.utc), 'time_taken': 101717.0, 'time_delta': '1 day, 4:15:17', 'additions': 386, 'deletions': 11, 'state': 'closed'}, {'id': 1243045167, 'number': 1874, 'closed': datetime.datetime(2023, 2, 16, 11, 53, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 16, 3, 26, 26, tzinfo=datetime.timezone.utc), 'time_taken': 30400.0, 'time_delta': '8:26:40', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 1243032205, 'number': 1873, 'closed': datetime.datetime(2023, 2, 18, 11, 53, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 16, 3, 7, 18, tzinfo=datetime.timezone.utc), 'time_taken': 204374.0, 'time_delta': '2 days, 8:46:14', 'additions': 345, 'deletions': 4, 'state': 'closed'}, {'id': 1224389687, 'number': 1859, 'closed': datetime.datetime(2023, 2, 2, 16, 4, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 1, 7, 7, 37, tzinfo=datetime.timezone.utc), 'time_taken': 118603.0, 'time_delta': '1 day, 8:56:43', 'additions': 266, 'deletions': 1, 'state': 'closed'}, {'id': 1220565489, 'number': 1854, 'closed': datetime.datetime(2023, 1, 29, 12, 11, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 29, 9, 51, 30, tzinfo=datetime.timezone.utc), 'time_taken': 8394.0, 'time_delta': '2:19:54', 'additions': 277, 'deletions': 1, 'state': 'closed'}, {'id': 1213495391, 'number': 1843, 'closed': datetime.datetime(2023, 1, 25, 15, 4, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 23, 14, 1, 15, tzinfo=datetime.timezone.utc), 'time_taken': 176572.0, 'time_delta': '2 days, 1:02:52', 'additions': 43, 'deletions': 31, 'state': 'closed'}, {'id': 1212319035, 'number': 1841, 'closed': datetime.datetime(2023, 1, 21, 16, 13, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 21, 9, 38, 55, tzinfo=datetime.timezone.utc), 'time_taken': 23685.0, 'time_delta': '6:34:45', 'additions': 324, 'deletions': 7, 'state': 'closed'}, {'id': 1211433863, 'number': 1840, 'closed': datetime.datetime(2023, 1, 20, 18, 5, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 20, 11, 51, 47, tzinfo=datetime.timezone.utc), 'time_taken': 22449.0, 'time_delta': '6:14:09', 'additions': 246, 'deletions': 7, 'state': 'closed'}, {'id': 1209888663, 'number': 1837, 'closed': datetime.datetime(2023, 1, 19, 12, 41, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 19, 11, 30, 7, tzinfo=datetime.timezone.utc), 'time_taken': 4299.0, 'time_delta': '1:11:39', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 1200272026, 'number': 1835, 'closed': datetime.datetime(2023, 1, 17, 15, 5, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 17, 13, 23, 13, tzinfo=datetime.timezone.utc), 'time_taken': 6143.0, 'time_delta': '1:42:23', 'additions': 0, 'deletions': 474, 'state': 'closed'}, {'id': 1193258441, 'number': 1833, 'closed': datetime.datetime(2023, 1, 11, 17, 40, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 11, 4, 19, 19, tzinfo=datetime.timezone.utc), 'time_taken': 48090.0, 'time_delta': '13:21:30', 'additions': 2898, 'deletions': 757, 'state': 'closed'}, {'id': 1190258005, 'number': 1832, 'closed': datetime.datetime(2023, 1, 9, 16, 5, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 6, 16, 42, tzinfo=datetime.timezone.utc), 'time_taken': 35317.0, 'time_delta': '9:48:37', 'additions': 335, 'deletions': 3, 'state': 'closed'}, {'id': 1188987723, 'number': 1831, 'closed': datetime.datetime(2023, 1, 10, 7, 6, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 7, 6, 36, 45, tzinfo=datetime.timezone.utc), 'time_taken': 261008.0, 'time_delta': '3 days, 0:30:08', 'additions': 325, 'deletions': 8, 'state': 'closed'}, {'id': 603951093, 'number': 1367, 'closed': datetime.datetime(2024, 8, 11, 10, 17, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 30, 15, 27, 55, tzinfo=datetime.timezone.utc), 'time_taken': 106253374.0, 'time_delta': '1229 days, 18:49:34', 'additions': 180, 'deletions': 1, 'state': 'closed'}, {'id': 600618833, 'number': 1366, 'closed': datetime.datetime(2021, 3, 30, 15, 28, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 25, 10, 29, 32, tzinfo=datetime.timezone.utc), 'time_taken': 449918.0, 'time_delta': '5 days, 4:58:38', 'additions': 142, 'deletions': 1, 'state': 'closed'}]"
332960334,SciMLBase.jl,SciML/SciMLBase.jl,Julia,93,128,12,81,2335,82,10,21,"[{'id': 1945542939, 'number': 728, 'closed': datetime.datetime(2024, 6, 29, 22, 57, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 29, 14, 20, 51, tzinfo=datetime.timezone.utc), 'time_taken': 30972.0, 'time_delta': '8:36:12', 'additions': 13, 'deletions': 4, 'state': 'closed'}, {'id': 1832820127, 'number': 676, 'closed': datetime.datetime(2024, 4, 20, 11, 28, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 20, 9, 14, 11, tzinfo=datetime.timezone.utc), 'time_taken': 8049.0, 'time_delta': '2:14:09', 'additions': 84, 'deletions': 3, 'state': 'closed'}, {'id': 1821923346, 'number': 666, 'closed': datetime.datetime(2024, 4, 15, 11, 18, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 14, 12, 18, 51, tzinfo=datetime.timezone.utc), 'time_taken': 82781.0, 'time_delta': '22:59:41', 'additions': 547, 'deletions': 4, 'state': 'closed'}, {'id': 1638805589, 'number': 554, 'closed': datetime.datetime(2023, 12, 13, 1, 46, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 11, 13, 7, 22, tzinfo=datetime.timezone.utc), 'time_taken': 131957.0, 'time_delta': '1 day, 12:39:17', 'additions': 0, 'deletions': 37, 'state': 'closed'}, {'id': 1546635546, 'number': 522, 'closed': datetime.datetime(2023, 10, 8, 7, 58, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 8, 7, 2, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3359.0, 'time_delta': '0:55:59', 'additions': 10, 'deletions': 2, 'state': 'closed'}, {'id': 1537098642, 'number': 517, 'closed': datetime.datetime(2023, 10, 7, 10, 44, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 1, 16, 45, 4, tzinfo=datetime.timezone.utc), 'time_taken': 496768.0, 'time_delta': '5 days, 17:59:28', 'additions': 30, 'deletions': 10, 'state': 'closed'}, {'id': 1535413051, 'number': 513, 'closed': datetime.datetime(2023, 9, 29, 9, 19, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 29, 9, 14, 42, tzinfo=datetime.timezone.utc), 'time_taken': 312.0, 'time_delta': '0:05:12', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 1534014413, 'number': 510, 'closed': datetime.datetime(2023, 9, 29, 7, 55, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 28, 11, 45, 58, tzinfo=datetime.timezone.utc), 'time_taken': 72558.0, 'time_delta': '20:09:18', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1532562065, 'number': 509, 'closed': datetime.datetime(2023, 9, 28, 8, 40, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 27, 14, 25, 15, tzinfo=datetime.timezone.utc), 'time_taken': 65719.0, 'time_delta': '18:15:19', 'additions': 63, 'deletions': 1, 'state': 'closed'}, {'id': 1531832778, 'number': 508, 'closed': datetime.datetime(2023, 9, 27, 10, 2, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 27, 7, 30, 55, tzinfo=datetime.timezone.utc), 'time_taken': 9099.0, 'time_delta': '2:31:39', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 1530436619, 'number': 507, 'closed': datetime.datetime(2023, 9, 26, 13, 33, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 26, 11, 39, 37, tzinfo=datetime.timezone.utc), 'time_taken': 6860.0, 'time_delta': '1:54:20', 'additions': 3, 'deletions': 13, 'state': 'closed'}, {'id': 1506302273, 'number': 489, 'closed': datetime.datetime(2023, 9, 22, 13, 23, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 7, 13, 24, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1295967.0, 'time_delta': '14 days, 23:59:27', 'additions': 16, 'deletions': 19, 'state': 'closed'}, {'id': 1504115657, 'number': 487, 'closed': datetime.datetime(2023, 9, 6, 12, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 6, 7, 38, 3, tzinfo=datetime.timezone.utc), 'time_taken': 18297.0, 'time_delta': '5:04:57', 'additions': 11, 'deletions': 21, 'state': 'closed'}, {'id': 1502148560, 'number': 486, 'closed': datetime.datetime(2023, 9, 5, 20, 35, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 5, 5, 38, 56, tzinfo=datetime.timezone.utc), 'time_taken': 53782.0, 'time_delta': '14:56:22', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 1453486906, 'number': 474, 'closed': datetime.datetime(2023, 7, 30, 20, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 9, 14, 40, tzinfo=datetime.timezone.utc), 'time_taken': 212780.0, 'time_delta': '2 days, 11:06:20', 'additions': 26, 'deletions': 10, 'state': 'closed'}, {'id': 1423995092, 'number': 462, 'closed': datetime.datetime(2023, 7, 30, 15, 0, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 7, 5, 0, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2023198.0, 'time_delta': '23 days, 9:59:58', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 1409154470, 'number': 459, 'closed': datetime.datetime(2023, 7, 30, 20, 21, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 27, 5, 54, 58, tzinfo=datetime.timezone.utc), 'time_taken': 2903190.0, 'time_delta': '33 days, 14:26:30', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1212635281, 'number': 373, 'closed': datetime.datetime(2023, 1, 23, 10, 12, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 22, 15, 33, 59, tzinfo=datetime.timezone.utc), 'time_taken': 67113.0, 'time_delta': '18:38:33', 'additions': 103, 'deletions': 0, 'state': 'closed'}, {'id': 1209882759, 'number': 370, 'closed': datetime.datetime(2023, 9, 4, 22, 45, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 19, 11, 24, 52, tzinfo=datetime.timezone.utc), 'time_taken': 19740059.0, 'time_delta': '228 days, 11:20:59', 'additions': 479, 'deletions': 54, 'state': 'closed'}]"
72511713,DiffEqDocs.jl,SciML/DiffEqDocs.jl,Julia,239,270,15,196,2367,28,8,6,"[{'id': 1576148606, 'number': 703, 'closed': datetime.datetime(2023, 10, 27, 9, 50, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 27, 8, 19, 56, tzinfo=datetime.timezone.utc), 'time_taken': 5431.0, 'time_delta': '1:30:31', 'additions': 11, 'deletions': 16, 'state': 'closed'}, {'id': 1535777950, 'number': 696, 'closed': datetime.datetime(2023, 9, 29, 13, 50, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 29, 13, 48, 59, tzinfo=datetime.timezone.utc), 'time_taken': 81.0, 'time_delta': '0:01:21', 'additions': 27, 'deletions': 27, 'state': 'closed'}, {'id': 1490565798, 'number': 683, 'closed': datetime.datetime(2023, 9, 14, 12, 45, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 26, 8, 56, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1655347.0, 'time_delta': '19 days, 3:49:07', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1474616291, 'number': 680, 'closed': datetime.datetime(2023, 8, 19, 16, 20, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 14, 15, 16, 17, tzinfo=datetime.timezone.utc), 'time_taken': 435824.0, 'time_delta': '5 days, 1:03:44', 'additions': 21, 'deletions': 23, 'state': 'closed'}, {'id': 1459408155, 'number': 679, 'closed': datetime.datetime(2023, 8, 2, 12, 25, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 2, 9, 4, 5, tzinfo=datetime.timezone.utc), 'time_taken': 12104.0, 'time_delta': '3:21:44', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1417220283, 'number': 677, 'closed': datetime.datetime(2023, 7, 22, 12, 9, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 3, 2, 43, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1675554.0, 'time_delta': '19 days, 9:25:54', 'additions': 299, 'deletions': 228, 'state': 'closed'}, {'id': 1340569041, 'number': 673, 'closed': datetime.datetime(2023, 6, 21, 15, 41, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 6, 2, 38, 40, tzinfo=datetime.timezone.utc), 'time_taken': 4021364.0, 'time_delta': '46 days, 13:02:44', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 1303449389, 'number': 668, 'closed': datetime.datetime(2023, 4, 5, 17, 14, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 5, 16, 1, 49, tzinfo=datetime.timezone.utc), 'time_taken': 4363.0, 'time_delta': '1:12:43', 'additions': 14, 'deletions': 8, 'state': 'closed'}, {'id': 1258429276, 'number': 654, 'closed': datetime.datetime(2023, 3, 1, 9, 5, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 1, 8, 47, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1086.0, 'time_delta': '0:18:06', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1229522461, 'number': 646, 'closed': datetime.datetime(2023, 2, 5, 18, 36, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 5, 16, 56, 48, tzinfo=datetime.timezone.utc), 'time_taken': 6010.0, 'time_delta': '1:40:10', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1212585332, 'number': 643, 'closed': datetime.datetime(2023, 1, 22, 15, 43, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 22, 12, 31, 57, tzinfo=datetime.timezone.utc), 'time_taken': 11506.0, 'time_delta': '3:11:46', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1191954140, 'number': 638, 'closed': datetime.datetime(2023, 1, 10, 8, 4, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 10, 7, 46, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1080.0, 'time_delta': '0:18:00', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1190270352, 'number': 636, 'closed': datetime.datetime(2023, 1, 9, 14, 6, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 6, 30, 24, tzinfo=datetime.timezone.utc), 'time_taken': 27352.0, 'time_delta': '7:35:52', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 810938442, 'number': 518, 'closed': datetime.datetime(2021, 12, 28, 13, 1, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 28, 12, 59, 49, tzinfo=datetime.timezone.utc), 'time_taken': 73.0, 'time_delta': '0:01:13', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 803178671, 'number': 517, 'closed': datetime.datetime(2021, 12, 15, 9, 14, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 15, 8, 7, 1, tzinfo=datetime.timezone.utc), 'time_taken': 4034.0, 'time_delta': '1:07:14', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
72391585,DiffEqProblemLibrary.jl,SciML/DiffEqProblemLibrary.jl,Julia,34,54,8,30,422,8,2,2,"[{'id': 1798933650, 'number': 128, 'closed': datetime.datetime(2024, 3, 30, 14, 20, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 30, 13, 51, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1720.0, 'time_delta': '0:28:40', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1556661247, 'number': 121, 'closed': datetime.datetime(2023, 10, 14, 6, 27, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 14, 1, 46, 38, tzinfo=datetime.timezone.utc), 'time_taken': 16868.0, 'time_delta': '4:41:08', 'additions': 11, 'deletions': 9, 'state': 'closed'}, {'id': 1549770876, 'number': 120, 'closed': datetime.datetime(2023, 10, 10, 12, 29, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 10, 11, 46, 27, tzinfo=datetime.timezone.utc), 'time_taken': 2598.0, 'time_delta': '0:43:18', 'additions': 280, 'deletions': 242, 'state': 'closed'}, {'id': 1526757991, 'number': 117, 'closed': datetime.datetime(2023, 9, 22, 15, 36, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 22, 15, 19, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1043.0, 'time_delta': '0:17:23', 'additions': 11, 'deletions': 14, 'state': 'closed'}, {'id': 1416744061, 'number': 110, 'closed': datetime.datetime(2023, 7, 2, 16, 39, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 2, 13, 40, 39, tzinfo=datetime.timezone.utc), 'time_taken': 10737.0, 'time_delta': '2:58:57', 'additions': 692, 'deletions': 317, 'state': 'closed'}, {'id': 1413577915, 'number': 109, 'closed': datetime.datetime(2023, 6, 30, 13, 53, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 29, 15, 38, 35, tzinfo=datetime.timezone.utc), 'time_taken': 80122.0, 'time_delta': '22:15:22', 'additions': 1966, 'deletions': 1049, 'state': 'closed'}, {'id': 1406694155, 'number': 108, 'closed': datetime.datetime(2023, 6, 26, 14, 1, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 25, 14, 13, 20, tzinfo=datetime.timezone.utc), 'time_taken': 85697.0, 'time_delta': '23:48:17', 'additions': 1105, 'deletions': 0, 'state': 'closed'}, {'id': 1198104050, 'number': 100, 'closed': datetime.datetime(2023, 1, 15, 17, 41, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 15, 16, 55, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2790.0, 'time_delta': '0:46:30', 'additions': 58, 'deletions': 1, 'state': 'closed'}, {'id': 830041695, 'number': 81, 'closed': datetime.datetime(2022, 1, 24, 7, 55, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 24, 6, 35, 47, tzinfo=datetime.timezone.utc), 'time_taken': 4783.0, 'time_delta': '1:19:43', 'additions': 2, 'deletions': 1, 'state': 'closed'}]"
123055424,ModelingToolkit.jl,SciML/ModelingToolkit.jl,Julia,203,1405,30,127,6000,365,78,65,"[{'id': 1528613722, 'number': 2281, 'closed': datetime.datetime(2023, 9, 29, 11, 1, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 25, 11, 32, 51, tzinfo=datetime.timezone.utc), 'time_taken': 343728.0, 'time_delta': '3 days, 23:28:48', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1526821378, 'number': 2279, 'closed': datetime.datetime(2023, 9, 22, 18, 35, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 22, 16, 7, 52, tzinfo=datetime.timezone.utc), 'time_taken': 8834.0, 'time_delta': '2:27:14', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1229517156, 'number': 2067, 'closed': datetime.datetime(2023, 2, 5, 18, 50, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 5, 16, 36, 20, tzinfo=datetime.timezone.utc), 'time_taken': 8067.0, 'time_delta': '2:14:27', 'additions': 149, 'deletions': 14, 'state': 'closed'}, {'id': 1224645515, 'number': 2058, 'closed': datetime.datetime(2023, 2, 5, 3, 10, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 1, 10, 26, 38, tzinfo=datetime.timezone.utc), 'time_taken': 319406.0, 'time_delta': '3 days, 16:43:26', 'additions': 80, 'deletions': 1, 'state': 'closed'}]"
163191791,DiffEqFlux.jl,SciML/DiffEqFlux.jl,Julia,154,856,32,80,1873,41,10,3,"[{'id': 1454781088, 'number': 848, 'closed': datetime.datetime(2023, 7, 31, 0, 55, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 29, 14, 33, 9, tzinfo=datetime.timezone.utc), 'time_taken': 123727.0, 'time_delta': '1 day, 10:22:07', 'additions': 6, 'deletions': 3, 'state': 'closed'}, {'id': 1450298669, 'number': 847, 'closed': datetime.datetime(2023, 7, 31, 6, 13, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 26, 13, 41, 38, tzinfo=datetime.timezone.utc), 'time_taken': 405096.0, 'time_delta': '4 days, 16:31:36', 'additions': 73, 'deletions': 73, 'state': 'closed'}]"
291451888,NonlinearSolve.jl,SciML/NonlinearSolve.jl,Julia,40,225,13,42,1276,40,10,7,"[{'id': 2024979271, 'number': 457, 'closed': datetime.datetime(2024, 8, 19, 11, 6, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 19, 7, 29, 28, tzinfo=datetime.timezone.utc), 'time_taken': 13031.0, 'time_delta': '3:37:11', 'additions': 17, 'deletions': 25, 'state': 'closed'}, {'id': 1658716271, 'number': 344, 'closed': datetime.datetime(2023, 12, 28, 12, 6, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 28, 7, 35, 15, tzinfo=datetime.timezone.utc), 'time_taken': 16279.0, 'time_delta': '4:31:19', 'additions': 35, 'deletions': 11, 'state': 'closed'}, {'id': 1649658991, 'number': 333, 'closed': datetime.datetime(2023, 12, 24, 17, 1, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 19, 3, 36, 7, tzinfo=datetime.timezone.utc), 'time_taken': 480309.0, 'time_delta': '5 days, 13:25:09', 'additions': 351, 'deletions': 7, 'state': 'closed'}, {'id': 1638799489, 'number': 317, 'closed': datetime.datetime(2023, 12, 17, 14, 9, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 11, 13, 3, 36, tzinfo=datetime.timezone.utc), 'time_taken': 522341.0, 'time_delta': '6 days, 1:05:41', 'additions': 52, 'deletions': 23, 'state': 'closed'}, {'id': 1546736960, 'number': 231, 'closed': datetime.datetime(2023, 10, 9, 3, 59, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 8, 13, 14, 30, tzinfo=datetime.timezone.utc), 'time_taken': 53085.0, 'time_delta': '14:44:45', 'additions': 28, 'deletions': 1, 'state': 'closed'}, {'id': 1518150105, 'number': 213, 'closed': datetime.datetime(2023, 10, 6, 6, 58, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 16, 7, 54, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1724620.0, 'time_delta': '19 days, 23:03:40', 'additions': 289, 'deletions': 1, 'state': 'closed'}, {'id': 1407545511, 'number': 193, 'closed': datetime.datetime(2023, 6, 26, 12, 43, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 9, 22, 44, tzinfo=datetime.timezone.utc), 'time_taken': 12057.0, 'time_delta': '3:20:57', 'additions': 17, 'deletions': 14, 'state': 'closed'}]"
