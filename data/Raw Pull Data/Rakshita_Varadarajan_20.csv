pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
653660620,protocol support,"Issue: its failing this new test case saying RSE cannot be referenced in all possible impl values (except when it is 'rucio.rse.protocols.posix.Default')
",True,1,https://api.github.com/repos/rak108/rucio/pulls/1,https://github.com/rak108/rucio/pull/1,closed,3028,130,35,10,0,81,0,0,[],2021-05-26 11:56:10+00:00,2022-03-17 05:03:19+00:00,25463229.0,"294 days, 17:07:09","[{'comment_id': 639657943, 'comment_body': 'This line fails saying RSE cannot be referenced', 'comment_created': datetime.datetime(2021, 5, 26, 12, 0, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 639684285, 'comment_body': 'hi :) just got this via @mlassnig\r\ndo you have any stacktrace or test output?', 'comment_created': datetime.datetime(2021, 5, 26, 12, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'bziemons', 'type': 'User'}, {'comment_id': 640399810, 'comment_body': 'hello @bziemons,\r\n```\r\n[root@b2e68ef33f26 rucio]# tools/pytest.sh test_download.py\r\nRunning pytest with extra arguments: test_download.py\r\nRunning pytest with pytest-xdist: -p xdist -p ruciopytest.plugin --dist=rucio --numprocesses=auto\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.6.8, pytest-6.1.2, py-1.10.0, pluggy-0.13.1\r\nrootdir: /opt/rucio/lib/rucio/tests\r\nplugins: xdist-2.2.1\r\ngw0 [10] / gw1 [10] / gw2 [10] / gw3 [10] / gw4 [10] / gw5 [10] / gw6 [10] / gw7 [10]\r\ns..F.....\r\n==================================================================================================== FAILURES =====================================================================================================\r\n__________________________________________________________________________________________ test_download_file_with_impl ___________________________________________________________________________________________\r\n[gw5] linux -- Python 3.6.8 /usr/bin/python\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f93baeed048>, path = \'test://d68fa5b6074a46acaa5d1af49e5974a9.cern.ch/test/mock/a1/ae/file_ZHPZQYZSXE\'\r\n\r\n    def __gfal2_exist(self, path):\r\n        """"""\r\n        Uses gfal2 to check whether the file exists.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: 0 if it exists, -1 if it doesn\'t\r\n    \r\n        :raises RucioException: if the error is not source not found.\r\n        """"""\r\n        ctx = self.__ctx\r\n        try:\r\n>           if ctx.stat(str(path)):\r\nE           gfal2.GError: Protocol not supported or path/url invalid: test://d68fa5b6074a46acaa5d1af49e5974a9.cern.ch/test/mock/a1/ae/file_ZHPZQYZSXE\r\n\r\n../rse/protocols/gfal.py:494: GError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f93baeed048>, path = \'test://d68fa5b6074a46acaa5d1af49e5974a9.cern.ch/test/mock/a1/ae/file_ZHPZQYZSXE\'\r\n\r\n    def exists(self, path):\r\n        """"""\r\n        Checks if the requested file is known by the referred RSE.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: True if the file exists, False if it doesn\'t\r\n    \r\n        :raises SourceNotFound: if the source file was not found on the referred storage.\r\n        """"""\r\n        self.logger(logging.DEBUG, \'checking if file exists {}\'.format(path))\r\n    \r\n        try:\r\n>           status = self.__gfal2_exist(path)\r\n\r\n../rse/protocols/gfal.py:332: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f93baeed048>, path = \'test://d68fa5b6074a46acaa5d1af49e5974a9.cern.ch/test/mock/a1/ae/file_ZHPZQYZSXE\'\r\n\r\n    def __gfal2_exist(self, path):\r\n        """"""\r\n        Uses gfal2 to check whether the file exists.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: 0 if it exists, -1 if it doesn\'t\r\n    \r\n        :raises RucioException: if the error is not source not found.\r\n        """"""\r\n        ctx = self.__ctx\r\n        try:\r\n            if ctx.stat(str(path)):\r\n                return 0\r\n            return -1\r\n        except gfal2.GError as error:  # pylint: disable=no-member\r\n            if error.code == errno.ENOENT or \'No such file\' in str(error):  # pylint: disable=no-member\r\n                return -1\r\n>           raise exception.RucioException(error)\r\nE           rucio.common.exception.RucioException: An unknown exception occurred.\r\nE           Details: Protocol not supported or path/url invalid: test://d68fa5b6074a46acaa5d1af49e5974a9.cern.ch/test/mock/a1/ae/file_ZHPZQYZSXE\r\n\r\n../rse/protocols/gfal.py:500: RucioException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nrse_factory = <rucio.tests.temp_factories.TemporaryRSEFactory object at 0x7f93bd6a97b8>, did_factory = <rucio.tests.temp_factories.TemporaryDidFactory object at 0x7f93bd6a99e8>\r\ndownload_client = <rucio.client.downloadclient.DownloadClient object at 0x7f93bd6b5a58>\r\n\r\n    def test_download_file_with_impl(rse_factory, did_factory, download_client):\r\n        impl = \'rucio.rse.protocols.gfalv2.Default\'\r\n        scope = str(did_factory.default_scope)\r\n        rse, _ = rse_factory.make_rse_with_impl(impl)\r\n>       did = did_factory.upload_test_file(rse)\r\n\r\ntest_download.py:472: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntemp_factories.py:283: in upload_test_file\r\n    self.upload_client.upload([item])\r\n../client/uploadclient.py:237: in upload\r\n    if rsemgr.exists(rse_settings, pfn if pfn else file_did, domain=domain, auth_token=self.auth_token, logger=logger):\r\n../rse/rsemanager.py:302: in exists\r\n    exists = protocol.exists(pfn)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f93baeed048>, path = \'test://d68fa5b6074a46acaa5d1af49e5974a9.cern.ch/test/mock/a1/ae/file_ZHPZQYZSXE\'\r\n\r\n    def exists(self, path):\r\n        """"""\r\n        Checks if the requested file is known by the referred RSE.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: True if the file exists, False if it doesn\'t\r\n    \r\n        :raises SourceNotFound: if the source file was not found on the referred storage.\r\n        """"""\r\n        self.logger(logging.DEBUG, \'checking if file exists {}\'.format(path))\r\n    \r\n        try:\r\n            status = self.__gfal2_exist(path)\r\n            if status:\r\n                return False\r\n            return True\r\n        except exception.SourceNotFound:\r\n            return False\r\n        except Exception as error:\r\n>           raise exception.ServiceUnavailable(error)\r\nE           rucio.common.exception.ServiceUnavailable: The requested service is not available at the moment.\r\nE           Details: An unknown exception occurred.\r\nE           Details: Protocol not supported or path/url invalid: test://d68fa5b6074a46acaa5d1af49e5974a9.cern.ch/test/mock/a1/ae/file_ZHPZQYZSXE\r\n\r\n../rse/protocols/gfal.py:339: ServiceUnavailable\r\n------------------------------------------------------------------------------------------------ Captured log call ------------------------------------------------------------------------------------------------\r\nWARNING  root:uploadclient.py:368 Scope mock not found for the account root.\r\n---------------------------------------------------------------------------------------------- Captured log teardown ----------------------------------------------------------------------------------------------\r\nWARNING  root:request.py:727 Tried to cancel non-existant request for DID mock:file_ZHPZQYZSXE at RSE MOCK_LMYNMBUIAU\r\n================================================================================================ warnings summary =================================================================================================\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n  /opt/rucio/lib/rucio/client/baseclient.py:55: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module\'s documentation for alternative uses\r\n    import imp\r\n\r\ntest_download.py::test_download_blacklisted_replicas\r\ntest_download.py::test_download_without_base_dir\r\ntest_download.py::test_trace_copy_out_and_checksum_validation\r\ntest_download.py::test_norandom_respected\r\ntest_download.py::test_transfer_timeout\r\ntest_download.py::test_download_to_two_paths\r\ntest_download.py::test_download_multiple\r\n  /usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host \'rucio\'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    InsecureRequestWarning,\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n============================================================================================= short test summary info =============================================================================================\r\nFAILED test_download.py::test_download_file_with_impl - rucio.common.exception.ServiceUnavailable: The requested service is not available at the moment.\r\n============================================================================== 1 failed, 7 passed, 1 skipped, 15 warnings in 12.94s ===============================================================================\r\n[root@b2e68ef33f26 rucio]# \r\n\r\n```\r\n\r\nthis is the test output', 'comment_created': datetime.datetime(2021, 5, 27, 8, 26, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640405521, 'comment_body': ""> Details: Protocol not supported or path/url invalid: test://d68fa5b6074a46acaa5d1af49e5974a9.cern.ch/test/mock/a1/ae/file_ZHPZQYZSXE\r\n\r\n@rak108 that seems to be the important message. I don't see how that correlates with what you said above though:\r\n\r\n> This line fails saying RSE cannot be referenced"", 'comment_created': datetime.datetime(2021, 5, 27, 8, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'bziemons', 'type': 'User'}, {'comment_id': 640414603, 'comment_body': ""@bziemons Yes Im sorry,  I should have been more clear:\r\nSo this is the error that crops up with the gfalv2 protocol path.\r\nSo the other file that I have edited  contains functions to make RSEs with xrootd protocol, or srm \r\nSo initially after I kept getting this error of protocol path invalid,I decided to try the same thing with the 'rucio.rse.protocols.xrootd.Default', and then it kept giving RSE not referenced. The same goes for srm too\r\n\r\nThe only situation in which this line would not throw any error whatsoever was if it was run with POSIX, but that (if I'm not mistaken) defeats the purpose as we require testing the download/upload with the RSE that supports the impl protocol as well right"", 'comment_created': datetime.datetime(2021, 5, 27, 8, 45, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640443483, 'comment_body': 'ah, wait\r\n\r\n`Details: Protocol not supported or path/url invalid: test....`\r\n\r\nGFAL requires a protocol that it ""understands"", so must be one of the installed gfal plugins (srm, gsiftp, root, http, davs, ...) I think there might be a `mock://` one, but there certainly is no `test://` one', 'comment_created': datetime.datetime(2021, 5, 27, 9, 15, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 640451373, 'comment_body': '@mlassnig Oh alright, so i changed the scheme to trying with both MOCK and mock, and it gave me this error (same for both):\r\n```\r\n[root@b2e68ef33f26 rucio]# tools/pytest.sh test_download.py\r\nRunning pytest with extra arguments: test_download.py\r\nRunning pytest with pytest-xdist: -p xdist -p ruciopytest.plugin --dist=rucio --numprocesses=auto\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.6.8, pytest-6.1.2, py-1.10.0, pluggy-0.13.1\r\nrootdir: /opt/rucio/lib/rucio/tests\r\nplugins: xdist-2.2.1\r\ngw0 [10] / gw1 [10] / gw2 [10] / gw3 [10] / gw4 [10] / gw5 [10] / gw6 [10] / gw7 [10]\r\ns..F.....\r\n==================================================================================================== FAILURES =====================================================================================================\r\n__________________________________________________________________________________________ test_download_file_with_impl ___________________________________________________________________________________________\r\n[gw4] linux -- Python 3.6.8 /usr/bin/python\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f24020b9198>, path = \'mock://3b3095674f1a4366b941e49c63e48fc9.cern.ch/test/mock/1d/04/file_HAWCDMUGBY\'\r\n\r\n    def __gfal2_exist(self, path):\r\n        """"""\r\n        Uses gfal2 to check whether the file exists.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: 0 if it exists, -1 if it doesn\'t\r\n    \r\n        :raises RucioException: if the error is not source not found.\r\n        """"""\r\n        ctx = self.__ctx\r\n        try:\r\n>           if ctx.stat(str(path)):\r\nE           gfal2.GError: Protocol not supported or path/url invalid: mock://3b3095674f1a4366b941e49c63e48fc9.cern.ch/test/mock/1d/04/file_HAWCDMUGBY\r\n\r\n../rse/protocols/gfal.py:494: GError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f24020b9198>, path = \'mock://3b3095674f1a4366b941e49c63e48fc9.cern.ch/test/mock/1d/04/file_HAWCDMUGBY\'\r\n\r\n    def exists(self, path):\r\n        """"""\r\n        Checks if the requested file is known by the referred RSE.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: True if the file exists, False if it doesn\'t\r\n    \r\n        :raises SourceNotFound: if the source file was not found on the referred storage.\r\n        """"""\r\n        self.logger(logging.DEBUG, \'checking if file exists {}\'.format(path))\r\n    \r\n        try:\r\n>           status = self.__gfal2_exist(path)\r\n\r\n../rse/protocols/gfal.py:332: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f24020b9198>, path = \'mock://3b3095674f1a4366b941e49c63e48fc9.cern.ch/test/mock/1d/04/file_HAWCDMUGBY\'\r\n\r\n    def __gfal2_exist(self, path):\r\n        """"""\r\n        Uses gfal2 to check whether the file exists.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: 0 if it exists, -1 if it doesn\'t\r\n    \r\n        :raises RucioException: if the error is not source not found.\r\n        """"""\r\n        ctx = self.__ctx\r\n        try:\r\n            if ctx.stat(str(path)):\r\n                return 0\r\n            return -1\r\n        except gfal2.GError as error:  # pylint: disable=no-member\r\n            if error.code == errno.ENOENT or \'No such file\' in str(error):  # pylint: disable=no-member\r\n                return -1\r\n>           raise exception.RucioException(error)\r\nE           rucio.common.exception.RucioException: An unknown exception occurred.\r\nE           Details: Protocol not supported or path/url invalid: mock://3b3095674f1a4366b941e49c63e48fc9.cern.ch/test/mock/1d/04/file_HAWCDMUGBY\r\n\r\n../rse/protocols/gfal.py:500: RucioException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nrse_factory = <rucio.tests.temp_factories.TemporaryRSEFactory object at 0x7f24048767b8>, did_factory = <rucio.tests.temp_factories.TemporaryDidFactory object at 0x7f24048769e8>\r\ndownload_client = <rucio.client.downloadclient.DownloadClient object at 0x7f2404882a58>\r\n\r\n    def test_download_file_with_impl(rse_factory, did_factory, download_client):\r\n        impl = \'rucio.rse.protocols.gfalv2.Default\'\r\n        scope = str(did_factory.default_scope)\r\n        rse, _ = rse_factory.make_rse_with_impl(impl)\r\n>       did = did_factory.upload_test_file(rse)\r\n\r\ntest_download.py:472: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntemp_factories.py:283: in upload_test_file\r\n    self.upload_client.upload([item])\r\n../client/uploadclient.py:237: in upload\r\n    if rsemgr.exists(rse_settings, pfn if pfn else file_did, domain=domain, auth_token=self.auth_token, logger=logger):\r\n../rse/rsemanager.py:302: in exists\r\n    exists = protocol.exists(pfn)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f24020b9198>, path = \'mock://3b3095674f1a4366b941e49c63e48fc9.cern.ch/test/mock/1d/04/file_HAWCDMUGBY\'\r\n\r\n    def exists(self, path):\r\n        """"""\r\n        Checks if the requested file is known by the referred RSE.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: True if the file exists, False if it doesn\'t\r\n    \r\n        :raises SourceNotFound: if the source file was not found on the referred storage.\r\n        """"""\r\n        self.logger(logging.DEBUG, \'checking if file exists {}\'.format(path))\r\n    \r\n        try:\r\n            status = self.__gfal2_exist(path)\r\n            if status:\r\n                return False\r\n            return True\r\n        except exception.SourceNotFound:\r\n            return False\r\n        except Exception as error:\r\n>           raise exception.ServiceUnavailable(error)\r\nE           rucio.common.exception.ServiceUnavailable: The requested service is not available at the moment.\r\nE           Details: An unknown exception occurred.\r\nE           Details: Protocol not supported or path/url invalid: mock://3b3095674f1a4366b941e49c63e48fc9.cern.ch/test/mock/1d/04/file_HAWCDMUGBY\r\n\r\n../rse/protocols/gfal.py:339: ServiceUnavailable\r\n------------------------------------------------------------------------------------------------ Captured log call ------------------------------------------------------------------------------------------------\r\nWARNING  root:uploadclient.py:368 Scope mock not found for the account root.\r\n---------------------------------------------------------------------------------------------- Captured log teardown ----------------------------------------------------------------------------------------------\r\nWARNING  root:request.py:727 Tried to cancel non-existant request for DID mock:file_HAWCDMUGBY at RSE MOCK_OWQTFJEYHD\r\n================================================================================================ warnings summary =================================================================================================\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n  /opt/rucio/lib/rucio/client/baseclient.py:55: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module\'s documentation for alternative uses\r\n    import imp\r\n\r\ntest_download.py::test_download_without_base_dir\r\ntest_download.py::test_download_blacklisted_replicas\r\ntest_download.py::test_norandom_respected\r\ntest_download.py::test_trace_copy_out_and_checksum_validation\r\ntest_download.py::test_transfer_timeout\r\ntest_download.py::test_download_to_two_paths\r\ntest_download.py::test_download_multiple\r\n  /usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host \'rucio\'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    InsecureRequestWarning,\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n============================================================================================= short test summary info =============================================================================================\r\nFAILED test_download.py::test_download_file_with_impl - rucio.common.exception.ServiceUnavailable: The requested service is not available at the moment.\r\n============================================================================== 1 failed, 7 passed, 1 skipped, 15 warnings in 12.29s ===============================================================================\r\n[root@b2e68ef33f26 rucio]# \r\n```\r\n', 'comment_created': datetime.datetime(2021, 5, 27, 9, 24, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640454267, 'comment_body': 'So if instead of making the RSE like this taking in impl parameter, if Instead directly make an RSE with the xrootd or srm protocol using temp_factories make_xroot_rse or make_srm_rse, it still does not work and gives this error of RSE Access denied (here I tried with the make_xroot_rse function):\r\n```\r\n[root@b2e68ef33f26 rucio]# tools/pytest.sh test_download.py\r\nRunning pytest with extra arguments: test_download.py\r\nRunning pytest with pytest-xdist: -p xdist -p ruciopytest.plugin --dist=rucio --numprocesses=auto\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.6.8, pytest-6.1.2, py-1.10.0, pluggy-0.13.1\r\nrootdir: /opt/rucio/lib/rucio/tests\r\nplugins: xdist-2.2.1\r\ngw0 [10] / gw1 [10] / gw2 [10] / gw3 [10] / gw4 [10] / gw5 [10] / gw6 [10] / gw7 [10]\r\ns.F......\r\n==================================================================================================== FAILURES =====================================================================================================\r\n__________________________________________________________________________________________ test_download_file_with_impl ___________________________________________________________________________________________\r\n[gw6] linux -- Python 3.6.8 /usr/bin/python\r\n\r\nself = <rucio.rse.protocols.xrootd.Default object at 0x7fd395ca7a58>\r\n\r\n    def connect(self):\r\n        """""" Establishes the actual connection to the referred RSE.\r\n    \r\n            :param credentials Provides information to establish a connection\r\n                to the referred storage system. For S3 connections these are\r\n                access_key, secretkey, host_base, host_bucket, progress_meter\r\n                and skip_existing.\r\n    \r\n            :raises RSEAccessDenied\r\n        """"""\r\n        self.logger(logging.DEBUG, \'xrootd.connect: port: {}, hostname {}\'.format(self.port, self.hostname))\r\n        try:\r\n            # The query stats call is not implemented on some xroot doors.\r\n            # Workaround: fail, if server does not reply within 10 seconds for static config query\r\n            cmd = \'XrdSecPROTOCOL=gsi XRD_REQUESTTIMEOUT=10 xrdfs %s:%s query config %s:%s\' % (self.hostname, self.port, self.hostname, self.port)\r\n            self.logger(logging.INFO, \'xrootd.connect: cmd: {}\'.format(cmd))\r\n            status, out, err = execute(cmd)\r\n            if status != 0:\r\n>               raise exception.RSEAccessDenied(err)\r\nE               rucio.common.exception.RSEAccessDenied: Referenced RSE not reachable.\r\nE               Details: [FATAL] Invalid address\r\n\r\n../rse/protocols/xrootd.py:198: RSEAccessDenied\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nrse_factory = <rucio.tests.temp_factories.TemporaryRSEFactory object at 0x7fd3984a7710>, did_factory = <rucio.tests.temp_factories.TemporaryDidFactory object at 0x7fd3984a7940>\r\ndownload_client = <rucio.client.downloadclient.DownloadClient object at 0x7fd39845fb00>\r\n\r\n    def test_download_file_with_impl(rse_factory, did_factory, download_client):\r\n        impl = \'rucio.rse.protocols.xrootd.Default\'\r\n        scope = str(did_factory.default_scope)\r\n        rse, _ = rse_factory.make_rse_with_impl(impl)\r\n>       did = did_factory.upload_test_file(rse)\r\n\r\ntest_download.py:472: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntemp_factories.py:283: in upload_test_file\r\n    self.upload_client.upload([item])\r\n../client/uploadclient.py:237: in upload\r\n    if rsemgr.exists(rse_settings, pfn if pfn else file_did, domain=domain, auth_token=self.auth_token, logger=logger):\r\n../rse/rsemanager.py:279: in exists\r\n    protocol.connect()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <rucio.rse.protocols.xrootd.Default object at 0x7fd395ca7a58>\r\n\r\n    def connect(self):\r\n        """""" Establishes the actual connection to the referred RSE.\r\n    \r\n            :param credentials Provides information to establish a connection\r\n                to the referred storage system. For S3 connections these are\r\n                access_key, secretkey, host_base, host_bucket, progress_meter\r\n                and skip_existing.\r\n    \r\n            :raises RSEAccessDenied\r\n        """"""\r\n        self.logger(logging.DEBUG, \'xrootd.connect: port: {}, hostname {}\'.format(self.port, self.hostname))\r\n        try:\r\n            # The query stats call is not implemented on some xroot doors.\r\n            # Workaround: fail, if server does not reply within 10 seconds for static config query\r\n            cmd = \'XrdSecPROTOCOL=gsi XRD_REQUESTTIMEOUT=10 xrdfs %s:%s query config %s:%s\' % (self.hostname, self.port, self.hostname, self.port)\r\n            self.logger(logging.INFO, \'xrootd.connect: cmd: {}\'.format(cmd))\r\n            status, out, err = execute(cmd)\r\n            if status != 0:\r\n                raise exception.RSEAccessDenied(err)\r\n        except Exception as e:\r\n>           raise exception.RSEAccessDenied(e)\r\nE           rucio.common.exception.RSEAccessDenied: Referenced RSE not reachable.\r\nE           Details: Referenced RSE not reachable.\r\nE           Details: [FATAL] Invalid address\r\n\r\n../rse/protocols/xrootd.py:200: RSEAccessDenied\r\n------------------------------------------------------------------------------------------------ Captured log call ------------------------------------------------------------------------------------------------\r\nWARNING  root:uploadclient.py:368 Scope mock not found for the account root.\r\n---------------------------------------------------------------------------------------------- Captured log teardown ----------------------------------------------------------------------------------------------\r\nWARNING  root:request.py:727 Tried to cancel non-existant request for DID mock:file_AUXFBWCIMK at RSE MOCK_RFXNRCTXDT\r\n================================================================================================ warnings summary =================================================================================================\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n  /opt/rucio/lib/rucio/client/baseclient.py:55: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module\'s documentation for alternative uses\r\n    import imp\r\n\r\ntest_download.py::test_download_blacklisted_replicas\r\ntest_download.py::test_download_without_base_dir\r\ntest_download.py::test_trace_copy_out_and_checksum_validation\r\ntest_download.py::test_transfer_timeout\r\ntest_download.py::test_norandom_respected\r\ntest_download.py::test_download_to_two_paths\r\ntest_download.py::test_download_multiple\r\n  /usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host \'rucio\'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    InsecureRequestWarning,\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n============================================================================================= short test summary info =============================================================================================\r\nFAILED test_download.py::test_download_file_with_impl - rucio.common.exception.RSEAccessDenied: Referenced RSE not reachable.\r\n============================================================================== 1 failed, 7 passed, 1 skipped, 15 warnings in 12.64s ===============================================================================\r\n[root@b2e68ef33f26 rucio]# tools/pytest.sh test_download.py\r\nRunning pytest with extra arguments: test_download.py\r\nRunning pytest with pytest-xdist: -p xdist -p ruciopytest.plugin --dist=rucio --numprocesses=auto\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.6.8, pytest-6.1.2, py-1.10.0, pluggy-0.13.1\r\nrootdir: /opt/rucio/lib/rucio/tests\r\nplugins: xdist-2.2.1\r\ngw0 [10] / gw1 [10] / gw2 [10] / gw3 [10] / gw4 [10] / gw5 [10] / gw6 [10] / gw7 [10]\r\nsF.......\r\n==================================================================================================== FAILURES =====================================================================================================\r\n__________________________________________________________________________________________ test_download_file_with_impl ___________________________________________________________________________________________\r\n[gw7] linux -- Python 3.6.8 /usr/bin/python\r\n\r\nself = <rucio.rse.protocols.xrootd.Default object at 0x7ff46acabf98>\r\n\r\n    def connect(self):\r\n        """""" Establishes the actual connection to the referred RSE.\r\n    \r\n            :param credentials Provides information to establish a connection\r\n                to the referred storage system. For S3 connections these are\r\n                access_key, secretkey, host_base, host_bucket, progress_meter\r\n                and skip_existing.\r\n    \r\n            :raises RSEAccessDenied\r\n        """"""\r\n        self.logger(logging.DEBUG, \'xrootd.connect: port: {}, hostname {}\'.format(self.port, self.hostname))\r\n        try:\r\n            # The query stats call is not implemented on some xroot doors.\r\n            # Workaround: fail, if server does not reply within 10 seconds for static config query\r\n            cmd = \'XrdSecPROTOCOL=gsi XRD_REQUESTTIMEOUT=10 xrdfs %s:%s query config %s:%s\' % (self.hostname, self.port, self.hostname, self.port)\r\n            self.logger(logging.INFO, \'xrootd.connect: cmd: {}\'.format(cmd))\r\n            status, out, err = execute(cmd)\r\n            if status != 0:\r\n>               raise exception.RSEAccessDenied(err)\r\nE               rucio.common.exception.RSEAccessDenied: Referenced RSE not reachable.\r\nE               Details: [FATAL] Invalid address\r\n\r\n../rse/protocols/xrootd.py:198: RSEAccessDenied\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nrse_factory = <rucio.tests.temp_factories.TemporaryRSEFactory object at 0x7ff46d4c47b8>, did_factory = <rucio.tests.temp_factories.TemporaryDidFactory object at 0x7ff46d4c49e8>\r\ndownload_client = <rucio.client.downloadclient.DownloadClient object at 0x7ff46d479b00>\r\n\r\n    def test_download_file_with_impl(rse_factory, did_factory, download_client):\r\n        impl = \'rucio.rse.protocols.xrootd.Default\'\r\n        scope = str(did_factory.default_scope)\r\n        rse, _ = rse_factory.make_xroot_rse()\r\n>       did = did_factory.upload_test_file(rse)\r\n\r\ntest_download.py:472: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntemp_factories.py:283: in upload_test_file\r\n    self.upload_client.upload([item])\r\n../client/uploadclient.py:237: in upload\r\n    if rsemgr.exists(rse_settings, pfn if pfn else file_did, domain=domain, auth_token=self.auth_token, logger=logger):\r\n../rse/rsemanager.py:279: in exists\r\n    protocol.connect()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <rucio.rse.protocols.xrootd.Default object at 0x7ff46acabf98>\r\n\r\n    def connect(self):\r\n        """""" Establishes the actual connection to the referred RSE.\r\n    \r\n            :param credentials Provides information to establish a connection\r\n                to the referred storage system. For S3 connections these are\r\n                access_key, secretkey, host_base, host_bucket, progress_meter\r\n                and skip_existing.\r\n    \r\n            :raises RSEAccessDenied\r\n        """"""\r\n        self.logger(logging.DEBUG, \'xrootd.connect: port: {}, hostname {}\'.format(self.port, self.hostname))\r\n        try:\r\n            # The query stats call is not implemented on some xroot doors.\r\n            # Workaround: fail, if server does not reply within 10 seconds for static config query\r\n            cmd = \'XrdSecPROTOCOL=gsi XRD_REQUESTTIMEOUT=10 xrdfs %s:%s query config %s:%s\' % (self.hostname, self.port, self.hostname, self.port)\r\n            self.logger(logging.INFO, \'xrootd.connect: cmd: {}\'.format(cmd))\r\n            status, out, err = execute(cmd)\r\n            if status != 0:\r\n                raise exception.RSEAccessDenied(err)\r\n        except Exception as e:\r\n>           raise exception.RSEAccessDenied(e)\r\nE           rucio.common.exception.RSEAccessDenied: Referenced RSE not reachable.\r\nE           Details: Referenced RSE not reachable.\r\nE           Details: [FATAL] Invalid address\r\n\r\n../rse/protocols/xrootd.py:200: RSEAccessDenied\r\n------------------------------------------------------------------------------------------------ Captured log call ------------------------------------------------------------------------------------------------\r\nWARNING  root:uploadclient.py:368 Scope mock not found for the account root.\r\n---------------------------------------------------------------------------------------------- Captured log teardown ----------------------------------------------------------------------------------------------\r\nWARNING  root:request.py:727 Tried to cancel non-existant request for DID mock:file_NMDZVOCFBE at RSE MOCK_YZLNLAUZCT\r\n================================================================================================ warnings summary =================================================================================================\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n  /opt/rucio/lib/rucio/client/baseclient.py:55: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module\'s documentation for alternative uses\r\n    import imp\r\n\r\ntest_download.py::test_download_blacklisted_replicas\r\ntest_download.py::test_download_without_base_dir\r\ntest_download.py::test_trace_copy_out_and_checksum_validation\r\ntest_download.py::test_norandom_respected\r\ntest_download.py::test_transfer_timeout\r\ntest_download.py::test_download_to_two_paths\r\ntest_download.py::test_download_multiple\r\n  /usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host \'rucio\'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    InsecureRequestWarning,\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n============================================================================================= short test summary info =============================================================================================\r\nFAILED test_download.py::test_download_file_with_impl - rucio.common.exception.RSEAccessDenied: Referenced RSE not reachable.\r\n============================================================================== 1 failed, 7 passed, 1 skipped, 15 warnings in 12.94s ===============================================================================\r\n[root@b2e68ef33f26 rucio]# \r\n``\r\n', 'comment_created': datetime.datetime(2021, 5, 27, 9, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640459391, 'comment_body': 'So, `mock://` is not a recognized GFAL protocol, as can be seen here:\r\n\r\n`E           Details: Protocol not supported or path/url invalid: mock://3b3095674f1a4366b941e49c63e48fc9.cern.ch/test/mock/1d/04/file_HAWCDMUGBY`\r\n\r\n\r\nFor the second one:\r\n\r\n```\r\nE           rucio.common.exception.RSEAccessDenied: Referenced RSE not reachable.\r\nE           Details: Referenced RSE not reachable.\r\nE           Details: [FATAL] Invalid address\r\n```\r\n\r\nDid you start the XrootD storage server? Should come from the docker-compose `...-storage.yaml`', 'comment_created': datetime.datetime(2021, 5, 27, 9, 35, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 640462755, 'comment_body': '@mlassnig yep\r\nAlso yes, I ran that command before entering the shell:\r\n```\r\n                                    dev_xrd2_1\r\n25ff495325ce   rucio/xrootd                  ""/docker-entrypoint.…""   42 hours ago   Up 42 hours   \r\n\r\n```\r\n\r\nAlso, all other test cases having this xroot reference or srm reference for the rses runs perfectly, its only in this case', 'comment_created': datetime.datetime(2021, 5, 27, 9, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640466821, 'comment_body': '@mlassnig so i changed the firsts scheme to ""root"" and got this error:\r\n```\r\n[root@b2e68ef33f26 rucio]# tools/pytest.sh test_download.py\r\nRunning pytest with extra arguments: test_download.py\r\nRunning pytest with pytest-xdist: -p xdist -p ruciopytest.plugin --dist=rucio --numprocesses=auto\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.6.8, pytest-6.1.2, py-1.10.0, pluggy-0.13.1\r\nrootdir: /opt/rucio/lib/rucio/tests\r\nplugins: xdist-2.2.1\r\ngw0 [10] / gw1 [10] / gw2 [10] / gw3 [10] / gw4 [10] / gw5 [10] / gw6 [10] / gw7 [10]\r\ns..F.....\r\n==================================================================================================== FAILURES =====================================================================================================\r\n__________________________________________________________________________________________ test_download_file_with_impl ___________________________________________________________________________________________\r\n[gw6] linux -- Python 3.6.8 /usr/bin/python\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f7777d45a58>, path = \'root://9dcc33d97a9b4095b9b2fab3b759b283.cern.ch/test/mock/e8/19/file_QHMZUTVJOB\'\r\n\r\n    def __gfal2_exist(self, path):\r\n        """"""\r\n        Uses gfal2 to check whether the file exists.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: 0 if it exists, -1 if it doesn\'t\r\n    \r\n        :raises RucioException: if the error is not source not found.\r\n        """"""\r\n        ctx = self.__ctx\r\n        try:\r\n>           if ctx.stat(str(path)):\r\nE           gfal2.GError: Failed to stat file (No route to host)\r\n\r\n../rse/protocols/gfal.py:494: GError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f7777d45a58>, path = \'root://9dcc33d97a9b4095b9b2fab3b759b283.cern.ch/test/mock/e8/19/file_QHMZUTVJOB\'\r\n\r\n    def exists(self, path):\r\n        """"""\r\n        Checks if the requested file is known by the referred RSE.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: True if the file exists, False if it doesn\'t\r\n    \r\n        :raises SourceNotFound: if the source file was not found on the referred storage.\r\n        """"""\r\n        self.logger(logging.DEBUG, \'checking if file exists {}\'.format(path))\r\n    \r\n        try:\r\n>           status = self.__gfal2_exist(path)\r\n\r\n../rse/protocols/gfal.py:332: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f7777d45a58>, path = \'root://9dcc33d97a9b4095b9b2fab3b759b283.cern.ch/test/mock/e8/19/file_QHMZUTVJOB\'\r\n\r\n    def __gfal2_exist(self, path):\r\n        """"""\r\n        Uses gfal2 to check whether the file exists.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: 0 if it exists, -1 if it doesn\'t\r\n    \r\n        :raises RucioException: if the error is not source not found.\r\n        """"""\r\n        ctx = self.__ctx\r\n        try:\r\n            if ctx.stat(str(path)):\r\n                return 0\r\n            return -1\r\n        except gfal2.GError as error:  # pylint: disable=no-member\r\n            if error.code == errno.ENOENT or \'No such file\' in str(error):  # pylint: disable=no-member\r\n                return -1\r\n>           raise exception.RucioException(error)\r\nE           rucio.common.exception.RucioException: An unknown exception occurred.\r\nE           Details: Failed to stat file (No route to host)\r\n\r\n../rse/protocols/gfal.py:500: RucioException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nrse_factory = <rucio.tests.temp_factories.TemporaryRSEFactory object at 0x7f777a5477b8>, did_factory = <rucio.tests.temp_factories.TemporaryDidFactory object at 0x7f777a5479e8>\r\ndownload_client = <rucio.client.downloadclient.DownloadClient object at 0x7f777a4feb00>\r\n\r\n    def test_download_file_with_impl(rse_factory, did_factory, download_client):\r\n        impl = \'rucio.rse.protocols.gfalv2.Default\'\r\n        scope = str(did_factory.default_scope)\r\n        rse, _ = rse_factory.make_rse_with_impl(impl)\r\n>       did = did_factory.upload_test_file(rse)\r\n\r\ntest_download.py:472: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntemp_factories.py:283: in upload_test_file\r\n    self.upload_client.upload([item])\r\n../client/uploadclient.py:237: in upload\r\n    if rsemgr.exists(rse_settings, pfn if pfn else file_did, domain=domain, auth_token=self.auth_token, logger=logger):\r\n../rse/rsemanager.py:302: in exists\r\n    exists = protocol.exists(pfn)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <rucio.rse.protocols.gfalv2.Default object at 0x7f7777d45a58>, path = \'root://9dcc33d97a9b4095b9b2fab3b759b283.cern.ch/test/mock/e8/19/file_QHMZUTVJOB\'\r\n\r\n    def exists(self, path):\r\n        """"""\r\n        Checks if the requested file is known by the referred RSE.\r\n    \r\n        :param path: Physical file name\r\n    \r\n        :returns: True if the file exists, False if it doesn\'t\r\n    \r\n        :raises SourceNotFound: if the source file was not found on the referred storage.\r\n        """"""\r\n        self.logger(logging.DEBUG, \'checking if file exists {}\'.format(path))\r\n    \r\n        try:\r\n            status = self.__gfal2_exist(path)\r\n            if status:\r\n                return False\r\n            return True\r\n        except exception.SourceNotFound:\r\n            return False\r\n        except Exception as error:\r\n>           raise exception.ServiceUnavailable(error)\r\nE           rucio.common.exception.ServiceUnavailable: The requested service is not available at the moment.\r\nE           Details: An unknown exception occurred.\r\nE           Details: Failed to stat file (No route to host)\r\n\r\n../rse/protocols/gfal.py:339: ServiceUnavailable\r\n------------------------------------------------------------------------------------------------ Captured log call ------------------------------------------------------------------------------------------------\r\nWARNING  root:uploadclient.py:368 Scope mock not found for the account root.\r\n---------------------------------------------------------------------------------------------- Captured log teardown ----------------------------------------------------------------------------------------------\r\nWARNING  root:request.py:727 Tried to cancel non-existant request for DID mock:file_QHMZUTVJOB at RSE MOCK_WLXKJWIYIG\r\n================================================================================================ warnings summary =================================================================================================\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n  /opt/rucio/lib/rucio/client/baseclient.py:55: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module\'s documentation for alternative uses\r\n    import imp\r\n\r\ntest_download.py::test_download_blacklisted_replicas\r\ntest_download.py::test_download_without_base_dir\r\ntest_download.py::test_transfer_timeout\r\ntest_download.py::test_norandom_respected\r\ntest_download.py::test_trace_copy_out_and_checksum_validation\r\ntest_download.py::test_download_to_two_paths\r\ntest_download.py::test_download_multiple\r\n  /usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host \'rucio\'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    InsecureRequestWarning,\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n============================================================================================= short test summary info =============================================================================================\r\nFAILED test_download.py::test_download_file_with_impl - rucio.common.exception.ServiceUnavailable: The requested service is not available at the moment.\r\n============================================================================== 1 failed, 7 passed, 1 skipped, 15 warnings in 12.48s ===============================================================================\r\n[root@b2e68ef33f26 rucio]# \r\n\r\n```\r\nWhat exactly does ""gfal2.GError: Failed to stat file (No route to host)"" mean?\r\n', 'comment_created': datetime.datetime(2021, 5, 27, 9, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640493697, 'comment_body': ""It means the hostname you are using cannot be found. From the log I see that you used `root://9dcc33d97a9b4095b9b2fab3b759b283.cern.ch/test/mock/e8/19/file_QHMZUTVJOB`... and `9dcc33d97a9b4095b9b2fab3b759b283.cern.ch` definitely does not exist in your local docker setup. So you have to check that the hostname you use there is the correct one that's also used within the docker network."", 'comment_created': datetime.datetime(2021, 5, 27, 10, 22, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 640496526, 'comment_body': '@mlassnig @bziemons okay so, from what I can see of wherever the make_xroot_rse is used, Also for srm, both have only been used in cases of bulk adding replicas for a file. I will look into what could be causing the error', 'comment_created': datetime.datetime(2021, 5, 27, 10, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640501577, 'comment_body': '@mlassnig Oh i see, But it is auto-generating that file along with the path, I am not interfering as such anywhere. The file is a dummy file created during upload', 'comment_created': datetime.datetime(2021, 5, 27, 10, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640504644, 'comment_body': ""It seems like the `_make_rse` wasn't made for actually uploading to the created RSE. Maybe @rcarpa can comment on the use case of it"", 'comment_created': datetime.datetime(2021, 5, 27, 10, 39, 37, tzinfo=datetime.timezone.utc), 'commenter': 'bziemons', 'type': 'User'}, {'comment_id': 640510508, 'comment_body': '@bziemons wait, in file_archive the make_xroot_rse is used to create an RSE which is later used to add file replicas on that RSE. So it is being used for uploading files to the created RSE right?', 'comment_created': datetime.datetime(2021, 5, 27, 10, 49, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640530995, 'comment_body': ""I added these functions as very simple wrappers to cover most simple initialization for test cases. They are not designed to be bullet-proof and production-ready. The protocol definition is not very customizable, and it's probably not a good idea to complicate these functions too much. In such cases, when more control over protocol customization is needed, i think it's best to call bare make_rse(). And manually add the desired protocol with rse_core.add_protocol() or rse_client.add_protocol(). See an example here https://github.com/rucio/rucio/blob/697b61ac4e6a2683ef0f814f514c74d541a17de4/lib/rucio/tests/test_archive.py#L191"", 'comment_created': datetime.datetime(2021, 5, 27, 11, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 640537643, 'comment_body': 'The failure or success of the upload will depend on the protocol configuration and the availability of that protocol. For example, make_posix_rse() willl result into an RSE to which you can upload. Make_xroot_rse() will not allow to upload to it; because the xroot deamons will not be actually be run; it is only a ""xroot mock"" which only exists as database objects. If you need to test with xroot rses, you\'ll have to run the test in the ""integration"" test suite. ', 'comment_created': datetime.datetime(2021, 5, 27, 11, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 640544795, 'comment_body': '@rcarpa Thank you! So i changed it to how the example portrayed taking the protocol as xrootd, but it is still giving me the same error:\r\n```\r\n[root@b2e68ef33f26 rucio]# tools/pytest.sh test_download.py\r\nRunning pytest with extra arguments: test_download.py\r\nRunning pytest with pytest-xdist: -p xdist -p ruciopytest.plugin --dist=rucio --numprocesses=auto\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.6.8, pytest-6.1.2, py-1.10.0, pluggy-0.13.1\r\nrootdir: /opt/rucio/lib/rucio/tests\r\nplugins: xdist-2.2.1\r\ngw0 [10] / gw1 [10] / gw2 [10] / gw3 [10] / gw4 [10] / gw5 [10] / gw6 [10] / gw7 [10]\r\ns.......F\r\n==================================================================================================== FAILURES =====================================================================================================\r\n__________________________________________________________________________________________ test_download_file_with_impl ___________________________________________________________________________________________\r\n[gw2] linux -- Python 3.6.8 /usr/bin/python\r\n\r\nself = <rucio.rse.protocols.xrootd.Default object at 0x7f64cbf10be0>\r\n\r\n    def connect(self):\r\n        """""" Establishes the actual connection to the referred RSE.\r\n    \r\n            :param credentials Provides information to establish a connection\r\n                to the referred storage system. For S3 connections these are\r\n                access_key, secretkey, host_base, host_bucket, progress_meter\r\n                and skip_existing.\r\n    \r\n            :raises RSEAccessDenied\r\n        """"""\r\n        self.logger(logging.DEBUG, \'xrootd.connect: port: {}, hostname {}\'.format(self.port, self.hostname))\r\n        try:\r\n            # The query stats call is not implemented on some xroot doors.\r\n            # Workaround: fail, if server does not reply within 10 seconds for static config query\r\n            cmd = \'XrdSecPROTOCOL=gsi XRD_REQUESTTIMEOUT=10 xrdfs %s:%s query config %s:%s\' % (self.hostname, self.port, self.hostname, self.port)\r\n            self.logger(logging.INFO, \'xrootd.connect: cmd: {}\'.format(cmd))\r\n            status, out, err = execute(cmd)\r\n            if status != 0:\r\n>               raise exception.RSEAccessDenied(err)\r\nE               rucio.common.exception.RSEAccessDenied: Referenced RSE not reachable.\r\nE               Details: [ERROR] Operation expired\r\n\r\n../rse/protocols/xrootd.py:198: RSEAccessDenied\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nrse_factory = <rucio.tests.temp_factories.TemporaryRSEFactory object at 0x7f64ce70b780>, did_factory = <rucio.tests.temp_factories.TemporaryDidFactory object at 0x7f64ce70b9b0>\r\ndownload_client = <rucio.client.downloadclient.DownloadClient object at 0x7f64ce6c4b70>\r\n\r\n    def test_download_file_with_impl(rse_factory, did_factory, download_client):\r\n        impl = \'rucio.rse.protocols.gfalv2.Default\'\r\n        scope = str(did_factory.default_scope)\r\n        rse, rseid = rse_factory.make_rse()\r\n        add_protocol(rseid, {\'scheme\': \'root\',\r\n                               \'hostname\': \'xrootpriority1.aperture.com\',\r\n                               \'port\': 1410,\r\n                               \'prefix\': \'/prefix2/\',\r\n                               \'impl\': \'rucio.rse.protocols.xrootd.Default\',\r\n                               \'domains\': {\r\n                                   \'lan\': {\'read\': 2, \'write\': 2, \'delete\': 2},\r\n                                   \'wan\': {\'read\': 2, \'write\': 2, \'delete\': 2}}})\r\n>       did = did_factory.upload_test_file(rse)\r\n\r\ntest_download.py:481: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntemp_factories.py:283: in upload_test_file\r\n    self.upload_client.upload([item])\r\n../client/uploadclient.py:237: in upload\r\n    if rsemgr.exists(rse_settings, pfn if pfn else file_did, domain=domain, auth_token=self.auth_token, logger=logger):\r\n../rse/rsemanager.py:279: in exists\r\n    protocol.connect()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <rucio.rse.protocols.xrootd.Default object at 0x7f64cbf10be0>\r\n\r\n    def connect(self):\r\n        """""" Establishes the actual connection to the referred RSE.\r\n    \r\n            :param credentials Provides information to establish a connection\r\n                to the referred storage system. For S3 connections these are\r\n                access_key, secretkey, host_base, host_bucket, progress_meter\r\n                and skip_existing.\r\n    \r\n            :raises RSEAccessDenied\r\n        """"""\r\n        self.logger(logging.DEBUG, \'xrootd.connect: port: {}, hostname {}\'.format(self.port, self.hostname))\r\n        try:\r\n            # The query stats call is not implemented on some xroot doors.\r\n            # Workaround: fail, if server does not reply within 10 seconds for static config query\r\n            cmd = \'XrdSecPROTOCOL=gsi XRD_REQUESTTIMEOUT=10 xrdfs %s:%s query config %s:%s\' % (self.hostname, self.port, self.hostname, self.port)\r\n            self.logger(logging.INFO, \'xrootd.connect: cmd: {}\'.format(cmd))\r\n            status, out, err = execute(cmd)\r\n            if status != 0:\r\n                raise exception.RSEAccessDenied(err)\r\n        except Exception as e:\r\n>           raise exception.RSEAccessDenied(e)\r\nE           rucio.common.exception.RSEAccessDenied: Referenced RSE not reachable.\r\nE           Details: Referenced RSE not reachable.\r\nE           Details: [ERROR] Operation expired\r\n\r\n../rse/protocols/xrootd.py:200: RSEAccessDenied\r\n------------------------------------------------------------------------------------------------ Captured log call ------------------------------------------------------------------------------------------------\r\nWARNING  root:uploadclient.py:368 Scope mock not found for the account root.\r\n---------------------------------------------------------------------------------------------- Captured log teardown ----------------------------------------------------------------------------------------------\r\nWARNING  root:request.py:727 Tried to cancel non-existant request for DID mock:file_KKFZCBMLQE at RSE MOCK_VCLLAIDSUR\r\n================================================================================================ warnings summary =================================================================================================\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n  /opt/rucio/lib/rucio/client/baseclient.py:55: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module\'s documentation for alternative uses\r\n    import imp\r\n\r\ntest_download.py::test_download_blacklisted_replicas\r\ntest_download.py::test_download_without_base_dir\r\ntest_download.py::test_norandom_respected\r\ntest_download.py::test_transfer_timeout\r\ntest_download.py::test_trace_copy_out_and_checksum_validation\r\ntest_download.py::test_download_to_two_paths\r\ntest_download.py::test_download_multiple\r\n  /usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host \'rucio\'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    InsecureRequestWarning,\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n============================================================================================= short test summary info =============================================================================================\r\nFAILED test_download.py::test_download_file_with_impl - rucio.common.exception.RSEAccessDenied: Referenced RSE not reachable.\r\n============================================================================== 1 failed, 7 passed, 1 skipped, 15 warnings in 24.96s ===============================================================================\r\n[root@b2e68ef33f26 rucio]# \r\n\r\n```\r\n\r\nFrom the looks of it, the upload_test_file seems to not work with this no matter what. In this situation and all places where xrootd and srm protocols is used, its used with only add_replicas which in turn deals directly with the DB at the RSE \r\nOn the contrary, upload_test_file calls the upload function and tries actually connecting using the protocol which gives this error of RSE access denied. \r\n(please correct me if I am mistaken anywhere)', 'comment_created': datetime.datetime(2021, 5, 27, 11, 43, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640547819, 'comment_body': '> The failure or success of the upload will depend on the protocol configuration and the availability of that protocol. For example, make_posix_rse() willl result into an RSE to which you can upload. Make_xroot_rse() will not allow to upload to it; because the xroot deamons will not be actually be run; it is only a ""xroot mock"" which only exists as database objects. If you need to test with xroot rses, you\'ll have to run the test in the ""integration"" test suite.\r\n\r\nthank you, I just got this.', 'comment_created': datetime.datetime(2021, 5, 27, 11, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 640550215, 'comment_body': 'You are 100% correct. That\'s what I tried to say in my last message. In your last change, upload() will try to connect and upload a file to \'root://xrootpriority1.aperture.com/some_path"" as this endpoint is not a real xroot server; it will not work. Check https://github.com/rak108/rucio/blob/2ae4b316007da9b0e29c7d8b2f06cb575d901621/lib/rucio/tests/test_download.py#L224 for a test case that actually uses real xroot RSEs. If you want to understand how it works. These are full-blown xroot servers run in docker containers.  RSEs are initialized here https://github.com/rak108/rucio/blob/2ae4b316007da9b0e29c7d8b2f06cb575d901621/tools/docker_activate_rses.sh   and you must call the test from a specific test suite : https://github.com/rak108/rucio/blob/2ae4b316007da9b0e29c7d8b2f06cb575d901621/.github/workflows/integration_tests.yml#L80', 'comment_created': datetime.datetime(2021, 5, 27, 11, 52, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 641397959, 'comment_body': 'this was for me to see what was actually being passed, and this is when I realised why an error kept coming up:\r\n```\r\n[root@b2e68ef33f26 rucio]# tools/pytest.sh test_download.py\r\nRunning pytest with extra arguments: test_download.py\r\nRunning pytest with pytest-xdist: -p xdist -p ruciopytest.plugin --dist=rucio --numprocesses=auto\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.6.8, pytest-6.1.2, py-1.10.0, pluggy-0.13.1\r\nrootdir: /opt/rucio/lib/rucio/tests\r\nplugins: xdist-2.2.1\r\ngw0 [10] / gw1 [10] / gw2 [10] / gw3 [10] / gw4 [10] / gw5 [10] / gw6 [10] / gw7 [10]\r\ns.F......\r\n==================================================================================================== FAILURES =====================================================================================================\r\n__________________________________________________________________________________________ test_download_file_with_impl ___________________________________________________________________________________________\r\n[gw3] linux -- Python 3.6.8 /usr/bin/python\r\n\r\nrse_factory = <rucio.tests.temp_factories.TemporaryRSEFactory object at 0x7f6482fbe518>, did_factory = <rucio.tests.temp_factories.TemporaryDidFactory object at 0x7f6482fbe898>\r\ndownload_client = <rucio.client.downloadclient.DownloadClient object at 0x7f6482fccb38>\r\n\r\n    def test_download_file_with_impl(rse_factory, did_factory, download_client):\r\n        impl = \'rucio.rse.protocols.xrootd.Default\'\r\n        scope = str(did_factory.default_scope)\r\n        rse, _ = rse_factory.make_posix_rse()\r\n        did = did_factory.upload_test_file(rse)\r\n        did_str = \'%s:%s\' % (did[\'scope\'], did[\'name\'])\r\n    \r\n        #checks if the protocol object returned has the same impl value as what was specified, thus in turn implying the right module was called\r\n        result = download_client.download_dids([{\'did\': did_str, \'impl\': impl}], test_module=True)\r\n        for x in range(len(result)):\r\n            print(result[x])\r\n>       assert result.test_impl() == impl\r\nE       AttributeError: \'list\' object has no attribute \'test_impl\'\r\n\r\ntest_download.py:480: AttributeError\r\n---------------------------------------------------------------------------------------------- Captured stdout call -----------------------------------------------------------------------------------------------\r\n<rucio.rse.protocols.posix.Default object at 0x7f64807a8a90>\r\n---------------------------------------------------------------------------------------------- Captured stderr call -----------------------------------------------------------------------------------------------\r\nProcessing 1 item(s) for input\r\nnum_unmerged_items=1; num_dids=1; num_merged_items=1\r\nGetting sources of DIDs\r\nNo tapes found.\r\nschemes: None\r\nrse_expression: None\r\nnum DIDs for list_replicas call: 1\r\nnum resolved files: 1\r\n""unzip -v"" returned with exitcode 127\r\n""tar --version"" returned with exitcode 0\r\nQueueing file: mock:file_TINRAJFCLL\r\nreal parents: set()\r\noptions: {\'mock:file_TINRAJFCLL\': {\'destinations\': {(\'.\', False)}, \'ignore_checksum\': False, \'transfer_timeout\': None, \'transfer_speed_timeout\': None}}\r\nPrepared sources: num_sources=1/1; num_non_cea_sources=1; num_cea_ids=0\r\nUsing main thread to download 1 file(s)\r\nStart processing queued downloads\r\nPreparing download of mock:file_TINRAJFCLL\r\nTrying to download with file and timeout of 360s from MOCK_UJJZPBZBDR: mock:file_TINRAJFCLL \r\n------------------------------------------------------------------------------------------------ Captured log call ------------------------------------------------------------------------------------------------\r\nWARNING  root:uploadclient.py:368 Scope mock not found for the account root.\r\nINFO     dlul_client:downloadclient.py:278 Processing 1 item(s) for input\r\nDEBUG    dlul_client:downloadclient.py:281 num_unmerged_items=1; num_dids=1; num_merged_items=1\r\nINFO     dlul_client:downloadclient.py:283 Getting sources of DIDs\r\nDEBUG    dlul_client:downloadclient.py:1119 No tapes found.\r\nDEBUG    dlul_client:downloadclient.py:1126 schemes: None\r\nDEBUG    dlul_client:downloadclient.py:1130 rse_expression: None\r\nDEBUG    dlul_client:downloadclient.py:1133 num DIDs for list_replicas call: 1\r\nDEBUG    dlul_client:downloadclient.py:1145 num resolved files: 1\r\nDEBUG    dlul_client:downloadclient.py:86 ""unzip -v"" returned with exitcode 127\r\nDEBUG    dlul_client:downloadclient.py:86 ""tar --version"" returned with exitcode 0\r\nDEBUG    dlul_client:downloadclient.py:1228 Queueing file: mock:file_TINRAJFCLL\r\nDEBUG    dlul_client:downloadclient.py:1229 real parents: set()\r\nDEBUG    dlul_client:downloadclient.py:1230 options: {\'mock:file_TINRAJFCLL\': {\'destinations\': {(\'.\', False)}, \'ignore_checksum\': False, \'transfer_timeout\': None, \'transfer_speed_timeout\': None}}\r\nDEBUG    dlul_client:downloadclient.py:1309 Prepared sources: num_sources=1/1; num_non_cea_sources=1; num_cea_ids=0\r\nINFO     dlul_client:downloadclient.py:368 Using main thread to download 1 file(s)\r\nDEBUG    dlul_client:downloadclient.py:413 Start processing queued downloads\r\nINFO     dlul_client:downloadclient.py:479 Preparing download of mock:file_TINRAJFCLL\r\nINFO     dlul_client:downloadclient.py:590 Trying to download with file and timeout of 360s from MOCK_UJJZPBZBDR: mock:file_TINRAJFCLL\r\n================================================================================================ warnings summary =================================================================================================\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n../client/baseclient.py:55\r\n  /opt/rucio/lib/rucio/client/baseclient.py:55: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module\'s documentation for alternative uses\r\n    import imp\r\n\r\ntest_download.py::test_download_blacklisted_replicas\r\ntest_download.py::test_download_file_with_impl\r\ntest_download.py::test_download_without_base_dir\r\ntest_download.py::test_norandom_respected\r\ntest_download.py::test_trace_copy_out_and_checksum_validation\r\ntest_download.py::test_transfer_timeout\r\ntest_download.py::test_download_to_two_paths\r\ntest_download.py::test_download_multiple\r\n  /usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host \'rucio\'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    InsecureRequestWarning,\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n============================================================================================= short test summary info =============================================================================================\r\nFAILED test_download.py::test_download_file_with_impl - AttributeError: \'list\' object has no attribute \'test_impl\'\r\n=============================================================================== 1 failed, 7 passed, 1 skipped, 16 warnings in 8.07s ===============================================================================\r\n[root@b2e68ef33f26 rucio]# \r\n\r\n```\r\n\r\nSo particularly the stdout log shows: <rucio.rse.protocols.posix.Default object at 0x7f64807a8a90> is being passed back as obviously due to inner working it is considering the impl as the one associated with the RSE still and not what is being passed by the client, so anyways that is the feature I am implementing and thus this fail is expected right?\r\nSo is this test case okay? Most basic one\r\n', 'comment_created': datetime.datetime(2021, 5, 28, 9, 13, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 643792972, 'comment_body': 'I followed the same pattern as the one in test_bin_rucio, but I was wondering if i should change it to also check if the file is already there it will not reupload it?', 'comment_created': datetime.datetime(2021, 6, 2, 9, 39, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 643832345, 'comment_body': 'hmmm, did you discuss this with @bari12 ? having the test_module in the public signature looks odd to me', 'comment_created': datetime.datetime(2021, 6, 2, 10, 33, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 643832926, 'comment_body': 'can be a separate additional test?', 'comment_created': datetime.datetime(2021, 6, 2, 10, 34, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 643933580, 'comment_body': '@mlassnig no i had not discussed it, what would you suggest instead for it to be more efficient? Would it be better if this test_module becomes a class variable of download_client? So in initialization it can just be set to true, and in all checking places it can be if self.test_module is true or not', 'comment_created': datetime.datetime(2021, 6, 2, 12, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 643934053, 'comment_body': ""@mlassnig yep okay that sounds good i'll do that"", 'comment_created': datetime.datetime(2021, 6, 2, 12, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 648223426, 'comment_body': 'this actually is the statement: cmd = ""find /tmp/rucio_rse/ -name {0} |xargs rm"".format(tmp_file1_name)\r\nthis line change was just for me to see what was happening', 'comment_created': datetime.datetime(2021, 6, 9, 11, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 654189278, 'comment_body': 'this relative notation is dangerous :-)\r\n\r\nin general this generate.sh is not to be used ""automatically""... but to copy/paste the necessary stuff in your local console.  (maybe worth adding a comment about this at the top)\r\n\r\ni think it\'s ok to just create the keys in the current directory', 'comment_created': datetime.datetime(2021, 6, 18, 7, 1, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 654191378, 'comment_body': '@mlassnig okay, ill change it everywhere under ssh directory within certs itself', 'comment_created': datetime.datetime(2021, 6, 18, 7, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 654232129, 'comment_body': '@mlassnig done!', 'comment_created': datetime.datetime(2021, 6, 18, 8, 11, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 656329204, 'comment_body': ""Please don't expose the ssh port to localhost. Not with public root ssh key. "", 'comment_created': datetime.datetime(2021, 6, 22, 15, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 656335885, 'comment_body': 'or, at least, substitute it with ""127.0.0.1:2222:22"" to only bind on 127.0.0.1', 'comment_created': datetime.datetime(2021, 6, 22, 15, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 656421689, 'comment_body': 'Just a minor recommendation here: \r\nIt would be nice if you could modify the following fixture to include the SSH1 rse as one of the returned values.:\r\nhttps://github.com/rucio/rucio/blob/a4c05a1efd0525fef9bd9d9b1d9e9d2ad66d51cf/lib/rucio/tests/conftest.py#L121\r\n\r\nThat way, tests for these SSH containers in the future can fetch the containerized rse via the same fixture. And, if the need arises, we could handle the initialization and cleanup of the containers through the same fixture mechanism.\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 22, 17, 10, 20, tzinfo=datetime.timezone.utc), 'commenter': 'maany', 'type': 'User'}, {'comment_id': 656425116, 'comment_body': ""Another minor recommendation: It would be better IMO to use the RSEClient for fetching the SSH1 RSE, as done in the fixture referenced in the previous comment for XRD RSE's ;) "", 'comment_created': datetime.datetime(2021, 6, 22, 17, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'maany', 'type': 'User'}, {'comment_id': 656608034, 'comment_body': 'I think the port here should be 22, since this is connecting from inside the network and not the outside.', 'comment_created': datetime.datetime(2021, 6, 22, 21, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'bziemons', 'type': 'User'}, {'comment_id': 656741414, 'comment_body': '@bziemons oh yep i forgot to change it here, thank you', 'comment_created': datetime.datetime(2021, 6, 23, 3, 59, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 656741744, 'comment_body': '@maany correct me if im wrong, you want the containerized_rse function to also return the SSH1 rse right? and further find the RSE through this function instead of executing the command', 'comment_created': datetime.datetime(2021, 6, 23, 4, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 656742906, 'comment_body': '@rcarpa okay ill change 2222:22 to 127.0.0.1:2222:22. Can i know why this is done? Some security issues?', 'comment_created': datetime.datetime(2021, 6, 23, 4, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 656821072, 'comment_body': ""When you export the port to localhost without a specific bind ip, it means that anybody can connect to that port from the local network (if you don't have a firewall). Local network is an extensible thing. For example, when I connect using my LTE modem, it's basically the whole internet. It was already problematic without exposing SSH. However, with a full root ssh access to the container; it is a matter of time until some automatic bot/script ends rooting your developer pc thanks to yet another docker root exploit. Even if you have a firewall, it's still a good idea to add an additional layer of filtering. "", 'comment_created': datetime.datetime(2021, 6, 23, 7, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 656914146, 'comment_body': '@rcarpa Ohh okay. I see, my understanding of this was very limited. Other than just substituting it with 127.0.0.1, what better method would be there for this? (Is this anyway related to port forwarding)', 'comment_created': datetime.datetime(2021, 6, 23, 9, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 656916413, 'comment_body': 'Yup :) ', 'comment_created': datetime.datetime(2021, 6, 23, 9, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'maany', 'type': 'User'}, {'comment_id': 657727394, 'comment_body': ""The containers are not very secure. Exposing them to outside world is an attack vector. I'd even advise for prefixing all exports with `127.0.0.1:` in the dockerfiles. It will already be a huge improvement over current situation. "", 'comment_created': datetime.datetime(2021, 6, 24, 8, 13, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 658736134, 'comment_body': '@rcarpa i see. So changing the EXPOSE commands in all the docker files to add 127.0.0.1 before the port? Shall i make the change and make a PR?\r\n', 'comment_created': datetime.datetime(2021, 6, 25, 12, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 658746726, 'comment_body': 'I vote for doing it if others agree. @bziemons  ?  But not the expose command. Just the ""port"" lines in docker-compose files ', 'comment_created': datetime.datetime(2021, 6, 25, 13, 2, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 659117713, 'comment_body': '@rcarpa oh okay got it.', 'comment_created': datetime.datetime(2021, 6, 26, 4, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 667660694, 'comment_body': '`mkdir -p ssh`\r\n\r\notherwise it will fail if the directory exists', 'comment_created': datetime.datetime(2021, 7, 12, 6, 35, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 667738137, 'comment_body': 'I assume it should only contain your name, as the only author of this file for now. Also valid for other files you created. ', 'comment_created': datetime.datetime(2021, 7, 12, 8, 41, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 667739233, 'comment_body': 'any particular reason to have this distinction of parameter name: impl/impl_passed? ', 'comment_created': datetime.datetime(2021, 7, 12, 8, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rcarpa', 'type': 'User'}, {'comment_id': 668712993, 'comment_body': '@rcarpa thanks! i missed this', 'comment_created': datetime.datetime(2021, 7, 13, 12, 26, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 668713809, 'comment_body': '@rcarpa oh alright i will change that', 'comment_created': datetime.datetime(2021, 7, 13, 12, 27, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 668714886, 'comment_body': '@rcarpa it was giving me errors in the rsemanager file, so i changed it to impl_passed instead of impl there\r\nI can check once more if it throws errors', 'comment_created': datetime.datetime(2021, 7, 13, 12, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 682546820, 'comment_body': 'maybe add a few examples to the help string?', 'comment_created': datetime.datetime(2021, 8, 4, 11, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682550043, 'comment_body': ""i'm not quite getting this config entry. don't think it's needed, right?"", 'comment_created': datetime.datetime(2021, 8, 4, 12, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682553405, 'comment_body': 'Shouldn\'t this say ""WAN READ activity not supported"" ?', 'comment_created': datetime.datetime(2021, 8, 4, 12, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682553748, 'comment_body': ""yep... i don't quite get why this is there."", 'comment_created': datetime.datetime(2021, 8, 4, 12, 7, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682556076, 'comment_body': '""... using posix impl"" ?', 'comment_created': datetime.datetime(2021, 8, 4, 12, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682562141, 'comment_body': 'imports sorted alphabetically', 'comment_created': datetime.datetime(2021, 8, 4, 12, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682579777, 'comment_body': ""with all these things, shouldn't this be using the protocol implementation methods, instead of extra calls to `ssh` ? am i missing something crucial?"", 'comment_created': datetime.datetime(2021, 8, 4, 12, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682580433, 'comment_body': 'missing newline?', 'comment_created': datetime.datetime(2021, 8, 4, 12, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682642410, 'comment_body': 'one space too much :sweat_smile: ', 'comment_created': datetime.datetime(2021, 8, 4, 13, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682643619, 'comment_body': 'at least', 'comment_created': datetime.datetime(2021, 8, 4, 13, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682644127, 'comment_body': 'btw, this exception message is a bit cryptic. can you add an example so people know what they can do to fix it?', 'comment_created': datetime.datetime(2021, 8, 4, 13, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682644497, 'comment_body': 'print which data is missing', 'comment_created': datetime.datetime(2021, 8, 4, 14, 0, 10, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682644839, 'comment_body': ':thinking: ', 'comment_created': datetime.datetime(2021, 8, 4, 14, 0, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682645414, 'comment_body': ':thinking: ', 'comment_created': datetime.datetime(2021, 8, 4, 14, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682647233, 'comment_body': 'DEBUG', 'comment_created': datetime.datetime(2021, 8, 4, 14, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682648025, 'comment_body': '(also check the others loggers like this)', 'comment_created': datetime.datetime(2021, 8, 4, 14, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682649897, 'comment_body': 'sort imports', 'comment_created': datetime.datetime(2021, 8, 4, 14, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682650325, 'comment_body': ':thinking: ', 'comment_created': datetime.datetime(2021, 8, 4, 14, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682651781, 'comment_body': '(and the other files of course :-)', 'comment_created': datetime.datetime(2021, 8, 4, 14, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 682651939, 'comment_body': 'sort imports', 'comment_created': datetime.datetime(2021, 8, 4, 14, 8, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mlassnig', 'type': 'User'}, {'comment_id': 683283656, 'comment_body': 'Not strictly needed, but we discussed this with James and it would be something nice to have.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bari12', 'type': 'User'}, {'comment_id': 683310393, 'comment_body': ""@mlassnig the idea behind this was to give the clients the choice of any preferred protocol implementations they'd like, and the first from the list which is supported by the RSE will be used of the operation"", 'comment_created': datetime.datetime(2021, 8, 5, 9, 58, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 683311312, 'comment_body': '@mlassnig what i mentioned in the previous comment, this was the same thinking behind this function', 'comment_created': datetime.datetime(2021, 8, 5, 10, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 683316323, 'comment_body': 'this is before the initialization before the test cases start (just initializing the files in the required places); i followed similar procedure written for all other protocols (xrd: https://github.com/rucio/rucio/blob/master/lib/rucio/tests/test_rse_protocol_xrootd.py#L107)', 'comment_created': datetime.datetime(2021, 8, 5, 10, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 683346128, 'comment_body': '@mlassnig default value that i had set for the user accessing the SSH server, should i instead set it to """", and if user value is present then assign self.user that value?', 'comment_created': datetime.datetime(2021, 8, 5, 10, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 683350169, 'comment_body': '@mlassnig even the commands will be under debug? (https://github.com/rucio/rucio/blob/master/lib/rucio/rse/protocols/xrootd.py#L83) should the xrootd file also be changed then?', 'comment_created': datetime.datetime(2021, 8, 5, 10, 59, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 683362790, 'comment_body': '@mlassnig is this okay?', 'comment_created': datetime.datetime(2021, 8, 5, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 683371113, 'comment_body': '@mlassnig the particular data missing is being printed the setuphostname function, this is to show that rclone initialization has just failed\r\nis this okay? or should the same data be printed here again?', 'comment_created': datetime.datetime(2021, 8, 5, 11, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}, {'comment_id': 683386934, 'comment_body': '@mlassnig is this okay?', 'comment_created': datetime.datetime(2021, 8, 5, 12, 0, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rak108', 'type': 'User'}]","[{'commit_sha': 'd5237953171a87b6eee5608c878ab835df063653', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c558b07a1b6561f20c09229f99fc5b73437ecacd', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4374318a2a6a954fb68968f4c5ea529c0e0ff2d8', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '152cef1a9b7d14447dfc07599b2eeeae13ee58ba', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b89efcddb835d77c5ebb631d14010d53c85957a', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33288d43907617b56d8e88a48feeb108446dbe84', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bd3f263336d53010b359f4dad8f4b8ccf775db8', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b807370a9805408499b3eecfa40f21cb2661a700', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b9108bd7683eb54b2198c5ffefe8c2da5750b6c', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26700a12067867692bf3b2930e2a8a80bca265a1', 'committer_username': 'mlassnig', 'committer_name': 'Mario Lassnig', 'committer_email': None, 'commit_date': datetime.datetime(2010, 6, 8, 10, 41, 34, tzinfo=datetime.timezone.utc)}]",Rakshita Varadarajan,54491584,rakshitajps@gmail.com,User,,15,,14,28
711200801,"Protocols: GSoC work of impl parameter and SSH, rsync, rclone protocol support","The work done during the GSoC period:

- 'impl' refactoring to be passed as a paremeter
- Protocol support for: SSH, rsync and rclone.
- 'impl' selector algorithm taking into consideration 'impl' supported both locally and by the RSE.
- Added command ""rucio list-impls"" to list implementations supported by Rucio

Please review it and let me know of any changes required anywhere :)",True,4780,https://api.github.com/repos/rucio/rucio/pulls/4780,https://github.com/rucio/rucio/pull/4780,closed,3028,130,35,10,1,0,0,0,[],2021-08-12 16:19:22+00:00,2021-10-29 12:07:08+00:00,6724066.0,"77 days, 19:47:46",[],"[{'commit_sha': 'd5237953171a87b6eee5608c878ab835df063653', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c558b07a1b6561f20c09229f99fc5b73437ecacd', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4374318a2a6a954fb68968f4c5ea529c0e0ff2d8', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '152cef1a9b7d14447dfc07599b2eeeae13ee58ba', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b89efcddb835d77c5ebb631d14010d53c85957a', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33288d43907617b56d8e88a48feeb108446dbe84', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bd3f263336d53010b359f4dad8f4b8ccf775db8', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b807370a9805408499b3eecfa40f21cb2661a700', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b9108bd7683eb54b2198c5ffefe8c2da5750b6c', 'committer_username': 'rak108', 'committer_name': 'Rakshita Varadarajan', 'committer_email': 'rakshitajps@gmail.com', 'commit_date': datetime.datetime(2019, 8, 25, 4, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26700a12067867692bf3b2930e2a8a80bca265a1', 'committer_username': 'mlassnig', 'committer_name': 'Mario Lassnig', 'committer_email': None, 'commit_date': datetime.datetime(2010, 6, 8, 10, 41, 34, tzinfo=datetime.timezone.utc)}]",Rakshita Varadarajan,54491584,rakshitajps@gmail.com,User,,15,,14,28

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
343283694,rucio,rak108/rucio,Python,0,0,1,128,11459,0,5,0,"[{'id': 653660620, 'number': 1, 'closed': datetime.datetime(2022, 3, 17, 5, 3, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 11, 56, 10, tzinfo=datetime.timezone.utc), 'time_taken': 25463229.0, 'time_delta': '294 days, 17:07:09', 'additions': 3028, 'deletions': 130, 'state': 'closed'}]"
109819364,rucio,rucio/rucio,Python,309,243,22,165,13151,259,5,38,"[{'id': 713327414, 'number': 4783, 'closed': datetime.datetime(2021, 8, 18, 11, 56, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 10, 54, 59, tzinfo=datetime.timezone.utc), 'time_taken': 176468.0, 'time_delta': '2 days, 1:01:08', 'additions': 47, 'deletions': 47, 'state': 'closed'}, {'id': 711200801, 'number': 4780, 'closed': datetime.datetime(2021, 10, 29, 12, 7, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 16, 19, 22, tzinfo=datetime.timezone.utc), 'time_taken': 6724066.0, 'time_delta': '77 days, 19:47:46', 'additions': 3028, 'deletions': 130, 'state': 'closed'}, {'id': 628566623, 'number': 4597, 'closed': datetime.datetime(2021, 5, 5, 8, 47, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 2, 7, 24, 42, tzinfo=datetime.timezone.utc), 'time_taken': 264147.0, 'time_delta': '3 days, 1:22:27', 'additions': 122, 'deletions': 1, 'state': 'closed'}, {'id': 598574274, 'number': 4480, 'closed': datetime.datetime(2021, 6, 2, 14, 29, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 6, 9, 30, tzinfo=datetime.timezone.utc), 'time_taken': 6164415.0, 'time_delta': '71 days, 8:20:15', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 598570531, 'number': 4479, 'closed': datetime.datetime(2021, 3, 23, 6, 2, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 6, 2, 17, tzinfo=datetime.timezone.utc), 'time_taken': 25.0, 'time_delta': '0:00:25', 'additions': 7, 'deletions': 5, 'state': 'closed'}, {'id': 595590496, 'number': 4452, 'closed': datetime.datetime(2021, 3, 24, 16, 34, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 18, 13, 52, 47, tzinfo=datetime.timezone.utc), 'time_taken': 528090.0, 'time_delta': '6 days, 2:41:30', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 595535102, 'number': 4450, 'closed': datetime.datetime(2021, 3, 24, 16, 32, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 18, 12, 53, 30, tzinfo=datetime.timezone.utc), 'time_taken': 531568.0, 'time_delta': '6 days, 3:39:28', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 594555130, 'number': 4442, 'closed': datetime.datetime(2021, 3, 25, 9, 35, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 9, 39, 6, tzinfo=datetime.timezone.utc), 'time_taken': 690998.0, 'time_delta': '7 days, 23:56:38', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 593654170, 'number': 4428, 'closed': datetime.datetime(2021, 3, 23, 15, 41, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 16, 7, 35, 53, tzinfo=datetime.timezone.utc), 'time_taken': 633911.0, 'time_delta': '7 days, 8:05:11', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 593215728, 'number': 4424, 'closed': datetime.datetime(2021, 4, 28, 8, 21, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 16, 26, 4, tzinfo=datetime.timezone.utc), 'time_taken': 3772510.0, 'time_delta': '43 days, 15:55:10', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 591414960, 'number': 4403, 'closed': datetime.datetime(2021, 3, 25, 16, 3, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 12, 6, 42, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1156862.0, 'time_delta': '13 days, 9:21:02', 'additions': 43, 'deletions': 45, 'state': 'closed'}]"
