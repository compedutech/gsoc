pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
668894274,headless cloning using pyppeteer,"added headless cloning using pyppeteer
",True,294,https://api.github.com/repos/mushorg/snare/pulls/294,https://github.com/mushorg/snare/pull/294,closed,95,31,3,2,0,6,0,0,[],2021-06-12 15:31:35+00:00,2021-06-28 12:35:54+00:00,1371859.0,"15 days, 21:04:19","[{'comment_id': 650514998, 'comment_body': 'your function is async, use async sleep', 'comment_created': datetime.datetime(2021, 6, 13, 11, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 650515326, 'comment_body': 'do we want to stick to async version? All our functions are async, and I think it makes sense to use async libs like https://github.com/pyppeteer/pyppeteer\r\n@lordlabuckdas @mzfr what do you think?', 'comment_created': datetime.datetime(2021, 6, 13, 12, 1, 5, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 653094223, 'comment_body': 'just out of curiosity, why so many new requirements? :) And do we need to set a version for each?', 'comment_created': datetime.datetime(2021, 6, 16, 22, 20, 54, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 653238752, 'comment_body': 'Apart from the original `requirements.txt`, I only installed `pyppeteer`. Maybe these are dependencies? I think setting a version would make Snare more stable.', 'comment_created': datetime.datetime(2021, 6, 17, 5, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 653968427, 'comment_body': 'Do you think it will be a good idea to split the headless/non-headless parts into the separate functions (or even classes with the common interface)?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}]","[{'commit_sha': 'cd00f8723211132787a2e60385c7f968d37ed377', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdd93fa62a2478f44227f97d6da4a56d9574224a', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
673858953,retrying of urls,"* I have redesigned the `new_urls` queue to facilitate retrying of URLs.
* Each item of `new_urls` is a tuple of a tuple and integer - `((current_url: str, level: int), try_count: int)`.
* If the data is not successfully retrieved, the URL is again added to the queue with its`try_count` increased by one.
* The URL is tried for at-most 2 times before being dropped.
* Retrying of URLs is all the more important in the case of headless cloning where there is a high chance of timeouts or connection errors.

PR is currently in draft to accommodate changes of headless cloning.",True,298,https://api.github.com/repos/mushorg/snare/pulls/298,https://github.com/mushorg/snare/pull/298,closed,14,10,1,1,2,0,0,0,[],2021-06-19 10:28:52+00:00,2021-06-29 10:37:48+00:00,864536.0,"10 days, 0:08:56",[],"[{'commit_sha': '0c23661068ed295506a8ba6b41876fc400bb50e8', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
682782045,fix meta-write issue + url serving by snare,"* better error handling
* as suggested by @afeena, the process of writing meta info and closing the driver has been shifted to the `CloneRunner.close` method to ensure it is always executed
* fix bug in serving \-ending URLs
* `/` has replaced `/index.html` as the index page to make it compatible with different index file types",True,301,https://api.github.com/repos/mushorg/snare/pulls/301,https://github.com/mushorg/snare/pull/301,closed,90,84,4,1,0,0,0,0,[],2021-07-02 17:32:05+00:00,2021-07-05 19:17:55+00:00,265550.0,"3 days, 1:45:50",[],"[{'commit_sha': '49b90bf9de09bfeb567fd813ee797693105037da', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
695962187,accurate exception handling in page.close,"* If `KeyboardInterrupt` is raised midway headless cloning, then a `PageError` is raised while closing the `Page` object. The raised exception can be safely ignored as the execution comes to a halt after it but there is no way to avoid a try-except in the finally part of `HeadlessCloner.fetch_data`.
* The `Content-Type` header might sometimes contain character set information like, `Content-Type: text/html; charset=utf-8`. To accommodate this, we can check for *presence* rather than *equality*. Sometimes, `Content-Type` is not set and to avoid `TypeError` by iteration in a `NoneType` object, we check if it is not `None` first.",True,305,https://api.github.com/repos/mushorg/snare/pulls/305,https://github.com/mushorg/snare/pull/305,closed,10,7,1,4,0,1,0,0,[],2021-07-23 13:56:40+00:00,2021-07-27 13:33:18+00:00,344198.0,"3 days, 23:36:38","[{'comment_id': 675990958, 'comment_body': 'I think writing this block in the following way would be nice\r\n\r\n```python\r\nif content_type:\r\n\tif ""text/html"" in content_type:\r\n\t\t.....\r\n\telif/else ANOTHER_CONDITION_HERE:\r\n\t\t.....\r\n```\r\n\r\nOther than this everything looks good :)\r\n', 'comment_created': datetime.datetime(2021, 7, 24, 12, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mzfr', 'type': 'User'}]","[{'commit_sha': 'b358c2b85cd327f3b163d86eb6cc4d58ac8dcad0', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b39b385fb61755753efe4a1f4570a6fe0caf919', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04a75d6e1244db0352edc9b4575a5f62650c2205', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6969e4d081cb4f9c88aa7f93703aa71f6df64d44', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
689273747,feature: redirects,"### Major changes

Pages can now redirect, similar to the actual website.

`meta.json` structure:

```json
{
    ""/"":
        {
            ""redirect"": ""/new/home/""
        },
    ""/new/home/"":
        {
            ""hash"": ""fb4b89f45c474f455a089130db94b00a"",
            ""headers"": [{""Content-Type"": ""text/html""}]
        }
}
```

### Minor changes

* Replaced `counter` with `len(visited_urls)`
* `Transfer-Encoding` header has been added to the ignore list",True,302,https://api.github.com/repos/mushorg/snare/pulls/302,https://github.com/mushorg/snare/pull/302,closed,64,40,5,2,1,3,0,0,[],2021-07-13 17:43:07+00:00,2021-07-15 07:52:28+00:00,137361.0,"1 day, 14:09:21","[{'comment_id': 669833409, 'comment_body': 'for which assert statement this exception is intended?', 'comment_created': datetime.datetime(2021, 7, 14, 17, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 669848453, 'comment_body': 'Sometimes when cloner is being run, the connection is closed abruptly by the website - probably due to spam or DDoS protection.\r\n\r\nI think `AssertionError` is raised when the port is freed up by the website and not by aiohttp.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File ""/home/user/.virtualenvs/snare_venv/bin/clone"", line 4, in <module>\r\n    __import__(\'pkg_resources\').run_script(\'Snare==0.3.0\', \'clone\')\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/pkg_resources/__init__.py"", line 651, in run_script\r\n    self.require(requires)[0].run_script(script_name, ns)\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/pkg_resources/__init__.py"", line 1455, in run_script\r\n    exec(script_code, namespace, namespace)\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/Snare-0.3.0-py3.9.egg/EGG-INFO/scripts/clone"", line 92, in <module>\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/Snare-0.3.0-py3.9.egg/EGG-INFO/scripts/clone"", line 66, in main\r\n  File ""/usr/lib/python3.9/asyncio/base_events.py"", line 642, in run_until_complete\r\n    return future.result()\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/Snare-0.3.0-py3.9.egg/snare/cloner.py"", line 276, in run\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/Snare-0.3.0-py3.9.egg/snare/cloner.py"", line 165, in get_body\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/Snare-0.3.0-py3.9.egg/snare/cloner.py"", line 209, in fetch_data\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/aiohttp/client.py"", line 520, in _request\r\n    conn = await self._connector.connect(\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/aiohttp/connector.py"", line 535, in connect\r\n    proto = await self._create_connection(req, traces, timeout)\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/aiohttp/connector.py"", line 892, in _create_connection\r\n    _, proto = await self._create_direct_connection(req, traces, timeout)\r\n  File ""/home/user/.virtualenvs/snare_venv/lib/python3.9/site-packages/aiohttp/connector.py"", line 991, in _create_direct_connection\r\n    assert port is not None\r\nAssertionError\r\n\r\n```', 'comment_created': datetime.datetime(2021, 7, 14, 18, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 669857495, 'comment_body': 'then probably it would be better to move this exception close to the method which raises it', 'comment_created': datetime.datetime(2021, 7, 14, 18, 32, 43, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}]","[{'commit_sha': 'ab2c882cae182cbd321dd17217b9deaaf0cdb5b7', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aae3cc20e49bb22410972a03c2dc471eceeac433', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
691431150,fix missing error page and improper redirects,"As encountered in #230. some websites do not have a 404 template configured or redirect to the home page. To fix, this
1. An empty page is created
2. Or if the website redirects, it is caught by comparing the requested and returned URL (ref #302).

**Other fixes:**

* The `get_headers(response_headers: CIMultiDict) -> headers: list` method now returns the content type as well. This was done to optimize the working of Cloner and prevent a call to `get_content_type` which iterates through the list of headers to fetch the content type. From
    `get_headers(response_headers: CIMultiDict) -> headers: list` to
    `get_headers(response_headers:CIMultiDict) -> list[headers: list, content_type: str]`

* Moved the `Content-Type` header from `headers` key in meta info to a separate key
    From
    ```json
    ""/about"": {
        ""hash"": ""abcd"",
        ""headers"": [{""Server"": ""Apache""}, {""Content-Type"": ""text/html""}]
    }
    ```
    to
    ```json
    ""/about"": {
        ""hash"": ""abcd"",
        ""headers"": [{""Server"": ""Apache""}],
        ""content_type"": ""text/html""
    }
    ```
    This was done because [tanner_handler.py#L111](https://github.com/mushorg/snare/blob/c917c4b2082ef5c1cea9a3236939b3a6a4015452/snare/utils/snare_helpers.py#L111) and [snare_helpers.py#L96](https://github.com/mushorg/snare/blob/c917c4b2082ef5c1cea9a3236939b3a6a4015452/snare/tanner_handler.py#L96) already check for it and overwrite the `Content-Type` header.",True,303,https://api.github.com/repos/mushorg/snare/pulls/303,https://github.com/mushorg/snare/pull/303,closed,24,21,3,4,0,5,0,0,[],2021-07-16 11:53:37+00:00,2021-07-23 09:13:01+00:00,595164.0,"6 days, 21:19:24","[{'comment_id': 673488226, 'comment_body': 'I just spot we have initialization error in close function 🤔 ', 'comment_created': datetime.datetime(2021, 7, 20, 20, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 673494702, 'comment_body': 'Do we really need an empty page? Why not letting aiohttp handle this?\r\nhttps://docs.aiohttp.org/en/latest/web_exceptions.html', 'comment_created': datetime.datetime(2021, 7, 20, 21, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 673638104, 'comment_body': ""Strangely enough, that check is there just to be thorough and satisfy linter warnings. If you are referring to an instance where the error was actually raised, could you please share the steps to replicate it? I've tried it with multiple websites and it seems to work fine."", 'comment_created': datetime.datetime(2021, 7, 21, 3, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 673987456, 'comment_body': 'Yeah I agree instead of generating a new empty page we should just let aiohttp handle that', 'comment_created': datetime.datetime(2021, 7, 21, 13, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mzfr', 'type': 'User'}, {'comment_id': 674978682, 'comment_body': 'Special if-check for status code 404 because returning `web.Response` with `status_code=404` did not work as intended.', 'comment_created': datetime.datetime(2021, 7, 22, 16, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}]","[{'commit_sha': '6830121af67d50786bed1958e8656fdab7b6deed', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a04ce72cd3e662c9d42e4d7aefdd3e4ca9457be9', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22e5b091e2e274dac7d55adcd68959b27b960a4c', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a2055754e8236cdaed5245a802c142f0b977bb5', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
704908559,error templating fixes,"* Snare cannot be made completely non-fingerprint-able because a malformed request triggers a 400 exception which cannot be handled by aiohttp _at the moment_ (ref [aiohttp#5358](https://github.com/aio-libs/aiohttp/issues/5358) and [aiohttp#3287](https://github.com/aio-libs/aiohttp/issues/3287)).
* This PR ensures that proper headers are assigned during 404 and 500 errors.
* `HttpRequestHandler.remove_default_server_header` removes the default Server header to prevent leakage of the aiohttp server banner.",True,308,https://api.github.com/repos/mushorg/snare/pulls/308,https://github.com/mushorg/snare/pull/308,closed,25,16,3,3,0,3,0,0,[],2021-08-05 17:51:47+00:00,2021-08-14 10:10:08+00:00,749901.0,"8 days, 16:18:21","[{'comment_id': 684252801, 'comment_body': ""@lordlabuckdas Can you please explain what is happening here? Why are we triggering NotFound error when `self.error_404` is not set? Shouldn't it be triggered when `self.error_404` is set?"", 'comment_created': datetime.datetime(2021, 8, 6, 13, 52, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mzfr', 'type': 'User'}, {'comment_id': 684311665, 'comment_body': ""`self.error_404` contains the hash/file name of the 404 page. In case websites do not have a 404 template set, `self.error_404` should be `None` and so we're triggering the exception manually with the headers. If the file is present, we're serving the page using Jinja's `render_template` function."", 'comment_created': datetime.datetime(2021, 8, 6, 15, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 684319016, 'comment_body': 'Oh okay, I thought a boolean value would be assigned to the error_404 variable.\r\n\r\nYour explanation makes sense.\r\n', 'comment_created': datetime.datetime(2021, 8, 6, 15, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mzfr', 'type': 'User'}]","[{'commit_sha': 'b78f4d23bc75b9916755646ba623da1684c27971', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dda365ea6db4ea33da9ee666b410f842a381a9c8', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9de6872b66cab7234ee2b91aec90803d2bbd101', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
693663793,updated tests,"* Added and updated old tests to be compatible with the new cloner architecture.
* Some mocks (like that of `aiohttp.ClientResponse.read` and `aiohttp.ClientResponse._headers`) influenced tests other than their own and that caused some tests to fail. To prevent this, I have used `unittest.mock.patch` by assigning it to a variable (or appending it to a list if there are many mocks) to track (start and stop) them.
* Formatted code and organized imports (ref last commit).",True,304,https://api.github.com/repos/mushorg/snare/pulls/304,https://github.com/mushorg/snare/pull/304,closed,482,203,34,22,2,18,0,0,[],2021-07-20 17:40:44+00:00,2021-08-04 21:51:23+00:00,1311039.0,"15 days, 4:10:39","[{'comment_id': 677455224, 'comment_body': 'why have you decided to remove async context manager? ', 'comment_created': datetime.datetime(2021, 7, 27, 13, 34, 50, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 677484704, 'comment_body': 'Because while running `test_cloner_get_root_host` with context manager for response, it gave this error\r\n\r\n```\r\nself = <snare.cloner.BaseCloner object at 0x7f97a0f892d0>\r\n\r\n    async def get_root_host(self):\r\n        try:\r\n            async with aiohttp.ClientSession() as session:\r\n>               async with session.get(self.root) as resp:\r\nE               AttributeError: __aexit__\r\n\r\nsnare/cloner.py:215: AttributeError\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 14, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 679531770, 'comment_body': 'you have this check in multiple tests, why not checking it in setup?', 'comment_created': datetime.datetime(2021, 7, 29, 22, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 679532766, 'comment_body': 'what are you testing here? what is the purpose of this test? what is expected behaviour? Right now it looks for me not like an unittest test, but rather like just running the code', 'comment_created': datetime.datetime(2021, 7, 29, 22, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 679532970, 'comment_body': 'see my previous comment', 'comment_created': datetime.datetime(2021, 7, 29, 22, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 679533673, 'comment_body': 'test should check how function handles the exception, it should not handle it', 'comment_created': datetime.datetime(2021, 7, 29, 22, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 679534237, 'comment_body': 'see previous comments', 'comment_created': datetime.datetime(2021, 7, 29, 22, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 679534425, 'comment_body': 'you have similar mock before, can it be reused?', 'comment_created': datetime.datetime(2021, 7, 29, 22, 50, 56, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 679535119, 'comment_body': 'seems rather useless', 'comment_created': datetime.datetime(2021, 7, 29, 22, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 679535277, 'comment_body': 'do we really need these init tests? what it brings? how it helps to prevent errors?\r\nif we have something specific in init, we should test this specific case, not just instance', 'comment_created': datetime.datetime(2021, 7, 29, 22, 53, 14, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 679538237, 'comment_body': 'see above', 'comment_created': datetime.datetime(2021, 7, 29, 23, 1, 21, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 679538302, 'comment_body': 'same', 'comment_created': datetime.datetime(2021, 7, 29, 23, 1, 29, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 679797945, 'comment_body': 'I had kept it for linter checks, but with my recent push I have now shifted it to `setUp` as you suggested.', 'comment_created': datetime.datetime(2021, 7, 30, 9, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 679799390, 'comment_body': 'I have now removed some of the tests from `fetch_data` as the function itself is pretty straight-forward and the tests for `get_body` already cover its general use-case.', 'comment_created': datetime.datetime(2021, 7, 30, 9, 49, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 679801327, 'comment_body': 'The `try-finally` block was not intended to handle the errors, but I realized it was not very useful and have now replaced it with the direct calls.', 'comment_created': datetime.datetime(2021, 7, 30, 9, 52, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 679802766, 'comment_body': ""I think each of the mocks are unique, so they can't be reduced, but to reduce the visual clutter, I have introduced a separate `create_client_response` method which takes the URL and event loop as arguments to return the ClientResponse object."", 'comment_created': datetime.datetime(2021, 7, 30, 9, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 679804612, 'comment_body': 'I have now kept only the test where there is a initialization error and have removed the rest. On this note, what do you think about the tests for the run method?', 'comment_created': datetime.datetime(2021, 7, 30, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}]","[{'commit_sha': '2fc76633a3872ac74b4ffa2345ba35e848313c63', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a1fa409d08162a3205471225a8eedf2b2ec4bb7', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab3a8b34e01bab5f0032d4c3a7346c32f364ad64', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7dc963e96298a17b10553fa707b7f55ab51575a', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fc64246c79faa00a516a563a0aaf7a3883122f1', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '825d18d1fdb60eee13e0b62171451b07ae4563c0', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0f7ecd93090233b8655963d00dd125c94f1d05d', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '177ade05629fb945feb90fbb91e3cebc569c4a80', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e1df24d342ae4cb31a3c760338dd19f455b4c39', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be36408ef28ab2222c373dd3cf1cbbf3afe6f7a6', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '175206504dcfbe9ddd14a6e220e6ce045818dfc3', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b71674edd5c569863a46f0d32fd41f9fcebf5f3', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f53fcb7d8cdd7fd179f638842cb275cfd49f81d1', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cde3b7167cdc7ab6cb0f6acf4cb326b8305524f6', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '348cb42409a9af4f64b4d096c28afca15768b52c', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8719497d6def6d9a3608471cafe5fcf485691771', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0efab5ceb47ea908483cb4efa8663645ecaef87', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c7c7fc1d2fc2bb150a98cb87a7c59c244122f7f', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b3cca05abb2907ddb41593dc7bebd590983c24b', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '913587daf7574a534712923feb5faa963db118c3', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a4025b6f812456093312db688aebc47fc97de62', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a58d3db05e758532e4e999494751476dd03feb4', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
671851980,fix css validation logging + refactor code,"* `end_time` being calculated in the `finally` part of the block guarantees that printing elapsed time will not error out due its non-initialization. This however increases the end time (though by an insignificant amount) due to cloner shutting down.
* Improved output formatting issues with the spinner animation.
* Cloner shows CSS validation despite it being disabled by default. This was because CSS validation was set to use the default logger. This PR makes sure that all CSS validation is sent to the logs and disables it if set to False.
* With this PR, the presence of the `--css-validate` flag enables CSS validation and does not require the user to enter ""true"" or ""false"" after it.
* `itr`, used as the index of the spinner animation, will now never exceed `len(animation)-1`",True,297,https://api.github.com/repos/mushorg/snare/pulls/297,https://github.com/mushorg/snare/pull/297,closed,47,65,12,1,0,0,0,0,[],2021-06-16 20:07:29+00:00,2021-06-16 22:18:57+00:00,7888.0,2:11:28,[],"[{'commit_sha': '54ab16a4a1b0a628ba5e3c08df6a795e04eaed27', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
696328240,newer libraries and bug fix,"### Requirements

* `requirements.txt` has been updated with newer modules after testing.
* Requirements now make use of `~=` instead of `==` to allow newer versions without breaking changes (due to major releases).
* For example, assume that the latest version of `my-module` is **3.2** in the 3.x release cycle and **2.9** in the 2.x release cycle.
* `my-module~=2.3~` in `requirements.txt` will download `v2.9` of `my-module`.

### Minor bug fix

* While downloading CSS files, `response.buffer()` in `HeadlessCloner.fetch_data` returns a `string` instead of the usual `bytes`. This caused the write operation in binary mode to fail.
* Thus, a check to properly encode the data string into bytes has been introduced.",True,306,https://api.github.com/repos/mushorg/snare/pulls/306,https://github.com/mushorg/snare/pull/306,closed,9,7,2,2,0,0,0,0,[],2021-07-24 10:12:44+00:00,2021-07-24 13:07:11+00:00,10467.0,2:54:27,[],"[{'commit_sha': '3b28d41e16e549a0d0ce0fdef66ba08df54fd376', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2203a086ec16ff65e55ea693d5ba57f6a1941d38', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
700495064,update docs with headless cloning info,,True,307,https://api.github.com/repos/mushorg/snare/pulls/307,https://github.com/mushorg/snare/pull/307,closed,16,5,1,1,0,0,0,0,[],2021-07-30 18:41:06+00:00,2021-08-04 21:47:09+00:00,443163.0,"5 days, 3:06:03",[],"[{'commit_sha': '582a05b8903cf9f02020c2ecd7da4f3b987bee05', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16
712977661,add docstrings,,False,309,https://api.github.com/repos/mushorg/snare/pulls/309,https://github.com/mushorg/snare/pull/309,open,612,66,15,11,0,7,0,0,[],2021-08-15 17:59:11+00:00,,0.0,,"[{'comment_id': 693146061, 'comment_body': 'do we need type if the type annotated in function definition?', 'comment_created': datetime.datetime(2021, 8, 20, 18, 37, 4, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 693150537, 'comment_body': 'what is Snare-friendly format? :)', 'comment_created': datetime.datetime(2021, 8, 20, 18, 44, 59, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 693154017, 'comment_body': 'what does it mean ""suitable""? try to be more concrete, maybe even with example', 'comment_created': datetime.datetime(2021, 8, 20, 18, 51, 34, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 693155319, 'comment_body': 'consider adding the docstring for the class as well', 'comment_created': datetime.datetime(2021, 8, 20, 18, 53, 51, tzinfo=datetime.timezone.utc), 'commenter': 'afeena', 'type': 'User'}, {'comment_id': 695091002, 'comment_body': 'Yes, Sphinx [mandates it](https://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html#the-sphinx-docstring-format) and the type disappears from the parameter description in docs when we remove its `:type` from the docstring.', 'comment_created': datetime.datetime(2021, 8, 24, 18, 16, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 695093645, 'comment_body': 'Have clarified it in 58eafef. Will add detailed descriptions to this and other functions in the next series of commits.', 'comment_created': datetime.datetime(2021, 8, 24, 18, 20, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}, {'comment_id': 695095059, 'comment_body': 'I meant to convey the renaming of files to their hashes but I now realize it sounds very vague. I have clarified it in 58eafef.', 'comment_created': datetime.datetime(2021, 8, 24, 18, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'lordlabuckdas', 'type': 'User'}]","[{'commit_sha': 'b5014ded1685625bbe8db24ca119860a212e131d', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cd7d1e62f7927db4dc8b5aeeb4ecf5e645e25ab', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b0efb7ca4839960e71cee076a74ca5b84f2590b', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6bc07e50604e465fc3b519d26fe15c53a541b64', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e864bbbb3bf6523c590476dcaecc2ba6c7470f6b', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d633a7544810debc3003f94a9c6c5eddfeb52e8', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08da1fa38bebe85ed095ebe7d4f89ed06ac79285', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58eafef57c95bfcbbc8482fc84ac7b80c5684dc3', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5dd6b81eb06c7e5591fdd730a3db6246e3558c7', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29df6afb8c97cb465597bf65e1e3ca7f41273a75', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7ce9189df4709e1b3a2344b6482d7f59604ef6b', 'committer_username': 'lordlabuckdas', 'committer_name': 'krishna', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 17, 19, 0, 22, tzinfo=datetime.timezone.utc)}]",krishna,55460753,,User,,32,,17,16

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
38716676,snare,mushorg/snare,Python,135,438,34,28,188,24,6,4,"[{'id': 712977661, 'number': 309, 'closed': None, 'created': datetime.datetime(2021, 8, 15, 17, 59, 11, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 612, 'deletions': 66, 'state': 'open'}, {'id': 704908559, 'number': 308, 'closed': datetime.datetime(2021, 8, 14, 10, 10, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 17, 51, 47, tzinfo=datetime.timezone.utc), 'time_taken': 749901.0, 'time_delta': '8 days, 16:18:21', 'additions': 25, 'deletions': 16, 'state': 'closed'}, {'id': 700495064, 'number': 307, 'closed': datetime.datetime(2021, 8, 4, 21, 47, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 30, 18, 41, 6, tzinfo=datetime.timezone.utc), 'time_taken': 443163.0, 'time_delta': '5 days, 3:06:03', 'additions': 16, 'deletions': 5, 'state': 'closed'}, {'id': 696328240, 'number': 306, 'closed': datetime.datetime(2021, 7, 24, 13, 7, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 10, 12, 44, tzinfo=datetime.timezone.utc), 'time_taken': 10467.0, 'time_delta': '2:54:27', 'additions': 9, 'deletions': 7, 'state': 'closed'}, {'id': 695962187, 'number': 305, 'closed': datetime.datetime(2021, 7, 27, 13, 33, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 13, 56, 40, tzinfo=datetime.timezone.utc), 'time_taken': 344198.0, 'time_delta': '3 days, 23:36:38', 'additions': 10, 'deletions': 7, 'state': 'closed'}, {'id': 693663793, 'number': 304, 'closed': datetime.datetime(2021, 8, 4, 21, 51, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 17, 40, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1311039.0, 'time_delta': '15 days, 4:10:39', 'additions': 482, 'deletions': 203, 'state': 'closed'}, {'id': 691431150, 'number': 303, 'closed': datetime.datetime(2021, 7, 23, 9, 13, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 11, 53, 37, tzinfo=datetime.timezone.utc), 'time_taken': 595164.0, 'time_delta': '6 days, 21:19:24', 'additions': 24, 'deletions': 21, 'state': 'closed'}, {'id': 689273747, 'number': 302, 'closed': datetime.datetime(2021, 7, 15, 7, 52, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 17, 43, 7, tzinfo=datetime.timezone.utc), 'time_taken': 137361.0, 'time_delta': '1 day, 14:09:21', 'additions': 64, 'deletions': 40, 'state': 'closed'}, {'id': 682782045, 'number': 301, 'closed': datetime.datetime(2021, 7, 5, 19, 17, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 17, 32, 5, tzinfo=datetime.timezone.utc), 'time_taken': 265550.0, 'time_delta': '3 days, 1:45:50', 'additions': 90, 'deletions': 84, 'state': 'closed'}, {'id': 678321739, 'number': 300, 'closed': datetime.datetime(2021, 7, 2, 7, 37, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 26, 11, 21, 55, tzinfo=datetime.timezone.utc), 'time_taken': 504946.0, 'time_delta': '5 days, 20:15:46', 'additions': 76, 'deletions': 72, 'state': 'closed'}, {'id': 673858953, 'number': 298, 'closed': datetime.datetime(2021, 6, 29, 10, 37, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 10, 28, 52, tzinfo=datetime.timezone.utc), 'time_taken': 864536.0, 'time_delta': '10 days, 0:08:56', 'additions': 14, 'deletions': 10, 'state': 'closed'}, {'id': 671851980, 'number': 297, 'closed': datetime.datetime(2021, 6, 16, 22, 18, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 20, 7, 29, tzinfo=datetime.timezone.utc), 'time_taken': 7888.0, 'time_delta': '2:11:28', 'additions': 47, 'deletions': 65, 'state': 'closed'}, {'id': 668894274, 'number': 294, 'closed': datetime.datetime(2021, 6, 28, 12, 35, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 15, 31, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1371859.0, 'time_delta': '15 days, 21:04:19', 'additions': 95, 'deletions': 31, 'state': 'closed'}, {'id': 613327991, 'number': 289, 'closed': None, 'created': datetime.datetime(2021, 4, 12, 6, 58, 55, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 23, 'deletions': 2, 'state': 'open'}, {'id': 538385485, 'number': 279, 'closed': datetime.datetime(2021, 2, 3, 18, 49, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 12, 18, 50, 53, tzinfo=datetime.timezone.utc), 'time_taken': 4579095.0, 'time_delta': '52 days, 23:58:15', 'additions': 290, 'deletions': 125, 'state': 'closed'}, {'id': 471729860, 'number': 275, 'closed': datetime.datetime(2020, 8, 22, 7, 3, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 16, 29, 32, tzinfo=datetime.timezone.utc), 'time_taken': 52439.0, 'time_delta': '14:33:59', 'additions': 31, 'deletions': 11, 'state': 'closed'}]"
