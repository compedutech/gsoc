pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
470423573,updated documentation generated by roxygen2.,This PR updates the recent changes in documentation.,True,46,https://api.github.com/repos/animint/animint2/pulls/46,https://github.com/animint/animint2/pull/46,closed,55,91,17,3,3,0,0,0,[],2020-08-19 20:02:28+00:00,2020-08-20 06:52:39+00:00,39011.0,10:50:11,[],"[{'commit_sha': '331ecf9dc27cacaa8aa70813609d7aab1ec00a5e', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34ed03cd14453919604b80bb0524a81230d9731b', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1ac35531487e5ae1bc3d63697accd96ceff68a2', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}]",Himanshu Singh,17141301,,User,,71,,49,198
470423573,updated documentation generated by roxygen2.,This PR updates the recent changes in documentation.,True,46,https://api.github.com/repos/animint/animint2/pulls/46,https://github.com/animint/animint2/pull/46,closed,55,91,17,3,3,0,0,0,[],2020-08-19 20:02:28+00:00,2020-08-20 06:52:39+00:00,39011.0,10:50:11,[],"[{'commit_sha': '331ecf9dc27cacaa8aa70813609d7aab1ec00a5e', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34ed03cd14453919604b80bb0524a81230d9731b', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1ac35531487e5ae1bc3d63697accd96ceff68a2', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}]",Himanshu Singh,17141301,,User,,71,,49,198
472711596,Add new aesthetics to work with selected data.,This PR will implement new aesthetics to animint2.,False,50,https://api.github.com/repos/animint/animint2/pulls/50,https://github.com/animint/animint2/pull/50,closed,17,2,1,2,2,2,0,0,[],2020-08-24 19:11:57+00:00,2021-04-05 18:42:03+00:00,19351806.0,"223 days, 23:30:06","[{'comment_id': 475847990, 'comment_body': 'please avoid committing changes that are irrelevant to the topic of PR', 'comment_created': datetime.datetime(2020, 8, 24, 19, 35, 44, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 475849099, 'comment_body': 'params.hasOwnProperty(""alpha_off"") instead?', 'comment_created': datetime.datetime(2020, 8, 24, 19, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}]","[{'commit_sha': '0a04163cf313219c1fa8a5456f1f912cff254e24', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e69499e7f78828701c97ead82d339a30bc0ba6e', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}]",Himanshu Singh,17141301,,User,,71,,49,198
472711596,Add new aesthetics to work with selected data.,This PR will implement new aesthetics to animint2.,False,50,https://api.github.com/repos/animint/animint2/pulls/50,https://github.com/animint/animint2/pull/50,closed,17,2,1,2,2,2,0,0,[],2020-08-24 19:11:57+00:00,2021-04-05 18:42:03+00:00,19351806.0,"223 days, 23:30:06","[{'comment_id': 475847990, 'comment_body': 'please avoid committing changes that are irrelevant to the topic of PR', 'comment_created': datetime.datetime(2020, 8, 24, 19, 35, 44, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 475849099, 'comment_body': 'params.hasOwnProperty(""alpha_off"") instead?', 'comment_created': datetime.datetime(2020, 8, 24, 19, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}]","[{'commit_sha': '0a04163cf313219c1fa8a5456f1f912cff254e24', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e69499e7f78828701c97ead82d339a30bc0ba6e', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}]",Himanshu Singh,17141301,,User,,71,,49,198
446923285,Fixing test issues and R4 fixes,"Fixed:

- knitr import issue
- removed redundant examples
- use new grid::unitType() to determine unit type
- stringsAsFactors=TRUE in Inf test

All tests passing on forked one: https://travis-ci.org/github/lazycipher/animint2",True,42,https://api.github.com/repos/animint/animint2/pulls/42,https://github.com/animint/animint2/pull/42,closed,314,406,9,9,12,10,0,0,[],2020-07-09 15:10:11+00:00,2020-07-15 10:50:16+00:00,502805.0,"5 days, 19:40:05","[{'comment_id': 453084909, 'comment_body': 'why do you need this if????\r\nwould be easier to understand (less repetitive) using %in% rather than ||, \r\n```r\r\nif(something %in% c(val1, val2))\r\n```', 'comment_created': datetime.datetime(2020, 7, 10, 21, 27, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 453085484, 'comment_body': 'maybe add a comment to explain why we want to values to be unequal after conversion? not easy to understand the context of where this test comes from ...', 'comment_created': datetime.datetime(2020, 7, 10, 21, 29, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 453152986, 'comment_body': ""Got you! I'll rectify it!"", 'comment_created': datetime.datetime(2020, 7, 11, 4, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 453152997, 'comment_body': 'Sure thing!', 'comment_created': datetime.datetime(2020, 7, 11, 4, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 453771293, 'comment_body': 'hey @lazycipher  did you edit this is.rgb function at all? I dont see any changes. (did the line endings change or something?)\r\nif there are no significant changes (white space etc) then please do NOT commit, because it makes it more difficult to code review.', 'comment_created': datetime.datetime(2020, 7, 13, 16, 21, 57, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 453779772, 'comment_body': ""I made changes in the pt.to.lines function.\nIt looks like there's some issue with the line endings!\nI really don't understand why whole file shows as edited while I do change just few lines.\nEven on VS Code, It was showing 1 line change before committing."", 'comment_created': datetime.datetime(2020, 7, 13, 16, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 453799765, 'comment_body': 'you should always review the output of the ""git diff"" command before you do a ""git commit"" and make sure to remove any parts of the diff which are not relevant to the intended change you are trying to make.\r\nIn terms of editors I would recommend using Emacs for this project because there is good support for both R (via ESS) and JavaScript editing. Or try Rstudio if Emacs is too complicated for you to learn right now (but if you want to become a good programmer you should learn at least one of the two classic editors, emacs and vim)', 'comment_created': datetime.datetime(2020, 7, 13, 17, 8, 14, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 454108530, 'comment_body': ""I'll make sure to follow this up from now on. I'll use Emacs from now on for this project."", 'comment_created': datetime.datetime(2020, 7, 14, 5, 22, 56, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 454110247, 'comment_body': 'here are some videos I made about emacs + ess https://www.youtube.com/playlist?list=PLwc48KSH3D1Onsed66FPLywMSIQmAhUYJ', 'comment_created': datetime.datetime(2020, 7, 14, 5, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 454113679, 'comment_body': ""Thank you so much! I'll go through this."", 'comment_created': datetime.datetime(2020, 7, 14, 5, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}]","[{'commit_sha': '998c115225b83f872472e2b422c277266bd55980', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ceab3ae2bd9650c491c58a5231c72b5fed1fc24', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f111f28c7321a756552cdb783674238c1b749f8', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c853598c6ad21eebec91b8e3fcceda1689b1ca', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f6d5bdb5b8796ff9375205bc36475a4ac9bb870', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93be4b14fe8fcb032163d1dcdd753e43d5e60113', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2b645b2ae8590c1d07c2453437cb4ac71fe5a74', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fd7b30610b7bcbbe704c53fdefc5b110c9b8902', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dac1ae4bb1795a1bebb0558aa6836a98f99fce9c', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}]",Himanshu Singh,17141301,,User,,71,,49,198
446923285,Fixing test issues and R4 fixes,"Fixed:

- knitr import issue
- removed redundant examples
- use new grid::unitType() to determine unit type
- stringsAsFactors=TRUE in Inf test

All tests passing on forked one: https://travis-ci.org/github/lazycipher/animint2",True,42,https://api.github.com/repos/animint/animint2/pulls/42,https://github.com/animint/animint2/pull/42,closed,314,406,9,9,12,10,0,0,[],2020-07-09 15:10:11+00:00,2020-07-15 10:50:16+00:00,502805.0,"5 days, 19:40:05","[{'comment_id': 453084909, 'comment_body': 'why do you need this if????\r\nwould be easier to understand (less repetitive) using %in% rather than ||, \r\n```r\r\nif(something %in% c(val1, val2))\r\n```', 'comment_created': datetime.datetime(2020, 7, 10, 21, 27, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 453085484, 'comment_body': 'maybe add a comment to explain why we want to values to be unequal after conversion? not easy to understand the context of where this test comes from ...', 'comment_created': datetime.datetime(2020, 7, 10, 21, 29, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 453152986, 'comment_body': ""Got you! I'll rectify it!"", 'comment_created': datetime.datetime(2020, 7, 11, 4, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 453152997, 'comment_body': 'Sure thing!', 'comment_created': datetime.datetime(2020, 7, 11, 4, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 453771293, 'comment_body': 'hey @lazycipher  did you edit this is.rgb function at all? I dont see any changes. (did the line endings change or something?)\r\nif there are no significant changes (white space etc) then please do NOT commit, because it makes it more difficult to code review.', 'comment_created': datetime.datetime(2020, 7, 13, 16, 21, 57, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 453779772, 'comment_body': ""I made changes in the pt.to.lines function.\nIt looks like there's some issue with the line endings!\nI really don't understand why whole file shows as edited while I do change just few lines.\nEven on VS Code, It was showing 1 line change before committing."", 'comment_created': datetime.datetime(2020, 7, 13, 16, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 453799765, 'comment_body': 'you should always review the output of the ""git diff"" command before you do a ""git commit"" and make sure to remove any parts of the diff which are not relevant to the intended change you are trying to make.\r\nIn terms of editors I would recommend using Emacs for this project because there is good support for both R (via ESS) and JavaScript editing. Or try Rstudio if Emacs is too complicated for you to learn right now (but if you want to become a good programmer you should learn at least one of the two classic editors, emacs and vim)', 'comment_created': datetime.datetime(2020, 7, 13, 17, 8, 14, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 454108530, 'comment_body': ""I'll make sure to follow this up from now on. I'll use Emacs from now on for this project."", 'comment_created': datetime.datetime(2020, 7, 14, 5, 22, 56, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 454110247, 'comment_body': 'here are some videos I made about emacs + ess https://www.youtube.com/playlist?list=PLwc48KSH3D1Onsed66FPLywMSIQmAhUYJ', 'comment_created': datetime.datetime(2020, 7, 14, 5, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 454113679, 'comment_body': ""Thank you so much! I'll go through this."", 'comment_created': datetime.datetime(2020, 7, 14, 5, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}]","[{'commit_sha': '998c115225b83f872472e2b422c277266bd55980', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ceab3ae2bd9650c491c58a5231c72b5fed1fc24', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f111f28c7321a756552cdb783674238c1b749f8', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c853598c6ad21eebec91b8e3fcceda1689b1ca', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f6d5bdb5b8796ff9375205bc36475a4ac9bb870', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93be4b14fe8fcb032163d1dcdd753e43d5e60113', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2b645b2ae8590c1d07c2453437cb4ac71fe5a74', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fd7b30610b7bcbbe704c53fdefc5b110c9b8902', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dac1ae4bb1795a1bebb0558aa6836a98f99fce9c', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}]",Himanshu Singh,17141301,,User,,71,,49,198
468096504,Move geom-* specific calculations to geom class definitions.,This PR moved geom-* specific calculations to geom class definitions.,True,45,https://api.github.com/repos/animint/animint2/pulls/45,https://github.com/animint/animint2/pull/45,closed,701,620,20,14,8,23,0,0,[],2020-08-14 17:23:01+00:00,2020-08-19 16:00:46+00:00,427065.0,"4 days, 22:37:45","[{'comment_id': 471704271, 'comment_body': 'typo?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 43, 7, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471704484, 'comment_body': 'typo?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 43, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471704963, 'comment_body': 'why do you change this?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471705310, 'comment_body': 'why do you need to add this?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471705817, 'comment_body': 'why change this?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471706309, 'comment_body': 'L$export_animint( instead?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 45, 25, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471934788, 'comment_body': 'Yes, right! updated this!', 'comment_created': datetime.datetime(2020, 8, 18, 6, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 471943000, 'comment_body': ""I had to introduce a new class `GeomFreqPoly` because there were certain operations which had to be done for FreqPoly geom only and that's why I had to change from `GeomPath` to `GeomFreqpoly`. The class `GeomFreqpoly` inherits `GeomPath` so everything should be good to go I believe."", 'comment_created': datetime.datetime(2020, 8, 18, 6, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 471944111, 'comment_body': 'I added this because bin2d is not supported in animint2. So, there might be chances that we\'ll be adding support for this. So, there should be a class where the operations can be done. And I had to show this message to users when $pre_process is being invoked.\r\n```r\r\nstop(""bin2d is not supported in animint. Try using geom_tile() and binning the data yourself."")\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 6, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 471964873, 'comment_body': 'I did this because I had to add a method `pre_process` which was supposed to be applied to `GeomBind2d` geom only.', 'comment_created': datetime.datetime(2020, 8, 18, 7, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472044967, 'comment_body': 'Since I had to create a new class, I had to export this as well.', 'comment_created': datetime.datetime(2020, 8, 18, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472044993, 'comment_body': 'Since I had to create a new class, I had to export this as well.', 'comment_created': datetime.datetime(2020, 8, 18, 9, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472312111, 'comment_body': 'is this correct? why do we have to refer to L twice? seems like we should fix that.', 'comment_created': datetime.datetime(2020, 8, 18, 16, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472312745, 'comment_body': ""or if export_animint method can't be fixed maybe keep the original saveLayer function."", 'comment_created': datetime.datetime(2020, 8, 18, 16, 8, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472390264, 'comment_body': ""Actually we're doing some operations/pre-processing in the export_animint() function by using L.\r\n\r\n"", 'comment_created': datetime.datetime(2020, 8, 18, 18, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472438943, 'comment_body': 'looking at the original OO ggplot code it seems like the usual/consistent syntax is actually what you had originally, Geom$export_animint so I guess we should use that. sorry for the confusion.', 'comment_created': datetime.datetime(2020, 8, 18, 19, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472439598, 'comment_body': 'that makes sense thanks', 'comment_created': datetime.datetime(2020, 8, 18, 19, 47, 32, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472440315, 'comment_body': ""ok that makes sense but shouldn't it be Bin2d? (not Bind2d) (no extra d before 2)"", 'comment_created': datetime.datetime(2020, 8, 18, 19, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472440541, 'comment_body': ""right but shouldn't it be poly? (not ploy)"", 'comment_created': datetime.datetime(2020, 8, 18, 19, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472441530, 'comment_body': 'So, Should I go ahead and revert the last change and use `Geom$export_animint()` instead?', 'comment_created': datetime.datetime(2020, 8, 18, 19, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472442382, 'comment_body': ""Oh! I'm so so sorry! How could I not see that!"", 'comment_created': datetime.datetime(2020, 8, 18, 19, 52, 56, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472442635, 'comment_body': ""I'm so sorry! Let me correct this asap!"", 'comment_created': datetime.datetime(2020, 8, 18, 19, 53, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472442930, 'comment_body': 'Let me fix this too!', 'comment_created': datetime.datetime(2020, 8, 18, 19, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}]","[{'commit_sha': '6e52f81235015848b0a1e07f958f917218529c4f', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d407cdd6ad139e584fe1faf87edbefdc5880f93', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8524476ee1cca5827323d777bd74a612d8daf9b8', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d63f586f7cfb91eab74fefb9b5a66759c87d07c', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a0d4be0abea6222024ce343658d93f9afa98a64', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2051d0b06cc64706045fa317d16c5897182014', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30092a922c215c4a460abb8e976606c00bf71113', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6a0049b9325f629f67b0b6bbcfa75e88ec3545e', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afe0b3126f08519ede8ce7aba708d0ed643cf18d', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fefce2233a34040d37348612ccca537a7fc3c79', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12f6e8b1a0a3d19bdbddb675c1902edf9d844ef4', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79c03cd427d585604a8c7f4c7ecc2c38e495c0c5', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3184db9608a813c7644ec71b54ce591282b042fb', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf3e7923457af26e72890e2bc1f714fb0460fba5', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}]",Himanshu Singh,17141301,,User,,71,,49,198
468096504,Move geom-* specific calculations to geom class definitions.,This PR moved geom-* specific calculations to geom class definitions.,True,45,https://api.github.com/repos/animint/animint2/pulls/45,https://github.com/animint/animint2/pull/45,closed,701,620,20,14,8,23,0,0,[],2020-08-14 17:23:01+00:00,2020-08-19 16:00:46+00:00,427065.0,"4 days, 22:37:45","[{'comment_id': 471704271, 'comment_body': 'typo?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 43, 7, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471704484, 'comment_body': 'typo?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 43, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471704963, 'comment_body': 'why do you change this?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471705310, 'comment_body': 'why do you need to add this?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471705817, 'comment_body': 'why change this?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471706309, 'comment_body': 'L$export_animint( instead?', 'comment_created': datetime.datetime(2020, 8, 17, 18, 45, 25, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 471934788, 'comment_body': 'Yes, right! updated this!', 'comment_created': datetime.datetime(2020, 8, 18, 6, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 471943000, 'comment_body': ""I had to introduce a new class `GeomFreqPoly` because there were certain operations which had to be done for FreqPoly geom only and that's why I had to change from `GeomPath` to `GeomFreqpoly`. The class `GeomFreqpoly` inherits `GeomPath` so everything should be good to go I believe."", 'comment_created': datetime.datetime(2020, 8, 18, 6, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 471944111, 'comment_body': 'I added this because bin2d is not supported in animint2. So, there might be chances that we\'ll be adding support for this. So, there should be a class where the operations can be done. And I had to show this message to users when $pre_process is being invoked.\r\n```r\r\nstop(""bin2d is not supported in animint. Try using geom_tile() and binning the data yourself."")\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 6, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 471964873, 'comment_body': 'I did this because I had to add a method `pre_process` which was supposed to be applied to `GeomBind2d` geom only.', 'comment_created': datetime.datetime(2020, 8, 18, 7, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472044967, 'comment_body': 'Since I had to create a new class, I had to export this as well.', 'comment_created': datetime.datetime(2020, 8, 18, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472044993, 'comment_body': 'Since I had to create a new class, I had to export this as well.', 'comment_created': datetime.datetime(2020, 8, 18, 9, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472312111, 'comment_body': 'is this correct? why do we have to refer to L twice? seems like we should fix that.', 'comment_created': datetime.datetime(2020, 8, 18, 16, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472312745, 'comment_body': ""or if export_animint method can't be fixed maybe keep the original saveLayer function."", 'comment_created': datetime.datetime(2020, 8, 18, 16, 8, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472390264, 'comment_body': ""Actually we're doing some operations/pre-processing in the export_animint() function by using L.\r\n\r\n"", 'comment_created': datetime.datetime(2020, 8, 18, 18, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472438943, 'comment_body': 'looking at the original OO ggplot code it seems like the usual/consistent syntax is actually what you had originally, Geom$export_animint so I guess we should use that. sorry for the confusion.', 'comment_created': datetime.datetime(2020, 8, 18, 19, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472439598, 'comment_body': 'that makes sense thanks', 'comment_created': datetime.datetime(2020, 8, 18, 19, 47, 32, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472440315, 'comment_body': ""ok that makes sense but shouldn't it be Bin2d? (not Bind2d) (no extra d before 2)"", 'comment_created': datetime.datetime(2020, 8, 18, 19, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472440541, 'comment_body': ""right but shouldn't it be poly? (not ploy)"", 'comment_created': datetime.datetime(2020, 8, 18, 19, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 472441530, 'comment_body': 'So, Should I go ahead and revert the last change and use `Geom$export_animint()` instead?', 'comment_created': datetime.datetime(2020, 8, 18, 19, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472442382, 'comment_body': ""Oh! I'm so so sorry! How could I not see that!"", 'comment_created': datetime.datetime(2020, 8, 18, 19, 52, 56, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472442635, 'comment_body': ""I'm so sorry! Let me correct this asap!"", 'comment_created': datetime.datetime(2020, 8, 18, 19, 53, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 472442930, 'comment_body': 'Let me fix this too!', 'comment_created': datetime.datetime(2020, 8, 18, 19, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}]","[{'commit_sha': '6e52f81235015848b0a1e07f958f917218529c4f', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d407cdd6ad139e584fe1faf87edbefdc5880f93', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8524476ee1cca5827323d777bd74a612d8daf9b8', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d63f586f7cfb91eab74fefb9b5a66759c87d07c', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a0d4be0abea6222024ce343658d93f9afa98a64', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f2051d0b06cc64706045fa317d16c5897182014', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30092a922c215c4a460abb8e976606c00bf71113', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6a0049b9325f629f67b0b6bbcfa75e88ec3545e', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afe0b3126f08519ede8ce7aba708d0ed643cf18d', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fefce2233a34040d37348612ccca537a7fc3c79', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12f6e8b1a0a3d19bdbddb675c1902edf9d844ef4', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79c03cd427d585604a8c7f4c7ecc2c38e495c0c5', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3184db9608a813c7644ec71b54ce591282b042fb', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf3e7923457af26e72890e2bc1f714fb0460fba5', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}]",Himanshu Singh,17141301,,User,,71,,49,198
382600997,stringsAsFactors=TRUE,"fixes 
```
  > test_check(""animint2"", filter=""compiler"")
  Loading required package: animint2
  [1] ""aesthetics""
  mapping: x = Sepal.Length, y = Petal.Length
  geom_point: na.rm = FALSE
  stat_identity: na.rm = FALSE
  position_identity
  $problem.aes
  [1] ""foo""
  
  $data.variables
  [1] ""Sepal.Length"" ""Sepal.Width"" ""Petal.Length"" ""Petal.Width"" ""Species""
  
  [1] ""animation""
  [1] ""compiler errors""
  mapping: x = letter, y = count, fill = stack, key = key, showSelected1 = facet
  geom_bar: width = NULL, na.rm = FALSE
  stat_identity: na.rm = FALSE
  position_stack
  -- 1. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fy) not equal to c(""C"", ""B"", ""A"")[lay$ROW].
  6/9 mismatches
  x[1]: ""A""
  y[1]: ""C""
  
  x[2]: ""A""
  y[2]: ""C""
  
  x[3]: ""A""
  y[3]: ""C""
  
  x[7]: ""C""
  y[7]: ""A""
  
  x[8]: ""C""
  y[8]: ""A""
  
  -- 2. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""c"", ""b"", ""a"")[lay$COL].
  6/9 mismatches
  x[1]: ""a""
  y[1]: ""c""
  
  x[3]: ""c""
  y[3]: ""a""
  
  x[4]: ""a""
  y[4]: ""c""
  
  x[6]: ""c""
  y[6]: ""a""
  
  x[7]: ""a""
  y[7]: ""c""
  
  -- 3. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fy) not equal to c(""B"", ""C"", ""A"")[lay$ROW].
  9/9 mismatches
  x[1]: ""A""
  y[1]: ""B""
  
  x[2]: ""A""
  y[2]: ""B""
  
  x[3]: ""A""
  y[3]: ""B""
  
  x[4]: ""B""
  y[4]: ""C""
  
  x[5]: ""B""
  y[5]: ""C""
  
  -- 4. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""a"", ""c"", ""b"")[lay$COL].
  6/9 mismatches
  x[2]: ""b""
  y[2]: ""c""
  
  x[3]: ""c""
  y[3]: ""b""
  
  x[5]: ""b""
  y[5]: ""c""
  
  x[6]: ""c""
  y[6]: ""b""
  
  x[8]: ""b""
  y[8]: ""c""
  
  -- 5. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fy) not equal to c(""C"", ""B"", ""A"")[lay$ROW].
  6/9 mismatches
  x[1]: ""A""
  y[1]: ""C""
  
  x[2]: ""A""
  y[2]: ""C""
  
  x[3]: ""A""
  y[3]: ""C""
  
  x[7]: ""C""
  y[7]: ""A""
  
  x[8]: ""C""
  y[8]: ""A""
  
  -- 6. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""c"", ""b"", ""a"")[lay$COL].
  6/9 mismatches
  x[1]: ""a""
  y[1]: ""c""
  
  x[3]: ""c""
  y[3]: ""a""
  
  x[4]: ""a""
  y[4]: ""c""
  
  x[6]: ""c""
  y[6]: ""a""
  
  x[7]: ""a""
  y[7]: ""c""
  
  -- 7. Failure: wrap: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""c"", ""b"", ""a"")[lay$PANEL].
  2/3 mismatches
  x[1]: ""a""
  y[1]: ""c""
  
  x[3]: ""c""
  y[3]: ""a""
  
  -- 8. Failure: wrap: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""a"", ""c"", ""b"")[lay$PANEL].
  2/3 mismatches
  x[2]: ""b""
  y[2]: ""c""
  
  x[3]: ""c""
  y[3]: ""b""
  
  -- 9. Failure: wrap: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""c"", ""b"", ""a"")[lay$PANEL].
  2/3 mismatches
  x[1]: ""a""
  y[1]: ""c""
  
  x[3]: ""c""
  y[3]: ""a""
  
  [1] ""geom line""
  [1] ""plot named timexxx""
  [1] ""plot names""
  [1] ""geom_point(aes(fill=numeric))""
  [1] ""compiler print""
  [1] ""save separate chunks""
  -- 10. Failure: identity scale preserves input values (@test-compiler-scales.r#6
  d1$size not equal to as.numeric(df$z).
  3/3 mismatches (average diff: NaN)
  [1] 1 - NA == NA
  [2] 2 - NA == NA
  [3] 3 - NA == NA
  
  -- 11. Failure: identity scale preserves input values (@test-compiler-scales.r#6
  d1$alpha not equal to as.numeric(df$z).
  3/3 mismatches (average diff: NaN)
  [1] 1 - NA == NA
  [2] 2 - NA == NA
  [3] 3 - NA == NA
  
  [1] ""selectors""
  [1] ""stat_summary""
  [1] ""compiler unlink previous""
  == testthat results ===========================================================
  [ OK: 740 | SKIPPED: 7 | WARNINGS: 13 | FAILED: 11 ]
  1. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#118)
  2. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#119)
  3. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#126)
  4. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#127)
  5. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#134)
  6. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#135)
  7. Failure: wrap: facet order follows default data frame order (@test-compiler-facet-locate.r#148)
  8. Failure: wrap: facet order follows default data frame order (@test-compiler-facet-locate.r#154)
  9. Failure: wrap: facet order follows default data frame order (@test-compiler-facet-locate.r#160)
  1. ...
  
  Error: testthat unit tests failed
  Execution halted
```",True,34,https://api.github.com/repos/animint/animint2/pulls/34,https://github.com/animint/animint2/pull/34,closed,4490,3585,123,35,44,9,0,0,[],2020-03-02 20:50:23+00:00,2020-08-05 21:30:35+00:00,13480812.0,"156 days, 0:40:12","[{'comment_id': 437616336, 'comment_body': 'hi @lazycipher this commit fixes the Rmd rendering problems for me. does it work for you?', 'comment_created': datetime.datetime(2020, 6, 9, 17, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 437654238, 'comment_body': ""Yes! It's fixed now!"", 'comment_created': datetime.datetime(2020, 6, 9, 19, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 442488049, 'comment_body': '@lazycipher please try to avoid committing changes like this line, where nothing substantial has changed (only whitespace) because such changes make code review more difficult.', 'comment_created': datetime.datetime(2020, 6, 18, 20, 36, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 442488513, 'comment_body': '@lazycipher instead of changing all clickID to clickElementById, can you please just leave all the clickID in the test-*.R files, and change the definition of clickID?', 'comment_created': datetime.datetime(2020, 6, 18, 20, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 442758289, 'comment_body': ""I might've missed that! I'll tak care of that from now on!"", 'comment_created': datetime.datetime(2020, 6, 19, 10, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 442758612, 'comment_body': ""Sure thing, I'll change that! I was experimenting something and forgot about that!"", 'comment_created': datetime.datetime(2020, 6, 19, 10, 21, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 445132184, 'comment_body': ""@tdhock, I've already changed this version thing."", 'comment_created': datetime.datetime(2020, 6, 24, 19, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 445170397, 'comment_body': ""in your fork do you have @v1.7.4? i'm confused\r\n"", 'comment_created': datetime.datetime(2020, 6, 24, 21, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 445486769, 'comment_body': 'Yes, and I pushed the same in r4-fixes branch in this repo as well.\r\nhttps://travis-ci.org/github/lazycipher/animint2/jobs/701227388#L1067', 'comment_created': datetime.datetime(2020, 6, 25, 11, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}]","[{'commit_sha': '85562c74665699a78c87667df7be445465dda90a', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93016ee1ce8687c21092261bc9a57b670c1b7a90', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f9f9ef9f73264d75f6a9f2ba1cc08f14ab71c63', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f43bc9681ecb147a1c76a6baba15c9dad2232e0', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cda59dc760d803ef1cbd7a8dcfd15cdfe2e77c7f', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adf3ce19dddab87d9f16c35f359e298d63e208e3', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41e4690640593c80908688dc363595655a32c7fc', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '962809d4fb3bc25d4ba085cdd60f4c47aaf45161', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39509622cbde607ad3416156f950b9033cb5c661', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af8c4598fb2e0fb8da84f53f831c0ff5e8edf19f', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0037c9cc2cc1db923c55cb36104028a9c4621280', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '798992e120cd02a9fda34faa6e5cc5fe97250dcd', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14fda964786484cf6cf69e0cd1a391328a0c0edb', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5994c18f678652bd298d71c14c648c85b46a756b', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8a22b001af0cb2b984aceca9552cb5c2a297434', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf2069ec5b794d78d48bf5616886cbc960304a69', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b149f35633f6aa3fe75a3f6cf58e6d65937f31ef', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '472078ffb570f1eaf8a116f5c85f0feb202c66d5', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a79b6e723d9d412254ac5634bf4b2ada724a2cf7', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2802e2497c66ed3fd443ac043479d560905381b7', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87cfab60f8164cb0caa3c184ae39ba1ae03543e0', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09d804dfd4facd58ea3a76ddf8e29e0cc170fe9d', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '671c20fda188aa6a79c9f1dc1576075620be888c', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '998c115225b83f872472e2b422c277266bd55980', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ceab3ae2bd9650c491c58a5231c72b5fed1fc24', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f111f28c7321a756552cdb783674238c1b749f8', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c853598c6ad21eebec91b8e3fcceda1689b1ca', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f6d5bdb5b8796ff9375205bc36475a4ac9bb870', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93be4b14fe8fcb032163d1dcdd753e43d5e60113', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2b645b2ae8590c1d07c2453437cb4ac71fe5a74', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fd7b30610b7bcbbe704c53fdefc5b110c9b8902', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dac1ae4bb1795a1bebb0558aa6836a98f99fce9c', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14475cfcf7fb5a1a89f62db593a325ba98b4979f', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ccd0caf1eb251ce58a3dfb2be7c76cadd9628f9', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11033bd06be9b8355b3e58ad6ea6206b83640790', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}]",Toby Dylan Hocking,932850,toby.hocking@r-project.org,User,,311,,100,328
382600997,stringsAsFactors=TRUE,"fixes 
```
  > test_check(""animint2"", filter=""compiler"")
  Loading required package: animint2
  [1] ""aesthetics""
  mapping: x = Sepal.Length, y = Petal.Length
  geom_point: na.rm = FALSE
  stat_identity: na.rm = FALSE
  position_identity
  $problem.aes
  [1] ""foo""
  
  $data.variables
  [1] ""Sepal.Length"" ""Sepal.Width"" ""Petal.Length"" ""Petal.Width"" ""Species""
  
  [1] ""animation""
  [1] ""compiler errors""
  mapping: x = letter, y = count, fill = stack, key = key, showSelected1 = facet
  geom_bar: width = NULL, na.rm = FALSE
  stat_identity: na.rm = FALSE
  position_stack
  -- 1. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fy) not equal to c(""C"", ""B"", ""A"")[lay$ROW].
  6/9 mismatches
  x[1]: ""A""
  y[1]: ""C""
  
  x[2]: ""A""
  y[2]: ""C""
  
  x[3]: ""A""
  y[3]: ""C""
  
  x[7]: ""C""
  y[7]: ""A""
  
  x[8]: ""C""
  y[8]: ""A""
  
  -- 2. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""c"", ""b"", ""a"")[lay$COL].
  6/9 mismatches
  x[1]: ""a""
  y[1]: ""c""
  
  x[3]: ""c""
  y[3]: ""a""
  
  x[4]: ""a""
  y[4]: ""c""
  
  x[6]: ""c""
  y[6]: ""a""
  
  x[7]: ""a""
  y[7]: ""c""
  
  -- 3. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fy) not equal to c(""B"", ""C"", ""A"")[lay$ROW].
  9/9 mismatches
  x[1]: ""A""
  y[1]: ""B""
  
  x[2]: ""A""
  y[2]: ""B""
  
  x[3]: ""A""
  y[3]: ""B""
  
  x[4]: ""B""
  y[4]: ""C""
  
  x[5]: ""B""
  y[5]: ""C""
  
  -- 4. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""a"", ""c"", ""b"")[lay$COL].
  6/9 mismatches
  x[2]: ""b""
  y[2]: ""c""
  
  x[3]: ""c""
  y[3]: ""b""
  
  x[5]: ""b""
  y[5]: ""c""
  
  x[6]: ""c""
  y[6]: ""b""
  
  x[8]: ""b""
  y[8]: ""c""
  
  -- 5. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fy) not equal to c(""C"", ""B"", ""A"")[lay$ROW].
  6/9 mismatches
  x[1]: ""A""
  y[1]: ""C""
  
  x[2]: ""A""
  y[2]: ""C""
  
  x[3]: ""A""
  y[3]: ""C""
  
  x[7]: ""C""
  y[7]: ""A""
  
  x[8]: ""C""
  y[8]: ""A""
  
  -- 6. Failure: grid: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""c"", ""b"", ""a"")[lay$COL].
  6/9 mismatches
  x[1]: ""a""
  y[1]: ""c""
  
  x[3]: ""c""
  y[3]: ""a""
  
  x[4]: ""a""
  y[4]: ""c""
  
  x[6]: ""c""
  y[6]: ""a""
  
  x[7]: ""a""
  y[7]: ""c""
  
  -- 7. Failure: wrap: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""c"", ""b"", ""a"")[lay$PANEL].
  2/3 mismatches
  x[1]: ""a""
  y[1]: ""c""
  
  x[3]: ""c""
  y[3]: ""a""
  
  -- 8. Failure: wrap: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""a"", ""c"", ""b"")[lay$PANEL].
  2/3 mismatches
  x[2]: ""b""
  y[2]: ""c""
  
  x[3]: ""c""
  y[3]: ""b""
  
  -- 9. Failure: wrap: facet order follows default data frame order (@test-compile
  as.character(lay$fx) not equal to c(""c"", ""b"", ""a"")[lay$PANEL].
  2/3 mismatches
  x[1]: ""a""
  y[1]: ""c""
  
  x[3]: ""c""
  y[3]: ""a""
  
  [1] ""geom line""
  [1] ""plot named timexxx""
  [1] ""plot names""
  [1] ""geom_point(aes(fill=numeric))""
  [1] ""compiler print""
  [1] ""save separate chunks""
  -- 10. Failure: identity scale preserves input values (@test-compiler-scales.r#6
  d1$size not equal to as.numeric(df$z).
  3/3 mismatches (average diff: NaN)
  [1] 1 - NA == NA
  [2] 2 - NA == NA
  [3] 3 - NA == NA
  
  -- 11. Failure: identity scale preserves input values (@test-compiler-scales.r#6
  d1$alpha not equal to as.numeric(df$z).
  3/3 mismatches (average diff: NaN)
  [1] 1 - NA == NA
  [2] 2 - NA == NA
  [3] 3 - NA == NA
  
  [1] ""selectors""
  [1] ""stat_summary""
  [1] ""compiler unlink previous""
  == testthat results ===========================================================
  [ OK: 740 | SKIPPED: 7 | WARNINGS: 13 | FAILED: 11 ]
  1. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#118)
  2. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#119)
  3. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#126)
  4. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#127)
  5. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#134)
  6. Failure: grid: facet order follows default data frame order (@test-compiler-facet-locate.r#135)
  7. Failure: wrap: facet order follows default data frame order (@test-compiler-facet-locate.r#148)
  8. Failure: wrap: facet order follows default data frame order (@test-compiler-facet-locate.r#154)
  9. Failure: wrap: facet order follows default data frame order (@test-compiler-facet-locate.r#160)
  1. ...
  
  Error: testthat unit tests failed
  Execution halted
```",True,34,https://api.github.com/repos/animint/animint2/pulls/34,https://github.com/animint/animint2/pull/34,closed,4490,3585,123,35,44,9,0,0,[],2020-03-02 20:50:23+00:00,2020-08-05 21:30:35+00:00,13480812.0,"156 days, 0:40:12","[{'comment_id': 437616336, 'comment_body': 'hi @lazycipher this commit fixes the Rmd rendering problems for me. does it work for you?', 'comment_created': datetime.datetime(2020, 6, 9, 17, 57, 57, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 437654238, 'comment_body': ""Yes! It's fixed now!"", 'comment_created': datetime.datetime(2020, 6, 9, 19, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 442488049, 'comment_body': '@lazycipher please try to avoid committing changes like this line, where nothing substantial has changed (only whitespace) because such changes make code review more difficult.', 'comment_created': datetime.datetime(2020, 6, 18, 20, 36, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 442488513, 'comment_body': '@lazycipher instead of changing all clickID to clickElementById, can you please just leave all the clickID in the test-*.R files, and change the definition of clickID?', 'comment_created': datetime.datetime(2020, 6, 18, 20, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 442758289, 'comment_body': ""I might've missed that! I'll tak care of that from now on!"", 'comment_created': datetime.datetime(2020, 6, 19, 10, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 442758612, 'comment_body': ""Sure thing, I'll change that! I was experimenting something and forgot about that!"", 'comment_created': datetime.datetime(2020, 6, 19, 10, 21, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 445132184, 'comment_body': ""@tdhock, I've already changed this version thing."", 'comment_created': datetime.datetime(2020, 6, 24, 19, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}, {'comment_id': 445170397, 'comment_body': ""in your fork do you have @v1.7.4? i'm confused\r\n"", 'comment_created': datetime.datetime(2020, 6, 24, 21, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tdhock', 'type': 'User'}, {'comment_id': 445486769, 'comment_body': 'Yes, and I pushed the same in r4-fixes branch in this repo as well.\r\nhttps://travis-ci.org/github/lazycipher/animint2/jobs/701227388#L1067', 'comment_created': datetime.datetime(2020, 6, 25, 11, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lazycipher', 'type': 'User'}]","[{'commit_sha': '85562c74665699a78c87667df7be445465dda90a', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93016ee1ce8687c21092261bc9a57b670c1b7a90', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f9f9ef9f73264d75f6a9f2ba1cc08f14ab71c63', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f43bc9681ecb147a1c76a6baba15c9dad2232e0', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cda59dc760d803ef1cbd7a8dcfd15cdfe2e77c7f', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adf3ce19dddab87d9f16c35f359e298d63e208e3', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41e4690640593c80908688dc363595655a32c7fc', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '962809d4fb3bc25d4ba085cdd60f4c47aaf45161', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39509622cbde607ad3416156f950b9033cb5c661', 'committer_username': 'tdhock', 'committer_name': 'Toby Dylan Hocking', 'committer_email': 'toby.hocking@r-project.org', 'commit_date': datetime.datetime(2011, 7, 22, 16, 50, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af8c4598fb2e0fb8da84f53f831c0ff5e8edf19f', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0037c9cc2cc1db923c55cb36104028a9c4621280', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '798992e120cd02a9fda34faa6e5cc5fe97250dcd', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14fda964786484cf6cf69e0cd1a391328a0c0edb', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5994c18f678652bd298d71c14c648c85b46a756b', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8a22b001af0cb2b984aceca9552cb5c2a297434', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf2069ec5b794d78d48bf5616886cbc960304a69', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b149f35633f6aa3fe75a3f6cf58e6d65937f31ef', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '472078ffb570f1eaf8a116f5c85f0feb202c66d5', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a79b6e723d9d412254ac5634bf4b2ada724a2cf7', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2802e2497c66ed3fd443ac043479d560905381b7', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87cfab60f8164cb0caa3c184ae39ba1ae03543e0', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09d804dfd4facd58ea3a76ddf8e29e0cc170fe9d', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '671c20fda188aa6a79c9f1dc1576075620be888c', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '998c115225b83f872472e2b422c277266bd55980', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ceab3ae2bd9650c491c58a5231c72b5fed1fc24', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f111f28c7321a756552cdb783674238c1b749f8', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c853598c6ad21eebec91b8e3fcceda1689b1ca', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f6d5bdb5b8796ff9375205bc36475a4ac9bb870', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93be4b14fe8fcb032163d1dcdd753e43d5e60113', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2b645b2ae8590c1d07c2453437cb4ac71fe5a74', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fd7b30610b7bcbbe704c53fdefc5b110c9b8902', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dac1ae4bb1795a1bebb0558aa6836a98f99fce9c', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14475cfcf7fb5a1a89f62db593a325ba98b4979f', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ccd0caf1eb251ce58a3dfb2be7c76cadd9628f9', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11033bd06be9b8355b3e58ad6ea6206b83640790', 'committer_username': 'lazycipher', 'committer_name': 'Himanshu Singh', 'committer_email': None, 'commit_date': datetime.datetime(2016, 2, 9, 11, 53, 33, tzinfo=datetime.timezone.utc)}]",Toby Dylan Hocking,932850,toby.hocking@r-project.org,User,,311,,100,328

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
20709787,animint2,animint/animint2,R,20,59,6,11,799,34,37,10,"[{'id': 472711596, 'number': 50, 'closed': datetime.datetime(2021, 4, 5, 18, 42, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 19, 11, 57, tzinfo=datetime.timezone.utc), 'time_taken': 19351806.0, 'time_delta': '223 days, 23:30:06', 'additions': 17, 'deletions': 2, 'state': 'closed'}, {'id': 470423573, 'number': 46, 'closed': datetime.datetime(2020, 8, 20, 6, 52, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 20, 2, 28, tzinfo=datetime.timezone.utc), 'time_taken': 39011.0, 'time_delta': '10:50:11', 'additions': 55, 'deletions': 91, 'state': 'closed'}, {'id': 468096504, 'number': 45, 'closed': datetime.datetime(2020, 8, 19, 16, 0, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 17, 23, 1, tzinfo=datetime.timezone.utc), 'time_taken': 427065.0, 'time_delta': '4 days, 22:37:45', 'additions': 701, 'deletions': 620, 'state': 'closed'}, {'id': 459414616, 'number': 44, 'closed': datetime.datetime(2020, 8, 14, 17, 21, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 17, 15, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1296386.0, 'time_delta': '15 days, 0:06:26', 'additions': 701, 'deletions': 620, 'state': 'closed'}, {'id': 446923285, 'number': 42, 'closed': datetime.datetime(2020, 7, 15, 10, 50, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 9, 15, 10, 11, tzinfo=datetime.timezone.utc), 'time_taken': 502805.0, 'time_delta': '5 days, 19:40:05', 'additions': 314, 'deletions': 406, 'state': 'closed'}, {'id': 387450871, 'number': 35, 'closed': datetime.datetime(2021, 4, 5, 18, 41, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 12, 20, 10, 51, tzinfo=datetime.timezone.utc), 'time_taken': 33604230.0, 'time_delta': '388 days, 22:30:30', 'additions': 128, 'deletions': 1, 'state': 'closed'}]"
