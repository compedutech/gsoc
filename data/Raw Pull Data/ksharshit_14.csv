pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
438734824,EKF3: Sensor Affinity and Accumulated Error Lane Switching,"An EKF3 port of the EK2_Affinity PR #11257 with EKF3 accumulated relative core errors based lane switching #14472 

**_For the general audience_** 

**Affinity** - For a vehicle which has multiple instances of Airspeed - Magnetometer - Barometer - GPS, affinity is a way to assign these sensors between separate EKF cores. This is useful when a vehicle is known to have multiple good quality sensors. If a sensor is healthy and can be used for fusion, we want it to be attached to a specific core. If the number of cores is more than the number of sensor instances, then some cores may share the same sensor (specifically the primary one). A simple example for a vehicle which has 2 baros , 2 GPS, 2 airspeeds, 3 mags and 3 IMUs - following would be the allotment if affinity is enabled and all sensors are healthy.

| LANE | 1 | 2 | 3 | 
|------|---|---|---|
|ASD   | 1 | 2 | 1 |
|BAR   | 1 | 2 | 1 |
|GPS   | 1 | 2 | 1 |
|MAG   | 1 | 2 | 3 |

*assuming 1 is primary for all sensors and ignoring the mag switching logic for simplicity.

**Accumulated Error** - The error which we accumulate is representative of how good/bad an EKF core has been over time. This error is relative to the active primary core. A negative relative error for a core means it has been performing better than the active primary, and vice-versa. So now with affinity, we have a 'statistical' way to determine which sensor combination is the best that can be used. For this, the error term (that we accumulate) should be a right indicator of the sensors performance of that core.  The error score now takes into account for innovations from all the above sensors. 

As Tridge pointed out in his affinity PR for EKF2 #11257  - This provides for a more statistically robust way of using multiple sensors when the airframe is known to have multiple ""good"" sensors. EKF lane changing is used to select the lane with the best sensors.

Some SITL parameters for simulating errors added through this PR -

- Airspeed Offset in m/s
- GPS Velocity in m/s
- Freeze barometer to last reported altitude",True,14674,https://api.github.com/repos/ArduPilot/ardupilot/pulls/14674,https://github.com/ArduPilot/ardupilot/pull/14674,closed,749,143,25,14,32,56,3,0,"[{'name': 'Library'}, {'name': 'EKF'}, {'name': 'GSoC'}]",2020-06-23 18:06:42+00:00,2020-08-27 10:20:53+00:00,5588051.0,"64 days, 16:14:11","[{'comment_id': 450607480, 'comment_body': 'why the extra *2 ?', 'comment_created': datetime.datetime(2020, 7, 7, 4, 43, 7, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 450608174, 'comment_body': 'there is another call to get_lag in AP_NavEKF3_core.cpp line 73 that also needs this change', 'comment_created': datetime.datetime(2020, 7, 7, 4, 46, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 450609019, 'comment_body': 'this is a change in behaviour with regard to the timestamp, need to be careful about cut&paste between EKF2 and EKF3', 'comment_created': datetime.datetime(2020, 7, 7, 4, 50, 30, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 450612600, 'comment_body': ""this breaks the existing compass switching when affinity is disable for compasses (note that my PR broke that too, I've now fixed it).\r\nWhen affinity is disabled we want to use the existing compass switching logic which is based on innovations, so just delete this line and leave magSelectIndex as it is\r\n"", 'comment_created': datetime.datetime(2020, 7, 7, 5, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 450613031, 'comment_body': 'cut&paste bug, in EKF3 we use frontend->sensorIntervalMin_ms\r\n', 'comment_created': datetime.datetime(2020, 7, 7, 5, 6, 24, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 450613421, 'comment_body': 'these changes look like copied from my PR, should have been done with cherry-pick to preserve author (and blame!)\r\n', 'comment_created': datetime.datetime(2020, 7, 7, 5, 7, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 451681569, 'comment_body': 'experimenting something, missed changing back, sorry', 'comment_created': datetime.datetime(2020, 7, 8, 16, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 451682906, 'comment_body': 'changed now', 'comment_created': datetime.datetime(2020, 7, 8, 16, 43, 12, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 451684236, 'comment_body': 'changed back to the original logic in EKF3, just with the selected_airspeed now', 'comment_created': datetime.datetime(2020, 7, 8, 16, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 451684758, 'comment_body': 'fixed here too', 'comment_created': datetime.datetime(2020, 7, 8, 16, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 451685095, 'comment_body': 'fixed, sorry', 'comment_created': datetime.datetime(2020, 7, 8, 16, 46, 50, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 451686721, 'comment_body': 'cherry picked 2 of your commits for baro and airspeed that are used unchanged in this PR. Thanks for the advice, will keep mind of it in future.', 'comment_created': datetime.datetime(2020, 7, 8, 16, 49, 21, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 460371878, 'comment_body': '_us here', 'comment_created': datetime.datetime(2020, 7, 25, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 460371902, 'comment_body': 'memset', 'comment_created': datetime.datetime(2020, 7, 25, 6, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 460569835, 'comment_body': 'remove this', 'comment_created': datetime.datetime(2020, 7, 26, 20, 27, 55, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 460569886, 'comment_body': 'whitespace', 'comment_created': datetime.datetime(2020, 7, 26, 20, 28, 47, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 471894584, 'comment_body': 'we need to parse these in a more detailed fashion, so we check it does the correct lane change, not just that it changed lane at all. ', 'comment_created': datetime.datetime(2020, 8, 18, 3, 37, 42, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 472662351, 'comment_body': 'this needs to check if EKF3 is the active EKF instance (EKF3 may be compiled in but not being used). You can use active_EKF_type() to determine which EKF is active', 'comment_created': datetime.datetime(2020, 8, 19, 4, 4, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 473304542, 'comment_body': 'fixed, thanks', 'comment_created': datetime.datetime(2020, 8, 19, 20, 38, 45, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 473703482, 'comment_body': 'use () around bitops', 'comment_created': datetime.datetime(2020, 8, 20, 7, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 473708367, 'comment_body': 'we may want to scale the airspeed contribution with 1/sqrt(airspeed) to prevent too much contribution at low speeds? At low speed quite small differential pressure errors could cause large innovations', 'comment_created': datetime.datetime(2020, 8, 20, 7, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 473712679, 'comment_body': 'add check for airspeed_index < 0', 'comment_created': datetime.datetime(2020, 8, 20, 7, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 473718799, 'comment_body': 'should this be unsigned?', 'comment_created': datetime.datetime(2020, 8, 20, 7, 49, 57, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 473982879, 'comment_body': '`self.context_push()` should be at the start of the test before starting to modify the parameter: it say : starting from there I save the parameter modification. That will allow to have `self.context_pop()` at the end of the test that rewind the parameter change and let the state of SITL clean for further test! ', 'comment_created': datetime.datetime(2020, 8, 20, 13, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 473992567, 'comment_body': ""I don't really know what you are logging, but you should be able to use something similar to https://github.com/ArduPilot/ardupilot/blob/master/Tools/autotest/common.py#L5212 to look into the current log and search for the right message!"", 'comment_created': datetime.datetime(2020, 8, 20, 13, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'khancyr', 'type': 'User'}, {'comment_id': 474331812, 'comment_body': 'Unless we have tested the ability to cope with changes to these settings without rebooting, then I would recommend labelling this as\r\n\r\n// @RebootRequired: True', 'comment_created': datetime.datetime(2020, 8, 20, 23, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'priseborough', 'type': 'User'}, {'comment_id': 474337013, 'comment_body': ""Suggest replacing 'damping' with 'sensitivity'"", 'comment_created': datetime.datetime(2020, 8, 21, 0, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'priseborough', 'type': 'User'}, {'comment_id': 474341689, 'comment_body': '// 1st airspeed sensor offset in m/s', 'comment_created': datetime.datetime(2020, 8, 21, 0, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'priseborough', 'type': 'User'}, {'comment_id': 474341888, 'comment_body': '// 1st pitot tube failure pressure in Pa', 'comment_created': datetime.datetime(2020, 8, 21, 0, 25, 57, tzinfo=datetime.timezone.utc), 'commenter': 'priseborough', 'type': 'User'}, {'comment_id': 474465620, 'comment_body': ""i don't think a reboot is required, because the sensor selection functions which assign the sensors to respective cores first assign the primary instance and then change the assignment only if affinity for that respective sensor is available. This happens whenever we update the filter. So if affinity is turned off mid-flight after being on (or vice-versa) we would still be using the primary instance of that sensor for all cores (or affinity based assignment). Maybe @tridge can better judge this ?"", 'comment_created': datetime.datetime(2020, 8, 21, 7, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 474907474, 'comment_body': 'changed, thanks !', 'comment_created': datetime.datetime(2020, 8, 21, 19, 47, 12, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 474908014, 'comment_body': 'changed, thanks', 'comment_created': datetime.datetime(2020, 8, 21, 19, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 474908322, 'comment_body': 'changed, thanks', 'comment_created': datetime.datetime(2020, 8, 21, 19, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 474908587, 'comment_body': 'yes, changed, thanks', 'comment_created': datetime.datetime(2020, 8, 21, 19, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 474908962, 'comment_body': ""changed it to unsigned now, so can't keep that else it fails semaphoreci for 'condition always true'"", 'comment_created': datetime.datetime(2020, 8, 21, 19, 49, 2, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 475007952, 'comment_body': ""@harshitsankhla changing in-flight will work, but would have some negative effects. For example:\r\n - changing mag would lead to using the biases from the previous mag with the new mag. \r\n - same with the baro correction for origin\r\n - a change of GPS will lead to rapid shift in position. We're supposed to notify the upper layers when that happens so in modes like LOITER it can reset the position target to match the previous error\r\n\r\nSo I think Paul is right and we should mark this RebootRequired. Eventually it would be good to cope with all of these errors properly and then we could remove the tag"", 'comment_created': datetime.datetime(2020, 8, 21, 23, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 475077805, 'comment_body': 'added !', 'comment_created': datetime.datetime(2020, 8, 22, 10, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 475144084, 'comment_body': 'thanks for the explanation, if I have restructured it now', 'comment_created': datetime.datetime(2020, 8, 22, 22, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 475266279, 'comment_body': 'I know I suggested this, but I realise now this introduces a race condition by clearing the list of switches. If we got two lane switches in one test then we would pass when we should fail.\r\nWe should remove the ""self.lane_switches = []"" after each test, and instead check for the accumulated set of lane switches, so the 2nd test would be:\r\n if self.lane_switches = [1,0]\r\nthen next one would be\r\n if self.lane_switches = [1,0,1]\r\netc', 'comment_created': datetime.datetime(2020, 8, 23, 20, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 475267621, 'comment_body': ""I see, I'll make that change and test it."", 'comment_created': datetime.datetime(2020, 8, 23, 21, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 475797749, 'comment_body': 'parsing the string seems fine now, we can check the XKF4.PI (EKF3 Primary Core Index) but probably would also have to cross check with the time-stamp and might over complicate things. Will look into this option if the string parsing fails anywhere.', 'comment_created': datetime.datetime(2020, 8, 24, 18, 2, 18, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 478178048, 'comment_body': 'Not a blocker but a small white space issue here..', 'comment_created': datetime.datetime(2020, 8, 27, 6, 27, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 478178385, 'comment_body': 'normally we put the bracket at the end of the line above in the .cpp files.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 478179427, 'comment_body': 'small formatting issue here, the else should be on the same line as the bracket before it', 'comment_created': datetime.datetime(2020, 8, 27, 6, 29, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 478182718, 'comment_body': 'is it a maxCoreError or a minCoreError?  Perhaps it\'s a ""bestCoreError"".', 'comment_created': datetime.datetime(2020, 8, 27, 6, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 478184149, 'comment_body': 'NitPick: should have a space after the ""if""', 'comment_created': datetime.datetime(2020, 8, 27, 6, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 478184392, 'comment_body': 'same nitpick here, should have a space after the ""if"".', 'comment_created': datetime.datetime(2020, 8, 27, 6, 36, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 478191498, 'comment_body': 'I guess the ""selected"" gps is the same as the ""active"" gps?  It might be nice to keep the number of synonyms to a minimum because it makes the developer stop for a moment to wonder if they are the same or not.  i.e. It might be good to rename ""selected_gps"" to ""active_gps"".', 'comment_created': datetime.datetime(2020, 8, 27, 6, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 478192822, 'comment_body': '""active"", ""selected"", ""preferred"" and ""primary"".. that\'s a lot of words to keep track of..', 'comment_created': datetime.datetime(2020, 8, 27, 6, 47, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 478212384, 'comment_body': 'yes, indeed makes more sense', 'comment_created': datetime.datetime(2020, 8, 27, 7, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 478212441, 'comment_body': 'fixed, thanks', 'comment_created': datetime.datetime(2020, 8, 27, 7, 27, 12, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 478212568, 'comment_body': 'fixed, thanks', 'comment_created': datetime.datetime(2020, 8, 27, 7, 27, 26, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 478213117, 'comment_body': 'fixed, thanks', 'comment_created': datetime.datetime(2020, 8, 27, 7, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 478213180, 'comment_body': 'fixed, thanks', 'comment_created': datetime.datetime(2020, 8, 27, 7, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 478233757, 'comment_body': 'we might want to keep selected_gps so it is consistent with the other 2 (selected_baro and selected_airspeed)', 'comment_created': datetime.datetime(2020, 8, 27, 8, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}, {'comment_id': 478251143, 'comment_body': ""indeed, we can do a separate 'cleansing' PR later "", 'comment_created': datetime.datetime(2020, 8, 27, 8, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'harshitsankhla', 'type': 'User'}]","[{'commit_sha': '24cf78397448ce5c80677d827ea2dda7231330ea', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c410085d0a7b8ce9a4885045928b1e81c6ff3a22', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '793ef2ef784885a7d26abac055ef69819d970991', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df9dbc923fb999b1032b92cbe2cb019f73475f3a', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97e2179b93bf97ebd6b3be04702b26cb4654b8b3', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cb77d85b8ef9f44c949502c3b6d662527d519b5', 'committer_username': 'tridge', 'committer_name': 'Andrew Tridgell', 'committer_email': None, 'commit_date': datetime.datetime(2011, 6, 6, 4, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd95fa3194af25bdbd8f9b2a0c17732bc8b2463a', 'committer_username': 'tridge', 'committer_name': 'Andrew Tridgell', 'committer_email': None, 'commit_date': datetime.datetime(2011, 6, 6, 4, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86d277a4c97c80c563549df49de924ee93c188ce', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c1fa40abb6b7b8d72d426b33941a953735cc76e', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a20d9e3fbd3993ced52aa7a7615c1dc782a87c8', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d9bc33e37aad9ddb2696deacd87ea656ee77c71', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df816d5c2bd046d26df988f21edfa63d5d4137e', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94fd9cda059c1075d83a1c7ed5b3317f2674a455', 'committer_username': 'harshitsankhla', 'committer_name': 'Harshit Kumar Sankhla', 'committer_email': None, 'commit_date': datetime.datetime(2015, 8, 1, 20, 50, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5de994a04bcb823b3fa1a5ecd573c4c9c08eded9', 'committer_username': 'tridge', 'committer_name': 'Andrew Tridgell', 'committer_email': None, 'commit_date': datetime.datetime(2011, 6, 6, 4, 46, 54, tzinfo=datetime.timezone.utc)}]",Harshit Kumar Sankhla,13604433,,User,,15,,3,4

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
7512484,ardupilot,ArduPilot/ardupilot,C++,17045,10412,658,1076,64548,2460,71,1029,"[{'id': 484301557, 'number': 15303, 'closed': datetime.datetime(2020, 9, 11, 0, 16, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 10, 20, 32, 28, tzinfo=datetime.timezone.utc), 'time_taken': 13433.0, 'time_delta': '3:43:53', 'additions': 59, 'deletions': 50, 'state': 'closed'}, {'id': 450103089, 'number': 14829, 'closed': datetime.datetime(2020, 8, 10, 6, 12, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 11, 0, 58, tzinfo=datetime.timezone.utc), 'time_taken': 2142682.0, 'time_delta': '24 days, 19:11:22', 'additions': 119, 'deletions': 3, 'state': 'closed'}, {'id': 441837898, 'number': 14711, 'closed': datetime.datetime(2020, 7, 8, 6, 25, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 7, 29, 28, tzinfo=datetime.timezone.utc), 'time_taken': 687364.0, 'time_delta': '7 days, 22:56:04', 'additions': 31, 'deletions': 19, 'state': 'closed'}, {'id': 438734824, 'number': 14674, 'closed': datetime.datetime(2020, 8, 27, 10, 20, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 18, 6, 42, tzinfo=datetime.timezone.utc), 'time_taken': 5588051.0, 'time_delta': '64 days, 16:14:11', 'additions': 749, 'deletions': 143, 'state': 'closed'}, {'id': 425287676, 'number': 14472, 'closed': datetime.datetime(2020, 8, 19, 20, 48, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 29, 19, 28, 7, tzinfo=datetime.timezone.utc), 'time_taken': 7089640.0, 'time_delta': '82 days, 1:20:40', 'additions': 122, 'deletions': 29, 'state': 'closed'}]"
