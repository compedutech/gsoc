pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1433574959,Automatic Moment of Inertia Calculations for Basic Shapes,"# ðŸŽ‰ New feature

Based on [this](http://sdformat.org/tutorials?tut=auto_inertial_params_proposal&cat=pose_semantics_docs&branch=jasmeet%2Fauto_inertial_params&repo=https%3A%2F%2Fgithub.com%2Fjasmeet0915%2Fsdf_tutorials) proposal.

## Summary

This PR adds Automatic Moment of Inertia Calculations for Basic Shapes (Box, Capsule, Cylinder, Ellipsoid and Sphere). As mentioned in the proposal the PR adds the following to the SDF Spec:
 * `//inertial/@auto` attribute to enable automatic calculations
 * `//link/collision/density` tag for mentioning the density for the collision 

> **Note:** This would require merging [this](https://github.com/gazebosim/sdformat/pull/1298) PR which bumps the SDF Spec version to 1.11 for the addition of new tags

## Demos & Usage Example
**Demo 1:** This demo shows 2 cylinders: one with default inertial values (right, green) and the other with automatic inertia calculations enabled (left, yellow).
The yellow cylinder uses `<inertial auto=""true"" />` and `<density>1240.0</density>` for automatic calculations.
<details>
  <summary>SDF snippet for the yellow cylinder</summary>

  ```xml
    <model name=""cylinder2"">
      <pose>0 4 1 0 0 0</pose>
      <link name=""cylinder_link"">
        <inertial auto=""true"" />
        <collision name=""collision"">
          <density>1240.0</density>
          <geometry>
            <cylinder>
              <radius>1</radius>
              <length>2</length>
            </cylinder>
          </geometry>
        </collision>
        <visual name=""visual"">
          <geometry>
            <cylinder>
              <radius>1</radius>
              <length>2</length>
            </cylinder>
          </geometry>
          <material>
            <diffuse>1.0 1.0 0.0 1.0</diffuse>
            <ambient>1.0 1.0 0.0 1.0</ambient>
            <specular>1.0 1.0 0.0 1.0</specular>
          </material>
        </visual>
      </link>
    </model>
  ```
</details>

![cylinder_auto_inertia_demo](https://github.com/gazebosim/sdformat/assets/23265149/89de5b2c-e513-412f-a77e-26f79b65a980)

**Demo 2:** This demo shows a model with a link having 2 collisions: a cube with a cylinder on top of it.

Here the model uses `<inertial auto=""true"" />` with `<density>2.0</density>` for the box collision and `<density>4.0</density>` for the cylinder.

<details>
  <summary>SDF snippet of the model in the demo</summary>

  ```xml
    <model name=""compound_model"">
      <pose>0 0 1.0 0 0 0</pose>
      <link name=""compound_link"">
        <inertial auto=""true"" />
        <collision name=""box_collision"">
          <pose>0 0 -0.5 0 0 0</pose>
	        <density>2.0</density>
          <geometry>
            <box>
              <size>1 1 1</size>
            </box>
          </geometry>
        </collision>
        <collision name=""cylinder_compound_collision"">
          <pose>0 0 0.5 0 0 0</pose>
          <density>4</density>
          <geometry>
            <cylinder>
              <radius>0.5</radius>
              <length>1.0</length>
            </cylinder>
          </geometry>
        </collision>

        <visual name=""cylinder_visual"">
          <pose>0 0 0.5 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.5</radius>
              <length>1.0</length>
            </cylinder>
          </geometry>
          <material>
            <ambient>1 1 0 1</ambient>
            <diffuse>1 1 0 1</diffuse>
            <specular>1 1 0 1</specular>
          </material>
        </visual>
        <visual name=""box_visual"">
          <pose>0 0 -0.5 0 0 0</pose>
          <geometry>
            <box>
              <size>1 1 1</size>
            </box>
          </geometry>
          <material>
            <ambient>1 0 0 1</ambient>
            <diffuse>1 0 0 1</diffuse>
            <specular>1 0 0 1</specular>
          </material>
        </visual>
      </link>
    </model>
  ```
</details>

![compound_model_auto_inertia](https://github.com/gazebosim/sdformat/assets/23265149/d24272f3-698f-4cd1-a401-2447a4a01aec)


## TODO:
- [x] Enable the addition of the Inertias of multiple collisions (with something like what is done for the Capsule shape [here](https://github.com/gazebosim/gz-math/blob/cf5d7f3c1b57d36665c66a01f8eaed50e3174593/include/gz/math/detail/Capsule.hh#L123)). This is a work in progress [here](https://github.com/jasmeet0915/sdformat/tree/jasmeet/multi_collision_inertia)
- [x] Make `auto` an attribute of `<inertial>` tag instead and calculate mass and inertial pose. Update the proposal accordingly.
- [x] Return an error in case `auto` is set and link has no collisions
- [x] Change `<material_density>` tag to something less verbose like just `<density>` or `<mass_density>`. Update the proposal accordingly.
- [x] Change all MassMatrix functions to return gz::math::inertial as we are now calculating all inertial values (mass, mass matrix, inertial pose)
- [x] Add an Enum to ParserConfig to configure the `CalculateInertial()` function. Update the function to use the enum from the config.
- [x] Update spec to add `//link/inertial/density` element.
- [x] Update the Proposed Implementation section in the proposal
- [ ] Add `MassMatrix` Methods to the Python API
- [x] Add tests

## Checklist
- [x] Signed all commits for DCO
- [x] Added tests
- [ ] Added example and/or tutorial
- [x] Updated documentation (as needed)
- [ ] Updated migration guide (as needed)
- [ ] Consider updating Python bindings (if the library has them)
- [x] `codecheck` passed (See [contributing](https://gazebosim.org/docs/all/contributing#contributing-code))
- [x] All tests passed (See [test coverage](https://gazebosim.org/docs/all/contributing#test-coverage))
- [ ] While waiting for a review on your PR, please help review [another open pull request](https://github.com/pulls?q=is%3Aopen+is%3Apr+user%3Agazebosim+archived%3Afalse+) to support the maintainers

**Note to maintainers**: Remember to use **Squash-Merge** and edit the commit message to match the pull request summary while retaining `Signed-off-by` messages.
",True,1299,https://api.github.com/repos/gazebosim/sdformat/pulls/1299,https://github.com/gazebosim/sdformat/pull/1299,closed,1513,15,37,92,1,96,2,0,"[{'name': 'beta'}, {'name': 'ðŸŽµ harmonic'}]",2023-07-13 18:08:04+00:00,2023-08-30 15:13:35+00:00,4136731.0,"47 days, 21:05:31","[{'comment_id': 1263258753, 'comment_body': 'The density of water should be 1000 kg/m^3.', 'comment_created': datetime.datetime(2023, 7, 14, 3, 43, 51, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1263676585, 'comment_body': '```suggestion\r\n    \\param[in] _density ...\r\n    \\return ...\r\n    public: std::optional<gz::math::MassMatrix3d>  MassMatrix(const double _density);\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 12, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1263676887, 'comment_body': 'Same comment as above', 'comment_created': datetime.datetime(2023, 7, 14, 12, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1263677082, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the collision.\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 12, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1263677507, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2023, 7, 14, 12, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1263677574, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2023, 7, 14, 12, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1263678028, 'comment_body': '```suggestion\r\n    /// \\brief ...\r\n    /// \\param[in] _density ...\r\n    /// \\return ...\r\n    public: std::optional< gz::math::MassMatrix3d > MassMatrix(const double _density);\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 12, 27, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1263678110, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2023, 7, 14, 12, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1263678347, 'comment_body': 'why this is empty ? remove ?', 'comment_created': datetime.datetime(2023, 7, 14, 12, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1265809750, 'comment_body': 'Corrected the value in bbacbe964780a6895d7c1cb3e74b2ee9747094a1', 'comment_created': datetime.datetime(2023, 7, 17, 19, 28, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1265820491, 'comment_body': 'Corrected in b092904db4ef5c491672619076e75f4509b3369b', 'comment_created': datetime.datetime(2023, 7, 17, 19, 40, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1265820671, 'comment_body': 'Corrected in b092904db4ef5c491672619076e75f4509b3369b', 'comment_created': datetime.datetime(2023, 7, 17, 19, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1265820787, 'comment_body': 'Corrected in b092904db4ef5c491672619076e75f4509b3369b', 'comment_created': datetime.datetime(2023, 7, 17, 19, 41, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1265820877, 'comment_body': 'Corrected in b092904db4ef5c491672619076e75f4509b3369b', 'comment_created': datetime.datetime(2023, 7, 17, 19, 41, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1265820955, 'comment_body': 'Corrected in b092904db4ef5c491672619076e75f4509b3369b', 'comment_created': datetime.datetime(2023, 7, 17, 19, 41, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1265821052, 'comment_body': 'Corrected in b092904db4ef5c491672619076e75f4509b3369b', 'comment_created': datetime.datetime(2023, 7, 17, 19, 41, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1265821142, 'comment_body': 'Corrected in b092904db4ef5c491672619076e75f4509b3369b', 'comment_created': datetime.datetime(2023, 7, 17, 19, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1266573377, 'comment_body': '```suggestion\r\n  public: double density{1000.0};\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 10, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1266573472, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 10, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1279877307, 'comment_body': 'Updated in c3c52aa223b69e6c406b327ab2c3cd1d8c2cb152', 'comment_created': datetime.datetime(2023, 7, 31, 21, 4, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1279877490, 'comment_body': 'Updated in c3c52aa223b69e6c406b327ab2c3cd1d8c2cb152', 'comment_created': datetime.datetime(2023, 7, 31, 21, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1290273817, 'comment_body': 'I know I suggested using `CalculateInertials`, but seeing it in the code made me realize we now have to different `CalculateInertials` functions. One that computes the `Inertiald` object and returns it and another that updates the `Inertiald` that it owns. So I think it would be best to give them different names. ', 'comment_created': datetime.datetime(2023, 8, 10, 15, 1, 46, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1290278380, 'comment_body': ""This warning should be emitted only if `auto=true` in `<inertial>`, but since we don't know that here, maybe this check needs to happen in `CalculateInertials`."", 'comment_created': datetime.datetime(2023, 8, 10, 15, 4, 56, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1290282864, 'comment_body': ""nit: No need to check if it's empty. The for loop would do that anyway."", 'comment_created': datetime.datetime(2023, 8, 10, 15, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1290286421, 'comment_body': ""Wouldn't it be better to call `Root::CalculateInertials` after everything is loaded?"", 'comment_created': datetime.datetime(2023, 8, 10, 15, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1290289385, 'comment_body': 'This can be a const function. Also, the `const` is not necessary for POD types. Here and in all other `CalculateInertial` functions.\r\n```suggestion\r\n    public: std::optional<gz::math::Inertiald> CalculateInertial(\r\n      double _density) const;\r\n```', 'comment_created': datetime.datetime(2023, 8, 10, 15, 13, 8, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1291001192, 'comment_body': 'I have removed the `const` specifier from double types in `CalculateInertial` functions in 0a6a528bfa0a709c917932f996bd2ce24bb62334. However, since we are[ setting the `gz:math::Material`](https://github.com/jasmeet0915/sdformat/blob/9c6f8c5e8e9821622f953e7d6b721e6e57084eef/src/Box.cc#L127C30-L127C30) for the shape using the density value in the `CalculateInertial` function, we might not be able to make it a `const` function. ', 'comment_created': datetime.datetime(2023, 8, 11, 7, 38, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1291002239, 'comment_body': 'Done in 138bdb4', 'comment_created': datetime.datetime(2023, 8, 11, 7, 39, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1291004359, 'comment_body': 'Done in fa1da0b', 'comment_created': datetime.datetime(2023, 8, 11, 7, 41, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1291006742, 'comment_body': 'Corrected in 9c6f8c5', 'comment_created': datetime.datetime(2023, 8, 11, 7, 44, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1291148261, 'comment_body': 'Hmmm makes sense. Just to be sure that would involve renaming the `CalculateInertials()` for `Geometry` and all Geometry Types since they all return an optional `Inertiald` object? In that case would `ComputeInertials()` work? Or maybe just `Inertials()`?', 'comment_created': datetime.datetime(2023, 8, 11, 10, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1293245126, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the box in kg/m^3\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 47, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293245461, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the capsule in kg/m^3\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 47, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293245797, 'comment_body': '```suggestion\r\n    /// \\param[out] _inertial An inertial object which will be set with the\r\n    /// \\param[in] _config Custom parser configuration\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 48, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293245909, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the cylinder in kg/m^3\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 48, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293246036, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the ellipsoid in kg/m^3\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293246243, 'comment_body': '```suggestion\r\n    /// \\param[out] _errors A vector of Errors object. Each object\r\n    /// \\param[in] _config Custom parser configuration\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293246410, 'comment_body': '```suggestion\r\n    /// \\param[out] _errrors A vector of Errors objects. Each errors contains an\r\n    /// \\param[in] _config Custom parser configuration\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293246561, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the sphere in kg/m^3\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293246698, 'comment_body': '```suggestion\r\n    /// \\param[out] _errrors A vector of Errors objects. Each errors contains an\r\n    /// \\param[in] _config Custom parser configuration\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 49, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293248611, 'comment_body': '```suggestion\r\n  std::optional<gz::math::Inertiald> geomInertial;\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 50, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293250964, 'comment_body': '```suggestion\r\n#include <optional>\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 9, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293491237, 'comment_body': 'Corrected in [ac943c6](https://github.com/gazebosim/sdformat/pull/1299/commits/ac943c652f84ff23acc602fd13f00f9d9a32f2a7)', 'comment_created': datetime.datetime(2023, 8, 14, 13, 54, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1293491521, 'comment_body': 'Corrected in [ac943c6](https://github.com/gazebosim/sdformat/pull/1299/commits/ac943c652f84ff23acc602fd13f00f9d9a32f2a7)', 'comment_created': datetime.datetime(2023, 8, 14, 13, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1293492031, 'comment_body': 'Corrected in [ac943c6](https://github.com/gazebosim/sdformat/pull/1299/commits/ac943c652f84ff23acc602fd13f00f9d9a32f2a7)', 'comment_created': datetime.datetime(2023, 8, 14, 13, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1293492153, 'comment_body': 'Corrected in [ac943c6](https://github.com/gazebosim/sdformat/pull/1299/commits/ac943c652f84ff23acc602fd13f00f9d9a32f2a7)', 'comment_created': datetime.datetime(2023, 8, 14, 13, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1293492301, 'comment_body': 'Corrected in [ac943c6](https://github.com/gazebosim/sdformat/pull/1299/commits/ac943c652f84ff23acc602fd13f00f9d9a32f2a7)', 'comment_created': datetime.datetime(2023, 8, 14, 13, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1293492431, 'comment_body': 'Corrected in [ac943c6](https://github.com/gazebosim/sdformat/pull/1299/commits/ac943c652f84ff23acc602fd13f00f9d9a32f2a7)', 'comment_created': datetime.datetime(2023, 8, 14, 13, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1293492535, 'comment_body': 'Corrected in [ac943c6](https://github.com/gazebosim/sdformat/pull/1299/commits/ac943c652f84ff23acc602fd13f00f9d9a32f2a7)', 'comment_created': datetime.datetime(2023, 8, 14, 13, 55, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1293492641, 'comment_body': 'Corrected in [ac943c6](https://github.com/gazebosim/sdformat/pull/1299/commits/ac943c652f84ff23acc602fd13f00f9d9a32f2a7)', 'comment_created': datetime.datetime(2023, 8, 14, 13, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1293494343, 'comment_body': 'Corrected in [8fef740](https://github.com/gazebosim/sdformat/pull/1299/commits/8fef7400ad028ca9015c8454e52e713a01f0129c)', 'comment_created': datetime.datetime(2023, 8, 14, 13, 57, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1293494941, 'comment_body': 'Added the `<optional>` header to all source files where it was used in [8fef740](https://github.com/gazebosim/sdformat/pull/1299/commits/8fef7400ad028ca9015c8454e52e713a01f0129c)', 'comment_created': datetime.datetime(2023, 8, 14, 13, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1300753993, 'comment_body': 'why is the `Root::CalculateInertials` method needed? I would think that `Link::CalculateInertials` could be called within `Link::Load` after all the collisions have been loaded', 'comment_created': datetime.datetime(2023, 8, 21, 23, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1300755282, 'comment_body': 'I would consider moving the following lines from `Link::CalculateInertials` to an `else` block after this `if` block\r\n\r\n* https://github.com/gazebosim/sdformat/pull/1299/files?w=1#diff-920aff8e860b82e3ec9bcae55d3127cb70cdd70ec9982e5ab2a5d30105676004R598-R621', 'comment_created': datetime.datetime(2023, 8, 21, 23, 48, 49, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1301224041, 'comment_body': 'nit:\r\n```suggestion\r\n                                     const ParserConfig &_config);\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 8, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1302180836, 'comment_body': ""Pose graphs have to be built before we can calculate composite inertials, so we can't call `Link::CalculateInertials`  in `Link::Load`.  We discussed putting in `Root::Load`, but we ran into issues where SDF objects being serialized and deserialized in gz-sim.\r\n\r\nHaving the inertia calculation be controlled by the user would add a bit of complexity, but it would have these advantages:\r\n  * allow users to control whether computed inertials should be saved into the SDF for future xml output\r\n  * update collision shapes and call `CalculateInertials` to recompute inertials\r\n "", 'comment_created': datetime.datetime(2023, 8, 22, 20, 48, 20, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1302483820, 'comment_body': 'never mind', 'comment_created': datetime.datetime(2023, 8, 23, 5, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1302493127, 'comment_body': ""> Pose graphs have to be built before we can calculate composite inertials, so we can't call `Link::CalculateInertials` in `Link::Load`.\r\n\r\nok, that's a good point\r\n\r\n> We discussed putting in `Root::Load`, but we ran into issues where SDF objects being serialized and deserialized in gz-sim.\r\n\r\nfrom a `libsdformat` perspective, I think it makes sense to put it in `Root::Load`, but it sounds like gz-sim doesn't handle that well. Having an additional method to call after `Load` reminds me of the `Init` methods in gazebo-classic. Could we add a flag to `Root::Load` / `ParserConfig` about whether to calculate inertials? then gz-sim could pass the flag telling it not to do so"", 'comment_created': datetime.datetime(2023, 8, 23, 5, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1303858436, 'comment_body': '@scpeters That seems like a good idea. We were planning to add an Enum that can be passed to the `CalculateInertial()` function to configure its behavior (Save Calculations, Reset Calculations, etc.). \r\nBut instead of that, we can add an Enum member to `ParserConfig` with `SKIP_CALCULATION` as one of the values that would tell `Root::Load()` to not call the `CalculateInertial()` function. Does that work?', 'comment_created': datetime.datetime(2023, 8, 24, 6, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1304285990, 'comment_body': 'yes that works!', 'comment_created': datetime.datetime(2023, 8, 24, 13, 0, 33, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1307373018, 'comment_body': ""I don't think the density has to be unique."", 'comment_created': datetime.datetime(2023, 8, 28, 12, 40, 50, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307373636, 'comment_body': 'This still says Mass Matrix. It should be Inertial ', 'comment_created': datetime.datetime(2023, 8, 28, 12, 41, 28, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307375961, 'comment_body': 'Most of our API that outputs `Errors` uses `Errors` as an output parameter instead of a return. This makes it easy to pass the `Errors` object from one function to the next without having to copy. Can you do that here?\n\nAlso, the convention is to put `Errors` as the first parameter of the function.', 'comment_created': datetime.datetime(2023, 8, 28, 12, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307377232, 'comment_body': 'This is the API I was suggesting in `Collision.hh` except that `sdf::Errors` needs to be the first parameter. ', 'comment_created': datetime.datetime(2023, 8, 28, 12, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307418856, 'comment_body': 'This makes it sound like you have to call `UpdateGraphs`. Can you expand this to say it can be called after `Root::Load` since frame graphs are built automatically? ', 'comment_created': datetime.datetime(2023, 8, 28, 13, 21, 38, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307420240, 'comment_body': 'Can you add that `density` values in `<collision>` elements will override this?', 'comment_created': datetime.datetime(2023, 8, 28, 13, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307430472, 'comment_body': ""Ah, yeah, this is not ideal since it won't be obvious to the user that this will actually mutate the object. Can you add to the documentation that in the process of calculating the inertial, the material property of the object will be changed?"", 'comment_created': datetime.datetime(2023, 8, 28, 13, 31, 2, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307441821, 'comment_body': ""This should be done in `Load` since `CalculateInertial` might be called on an object created programmatically, i.e., `dataPtr->sdf` is nullptr.\n\n```\nsdf::Collision foo;\nfoo.SetDensity(1.0);\nfoo.CalculateInerital(...);\n```\n\nThe error/warning message would still need to be here because it should only be emitted if we're doing automatic inertias. You can set a flag in `Load` to capture whether `density` was set from SDF or not."", 'comment_created': datetime.datetime(2023, 8, 28, 13, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307445866, 'comment_body': '```suggestion\n        this->dataPtr->name + "" is invalid.""});\n```', 'comment_created': datetime.datetime(2023, 8, 28, 13, 44, 1, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307448455, 'comment_body': ""Don't we need to account for `//collision/pose` for meshes as well? "", 'comment_created': datetime.datetime(2023, 8, 28, 13, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307449481, 'comment_body': 'Use `const` liberally. ', 'comment_created': datetime.datetime(2023, 8, 28, 13, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307453081, 'comment_body': 'Document ', 'comment_created': datetime.datetime(2023, 8, 28, 13, 49, 47, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307453187, 'comment_body': 'Document this variable ', 'comment_created': datetime.datetime(2023, 8, 28, 13, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307455041, 'comment_body': 'We should avoid checking `dataPtr->sdf` here. It could be a `nullptr` if the object was constructed programmatically. ', 'comment_created': datetime.datetime(2023, 8, 28, 13, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1307932361, 'comment_body': 'Removed the `dataPtr->sdf` based check from the the function. Added a separate flag variable to track whether auto inertia is enabled. Also added getter and setter functions for the variable so auto can be set to true programmatically. The changes can be found in [d652717](https://github.com/gazebosim/sdformat/pull/1299/commits/d6527176f3adac188fe34b972ce976306edb1f61)', 'comment_created': datetime.datetime(2023, 8, 28, 20, 43, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307932920, 'comment_body': 'Added in [af8052e](https://github.com/gazebosim/sdformat/pull/1299/commits/af8052ec8faf58206660a1fa508b58b7ccfbefe0)', 'comment_created': datetime.datetime(2023, 8, 28, 20, 44, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307933013, 'comment_body': 'Added in [af8052e](https://github.com/gazebosim/sdformat/pull/1299/commits/af8052ec8faf58206660a1fa508b58b7ccfbefe0)', 'comment_created': datetime.datetime(2023, 8, 28, 20, 44, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307934631, 'comment_body': 'Removed `dataPtr->sdf` based check from the function in [a658c25](https://github.com/gazebosim/sdformat/pull/1299/commits/a658c25f76cd67a881c2a6f6dcb1017a753ceba2). Also added a separate flag variable to check if the density value provided in the sdf.', 'comment_created': datetime.datetime(2023, 8, 28, 20, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307936418, 'comment_body': ""Updated the docs for all the shapes in [16ce852](https://github.com/gazebosim/sdformat/pull/1299/commits/16ce852ad51294257cf3b836fe54a5f1ea79ae66)\r\n\r\n> Ah, yeah, this is not ideal since it won't be obvious to the user that this will actually mutate the object. Can you add to the documentation that in the process of calculating the inertial, the material property of the object will be changed?\r\n\r\nMade this change in the same commit as well"", 'comment_created': datetime.datetime(2023, 8, 28, 20, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307937659, 'comment_body': 'Updated the API for all the `CalculateInertial()` functions in [943b886](https://github.com/gazebosim/sdformat/pull/1299/commits/943b8865b2e2b427c656ef2f69720e8d190b1b85)', 'comment_created': datetime.datetime(2023, 8, 28, 20, 49, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307937867, 'comment_body': 'Corrected the API in [943b886](https://github.com/gazebosim/sdformat/pull/1299/commits/943b8865b2e2b427c656ef2f69720e8d190b1b85)', 'comment_created': datetime.datetime(2023, 8, 28, 20, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307938144, 'comment_body': 'Update the doc in [fee0d90](https://github.com/gazebosim/sdformat/pull/1299/commits/fee0d9067b14d6f1e849b89e512c1fbf21dc6d30)', 'comment_created': datetime.datetime(2023, 8, 28, 20, 50, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307938500, 'comment_body': 'Updated the docs in [65c3703](https://github.com/gazebosim/sdformat/pull/1299/commits/65c370311bbb9ed2974b5f437951650421f67b0f)', 'comment_created': datetime.datetime(2023, 8, 28, 20, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307942486, 'comment_body': 'Update the description in [ff88720](https://github.com/gazebosim/sdformat/pull/1299/commits/ff887207bf68326e12fa75e525e97eb8cbe7a3f8)', 'comment_created': datetime.datetime(2023, 8, 28, 20, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307943438, 'comment_body': 'Corrected in [943b886](https://github.com/gazebosim/sdformat/pull/1299/commits/943b8865b2e2b427c656ef2f69720e8d190b1b85)', 'comment_created': datetime.datetime(2023, 8, 28, 20, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1307949704, 'comment_body': 'Since the origin of the mesh can be set anywhere in the mesh by the user (and that is not known by sdformat), I thought it would be best to leave the calculation of the inertial pose for the custom calculator (where all the mesh vertex data is available). This way the custom calculator would be responsible for setting the pose for the inertial in the link frame. What are your thoughts regarding this?', 'comment_created': datetime.datetime(2023, 8, 28, 21, 4, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1309116507, 'comment_body': 'Our convention has been to put output parameters first\n```suggestion\n    public: void CalculateInertial(sdf::Errors &_errors,\n                                   gz::math::Inertiald &_inertial,\n                                   const ParserConfig &_config);\n```', 'comment_created': datetime.datetime(2023, 8, 29, 16, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1309122563, 'comment_body': 'Can we say ""This function **must** be called after calling `Root::Load()` or `UpdateGraphs`..."" instead?', 'comment_created': datetime.datetime(2023, 8, 29, 17, 4, 9, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1309129412, 'comment_body': 'The origin of the mesh would be coinincident with the frame of the collision. For example, if the mesh origin is (0,0,0), but `//collision/pose` is (10, 0, 0), when the mesh is loaded, the final pose of the mesh origin would be 10,0,0. So I would think we need to take that into account somehow since the MOI calculator would not know `//collision/pose`.', 'comment_created': datetime.datetime(2023, 8, 29, 17, 11, 4, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1309247713, 'comment_body': 'Corrected the API in [c8f9fc4](https://github.com/gazebosim/sdformat/pull/1299/commits/c8f9fc4828d23b3e13097e3d609bea7e6af9f483)', 'comment_created': datetime.datetime(2023, 8, 29, 19, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1309248589, 'comment_body': 'Ohh okay. Makes sense. I have removed the condition to check for geometry type before resolving the inertial pose in [b05e267](https://github.com/gazebosim/sdformat/pull/1299/commits/b05e267fa77d19cda8f488f904b56e53a797beeb)', 'comment_created': datetime.datetime(2023, 8, 29, 19, 8, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1309259349, 'comment_body': 'Updated the doc in [3a21b69](https://github.com/gazebosim/sdformat/pull/1299/commits/3a21b69150a87d81ce02477184199746e1d6c60b)', 'comment_created': datetime.datetime(2023, 8, 29, 19, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1309262958, 'comment_body': 'Used `const` specifier variables wherever possible in [91c828a](https://github.com/gazebosim/sdformat/pull/1299/commits/91c828a1fbd6feb5cfb8b19d8c29ef8502fdf75d)', 'comment_created': datetime.datetime(2023, 8, 29, 19, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1309330446, 'comment_body': 'I was thinking along the lines of calling the function in `Root`, `World`, `Model`, and `Link` something like `ResolveAutoInertials` which would indicate that the function has side-effects, i.e, updates the auto inertials inside the models. We can keep `CalculateInertia` (singular) for the shapes since they calculate and return the inertia.', 'comment_created': datetime.datetime(2023, 8, 29, 20, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1309723994, 'comment_body': ""As mentioned in the [`migration.md`](https://github.com/gazebosim/sdformat/blob/sdf13/Migration.md) file in the 'Note on Backward Compatibility' section, the `.convert` files are used to facilitate forward conversion and are present in all the spec directories."", 'comment_created': datetime.datetime(2023, 8, 30, 6, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1334898668, 'comment_body': ""I had meant to say here that the SAVE behavior should be the default and that gz-sim should explicitly opt-in to SKIP, but I didn't fully articulate that. I've proposed this behavior change in https://github.com/gazebosim/sdformat/pull/1325 and https://github.com/gazebosim/gz-sim/pull/2166"", 'comment_created': datetime.datetime(2023, 9, 23, 1, 7, 41, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}]","[{'commit_sha': '93e497e080f395a9f9e08bcb04706848a7f98fa1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf33df29f933588c4ff92e4a8214ced54a1bdb12', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94505745cb5ebe173dd1d2bec5e7d501f64ab8e1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0841705eb47d67b1ee298c427a4ba34dec2bc200', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c27bfc918589cb4584f7b627766275ac58cc785', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a1f8a7755acbfd04453e90e954c52a2f89bf0e5', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3fc2a3941b401391d77d132afaf242ff50ec69b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbe7d3e81d5b094a9e6e0a81893ddc2503cd11cc', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45a67bd7939271376aa0b45ea96e75b126cb3907', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db76c5f32565c1ea3e812b65957f8f28dee535c0', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '729048382567afffd23a2fe2b4a06ccc7575b4b6', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8120ae193b25ca2f68b511c86fb421cc93601e7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a4707a9afae5300f08dfd9173eaf3026aa29ab', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbacbe964780a6895d7c1cb3e74b2ee9747094a1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b092904db4ef5c491672619076e75f4509b3369b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3c52aa223b69e6c406b327ab2c3cd1d8c2cb152', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ff8726b1181e964a9384092179cf1406fe1f3f8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cd267b6064b56121f3ab5623033e45ec2a5e9f7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6881c2d5aa28aff8feb60803f27cf5bcbdac8279', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd0551abbc1a73278e7bbd6296ab183d3b0cf2e1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d0c08422217734fac9fbec54654b4612b5357a6', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '942bf78fbf243d217818f7b77261237124e3a6f1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1eeed1e1240745f6624dceea2d56fe55cbc16602', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6a8a7b0866a766daa460634aace36394b6d33e8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33d9979aa1de536c08920ceb6952680af4fc5d29', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76842fe2c06096d474c44bde18cc8f170ffe7512', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f486a1b725670e50aa70ef4b51484be1540e2856', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '429eb2fef4ef6f36061585b6f1e1ee866ce95f19', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b349c0db65fa7dd21bb46971e185b3390a604d57', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f118634b1694545971b96036244cd5840e84242', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8214ae6074af70851164d836d6f20f5d029eb450', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d1e1bca32f25d41bdcbde946c3182d52c8e90fe', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1f7a51602f9da7910fb25093775919b03b376df', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '702dd9fcd2058ff358cb7eb5be7662d522f5c855', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67126dd588e33ab5d2fa6d1a4d66245124564e8e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a6a528bfa0a709c917932f996bd2ce24bb62334', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '138bdb45d76c00dc1383c7529134cde1f6e40cd6', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa1da0b40f3755878cd13529a3c50433c8728627', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c6f8c5e8e9821622f953e7d6b721e6e57084eef', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a483a24ef811dadc4bbb7b526956a042791a860', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f0c8405676e31e272d7f7b495466ba78366be41', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac943c652f84ff23acc602fd13f00f9d9a32f2a7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fef7400ad028ca9015c8454e52e713a01f0129c', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80e321cf2952dd458f5ab0b2ce7995849550df67', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3041e43b8527a5e27b9dca221e628b3397a0b5a', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc9849cd91cf471742e2652ba8b4af338269dad7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e41116cee7053559ffc43c25ac714aa6f480f25', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4731e211116fbf6bb86ae2fa7b9ca167c1d60b8b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aefdc3d965729a6d8bed0a44d5dd71e76720088', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2836be90d9520fba8c9601b2b6a26a550eaf84bb', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbe543fdb1c5cc2bfc0b505febeeb84ed4c21052', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d459c7c1ed64fd4c6db3f3fa35a8bf42fc193dc', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '464f7de0299bdc64f2e38d774a62ca8ef3347c07', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5af78f710d38ed37ed7cc392a3a1a03b9e771fae', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '485dd84b77fa4fcd69fe871606848063e06f3b6e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca78026ffbb8d8b1b4cb99ce7c595908573112b1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '002c643af84895126ff86b876dca8c1015207854', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1688522ae42c54b7c9bf81c22d9e263117699271', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230bde2b645e2f86239359d9e7a877f1b251a83c', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0df7eaeebaba6ab7b94b89f43888d97f8978f484', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b58b113e8ffa88a9e6cbe89543082a61aa68e90', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd06f0893db2d5cbfc333c25b5e663235bfbb7b7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '325854cb188bef904659c6bfc6b5bea1338afd4f', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc01633adc27164b778e814b1e786bc86ca33473', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1e74842cf9480789368d2db11938c6a7873358d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88d5eebe8af974f6be2427b261b883dfd2ec8f9d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ec1aac6fadaad1a4d4844fb4b9be0ece8612828', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc30cf98239a7de2bb1cb32789dba215a4dc91d9', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40811cf90d7b4b537767ca0e8755809f667bc71b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01c49c474137a7eb7e82835e73d3dd2390a6fffc', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5648ff408e1a47170f6b98d4336ae6ffca710ea', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a2357adf785ed76065282ee118a1553ed9f3f90', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60131ddca76629e3f1da131db71465696d443f97', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3cb221424e81fb037da385a00c1261137aaa55d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7483b89c14fb7e612450dfa0c77505a36abef42e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e772c244f39bb971fc1d3f7524bc67bfb9bf5488', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3cd3be5e94c99a80997429bd9c7ad7d890ef5c0', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef8ae18669f3b695456cee6e5274533e62952e3e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16ce852ad51294257cf3b836fe54a5f1ea79ae66', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65c370311bbb9ed2974b5f437951650421f67b0f', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fee0d9067b14d6f1e849b89e512c1fbf21dc6d30', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff887207bf68326e12fa75e525e97eb8cbe7a3f8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af8052ec8faf58206660a1fa508b58b7ccfbefe0', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '943b8865b2e2b427c656ef2f69720e8d190b1b85', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a658c25f76cd67a881c2a6f6dcb1017a753ceba2', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6527176f3adac188fe34b972ce976306edb1f61', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec627665250facb0448caf2914aa78a2f98f4775', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f9fc4828d23b3e13097e3d609bea7e6af9f483', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b05e267fa77d19cda8f488f904b56e53a797beeb', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a21b69150a87d81ce02477184199746e1d6c60b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91c828a1fbd6feb5cfb8b19d8c29ef8502fdf75d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1986cfd815ed1107dfffec0147257d91d865d354', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}]",Jasmeet Singh,23265149,jasmeet0915@gmail.com,User,,55,,34,56
1453403904,Callback based API for Implementing Custom Moment of Inertia Calculators for Meshes,"# ðŸŽ‰ New feature

Based on [this](http://sdformat.org/tutorials?tut=auto_inertial_params_proposal&branch=test_equation_rendering&repo=https%3A%2F%2Fgithub.com%2Fjasmeet0915%2Fsdf_tutorials) proposal.

> **Note:** This PR would require merging #1298 and #1299 

## Summary
 * Added functions to register custom calculator and get custom calculator in `ParserConfig`.
 * Added an `InterfaceMoiCalculator` class that can be used to send appropriate data to the calculator from sdformat.
 * Added a `<moi_calculator_params>` tag that can be used to access custom calculator params from the SDF by using tags with namespaces. (See [this](http://sdformat.org/tutorials?tut=custom_elements_attributes_proposal&cat=pose_semantics_docs&) for reference)
 * Added `MassMatrix()` function to `sdf::Mesh` class and updated the `Collision::MassMatrix()` function to pass the parser config as well as `sdf::ElementPtr` to `<moi_calculator_params>` tag.

## Demo & Usage Example

**Demo 1:** This demo shows the automatic inertia calculation feature on a rubber ducky model which is a non-convex mesh. On the left, we have the rubber ducky mesh with automatic calculations enabled and on the right, the mesh uses the default values.
> **Note:** The inertial values are due to the scale of the mesh. You can see the banana for scale in between the 2 ducks. A density value for the duck was used which was calculated by using the mass and volume data of the duck found online.

> **Note:** The `voxel_size` inertia param given in the snippet below is just for showing how the `<auto_inertia_params>` element could be used. This is not actually used by the calculator since we are not using a voxelization-based calculator.
> 
<details>
  <summary>SDF snippet for the duck mesh with auto inertial</summary>

  ```xml
<?xml version=""1.0"" ?>
<sdf version=""1.6"">
  <model name=""duck"">
    <link name=""duck_link"">
      <pose>0 0 0 0 0 0</pose>
      <inertial auto=""true"" />
      <collision name=""duck_collision"">
      	<pose>0 0 0 0 0 0</pose>
        <density>111.8</density>
        <auto_inertia_params>
          <gz:voxel_size>0.01</gz:voxel_size>
        </auto_inertia_params>
        <geometry>
          <mesh>
            <uri>meshes/duck_collider.dae</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name=""duck_visual"">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>meshes/duck.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <static>true</static>
  </model>
</sdf>
  ```
</details>

![duck_mesh_inertia](https://github.com/gazebosim/sdformat/assets/23265149/ebc4e785-6b35-4bc6-8c3a-307667e5b67d)

**Demo 2:** This demo shows 2 cylinders: One using a Collada cylinder mesh (right) and the other made using the `<cylinder>` geometry from SDF (left). 

Both use `<inertial auto=""true"" />` and we can see that the inertia values for both come up to be almost the same (within 0.005 tolerance). The mesh cylinder uses the mesh inertia calculator added to `gz-sim` and is used with `libsdformat` using the callback-based API.

<details>
  <summary>SDF snippet for the mesh cylinder</summary>

  ```xml
    <model name=""cylinder_dae"">
      <pose>4 4 1 0 0 0</pose>
      <link name=""cylinder_dae"">
        <pose>0 0 0 0 0 0</pose>
        <inertial auto=""false"" />
        <collision name=""cylinder_collision"">
          <density>1240.0</density>
          <auto_inertia_params>
            <gz:voxel_size>0.01</gz:voxel_size>
          </auto_inertia_params>
          <geometry>
            <mesh>
              <uri>cylinder_dae/meshes/cylinder.dae</uri>
            </mesh>
          </geometry>
        </collision>
        <visual name=""cylinder_visual"">
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <mesh>
              <uri>cylinder_dae/meshes/cylinder.dae</uri>
            </mesh>
          </geometry>
        </visual>
      </link>
      <static>true</static>
    </model>
  ```
</details>

![mesh_and_sdf_cylinder](https://github.com/gazebosim/sdformat/assets/23265149/0bcb6e48-51e2-4cf1-9c45-bc2f5f92b6d6)


TODO:
- [x] Update the nomenclature (interface class name, custom params tag name) to something more appropriate.
  - [x] Rename `<moi_calculator_params>` to `<auto_inertia_params>`.
 - [x] Rename `Mesh::MassMatrix()` to `Mesh::CalculateInertial()` and change the return type to optional Inertial.
 - [x] Make mesh optional in `CustomInertiaCalcProperties` class as it might be extended in future for other types of shapes.
 - [x] Add `//link/inertial/auto_inertia_params` element in spec
 - [x] Update the SDFormat Proposal with an explanation of the API and add a basic example of using the API.
 - [x] Add Tests
 - [ ] Add the functions to Python API

## Checklist
- [x] Signed all commits for DCO
- [x] Added tests
- [ ] Added example and/or tutorial
- [x] Updated documentation (as needed)
- [ ] Updated migration guide (as needed)
- [ ] Consider updating Python bindings (if the library has them)
- [x] `codecheck` passed (See [contributing](https://gazebosim.org/docs/all/contributing#contributing-code))
- [x] All tests passed (See [test coverage](https://gazebosim.org/docs/all/contributing#test-coverage))
- [ ] While waiting for a review on your PR, please help review [another open pull request](https://github.com/pulls?q=is%3Aopen+is%3Apr+user%3Agazebosim+archived%3Afalse+) to support the maintainers

**Note to maintainers**: Remember to use **Squash-Merge** and edit the commit message to match the pull request summary while retaining `Signed-off-by` messages.
",True,1304,https://api.github.com/repos/gazebosim/sdformat/pulls/1304,https://github.com/gazebosim/sdformat/pull/1304,closed,700,17,19,142,2,67,2,0,"[{'name': 'beta'}, {'name': 'ðŸŽµ harmonic'}]",2023-07-28 08:23:09+00:00,2023-08-30 19:49:50+00:00,2892401.0,"33 days, 11:26:41","[{'comment_id': 1293534653, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the box in kg/m^3\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 22, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293535665, 'comment_body': '```suggestion\r\n    /// \\param[out] _inertial An inertial object which will be set with the\r\n    /// \\param[in] _config Custom parser configuration\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 23, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293536209, 'comment_body': '```suggestion\r\n * Copyright 2023 Open Source Robotics Foundation\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293536466, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the cylinder in kg/m^3\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293536660, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the ellipsoid in kg/m^3\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 24, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293537075, 'comment_body': '```suggestion\r\n    /// \\param[in] _density The density of the geometry element.\r\n    /// \\param[in] _config\r\n    /// \\param[in] _calculatorParams\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 24, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293537567, 'comment_body': '```suggestion\r\n    /// \\param[out] _errors A vector of Errors object. Each object\r\n    /// \\param[in] _config Custom parser configuration\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 24, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293538223, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the mesh in kg/m^3\r\n    /// \\param[in] _calculatorParams\r\n    /// \\param[in] _config\r\n    /// \\return A std::optional with gz::math::Inertiald object or std::nullopt\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293538418, 'comment_body': '```suggestion\r\n    /// \\param[out] _errors A vector of Errors objects. Each errors contains an\r\n    /// \\param[in] _config Custom parser configuration\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 25, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293538870, 'comment_body': '```suggestion\r\n    /// \\param[in] _density Density of the sphere in kg/m^3\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293540049, 'comment_body': '```suggestion\r\n    /// \\param[out] _errrors A vector of Errors objects. Each errors contains an\r\n    /// Error code and a message. An empty errors vector indicates no errors\r\n    /// \\param[in] _config Custom parser configuration\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293540916, 'comment_body': '```suggestion\r\n#include <optional>\r\n#include <sstream>\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 26, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293541216, 'comment_body': '```suggestion\r\n#include <optional>\r\n#include <gz/math/Inertial.hh>\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293541446, 'comment_body': '```suggestion\r\n * Copyright 2023 Open Source Robotics Foundation\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293542030, 'comment_body': '```suggestion\r\n  public: double density{0.0};\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293542207, 'comment_body': '```suggestion\r\n  public: sdf::ElementPtr calculatorParams{nullptr};\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 27, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1293542957, 'comment_body': '```suggestion\r\n#include <optional>\r\n#include <gz/math/Inertial.hh>\r\n```', 'comment_created': datetime.datetime(2023, 8, 14, 14, 28, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1295766224, 'comment_body': 'Corrected in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295767062, 'comment_body': 'Corrected in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 40, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295772275, 'comment_body': 'Corrected in [00c1496](https://github.com/gazebosim/sdformat/pull/1304/commits/00c1496cb2e84a779b11a1e355ff3a40665b71b4)\r\n', 'comment_created': datetime.datetime(2023, 8, 16, 11, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295772534, 'comment_body': 'Corrected in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 45, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295772688, 'comment_body': 'Corrected in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 46, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295774066, 'comment_body': 'Corrected in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295774845, 'comment_body': 'Corrected in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295774934, 'comment_body': 'Corrected in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 48, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295775123, 'comment_body': 'Corrected in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 48, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295776558, 'comment_body': 'Added in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295777081, 'comment_body': 'Added in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 50, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295777307, 'comment_body': 'Added in [1f16e1f](https://github.com/gazebosim/sdformat/pull/1304/commits/1f16e1f0a5454acc5a30a4b86b8f273b1535eb95)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 50, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295779649, 'comment_body': 'Corrected in [00c1496](https://github.com/gazebosim/sdformat/pull/1304/commits/00c1496cb2e84a779b11a1e355ff3a40665b71b4)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 53, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295782348, 'comment_body': 'Added in 5e3d708e32db1531b64f950317f40345735196e2', 'comment_created': datetime.datetime(2023, 8, 16, 11, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295786346, 'comment_body': 'Added in [a929478](https://github.com/gazebosim/sdformat/pull/1304/commits/a9294787abba97f45c2247a94755f1e0c853c3b0)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295786540, 'comment_body': 'Added in [a929478](https://github.com/gazebosim/sdformat/pull/1304/commits/a9294787abba97f45c2247a94755f1e0c853c3b0)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1295787181, 'comment_body': 'Added in [746d86e](https://github.com/gazebosim/sdformat/pull/1304/commits/746d86ec85314586c64dd88eae9f693893c6511a)', 'comment_created': datetime.datetime(2023, 8, 16, 11, 58, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1296185837, 'comment_body': ""Can we make this a `std::optional<sdf::Mesh>` since it's possible this class contains properties of another type of shape? If we, in the future, add a new constructor that takes a different type of shape, then we would want `Mesh` here to return `std::nullopt`"", 'comment_created': datetime.datetime(2023, 8, 16, 16, 50, 59, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1305336403, 'comment_body': 'include `sdf/Errors` and `ParserConfig.hh`', 'comment_created': datetime.datetime(2023, 8, 25, 8, 8, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305337042, 'comment_body': 'include `ParseConfig.hh`', 'comment_created': datetime.datetime(2023, 8, 25, 8, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305337818, 'comment_body': 'include `gz::math::Inertiald` and `sdf/Error.hh`', 'comment_created': datetime.datetime(2023, 8, 25, 8, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305340965, 'comment_body': 'include ParserConfig.hh and `sdf/Types.hh` (Errors definition)', 'comment_created': datetime.datetime(2023, 8, 25, 8, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305341453, 'comment_body': 'include `ParserConfig.hh`', 'comment_created': datetime.datetime(2023, 8, 25, 8, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305343717, 'comment_body': 'include `MassMatrix3d`,gz::math::Vector3d and gz::math::Inertiald and gz::math::Pose3d, optional', 'comment_created': datetime.datetime(2023, 8, 25, 8, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305344575, 'comment_body': 'include `MassMatrix3d`,gz::math::Vector3d and gz::math::Inertiald and gz::math::Pose3d, optional', 'comment_created': datetime.datetime(2023, 8, 25, 8, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305345910, 'comment_body': 'include Element, ParserConfig', 'comment_created': datetime.datetime(2023, 8, 25, 8, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305347077, 'comment_body': 'include `gz::mat::inertial`, sdf::ParserConfig , sdf/Types.hh', 'comment_created': datetime.datetime(2023, 8, 25, 8, 18, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305358819, 'comment_body': 'include Root, Model, Link, Collision, gz::math::MassMatrix3d, gz::math::Vector3, gz::math::Pose', 'comment_created': datetime.datetime(2023, 8, 25, 8, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305359688, 'comment_body': 'header for this `gz::utils::MakeImpl`', 'comment_created': datetime.datetime(2023, 8, 25, 8, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305360973, 'comment_body': 'include gz::math::MassMatrix3d, gz::math::Vector3, gz::math::Pose3, gz::math::Inertial', 'comment_created': datetime.datetime(2023, 8, 25, 8, 30, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305361639, 'comment_body': 'include gz::math::Material, gz::math::Inertiald', 'comment_created': datetime.datetime(2023, 8, 25, 8, 30, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305362616, 'comment_body': 'include gz::math::MassMatrix3d, gz::math::Vector3, gz::math::Pose, gz::math::Inertial', 'comment_created': datetime.datetime(2023, 8, 25, 8, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305363478, 'comment_body': 'include Element, sdf/Types.hh, sdf/Error.hh', 'comment_created': datetime.datetime(2023, 8, 25, 8, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305365748, 'comment_body': 'include gz::math::MassMatrix3d,  gz::math::Inertiald, sdf::ParserConfig element, sdf/Types.hh, optional', 'comment_created': datetime.datetime(2023, 8, 25, 8, 33, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305366995, 'comment_body': 'include ParserConfig, Element', 'comment_created': datetime.datetime(2023, 8, 25, 8, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305367682, 'comment_body': 'include ParserConfig, sdf/Types.hh', 'comment_created': datetime.datetime(2023, 8, 25, 8, 35, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305368313, 'comment_body': 'include Element, ParserConfig', 'comment_created': datetime.datetime(2023, 8, 25, 8, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305369586, 'comment_body': 'include World.hh', 'comment_created': datetime.datetime(2023, 8, 25, 8, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305370319, 'comment_body': 'include PArserConfig.hh, sdf/Types.hh', 'comment_created': datetime.datetime(2023, 8, 25, 8, 37, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305370754, 'comment_body': 'include gz::math::Material ', 'comment_created': datetime.datetime(2023, 8, 25, 8, 38, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305371337, 'comment_body': 'include gz::math::MassMatrix3d, gz::math::Vector, gz::math::Inertial, gz::math::Pose3', 'comment_created': datetime.datetime(2023, 8, 25, 8, 38, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305372586, 'comment_body': 'include Link, sdf/Types.hh, gz::math::MassMatrix3d, gz::math::Vector3, gz::math::Pose, gz::math::Inertial', 'comment_created': datetime.datetime(2023, 8, 25, 8, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1305746961, 'comment_body': 'I have made `mesh` as `std::optional` member in [3c22811](https://github.com/gazebosim/sdformat/pull/1304/commits/3c2281108b6150d4736674c0dcd0b9052cf869dd)', 'comment_created': datetime.datetime(2023, 8, 25, 14, 36, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1310519436, 'comment_body': 'Make `sdf::Errors` the first parameter ', 'comment_created': datetime.datetime(2023, 8, 30, 16, 13, 57, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1310526808, 'comment_body': 'Can you also put this in the description of the `<auto_inertial_params>` in `collision.sdf` and `inertial.sdf`? ', 'comment_created': datetime.datetime(2023, 8, 30, 16, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1310657922, 'comment_body': 'I updated the description in [e921982](https://github.com/gazebosim/sdformat/pull/1304/commits/e921982bb49cff054209aaae5f5913aa2d661f6c)', 'comment_created': datetime.datetime(2023, 8, 30, 18, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1310658465, 'comment_body': 'Updated the API in all required places [4de7035](https://github.com/gazebosim/sdformat/pull/1304/commits/4de7035bab2d800d2ab6482c701cb2cac35778df)', 'comment_created': datetime.datetime(2023, 8, 30, 18, 20, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1310697330, 'comment_body': ""This hasn't been addressed "", 'comment_created': datetime.datetime(2023, 8, 30, 18, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1310700297, 'comment_body': ""I don't see it in `collision.sdf`. Also, the but about custom elements and the link to the sdf proposal would be good to include."", 'comment_created': datetime.datetime(2023, 8, 30, 19, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1310745042, 'comment_body': ""Nevermind, it's been forward declared."", 'comment_created': datetime.datetime(2023, 8, 30, 19, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}]","[{'commit_sha': '93e497e080f395a9f9e08bcb04706848a7f98fa1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf33df29f933588c4ff92e4a8214ced54a1bdb12', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94505745cb5ebe173dd1d2bec5e7d501f64ab8e1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0841705eb47d67b1ee298c427a4ba34dec2bc200', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c27bfc918589cb4584f7b627766275ac58cc785', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a1f8a7755acbfd04453e90e954c52a2f89bf0e5', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3fc2a3941b401391d77d132afaf242ff50ec69b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbe7d3e81d5b094a9e6e0a81893ddc2503cd11cc', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45a67bd7939271376aa0b45ea96e75b126cb3907', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db76c5f32565c1ea3e812b65957f8f28dee535c0', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '729048382567afffd23a2fe2b4a06ccc7575b4b6', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8120ae193b25ca2f68b511c86fb421cc93601e7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a4707a9afae5300f08dfd9173eaf3026aa29ab', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbacbe964780a6895d7c1cb3e74b2ee9747094a1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b092904db4ef5c491672619076e75f4509b3369b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6827d9a07eb3da732c41ed2773d131053d3a431b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85b31496a0b0dbe0f25ad0416c35cbfa8921f1c1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49c65280c9a9eef85cb158570f8d3a0a311e8350', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b335569417cc1385fe03374062d8618251d5669', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '408b6434f1a2f73c40ef1947f5a1bf1990acb7cf', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bc1cf6742d670ca63eb3dd89056f7981c030030', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1db03b3e91d0a6e9626a2be7c9c1cf237345c29', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd086d6803115221e27260b8f13ddb28492830922', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3c52aa223b69e6c406b327ab2c3cd1d8c2cb152', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ff8726b1181e964a9384092179cf1406fe1f3f8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cd267b6064b56121f3ab5623033e45ec2a5e9f7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6881c2d5aa28aff8feb60803f27cf5bcbdac8279', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd0551abbc1a73278e7bbd6296ab183d3b0cf2e1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d0c08422217734fac9fbec54654b4612b5357a6', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '942bf78fbf243d217818f7b77261237124e3a6f1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1eeed1e1240745f6624dceea2d56fe55cbc16602', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6a8a7b0866a766daa460634aace36394b6d33e8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33d9979aa1de536c08920ceb6952680af4fc5d29', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76842fe2c06096d474c44bde18cc8f170ffe7512', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f486a1b725670e50aa70ef4b51484be1540e2856', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '429eb2fef4ef6f36061585b6f1e1ee866ce95f19', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b349c0db65fa7dd21bb46971e185b3390a604d57', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f118634b1694545971b96036244cd5840e84242', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8214ae6074af70851164d836d6f20f5d029eb450', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d1e1bca32f25d41bdcbde946c3182d52c8e90fe', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1f7a51602f9da7910fb25093775919b03b376df', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '702dd9fcd2058ff358cb7eb5be7662d522f5c855', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67126dd588e33ab5d2fa6d1a4d66245124564e8e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e90455acfee137b9a252a94f51c68ffc7fd7fbc0', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a6a528bfa0a709c917932f996bd2ce24bb62334', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '138bdb45d76c00dc1383c7529134cde1f6e40cd6', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa1da0b40f3755878cd13529a3c50433c8728627', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c6f8c5e8e9821622f953e7d6b721e6e57084eef', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a483a24ef811dadc4bbb7b526956a042791a860', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1fdf8a0c2140ab62aee7ca680f3cf08d6dd2f2d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f0c8405676e31e272d7f7b495466ba78366be41', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '414ffd40b26ddd3ef576b21d873a553bd37998f8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d08091bdbabed0d31b05a1e7f6f166642bb63ae', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '373fa3f617e91f6f2d06c2033943ec21596bffd1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8088f4b0819caf1ca384e8a3da54e62d3b2fb6d9', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b2e37b2436dbe32d6fac4f6efbe1387726e2967', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac943c652f84ff23acc602fd13f00f9d9a32f2a7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fef7400ad028ca9015c8454e52e713a01f0129c', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f98215c66d49968e2cdfc04090076856d9db01a', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f16e1f0a5454acc5a30a4b86b8f273b1535eb95', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17d60e1d8d6cec683cfccc35b5932afd8ddd6799', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9a669879df5a148070d09638d6c0c0cbd9f758a', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00c1496cb2e84a779b11a1e355ff3a40665b71b4', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b23abc6e3c9abcd696b49f4c7112ab26005cf9a1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c44ff043e3c6615d9d7d77bae84c6c2a35eccad', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e3d708e32db1531b64f950317f40345735196e2', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9294787abba97f45c2247a94755f1e0c853c3b0', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '746d86ec85314586c64dd88eae9f693893c6511a', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80e321cf2952dd458f5ab0b2ce7995849550df67', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3041e43b8527a5e27b9dca221e628b3397a0b5a', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc9849cd91cf471742e2652ba8b4af338269dad7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e41116cee7053559ffc43c25ac714aa6f480f25', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4731e211116fbf6bb86ae2fa7b9ca167c1d60b8b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aefdc3d965729a6d8bed0a44d5dd71e76720088', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2836be90d9520fba8c9601b2b6a26a550eaf84bb', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbe543fdb1c5cc2bfc0b505febeeb84ed4c21052', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d459c7c1ed64fd4c6db3f3fa35a8bf42fc193dc', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '464f7de0299bdc64f2e38d774a62ca8ef3347c07', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5af78f710d38ed37ed7cc392a3a1a03b9e771fae', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '485dd84b77fa4fcd69fe871606848063e06f3b6e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca78026ffbb8d8b1b4cb99ce7c595908573112b1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '002c643af84895126ff86b876dca8c1015207854', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1688522ae42c54b7c9bf81c22d9e263117699271', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230bde2b645e2f86239359d9e7a877f1b251a83c', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0df7eaeebaba6ab7b94b89f43888d97f8978f484', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b58b113e8ffa88a9e6cbe89543082a61aa68e90', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd06f0893db2d5cbfc333c25b5e663235bfbb7b7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '325854cb188bef904659c6bfc6b5bea1338afd4f', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc01633adc27164b778e814b1e786bc86ca33473', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1e74842cf9480789368d2db11938c6a7873358d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88d5eebe8af974f6be2427b261b883dfd2ec8f9d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ec1aac6fadaad1a4d4844fb4b9be0ece8612828', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc30cf98239a7de2bb1cb32789dba215a4dc91d9', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40811cf90d7b4b537767ca0e8755809f667bc71b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01c49c474137a7eb7e82835e73d3dd2390a6fffc', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5648ff408e1a47170f6b98d4336ae6ffca710ea', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a65644bf047e94fe1c5d795fe87dcec874c85a8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a2357adf785ed76065282ee118a1553ed9f3f90', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60131ddca76629e3f1da131db71465696d443f97', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3cb221424e81fb037da385a00c1261137aaa55d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7483b89c14fb7e612450dfa0c77505a36abef42e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aa5e4251d44cafbb4f5c0e0246098d01880cb3c', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd72ac80cc81851f277e01f7fbd69d331a0c8801', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e772c244f39bb971fc1d3f7524bc67bfb9bf5488', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1083300db151fd2c8d1a8f13834221691b1948c', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c1f29ef379250e14a8a80447d37ad9e1adcc256', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c2281108b6150d4736674c0dcd0b9052cf869dd', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55d5ef1333976235301979f45903496fc40bec68', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c503112d7c2491bc35a2bf3315f8546448f36b24', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e2371d007c326fbfa5af7b1c4d310a0f2677561', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db5a4e292d0086221ffd690862f283484e015556', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70d9576fa8f371fa2da6938b64b3fbcf1a82c815', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7850bb2fba3de12212c5743453184973d365c447', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c65a0a597019f2c7456d61689b2417add487a8d0', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11126074764a3158568bb18a81c4f8b7b8f8760c', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3cd3be5e94c99a80997429bd9c7ad7d890ef5c0', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5e181ec1eb930dde23d06fbcbd4e26a9a79b25f', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef8ae18669f3b695456cee6e5274533e62952e3e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16ce852ad51294257cf3b836fe54a5f1ea79ae66', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65c370311bbb9ed2974b5f437951650421f67b0f', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fee0d9067b14d6f1e849b89e512c1fbf21dc6d30', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff887207bf68326e12fa75e525e97eb8cbe7a3f8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af8052ec8faf58206660a1fa508b58b7ccfbefe0', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '943b8865b2e2b427c656ef2f69720e8d190b1b85', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a658c25f76cd67a881c2a6f6dcb1017a753ceba2', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6527176f3adac188fe34b972ce976306edb1f61', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec627665250facb0448caf2914aa78a2f98f4775', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6818408905738ef069d12059ad12b805b8e15ba3', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adc2813af0adde64e3e2b16350233d9d6ce2d5c5', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f9fc4828d23b3e13097e3d609bea7e6af9f483', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b05e267fa77d19cda8f488f904b56e53a797beeb', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a21b69150a87d81ce02477184199746e1d6c60b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91c828a1fbd6feb5cfb8b19d8c29ef8502fdf75d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '563da4bb6ab858b8951193eda5d7f61c7605471e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1986cfd815ed1107dfffec0147257d91d865d354', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8953e10e9621d9614d0d61593ce33df6bef4c150', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb9f54e77397bc356cf272fce6fa55b2a45e9a9b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf9bfe96a65fa39b43bb269cfdffaa2a79a484a7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a414168290a417115067ddf6e0955068b3580093', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e921982bb49cff054209aaae5f5913aa2d661f6c', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4de7035bab2d800d2ab6482c701cb2cac35778df', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a49998ee4fc285a6b0f31cc932b67634492f48c', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}]",Jasmeet Singh,23265149,jasmeet0915@gmail.com,User,,55,,34,56
1454270970,Added Mesh Moment of Inertia Calculator ,"# ðŸŽ‰ New feature

Based on [this](http://sdformat.org/tutorials?tut=auto_inertial_params_proposal&cat=pose_semantics_docs&branch=jasmeet%2Fauto_inertial_params&repo=https%3A%2F%2Fgithub.com%2Fjasmeet0915%2Fsdf_tutorials) proposal.

## Summary
- The PR implements a Moment of Inertia Calculator based on the method described in [this](https://www.geometrictools.com/Documentation/PolyhedralMassProperties.pdf) document.
- The calculator works using the callback-based API from the sdformat made in [this](https://github.com/gazebosim/sdformat/pull/1304) PR.

## Demo & Usage Example

**Demo 1:** This demo shows the automatic inertia calculation feature on a rubber ducky model which is a non-convex mesh. On the left, we have the rubber ducky mesh with automatic calculations enabled and on the right, the mesh uses the default values.
> **Note:** The inertial values are due to the scale of the mesh. You can see the banana for scale in between the 2 ducks. A density value for the duck was used which was calculated by using the mass and volume data of the duck found online.

> **Note:** The `voxel_size` inertia param given in the snippet below is just for showing how the `<auto_inertia_params>` element could be used. This is not actually used by the calculator since we are not using a voxelization-based calculator.
> 
<details>
  <summary>SDF snippet for the duck mesh with auto inertial</summary>

  ```xml
<?xml version=""1.0"" ?>
<sdf version=""1.6"">
  <model name=""duck"">
    <link name=""duck_link"">
      <pose>0 0 0 0 0 0</pose>
      <inertial auto=""true"" />
      <collision name=""duck_collision"">
      	<pose>0 0 0 0 0 0</pose>
        <density>111.8</density>
        <auto_inertia_params>
          <gz:voxel_size>0.01</gz:voxel_size>
        </auto_inertia_params>
        <geometry>
          <mesh>
            <uri>meshes/duck_collider.dae</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name=""duck_visual"">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>meshes/duck.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <static>true</static>
  </model>
</sdf>
  ```
</details>

![duck_mesh_inertia](https://github.com/gazebosim/gz-sim/assets/23265149/0a4c5e7e-ffeb-4f72-981a-ae89ae08fc66)


**Demo 2:** This demo shows 2 cylinders: One using a Collada cylinder mesh (right) and the other made using the `<cylinder>` geometry from SDF (left). 

Both use `<inertial auto=""true"" />` and we can see that the inertia values for both come up to be almost the same (within 0.005 tolerance). The mesh cylinder uses the mesh inertia calculator added to `gz-sim` and is used with `libsdformat` using the callback-based API.

<details>
  <summary>SDF snippet for the mesh cylinder</summary>

  ```xml
    <model name=""cylinder_dae"">
      <pose>4 4 1 0 0 0</pose>
      <link name=""cylinder_dae"">
        <pose>0 0 0 0 0 0</pose>
        <inertial auto=""false"" />
        <collision name=""cylinder_collision"">
          <density>1240.0</density>
          <auto_inertia_params>
            <gz:voxel_size>0.01</gz:voxel_size>
          </auto_inertia_params>
          <geometry>
            <mesh>
              <uri>cylinder_dae/meshes/cylinder.dae</uri>
            </mesh>
          </geometry>
        </collision>
        <visual name=""cylinder_visual"">
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <mesh>
              <uri>cylinder_dae/meshes/cylinder.dae</uri>
            </mesh>
          </geometry>
        </visual>
      </link>
      <static>true</static>
    </model>
  ```
</details>

![mesh_and_sdf_cylinder](https://github.com/gazebosim/gz-sim/assets/23265149/0084ed50-3ca9-4fba-bfce-0f4e7757a96a)


TODO:
- [x] Update return type for Inertia Calculator to optional inertial object
- [x] Add Tests

## Checklist
- [x] Signed all commits for DCO
- [x] Added tests
- [ ] Added example and/or tutorial
- [ ] Updated documentation (as needed)
- [ ] Updated migration guide (as needed)
- [ ] Consider updating Python bindings (if the library has them)
- [x] `codecheck` passed (See [contributing](https://gazebosim.org/docs/all/contributing#contributing-code))
- [ ] All tests passed (See [test coverage](https://gazebosim.org/docs/all/contributing#test-coverage))
- [ ] While waiting for a review on your PR, please help review [another open pull request](https://github.com/pulls?q=is%3Aopen+is%3Apr+user%3Agazebosim+archived%3Afalse+) to support the maintainers

**Note to maintainers**: Remember to use **Squash-Merge** and edit the commit message to match the pull request summary while retaining `Signed-off-by` messages.",True,2061,https://api.github.com/repos/gazebosim/gz-sim/pulls/2061,https://github.com/gazebosim/gz-sim/pull/2061,closed,707,3,10,39,8,26,2,0,"[{'name': 'beta'}, {'name': 'ðŸŽµ harmonic'}]",2023-07-28 18:40:20+00:00,2023-08-31 15:03:56+00:00,2924616.0,"33 days, 20:23:36","[{'comment_id': 1278856874, 'comment_body': '```suggestion\r\n * Copyright (C) 2023 Open Source Robotics Foundation\r\n```', 'comment_created': datetime.datetime(2023, 7, 31, 6, 50, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1278857652, 'comment_body': 'use `gzdbg` or remove', 'comment_created': datetime.datetime(2023, 7, 31, 6, 51, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1278857813, 'comment_body': 'use `gzdbg` or remove', 'comment_created': datetime.datetime(2023, 7, 31, 6, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1278858162, 'comment_body': 'use `gzdbg` or remove', 'comment_created': datetime.datetime(2023, 7, 31, 6, 52, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1278858458, 'comment_body': '```suggestion\r\n#endif\r\n\r\n```', 'comment_created': datetime.datetime(2023, 7, 31, 6, 52, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1300737593, 'comment_body': 'Corrected in [ee6f863](https://github.com/gazebosim/gz-sim/pull/2061/commits/ee6f863535a4f9fabd39e914f9bf5861f5d939da)', 'comment_created': datetime.datetime(2023, 8, 21, 23, 11, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1300737766, 'comment_body': 'Removed in [c79a397](https://github.com/gazebosim/gz-sim/pull/2061/commits/c79a397140370dff5c9fa65aa73d7ce321b4cd9b)', 'comment_created': datetime.datetime(2023, 8, 21, 23, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1300737870, 'comment_body': 'Removed in [c79a397](https://github.com/gazebosim/gz-sim/pull/2061/commits/c79a397140370dff5c9fa65aa73d7ce321b4cd9b)', 'comment_created': datetime.datetime(2023, 8, 21, 23, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1300738028, 'comment_body': 'Corrected in [ee6f863](https://github.com/gazebosim/gz-sim/pull/2061/commits/ee6f863535a4f9fabd39e914f9bf5861f5d939da)', 'comment_created': datetime.datetime(2023, 8, 21, 23, 12, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1300739532, 'comment_body': 'Removed in [c79a397](https://github.com/gazebosim/gz-sim/pull/2061/commits/c79a397140370dff5c9fa65aa73d7ce321b4cd9b)', 'comment_created': datetime.datetime(2023, 8, 21, 23, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1303535125, 'comment_body': 'I think we may need to update the deb control file once this gets in: https://github.com/gazebo-release/gz-sim8-release/blob/main/ubuntu/debian/control#L15', 'comment_created': datetime.datetime(2023, 8, 23, 20, 57, 29, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 1303566815, 'comment_body': '```suggestion\r\n      /// Inertia Calculator. This would use to calculate the\r\n```', 'comment_created': datetime.datetime(2023, 8, 23, 21, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 1303567933, 'comment_body': 'use `nullptr` instead of `NULL`', 'comment_created': datetime.datetime(2023, 8, 23, 21, 36, 35, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 1303569072, 'comment_body': 'add `this->` when calling member functions, i.e. \r\n`this->GetMeshTriangles(meshTriangles, mesh);` and \r\n`this->CalculateMassProperties(meshTriangles, density, meshMassMatrix, centreOfMass);`', 'comment_created': datetime.datetime(2023, 8, 23, 21, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'iche033', 'type': 'User'}, {'comment_id': 1306389285, 'comment_body': 'Corrected in [a2a1cba](https://github.com/gazebosim/gz-sim/pull/2061/commits/a2a1cba22551449b3afa2c276d0e6bd02271f780)', 'comment_created': datetime.datetime(2023, 8, 26, 9, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1306389355, 'comment_body': 'Replaced in `NULL` with `nullptr` in [a2a1cba](https://github.com/gazebosim/gz-sim/pull/2061/commits/a2a1cba22551449b3afa2c276d0e6bd02271f780)', 'comment_created': datetime.datetime(2023, 8, 26, 9, 33, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1306389615, 'comment_body': 'Used `this->` for calling member functions in [b46c2b5](https://github.com/gazebosim/gz-sim/pull/2061/commits/b46c2b559b939d0112ccfa1b71bed22807c43703)', 'comment_created': datetime.datetime(2023, 8, 26, 9, 35, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1306405954, 'comment_body': 'include gz::math::Pose ', 'comment_created': datetime.datetime(2023, 8, 26, 11, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1306407359, 'comment_body': 'sdf/Types.hh and CustomInertiaCalcProperties', 'comment_created': datetime.datetime(2023, 8, 26, 11, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1306407403, 'comment_body': 'gz::math::pose3', 'comment_created': datetime.datetime(2023, 8, 26, 11, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1306407407, 'comment_body': 'sdf/Types.hh', 'comment_created': datetime.datetime(2023, 8, 26, 11, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1306407560, 'comment_body': 'sdf/ParserConfig.hh, sdf/Types.hh', 'comment_created': datetime.datetime(2023, 8, 26, 11, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1306407745, 'comment_body': 'include \\<string\\>, gz::sim:: EntityComponentManager , gz::sim::Entity', 'comment_created': datetime.datetime(2023, 8, 26, 11, 17, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1306407746, 'comment_body': 'include Matrix3, Vector3', 'comment_created': datetime.datetime(2023, 8, 26, 11, 17, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1306407801, 'comment_body': 'use `common::joinPaths` and include gz/common/Filesystem.hh', 'comment_created': datetime.datetime(2023, 8, 26, 11, 18, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1306407909, 'comment_body': '```suggestion\r\n#include <gz/sim/Link.hh>\r\n#include <gz/sim/Model.hh>\r\n```', 'comment_created': datetime.datetime(2023, 8, 26, 11, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}]","[{'commit_sha': 'b8fc26e8ea5de76f129e5bf58b0d5541cce2266e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '049dd72d07084feff1308e293e55ce45af21a318', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40935570fe8ecfd9806cdc314a2b4604570d70d7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b36e1cf285d604413745a7dfbe8d6cf964b92e89', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c5dbbb1688304cce653c7b19077a4bd8c3a3903', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff02e02f3aa859595e24c20711e987491820ec9b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abe1e6afef8bdb1a3444c0364c5af07ed759e286', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d3dfa73f269a4cd77ba434b4d9207b61a5ee7d1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31d736ecfaf0dc1e516301a32b3be7b2b0da4f42', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18deb49a241fd4d354cad76d8b130bedaae09613', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '990355036da907de84cbdb45613ee5361904bf2f', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55fe2d24bb84a6385d46376be5bf037ced14f78b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '030cb703f30938cd44c7ad4cc5e847d7e8969483', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee6f863535a4f9fabd39e914f9bf5861f5d939da', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c79a397140370dff5c9fa65aa73d7ce321b4cd9b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fc158780d734aa038b266bfad033fa6542e9063', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40c510087ff6d622535002098320857ad4b6a634', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d293252ead6f30b9a6042ba9ecd392e0866074d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b46c2b559b939d0112ccfa1b71bed22807c43703', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81a7c4c4f22363667a671836f064285cae646c4b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e316239d81713d3e58135d379088f8a05431d1f2', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bed22866476433385943987277b9ab4128ff08ef', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a1cba22551449b3afa2c276d0e6bd02271f780', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2878f92d27270647d1ec740cafd3b434f92de0ee', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a53f441d6d850623ab27f5f0b166197c27f639bd', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '682b1702a0351c6653bc0c954059859b19cfd43c', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba82c425c801c7316e7f3237000f5d96845f5177', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57004bcfa2796fbbab339120e4d1d396bdead167', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f55f0f31ff30ee62c8bbf82fc78bbb8ec29bce7e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '855d013650a8a34cd99ffe8deb9482247fbbfea8', 'committer_username': 'azeey', 'committer_name': 'Addisu Z. Taddese', 'committer_email': None, 'commit_date': datetime.datetime(2010, 2, 18, 16, 29, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c96be46d4f83b74b29a5713909d8685f6fc61166', 'committer_username': 'azeey', 'committer_name': 'Addisu Z. Taddese', 'committer_email': None, 'commit_date': datetime.datetime(2010, 2, 18, 16, 29, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbf4f441c6e0df3d6f783d10774d4b40df020e90', 'committer_username': 'azeey', 'committer_name': 'Addisu Z. Taddese', 'committer_email': None, 'commit_date': datetime.datetime(2010, 2, 18, 16, 29, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '945a3ca43f7d0c179053910505afc4becf0dc48d', 'committer_username': 'azeey', 'committer_name': 'Addisu Z. Taddese', 'committer_email': None, 'commit_date': datetime.datetime(2010, 2, 18, 16, 29, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '786445443000eb35209bd4fd509c197fe48738b8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32e0e115f8eb21b975e9a3587e2f29434c862365', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '775ba7dfc2d4bcf9d1ece3e34e8b4df3dd8f703a', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c62d382de5e5f15cf53cff611cfed8051c106b8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d7380e5070068290a70ab742948bbb114334eea', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b1dbe50f299f6c7339b25e10b39e1621dc1030a', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}]",Jasmeet Singh,23265149,jasmeet0915@gmail.com,User,,55,,34,56
1415420956,Copy 1.10 spec to 1.11 for sdformat14,"# ðŸŽ‰ New feature

This PR creates a new version of the SDF spec 1.11 targeted for the `sdformat14`. It would be required by the **Automatic Moment of Inertia Calculation** project. The SDF proposal for the same can be found [here](http://sdformat.org/tutorials?tut=auto_inertial_params_proposal&cat=pose_semantics_docs&branch=jasmeet%2Fauto_inertial_params&repo=https%3A%2F%2Fgithub.com%2Fjasmeet0915%2Fsdf_tutorials)

## Checklist
- [x] Signed all commits for DCO
- [ ] Added tests
- [ ] Added example and/or tutorial
- [ ] Updated documentation (as needed)
- [ ] Updated migration guide (as needed)
- [ ] Consider updating Python bindings (if the library has them)
- [ ] `codecheck` passed (See [contributing](https://gazebosim.org/docs/all/contributing#contributing-code))
- [x] All tests passed (See [test coverage](https://gazebosim.org/docs/all/contributing#test-coverage))
- [ ] While waiting for a review on your PR, please help review [another open pull request](https://github.com/pulls?q=is%3Aopen+is%3Apr+user%3Agazebosim+archived%3Afalse+) to support the maintainers

**Note to maintainers**: Remember to use **Squash-Merge** and edit the commit message to match the pull request summary while retaining `Signed-off-by` messages.",True,1298,https://api.github.com/repos/gazebosim/sdformat/pulls/1298,https://github.com/gazebosim/sdformat/pull/1298,closed,3530,5,69,9,4,0,1,0,[{'name': 'beta'}],2023-06-30 21:23:40+00:00,2023-08-03 15:39:02+00:00,2916922.0,"33 days, 18:15:22",[],"[{'commit_sha': '93e497e080f395a9f9e08bcb04706848a7f98fa1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf33df29f933588c4ff92e4a8214ced54a1bdb12', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94505745cb5ebe173dd1d2bec5e7d501f64ab8e1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e553e8049affbce84b1724998950f0477692dcf2', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aa928a8fa3998a5c0a0478c0d5278840d14d88c', 'committer_username': 'azeey', 'committer_name': 'Addisu Z. Taddese', 'committer_email': None, 'commit_date': datetime.datetime(2010, 2, 18, 16, 29, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5119e6d39fc7e921b58414836e8e94ddac6fc1d2', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f6da4f9e0a4803768f71eabc7017ebd77cc3af1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5724c6b8a85725754020009dbd7bc0d166e9d1d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b43f202fac1f3632120594e5fe6f46b63f19087c', 'committer_username': 'azeey', 'committer_name': 'Addisu Z. Taddese', 'committer_email': None, 'commit_date': datetime.datetime(2010, 2, 18, 16, 29, 6, tzinfo=datetime.timezone.utc)}]",Jasmeet Singh,23265149,jasmeet0915@gmail.com,User,,55,,34,56
1390529263,Proposal for Automatic Calculation of Moments of Inertia for SDFormat Links,"This proposal is in regard to GSoC'23 Project titled: ""Automatically Computing Moments of Inerial for SDFormat Links""
## Summary
<!--Explain changes made, the expected behavior, and provide any other additional
context (e.g., screenshots, gifs) if appropriate.-->
The proposal suggests adding new attributes and elements to support the automatic calculation of Moments of Inertia and Products of Inertia for a link in SDFormat. The proposal targets SDFormat 1.11 and `libsdformat14`. 

## Preview
http://sdformat.org/tutorials?tut=auto_inertial_params_proposal&cat=pose_semantics_docs&branch=jasmeet%2Fauto_inertial_params&repo=https%3A%2F%2Fgithub.com%2Fjasmeet0915%2Fsdf_tutorials
",True,92,https://api.github.com/repos/gazebosim/sdf_tutorials/pulls/92,https://github.com/gazebosim/sdf_tutorials/pull/92,closed,426,0,2,23,1,98,1,0,[{'name': 'beta'}],2023-06-13 12:37:53+00:00,2023-09-14 19:50:27+00:00,8061154.0,"93 days, 7:12:34","[{'comment_id': 1231997599, 'comment_body': '```suggestion\r\nJasmeet Singh `<jasmeet0915@gmail.com>`, Addisu Taddese `<addisu@openrobotics.org>`, Dharini Dutia `<dharinidutia@openrobotics.org>`\r\n```', 'comment_created': datetime.datetime(2023, 6, 16, 9, 12, 39, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232004694, 'comment_body': 'Could add links to Moments of Inertia wiki', 'comment_created': datetime.datetime(2023, 6, 16, 9, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232009935, 'comment_body': 'Very long sentence, please consider rephrasing\r\n```suggestion\r\nSetting physically plausible values for inertial parameters is crucial. However, these parameters are often complex to comprehend and visualize. And users may tend to enter wrong values leading to incorrect simulation. Through native support for automatic calculation of inertial parameters of a link through an SDF specification would enable simulators that utilize SDFormat to generate an accurate simulation. \r\n```', 'comment_created': datetime.datetime(2023, 6, 16, 9, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232013494, 'comment_body': 'Can be removed as already covered in Introduction', 'comment_created': datetime.datetime(2023, 6, 16, 9, 27, 46, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232016474, 'comment_body': '- Not sure if we should be talking about Gazebo here?\r\n- Rephrase ""smoother and user-friendly workflow"" to the specific impact on maintaining physically plausible and accurate simulation', 'comment_created': datetime.datetime(2023, 6, 16, 9, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232017122, 'comment_body': '```suggestion\r\nTo specify the `<inertial>` element of a `<link>` in SDFormat, the user needs to add the `<mass>`, `<pose>`, and `<inertia>` tags. Here `<mass>` is the mass of the link and `<pose>` is the pose of the Centre of Mass with respect to the link frame. The `<inertia>` tag, on the other hand, needs to enclose the following 6 tags:\r\n```', 'comment_created': datetime.datetime(2023, 6, 16, 9, 31, 28, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232018144, 'comment_body': 'Add References section with links and resources to the concepts referenced here', 'comment_created': datetime.datetime(2023, 6, 16, 9, 32, 25, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232019052, 'comment_body': 'Please rephrase this section by adding a numbered list of changes suggested, perhaps with example xml code of the proposed addtions.', 'comment_created': datetime.datetime(2023, 6, 16, 9, 33, 15, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232022833, 'comment_body': '```suggestion\r\n *  The parsing of the proposed SDFormat elements and the Moment of Inertia calculations for primitive geometries(Box, Cylinder, Sphere, Ellipsoid and Capsule) can be implemented as an integral part of `libsdformat`. This would help enable all simulators that rely on SDFormat to utilize this feature.\r\n```', 'comment_created': datetime.datetime(2023, 6, 16, 9, 37, 3, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232026295, 'comment_body': '```suggestion\r\n * In case of 3D meshes being used as geometries, a modular architecture can be followed where the user can integrate a custom Moments of Inertia calculator. Though for a default implementation of MOI calculations of 3D meshes [Voxelization of Meshes](#inertia-matrix-calculation-with-voxelization-for-3d-mesh) is proposed \r\n```\r\nsee section [cite].', 'comment_created': datetime.datetime(2023, 6, 16, 9, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232028213, 'comment_body': '```suggestion\r\n * For links where `<inertial>` tag is not set, the inertial calculations would be omitted if `<static>` is set to true. [By default](https://github.com/gazebosim/sdformat/blob/4530dba5e83b5ee7868156d3040e7554f93b19a6/src/Link.cc#L164) it is set as \\\\(I\\_{xx}=I\\_{yy}=I\\_{zz}=1\\\\) and \\\\(I\\_{xy}=I\\_{yz}=I\\_{xz}=0\\\\).\r\n```', 'comment_created': datetime.datetime(2023, 6, 16, 9, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1232029320, 'comment_body': 'Can be skipped, readers could be directed to a resource if they want to learn more', 'comment_created': datetime.datetime(2023, 6, 16, 9, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1236873185, 'comment_body': 'Fixed in 0a09b7da1822bb893b2b4aafce5d3a8c27874ff2', 'comment_created': datetime.datetime(2023, 6, 21, 11, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1236875270, 'comment_body': 'Added a link to [this](https://en.wikipedia.org/wiki/List_of_moments_of_inertia) wiki page in 0a09b7da1822bb893b2b4aafce5d3a8c27874ff2', 'comment_created': datetime.datetime(2023, 6, 21, 11, 51, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1236875446, 'comment_body': 'Fixed in 0a09b7da1822bb893b2b4aafce5d3a8c27874ff2', 'comment_created': datetime.datetime(2023, 6, 21, 11, 51, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1236875807, 'comment_body': 'Removed in 0a09b7da1822bb893b2b4aafce5d3a8c27874ff2', 'comment_created': datetime.datetime(2023, 6, 21, 11, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1236876791, 'comment_body': 'Rephrased this section and added a complete code snippet in 0a09b7da1822bb893b2b4aafce5d3a8c27874ff2', 'comment_created': datetime.datetime(2023, 6, 21, 11, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1236877117, 'comment_body': 'Fixed in 0a09b7da1822bb893b2b4aafce5d3a8c27874ff2', 'comment_created': datetime.datetime(2023, 6, 21, 11, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1236877405, 'comment_body': 'Fixed in 0a09b7da1822bb893b2b4aafce5d3a8c27874ff2', 'comment_created': datetime.datetime(2023, 6, 21, 11, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1253358025, 'comment_body': 'Please limit lines to about 80 characters for nicer diffs and easier reviews ', 'comment_created': datetime.datetime(2023, 7, 5, 16, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1253358581, 'comment_body': 'nit: SDF -> SDFormat.', 'comment_created': datetime.datetime(2023, 7, 5, 16, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1253360016, 'comment_body': 'nit: softwares -> software. Plural of software is software.', 'comment_created': datetime.datetime(2023, 7, 5, 16, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1253360814, 'comment_body': '```suggestion\r\n * Using CAD softwares like [Fusion360](https://www.autodesk.in/products/fusion-360/overview?term=1-YEAR&tab=subscription) or [Solidworks](https://www.solidworks.com/). Many users design their robot models using such CAD software which usually provide plugins that automatically generates the URDF/SDF for their model. These plugins handle the calculation of the inertial parameters. For example, Fusion360 provides the [Fusion2URDF](https://github.com/syuntoku14/fusion2urdf) plugin which automatically generates a URDF with all the inertial parameters.\r\n```', 'comment_created': datetime.datetime(2023, 7, 5, 16, 31, 14, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1253363189, 'comment_body': 'It would be best to avoid gz-sim in this proposal if possible. Can this be reworded? ', 'comment_created': datetime.datetime(2023, 7, 5, 16, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1253364836, 'comment_body': ""Since you're using xpath syntax, it would be good to mention that and provide a link to http://sdformat.org/tutorials?tut=convention_tutorial&cat=specification&"", 'comment_created': datetime.datetime(2023, 7, 5, 16, 35, 34, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1253366290, 'comment_body': '`material_density` seems a little verbose. Why not just `density` or `mass_density`?', 'comment_created': datetime.datetime(2023, 7, 5, 16, 37, 6, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1253367434, 'comment_body': 'The `<geometry>` tag should have the same indentation has `<material_density>`.', 'comment_created': datetime.datetime(2023, 7, 5, 16, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1253370364, 'comment_body': 'Can you add what happens if `auto=""false""` or `auto` is not specified at all, just to be more explicit?', 'comment_created': datetime.datetime(2023, 7, 5, 16, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1253383722, 'comment_body': 'How is this axis defined? Do we take the center of mass frame defined in `//inertial/pose`? If so, how would we satisfy the condition that the  weighted position vectors relative to the COM is zero?\r\n![image](https://github.com/gazebosim/sdf_tutorials/assets/206116/8332e92f-8aa4-4f63-b150-6a9f9d322120)\r\n\r\nOr maybe we disallow specifying `//inertial/pose` if `//inertial[@auto=""true""]` and calculate the COM as part of the automatic MOI calculation?', 'comment_created': datetime.datetime(2023, 7, 5, 16, 54, 24, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1253391893, 'comment_body': 'Can you add a section on the API of the modular architecture for providing a MOI calculator function? Also, I believe even the voxelization method will not be implemented in libsdformat. It can be discussed here as a reference implementation, but I think discussing the API for the external MOI calculator is more important.', 'comment_created': datetime.datetime(2023, 7, 5, 16, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1263257722, 'comment_body': 'The density of water is about 1000 kg/m^3', 'comment_created': datetime.datetime(2023, 7, 14, 3, 41, 35, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1264295428, 'comment_body': '```suggestion\r\nSetting physically plausible values for inertial parameters is crucial for an accurate simulation. However, these parameters are often complex to comprehend and visualize, and users may tend to enter wrong values leading to incorrect simulation. Therefore, native support for calculating inertial parameters through SDFormat specification would enable accurate simulations in simulators that use SDFormat.\r\n```', 'comment_created': datetime.datetime(2023, 7, 15, 2, 40, 57, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1264295496, 'comment_body': '```suggestion\r\n* [Proposed Implementation](#proposed-implementation): Detailed explanation of the proposed implementation and modifications to be done in the C++ API of requried libraries like libsdformat. \r\n```', 'comment_created': datetime.datetime(2023, 7, 15, 2, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1270344787, 'comment_body': 'Fixed in d240e64041c050fe6b5af3c3e1310c907c106625', 'comment_created': datetime.datetime(2023, 7, 21, 7, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1270345057, 'comment_body': 'Corrected the value in d240e64041c050fe6b5af3c3e1310c907c106625', 'comment_created': datetime.datetime(2023, 7, 21, 7, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1270345440, 'comment_body': 'Fixed indentation in d240e64041c050fe6b5af3c3e1310c907c106625', 'comment_created': datetime.datetime(2023, 7, 21, 7, 49, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1270380596, 'comment_body': 'Added xpath syntax section in 16d8cc4d17f5a7d0313b699821bd9d5bb6156a59', 'comment_created': datetime.datetime(2023, 7, 21, 8, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1270390099, 'comment_body': 'Fixed in d240e64041c050fe6b5af3c3e1310c907c106625', 'comment_created': datetime.datetime(2023, 7, 21, 8, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1270390270, 'comment_body': 'Fixed in d240e64041c050fe6b5af3c3e1310c907c106625', 'comment_created': datetime.datetime(2023, 7, 21, 8, 25, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1270390464, 'comment_body': 'Corrected in d240e64041c050fe6b5af3c3e1310c907c106625', 'comment_created': datetime.datetime(2023, 7, 21, 8, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1270390589, 'comment_body': 'Corrected in d240e64041c050fe6b5af3c3e1310c907c106625', 'comment_created': datetime.datetime(2023, 7, 21, 8, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1271262161, 'comment_body': 'A link may contain 0 or multiple collision tags. The proposal should specify how inertial properties are computed in cases when there is not exactly 1 collision. If there are no collisions and the `auto` attribute is set to true, we could return an error. If there are multiple collisions, we could aggregate them using the `gz::math::Inertial` class and its `+` operator (see examples from its [unit test](https://github.com/gazebosim/gz-math/blob/gz-math7/src/Inertial_TEST.cc#L372-L621))', 'comment_created': datetime.datetime(2023, 7, 22, 7, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1271262248, 'comment_body': 'I think the `auto` attribute should be applied to `<inertial>` element (not `<inertia>`) so that it could compute the mass and inertial pose values as well', 'comment_created': datetime.datetime(2023, 7, 22, 7, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1275518355, 'comment_body': ""@scpeters Thank you for the feedback. The case to handle multiple collisions is already under development [here](https://github.com/jasmeet0915/sdformat/tree/jasmeet/multi_collision_inertia) and would be added in [this](https://github.com/gazebosim/sdformat/pull/1299) PR. I'll also update the PR to handle a case of 0 collisions by returning an error and would update the proposal accordingly."", 'comment_created': datetime.datetime(2023, 7, 26, 21, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1279882372, 'comment_body': 'Changed the tag in the proposal in 3490edd2fb5a536c170f15ffb117190ae3f788e9. Also updated the same in [sdformat](https://github.com/gazebosim/sdformat/pull/1299)', 'comment_created': datetime.datetime(2023, 7, 31, 21, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1300718784, 'comment_body': '```suggestion\r\n* [Motivation](#motivation): A short explanation to provide context regarding the problem statement and the need for this feature\r\n```', 'comment_created': datetime.datetime(2023, 8, 21, 22, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1300719043, 'comment_body': '```suggestion\r\n```xml\r\n```', 'comment_created': datetime.datetime(2023, 8, 21, 22, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1300719640, 'comment_body': '```suggestion\r\n```xml\r\n```', 'comment_created': datetime.datetime(2023, 8, 21, 22, 37, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1300784897, 'comment_body': 'apologies for suggesting changes so late, but I think it would be nice to specify a single density in `//link/inertial/density` that would apply to all associated shapes. This is slightly less flexible, but it avoids duplicating the density values in each collision element', 'comment_created': datetime.datetime(2023, 8, 22, 0, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1303444002, 'comment_body': 'Thank you for the suggestion @scpeters. \r\nThis seems like a good option to have. However, given the remaining time frame before the code freeze and the remaining work, I am not sure if it would be possible to get this implemented. Would it suffice if we update the SDF spec to include the `//link/inertial/density` element before the code freeze and implement this functionality later in a minor release by overloading the [Collision::CalculateInertial()](https://github.com/jasmeet0915/sdformat/blob/5af78f710d38ed37ed7cc392a3a1a03b9e771fae/src/Collision.cc#L220) function to take the density value from Link as a parameter [when called](https://github.com/jasmeet0915/sdformat/blob/5af78f710d38ed37ed7cc392a3a1a03b9e771fae/src/Link.cc#L614)?\r\n\r\nThis would be good to have for another element (`//collision/auto_inertia_params`) that was added in https://github.com/gazebosim/sdformat/pull/1304 (Apologies for not mentioning this element in the proposal)', 'comment_created': datetime.datetime(2023, 8, 23, 19, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1303449024, 'comment_body': 'yes, that sounds totally reasonable. I think adding `//link/inertial/density` to the spec is enough for the first release', 'comment_created': datetime.datetime(2023, 8, 23, 19, 21, 31, tzinfo=datetime.timezone.utc), 'commenter': 'scpeters', 'type': 'User'}, {'comment_id': 1310671345, 'comment_body': '```suggestion\r\n * In case of 3D meshes being used as geometries, a modular callback-based architecture can be followed where the user can integrate their custom Moments of Inertia calculator.  A [Voxelization-based](#proposed-mesh-inertia-calculation-methods) and an integration-based numerical method were explored for computing the inertial properties (mass, mass matrix and center of mass) of 3D meshes.\r\n```', 'comment_created': datetime.datetime(2023, 8, 30, 18, 32, 53, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1310672602, 'comment_body': 'Please add resource links to Voxels, voxelization method and its usecases in mesh processing', 'comment_created': datetime.datetime(2023, 8, 30, 18, 34, 4, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1310686806, 'comment_body': 'I\'m not sure if we typically add sources but this needs citations to support the statement ""widely used for mesh processing""\r\nSome links I found useful:\r\n\r\n- https://en.wikipedia.org/wiki/Voxel\r\n- http://www.open3d.org/docs/0.12.0/tutorial/geometry/voxelization.html\r\n- https://towardsdatascience.com/how-to-voxelize-meshes-and-point-clouds-in-python-ca94d403f81d', 'comment_created': datetime.datetime(2023, 8, 30, 18, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1310690016, 'comment_body': '```suggestion\r\n 2. `//collision/density` element for specifying the density of the collision geometry of a link. This density value would be used to calculate the inertial parameters of the respective collision geometries. Adding this as part of the `<collision>` tag would allow a user to simulate links with different material types for different collisions. By default, the value of density would be set equal to that of water which is 1000 kg/m^3. A `//link/inertial/density` element would also be added in the spec to allow users to specify the density values on a link level instead of specifying the same values for each collision.\r\n```', 'comment_created': datetime.datetime(2023, 8, 30, 18, 51, 3, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1310690893, 'comment_body': '```suggestion\r\n 3. `//collision/auto_inertia_params` element would be added that can be used to provide some parameters or options for a custom inertia calculator. Similar to the `density` element above, a link-level `//link/inertial/auto_inertia_params` element would also be added. This would allow the user to provide inertia calculator parameters for the whole link while retaining the flexibility to specify different parameters for each collision. Custom elements and attributes using a namespace prefix can be used to provide the user-defined parameters for a custom calculator. More about this can be found in [this](http://sdformat.org/tutorials?tut=custom_elements_attributes_proposal&cat=pose_semantics_docs&#specifying-custom-elements-and-attributes) proposal.\r\n```', 'comment_created': datetime.datetime(2023, 8, 30, 18, 51, 54, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1310691972, 'comment_body': '```suggestion\r\n> Note: In the section below, the term **primitive geometries** is used to collectively describe Box, Capusle, Cylinder, Ellipsoid and Sphere geometries.\r\n```', 'comment_created': datetime.datetime(2023, 8, 30, 18, 53, 1, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1310692386, 'comment_body': '```suggestion\r\n* [Proposed Implementation](#proposed-implementation): Detailed explanation of the proposed implementation and modifications to be done in the C++ API of requried libraries like `libsdformat`. \r\n```', 'comment_created': datetime.datetime(2023, 8, 30, 18, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1310696126, 'comment_body': ""Let's indicate what type of error is thrown"", 'comment_created': datetime.datetime(2023, 8, 30, 18, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1310698921, 'comment_body': '```suggestion\r\n`CalculateInertial()` functions are also added to the `sdf::Root`, `sdf::World`, `sdf::Model`, `sdf::Link`, `sdf::Collision` and then `sdf::Geometry` classes. Calling the `CalculateInertial()` function of any class, recursively calls the `CalculateInertial()` for each element below it down the chain. For eg, generally a user adds a callback to `Root::CalculateInertial()` which calls `World::CalculateInertials()` for all the worlds, which in turn calls the `Model::CaluclateInertials()` for all the models in the world and so on until the final `CalculateInertial()` for the respective geometry type is called where the chain ends.\r\n```', 'comment_created': datetime.datetime(2023, 8, 30, 19, 0, 2, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1314566171, 'comment_body': 'Corrected in [8b902d8](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/8b902d835468ab130a8d2a832dedfd444e2013b0)', 'comment_created': datetime.datetime(2023, 9, 4, 7, 54, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1314566418, 'comment_body': 'Added the error type in [8b902d8](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/8b902d835468ab130a8d2a832dedfd444e2013b0)', 'comment_created': datetime.datetime(2023, 9, 4, 7, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1314566584, 'comment_body': 'Corrected in [8b902d8](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/8b902d835468ab130a8d2a832dedfd444e2013b0)', 'comment_created': datetime.datetime(2023, 9, 4, 7, 54, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1314567041, 'comment_body': 'Corrected in [8b902d8](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/8b902d835468ab130a8d2a832dedfd444e2013b0)', 'comment_created': datetime.datetime(2023, 9, 4, 7, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1314567207, 'comment_body': 'Corrected in [8b902d8](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/8b902d835468ab130a8d2a832dedfd444e2013b0)', 'comment_created': datetime.datetime(2023, 9, 4, 7, 55, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1314567368, 'comment_body': 'Corrected in [8b902d8](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/8b902d835468ab130a8d2a832dedfd444e2013b0)', 'comment_created': datetime.datetime(2023, 9, 4, 7, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1314567532, 'comment_body': 'Corrected in [8b902d8](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/8b902d835468ab130a8d2a832dedfd444e2013b0)', 'comment_created': datetime.datetime(2023, 9, 4, 7, 55, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1314568129, 'comment_body': 'Added a references section with all the links in [d0c2523](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/d0c25238a22888f21e76c210a764cdb29c64b663)', 'comment_created': datetime.datetime(2023, 9, 4, 7, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1316392326, 'comment_body': 'Done in [fc2c6fb](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/fc2c6fb8ab22e25cc3d265354eda3d2dab4a2f87)', 'comment_created': datetime.datetime(2023, 9, 5, 20, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1316394715, 'comment_body': 'As per the latest update in the feature, we calculate the `//inertial/pose` if `//inertia/[@auto=""true""]` as part of the mesh inertia calculator. The user provided pose values are overwritten in this case.', 'comment_created': datetime.datetime(2023, 9, 5, 20, 52, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1316396626, 'comment_body': 'Added reference links in: [d0c2523](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/d0c25238a22888f21e76c210a764cdb29c64b663)', 'comment_created': datetime.datetime(2023, 9, 5, 20, 54, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1316398787, 'comment_body': 'Done in [d0c2523](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/d0c25238a22888f21e76c210a764cdb29c64b663)', 'comment_created': datetime.datetime(2023, 9, 5, 20, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1316415956, 'comment_body': '`auto` applied to `<inertial>` in [221dce7](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/221dce7a374eeca82113478c874a5f3656737c2d)', 'comment_created': datetime.datetime(2023, 9, 5, 21, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1316417457, 'comment_body': 'Done in [01ea4ff](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/01ea4ff8ee4351de5fbe440cb31f11e80b627462)', 'comment_created': datetime.datetime(2023, 9, 5, 21, 20, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1316419626, 'comment_body': 'Updated the section to include more information about different scenarios (multiple or no collisions) in [8b902d8](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/8b902d835468ab130a8d2a832dedfd444e2013b0)', 'comment_created': datetime.datetime(2023, 9, 5, 21, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1319168366, 'comment_body': '```suggestion\r\nCurrently, the origin of the mesh being used needs to be set at the geometric center \r\n```', 'comment_created': datetime.datetime(2023, 9, 7, 22, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1319168493, 'comment_body': '```suggestion\r\nof the link and `<pose>` is the pose of the Center of Mass with respect to the link frame. \r\n```', 'comment_created': datetime.datetime(2023, 9, 7, 22, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1319222041, 'comment_body': 'List is not being rendered', 'comment_created': datetime.datetime(2023, 9, 8, 0, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1319223449, 'comment_body': '```suggestion\r\n inertial properties (mass, mass matrix and center of mass) of 3D meshes: a [Voxelization-based](#voxelization-based-method)\r\n```', 'comment_created': datetime.datetime(2023, 9, 8, 0, 9, 23, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1319224334, 'comment_body': '```suggestion\r\nout (discarded). This way, we are left with a voxelized mesh that closely resembles the original mesh.\r\n```', 'comment_created': datetime.datetime(2023, 9, 8, 0, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1319225688, 'comment_body': '```suggestion\r\nThis method utilizes Gaussâ€™s Theorem and Greeneâ€™s Theorem of integration. First, we convert volume \r\nintegrals to surface integrals using Gaussâ€™s Theorem and then surface integrals to line \r\nintegrals using Greeneâ€™s Theorem<sup>[\\[5\\]](#References)</sup>.\r\n```', 'comment_created': datetime.datetime(2023, 9, 8, 0, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1319226967, 'comment_body': 'This is important for usage right? Should this be documented some place else as well? Probably a Limitations or Considerations sub-section in implementation?', 'comment_created': datetime.datetime(2023, 9, 8, 0, 17, 22, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1319227547, 'comment_body': 'Does this method have any advantages? Maybe include a sentence or two on what usecases its suitable or any limitations?', 'comment_created': datetime.datetime(2023, 9, 8, 0, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1320150422, 'comment_body': 'Corrected in [fca06ae](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/fca06ae64a6843311fa125ff89c6f9a376c37599)', 'comment_created': datetime.datetime(2023, 9, 8, 17, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1320150555, 'comment_body': 'Corrected in [fca06ae](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/fca06ae64a6843311fa125ff89c6f9a376c37599)', 'comment_created': datetime.datetime(2023, 9, 8, 17, 25, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1320150692, 'comment_body': 'Corrected in [fca06ae](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/fca06ae64a6843311fa125ff89c6f9a376c37599)', 'comment_created': datetime.datetime(2023, 9, 8, 17, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1320150850, 'comment_body': 'Corrected in [fca06ae](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/fca06ae64a6843311fa125ff89c6f9a376c37599)', 'comment_created': datetime.datetime(2023, 9, 8, 17, 26, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1320150989, 'comment_body': 'Corrected in [fca06ae](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/fca06ae64a6843311fa125ff89c6f9a376c37599)', 'comment_created': datetime.datetime(2023, 9, 8, 17, 26, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1320156766, 'comment_body': ""The Proposed Implementation section of the proposal focuses more on the implementation from libsdformat's side. Therefore, instead of adding it there, I created a sub-section in the `Integration-based Numerical Method` and added this point. I have added some other points as well that explain this method's limitations and suitable use cases. The changes can be found in [fca06ae](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/fca06ae64a6843311fa125ff89c6f9a376c37599)"", 'comment_created': datetime.datetime(2023, 9, 8, 17, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1320157165, 'comment_body': 'Added the section in [fca06ae](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/fca06ae64a6843311fa125ff89c6f9a376c37599)', 'comment_created': datetime.datetime(2023, 9, 8, 17, 32, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1320253328, 'comment_body': 'It seems to be rendered correctly for me. \r\n![Screenshot from 2023-09-09 00-51-54](https://github.com/gazebosim/sdf_tutorials/assets/23265149/79055753-706b-4dd8-b465-b79063b1a1c1)\r\nAre you referring to the bullets and numbers both being rendered? I tried removing the bullets but that resulted in the list not being rendered at all.', 'comment_created': datetime.datetime(2023, 9, 8, 19, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1321914177, 'comment_body': 'Great thanks!\r\n', 'comment_created': datetime.datetime(2023, 9, 11, 18, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1325134028, 'comment_body': ""I wouldn't say it's recommended because the way we have it set up now, `Root::CalculateInertial` is called in `Root::Load` after the PoseGraph has been built. I would instead say these configurations would allow the user to skip inertial calculation if they know the the DOM object doesn't have a valid PoseGraph."", 'comment_created': datetime.datetime(2023, 9, 13, 22, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325135689, 'comment_body': ""This is discussing something implemented in gz-sim, so perhaps we should say there's a reference implementation in gz-sim and point to the file before listing these key points. Alternatively, we could remove this altogether since it'll be documented in gz-sim."", 'comment_created': datetime.datetime(2023, 9, 13, 22, 27, 17, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325136595, 'comment_body': 'Any reason why this title is different from the title in manifest.xml?', 'comment_created': datetime.datetime(2023, 9, 13, 22, 29, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325663709, 'comment_body': 'Ohh thank you for pointing that out. I have corrected the titles in both in [8eba84c](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/8eba84c738ecc39bebe599aba4e9adf5d5e599cb)', 'comment_created': datetime.datetime(2023, 9, 14, 9, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1325664345, 'comment_body': 'I have added a link to the reference implementation in [52b582e](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/52b582ee7c155e32a76fe28b278d6af3276b5967)', 'comment_created': datetime.datetime(2023, 9, 14, 9, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1325664733, 'comment_body': 'Updated the doc in [52b582e](https://github.com/gazebosim/sdf_tutorials/pull/92/commits/52b582ee7c155e32a76fe28b278d6af3276b5967)', 'comment_created': datetime.datetime(2023, 9, 14, 9, 26, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}]","[{'commit_sha': 'a159bc9216dbbdece52240bf7b8fb5fab33f8043', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36088da60452e8e4b32b92f5c6599bcd779048c6', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a017fd58d59e85eefeb656ee99e1a351fd2e704', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a1dd872282381fd34e2f30f29c0c2e9ed2ae9c8', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a09b7da1822bb893b2b4aafce5d3a8c27874ff2', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd240e64041c050fe6b5af3c3e1310c907c106625', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16d8cc4d17f5a7d0313b699821bd9d5bb6156a59', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3490edd2fb5a536c170f15ffb117190ae3f788e9', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '221dce7a374eeca82113478c874a5f3656737c2d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0156e7de1de3dbfd6ae3dba973ca8970f744659b', 'committer_username': 'quarkytale', 'committer_name': 'Dharini Dutia', 'committer_email': 'dharinidutia@intrinsic.ai', 'commit_date': datetime.datetime(2016, 12, 21, 10, 20, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14781eb457ef084d6ffad4043f26a876f4e0ddda', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc2c6fb8ab22e25cc3d265354eda3d2dab4a2f87', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f93afb70f4bd68ba9027f1ee1d68bd988aa15db', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6de244dea72d90e001dd284c14c54b3e90de34bf', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f21b593005e14187c1a09068442269fb9ab4a4bd', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '154845aa768f6f83525c1243e53fcf52960809cb', 'committer_username': 'scpeters', 'committer_name': 'Steve Peters', 'committer_email': 'scpeters@openrobotics.org', 'commit_date': datetime.datetime(2013, 2, 20, 19, 5, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b902d835468ab130a8d2a832dedfd444e2013b0', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0c25238a22888f21e76c210a764cdb29c64b663', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01ea4ff8ee4351de5fbe440cb31f11e80b627462', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fca06ae64a6843311fa125ff89c6f9a376c37599', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25ea0f36740d1343e72758136f220189df622a3e', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8eba84c738ecc39bebe599aba4e9adf5d5e599cb', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52b582ee7c155e32a76fe28b278d6af3276b5967', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}]",Jasmeet Singh,23265149,jasmeet0915@gmail.com,User,,55,,34,56
1503438780,Added tutorial for Automatic Inertia Calculator,"# ðŸŽ‰ New feature

This PR adds tutorials for the Automatic Inertia Calculation feature.

## Checklist
- [x] Signed all commits for DCO
- [ ] Added tests
- [ ] Added example and/or tutorial
- [x] Updated documentation (as needed)
- [ ] Updated migration guide (as needed)
- [ ] Consider updating Python bindings (if the library has them)
- [x] `codecheck` passed (See [contributing](https://gazebosim.org/docs/all/contributing#contributing-code))
- [ ] All tests passed (See [test coverage](https://gazebosim.org/docs/all/contributing#test-coverage))
- [ ] While waiting for a review on your PR, please help review [another open pull request](https://github.com/pulls?q=is%3Aopen+is%3Apr+user%3Agazebosim+archived%3Afalse+) to support the maintainers

**Note to maintainers**: Remember to use **Squash-Merge** and edit the commit message to match the pull request summary while retaining `Signed-off-by` messages.",True,2119,https://api.github.com/repos/gazebosim/gz-sim/pulls/2119,https://github.com/gazebosim/gz-sim/pull/2119,closed,721,0,7,17,2,39,3,0,"[{'name': 'documentation'}, {'name': 'beta'}, {'name': 'ðŸŽµ harmonic'}]",2023-09-05 20:36:19+00:00,2023-09-20 17:46:36+00:00,1285817.0,"14 days, 21:10:17","[{'comment_id': 1316390342, 'comment_body': 'the idea is to use `<inertial auto=""true"" />` in all of them or just in some ?', 'comment_created': datetime.datetime(2023, 9, 5, 20, 47, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1316392201, 'comment_body': 'use shortter lines ( 80 ~ 100 characters)', 'comment_created': datetime.datetime(2023, 9, 5, 20, 49, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1316392335, 'comment_body': '```suggestion\r\n```bash\r\n\r\n```', 'comment_created': datetime.datetime(2023, 9, 5, 20, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1316432305, 'comment_body': 'Corrected in [35df259](https://github.com/gazebosim/gz-sim/pull/2119/commits/35df259fd9c212f2605cabf03ba15dd07cc5ea49)', 'comment_created': datetime.datetime(2023, 9, 5, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1316432481, 'comment_body': 'Updated in [35df259](https://github.com/gazebosim/gz-sim/pull/2119/commits/35df259fd9c212f2605cabf03ba15dd07cc5ea49)', 'comment_created': datetime.datetime(2023, 9, 5, 21, 33, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1316435359, 'comment_body': 'Oh, thanks for pointing this out. The idea was to use `<inertia auto=""true"" />` in all. I have updated the world in [8ed75d7](https://github.com/gazebosim/gz-sim/pull/2119/commits/8ed75d7d086490812f4afa5478f6496628771728) ', 'comment_created': datetime.datetime(2023, 9, 5, 21, 36, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1323807775, 'comment_body': ""```suggestion\r\nto enable or disable the automatic calculations. It'll be set to `false` by default.\r\n\r\n```"", 'comment_created': datetime.datetime(2023, 9, 13, 1, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1323808695, 'comment_body': 'Try to avoid tense to make documentation age well.\r\n```suggestion\r\nconsidered for the calculations. The `<density>` tag can be used to specify\r\n\r\n```', 'comment_created': datetime.datetime(2023, 9, 13, 1, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1323810443, 'comment_body': '```suggestion\r\nthe models contain 3 cylindrical collision geometries: \r\n- One on the top which forms the joint\r\n- A longer cylinder in middle \r\n- And at the end which forms the bob of\r\ncylinder.\r\nEven, though they are indentical, the center of mass for both are different\r\n\r\n```', 'comment_created': datetime.datetime(2023, 9, 13, 1, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1323811025, 'comment_body': '```suggestion\r\nas they use different density values for the different cylinder collisions. On one\r\nhand, the upper joint collision of the pendulum on the left has the highest density\r\nwhich causes the center of mass to shift closer to the axis. While on the other hand,\r\nthe bob collision of the pendulum on the right has the highest density which causes\r\nthe center of mass to shift towards the end of the pendulum.\r\n\r\n```', 'comment_created': datetime.datetime(2023, 9, 13, 1, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1323811925, 'comment_body': '```suggestion\r\nHere the right most shape is a hollow cylinder (yellow). This model is loaded from\r\n[Gazebo Fuel](https://app.gazebosim.org/dashboard) and is made using a Collada mesh of a hollow cylinder. Apart from this, we can\r\n\r\n```', 'comment_created': datetime.datetime(2023, 9, 13, 1, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1323812183, 'comment_body': '```suggestion\r\ncylinder is concentrated at a distance from the axis of rotation (which passes through\r\n\r\n```', 'comment_created': datetime.datetime(2023, 9, 13, 1, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1323812588, 'comment_body': '```suggestion\r\n## Key Points on Mesh Inertia Calculator\r\n\r\n```', 'comment_created': datetime.datetime(2023, 9, 13, 1, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1324054493, 'comment_body': 'Corrected in [2b8be4c](https://github.com/gazebosim/gz-sim/pull/2119/commits/2b8be4cfc423ee3b6ec37763861572a4362ec10b)', 'comment_created': datetime.datetime(2023, 9, 13, 6, 52, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1324054636, 'comment_body': 'Corrected in [2b8be4c](https://github.com/gazebosim/gz-sim/pull/2119/commits/2b8be4cfc423ee3b6ec37763861572a4362ec10b)', 'comment_created': datetime.datetime(2023, 9, 13, 6, 52, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1324054986, 'comment_body': 'Added a link to the model page in Gazebo Fuel in [2b8be4c](https://github.com/gazebosim/gz-sim/pull/2119/commits/2b8be4cfc423ee3b6ec37763861572a4362ec10b)', 'comment_created': datetime.datetime(2023, 9, 13, 6, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1324055191, 'comment_body': 'Corrected in [2b8be4c](https://github.com/gazebosim/gz-sim/pull/2119/commits/2b8be4cfc423ee3b6ec37763861572a4362ec10b)', 'comment_created': datetime.datetime(2023, 9, 13, 6, 52, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1324055310, 'comment_body': 'Corrected in [2b8be4c](https://github.com/gazebosim/gz-sim/pull/2119/commits/2b8be4cfc423ee3b6ec37763861572a4362ec10b)', 'comment_created': datetime.datetime(2023, 9, 13, 6, 53, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1324055445, 'comment_body': 'Corrected in [2b8be4c](https://github.com/gazebosim/gz-sim/pull/2119/commits/2b8be4cfc423ee3b6ec37763861572a4362ec10b)', 'comment_created': datetime.datetime(2023, 9, 13, 6, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1324055617, 'comment_body': 'Corrected in [2b8be4c](https://github.com/gazebosim/gz-sim/pull/2119/commits/2b8be4cfc423ee3b6ec37763861572a4362ec10b)', 'comment_created': datetime.datetime(2023, 9, 13, 6, 53, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1325026365, 'comment_body': 'nit: did you mean?\r\n\r\n```suggestion\r\n - One at the end which forms the bob of the cylinder.\r\n\r\n```', 'comment_created': datetime.datetime(2023, 9, 13, 20, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325027241, 'comment_body': 'nit: ""One one"" repetition.', 'comment_created': datetime.datetime(2023, 9, 13, 20, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325028067, 'comment_body': '```suggestion\r\nThis difference in mass distribution about the axis of rotation results in a difference\r\n\r\n```', 'comment_created': datetime.datetime(2023, 9, 13, 20, 10, 34, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325030288, 'comment_body': 'Can you add that this will hopefully fixed in the future?', 'comment_created': datetime.datetime(2023, 9, 13, 20, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325032510, 'comment_body': 'When you say the load of calculations, it makes it sound like using high vertex count meshes only affects the performance of the auto MOI calcuclator, when in fact it will affect the overall simulation performance or RTF.', 'comment_created': datetime.datetime(2023, 9, 13, 20, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325039578, 'comment_body': 'This is needed for proper formatting:\r\n\r\n```suggestion\r\n> **Note:** Use SDF Spec version 1.11 or greater to utilize the new tags and attributes\r\n> of this feature.\r\n\r\n```\r\n\r\nbtw, you can test this locally by running `make doc` in gz-sim build directory and opening `doxygen/index.html`.', 'comment_created': datetime.datetime(2023, 9, 13, 20, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325041150, 'comment_body': 'Add an extra empty line to fix formatting, also fix typo in ""indentical"" -> ""identical"" (extra ""n"" after the first ""i"").\r\n\r\n```suggestion\r\n\r\nEven, though they are identical, the center of mass for both are different\r\n```\r\n', 'comment_created': datetime.datetime(2023, 9, 13, 20, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325049661, 'comment_body': ""I don't believe this is a convex mesh as stated in this paragraph since a line crossing the hollow part of the cylinder will not be wholly contained in the cylinder. As an aside, were you able to compute the theoretical MOI of  this shape and compare it with the value calculated by the MOI calculator in gz-sim?"", 'comment_created': datetime.datetime(2023, 9, 13, 20, 33, 48, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325051769, 'comment_body': '```suggestion\r\n          <density>1000</density>\r\n```', 'comment_created': datetime.datetime(2023, 9, 13, 20, 35, 59, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1325062397, 'comment_body': 'Have you had a chance to try it with meshes with submeshes ([example](https://github.com/gazebosim/gz-sim/blob/58a0c0b8a0375ae2918d9cc2525d755a21002e62/test/worlds/models/mesh_with_submeshes/model.sdf#L11))? If not, we should state that as a limitation.', 'comment_created': datetime.datetime(2023, 9, 13, 20, 46, 56, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}, {'comment_id': 1328933268, 'comment_body': 'Corrected the tag in [07bd6cd](https://github.com/gazebosim/gz-sim/pull/2119/commits/07bd6cd9c29eb01cfa20804e62b289f0e66ac6f9)', 'comment_created': datetime.datetime(2023, 9, 18, 15, 45, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1328934925, 'comment_body': 'Corrected the documentation in [6217798](https://github.com/gazebosim/gz-sim/pull/2119/commits/6217798a922afdfbbd7c690803b1774c041502b7). Also I have compared the computed values with the theoretical values and they match!\r\n', 'comment_created': datetime.datetime(2023, 9, 18, 15, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1328935145, 'comment_body': 'Corrected in [6217798](https://github.com/gazebosim/gz-sim/pull/2119/commits/6217798a922afdfbbd7c690803b1774c041502b7)', 'comment_created': datetime.datetime(2023, 9, 18, 15, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1328936116, 'comment_body': 'Thank you for the note. I have updated the formatting in [6217798](https://github.com/gazebosim/gz-sim/pull/2119/commits/6217798a922afdfbbd7c690803b1774c041502b7)', 'comment_created': datetime.datetime(2023, 9, 18, 15, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1328936303, 'comment_body': 'Updated the doc in [6217798](https://github.com/gazebosim/gz-sim/pull/2119/commits/6217798a922afdfbbd7c690803b1774c041502b7)', 'comment_created': datetime.datetime(2023, 9, 18, 15, 47, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1328936532, 'comment_body': 'Updated in [6217798](https://github.com/gazebosim/gz-sim/pull/2119/commits/6217798a922afdfbbd7c690803b1774c041502b7)', 'comment_created': datetime.datetime(2023, 9, 18, 15, 48, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1328936736, 'comment_body': 'Corrected in [6217798](https://github.com/gazebosim/gz-sim/pull/2119/commits/6217798a922afdfbbd7c690803b1774c041502b7)', 'comment_created': datetime.datetime(2023, 9, 18, 15, 48, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1328936865, 'comment_body': 'Corrected in [6217798](https://github.com/gazebosim/gz-sim/pull/2119/commits/6217798a922afdfbbd7c690803b1774c041502b7)', 'comment_created': datetime.datetime(2023, 9, 18, 15, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1328937157, 'comment_body': 'Corrected in [6217798](https://github.com/gazebosim/gz-sim/pull/2119/commits/6217798a922afdfbbd7c690803b1774c041502b7)', 'comment_created': datetime.datetime(2023, 9, 18, 15, 48, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}]","[{'commit_sha': 'c28afc79560e880f21478818efab12aaa29fc799', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '594ee52d5a45f92cfdd425534b6211043f05656a', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '102a22dfc7189d36e26d441c69bdd326e3c7d0d1', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37b63a7297c3e2c7f9f88643faf464d04983095f', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c10c05f9f314e5f2aae088bd1ef0ddfe805c103d', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44a6b54020693c01e9eef4cdd0c73d834cacea54', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0386738a3090e56d4b1f001b8f396b32db418347', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35df259fd9c212f2605cabf03ba15dd07cc5ea49', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ed75d7d086490812f4afa5478f6496628771728', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdf80ba67c88a9f2cbc7f355377a6401fef2cb88', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fc7634a8518e576cc6466dc9c773416dd95e797', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b8be4cfc423ee3b6ec37763861572a4362ec10b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07bd6cd9c29eb01cfa20804e62b289f0e66ac6f9', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6217798a922afdfbbd7c690803b1774c041502b7', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '822f1c0f80ac07a49e7ec679e7844ba5acf5dcca', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52ffa22c4321edc4262c03809589f71d51c25167', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f74cb98bda50b1e3b9798a76303e1183e2ad01f', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}]",Jasmeet Singh,23265149,jasmeet0915@gmail.com,User,,55,,34,56
1410167938,"Added `std::optional MassMatrix()` functions for Box, Cylinder & Sphere","# ðŸŽ‰ New feature

## Summary
The [`Capsule.hh`](https://github.com/gazebosim/gz-math/blob/22671876bde24676ff5f806c38efb37aaf7f2c25/include/gz/math/detail/Capsule.hh#L100) and [`Ellipsoid.hh`](https://github.com/gazebosim/gz-math/blob/22671876bde24676ff5f806c38efb37aaf7f2c25/include/gz/math/detail/Ellipsoid.hh#L77) have `MassMatrix()` functions that take no parameters and return a `std::optional` while [`Box.hh`](https://github.com/gazebosim/gz-math/blob/22671876bde24676ff5f806c38efb37aaf7f2c25/include/gz/math/detail/Box.hh#L308), [`Cylinder.hh`](https://github.com/gazebosim/gz-math/blob/22671876bde24676ff5f806c38efb37aaf7f2c25/include/gz/math/detail/Cylinder.hh#L112) and [`Sphere.hh`](https://github.com/gazebosim/gz-math/blob/22671876bde24676ff5f806c38efb37aaf7f2c25/include/gz/math/detail/Sphere.hh#L86) have `MassMatrix()` functions that have a `bool` return type and take `gz::math::MassMatrix3d` object as a parameter. 
This PR corrects this non-uniformity of MassMatrix functions across different shapes by overloading the `MassMatrix()` function in the `Box`, `Cylinder` and `Sphere` headers to create `std::optional MassMatrix()` functions with a signature similar to the ones in `Capsule` or `Ellpisoid` headers. 

## Checklist
- [x] Signed all commits for DCO
- [x] Added tests
- [ ] Added example and/or tutorial
- [ ] Updated documentation (as needed)
- [ ] Updated migration guide (as needed)
- [ ] Consider updating Python bindings (if the library has them)
- [x] `codecheck` passed (See [contributing](https://gazebosim.org/docs/all/contributing#contributing-code))
- [x] All tests passed (See [test coverage](https://gazebosim.org/docs/all/contributing#test-coverage))
- [ ] While waiting for a review on your PR, please help review [another open pull request](https://github.com/pulls?q=is%3Aopen+is%3Apr+user%3Agazebosim+archived%3Afalse+) to support the maintainers

**Note to maintainers**: Remember to use **Squash-Merge** and edit the commit message to match the pull request summary while retaining `Signed-off-by` messages.

<!-- Please refer to https://github.com/gazebo-tooling/release-tools#for-each-release for more information -->

**Note to maintainers**: Remember to use **Squash-Merge** and edit the commit message to match the pull request summary while retaining `Signed-off-by` messages.
",True,538,https://api.github.com/repos/gazebosim/gz-math/pulls/538,https://github.com/gazebosim/gz-math/pull/538,closed,147,15,15,6,2,6,2,0,"[{'name': 'ðŸŒ± garden'}, {'name': 'ðŸŽµ harmonic'}]",2023-06-27 15:47:25+00:00,2023-06-30 21:12:05+00:00,278680.0,"3 days, 5:24:40","[{'comment_id': 1245028701, 'comment_body': 'include `<optional>`', 'comment_created': datetime.datetime(2023, 6, 28, 10, 40, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1245028858, 'comment_body': 'include `<optional>`', 'comment_created': datetime.datetime(2023, 6, 28, 10, 40, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1245029016, 'comment_body': 'include `<optional>`', 'comment_created': datetime.datetime(2023, 6, 28, 10, 40, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1245482728, 'comment_body': 'Hey @ahcorde, not sure what you mean, can you please clarify?', 'comment_created': datetime.datetime(2023, 6, 28, 16, 31, 40, tzinfo=datetime.timezone.utc), 'commenter': 'quarkytale', 'type': 'User'}, {'comment_id': 1245491554, 'comment_body': 'ups, I edited the comment, But we need to include `<optional>` at the top', 'comment_created': datetime.datetime(2023, 6, 28, 16, 40, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1245704933, 'comment_body': '@ahcorde I have made the required changes', 'comment_created': datetime.datetime(2023, 6, 28, 20, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}]","[{'commit_sha': '807e25ae3d9a112607dcc311c2aece6fdb24747b', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '953c7f70aede7bc54828c1e182235f3d3389d972', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d88ede3ccf966f12752da0f7ed5e163a6333372', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22da1597efd976e8b9b4e25b039864e60d6ebf47', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '114d39c3602483b34a447ff8a2fc578099d4d743', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b4a83fb43f2e5135b3c5e2fa9e5201475698648', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}]",Jasmeet Singh,23265149,jasmeet0915@gmail.com,User,,55,,34,56
1390911495,Updated findfile() to search localpath first,"<!--
Please remove the appropriate section.
For example, if this is a new feature, remove all sections except for the ""New feature"" section

If this is your first time opening a PR, be sure to check the contribution guide:
https://gazebosim.org/docs/all/contributing
-->

# ðŸ¦Ÿ Bug fix

Fixes #1172

## Summary
As the issue above mentions, [this](http://sdformat.org/tutorials?tut=quickstart) tutorial for Garden, is not able to parse the SDF file if it was named `model.sdf`. It works if the file name is changed. This was happening due to the search order used in the [`sdf::findFile()`](https://github.com/gazebosim/sdformat/blob/3fdc0a1fe7026fbc1f004de018daf83839a2914e/src/SDF.cc#L61) function. The used search order was causing the `findFile()` to find the [`model.sdf`](https://github.com/gazebosim/sdformat/blob/3fdc0a1fe7026fbc1f004de018daf83839a2914e/sdf/1.10/model.sdf) from the install path instead of the one present locally. Since the found `model.sdf` is actually the SDF spec file for the `<model>` and it is not a valid SDFormat file, it caused the script to throw a not valid error. 
This PR changes the search order used in the `findFile()` function by searching for the local path (current directory) first and solves the issue.

## Checklist
- [x] Signed all commits for DCO
- [x] Added tests
- [ ] Updated documentation (as needed)
- [x] Updated migration guide (as needed)
- [ ] Consider updating Python bindings (if the library has them)
- [x] `codecheck` passed (See [contributing](https://gazebosim.org/docs/all/contributing#contributing-code))
- [x] All tests passed (See [test coverage](https://gazebosim.org/docs/all/contributing#test-coverage))
- [ ] While waiting for a review on your PR, please help review [another open pull request](https://github.com/pulls?q=is%3Aopen+is%3Apr+user%3Agazebosim+archived%3Afalse+) to support the maintainers

**Note to maintainers**: Remember to use **Squash-Merge** and edit the commit message to match the pull request summary while retaining `Signed-off-by` messages.",True,1292,https://api.github.com/repos/gazebosim/sdformat/pulls/1292,https://github.com/gazebosim/sdformat/pull/1292,closed,47,17,4,6,4,3,2,0,"[{'name': 'ðŸŒ± garden'}, {'name': 'ðŸŽµ harmonic'}]",2023-06-13 15:55:51+00:00,2023-06-26 22:43:48+00:00,1147677.0,"13 days, 6:47:57","[{'comment_id': 1229125490, 'comment_body': '```suggestion\r\n    std::string path = sdf::filesystem::append(sdf::filesystem::current_path(),\r\n                                               filename);\r\n```', 'comment_created': datetime.datetime(2023, 6, 14, 7, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ahcorde', 'type': 'User'}, {'comment_id': 1231483364, 'comment_body': '@ahcorde I have made the suggested changes in the latest commit\r\n', 'comment_created': datetime.datetime(2023, 6, 15, 20, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jasmeet0915', 'type': 'User'}, {'comment_id': 1242413739, 'comment_body': 'Since we\'re not setting a callback, this will generate an error. I suggest setting the last argument to false.\r\n```suggestion\r\n  std::string foundFile = sdf::findFile(""model.sdf"", true, false);\r\n```', 'comment_created': datetime.datetime(2023, 6, 26, 15, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'azeey', 'type': 'User'}]","[{'commit_sha': '16017fdb04a2fe50f50c6af085bce506478c717f', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dbdda851496d0aa831a468e20513f2f299b6965', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33d2b399fffbfcd3f8b621450070a36054a0da84', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2102c06a65e9fe529aa8b09033d861c6e9cce660', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a623a57b537b5acdcb1a726899667e3e6cceee62', 'committer_username': 'jasmeet0915', 'committer_name': 'Jasmeet Singh', 'committer_email': 'jasmeet0915@gmail.com', 'commit_date': datetime.datetime(2016, 11, 4, 17, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93bd441ee74040dce7f3196c57715cd256d0a25b', 'committer_username': 'azeey', 'committer_name': 'Addisu Z. Taddese', 'committer_email': None, 'commit_date': datetime.datetime(2010, 2, 18, 16, 29, 6, tzinfo=datetime.timezone.utc)}]",Jasmeet Singh,23265149,jasmeet0915@gmail.com,User,,55,,34,56

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
254823084,sdformat,gazebosim/sdformat,C++,91,159,13,99,5288,247,140,9,"[{'id': 1496246969, 'number': 1317, 'closed': datetime.datetime(2023, 8, 31, 0, 14, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 30, 22, 53, 6, tzinfo=datetime.timezone.utc), 'time_taken': 4860.0, 'time_delta': '1:21:00', 'additions': 9, 'deletions': 8, 'state': 'closed'}, {'id': 1453403904, 'number': 1304, 'closed': datetime.datetime(2023, 8, 30, 19, 49, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 8, 23, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2892401.0, 'time_delta': '33 days, 11:26:41', 'additions': 700, 'deletions': 17, 'state': 'closed'}, {'id': 1433574959, 'number': 1299, 'closed': datetime.datetime(2023, 8, 30, 15, 13, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 13, 18, 8, 4, tzinfo=datetime.timezone.utc), 'time_taken': 4136731.0, 'time_delta': '47 days, 21:05:31', 'additions': 1513, 'deletions': 15, 'state': 'closed'}, {'id': 1415420956, 'number': 1298, 'closed': datetime.datetime(2023, 8, 3, 15, 39, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 30, 21, 23, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2916922.0, 'time_delta': '33 days, 18:15:22', 'additions': 3530, 'deletions': 5, 'state': 'closed'}, {'id': 1390911495, 'number': 1292, 'closed': datetime.datetime(2023, 6, 26, 22, 43, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 13, 15, 55, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1147677.0, 'time_delta': '13 days, 6:47:57', 'additions': 47, 'deletions': 17, 'state': 'closed'}]"
255865265,gz-sim,gazebosim/gz-sim,C++,252,646,17,135,6978,326,174,24,"[{'id': 1536086518, 'number': 2182, 'closed': datetime.datetime(2023, 11, 13, 22, 43, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 29, 17, 25, 11, tzinfo=datetime.timezone.utc), 'time_taken': 3907102.0, 'time_delta': '45 days, 5:18:22', 'additions': 224, 'deletions': 79, 'state': 'closed'}, {'id': 1529479448, 'number': 2171, 'closed': datetime.datetime(2023, 9, 27, 23, 28, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 25, 20, 33, 30, tzinfo=datetime.timezone.utc), 'time_taken': 183326.0, 'time_delta': '2 days, 2:55:26', 'additions': 13, 'deletions': 3, 'state': 'closed'}, {'id': 1503438780, 'number': 2119, 'closed': datetime.datetime(2023, 9, 20, 17, 46, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 5, 20, 36, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1285817.0, 'time_delta': '14 days, 21:10:17', 'additions': 721, 'deletions': 0, 'state': 'closed'}, {'id': 1454270970, 'number': 2061, 'closed': datetime.datetime(2023, 8, 31, 15, 3, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 18, 40, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2924616.0, 'time_delta': '33 days, 20:23:36', 'additions': 707, 'deletions': 3, 'state': 'closed'}, {'id': 1278908076, 'number': 1933, 'closed': datetime.datetime(2023, 3, 17, 22, 59, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 16, 16, 14, 56, tzinfo=datetime.timezone.utc), 'time_taken': 110658.0, 'time_delta': '1 day, 6:44:18', 'additions': 945, 'deletions': 0, 'state': 'closed'}, {'id': 747324317, 'number': 1076, 'closed': datetime.datetime(2021, 11, 15, 22, 24, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 1, 7, 7, 28, tzinfo=datetime.timezone.utc), 'time_taken': 3943018.0, 'time_delta': '45 days, 15:16:58', 'additions': 32, 'deletions': 4, 'state': 'closed'}]"
254792066,sdf_tutorials,gazebosim/sdf_tutorials,,15,27,8,19,663,24,9,1,"[{'id': 1390529263, 'number': 92, 'closed': datetime.datetime(2023, 9, 14, 19, 50, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 13, 12, 37, 53, tzinfo=datetime.timezone.utc), 'time_taken': 8061154.0, 'time_delta': '93 days, 7:12:34', 'additions': 426, 'deletions': 0, 'state': 'closed'}]"
255865300,gz-math,gazebosim/gz-math,C++,62,54,8,75,2997,61,84,5,"[{'id': 1410167938, 'number': 538, 'closed': datetime.datetime(2023, 6, 30, 21, 12, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 27, 15, 47, 25, tzinfo=datetime.timezone.utc), 'time_taken': 278680.0, 'time_delta': '3 days, 5:24:40', 'additions': 147, 'deletions': 15, 'state': 'closed'}]"
