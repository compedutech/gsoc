pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
969500155,Desktop: Install default plugins on first-app-start,"Hey, 
This is a **draft** PR for installing default plugins. To implement this, I am installing plugins before the code that loads and runs the plugins, as to avoid restarting.

One issue I noticed is that, after this installation is complete, if we searched any plugin that we installed, we still see the ""Install' button instead of ""Installed"". But after restarting the app, it displays it correctly as ''Installed"". I think we need to update [`pluginSettings`](https://github.com/laurent22/joplin/blob/19b81917123a3ceb5a0c961b2bb2157251385b17/packages/app-desktop/gui/ConfigScreen/controls/plugins/PluginsStates.tsx#L102) in order to fix this. But apart from that I didn't notice any issue.

Feel free to give any suggestions you have.",True,6585,https://api.github.com/repos/laurent22/joplin/pulls/6585,https://github.com/laurent22/joplin/pull/6585,closed,382,7,14,34,13,45,0,0,[],2022-06-16 15:55:23+00:00,2022-09-01 10:44:33+00:00,6634150.0,"76 days, 18:49:10","[{'comment_id': 901540465, 'comment_body': ""I'd prefer we keep this method generic, with no mention of default plugins. Why is this option needed?"", 'comment_created': datetime.datetime(2022, 6, 20, 11, 4, 3, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 901556196, 'comment_body': ""If `defaultPlugin` is true, then we won't be loading the plugins right away after installing them. As we are installing default plugins before loading regular plugins, we just need to load them once along with regular plugins."", 'comment_created': datetime.datetime(2022, 6, 20, 11, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 901576165, 'comment_body': 'Ok then please name the option as `loadPlugin`, defaults to `true`', 'comment_created': datetime.datetime(2022, 6, 20, 11, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 902672496, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 21, 14, 11, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 905087784, 'comment_body': ""Why return null here? Just return the unmodified PluginSettings? Then the called doesn't need to have logic to deal with either null or an object."", 'comment_created': datetime.datetime(2022, 6, 23, 14, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 905088933, 'comment_body': ""Please use lib/path to remove the file extension. It's more robust than a search and replace"", 'comment_created': datetime.datetime(2022, 6, 23, 14, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 905092463, 'comment_body': 'Promise<Plugin | null>', 'comment_created': datetime.datetime(2022, 6, 23, 14, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 905955860, 'comment_body': ""Maybe it's just me but generally I try to reduce indentation as much as possible, as it makes it easier to follow the logic. In this case, you could have an early exit at the top (`if (!Setting.value('firstStart')) return pluginSettings;`), and then unindent all the code below."", 'comment_created': datetime.datetime(2022, 6, 24, 10, 59, 34, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 905956511, 'comment_body': ""Any reason why this is a dynamic settings? Feels like it should just be a constant since it doesn't change for a given version?"", 'comment_created': datetime.datetime(2022, 6, 24, 11, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 905961537, 'comment_body': ""You are right, It won't change for a given version. Are you suggesting I put it in some `const` variable? Because I think by putting `defaultPlugins` in `Setting.ts` it will be easier to retrieve it from anywhere. "", 'comment_created': datetime.datetime(2022, 6, 24, 11, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 905964766, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 24, 11, 13, 2, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 905979907, 'comment_body': ""I'd just put a defaultPlugins.ts file in lib/services/plugins. That way it can be easily included anywhere. Putting it in Setting.ts could cause dependency loops since this file is already included in many places."", 'comment_created': datetime.datetime(2022, 6, 24, 11, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 906176718, 'comment_body': ""Hey, I was thinking of making this `defaultPlugins.ts` as a class which will contain all the plugins' path, IDs etc. Do you think I should go ahead with this? Or should I just put it in `PluginService.ts` which is also in lib/services/plugins"", 'comment_created': datetime.datetime(2022, 6, 24, 15, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 906246219, 'comment_body': ""If it's a constant, just make it constant? Anything else I don't know"", 'comment_created': datetime.datetime(2022, 6, 24, 17, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 906701084, 'comment_body': ""I think this won't cause a dependency loop. Please correct me if I am wrong."", 'comment_created': datetime.datetime(2022, 6, 25, 16, 27, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 927450428, 'comment_body': 'use bridge().buildDir()', 'comment_created': datetime.datetime(2022, 7, 22, 9, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 927451244, 'comment_body': 'why you pass the service to itself...', 'comment_created': datetime.datetime(2022, 7, 22, 9, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 927452119, 'comment_body': 'Why you are setting firstStart here??', 'comment_created': datetime.datetime(2022, 7, 22, 9, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 927453911, 'comment_body': ""In fact this all firstStart is probably incorrect. It means that default plugins won't be enabled for existing installations. You need to have your own check to find out if a particular default plugin is already installed or not before installing it."", 'comment_created': datetime.datetime(2022, 7, 22, 9, 8, 26, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 927455090, 'comment_body': ""I don't see checks in here whether the settings are already set or not. It sounds like you'd overwrite user settings on each start."", 'comment_created': datetime.datetime(2022, 7, 22, 9, 9, 45, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 927460162, 'comment_body': ""I feel this function doesn't do anything useful. Also you are duplicating the list of default plugin IDs here and in the place where settings are defined. That list should only appear once in the codebase."", 'comment_created': datetime.datetime(2022, 7, 22, 9, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 927462095, 'comment_body': ""Doesn't it mean the plugin settings will be set only once? How about when we add a new default plugin?"", 'comment_created': datetime.datetime(2022, 7, 22, 9, 17, 56, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 927547941, 'comment_body': ""Yes. It's not necessary. I will remove it."", 'comment_created': datetime.datetime(2022, 7, 22, 11, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 929006313, 'comment_body': 'Please move new functionality into a default Plugins module.', 'comment_created': datetime.datetime(2022, 7, 25, 15, 17, 14, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 929008467, 'comment_body': ""This function can also move into a default Plugins module. If you can't move it please leave a detailed comment about why it must be defined."", 'comment_created': datetime.datetime(2022, 7, 25, 15, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 929009179, 'comment_body': 'Please use a descriptive parameter name `value` should be `newPluginStates`. And please add typing.', 'comment_created': datetime.datetime(2022, 7, 25, 15, 19, 51, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 929009785, 'comment_body': 'Why do we have 2 places to set the plugin settings? ', 'comment_created': datetime.datetime(2022, 7, 25, 15, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 929013123, 'comment_body': 'Please rename to something descriptive (e.g. `getDefaultPluginInstallState`). And please add a return type.', 'comment_created': datetime.datetime(2022, 7, 25, 15, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 929029490, 'comment_body': 'Please remove these in favour of using the `installedDefaultPlugins` field alone.', 'comment_created': datetime.datetime(2022, 7, 25, 15, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 929171832, 'comment_body': 'Ok. I was thinking of a way to only call function to install default plugins here, I will see what I can do. ', 'comment_created': datetime.datetime(2022, 7, 25, 18, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 931909741, 'comment_body': 'I have now removed the first-app-start logic and implemented my own check.', 'comment_created': datetime.datetime(2022, 7, 28, 8, 8, 42, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 931910186, 'comment_body': 'Now, I have added checks here.', 'comment_created': datetime.datetime(2022, 7, 28, 8, 9, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 931911204, 'comment_body': 'Now checking in `installedDefaultPlugins` array to see if new default plugin is available.', 'comment_created': datetime.datetime(2022, 7, 28, 8, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 931911895, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2022, 7, 28, 8, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 931912289, 'comment_body': ""Now, we don't need them."", 'comment_created': datetime.datetime(2022, 7, 28, 8, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 933965298, 'comment_body': ""I remember you suggested putting this into `.config` or `json` files, but we may need to use variables here, so that's why I put it in `ts` file."", 'comment_created': datetime.datetime(2022, 7, 31, 10, 41, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 934034707, 'comment_body': ""Was there a discussion about this? Sorry if I missed it or if I'm repeating something but I think it's indeed ok to have the config directly in .ts file since it's not really dynamic (it's tied to the current build).\r\n\r\nAs previously discussed however we need all data related to the default plugins we support to be in the same place."", 'comment_created': datetime.datetime(2022, 7, 31, 20, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 934165558, 'comment_body': '> Was there a discussion about this?\r\n\r\nI had discussion with my mentor CalebJohn about this. And I will make sure we put all the default plugins related data in the same place.', 'comment_created': datetime.datetime(2022, 8, 1, 6, 5, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 940353683, 'comment_body': ""Please don't import`*`. Only import the functions that you need"", 'comment_created': datetime.datetime(2022, 8, 8, 15, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940355929, 'comment_body': 'Should be database here', 'comment_created': datetime.datetime(2022, 8, 8, 15, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940357500, 'comment_body': 'maybe call it `setArrayValue`. Make the method public', 'comment_created': datetime.datetime(2022, 8, 8, 15, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940361552, 'comment_body': ""Try to have a single object with all plugin related properties in there. For example:\r\n\r\n```typescript\r\nexport const defaultPlugins = {\r\n\t'io.github.jackgruber.backup': {\r\n\t\tversion: '1.0.2',\r\n\t\tsettings: {\r\n\t\t\t'path': `${Setting.value('profileDir')}`,\r\n\t\t},\r\n\t'plugin.calebjohn.rich-markdown': {\r\n\t\tversion: '0.8.3',\r\n\t},\t\r\n};\r\n```\r\n\r\nThat way you have everything in one place and don't need to repeat the key for each piece of info you want to add."", 'comment_created': datetime.datetime(2022, 8, 8, 15, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940362310, 'comment_body': 'Is that used somewhere?', 'comment_created': datetime.datetime(2022, 8, 8, 15, 15, 45, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 942621768, 'comment_body': 'Not currently. But I thought maybe we can use it in the future. For example, if we decided to have a special badge for default plugins. But if you want, I will remove it.', 'comment_created': datetime.datetime(2022, 8, 10, 15, 51, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 942622977, 'comment_body': 'This way it is a lot cleaner.', 'comment_created': datetime.datetime(2022, 8, 10, 15, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}]","[{'commit_sha': 'bd677c4c9a3a3aab785f6d7818f942e28df36845', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb67977f89bf566ba1767e62d589307b2ab899d9', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '302b3809bd450430c07e37c7ad3a84cff8648c66', 'committer_username': 'laurent22', 'committer_name': 'Laurent Cozic', 'committer_email': None, 'commit_date': datetime.datetime(2011, 12, 26, 4, 20, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8d86f2c3e56903a6e6497f58da59288f794d96d', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d26012392ea16613547dcd592901f79e9805bb', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4491cf0c73801ae8b44a17eb4942e41622f0e1ce', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84c02c943d52841efb00dfc27048ebbeb7b13626', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d6161174856b191831413ea9c288cdbb10431bb', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c1480743f8137634865dbbc61b62b72e6ed78be', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '191c8a5a20dbf286eb37fae8be47eb7069bd2c11', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32c003bade1dd0fee936a03c086c6f4211bfdfe6', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35363936750171b33452bac6c0f7550c0898dad8', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aa26bc33650133499f35fda467d01460646ca90', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c2ac77358acd84e4632d943fa4adaa5a259462', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46007c5ef18eeb99af36566737ae1e805e2b196a', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebde62b01076c7e28259c717673015cf8ba40535', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d05817b56592da05b3762ad617ee930296dea10', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '360de71aca483a8d5b935570d91d3fc8d94fcd63', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25820d3c3482c1fc34cced3f7d8440f2042ed901', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b80c48705ef771d37e75b9b1be37ab7279d35e5c', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '228aa96b79f8a603de95b470b7407f58bb3d1927', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa3a5fa9fd7f7100d2f2b141a51c9d5471b279c1', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '343c4de508461437f9e2d09b7a2473ed99c3210a', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b68fd07cf30a43e09e8cae2cc2b206e11f1ad156', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbc1793651a316bd0c7cac905cff73a74c89cc36', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1db3ec0cdf4db3882b577825f1bf18794a1136f', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53ddafb33814026c91611861928c3f661869eea7', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cc80d1546eb631f0a717c1db3c928dfdc9f4ad2', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90dfd0d487de3d808fe80344f403c0bca4e4d8d6', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4fcf8e4575e24dbb088563ea7f418b7109d0d2b', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ef7c3d1c5dc24467b4776701b01ca1f1bc1a302', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f6671d498b5cb63046bbae53043486948d7f6cb', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd90dee1554dbe7bddc498081b0826db9974ed3c2', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '263d33b0663996f2e713bca97c91c0ac70672965', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}]",Mayank Bondre,77744862,,User,,56,,26,31
1000982112,Desktop: Bundle default plugins with desktop application,"### Summary

This PR implements bundling plugins with desktop app. When the app is being built, we will run a JS file that pulls the `jpl` files from the NPM registry and then moves it in `build` folder of the app. In this script, we are providing default plugins IDs with their versions that we intend to use.",True,6679,https://api.github.com/repos/laurent22/joplin/pulls/6679,https://github.com/laurent22/joplin/pull/6679,closed,346,0,8,20,1,30,0,0,[],2022-07-19 16:11:22+00:00,2022-09-01 10:53:59+00:00,3782557.0,"43 days, 18:42:37","[{'comment_id': 925267729, 'comment_body': 'This code is only necessary when building the desktop app, but you have it here where it will be called even when building the server image. I think this code only needs to be run for the first block below (Building the desktop application for publishing).', 'comment_created': datetime.datetime(2022, 7, 20, 7, 29, 21, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 925496460, 'comment_body': 'I will move it then. I thought Docker Image also needs these plugins.', 'comment_created': datetime.datetime(2022, 7, 20, 11, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 932411380, 'comment_body': '`yarn run build` runs before getting here so this TS file should already been compiled, so please remove the tsc statement', 'comment_created': datetime.datetime(2022, 7, 28, 15, 48, 7, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 932415105, 'comment_body': 'Should be named like the file bundleDefaultPlugins', 'comment_created': datetime.datetime(2022, 7, 28, 15, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 932416904, 'comment_body': ""Is it actually downloading stuff off GitHub? We can't have this, you'll need to mock this. In general all tests should be able to run offline."", 'comment_created': datetime.datetime(2022, 7, 28, 15, 53, 32, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 932417771, 'comment_body': ""Something's not right here, it shouldn't log anything in tests. You need to test that it doesn't throw, if it's not supposed to throw. And in fact I think the tests themselves shouldn't throw exception (the code they call might)."", 'comment_created': datetime.datetime(2022, 7, 28, 15, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 932419174, 'comment_body': 'Is it not possible to use fetch? Too many problems with streams in general', 'comment_created': datetime.datetime(2022, 7, 28, 15, 55, 50, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 932908777, 'comment_body': ""I think we can't use `fetch` alone, we have to write the response to a file. If we don't want to use streams then we can use the following alternative:\r\n\r\n```\r\nfunction downloadFile(url:string, outputPath:string) {\r\n\treturn fetch(url)\r\n\t\t.then(response => response.buffer())\r\n\t\t.then(buff => writeFilePromise(outputPath, Buffer.from(buff)));\r\n}\r\n```\r\n"", 'comment_created': datetime.datetime(2022, 7, 29, 6, 28, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 940365159, 'comment_body': ""Don't import `*` only import the functions you need"", 'comment_created': datetime.datetime(2022, 8, 8, 15, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940365270, 'comment_body': 'only import the functions you need', 'comment_created': datetime.datetime(2022, 8, 8, 15, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940365669, 'comment_body': 'What is this setTimeout for?', 'comment_created': datetime.datetime(2022, 8, 8, 15, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940366020, 'comment_body': 'Only use async methods', 'comment_created': datetime.datetime(2022, 8, 8, 15, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940366815, 'comment_body': ""just import from fs-extra, it's already promisified"", 'comment_created': datetime.datetime(2022, 8, 8, 15, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940367149, 'comment_body': 'only async calls', 'comment_created': datetime.datetime(2022, 8, 8, 15, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940367404, 'comment_body': 'no then, only await/async', 'comment_created': datetime.datetime(2022, 8, 8, 15, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940367697, 'comment_body': 'only async code', 'comment_created': datetime.datetime(2022, 8, 8, 15, 20, 45, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940369709, 'comment_body': 'Noted :+1: ', 'comment_created': datetime.datetime(2022, 8, 8, 15, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 940505145, 'comment_body': 'I am using this just to increase the timeout for tests on my local system, otherwise they seem to fail randomly. This will be removed before merging the code.', 'comment_created': datetime.datetime(2022, 8, 8, 17, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 941447439, 'comment_body': 'Line 175 Is meant to be run form the packages/app-desktop directory, but this line places the script in packages/tools. This appears like it will break the ci build (for releases).', 'comment_created': datetime.datetime(2022, 8, 9, 14, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 944514446, 'comment_body': 'Ok. I will fix it.', 'comment_created': datetime.datetime(2022, 8, 12, 14, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 956571261, 'comment_body': ""Shouldn't return any"", 'comment_created': datetime.datetime(2022, 8, 27, 11, 22, 34, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 956571374, 'comment_body': ""You don't need this check, because downloadFile should throw if there's an error"", 'comment_created': datetime.datetime(2022, 8, 27, 11, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 956571385, 'comment_body': 'Here, check response.ok', 'comment_created': datetime.datetime(2022, 8, 27, 11, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 956730116, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2022, 8, 28, 13, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 956730210, 'comment_body': 'Updated this with a type.', 'comment_created': datetime.datetime(2022, 8, 28, 13, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 956730398, 'comment_body': 'Yes. Thanks for catching this.', 'comment_created': datetime.datetime(2022, 8, 28, 13, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 956738797, 'comment_body': 'Actually your previous code was good, as you were showing the actual error message. Any reason you removed it?', 'comment_created': datetime.datetime(2022, 8, 28, 14, 39, 49, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 956738942, 'comment_body': 'Here too you might want to provide more info such as response.status or response.text', 'comment_created': datetime.datetime(2022, 8, 28, 14, 40, 35, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 956751525, 'comment_body': ""Actually, while testing locally I thought that `.text()` will show buffer data but on failing to fetch it won't have any buffer data to show :sweat_smile: . Restored the previous message."", 'comment_created': datetime.datetime(2022, 8, 28, 16, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 956751539, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2022, 8, 28, 16, 20, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}]","[{'commit_sha': '0c953412e52c31b7c71c8ef1c127a9adff19bc22', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0aeae025be61f82e6cd3140d43c0d88764c0d7', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e04b9e21dc763ae1ff2c4f8196be08b711262c4', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b926ee6a37e2f48e539ae348cd94b7a73af715e7', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6ded17dd4dd54c3812bf8c7854a10ed3862e327', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68a611f7685fc0a693065771ff5cbfe29f15ca70', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '427da27ee2619deae231606077f28d0d795a12b2', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a327f8ad86ed631c75d2d8565e89ffd5d4a6aca5', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cf0d00dea3ab67d1cc379f80b55a35db6688530', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '267e5ed7a3c0954aa08da5a117dba1f7f0dfaebf', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d4bfd221db9199151043c49862a76adb3c79359', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc59c90a23f65058aebbc04bdc486569dc152c5f', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '725e0035f5ff716f9415fdbd54255afe46a31bd3', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e87edf539eb511dd4af4b14fe674074f76ce810f', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25f636dc5f5e064e8edbff2c3f9fd86b31b50fe5', 'committer_username': 'laurent22', 'committer_name': 'Laurent Cozic', 'committer_email': None, 'commit_date': datetime.datetime(2011, 12, 26, 4, 20, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c77c1801f0e2b5ed5aaf47fd4f89280835212cf0', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c692f86139b71492464b00add5dfbf8bd29a3fd', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e46c3052786c24977f693bb321cb70430f03821f', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddf69aef890b7f044460ee1a81272e4147994900', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15a3dae985411080cad2a7c8fa262f0189c05a31', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}]",Mayank Bondre,77744862,,User,,56,,26,31
1045514295,Desktop: Add README for default plugins,This PR intends to add a README file for default plugins. This README explains how to add a new default plugin and working of bundling and installing of default plugins.,True,6811,https://api.github.com/repos/laurent22/joplin/pulls/6811,https://github.com/laurent22/joplin/pull/6811,closed,32,0,1,4,11,8,0,0,[],2022-09-03 16:17:25+00:00,2022-09-05 11:51:22+00:00,156837.0,"1 day, 19:33:57","[{'comment_id': 962178995, 'comment_body': 'End with a `:` rather than `,`', 'comment_created': datetime.datetime(2022, 9, 3, 16, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Daeraxa', 'type': 'User'}, {'comment_id': 962179000, 'comment_body': 'Maybe replace `[here]` with the file name like you do later on.', 'comment_created': datetime.datetime(2022, 9, 3, 16, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Daeraxa', 'type': 'User'}, {'comment_id': 962179013, 'comment_body': 'Make a child item of the above list item?\r\n\r\n`,` after `settingName2`', 'comment_created': datetime.datetime(2022, 9, 3, 16, 35, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Daeraxa', 'type': 'User'}, {'comment_id': 962179096, 'comment_body': 'Maybe replace `[here]` with the file name like you do later on.', 'comment_created': datetime.datetime(2022, 9, 3, 16, 36, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Daeraxa', 'type': 'User'}, {'comment_id': 962179147, 'comment_body': '""the `installedDefaultPlugins` array"" and just ""in `Setting.ts`""', 'comment_created': datetime.datetime(2022, 9, 3, 16, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Daeraxa', 'type': 'User'}, {'comment_id': 962179194, 'comment_body': 'Do the items in this section need to be list items?', 'comment_created': datetime.datetime(2022, 9, 3, 16, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Daeraxa', 'type': 'User'}, {'comment_id': 962180085, 'comment_body': 'Not necessarily. I will convert them to normal text then.', 'comment_created': datetime.datetime(2022, 9, 3, 16, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 962181096, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2022, 9, 3, 16, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}]","[{'commit_sha': '2c80c98cd6b09f40475aed9d1870b666f464ff41', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29fe92ce7f13869904e3356dcbdf8992868d25e0', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40bc73171460a2ad4048eae62f852d28db0c97a4', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f2324aeacc84a63749f9220839acd2eb0804ec6', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}]",Mayank Bondre,77744862,,User,,56,,26,31
1044657822,Desktop: Remove demo plugins folder and update pinned version of backup plugin,"There were some plugins' `.jpl` files that were included in this PR for demo purposes. But we don't need them anymore, as now we have the script that will bundle the necessary plugins. Apart from that, the demo version (included currently) of 'Simple backup plugin' does not create sub-folder automatically causing pop-up on initial startup.

If we don't remove this folder, [the bundling script](https://github.com/laurent22/joplin/blob/3942029c9089703061badc06bcc78882152d69b3/packages/tools/bundleDefaultPlugins.ts#L26) will throw an error as manifests of these plugins don't exist.",True,6801,https://api.github.com/repos/laurent22/joplin/pulls/6801,https://github.com/laurent22/joplin/pull/6801,closed,1,1,3,2,5,0,0,0,[],2022-09-02 08:49:49+00:00,2022-09-05 11:36:22+00:00,269193.0,"3 days, 2:46:33",[],"[{'commit_sha': '7c5da732a6367be615b89ac96411f3e51e0501a4', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f1597f379d969354d8ac4ae84763cb4443df3fb', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}]",Mayank Bondre,77744862,,User,,56,,26,31
1048263660,Desktop: Fix missing plugin file error and missing setting key error in dev mode,"This PR adds a check to see if the default plugin directory exists or not. Also, before applying default plugin settings, we check if setting key exists in Settings.

This should fix following errors which are currently present:
`ENOENT: no such file or directory, scandir '***/src/joplin/packages/app-desktop/build/defaultPlugins'`
`Setting.ts:1702 Uncaught Error: Unknown key: plugin-io.github.jackgruber.backup.path`

AppImage to test this can be found [here](https://drive.google.com/file/d/1-ABf0u-AQxDf4atwyghxwUSazYhnhIIN/view?usp=sharing)",True,6827,https://api.github.com/repos/laurent22/joplin/pulls/6827,https://github.com/laurent22/joplin/pull/6827,closed,72,7,3,7,1,8,0,0,[],2022-09-07 05:05:41+00:00,2022-09-12 15:08:07+00:00,468146.0,"5 days, 10:02:26","[{'comment_id': 967129127, 'comment_body': 'I was so confused with this code because the variables are so poorly named. Rename ""pluginsDir"" to ""defaultPluginDir"". In app.ts too, also rename this ""pluginsDir"" to defaultPluginDir.\r\n\r\nBecause we also have a ""pluginDir"" setting which is the actual plugin directory, so you need to use a clearer name for your directory.', 'comment_created': datetime.datetime(2022, 9, 9, 14, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 967131890, 'comment_body': ""Again please add a message here `logger.info('Could not find any default plugin to install - skipping installation.')`\r\n\r\nSee for example `useOnInstallHandler.ts` to see how to setup a logger for your file."", 'comment_created': datetime.datetime(2022, 9, 9, 14, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 967858349, 'comment_body': 'Changed it. I will take care from next time when naming variables.', 'comment_created': datetime.datetime(2022, 9, 11, 16, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 967858352, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2022, 9, 11, 16, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 968198847, 'comment_body': ""Add the path of directory in the message: `Could not find default plugins' directory ${defaultPluginsDir} - skipping installation.`"", 'comment_created': datetime.datetime(2022, 9, 12, 9, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 968199030, 'comment_body': 'add the path of the directory to the message', 'comment_created': datetime.datetime(2022, 9, 12, 9, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 968531969, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2022, 9, 12, 15, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}, {'comment_id': 968532172, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2022, 9, 12, 15, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mak2002', 'type': 'User'}]","[{'commit_sha': '046f2e01c00ef13d0dac9119246576bfd67adae0', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6df8a234b601555578eca6ae45efa2cac877a5d7', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf850b44f5b5a8ba74b256107db9b962d77cb7f7', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72b7a60555dd141115a9eef3e0141c4b1fa458f7', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b0c1f086ee373c55c5de0bfd6f54955a6ee169c', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '665b5c62e59c512009c4273a37a4710878d8ad51', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0577e8b1ff64bbacc300481ef35422131336ddfb', 'committer_username': 'mak2002', 'committer_name': 'Mayank Bondre', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 17, 2, 37, tzinfo=datetime.timezone.utc)}]",Mayank Bondre,77744862,,User,,56,,26,31

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
79162682,joplin,laurent22/joplin,TypeScript,4852,44750,483,642,11752,403,244,9,"[{'id': 1048263660, 'number': 6827, 'closed': datetime.datetime(2022, 9, 12, 15, 8, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 7, 5, 5, 41, tzinfo=datetime.timezone.utc), 'time_taken': 468146.0, 'time_delta': '5 days, 10:02:26', 'additions': 72, 'deletions': 7, 'state': 'closed'}, {'id': 1045514295, 'number': 6811, 'closed': datetime.datetime(2022, 9, 5, 11, 51, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 3, 16, 17, 25, tzinfo=datetime.timezone.utc), 'time_taken': 156837.0, 'time_delta': '1 day, 19:33:57', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 1044657822, 'number': 6801, 'closed': datetime.datetime(2022, 9, 5, 11, 36, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 2, 8, 49, 49, tzinfo=datetime.timezone.utc), 'time_taken': 269193.0, 'time_delta': '3 days, 2:46:33', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1000982112, 'number': 6679, 'closed': datetime.datetime(2022, 9, 1, 10, 53, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 19, 16, 11, 22, tzinfo=datetime.timezone.utc), 'time_taken': 3782557.0, 'time_delta': '43 days, 18:42:37', 'additions': 346, 'deletions': 0, 'state': 'closed'}, {'id': 969500155, 'number': 6585, 'closed': datetime.datetime(2022, 9, 1, 10, 44, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 15, 55, 23, tzinfo=datetime.timezone.utc), 'time_taken': 6634150.0, 'time_delta': '76 days, 18:49:10', 'additions': 382, 'deletions': 7, 'state': 'closed'}, {'id': 968202336, 'number': 6582, 'closed': datetime.datetime(2022, 6, 15, 14, 41, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 13, 44, 55, tzinfo=datetime.timezone.utc), 'time_taken': 3393.0, 'time_delta': '0:56:33', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 922151474, 'number': 6465, 'closed': datetime.datetime(2022, 12, 21, 13, 30, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 28, 17, 53, 22, tzinfo=datetime.timezone.utc), 'time_taken': 20461005.0, 'time_delta': '236 days, 19:36:45', 'additions': 2645, 'deletions': 46, 'state': 'closed'}, {'id': 840883265, 'number': 6109, 'closed': datetime.datetime(2022, 4, 10, 9, 52, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 5, 15, 21, 43, tzinfo=datetime.timezone.utc), 'time_taken': 5509848.0, 'time_delta': '63 days, 18:30:48', 'additions': 31, 'deletions': 1, 'state': 'closed'}, {'id': 823702170, 'number': 6017, 'closed': datetime.datetime(2022, 1, 18, 11, 11, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 15, 17, 39, 31, tzinfo=datetime.timezone.utc), 'time_taken': 235912.0, 'time_delta': '2 days, 17:31:52', 'additions': 9, 'deletions': 2, 'state': 'closed'}, {'id': 574305725, 'number': 4541, 'closed': datetime.datetime(2021, 2, 17, 3, 34, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 16, 16, 11, 33, tzinfo=datetime.timezone.utc), 'time_taken': 40989.0, 'time_delta': '11:23:09', 'additions': 1, 'deletions': 2, 'state': 'closed'}]"
