pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
818904721,fix: Updated Management API & RBAC API for Node.js ,"- fixes #294 
- Added **Node.js** examples for **Management API** & **RBAC API**.",True,299,https://api.github.com/repos/casbin/casbin-website/pulls/299,https://github.com/casbin/casbin-website/pull/299,closed,41,0,2,2,3,0,0,0,[],2022-01-11 16:43:30+00:00,2022-01-12 06:05:41+00:00,48131.0,13:22:11,[],"[{'commit_sha': '29b2b09deeaf96d8b1db81f34a682475d4b3b36f', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2ba003b4e14aeeae73a98ec42724af51b3e1bd0', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
822277479,feat(batchenforce): added batchEnforce,"Added BatchEnforce

fix #321",True,338,https://api.github.com/repos/casbin/node-casbin/pulls/338,https://github.com/casbin/node-casbin/pull/338,closed,19,0,2,5,5,2,1,0,[{'name': 'released'}],2022-01-14 08:08:41+00:00,2022-01-16 09:37:06+00:00,178105.0,"2 days, 1:28:25","[{'comment_id': 785324916, 'comment_body': 'Use `Promise.all` should be better, so like:\r\n```js\r\nreturn await Promise.all(rvals.map(n => this.enforce(...n));\r\n```\r\n', 'comment_created': datetime.datetime(2022, 1, 15, 16, 2, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 785327481, 'comment_body': 'üëç ', 'comment_created': datetime.datetime(2022, 1, 15, 16, 13, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}]","[{'commit_sha': 'b5bd2f5bc342c908234ad3df1b1455732e71b0db', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b16a1e9ddc26e180bf72457bbb6c3bd8d2dbcc3d', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '936be9fa156947cdb71c630d221fac7e947214fc', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e80ea5fc7fed50c48cc567932e08b215fe3398f', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24fbe2f83a0ea34e7d57b2dd1393897f08f36a2e', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
822277479,feat(batchenforce): added batchEnforce,"Added BatchEnforce

fix #321",True,338,https://api.github.com/repos/casbin/node-casbin/pulls/338,https://github.com/casbin/node-casbin/pull/338,closed,19,0,2,5,5,2,1,0,[{'name': 'released'}],2022-01-14 08:08:41+00:00,2022-01-16 09:37:06+00:00,178105.0,"2 days, 1:28:25","[{'comment_id': 785324916, 'comment_body': 'Use `Promise.all` should be better, so like:\r\n```js\r\nreturn await Promise.all(rvals.map(n => this.enforce(...n));\r\n```\r\n', 'comment_created': datetime.datetime(2022, 1, 15, 16, 2, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 785327481, 'comment_body': 'üëç ', 'comment_created': datetime.datetime(2022, 1, 15, 16, 13, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}]","[{'commit_sha': 'b5bd2f5bc342c908234ad3df1b1455732e71b0db', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b16a1e9ddc26e180bf72457bbb6c3bd8d2dbcc3d', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '936be9fa156947cdb71c630d221fac7e947214fc', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e80ea5fc7fed50c48cc567932e08b215fe3398f', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24fbe2f83a0ea34e7d57b2dd1393897f08f36a2e', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
824198417,feat: Added Node.js example for BatchEnforce,"- #300 
- Add Node.js example for BatchEnforce„ÄÅ

Fix: https://github.com/casbin/casbin-website/issues/300",True,301,https://api.github.com/repos/casbin/casbin-website/pulls/301,https://github.com/casbin/casbin-website/pull/301,closed,10,0,2,5,5,0,0,0,[],2022-01-17 05:47:33+00:00,2022-01-19 01:00:41+00:00,155588.0,"1 day, 19:13:08",[],"[{'commit_sha': '29b2b09deeaf96d8b1db81f34a682475d4b3b36f', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2ba003b4e14aeeae73a98ec42724af51b3e1bd0', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cc7b067fcaa9c1e8d37006ab44d6072447ef222', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b396dc5cfd70aa7275febfa79aa51eb760954026', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1a7db942c2f16e4b7bd1732ac4ce749ba61215f', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
830089819,feat: GetImplicitUsersForRole,Fix: https://github.com/casbin/node-casbin/issues/340,True,341,https://api.github.com/repos/casbin/node-casbin/pulls/341,https://github.com/casbin/node-casbin/pull/341,closed,35,0,2,1,2,0,1,0,[{'name': 'released'}],2022-01-24 07:54:45+00:00,2022-01-25 15:54:08+00:00,115163.0,"1 day, 7:59:23",[],"[{'commit_sha': 'e29da46dbaadccb05f1f5c6dc2f723bfe1edf194', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
834969963,feat: Node.js example for GetImplicitUsersForRole, - #304 ,True,305,https://api.github.com/repos/casbin/casbin-website/pulls/305,https://github.com/casbin/casbin-website/pull/305,closed,5,0,1,7,2,0,0,0,[],2022-01-29 04:55:46+00:00,2022-01-29 05:25:44+00:00,1798.0,0:29:58,[],"[{'commit_sha': '29b2b09deeaf96d8b1db81f34a682475d4b3b36f', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2ba003b4e14aeeae73a98ec42724af51b3e1bd0', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cc7b067fcaa9c1e8d37006ab44d6072447ef222', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b396dc5cfd70aa7275febfa79aa51eb760954026', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1a7db942c2f16e4b7bd1732ac4ce749ba61215f', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8ca4320cf08a7a615162f80335502f5903e7460', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '200b0ff770e5582e961ff38c72d4b0af1edf5ea8', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
848982104,fix: *matcher result should be boolean or number* for KeyGet2,"Fix: https://github.com/casbin/node-casbin/issues/332

- added a case for result type string.
- please suggest changes if required.",True,347,https://api.github.com/repos/casbin/node-casbin/pulls/347,https://github.com/casbin/node-casbin/pull/347,closed,27,1,4,4,11,1,1,0,[{'name': 'released'}],2022-02-12 13:22:23+00:00,2022-03-02 05:13:56+00:00,1525893.0,"17 days, 15:51:33","[{'comment_id': 810648966, 'comment_body': 'please also update error hint', 'comment_created': datetime.datetime(2022, 2, 20, 16, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}]","[{'commit_sha': 'e69b014251d15785a32e1eca56d89e2abb27dce0', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17fd19886fba7fdbca73f89486d09feeea6eb661', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e7a0d6e810ec030a5b6309c0366b5a7aa700518', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a21ff7465ea8d2a81e70f57078684bab4bf3ab7', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
858855235,fix: 'eval' not detected,Fix: https://github.com/casbin/node-casbin/issues/348,True,349,https://api.github.com/repos/casbin/node-casbin/pulls/349,https://github.com/casbin/node-casbin/pull/349,closed,4,2,2,2,7,8,1,0,[{'name': 'released'}],2022-02-20 16:14:48+00:00,2022-02-22 14:39:02+00:00,167054.0,"1 day, 22:24:14","[{'comment_id': 810650421, 'comment_body': 'Maybe we can use `string.match()` and count the result instead.', 'comment_created': datetime.datetime(2022, 2, 20, 16, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}, {'comment_id': 810997224, 'comment_body': 'not sure but that might slow down the process what do you think?', 'comment_created': datetime.datetime(2022, 2, 21, 10, 43, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 811158670, 'comment_body': ""@Zxilly , @Shivansh-yadav13 \r\nI'm not familiar with node-casbin but is /g flag really needed? Removing it would resolve the issue."", 'comment_created': datetime.datetime(2022, 2, 21, 14, 2, 42, tzinfo=datetime.timezone.utc), 'commenter': 'grzegorz-kap', 'type': 'User'}, {'comment_id': 811179052, 'comment_body': ""you are right we don't need the `g` flag for this purpose but it is being utilized in another function(`getEvalValue`) to get all the matches."", 'comment_created': datetime.datetime(2022, 2, 21, 14, 24, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 811182072, 'comment_body': 'You can have two regex expressions', 'comment_created': datetime.datetime(2022, 2, 21, 14, 27, 55, tzinfo=datetime.timezone.utc), 'commenter': 'grzegorz-kap', 'type': 'User'}, {'comment_id': 811186098, 'comment_body': 'maybe we can directly return like this then?\r\n```js\r\nreturn /\\beval\\(([^),]*)\\)/.test(s)\r\n```\r\n@Zxilly @grzegorz-kap ', 'comment_created': datetime.datetime(2022, 2, 21, 14, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 811201564, 'comment_body': 'It would compile the regex expression during each invocation. It might have an impact on performance. ', 'comment_created': datetime.datetime(2022, 2, 21, 14, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'grzegorz-kap', 'type': 'User'}, {'comment_id': 811621665, 'comment_body': '> You can have two regex expressions\r\n\r\nok\r\n', 'comment_created': datetime.datetime(2022, 2, 22, 6, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}]","[{'commit_sha': '86e2add7c5aaa7901d21c1c4b9cb8e6d0b8bef75', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de5f2f4f27f40941b125bf068b8f90e44ba69fb1', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
871339973,fix: Add Node.js example for Matching Function & RoleManagerAPI,Fix: https://github.com/casbin/node-casbin/issues/298,True,314,https://api.github.com/repos/casbin/casbin-website/pulls/314,https://github.com/casbin/casbin-website/pull/314,closed,86,1,2,2,2,0,0,0,[],2022-03-04 05:43:53+00:00,2022-03-04 07:21:33+00:00,5860.0,1:37:40,[],"[{'commit_sha': 'b4a08e30d9e9ac0d444f6b22b6e2c82518c03950', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45bf2361e36d6315716c6b288b87fd25c2f730bc', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
887915556,fix(BREAKING CHANGE): rebuild newEnforcer,"BREAKING CHANGE
ref: #352 
please review and suggest changes.",False,353,https://api.github.com/repos/casbin/node-casbin/pulls/353,https://github.com/casbin/node-casbin/pull/353,closed,15,54,1,1,2,0,0,0,[],2022-03-24 04:23:25+00:00,2022-03-24 06:45:55+00:00,8550.0,2:22:30,[],"[{'commit_sha': '7f99a40bad97ce0dd2ff67b454492e63b38288ea', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
901359685,feat: update_filtered_policies,Fix: https://github.com/pycasbin/sqlalchemy-adapter/issues/53,True,249,https://api.github.com/repos/casbin/pycasbin/pulls/249,https://github.com/casbin/pycasbin/pull/249,closed,70,0,4,1,12,12,1,0,[{'name': 'released'}],2022-04-06 11:04:19+00:00,2022-04-27 02:33:15+00:00,1783736.0,"20 days, 15:28:56","[{'comment_id': 846794413, 'comment_body': 'Here you need to update the policy in the model.\r\nAlso please format the code to remove unnecessary blank lines and line breaks.', 'comment_created': datetime.datetime(2022, 4, 10, 15, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'leeqvip', 'type': 'User'}, {'comment_id': 847181841, 'comment_body': '@leeqvip can you review it again I have made changes', 'comment_created': datetime.datetime(2022, 4, 11, 10, 34, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 847493333, 'comment_body': '@Shivansh-yadav13  Please add unit tests.', 'comment_created': datetime.datetime(2022, 4, 11, 15, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'leeqvip', 'type': 'User'}, {'comment_id': 851135557, 'comment_body': '@leeqvip I have not added tests because we are not adding it for the file adapter as discussed below.', 'comment_created': datetime.datetime(2022, 4, 15, 8, 11, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 851687836, 'comment_body': 'one-line arg list', 'comment_created': datetime.datetime(2022, 4, 17, 1, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 851687843, 'comment_body': 'one-line arg list', 'comment_created': datetime.datetime(2022, 4, 17, 1, 5, 7, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 851698146, 'comment_body': 'lint test will fail', 'comment_created': datetime.datetime(2022, 4, 17, 3, 45, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 851838279, 'comment_body': '@Shivansh-yadav13 then change the linter config, e.g., increase the line length limit', 'comment_created': datetime.datetime(2022, 4, 18, 2, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 852314542, 'comment_body': ""@hsluoyz sorry don't have much experience with this, how do I locate the config file after checkout?\r\n\r\nhttps://github.com/casbin/pycasbin/blob/f757024014be690f8ce6c99c0b96dab4b373c221/.github/workflows/build.yml#L55\r\n\r\n```yaml\r\nsteps:\r\n      - name: Checkout\r\n        uses: actions/checkout@v2\r\n\r\n      - name: Super-Linter\r\n        uses: github/super-linter@v4.2.2\r\n        env:\r\n          VALIDATE_PYTHON_BLACK: true\r\n          PYTHON_BLACK_CONFIG_FILE: pyproject.toml\r\n          DEFAULT_BRANCH: master\r\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\r\n```\r\n"", 'comment_created': datetime.datetime(2022, 4, 18, 18, 25, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 853254761, 'comment_body': ""I'm not familiar with that too. Do you know that? @leeqvip @ffyuanda @abingcbc"", 'comment_created': datetime.datetime(2022, 4, 19, 16, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 856884252, 'comment_body': ""@hsluoyz I'm trying to find a solution for this, but rn do you prefer bringing this change to a different PR? which we can create after finding a correct implementation of this till then we can maybe keep an issue open for others to also have a look."", 'comment_created': datetime.datetime(2022, 4, 23, 11, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 858248037, 'comment_body': '@hsluoyz I have fixed it, and now it can detect the config file and use it.', 'comment_created': datetime.datetime(2022, 4, 26, 4, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}]","[{'commit_sha': 'b24486b722b15e46d4805da79ae0a08ec073b626', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
911206620,feat: Support for wildcard match,"- Wildcard match can be used in the following for now
  - GetFilteredPolicy() 
  - GetFilteredNamedPolicy()
  - GetFilteredGroupingPolicy() 
  - GetFilteredNamedGroupingPolicy() 
  - HasPolicy()
  - HasNamedPolicy()
  - HasGroupingPolicy()
  - HasNamedGroupingPolicy()

- fix #358",False,361,https://api.github.com/repos/casbin/node-casbin/pulls/361,https://github.com/casbin/node-casbin/pull/361,closed,0,0,0,0,6,0,0,0,[],2022-04-16 05:32:22+00:00,2022-10-31 05:43:48+00:00,17107886.0,"198 days, 0:11:26",[],[],Shivansh Yadav,87603425,,User,,123,,55,34
912055733,fix: EnforceEx return allow reason for deny policy,- fix: #362 ,True,363,https://api.github.com/repos/casbin/node-casbin/pulls/363,https://github.com/casbin/node-casbin/pull/363,closed,47,5,4,1,6,14,1,0,[{'name': 'released'}],2022-04-18 13:48:32+00:00,2022-04-27 15:32:49+00:00,783857.0,"9 days, 1:44:17","[{'comment_id': 854701961, 'comment_body': 'We should not set `this.done=true`, this is incorrect, and needs to continue to check policies.\r\n\r\nYou need to check this part code: https://github.com/casbin/node-casbin/blob/master/src/coreEnforcer.ts#L482', 'comment_created': datetime.datetime(2022, 4, 21, 1, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 854753276, 'comment_body': '@nodece I have changed it please review.', 'comment_created': datetime.datetime(2022, 4, 21, 3, 54, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 855200282, 'comment_body': '@nodece ', 'comment_created': datetime.datetime(2022, 4, 21, 13, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 856315546, 'comment_body': ""This code is still incorrect, please remove this.\r\n\r\nThe follow is my design: \r\n\r\nYou need to change the `explainIndex`, which should be an array, then change the `EffectorStream` interface like:\r\n```ts\r\nexport interface EffectorStream {\r\n  current(): boolean;\r\n\r\n  pushEffect(eft: Effect): [boolean, boolean] | [boolean, boolean, boolean];\r\n}\r\n```\r\n\r\nThis change is fully compatible with the new and old library.\r\n\r\n`[boolean, boolean, boolean]`:\r\n1. [0] means the enforced result\r\n2. [1] means whether to record this rule, we need to recode this rule in enforce method when this is true\r\n3. [3] means whether to continue the enforce\r\n\r\n\r\nI didn't verify this design, could you help me verify this?\r\n"", 'comment_created': datetime.datetime(2022, 4, 22, 14, 55, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 856319569, 'comment_body': 'Could you add more tests to cover EnforceEx with the supported policy effect?', 'comment_created': datetime.datetime(2022, 4, 22, 14, 59, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 856881366, 'comment_body': '@nodece so do we also put all the possible reasons for deny and allow in explainIndex, because then we would have to go till the end of the policy?', 'comment_created': datetime.datetime(2022, 4, 23, 11, 17, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 856891473, 'comment_body': '@Shivansh-yadav13 [3] means whether to continue the enforce, you can refactor this interface to keep the same implementation with go-casbin.', 'comment_created': datetime.datetime(2022, 4, 23, 13, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 856891789, 'comment_body': ""okay so we are keeping it the same and breaking at `deny`, but we do keep adding all `allow` policies right? I'm just trying to understand why we are keeping the `explainIndex` an array"", 'comment_created': datetime.datetime(2022, 4, 23, 13, 17, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 856927366, 'comment_body': ""> okay so we are keeping it the same and breaking at deny, but we do keep adding all allow policies right?\r\n\r\nFor `some(where (p_eft == allow)) && !some(where (p_eft == deny))`\r\n\r\nIf no deny rule, we should return one allow rule, otherwise, we return one deny rule.\r\n\r\n > I'm just trying to understand why we are keeping the `explainIndex` an array\r\n\r\nSorry, the old type is correct.\r\n\r\n"", 'comment_created': datetime.datetime(2022, 4, 23, 14, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 857138082, 'comment_body': 'Add some more tests', 'comment_created': datetime.datetime(2022, 4, 24, 14, 51, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 857138114, 'comment_body': '@nodece I have added it like it will always record the reason and return it', 'comment_created': datetime.datetime(2022, 4, 24, 14, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 858816997, 'comment_body': '```suggestion\r\n\r\n```', 'comment_created': datetime.datetime(2022, 4, 26, 14, 54, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 858831148, 'comment_body': 'When you remove this line, this PR will be merged into master branch.', 'comment_created': datetime.datetime(2022, 4, 26, 15, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 859942931, 'comment_body': 'sorry @nodece I have removed it', 'comment_created': datetime.datetime(2022, 4, 27, 15, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}]","[{'commit_sha': '81fed418299c118d0e39d17e97c623798ecae62e', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
919472438,fix: Configure Linting,"- Added lint config file and configured workflow for linting
- Lint files with the latest lint config
- ref: #249 ",True,255,https://api.github.com/repos/casbin/pycasbin/pulls/255,https://github.com/casbin/pycasbin/pull/255,closed,164,498,25,1,7,0,1,0,[{'name': 'released'}],2022-04-26 14:06:46+00:00,2022-04-29 15:45:36+00:00,265130.0,"3 days, 1:38:50",[],"[{'commit_sha': '09a65a8364b9bbf1434c0c1ff00186a068ffa627', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
926364157,"feat: `updateGroupingPolicy()`, `updateNamedGroupingPolicy()`, `getImplicitResourcesForUser()`",- ref #324 ,False,364,https://api.github.com/repos/casbin/node-casbin/pulls/364,https://github.com/casbin/node-casbin/pull/364,closed,68,0,3,2,7,4,0,0,[],2022-05-03 09:20:42+00:00,2023-02-01 11:14:00+00:00,23680398.0,"274 days, 1:53:18","[{'comment_id': 872483234, 'comment_body': '```suggestion\r\n      const t: string[][] = [];\r\n```', 'comment_created': datetime.datetime(2022, 5, 13, 14, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}]","[{'commit_sha': 'dbb49c985fea7ef2be5cebffb28429bf7a5307d8', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd66e081a05467794f65350e8e7afb4e5010ddf37', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
927422279,feat: website migrate v1 to v2,"- **This PR is work in progress**
- ref: #1 ",False,2,https://api.github.com/repos/casbin/casbin-website-v2/pulls/2,https://github.com/casbin/casbin-website-v2/pull/2,closed,18379,0,118,2,14,0,0,0,[],2022-05-04 09:37:04+00:00,2022-06-10 17:16:25+00:00,3224361.0,"37 days, 7:39:21",[],"[{'commit_sha': '32e91d1d64fac7e6839fe1980011257dbb298a22', 'committer_username': 'hsluoyz', 'committer_name': 'Yang Luo', 'committer_email': 'hsluoyz@gmail.com', 'commit_date': datetime.datetime(2013, 3, 6, 13, 16, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a3992832a0b783506ecda8abdc5d68f00f9519d', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
855813575,fix: Schema p_type to ptype,"fix #55 
please suggest changes if required.",True,56,https://api.github.com/repos/node-casbin/mongoose-adapter/pulls/56,https://github.com/node-casbin/mongoose-adapter/pull/56,closed,57,57,3,3,5,0,1,0,[{'name': 'released'}],2022-02-17 18:50:34+00:00,2022-02-27 15:40:18+00:00,852584.0,"9 days, 20:49:44",[],"[{'commit_sha': 'b15ffc7cd14873eff871cc92668e8c5060a46112', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c1df1dbcb18570519a5a7b29168116c5faecf58', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be972caf26751ff62bce21109ab3ba7bb311058c', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
877591911,fix!: Field name 'p_type' to 'ptype',"- #55 
- breaking change",True,59,https://api.github.com/repos/node-casbin/mongoose-adapter/pulls/59,https://github.com/node-casbin/mongoose-adapter/pull/59,closed,57,57,3,1,12,0,0,0,[],2022-03-11 16:05:36+00:00,2022-03-12 07:18:53+00:00,54797.0,15:13:17,[],"[{'commit_sha': '603e09c37312ba237eb912c327c22ba5f6acb339', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
969319098,test: add benchmark for model,"- Demo PR (WIP)
- added benchmarks for model
- test/benchmark/model.ts",True,4,https://api.github.com/repos/casbin/casbin-core/pulls/4,https://github.com/casbin/casbin-core/pull/4,closed,530,3,4,1,7,1,0,0,[],2022-06-16 13:18:21+00:00,2022-06-20 14:49:32+00:00,351071.0,"4 days, 1:31:11","[{'comment_id': 899137534, 'comment_body': 'Move this to `devDependencies`.', 'comment_created': datetime.datetime(2022, 6, 16, 14, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}]","[{'commit_sha': 'ac3756487bc43fbd120e083a16478c9732a1725f', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
972469150,"test: add CachedEnforcer, managementAPI, RoleManager benchmark",,True,6,https://api.github.com/repos/casbin/casbin-core/pulls/6,https://github.com/casbin/casbin-core/pull/6,closed,926,0,4,3,2,5,0,0,[],2022-06-20 17:16:11+00:00,2022-06-25 09:51:00+00:00,405289.0,"4 days, 16:34:49","[{'comment_id': 903899303, 'comment_body': 'Remove the loop.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 24, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 903902327, 'comment_body': 'Looks miss call the enforce method?', 'comment_created': datetime.datetime(2022, 6, 22, 15, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 903905141, 'comment_body': 'Should be `true`, or using `await e.buildRoleLinks();` When the policies is added.\r\n', 'comment_created': datetime.datetime(2022, 6, 22, 15, 27, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 903905737, 'comment_body': 'Remove the loop, you can use a random group instead of this.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 903910349, 'comment_body': 'Remove the loop, you can use a random group instead of this.', 'comment_created': datetime.datetime(2022, 6, 22, 15, 30, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}]","[{'commit_sha': '39dda9c06d06f5497cdbe017f4ff15faae2654ca', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f448d679e890b8df6fea140aa014dd437154ecd', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0815b0e0fb0e7cf4cae38d56edfd0f84cddf5df9', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
973036682,chore: add benchmark workflow,Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>,True,7,https://api.github.com/repos/casbin/casbin-core/pulls/7,https://github.com/casbin/casbin-core/pull/7,closed,14,0,2,1,2,0,0,0,[],2022-06-21 03:57:15+00:00,2022-06-25 09:48:57+00:00,366702.0,"4 days, 5:51:42",[],"[{'commit_sha': '0e11802a2f7b12d812d0d34a1cedd6d5abb59cd6', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
963904542,feat: enforcer reactjs test,"- added ReactJS test of enforcer.
- test/reactjs/src/Enforcer.js

",True,2,https://api.github.com/repos/casbin/casbin-core/pulls/2,https://github.com/casbin/casbin-core/pull/2,closed,9242,4,18,1,9,6,0,0,[],2022-06-10 09:22:14+00:00,2022-06-16 05:13:29+00:00,503475.0,"5 days, 19:51:15","[{'comment_id': 895393212, 'comment_body': 'Maybe you should also add\r\n```suggestion\r\n    ""web-vitals"": ""^2.1.0""\r\n    ""casbin-core"": ""file:../../""\r\n```', 'comment_created': datetime.datetime(2022, 6, 13, 7, 11, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}, {'comment_id': 896376453, 'comment_body': '@Zxilly do you know how I can fix `ReferenceError: await is not defined` üòÖ', 'comment_created': datetime.datetime(2022, 6, 14, 5, 3, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 896765332, 'comment_body': '@Shivansh-yadav13 `top-level-await` only works in esm module.\r\nI write it like this\r\n```js\r\nimport React, { useEffect, useState } from ""react"";\r\nimport { MemoryAdapter, Model, newEnforcer } from ""casbin-core"";\r\n\r\nconst model = new Model(`\r\n    [request_definition]\r\n    r = sub, obj, act\r\n\r\n    [policy_definition]\r\n    p = sub, obj, act\r\n\r\n    [policy_effect]\r\n    e = some(where (p.eft == allow))\r\n\r\n    [matchers]\r\n    m = r.sub == p.sub && r.obj == p.obj && r.act == p.act\r\n    `);\r\n\r\nconst adapter = new MemoryAdapter(\r\n  `p, alice, data1, read\r\np, bob, data2, write`);\r\n\r\nconst Enforcer = ({ sub, obj, act }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState(false);\r\n  const [enforcer, setEnforcer] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(""Enforcer useEffect"");\r\n    newEnforcer(model, adapter).then(e => {\r\n      setEnforcer(e);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (enforcer) {\r\n      setLoading(true);\r\n      enforcer.enforce(sub, obj, act).then((res) => setResult(res)).finally(() => setLoading(false));\r\n    }\r\n  }, [sub, obj, act, enforcer]);\r\n  return (\r\n    <>\r\n      <h1>Casbin</h1>\r\n      <h2>Request ({sub}, {obj}, {act})</h2>\r\n      {\r\n        loading ?\r\n          <h3>Enforcing...</h3>\r\n          :\r\n          <h3 data-testid=""enforce-result"">{result ? ""Allowed"" : ""Denied""}</h3>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Enforcer;\r\n```\r\nMaybe can wrap enforcer initialization in `useCallback()`.\r\n@nodece What\'s your suggestion?', 'comment_created': datetime.datetime(2022, 6, 14, 12, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}, {'comment_id': 897003820, 'comment_body': 'I remember support top-level await.\r\n', 'comment_created': datetime.datetime(2022, 6, 14, 15, 50, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 897004243, 'comment_body': '@Zxilly This code looks great to me.', 'comment_created': datetime.datetime(2022, 6, 14, 15, 51, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 897010401, 'comment_body': '> Maybe you should also add\r\n\r\nUsing  `""casbin-core"": ""link:../../""` for refer to casbin-core/lib.\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 6, 14, 15, 57, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}]","[{'commit_sha': '383305d6411d12bbb87bea5bcc0c57f9a3e7f134', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
971405473,chore: add workflow for javascript platforms,Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>,True,5,https://api.github.com/repos/casbin/casbin-core/pulls/5,https://github.com/casbin/casbin-core/pull/5,closed,15,0,1,1,2,0,0,0,[],2022-06-19 04:32:52+00:00,2022-06-20 14:50:04+00:00,123432.0,"1 day, 10:17:12",[],"[{'commit_sha': 'e36c21e6f39ee4ec4e250642a146769a8612e7b4', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
974536023,test: add enforcer react-native test,"- test is not added rn, going to add
Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>",True,8,https://api.github.com/repos/casbin/casbin-core/pulls/8,https://github.com/casbin/casbin-core/pull/8,closed,7440,2,12,1,8,0,0,0,[],2022-06-22 04:40:12+00:00,2022-07-01 14:18:46+00:00,812314.0,"9 days, 9:38:34",[],"[{'commit_sha': 'fac8a7d844266bfcf5abc0dd85c06b7c29337a4c', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
981328462,test: add ng enforcer test,Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>,True,10,https://api.github.com/repos/casbin/casbin-core/pulls/10,https://github.com/casbin/casbin-core/pull/10,closed,7112,2,30,1,2,0,0,0,[],2022-06-28 12:17:19+00:00,2022-06-29 16:00:29+00:00,99790.0,"1 day, 3:43:10",[],"[{'commit_sha': 'b094127bf736d43512b2b8fac6fe63a6cbe2c6e4', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
983320796,test: add ng workflow,Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>,True,11,https://api.github.com/repos/casbin/casbin-core/pulls/11,https://github.com/casbin/casbin-core/pull/11,closed,15,1,2,1,5,0,0,0,[],2022-06-30 03:49:18+00:00,2022-07-06 14:24:26+00:00,556508.0,"6 days, 10:35:08",[],"[{'commit_sha': 'a21026a380e8790d81060f45a0e35d975c4bb067', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
985104741,feat: addPoliciesWithAffected & removePoliciesWithAffected,"- ref: #9 
Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>",True,12,https://api.github.com/repos/casbin/casbin-core/pulls/12,https://github.com/casbin/casbin-core/pull/12,closed,97,0,3,1,2,2,0,0,[],2022-07-01 15:44:35+00:00,2022-07-06 14:25:22+00:00,427247.0,"4 days, 22:40:47","[{'comment_id': 912371117, 'comment_body': 'I think you should add a duplicate rule to test to avoid adding duplicate rule.', 'comment_created': datetime.datetime(2022, 7, 2, 15, 1, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 912371363, 'comment_body': 'Add a rule that does not exist in the model to the rules, then assert.', 'comment_created': datetime.datetime(2022, 7, 2, 15, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}]","[{'commit_sha': '87ca0d30d9a9300149f8f043bfb3b6215a52f1f5', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
991765928,WIP: multiple section types,"ref: https://github.com/casbin/node-casbin/issues/311#issuecomment-1166572177
cherry-pick of [cc58c57](https://github.com/casbin/node-casbin/commit/cc58c57ae4a7c3202c7217497bef8016df93fe26) and [33c784c](https://github.com/casbin/node-casbin/commit/33c784cbdc0d650ba75b8177b69f41dc0ca11fae)",False,375,https://api.github.com/repos/casbin/node-casbin/pulls/375,https://github.com/casbin/node-casbin/pull/375,closed,252,20,8,7,9,13,0,0,[],2022-07-08 14:59:30+00:00,2023-03-27 15:56:04+00:00,22640194.0,"262 days, 0:56:34","[{'comment_id': 922675609, 'comment_body': 'should check length of `rvals` before pick element from it.', 'comment_created': datetime.datetime(2022, 7, 16, 12, 35, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}, {'comment_id': 922675619, 'comment_body': 'same', 'comment_created': datetime.datetime(2022, 7, 16, 12, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}, {'comment_id': 922675627, 'comment_body': 'same', 'comment_created': datetime.datetime(2022, 7, 16, 12, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}, {'comment_id': 922675636, 'comment_body': 'same', 'comment_created': datetime.datetime(2022, 7, 16, 12, 35, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}, {'comment_id': 922675728, 'comment_body': 'this will lead to breaking change. Please also export memory adapter.', 'comment_created': datetime.datetime(2022, 7, 16, 12, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}, {'comment_id': 922675791, 'comment_body': 'breaking change', 'comment_created': datetime.datetime(2022, 7, 16, 12, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}, {'comment_id': 922679182, 'comment_body': 'Remove this file.', 'comment_created': datetime.datetime(2022, 7, 16, 13, 15, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 922679311, 'comment_body': 'Revert the `StringAdapter.ts`, and remove this file.', 'comment_created': datetime.datetime(2022, 7, 16, 13, 16, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 922679408, 'comment_body': ""```\r\nconst policy = readFileSync('examples/mulitple_policy.csv').toString();\r\nconst a = new StringAdapter(policy);\r\n```"", 'comment_created': datetime.datetime(2022, 7, 16, 13, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 922679451, 'comment_body': ""```\r\nconst policy = readFileSync('examples/mulitple_policy.csv').toString();\r\nconst a = new StringAdapter(policy);\r\n```"", 'comment_created': datetime.datetime(2022, 7, 16, 13, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 922679463, 'comment_body': ""```\r\nconst policy = readFileSync('examples/mulitple_policy.csv').toString();\r\nconst a = new StringAdapter(policy);\r\n```"", 'comment_created': datetime.datetime(2022, 7, 16, 13, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 922679467, 'comment_body': ""```\r\nconst policy = readFileSync('examples/mulitple_policy.csv').toString();\r\nconst a = new StringAdapter(policy);\r\n```"", 'comment_created': datetime.datetime(2022, 7, 16, 13, 18, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 922679494, 'comment_body': 'Revert the `stringAdapter`.', 'comment_created': datetime.datetime(2022, 7, 16, 13, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}]","[{'commit_sha': 'd0524f413097c52f64d8a59a104c9cfac316ce25', 'committer_username': 'Gabriel-403', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 13, 9, 33, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b84dd366a47da3463babab8538721c3ae09d487', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87f08d67cbd409a92185a8ad4407ea0942b43d1a', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04bb86fdcc64535ecd1d8d8c4d8f84b62b66d3cb', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fb8e702d0368bb8b37fdc037b49642d576495c1', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2818e1cc2e850a4dd7a53e3e67d62041d368a785', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a831555f16133c0efd9f5eba494323157690371e', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1006542161,"feat: getAllUsersByDomain, getFieldIndex","I will add more if this is approved
Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>",True,14,https://api.github.com/repos/casbin/casbin-core/pulls/14,https://github.com/casbin/casbin-core/pull/14,closed,60,0,4,1,7,12,0,0,[],2022-07-24 13:09:05+00:00,2022-08-01 14:07:53+00:00,694728.0,"8 days, 0:58:48","[{'comment_id': 928968907, 'comment_body': ""Looks like you want to add a cache, I don't suggest you do that.\r\n"", 'comment_created': datetime.datetime(2022, 7, 25, 14, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 928975813, 'comment_body': 'A easier way:\r\n```js\r\nindex = assertion?.tokens.findIndex((n) => n === pattern);\r\nif (index === undefined || index === -1) {\r\n      return -1;\r\n}\r\nassertion?.fieldIndexMap.set(field, index);\r\nreturn index;\r\n```', 'comment_created': datetime.datetime(2022, 7, 25, 14, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 928978807, 'comment_body': 'Move to line 199.', 'comment_created': datetime.datetime(2022, 7, 25, 14, 52, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 933737985, 'comment_body': 'sir, which line to move to 199?', 'comment_created': datetime.datetime(2022, 7, 30, 4, 27, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 933764127, 'comment_body': '@nodece ', 'comment_created': datetime.datetime(2022, 7, 30, 7, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 933810432, 'comment_body': '203 and 204 line.', 'comment_created': datetime.datetime(2022, 7, 30, 14, 5, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 933986448, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2022, 7, 31, 13, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 934006284, 'comment_body': '```suggestion\r\n  \r\n```', 'comment_created': datetime.datetime(2022, 7, 31, 15, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 934006294, 'comment_body': '```suggestion\r\n    const index = assertion?.tokens.findIndex((n) => n === pattern);\r\n```', 'comment_created': datetime.datetime(2022, 7, 31, 15, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 934006332, 'comment_body': '```suggestion\r\n\r\n```', 'comment_created': datetime.datetime(2022, 7, 31, 15, 56, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 934006344, 'comment_body': '```suggestion\r\n\r\n```', 'comment_created': datetime.datetime(2022, 7, 31, 15, 56, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 934006359, 'comment_body': '```suggestion\r\n\r\n```', 'comment_created': datetime.datetime(2022, 7, 31, 15, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}]","[{'commit_sha': '7171d7b2a30336d3750fb132d364c08686dbbcfd', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1020205767,feat: rbac with domain api,"- DeleteAllUsersByDomain()
- DeleteDomains()
- GetAllDomains()
- rbac with domain api complete
Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>",False,17,https://api.github.com/repos/casbin/casbin-core/pulls/17,https://github.com/casbin/casbin-core/pull/17,open,113,0,4,1,7,0,0,0,[],2022-08-08 12:06:14+00:00,,0.0,,[],"[{'commit_sha': '336d0009ee3048a65e425949c960f580f7e28683', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1038604568,feat: EnforceWithMatcher & EnforceExWithMatcher,- added enforceWithMatcher & enforceExWithMatcher,False,383,https://api.github.com/repos/casbin/node-casbin/pulls/383,https://github.com/casbin/node-casbin/pull/383,closed,57,6,2,1,4,3,0,0,[],2022-08-27 10:18:47+00:00,2023-09-03 09:35:26+00:00,32138199.0,"371 days, 23:16:39","[{'comment_id': 962290993, 'comment_body': 'Move this check after the else condition when the matcher exists.', 'comment_created': datetime.datetime(2022, 9, 4, 10, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 962309472, 'comment_body': 'This should test all the normal test cases for this model + policy and verify all the other ramifications with an alternative matcher. Single test enforce can be flagged true or false out of the randomness of a faulty pull request.', 'comment_created': datetime.datetime(2022, 9, 4, 12, 54, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 970901562, 'comment_body': 'Could you review this PR once?', 'comment_created': datetime.datetime(2022, 9, 14, 14, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}]","[{'commit_sha': '721e3484efe2b88bf83899ae4f5333fa6cca6816', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
991715893,feat: add WatcherEX interface,Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>,True,13,https://api.github.com/repos/casbin/casbin-core/pulls/13,https://github.com/casbin/casbin-core/pull/13,closed,30,0,1,1,3,8,0,0,[],2022-07-08 14:11:43+00:00,2022-07-13 15:50:04+00:00,437901.0,"5 days, 1:38:21","[{'comment_id': 919076032, 'comment_body': '```suggestion\r\n  UpdateForAddPolicy(sec: string, ptype: string, ...params: string[]): Promise<void>;\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 14, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 919076284, 'comment_body': '```suggestion\r\n  UpdateForRemovePolicy(sec: string, ptype: string, ...params: string[]): Promise<void>;\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 14, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 919076660, 'comment_body': '```suggestion\r\n  UpdateForRemoveFilteredPolicy(sec: string, ptype: string, fieldIndex: number, ...fieldValues: string[]): Promise<void>;\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 14, 56, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 919077022, 'comment_body': '```suggestion\r\n  UpdateForSavePolicy(model: Model): Promise<void>;\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 14, 57, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 919077182, 'comment_body': '```suggestion\r\n  UpdateForAddPolicies(sec: string, ptype: string, ...rules: string[][]): Promise<void>;\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 14, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 919077346, 'comment_body': '```suggestion\r\n  UpdateForRemovePolicies(sec: string, ptype: string, ...rules: string[][]): Promise<void>;\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 14, 57, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 919077638, 'comment_body': '```suggestion\r\nexport interface WatcherEx extends Watcher {\r\n```', 'comment_created': datetime.datetime(2022, 7, 12, 14, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 920116307, 'comment_body': 'Done :+1: ', 'comment_created': datetime.datetime(2022, 7, 13, 14, 0, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}]","[{'commit_sha': '2e1a12a61f1f4f90f0ff983450bfb867a6b478e4', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1009218326,fix: export watcherEx,"sorry, I forgot to export WatcherEx
Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>",True,15,https://api.github.com/repos/casbin/casbin-core/pulls/15,https://github.com/casbin/casbin-core/pull/15,closed,7,6,2,1,3,2,0,0,[],2022-07-27 05:42:40+00:00,2022-08-02 14:39:30+00:00,550610.0,"6 days, 8:56:50","[{'comment_id': 934575073, 'comment_body': ""```suggestion\r\nexport * from './watcherEx';\r\n```"", 'comment_created': datetime.datetime(2022, 8, 1, 14, 8, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 935619926, 'comment_body': 'Changed the name of the file :+1: ', 'comment_created': datetime.datetime(2022, 8, 2, 13, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}]","[{'commit_sha': '5ab7abc403eec161a7275166d3bddb663b43b745', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1019363458,feat: call watcherEx methods,Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>,True,16,https://api.github.com/repos/casbin/casbin-core/pulls/16,https://github.com/casbin/casbin-core/pull/16,closed,48,14,3,1,3,0,0,0,[],2022-08-06 15:20:38+00:00,2022-08-16 14:36:57+00:00,861379.0,"9 days, 23:16:19",[],"[{'commit_sha': '15aaad755aeb41572adb808bff252add11b41942', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1027809042,feat: add WatcherEx,"- Need watcherEx to be released to use in node-casbin plugins
- already added in casbin-core",True,381,https://api.github.com/repos/casbin/node-casbin/pulls/381,https://github.com/casbin/node-casbin/pull/381,closed,56,9,4,1,8,2,1,0,[{'name': 'released'}],2022-08-16 15:57:20+00:00,2022-08-18 15:23:25+00:00,170765.0,"1 day, 23:26:05","[{'comment_id': 947979253, 'comment_body': 'Unnecessary.', 'comment_created': datetime.datetime(2022, 8, 17, 14, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 947979918, 'comment_body': 'Remove this line, unused.', 'comment_created': datetime.datetime(2022, 8, 17, 14, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}]","[{'commit_sha': '0d2172b234387a7d81a7d62712f83a570642e8b1', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1017437249,fix: pass in update msg,"Need for extending watcherEx 
need public constructor for extending
please review if this is good change?",False,26,https://api.github.com/repos/node-casbin/redis-watcher/pulls/26,https://github.com/node-casbin/redis-watcher/pull/26,closed,3,3,1,1,1,4,0,0,[],2022-08-04 11:59:51+00:00,2022-08-09 14:03:38+00:00,439427.0,"5 days, 2:03:47","[{'comment_id': 937788314, 'comment_body': 'Is this necessary? Maybe you can override it.', 'comment_created': datetime.datetime(2022, 8, 4, 13, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Zxilly', 'type': 'User'}, {'comment_id': 937795192, 'comment_body': '@Zxilly I was wondering that I would have to re-write for override like the same Redis connections and all that, so I was thinking to update this. all that is not accessible when extending. please suggest if there is a better method', 'comment_created': datetime.datetime(2022, 8, 4, 13, 40, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 939642608, 'comment_body': '@nodece @Zxilly , what about we add watcherEx class inside this project only and then it depends on the user which one they want to use?\r\nI feel creating it in different project means implementing the same thing but just with few extra features.', 'comment_created': datetime.datetime(2022, 8, 7, 10, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 941403523, 'comment_body': '@Shivansh-yadav13 and I talked about this offline. This PR is unnecessary, so close this PR.', 'comment_created': datetime.datetime(2022, 8, 9, 14, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}]","[{'commit_sha': '624812fd845026ca28e8daf336f6475f0eb6ac6c', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1032550765,feat: WatcherEx,WatcherEx,False,30,https://api.github.com/repos/node-casbin/redis-watcher/pulls/30,https://github.com/node-casbin/redis-watcher/pull/30,closed,368,13,4,1,13,42,0,0,[],2022-08-22 09:21:51+00:00,2024-03-08 04:37:39+00:00,48712548.0,"563 days, 19:15:48","[{'comment_id': 951220994, 'comment_body': ""@nodece I found out that the callback is running after this line, that's why the test is failing, what can I do to solve it ?\r\n\r\n__\r\n[![sema-logo](https://app.semasoftware.com/img/sema-tray-logo.gif)](https://semasoftware.com/gh) &nbsp;**Summary:** :question: I have a question\r\n"", 'comment_created': datetime.datetime(2022, 8, 22, 9, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 951570883, 'comment_body': 'Maybe one ""settings"" or ""options"" parameter that holds all the init configurations. And create an interface for it. Functions with too many input variables are not too easy to read.', 'comment_created': datetime.datetime(2022, 8, 22, 15, 18, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 951582783, 'comment_body': '`updateFor` seems a little bit redundant. Are there plans to include other messages that would conflict these otherwise?', 'comment_created': datetime.datetime(2022, 8, 22, 15, 29, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 951584769, 'comment_body': 'All callback functions could be added to an object where they can be called. Like `this.callbacks[msg.type]`', 'comment_created': datetime.datetime(2022, 8, 22, 15, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 951586672, 'comment_body': 'RedisClient does not have `publish` in its types, which is like the basic feature? Interesting.', 'comment_created': datetime.datetime(2022, 8, 22, 15, 33, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 951598184, 'comment_body': 'Construct the test differently. Easiest way to do it is to use `done`-syntax or if you prefer async, wrap it within a promise like [here](https://github.com/Sefriol/casbin-mongo-changestream-watcher/blob/master/test/integration/watcher.test.ts#L30). Then you can move expects within the callback-function and resolve it after all tests are done.', 'comment_created': datetime.datetime(2022, 8, 22, 15, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 952636825, 'comment_body': 'Can throw if `watcherExCallBackMethods[msg.updateType]` is not defined. Intentional or not?', 'comment_created': datetime.datetime(2022, 8, 23, 13, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 956736413, 'comment_body': 'No, I guess we should avoid that error\r\n`TypeError: watcherExCallBackMethods[msg.updateType] is not a functio`\r\n\r\n__\r\n[![sema-logo](https://app.semasoftware.com/img/sema-tray-logo.gif)](https://semasoftware.com/gh) &nbsp;**Summary:** :hammer_and_wrench: This code needs a fix\r\n', 'comment_created': datetime.datetime(2022, 8, 28, 14, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 956737089, 'comment_body': ""It's just that these are used multiple time. Should I remove it?\r\n\r\n"", 'comment_created': datetime.datetime(2022, 8, 28, 14, 27, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 956760309, 'comment_body': ""Personally I do not think `updateFor` is needed if there isn't any other messages flying around in the pub/sub that might cause a confusion when trying to differentiate different messages.\r\n\r\nBut maybe I am not the right person to dictate which one should be used. @hsluoyz should confirm that the naming conventions are ok."", 'comment_created': datetime.datetime(2022, 8, 28, 17, 41, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 956763147, 'comment_body': 'Add test for all the default callbacks in `WatcherEx`.', 'comment_created': datetime.datetime(2022, 8, 28, 18, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 956764178, 'comment_body': 'Maybe do not throw errors unnecessary. \r\n\r\n`if(watcherExCallBackMethods[msg.updateType]) watcherExCallBackMethods[msg.updateType](msg.args);` or `watcherExCallBackMethods[msg.updateType]?.call(this, msg.args);`', 'comment_created': datetime.datetime(2022, 8, 28, 18, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 956764285, 'comment_body': 'I guess initiators for this and Cluster could be combined. Not a big deal.\r\n', 'comment_created': datetime.datetime(2022, 8, 28, 18, 22, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 957353594, 'comment_body': ""Plz see how Golang's Redis WatcherEx names it: https://github.com/casbin/redis-watcher/commit/9447bc35ede29dd2e62c23de5afb59ff8feea670"", 'comment_created': datetime.datetime(2022, 8, 29, 13, 41, 34, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 957955743, 'comment_body': 'but it is not throwing error in try& catch block I have added test for missing callback\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 30, 2, 51, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 958308057, 'comment_body': 'Empty `catch` is not really a good way to use these functions. In addition, if something failed within the callback function itself, it would not be caught anymore.', 'comment_created': datetime.datetime(2022, 8, 30, 10, 32, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 958495524, 'comment_body': 'It was separated in watcher, so I keep the same here, but then should I also combine them in watcher?\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 30, 13, 38, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 958498359, 'comment_body': ""> Add test for all the default callbacks in WatcherEx.\r\n\r\nSorry I didn't understand, we don't have default callbacks in watcherEx?"", 'comment_created': datetime.datetime(2022, 8, 30, 13, 41, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 958526465, 'comment_body': 'Replicate the test cases done in golang. i.e. for removePolicy, addPolicy etc.', 'comment_created': datetime.datetime(2022, 8, 30, 14, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 958527925, 'comment_body': ""Golang definition seems to have them separate, so let's keep them separate in both."", 'comment_created': datetime.datetime(2022, 8, 30, 14, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 958529404, 'comment_body': ""Actually, let's ensure that this uses the same naming scheme as the golang version does."", 'comment_created': datetime.datetime(2022, 8, 30, 14, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 958569423, 'comment_body': '@Sefriol they are using `UpdateForAddPolicies` like that\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 30, 14, 37, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 959728590, 'comment_body': ""`msg` should be of type string, you don't need to stringify that."", 'comment_created': datetime.datetime(2022, 8, 31, 15, 27, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 959738912, 'comment_body': 'There need to get the policy and grouping policy from the model, and then add them to `args`.', 'comment_created': datetime.datetime(2022, 8, 31, 15, 37, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 959740998, 'comment_body': ""Don't use the type `any`. Please define the interface or type."", 'comment_created': datetime.datetime(2022, 8, 31, 15, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 963021346, 'comment_body': '```suggestion\r\n  addPolicyCb?: (args: {sec: string, ptype: string, params: string[]}) => Promise<void>;\r\n```', 'comment_created': datetime.datetime(2022, 9, 5, 15, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 963021738, 'comment_body': 'It should be return a type Promise.', 'comment_created': datetime.datetime(2022, 9, 5, 15, 48, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 963022015, 'comment_body': 'You also need to update the following methods.', 'comment_created': datetime.datetime(2022, 9, 5, 15, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 963788018, 'comment_body': 'Why is this type `Promise<any> | any`, not `Promise<void>`?', 'comment_created': datetime.datetime(2022, 9, 6, 14, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 963789895, 'comment_body': ""I'm sorry I must have missed it, rn I'm trying a way to fix tests\r\n\r\n"", 'comment_created': datetime.datetime(2022, 9, 6, 14, 35, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 974211912, 'comment_body': ""Just found out, there is no problem in tests üòÖ watcherEx not able find the callback.\r\nI'm going to fix it and push the changes"", 'comment_created': datetime.datetime(2022, 9, 19, 12, 52, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 974220113, 'comment_body': '@Shivansh-yadav13 thanks! We expect all your open PRs should be resolved (usually merged, or closed if proved unwanted any more) around the end of GSoC.', 'comment_created': datetime.datetime(2022, 9, 19, 13, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 974682477, 'comment_body': ""What's up with this."", 'comment_created': datetime.datetime(2022, 9, 19, 20, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 974690893, 'comment_body': 'There are these `watcherExCallBackMethods`, `WatcherExCallBackOptions` and `updateTypes` which all kinda define the same thing. Check whether all of them are needed. I think one could be removed at least.', 'comment_created': datetime.datetime(2022, 9, 19, 21, 7, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 974693270, 'comment_body': 'Currently, the interface allows to not define these functions, but receiving a message from them would throw an error. I think the interface should guide users to not get unnecessary errors. Not defining them should be deliberate, so they should use `@ts-ignore` at that point if they really want to do so.', 'comment_created': datetime.datetime(2022, 9, 19, 21, 10, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 974700799, 'comment_body': 'I think this test is not working correctly. You should not `await` this line, but wait for `RemovePolicyFilteredCallback` instead after you have called `removeFilteredPolicy`', 'comment_created': datetime.datetime(2022, 9, 19, 21, 22, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 974701513, 'comment_body': 'Same here as above. I could be wrong.', 'comment_created': datetime.datetime(2022, 9, 19, 21, 23, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 974702400, 'comment_body': 'Or there should be an option to not receive errors if a callback is not defined. Either or.', 'comment_created': datetime.datetime(2022, 9, 19, 21, 24, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 975213546, 'comment_body': ""`RemovePolicyFilteredCallback` will be called inside `removeFilteredPolicy` and it's an asynchronous function so we await."", 'comment_created': datetime.datetime(2022, 9, 20, 11, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 975288574, 'comment_body': ""I don't think that's true. Callback function is not awaited in `node-casbin` either. It's called yes, but since it does not await for it, it won't ensure it's completion before function returns.\r\n\r\nIt might work now, but it can also break. Usually this message in tests is indicative that some async functions were still executing after the tests were completed.\r\nhttps://github.com/node-casbin/redis-watcher/actions/runs/3083436438/jobs/4984362403#step:9:15"", 'comment_created': datetime.datetime(2022, 9, 20, 12, 20, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 979165786, 'comment_body': '@Sefriol should we await watcher callback in `node-casbin`?', 'comment_created': datetime.datetime(2022, 9, 24, 5, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 979220738, 'comment_body': 'Nope. `node-casbin` should work normally even if the watcher fails. Waiting for the watcher could also be a huge performance bottleneck which we definitely do not want.', 'comment_created': datetime.datetime(2022, 9, 24, 10, 34, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}]","[{'commit_sha': '8c7c32ee7a5e7f3d0ec7900abb5fd68d9d6dc913', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1045406110,feat: add management api for watcherEx callbacks,"- ref: https://github.com/casbin/casbin/issues/1092
- Moved all watcher calls from Internal methods to management enforcer",True,384,https://api.github.com/repos/casbin/node-casbin/pulls/384,https://github.com/casbin/node-casbin/pull/384,closed,105,42,3,1,7,50,1,0,[{'name': 'released'}],2022-09-03 05:37:45+00:00,2022-09-14 14:32:15+00:00,982470.0,"11 days, 8:54:30","[{'comment_id': 962286456, 'comment_body': 'I think this should call remove and add policy. We cannot ignore changes.', 'comment_created': datetime.datetime(2022, 9, 4, 10, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 962287977, 'comment_body': 'RN all the watcher alerts calls the loadPolicy  method, maybe we create a watcherEx method for this change.\r\nbut it is not ignored. \r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 4, 10, 19, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 962288423, 'comment_body': ""The comment is not necessary. I think it's pretty self-explanatory if you try to notify a watcher but it does not exist. (EDIT: But maybe can be left for the purpose of dropping `await`.)\r\n\r\nI am also thinking about whether we should await for notify functions. Sure, if the update does not go through it's kinda bad, but at the same time, it would halt the current adapter from doing modifications to the policy when it might be crucial. Other enforcers can still be synced in other ways.\r\n\r\nExample case: if we have an adapter that is a mongo database and a watcher that is Redis. We should not block Casbin from doing updates to the policy if Redis is down. Other enforcers can still be synced via adapter connection if need be, but in this case, the adapter and the enforcer would stop working altogether just because Redis is down."", 'comment_created': datetime.datetime(2022, 9, 4, 10, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 962288736, 'comment_body': 'Sometimes watcher is checked, sometimes not. Reason?', 'comment_created': datetime.datetime(2022, 9, 4, 10, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 962289698, 'comment_body': 'Since `golang` has it, maybe we should too? https://github.com/JalinWang/casbin/blob/master/internal_api.go#L184', 'comment_created': datetime.datetime(2022, 9, 4, 10, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 962290153, 'comment_body': 'If watcher Ex exists, then I think it is better to call watcherEx and not watcher, im checking it afterwards\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 4, 10, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 962290570, 'comment_body': ""@Sefriol you are right, do you think there is any other way so that we don't fall in watcherEx callback loop\r\n\r\n"", 'comment_created': datetime.datetime(2022, 9, 4, 10, 39, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 962291591, 'comment_body': 'I think the current implementation is probably fine, but just do not `await` the watcher. If notify fails, then it fails. Blocking the enforcer / adapter from working when watcher is down is more harmful IMO.', 'comment_created': datetime.datetime(2022, 9, 4, 10, 46, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 962292179, 'comment_body': 'Other enforcers most likely do still have access to the policy storage even when the watcher is down, so they do have a chance to update their policy tables by other means.\r\n\r\nI am not sure if this should be a configuration parameter. Maybe in some cases, people would want the adapter to be blocked when the watcher is not responsive and sometimes the other way around.', 'comment_created': datetime.datetime(2022, 9, 4, 10, 50, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 962975184, 'comment_body': 'the method used is empty https://github.com/JalinWang/casbin/blob/74e094778fb3b2c3ed2e7a32d51dbaba59c8df39/watcher_update_test.go#L25\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 5, 14, 43, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 963111116, 'comment_body': ""> RN all the watcher alerts calls the loadPolicy method, maybe we create a watcherEx method for this change.\r\nbut it is not ignored.\r\n\r\nI don't think we should assume that user defines a normal watcher when they have watcherEx in place. IMO all functions should be covered, but I'll let @hsluoyz or @nodece to be the final judge in that."", 'comment_created': datetime.datetime(2022, 9, 5, 20, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 963111807, 'comment_body': 'As said, `golang` covers all update functions.', 'comment_created': datetime.datetime(2022, 9, 5, 20, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 964955090, 'comment_body': 'We need to wait for the adapter and cached to end, and then call the watcher.\r\n', 'comment_created': datetime.datetime(2022, 9, 7, 14, 58, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 964956314, 'comment_body': '@Shivansh-yadav13 ', 'comment_created': datetime.datetime(2022, 9, 7, 14, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 966478808, 'comment_body': 'I think these function could just use `WithoutNotify` functions. There is quite a lot of code repetition.', 'comment_created': datetime.datetime(2022, 9, 8, 22, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 966480108, 'comment_body': 'This condition is pretty much ""if `addPolicies` is not implemented, throw an error, but if it\'s not implemented do not throw an error"".', 'comment_created': datetime.datetime(2022, 9, 8, 22, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 966481528, 'comment_body': 'Same here (condition does not make sense).', 'comment_created': datetime.datetime(2022, 9, 8, 22, 43, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 966481872, 'comment_body': 'Code repetition.', 'comment_created': datetime.datetime(2022, 9, 8, 22, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 966481985, 'comment_body': 'Code repetition.', 'comment_created': datetime.datetime(2022, 9, 8, 22, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 966482182, 'comment_body': 'Code repetition.', 'comment_created': datetime.datetime(2022, 9, 8, 22, 44, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 966482597, 'comment_body': 'Same here (condition does not make sense).', 'comment_created': datetime.datetime(2022, 9, 8, 22, 45, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Sefriol', 'type': 'User'}, {'comment_id': 966942173, 'comment_body': ""I thought of going with go-casbin's implementation, but I think we should use Without Notify in these methods and call watcher"", 'comment_created': datetime.datetime(2022, 9, 9, 11, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 967090599, 'comment_body': '@Sefriol this behavior is all over Casbin, https://github.com/casbin/casbin/blob/3f721c48dfab03e84cbdbdec11bc1160c6166f55/internal_api.go#L237\r\n\r\n@nodece should we throw error for not implemented?\r\n', 'comment_created': datetime.datetime(2022, 9, 9, 13, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 967240899, 'comment_body': 'I think we add a param to decide whether call the watcher on the `xxPolicyInternal()` method.\r\n\r\n```typescript\r\nprotected async addPolicyInternal(useWatcher: boolean, sec: string, ptype: string, rule: string[]): Promise<boolean> {\r\n\r\n}\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 9, 16, 6, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967242035, 'comment_body': '```suggestion\r\n      if (this.watcherEx) { this.watcherEx.updateForAddPolicy(sec, ptype, ...rule); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967242157, 'comment_body': '```suggestion\r\n      else if (this.watcher) { this.watcher.update(); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967242930, 'comment_body': '```suggestion\r\n      if (this.watcherEx) { this.watcherEx.updateForAddPolicies(sec, ptype, ...rules); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 9, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967243094, 'comment_body': '```suggestion\r\n      else if (this.watcher) { this.watcher.update(); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 9, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967244175, 'comment_body': 'Misses watcherEx?', 'comment_created': datetime.datetime(2022, 9, 9, 16, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967244404, 'comment_body': '```suggestion\r\n      if (this.watcherEx) { this.watcherEx.updateForRemovePolicy(sec, ptype, ...rule); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 10, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967244982, 'comment_body': '```suggestion\r\n      if (this.watcherEx) { this.watcherEx.updateForRemovePolicy(sec, ptype, ...rule); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 11, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967245116, 'comment_body': '```suggestion\r\n      else if (this.watcher) { this.watcher.update(); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 11, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967245128, 'comment_body': '```suggestion\r\n      if (this.watcherEx) { this.watcherEx.updateForRemovePolicy(sec, ptype, ...rule); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967245323, 'comment_body': '```suggestion\r\n      if (this.watcherEx) { this.watcherEx.updateForRemovePolicies(sec, ptype, ...rules); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 11, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967245450, 'comment_body': '```suggestion\r\n      else if (this.watcher) { this.watcher.update(); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 12, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967245609, 'comment_body': '```suggestion\r\n      if (this.watcherEx) { this.watcherEx.updateForRemoveFilteredPolicy(sec, ptype, fieldIndex, ...fieldValues); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 12, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967245734, 'comment_body': '```suggestion\r\n      else if (this.watcher) { this.watcher.update(); }\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 16, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967250834, 'comment_body': ""Usually, we should throw an error, but the golang-casbin didn't throw, so the node-casbin follows this behavior.\r\n\r\nLet's keep this behavior. \r\n\r\nI have an idea here, we can add a flag to check this error, when the user wants to check this error, the user needs to enable this flag.\r\n\r\n"", 'comment_created': datetime.datetime(2022, 9, 9, 16, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967623807, 'comment_body': 'There was no `updateForUpdatePolicy` in watcherEx interface so I did not call it also I did not made a method like that in the watcherEx we are working on, should we update the interface because I guess `updateForUpdatePolicy` exists in go-casbin.\r\nhttps://casbin.org/docs/en/watchers#watcherex\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 10, 9, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 967624466, 'comment_body': ""@nodece IMO user can know by themselves from the docs of whichever adapter they are using whether that method exists or not, I don't think they really need to get this error.\r\nBut if that's not the case, then I think we should just show the error even if it's 'not implemented' so that even if the user is not aware they will at least know that reason through the error.\r\n\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2022, 9, 10, 9, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 967624863, 'comment_body': ""Let's say if we add a flag for 'not implemented', there is very little chance that a method in the adapter will be removed in the next update and so the user will know it using that flag.\r\n\r\n"", 'comment_created': datetime.datetime(2022, 9, 10, 9, 19, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 967673440, 'comment_body': 'Can we call the `UpdateForAddPolicies()` and `UpdateForRemovePolicies()` methods?', 'comment_created': datetime.datetime(2022, 9, 10, 16, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967673577, 'comment_body': 'I can merge this, but we need to make an issue to talk about this on the golang-casbin repository.', 'comment_created': datetime.datetime(2022, 9, 10, 16, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 967673880, 'comment_body': 'This flag is used to throw errors. if the flag is true, we need to throw the `not implemented`.', 'comment_created': datetime.datetime(2022, 9, 10, 16, 21, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 969618626, 'comment_body': '@nodece are you saying we call `UpdateForAddPolicies()` and `UpdateForRemovePolicies()` in updateInternalPolicy or make a watcher method for it?\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 13, 13, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 969627960, 'comment_body': '@nodece what do you think if we make a flag for all errors thrown by the adapter including `not implemented`.\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 13, 13, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 969651435, 'comment_body': '@nodece I have added changes for the above idea, the tests are failing rn but we will fix it once you approve the idea.\r\n\r\n\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 13, 13, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}, {'comment_id': 969808373, 'comment_body': 'Or `UpdateForUpdatePolicy`? Make sense?', 'comment_created': datetime.datetime(2022, 9, 13, 15, 54, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 969812146, 'comment_body': 'You can keep the old implement, and then you can make a new PR to do that.', 'comment_created': datetime.datetime(2022, 9, 13, 15, 57, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nodece', 'type': 'User'}, {'comment_id': 970825614, 'comment_body': 'ok then, I will make changes to watcher interface and the WIP watcherEx', 'comment_created': datetime.datetime(2022, 9, 14, 13, 42, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Shivansh-yadav13', 'type': 'User'}]","[{'commit_sha': '26ab856d61ec67b9fdc63fc8c28abbffe05bc259', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
998547991,fix: upgrade dependencies,ref: https://github.com/node-casbin/nest-authz/pull/154#issuecomment-1186373534,True,156,https://api.github.com/repos/node-casbin/nest-authz/pulls/156,https://github.com/node-casbin/nest-authz/pull/156,closed,8,8,2,1,4,0,1,0,[{'name': 'released'}],2022-07-17 02:45:52+00:00,2022-07-17 03:20:16+00:00,2064.0,0:34:24,[],"[{'commit_sha': 'd050cdc77b72e4d08c46a0f23dee9557cd9c52bb', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1012936406,fix: node version,ref: #52 ,True,53,https://api.github.com/repos/node-casbin/typeorm-adapter/pulls/53,https://github.com/node-casbin/typeorm-adapter/pull/53,closed,1,1,1,1,2,0,1,0,[{'name': 'released'}],2022-07-31 02:57:01+00:00,2022-07-31 04:52:16+00:00,6915.0,1:55:15,[],"[{'commit_sha': 'b66e4e3587905a2c8968eb42af612fc2a689ecc6', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1026581598,feat: update dependency to prisma v4,Fix: https://github.com/node-casbin/prisma-adapter/issues/45,True,46,https://api.github.com/repos/node-casbin/prisma-adapter/pulls/46,https://github.com/node-casbin/prisma-adapter/pull/46,closed,13414,8413,4,1,3,2,1,0,[{'name': 'released'}],2022-08-15 15:26:32+00:00,2022-08-16 14:39:57+00:00,83605.0,23:13:25,"[{'comment_id': 945911591, 'comment_body': '`package-lock.json` not updated', 'comment_created': datetime.datetime(2022, 8, 15, 16, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}, {'comment_id': 946476429, 'comment_body': 'Also I think the `readme.md` can be updated as well because I think in Prisma v4, mongo is supported officially.\r\n\r\n```\r\nPostgreSQL\r\nMySQL\r\nSQLite\r\nMongoDB (Preview) <----- should this be changed ? \r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 8, 22, 1, tzinfo=datetime.timezone.utc), 'commenter': 'hsluoyz', 'type': 'User'}]","[{'commit_sha': 'ed6a8016fdc18e9fb7a3eab2f3be44942e1b24b8', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
1028929954,fix: CI node version,- Fix: #28 ,True,29,https://api.github.com/repos/node-casbin/redis-watcher/pulls/29,https://github.com/node-casbin/redis-watcher/pull/29,closed,1,1,1,1,1,0,1,0,[{'name': 'released'}],2022-08-17 14:36:02+00:00,2022-08-17 14:46:38+00:00,636.0,0:10:36,[],"[{'commit_sha': '54ab59ba52140ec6287553458ce65865d80f895e', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
966575806,feat: add blogs,"- removed default blogs
- added old blogs back
- ref: #6 ",True,10,https://api.github.com/repos/casbin/casbin-website-v2/pulls/10,https://github.com/casbin/casbin-website-v2/pull/10,closed,269,41,8,1,1,0,0,0,[],2022-06-14 07:50:27+00:00,2022-06-14 17:05:30+00:00,33303.0,9:15:03,[],"[{'commit_sha': '6015830967e694881c4daae4057a7557683f78fc', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
978969525,fix: button vertical alignment,"Fix: https://github.com/casbin/casbin-website-v2/issues/13

**BEFORE**
![before](https://user-images.githubusercontent.com/87603425/175765846-a6807789-de49-44e9-9818-38b59b81c0d8.png)

**AFTER**
![after](https://user-images.githubusercontent.com/87603425/175765857-5af3a2ac-84eb-40f1-90fe-944d07ef1526.png)

",True,29,https://api.github.com/repos/casbin/casbin-website-v2/pulls/29,https://github.com/casbin/casbin-website-v2/pull/29,closed,17,17,1,1,2,0,0,0,[],2022-06-25 08:47:45+00:00,2022-06-25 13:56:50+00:00,18545.0,5:09:05,[],"[{'commit_sha': 'fc1d596989ed5058051773127e745fc247e4ae20', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
985642327,fix: homepage text style,"Fix: https://github.com/casbin/casbin-website-v2/issues/31

Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>",True,42,https://api.github.com/repos/casbin/casbin-website-v2/pulls/42,https://github.com/casbin/casbin-website-v2/pull/42,closed,6,6,1,1,2,0,0,0,[],2022-07-03 04:36:08+00:00,2022-07-03 06:28:17+00:00,6729.0,1:52:09,[],"[{'commit_sha': '9cc3a97f70d58110bc4afae1f28df7116713dac5', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34
997762608,fix: mobile logo alignment,"Fix: https://github.com/casbin/casbin-website-v2/issues/51

Signed-off-by: Shivansh-yadav13 <yadavshivansh@gmail.com>

**BEFORE**
![Screenshot from 2022-07-15 18-50-02](https://user-images.githubusercontent.com/87603425/179232970-dc7001ed-6f45-49db-990f-b61a529b375d.png)

**AFTER**
![Screenshot from 2022-07-15 18-50-36](https://user-images.githubusercontent.com/87603425/179233001-04605f36-74ab-4705-b368-c19179841e47.png)

",True,56,https://api.github.com/repos/casbin/casbin-website-v2/pulls/56,https://github.com/casbin/casbin-website-v2/pull/56,closed,3,3,1,1,3,0,0,0,[],2022-07-15 13:30:34+00:00,2022-07-15 14:23:14+00:00,3160.0,0:52:40,[],"[{'commit_sha': 'cc0a6899e77addd3fbddef044ef3b01644d5261c', 'committer_username': 'Shivansh-yadav13', 'committer_name': 'Shivansh Yadav', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 18, 11, 6, 41, tzinfo=datetime.timezone.utc)}]",Shivansh Yadav,87603425,,User,,123,,55,34

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
144433662,casbin-website,casbin/casbin-website,JavaScript,132,39,4,102,852,0,3,0,"[{'id': 871339973, 'number': 314, 'closed': datetime.datetime(2022, 3, 4, 7, 21, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 4, 5, 43, 53, tzinfo=datetime.timezone.utc), 'time_taken': 5860.0, 'time_delta': '1:37:40', 'additions': 86, 'deletions': 1, 'state': 'closed'}, {'id': 835805579, 'number': 307, 'closed': datetime.datetime(2022, 1, 31, 13, 30, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 31, 7, 3, 39, tzinfo=datetime.timezone.utc), 'time_taken': 23182.0, 'time_delta': '6:26:22', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 834969963, 'number': 305, 'closed': datetime.datetime(2022, 1, 29, 5, 25, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 29, 4, 55, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1798.0, 'time_delta': '0:29:58', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 824198417, 'number': 301, 'closed': datetime.datetime(2022, 1, 19, 1, 0, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 17, 5, 47, 33, tzinfo=datetime.timezone.utc), 'time_taken': 155588.0, 'time_delta': '1 day, 19:13:08', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 818904721, 'number': 299, 'closed': datetime.datetime(2022, 1, 12, 6, 5, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 11, 16, 43, 30, tzinfo=datetime.timezone.utc), 'time_taken': 48131.0, 'time_delta': '13:22:11', 'additions': 41, 'deletions': 0, 'state': 'closed'}]"
140996605,node-casbin,casbin/node-casbin,TypeScript,212,2558,20,43,696,23,4,1,"[{'id': 1075657839, 'number': 394, 'closed': datetime.datetime(2022, 10, 4, 14, 4, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 4, 8, 26, 34, tzinfo=datetime.timezone.utc), 'time_taken': 20251.0, 'time_delta': '5:37:31', 'additions': 31, 'deletions': 2, 'state': 'closed'}, {'id': 1067402285, 'number': 393, 'closed': datetime.datetime(2023, 3, 19, 17, 23, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 26, 16, 17, 44, tzinfo=datetime.timezone.utc), 'time_taken': 15037553.0, 'time_delta': '174 days, 1:05:53', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1045406110, 'number': 384, 'closed': datetime.datetime(2022, 9, 14, 14, 32, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 3, 5, 37, 45, tzinfo=datetime.timezone.utc), 'time_taken': 982470.0, 'time_delta': '11 days, 8:54:30', 'additions': 105, 'deletions': 42, 'state': 'closed'}, {'id': 1038604568, 'number': 383, 'closed': datetime.datetime(2023, 9, 3, 9, 35, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 27, 10, 18, 47, tzinfo=datetime.timezone.utc), 'time_taken': 32138199.0, 'time_delta': '371 days, 23:16:39', 'additions': 57, 'deletions': 6, 'state': 'closed'}, {'id': 1027809042, 'number': 381, 'closed': datetime.datetime(2022, 8, 18, 15, 23, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 15, 57, 20, tzinfo=datetime.timezone.utc), 'time_taken': 170765.0, 'time_delta': '1 day, 23:26:05', 'additions': 56, 'deletions': 9, 'state': 'closed'}, {'id': 991765928, 'number': 375, 'closed': datetime.datetime(2023, 3, 27, 15, 56, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 8, 14, 59, 30, tzinfo=datetime.timezone.utc), 'time_taken': 22640194.0, 'time_delta': '262 days, 0:56:34', 'additions': 252, 'deletions': 20, 'state': 'closed'}, {'id': 990129216, 'number': 373, 'closed': datetime.datetime(2022, 7, 8, 14, 58, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 12, 9, 25, tzinfo=datetime.timezone.utc), 'time_taken': 96544.0, 'time_delta': '1 day, 2:49:04', 'additions': 393, 'deletions': 96, 'state': 'closed'}, {'id': 980984415, 'number': 372, 'closed': datetime.datetime(2022, 6, 28, 8, 49, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 28, 6, 41, 7, tzinfo=datetime.timezone.utc), 'time_taken': 7676.0, 'time_delta': '2:07:56', 'additions': 177, 'deletions': 18, 'state': 'closed'}, {'id': 926364157, 'number': 364, 'closed': datetime.datetime(2023, 2, 1, 11, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 3, 9, 20, 42, tzinfo=datetime.timezone.utc), 'time_taken': 23680398.0, 'time_delta': '274 days, 1:53:18', 'additions': 68, 'deletions': 0, 'state': 'closed'}, {'id': 912055733, 'number': 363, 'closed': datetime.datetime(2022, 4, 27, 15, 32, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 18, 13, 48, 32, tzinfo=datetime.timezone.utc), 'time_taken': 783857.0, 'time_delta': '9 days, 1:44:17', 'additions': 47, 'deletions': 5, 'state': 'closed'}, {'id': 911206620, 'number': 361, 'closed': datetime.datetime(2022, 10, 31, 5, 43, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 16, 5, 32, 22, tzinfo=datetime.timezone.utc), 'time_taken': 17107886.0, 'time_delta': '198 days, 0:11:26', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 887915556, 'number': 353, 'closed': datetime.datetime(2022, 3, 24, 6, 45, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 24, 4, 23, 25, tzinfo=datetime.timezone.utc), 'time_taken': 8550.0, 'time_delta': '2:22:30', 'additions': 15, 'deletions': 54, 'state': 'closed'}, {'id': 858855235, 'number': 349, 'closed': datetime.datetime(2022, 2, 22, 14, 39, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 20, 16, 14, 48, tzinfo=datetime.timezone.utc), 'time_taken': 167054.0, 'time_delta': '1 day, 22:24:14', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 848982104, 'number': 347, 'closed': datetime.datetime(2022, 3, 2, 5, 13, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 12, 13, 22, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1525893.0, 'time_delta': '17 days, 15:51:33', 'additions': 27, 'deletions': 1, 'state': 'closed'}, {'id': 841056680, 'number': 345, 'closed': datetime.datetime(2022, 2, 16, 19, 1, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 6, 12, 7, 53, tzinfo=datetime.timezone.utc), 'time_taken': 888836.0, 'time_delta': '10 days, 6:53:56', 'additions': 68, 'deletions': 0, 'state': 'closed'}, {'id': 830089819, 'number': 341, 'closed': datetime.datetime(2022, 1, 25, 15, 54, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 24, 7, 54, 45, tzinfo=datetime.timezone.utc), 'time_taken': 115163.0, 'time_delta': '1 day, 7:59:23', 'additions': 35, 'deletions': 0, 'state': 'closed'}, {'id': 822277479, 'number': 338, 'closed': datetime.datetime(2022, 1, 16, 9, 37, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 14, 8, 8, 41, tzinfo=datetime.timezone.utc), 'time_taken': 178105.0, 'time_delta': '2 days, 1:28:25', 'additions': 19, 'deletions': 0, 'state': 'closed'}]"
149631013,pycasbin,casbin/pycasbin,Python,191,1343,27,64,405,8,4,1,"[{'id': 919472438, 'number': 255, 'closed': datetime.datetime(2022, 4, 29, 15, 45, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 26, 14, 6, 46, tzinfo=datetime.timezone.utc), 'time_taken': 265130.0, 'time_delta': '3 days, 1:38:50', 'additions': 164, 'deletions': 498, 'state': 'closed'}, {'id': 901359685, 'number': 249, 'closed': datetime.datetime(2022, 4, 27, 2, 33, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 6, 11, 4, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1783736.0, 'time_delta': '20 days, 15:28:56', 'additions': 70, 'deletions': 0, 'state': 'closed'}]"
488105076,casbin-website-v2,casbin/casbin-website-v2,JavaScript,67,19,4,124,963,15,4,4,"[{'id': 997762608, 'number': 56, 'closed': datetime.datetime(2022, 7, 15, 14, 23, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 13, 30, 34, tzinfo=datetime.timezone.utc), 'time_taken': 3160.0, 'time_delta': '0:52:40', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 985642327, 'number': 42, 'closed': datetime.datetime(2022, 7, 3, 6, 28, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 3, 4, 36, 8, tzinfo=datetime.timezone.utc), 'time_taken': 6729.0, 'time_delta': '1:52:09', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 978969525, 'number': 29, 'closed': datetime.datetime(2022, 6, 25, 13, 56, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 25, 8, 47, 45, tzinfo=datetime.timezone.utc), 'time_taken': 18545.0, 'time_delta': '5:09:05', 'additions': 17, 'deletions': 17, 'state': 'closed'}, {'id': 966575806, 'number': 10, 'closed': datetime.datetime(2022, 6, 14, 17, 5, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 14, 7, 50, 27, tzinfo=datetime.timezone.utc), 'time_taken': 33303.0, 'time_delta': '9:15:03', 'additions': 269, 'deletions': 41, 'state': 'closed'}, {'id': 927422279, 'number': 2, 'closed': datetime.datetime(2022, 6, 10, 17, 16, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 4, 9, 37, 4, tzinfo=datetime.timezone.utc), 'time_taken': 3224361.0, 'time_delta': '37 days, 7:39:21', 'additions': 18379, 'deletions': 0, 'state': 'closed'}]"
218026317,mongoose-adapter,node-casbin/mongoose-adapter,JavaScript,32,32,3,20,129,3,1,0,"[{'id': 878173234, 'number': 60, 'closed': datetime.datetime(2022, 3, 13, 4, 20, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 12, 13, 38, 45, tzinfo=datetime.timezone.utc), 'time_taken': 52917.0, 'time_delta': '14:41:57', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 877591911, 'number': 59, 'closed': datetime.datetime(2022, 3, 12, 7, 18, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 11, 16, 5, 36, tzinfo=datetime.timezone.utc), 'time_taken': 54797.0, 'time_delta': '15:13:17', 'additions': 57, 'deletions': 57, 'state': 'closed'}, {'id': 855813575, 'number': 56, 'closed': datetime.datetime(2022, 2, 27, 15, 40, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 17, 18, 50, 34, tzinfo=datetime.timezone.utc), 'time_taken': 852584.0, 'time_delta': '9 days, 20:49:44', 'additions': 57, 'deletions': 57, 'state': 'closed'}]"
492417535,casbin-core,casbin/casbin-core,TypeScript,1,6,3,30,666,1,2,1,"[{'id': 1020205767, 'number': 17, 'closed': None, 'created': datetime.datetime(2022, 8, 8, 12, 6, 14, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 113, 'deletions': 0, 'state': 'open'}, {'id': 1019363458, 'number': 16, 'closed': datetime.datetime(2022, 8, 16, 14, 36, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 6, 15, 20, 38, tzinfo=datetime.timezone.utc), 'time_taken': 861379.0, 'time_delta': '9 days, 23:16:19', 'additions': 48, 'deletions': 14, 'state': 'closed'}, {'id': 1009218326, 'number': 15, 'closed': datetime.datetime(2022, 8, 2, 14, 39, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 5, 42, 40, tzinfo=datetime.timezone.utc), 'time_taken': 550610.0, 'time_delta': '6 days, 8:56:50', 'additions': 7, 'deletions': 6, 'state': 'closed'}, {'id': 1006542161, 'number': 14, 'closed': datetime.datetime(2022, 8, 1, 14, 7, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 24, 13, 9, 5, tzinfo=datetime.timezone.utc), 'time_taken': 694728.0, 'time_delta': '8 days, 0:58:48', 'additions': 60, 'deletions': 0, 'state': 'closed'}, {'id': 991715893, 'number': 13, 'closed': datetime.datetime(2022, 7, 13, 15, 50, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 8, 14, 11, 43, tzinfo=datetime.timezone.utc), 'time_taken': 437901.0, 'time_delta': '5 days, 1:38:21', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 985104741, 'number': 12, 'closed': datetime.datetime(2022, 7, 6, 14, 25, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 1, 15, 44, 35, tzinfo=datetime.timezone.utc), 'time_taken': 427247.0, 'time_delta': '4 days, 22:40:47', 'additions': 97, 'deletions': 0, 'state': 'closed'}, {'id': 983320796, 'number': 11, 'closed': datetime.datetime(2022, 7, 6, 14, 24, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 30, 3, 49, 18, tzinfo=datetime.timezone.utc), 'time_taken': 556508.0, 'time_delta': '6 days, 10:35:08', 'additions': 15, 'deletions': 1, 'state': 'closed'}, {'id': 981328462, 'number': 10, 'closed': datetime.datetime(2022, 6, 29, 16, 0, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 28, 12, 17, 19, tzinfo=datetime.timezone.utc), 'time_taken': 99790.0, 'time_delta': '1 day, 3:43:10', 'additions': 7112, 'deletions': 2, 'state': 'closed'}, {'id': 974536023, 'number': 8, 'closed': datetime.datetime(2022, 7, 1, 14, 18, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 4, 40, 12, tzinfo=datetime.timezone.utc), 'time_taken': 812314.0, 'time_delta': '9 days, 9:38:34', 'additions': 7440, 'deletions': 2, 'state': 'closed'}, {'id': 973036682, 'number': 7, 'closed': datetime.datetime(2022, 6, 25, 9, 48, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 21, 3, 57, 15, tzinfo=datetime.timezone.utc), 'time_taken': 366702.0, 'time_delta': '4 days, 5:51:42', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 972469150, 'number': 6, 'closed': datetime.datetime(2022, 6, 25, 9, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 20, 17, 16, 11, tzinfo=datetime.timezone.utc), 'time_taken': 405289.0, 'time_delta': '4 days, 16:34:49', 'additions': 926, 'deletions': 0, 'state': 'closed'}, {'id': 971405473, 'number': 5, 'closed': datetime.datetime(2022, 6, 20, 14, 50, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 19, 4, 32, 52, tzinfo=datetime.timezone.utc), 'time_taken': 123432.0, 'time_delta': '1 day, 10:17:12', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 969319098, 'number': 4, 'closed': datetime.datetime(2022, 6, 20, 14, 49, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 13, 18, 21, tzinfo=datetime.timezone.utc), 'time_taken': 351071.0, 'time_delta': '4 days, 1:31:11', 'additions': 530, 'deletions': 3, 'state': 'closed'}, {'id': 963904542, 'number': 2, 'closed': datetime.datetime(2022, 6, 16, 5, 13, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 10, 9, 22, 14, tzinfo=datetime.timezone.utc), 'time_taken': 503475.0, 'time_delta': '5 days, 19:51:15', 'additions': 9242, 'deletions': 4, 'state': 'closed'}]"
195626134,redis-watcher,node-casbin/redis-watcher,TypeScript,8,7,3,8,53,1,1,0,"[{'id': 1032550765, 'number': 30, 'closed': datetime.datetime(2024, 3, 8, 4, 37, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 9, 21, 51, tzinfo=datetime.timezone.utc), 'time_taken': 48712548.0, 'time_delta': '563 days, 19:15:48', 'additions': 368, 'deletions': 13, 'state': 'closed'}, {'id': 1028929954, 'number': 29, 'closed': datetime.datetime(2022, 8, 17, 14, 46, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 17, 14, 36, 2, tzinfo=datetime.timezone.utc), 'time_taken': 636.0, 'time_delta': '0:10:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1027716436, 'number': 27, 'closed': datetime.datetime(2022, 8, 22, 9, 9, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 14, 39, 7, tzinfo=datetime.timezone.utc), 'time_taken': 498619.0, 'time_delta': '5 days, 18:30:19', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1017437249, 'number': 26, 'closed': datetime.datetime(2022, 8, 9, 14, 3, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 11, 59, 51, tzinfo=datetime.timezone.utc), 'time_taken': 439427.0, 'time_delta': '5 days, 2:03:47', 'additions': 3, 'deletions': 3, 'state': 'closed'}]"
172611990,nest-authz,node-casbin/nest-authz,TypeScript,23,145,6,16,245,0,11,0,"[{'id': 998547991, 'number': 156, 'closed': datetime.datetime(2022, 7, 17, 3, 20, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 2, 45, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2064.0, 'time_delta': '0:34:24', 'additions': 8, 'deletions': 8, 'state': 'closed'}]"
153125098,typeorm-adapter,node-casbin/typeorm-adapter,TypeScript,36,69,3,20,88,0,1,0,"[{'id': 1012936406, 'number': 53, 'closed': datetime.datetime(2022, 7, 31, 4, 52, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 31, 2, 57, 1, tzinfo=datetime.timezone.utc), 'time_taken': 6915.0, 'time_delta': '1:55:15', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
274352067,prisma-adapter,node-casbin/prisma-adapter,TypeScript,16,29,2,13,59,3,2,0,"[{'id': 1026581598, 'number': 46, 'closed': datetime.datetime(2022, 8, 16, 14, 39, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 15, 15, 26, 32, tzinfo=datetime.timezone.utc), 'time_taken': 83605.0, 'time_delta': '23:13:25', 'additions': 13414, 'deletions': 8413, 'state': 'closed'}]"
