pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
975422429,[WIP] Implement Health plugin,"# Implement the health plugin into the questionnaire APP

## Solution 

### General idea is when user start the questionnaire means they agree to share their data with our app
1. Collect data like a normal questionnaire 
2. The questionnaire will contain `info-screen` type and newly created `health-input` type, which `info-screen` will tell the user we will be collecting the user's data from Apple Health kit APP and if you agree you can continue with the questionnaire.
3. In the health-input type we will automatically ( first time will trigger Apple Health kit to ask for user's permission) import the data and show it to user( or not show), and user can press the next button and finish the questionnaire.


## Discussion 
- What are the overall data types we need ?
- How often do we want to collect the user's data ( Define in the  questionnaire ? )  ? 
- What's the time frame gonna be when we collect the data ?

## Progress 
- [x] Install Health required plugin and package
- [x] Create a new input type call `health-input`
- [x] Import the Health data into the `health-input`
- [ ] export the Health data to the database 

## Error 

",True,1513,https://api.github.com/repos/RADAR-base/RADAR-Questionnaire/pulls/1513,https://github.com/RADAR-base/RADAR-Questionnaire/pull/1513,closed,491,54,18,14,1,0,0,0,[],2022-06-22 16:34:55+00:00,2023-01-05 13:13:51+00:00,17008736.0,"196 days, 20:38:56",[],"[{'commit_sha': '8a5a3a118dbae5212193e10425bd582c77677ed3', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e85707cf34288f89edce6dde3fef37facccd7004', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '042cd5f0c80b55fa6a3eb09b8ce921bb7d80257c', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9799600447e07ddadc2250426ec174d7f5be92e', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af574a4ea3f079887fab43f90ef0ae1aae193f4', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '574674d5223152d60d1d88289ec0f6f3c6aee117', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81d2e5d718285327fd4f7b16304fa2f2eaafaceb', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8726b4cc2cfa5d76a6bb7427886f094d30ec3900', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c121fbd1d12f128b0c72049d5140d52a58526638', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e527b6e91a73be91425f367f7d23bc5a376d4c3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '086240ef47dc279e930e5678e575f3d2f1f05784', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68add23d5c9d0ab846021377f15575a49dd99203', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf5c4502cd072332c1edcf5692e1962633f497f8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '081eb4421bcd30fedfb12d13eff0bcfb61e63681', 'committer_username': 'mpgxvii', 'committer_name': 'Pauline Conde', 'committer_email': 'mpgxvii@gmail.com', 'commit_date': datetime.datetime(2016, 1, 30, 19, 31, 30, tzinfo=datetime.timezone.utc)}]",Kai You,61721490,,User,,73,,7,5
975422429,[WIP] Implement Health plugin,"# Implement the health plugin into the questionnaire APP

## Solution 

### General idea is when user start the questionnaire means they agree to share their data with our app
1. Collect data like a normal questionnaire 
2. The questionnaire will contain `info-screen` type and newly created `health-input` type, which `info-screen` will tell the user we will be collecting the user's data from Apple Health kit APP and if you agree you can continue with the questionnaire.
3. In the health-input type we will automatically ( first time will trigger Apple Health kit to ask for user's permission) import the data and show it to user( or not show), and user can press the next button and finish the questionnaire.


## Discussion 
- What are the overall data types we need ?
- How often do we want to collect the user's data ( Define in the  questionnaire ? )  ? 
- What's the time frame gonna be when we collect the data ?

## Progress 
- [x] Install Health required plugin and package
- [x] Create a new input type call `health-input`
- [x] Import the Health data into the `health-input`
- [ ] export the Health data to the database 

## Error 

",True,1513,https://api.github.com/repos/RADAR-base/RADAR-Questionnaire/pulls/1513,https://github.com/RADAR-base/RADAR-Questionnaire/pull/1513,closed,491,54,18,14,1,0,0,0,[],2022-06-22 16:34:55+00:00,2023-01-05 13:13:51+00:00,17008736.0,"196 days, 20:38:56",[],"[{'commit_sha': '8a5a3a118dbae5212193e10425bd582c77677ed3', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e85707cf34288f89edce6dde3fef37facccd7004', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '042cd5f0c80b55fa6a3eb09b8ce921bb7d80257c', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9799600447e07ddadc2250426ec174d7f5be92e', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af574a4ea3f079887fab43f90ef0ae1aae193f4', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '574674d5223152d60d1d88289ec0f6f3c6aee117', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81d2e5d718285327fd4f7b16304fa2f2eaafaceb', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8726b4cc2cfa5d76a6bb7427886f094d30ec3900', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c121fbd1d12f128b0c72049d5140d52a58526638', 'committer_username': 'hardco2020', 'committer_name': 'Kai You', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 3, 2, 56, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e527b6e91a73be91425f367f7d23bc5a376d4c3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '086240ef47dc279e930e5678e575f3d2f1f05784', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68add23d5c9d0ab846021377f15575a49dd99203', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf5c4502cd072332c1edcf5692e1962633f497f8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '081eb4421bcd30fedfb12d13eff0bcfb61e63681', 'committer_username': 'mpgxvii', 'committer_name': 'Pauline Conde', 'committer_email': 'mpgxvii@gmail.com', 'commit_date': datetime.datetime(2016, 1, 30, 19, 31, 30, tzinfo=datetime.timezone.utc)}]",Kai You,61721490,,User,,73,,7,5

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
68295976,RADAR-Questionnaire,RADAR-base/RADAR-Questionnaire,TypeScript,15,17,15,21,3726,73,40,31,"[{'id': 975422429, 'number': 1513, 'closed': datetime.datetime(2023, 1, 5, 13, 13, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 16, 34, 55, tzinfo=datetime.timezone.utc), 'time_taken': 17008736.0, 'time_delta': '196 days, 20:38:56', 'additions': 491, 'deletions': 54, 'state': 'closed'}, {'id': 968390998, 'number': 1508, 'closed': datetime.datetime(2022, 6, 16, 11, 2, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 16, 29, 30, tzinfo=datetime.timezone.utc), 'time_taken': 66803.0, 'time_delta': '18:33:23', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 938448795, 'number': 1489, 'closed': datetime.datetime(2022, 5, 23, 10, 5, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 17, 7, 54, 7, tzinfo=datetime.timezone.utc), 'time_taken': 526289.0, 'time_delta': '6 days, 2:11:29', 'additions': 107, 'deletions': 7, 'state': 'closed'}, {'id': 935387906, 'number': 1484, 'closed': datetime.datetime(2022, 5, 16, 10, 40, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 13, 0, 50, 21, tzinfo=datetime.timezone.utc), 'time_taken': 294617.0, 'time_delta': '3 days, 9:50:17', 'additions': 18, 'deletions': 0, 'state': 'closed'}, {'id': 934809636, 'number': 1483, 'closed': datetime.datetime(2022, 5, 13, 0, 47, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 12, 13, 5, 54, tzinfo=datetime.timezone.utc), 'time_taken': 42071.0, 'time_delta': '11:41:11', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 904215660, 'number': 1465, 'closed': datetime.datetime(2022, 4, 27, 10, 13, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 8, 20, 54, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1603154.0, 'time_delta': '18 days, 13:19:14', 'additions': 7, 'deletions': 0, 'state': 'closed'}]"
