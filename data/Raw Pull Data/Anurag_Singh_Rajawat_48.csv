pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
966782565,chore(jkube-kit deps): Add JUnit5 dependency (#1547),"## Description
Fixes: #1547 

<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->

## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1550,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1550,https://github.com/eclipse-jkube/jkube/pull/1550,closed,15,0,2,1,5,1,0,0,[],2022-06-14 11:07:13+00:00,2022-06-15 10:45:45+00:00,85112.0,23:38:32,"[{'comment_id': 897745121, 'comment_body': 'nit: it would have been more consistent to name the property `version.junit5`', 'comment_created': datetime.datetime(2022, 6, 15, 9, 19, 57, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}]","[{'commit_sha': '88ab833b4898d7cfe7ae15c2a55b8311acd4337f', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
968046049,refactor (jkube-kit-common-test): Migrated module tests from JUnit4 to JUnit5 (#1548),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1548 

## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1616,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1616,https://github.com/eclipse-jkube/jkube/pull/1616,closed,10,10,2,1,3,0,0,0,[],2022-06-15 11:24:36+00:00,2022-06-17 07:49:11+00:00,159875.0,"1 day, 20:24:35",[],"[{'commit_sha': '24317b68117f4516fc19d25e1116361a72c6cb95', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
970400669,refactor (jkube-kit/common): Migrate all tests from JUnit4 to JUnit5 (#1549),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1549 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1621,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1621,https://github.com/eclipse-jkube/jkube/pull/1621,closed,1231,1524,45,1,5,46,0,0,[],2022-06-17 09:11:29+00:00,2022-07-21 09:40:17+00:00,2939328.0,"34 days, 0:28:48","[{'comment_id': 902230268, 'comment_body': 'I think `fail()` shouldn\'t be required, right? Could this be simplified like this?\r\n\r\n```java\r\nassertThrows(NumberFormatException.class, () -> Configs.asInt(""2.15""));\r\n```', 'comment_created': datetime.datetime(2022, 6, 21, 7, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902230699, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r902230268', 'comment_created': datetime.datetime(2022, 6, 21, 7, 2, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902236892, 'comment_body': 'I think here we can use `assertThrows` with message:\r\n\r\n```java\r\n        assertThrows(IllegalArgumentException.class,\r\n            () -> JKubeFileInterpolator.interpolate(""${key1}"", props, expressionMarkers),\r\n            ""Should detect expression cycle and fail."");\r\n```', 'comment_created': datetime.datetime(2022, 6, 21, 7, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902237047, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r902236892', 'comment_created': datetime.datetime(2022, 6, 21, 7, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902245396, 'comment_body': ""Can we use assert'sj `assertThat().isEqualTo` instead of using Junit5's `assertEquals`"", 'comment_created': datetime.datetime(2022, 6, 21, 7, 20, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902250557, 'comment_body': 'I think if you use `List<Dependency>` as parameter you can get rid of this `if { ... }` block. You can pass emptylist when there is no dependency and singleton list when there is one.', 'comment_created': datetime.datetime(2022, 6, 21, 7, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902253963, 'comment_body': 'I think we should create an issue about this to fix the implementation. WDYT?', 'comment_created': datetime.datetime(2022, 6, 21, 7, 30, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902262543, 'comment_body': 'Can we join these assertions together?\r\n\r\n```java\r\n        assertThat(result1)\r\n            .hasSize(1)\r\n            .first(InstanceOfAssertFactories.type(String[].class))\r\n            .isEqualTo(new String[]{""element1"", ""element2""});\r\n```', 'comment_created': datetime.datetime(2022, 6, 21, 7, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902266777, 'comment_body': 'Could you please replace these assertions with assertj?', 'comment_created': datetime.datetime(2022, 6, 21, 7, 44, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902267711, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r902266777\r\n\r\nPlease feel free to refactor junit assertions to assertj', 'comment_created': datetime.datetime(2022, 6, 21, 7, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902268356, 'comment_body': 'Please use assertj for assertions ', 'comment_created': datetime.datetime(2022, 6, 21, 7, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902268992, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r902268356', 'comment_created': datetime.datetime(2022, 6, 21, 7, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902269318, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r902268356', 'comment_created': datetime.datetime(2022, 6, 21, 7, 46, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902270140, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r902268356', 'comment_created': datetime.datetime(2022, 6, 21, 7, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902271509, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r902268356', 'comment_created': datetime.datetime(2022, 6, 21, 7, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902271727, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r902268356', 'comment_created': datetime.datetime(2022, 6, 21, 7, 49, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902272106, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r902268356', 'comment_created': datetime.datetime(2022, 6, 21, 7, 50, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 902365529, 'comment_body': 'We can fix it here itself', 'comment_created': datetime.datetime(2022, 6, 21, 9, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 902605910, 'comment_body': 'Would be nice to refactor this test to use parameters instead', 'comment_created': datetime.datetime(2022, 6, 21, 13, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 902606027, 'comment_body': 'Would be nice to refactor this test to use parameters instead', 'comment_created': datetime.datetime(2022, 6, 21, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 902608919, 'comment_body': 'We might add further parameterized tests in the future to this suite.\r\nIt might make more sense to rename this method to `propertyTestData` or something more meaningful.', 'comment_created': datetime.datetime(2022, 6, 21, 13, 18, 38, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 904894288, 'comment_body': ""We like to keep things small and atomic (It's easier to manage and review). I'd appreciate it if you could create an issue about this. You can then create a PR to fix it as well."", 'comment_created': datetime.datetime(2022, 6, 23, 11, 12, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 905743537, 'comment_body': '@rohanKanojia  this is pointed out by sonar as a code smell, so do we need to assert this or ignore it?', 'comment_created': datetime.datetime(2022, 6, 24, 6, 4, 22, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 905751762, 'comment_body': 'We can add an assertion here to verify created `ss` object is not null', 'comment_created': datetime.datetime(2022, 6, 24, 6, 21, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924067249, 'comment_body': ""testUsingParametrizedTest (sic) is not really telling anything don't you think?\r\n\r\nCould we replace the method name with something more descriptive about what's tested instead of how it's tested, or at least the name of the method at test?"", 'comment_created': datetime.datetime(2022, 7, 19, 5, 16, 26, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 924068875, 'comment_body': 'I think there might be a typo in the description:\r\n```suggestion\r\n            Arguments.arguments(""System Property with Properties as Fallback has not key in System should return fallback value"", ""not-the-key"", ""systemValue"", ""key"", ""fallbackValue"", ""fallbackValue""),\r\n```', 'comment_created': datetime.datetime(2022, 7, 19, 5, 20, 1, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 924070591, 'comment_body': ""This test is very unclear, the tested method is in the data source (configInterfaceWithDefaultsTestData) and not here. It's really hard to understand what's going on.\r\n\r\nYou might want to replace the method's signature with something like:\r\n```java\r\nvoid configInterfaceWithDefaultsTest(String testDesc, ConfigWithDefaults config, String expected) {\r\n```\r\n\r\nAlso, keeping the method source closer to this one makes it easier to review and t o read in the future"", 'comment_created': datetime.datetime(2022, 7, 19, 5, 23, 55, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 924070691, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r924070591', 'comment_created': datetime.datetime(2022, 7, 19, 5, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 924471569, 'comment_body': 'to make this test compatible with Windows, you should use multiple resolve:\r\n```suggestion\r\n        File resourceDir = temporaryFolder.resolve(""src"").resolve(""main"").resolve(""jkube"").toFile();\r\n```', 'comment_created': datetime.datetime(2022, 7, 19, 12, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 924471734, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r924471569', 'comment_created': datetime.datetime(2022, 7, 19, 12, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 924471941, 'comment_body': 'https://github.com/eclipse/jkube/pull/1621/files#r924471569', 'comment_created': datetime.datetime(2022, 7, 19, 13, 0, 2, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 924665166, 'comment_body': 'Thanks for noticing this!', 'comment_created': datetime.datetime(2022, 7, 19, 15, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 925569800, 'comment_body': 'The test description, method name, and so on don\'t honor exactly the test or the tested behavior.\r\n\r\nAlso, in general it\'s advisable we remove the `test` from the test method names (this was a requirement years ago), it\'s redundant.\r\n\r\nThis test verifies the cases where a provided value corresponds to a `self path`\r\n\r\n```\r\n@ParameterizedTest(name = ""selfPath with a \'{0}\' value should be true"")\r\n//...\r\n            Arguments.of(""null"", null),\r\n            Arguments.of(""blank string"", ""   ""),\r\n            Arguments.of(""empty string"", """"),\r\n            Arguments.of(""."", ""."")\r\n\r\n```', 'comment_created': datetime.datetime(2022, 7, 20, 12, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 925638657, 'comment_body': ""I see you keep using `@TempDir` with `Path` typed fields and then using `folder.toFile()` constantly.\r\n\r\nAre you aware that you can use `@TempDir` with `File` typed fields and the directory will be injected too?\r\n\r\n_I'm not suggesting you to change this, just raising the topic in case you're not aware_\r\n"", 'comment_created': datetime.datetime(2022, 7, 20, 13, 55, 6, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 925640671, 'comment_body': 'This would be a good time to refactor this assertion so that it use cross-os file separators ', 'comment_created': datetime.datetime(2022, 7, 20, 13, 56, 43, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 925658229, 'comment_body': ""These fields are not OK. If we were to run these tests in parallel, they'd fail.\r\nIn addition, the lists might be polluted, or not clean after a given test execution"", 'comment_created': datetime.datetime(2022, 7, 20, 14, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 925660448, 'comment_body': '```suggestion\r\n        List<String> result = // ...\r\n        assertThat(result).isEmpty();\r\n```', 'comment_created': datetime.datetime(2022, 7, 20, 14, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 925660808, 'comment_body': '```suggestion\r\n        assertThat(result).isEmpty();\r\n```', 'comment_created': datetime.datetime(2022, 7, 20, 14, 13, 40, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 925661963, 'comment_body': 'Please, replace with a proper AssertJ assertion that checks for the exact collection elements in order.', 'comment_created': datetime.datetime(2022, 7, 20, 14, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 925663435, 'comment_body': 'use a list as an expected parameter ---> List<String> expected', 'comment_created': datetime.datetime(2022, 7, 20, 14, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 925664094, 'comment_body': 'Init a collection to provide the test argument Arrays.asList(/*...*/)', 'comment_created': datetime.datetime(2022, 7, 20, 14, 16, 24, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 925666879, 'comment_body': 'Yes, I know that. But I don\'t know how to do these type of things `folder.resolve(""src"").resolve(""main"").resolve(""fabric8"")` with `File` type or create temporary directories with `File`. Also it makes migration easier especially for `TemporaryFolder`\r\nNext time, I\'ll remember this.', 'comment_created': datetime.datetime(2022, 7, 20, 14, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 926253935, 'comment_body': 'Do you mean this?\r\n```java\r\nassertThat(new File(folder, ""src"" + fileSeparator + ""main"" + fileSeparator + ""jkube"")).exists();\r\nassertThat(new File(folder, ""src"" + fileSeparator + ""main"" + fileSeparator + ""jkube"" + fileSeparator + ""file1"")).exists();\r\n```', 'comment_created': datetime.datetime(2022, 7, 21, 5, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 926261651, 'comment_body': 'I mentioned this in this example because most test cases are just using the file.\r\n\r\n> But I don\'t know how to do these type of things \r\n\r\nFor a one level nested file you can simply do `new File(folder, ""path-to-file-or-dir.ext"");`\r\n\r\nFor an n-leveled nested file you can do `folder.toPath().resolve(""directory"").resolve(""file2).xxx`, which is more or less the opposite of what you\'re doing now so it might or might not be suitable.\r\n\r\nThe point here is that (IMHO) we should go for Path or File trying to minimize the number of path.toFile or file.toPath calls.\r\n\r\n\r\n> with File type or create temporary directories with File. Also it makes migration easier especially for TemporaryFolder\r\n\r\nThis is confusing. I\'m not sure if you understood what I mean:\r\n```java\r\n@TempDir\r\nPath directory;\r\n@TempDir\r\nFile directoryF;\r\n```\r\nboth options work.', 'comment_created': datetime.datetime(2022, 7, 21, 5, 20, 7, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 926271172, 'comment_body': 'Many options available.\r\n- What you suggested\r\n- Using Path assertions:\r\n  ```java\r\n\r\n    assertThat(folder.resolve(""src"").resolve(""main"").resolve(""jkube""))\r\n        .exists().isDirectory();\r\n    assertThat(folder.resolve(""src"").resolve(""main"").resolve(""jkube"").resolve(""file1""))\r\n        .exists().isRegularFile();\r\n  ```\r\n- Using a single Path assertions\r\n  ```java\r\n    assertThat(folder)\r\n        .extracting(p -> p.resolve(""src"").resolve(""main"").resolve(""jkube""))\r\n        .asInstanceOf(InstanceOfAssertFactories.PATH)\r\n        .exists().isDirectory()\r\n        .extracting(p -> p.resolve(""file1""))\r\n        .asInstanceOf(InstanceOfAssertFactories.PATH)\r\n        .exists().isRegularFile();\r\n   ```\r\n- Anything else that you can think of...\r\n\r\nLast but not least, you could use our `FileAssertions.assertThat(folder.toFile()).fileTree()`, but that\'d require some additional changes to our utility file so we consider paths in an OS agnostic way. (Maybe we can do this in the **future**, I think there was some work done in this in #1416. I\'ll probably cherry-pick some changes so we can start integrating those improvements)', 'comment_created': datetime.datetime(2022, 7, 21, 5, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 926340729, 'comment_body': 'I think single Path assertions would be nice', 'comment_created': datetime.datetime(2022, 7, 21, 7, 24, 23, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': 'a35f1c2e2bcfbaf32aa820a255c2001eeb40caef', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
983517530,refactor (jkube-kit/common-maven): Migrate all tests from JUnit4 to JUnit5 (#1551),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1551 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1641,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1641,https://github.com/eclipse-jkube/jkube/pull/1641,closed,183,184,5,1,4,5,0,0,[],2022-06-30 08:16:10+00:00,2022-07-14 09:37:14+00:00,1214464.0,"14 days, 1:21:04","[{'comment_id': 913389621, 'comment_body': ""containsEntry should verify both scenarios. Let's remove this.\r\n```suggestion\r\n```"", 'comment_created': datetime.datetime(2022, 7, 5, 5, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 913395639, 'comment_body': 'You can remove this and directly use `.isNotEmpty()` in assertion below', 'comment_created': datetime.datetime(2022, 7, 5, 5, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 920220068, 'comment_body': 'Could you please not use `@ExtendWith` annotation and use manual instantiation instead?', 'comment_created': datetime.datetime(2022, 7, 13, 15, 29, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 920790252, 'comment_body': 'Do you mean a setup method like this\r\n```java\r\n  @BeforeEach\r\n  void setUp() {\r\n    mavenProject = mock(MavenProject.class);\r\n    pluginManager = mock(BuildPluginManager.class);\r\n    log = mock(KitLogger.class);\r\n  }\r\n```\r\n or instantiating these fields in each test?', 'comment_created': datetime.datetime(2022, 7, 14, 6, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 920836848, 'comment_body': ""You're right. I meant this. If these fields are specific to single test, maybe move this to individual test. If these fields are reused in all tests, we  can have them in set up method like you suggested."", 'comment_created': datetime.datetime(2022, 7, 14, 7, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}]","[{'commit_sha': '70a78c3a7c66ca21468e855397955a910c0d2ed3', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
997381121,refactor (jkube-kit/config/image): Migrate all tests from JUnit4 to JUnit5 (#1552),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1552 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1659,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1659,https://github.com/eclipse-jkube/jkube/pull/1659,closed,248,333,9,1,5,17,0,0,[],2022-07-15 05:50:52+00:00,2022-07-20 15:19:07+00:00,466095.0,"5 days, 9:28:15","[{'comment_id': 921838135, 'comment_body': '@manusa please suggest a meaningful name for this test', 'comment_created': datetime.datetime(2022, 7, 15, 5, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 921838332, 'comment_body': 'https://github.com/eclipse/jkube/pull/1659/files#r921838135', 'comment_created': datetime.datetime(2022, 7, 15, 5, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 923619462, 'comment_body': ""Why is this required? I'm not sure if tests are dependent on each other."", 'comment_created': datetime.datetime(2022, 7, 18, 17, 9, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924043617, 'comment_body': ""These tests are not dependent on each other. If we don't add this order, `Good Health Check 7` and `Bad Health Check 7` are executed first and after that rest of the tests are executed which doesn't look good. So, executing these in this order, all `Good health check tests` are executed first and after that, `Bad health check tests` are executed. "", 'comment_created': datetime.datetime(2022, 7, 19, 4, 17, 30, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 924064519, 'comment_body': ""I'm not sure if this is a good reason for making tests ordered. "", 'comment_created': datetime.datetime(2022, 7, 19, 5, 10, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924067322, 'comment_body': '```java\r\n        assertThatIllegalArgumentException()\r\n            .isThrownBy(() -> CleanupMode.parse(""blub""))\r\n            .withMessageContainingAll(""blub"", ""try"", ""none"", ""remove"");\r\n```', 'comment_created': datetime.datetime(2022, 7, 19, 5, 16, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924069010, 'comment_body': '```suggestion\r\n        assertThat(b).hasToString(""RUN apt-get update\\n"");\r\n```', 'comment_created': datetime.datetime(2022, 7, 19, 5, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924069209, 'comment_body': '```suggestion\r\n        assertThat(b).hasToString(""EXPOSE 1010 2020\\n"");\r\n```', 'comment_created': datetime.datetime(2022, 7, 19, 5, 20, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924069467, 'comment_body': '```suggestion\r\n        assertThat(b).hasToString(""USER roland\\n"");\r\n```', 'comment_created': datetime.datetime(2022, 7, 19, 5, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924070084, 'comment_body': ""I'll remove it"", 'comment_created': datetime.datetime(2022, 7, 19, 5, 22, 46, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 924196300, 'comment_body': '@rohanKanojia please suggest descriptive name for this test ', 'comment_created': datetime.datetime(2022, 7, 19, 8, 13, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 925195418, 'comment_body': ""I'm sorry for not being clear. I meant to replace whole try-catch block with this"", 'comment_created': datetime.datetime(2022, 7, 20, 5, 45, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 925209371, 'comment_body': 'I think maybe we can try this\r\n```suggestion\r\n    @DisplayName(""getFullName should add registry to image name when valid registry is provided"")\r\n    void getFullName_whenRegistryProvided_shouldReturnImageNameWithRegistry(String imageName, String registry, String expected) {\r\n```', 'comment_created': datetime.datetime(2022, 7, 20, 6, 10, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 925212521, 'comment_body': ""I'm slightly confused. This test is same as `testRegistryNamingExtended`. Why have you created it? Can't we test all these in `testRegistryNaming` ?"", 'comment_created': datetime.datetime(2022, 7, 20, 6, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 925224202, 'comment_body': 'Yes we can test all these in `testRegistryNaming` test, but I created it because it was there\r\nhttps://github.com/eclipse/jkube/blob/c40de91d9604ee433f2403e87057078e4775644b/jkube-kit/config/image/src/test/java/org/eclipse/jkube/kit/config/image/ImageNameTest.java#L132', 'comment_created': datetime.datetime(2022, 7, 20, 6, 33, 6, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 925281378, 'comment_body': ""I see. I think it's safe to merge both tests."", 'comment_created': datetime.datetime(2022, 7, 20, 7, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 925739867, 'comment_body': 'The ideal option would have been to rename the tests, `Good Health Check 7` is a very good example of a bad name for a test :sweat_smile: \r\nI have no idea what these tests are testing, nor what the spec says about the code they are verifying.', 'comment_created': datetime.datetime(2022, 7, 20, 15, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}]","[{'commit_sha': '050ef6f013d24942aa15a5e967bd12da02107d6c', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1001970341,refactor (jkube-kit/config/resource): Migrate all tests from JUnit4 to JUnit5 (#1553),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1553 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1664,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1664,https://github.com/eclipse-jkube/jkube/pull/1664,closed,86,111,5,1,3,2,0,0,[],2022-07-20 10:57:08+00:00,2022-07-25 07:46:42+00:00,420574.0,"4 days, 20:49:34","[{'comment_id': 927328750, 'comment_body': '`key` is sort of ambiguous, what do you think of renaming to `propertyKey`?', 'comment_created': datetime.datetime(2022, 7, 22, 6, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 927329648, 'comment_body': ""Since you are providing the test descriptions as strings, maybe it's a good time to make them a little bit more readable ;)"", 'comment_created': datetime.datetime(2022, 7, 22, 6, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}]","[{'commit_sha': '655ad6de3c2f1b603283ec33abbb0b7eaac72c88', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1005137252,refactor (jkube-kit-build-service-jib): Migrate test from JUnit4 to JUnit5 (#1556),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1556 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1665,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1665,https://github.com/eclipse-jkube/jkube/pull/1665,closed,20,23,2,1,3,3,0,0,[],2022-07-22 05:21:38+00:00,2022-07-28 05:24:15+00:00,518557.0,"6 days, 0:02:37","[{'comment_id': 929872186, 'comment_body': ""This change makes the test misleading.\r\n\r\n`temporaryFolder.newFile()` statements should be replaced with actual temporary files (you've already done this in other tests)"", 'comment_created': datetime.datetime(2022, 7, 26, 11, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 929903087, 'comment_body': 'Do I need to do this\r\n```java\r\nFile.createTempFile(""junit5"", null, temporaryFolder)\r\n```\r\nor this?\r\n```java\r\nnew File(temporaryFolder, """")\r\n```', 'comment_created': datetime.datetime(2022, 7, 26, 12, 29, 1, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 929923446, 'comment_body': 'You should use `File.createTempFile(""junit"", ""ext"", temporaryFolder)` which creates an actual empty file.\r\n\r\nAlso note that `new File(temporaryFolder, """")` should have a file name, but in this case is the least appropriate option because that doesn\'t create an actual file (it\'s just a reference to the file)\r\n', 'comment_created': datetime.datetime(2022, 7, 26, 12, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}]","[{'commit_sha': '86f18c26c7de1305eeab29f34c432efdaefcaf10', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1009823235,refactor(jkube-kit-resource-helm): Migrate all tests from JUnit4 to JUnit5 (#1558),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1558 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1675,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1675,https://github.com/eclipse-jkube/jkube/pull/1675,closed,168,160,10,1,3,13,0,0,[],2022-07-27 15:36:22+00:00,2022-07-29 07:16:51+00:00,142829.0,"1 day, 15:40:29","[{'comment_id': 931878035, 'comment_body': ""Why didn't you use `File.createTempFile` in this case?"", 'comment_created': datetime.datetime(2022, 7, 28, 7, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 931878309, 'comment_body': ""Why didn't you use File.createTempFile in this case?"", 'comment_created': datetime.datetime(2022, 7, 28, 7, 35, 7, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 931878384, 'comment_body': ""Why didn't you use File.createTempFile in this case?"", 'comment_created': datetime.datetime(2022, 7, 28, 7, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 931879017, 'comment_body': 'You should create an actual directory instead of a simple File reference.', 'comment_created': datetime.datetime(2022, 7, 28, 7, 35, 58, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 931881755, 'comment_body': 'It would be nice to add a little bit more validation about the exception .\r\n\r\nAnd maybe provide a better test description for the tested cases:\r\n- prepareSourceDir with nonexistent directory should throw exception\r\n- prepareSourceDir with empty directory should throw exception\r\n- prepareSourceDir with directory with no YAML files should throw exception\r\n\r\nor things along those lines.', 'comment_created': datetime.datetime(2022, 7, 28, 7, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 931909194, 'comment_body': 'I tried but it gives \r\n```java\r\njava.lang.AssertionError: \r\nExpecting\r\n  <sun.net.www.protocol.https.DelegateHttpsURLConnection:https://example.com/chart11372277950702050897tar.gz>\r\nto have a property or a field named <""url""> with value\r\n  <https://example.com/chart.tgz>\r\nbut value was:\r\n  <https://example.com/chart11372277950702050897tar.gz>\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 8, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 931917000, 'comment_body': 'I tried but it gives\r\n```java\r\njava.lang.AssertionError: \r\nExpecting\r\n  <sun.net.www.protocol.https.DelegateHttpsURLConnection:https://example.com/chart1833669191392288151tar.gz>\r\nto have a property or a field named <""url""> with value\r\n  <https://example.com/chart.tgz>\r\nbut value was:\r\n  <https://example.com/chart1833669191392288151tar.gz>\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 8, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 931974206, 'comment_body': 'because your temp file has a wrong extension. The resulting filename should be `chart1833669191392288151.tar.gz` instead of `chart1833669191392288151tar.gz`\r\n\r\nI understand that the temp file suffix should be  `.tar.gz` and that you were using `tar.gz`', 'comment_created': datetime.datetime(2022, 7, 28, 9, 8, 48, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 931974569, 'comment_body': 'because your temp file has a wrong extension. The resulting filename should be `chart1833669191392288151.tar.gz` instead of `chart1833669191392288151tar.gz`\r\n\r\nI understand that the temp file suffix should be  `.tar.gz` and that you were using `tar.gz`', 'comment_created': datetime.datetime(2022, 7, 28, 9, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 932096483, 'comment_body': 'This time I used `.tar.gz` still it is not working\r\n```java\r\njava.lang.AssertionError: \r\nExpecting\r\n  <sun.net.www.protocol.https.DelegateHttpsURLConnection:https://example.com/chart18279381371330993283.tgz>\r\nto have a property or a field named <""url""> with value\r\n  <https://example.com/chart.tgz>\r\nbut value was:\r\n  <https://example.com/chart18279381371330993283.tgz>\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 11, 22, 30, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 932203683, 'comment_body': 'According to [Java Docs](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/File.html#createTempFile(java.lang.String,java.lang.String,java.io.File)) `File.createTempFile(...)` generates the name of the new file by concatenating the prefix, five or more internally-generated characters, and the suffix.`\r\n\r\nwhich means `File.createTempFile(...)` will not work because the resulting filename should be `chart.tgz` instead of `chart18279381371330993283.tgz`\r\n\r\nbut `Files.createFile(temporaryFolder.toPath().resolve(""chart.tgz"")).toFile()` is working because it creates an actual file with name `chart.tgz` instead of `chart18279381371330993283.tgz`', 'comment_created': datetime.datetime(2022, 7, 28, 13, 15, 3, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 932204421, 'comment_body': 'And [JUnit4](https://junit.org/junit4/javadoc/4.12/src-html/org/junit/rules/TemporaryFolder.html#line.65) creates a new file using `new File(getRoot(), filename)` that\'s why I used `new File(temporaryFolder, ""chart.tar.gz"")`', 'comment_created': datetime.datetime(2022, 7, 28, 13, 15, 43, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 932344551, 'comment_body': '> And [JUnit4](https://junit.org/junit4/javadoc/4.12/src-html/org/junit/rules/TemporaryFolder.html#line.65) creates a new file using new File(getRoot(), filename) that\'s why I used new File(temporaryFolder, ""chart.tar.gz"")\r\n\r\nJUnit 4 creates a new file by using `TemporaryFolder#newFile`, which **is not** the same as `new File(...)`.\r\n\r\nIf the filename needs to be `chart.tgz`, then by all means do a `Files#createFile` with the appropriate filename (which again, **is not** the same as new File(...)).\r\n\r\nIn case it\'s not clear, `new File(...)` won\'t create a file or a directory, it\'s just a reference to a path in your filesystem that might or might not exist.\r\n\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 7, 28, 14, 59, 22, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}]","[{'commit_sha': '96708ae3f176086cef04396209dabc2c99544924', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1010401475,refactor (jkube-kit-resource-service): Migrate test from JUnit4 to JUnit5 (#1567),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1567 

## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1676,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1676,https://github.com/eclipse-jkube/jkube/pull/1676,closed,53,58,4,1,3,6,0,0,[],2022-07-28 06:17:44+00:00,2022-07-29 08:27:46+00:00,94202.0,"1 day, 2:10:02","[{'comment_id': 931970029, 'comment_body': 'We should create/link an actual directory', 'comment_created': datetime.datetime(2022, 7, 28, 9, 4, 27, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 931970522, 'comment_body': 'We should use an actual directory, not just a reference to a nonexistent one', 'comment_created': datetime.datetime(2022, 7, 28, 9, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 931971773, 'comment_body': 'You should use an existent directory', 'comment_created': datetime.datetime(2022, 7, 28, 9, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 932103507, 'comment_body': 'Got it', 'comment_created': datetime.datetime(2022, 7, 28, 11, 31, 3, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 932105487, 'comment_body': 'Got it', 'comment_created': datetime.datetime(2022, 7, 28, 11, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 932105562, 'comment_body': 'Got it', 'comment_created': datetime.datetime(2022, 7, 28, 11, 33, 30, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': 'b779eaaf3adf0bd6b80a8f07b4a0e2b65e5f87b7', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1011805945,refactor (jkube-kit-watcher-api): Migrate test from JUnit4 to JUnit5 (#1568),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1568 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1677,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1677,https://github.com/eclipse-jkube/jkube/pull/1677,closed,11,12,2,1,3,0,0,0,[],2022-07-29 10:28:59+00:00,2022-08-02 09:19:54+00:00,341455.0,"3 days, 22:50:55",[],"[{'commit_sha': '835f6d81ed082070d094f07a4f26930b0ec565f2', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1011844770,refactor (jkube-kit-watcher-standard): Migrate all tests from JUnit4 to JUnit5 (#1569),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1569 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1678,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1678,https://github.com/eclipse-jkube/jkube/pull/1678,closed,31,29,4,1,3,0,0,0,[],2022-07-29 10:51:54+00:00,2022-08-02 09:20:10+00:00,340096.0,"3 days, 22:28:16",[],"[{'commit_sha': 'a27f73298448889c1f819bba74578fa03f3d6fed', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1013446888,refactor (jkube-kit-profiles): Migrate test from JUnit4 to JUnit5 (#1566),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1566 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1682,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1682,https://github.com/eclipse-jkube/jkube/pull/1682,closed,64,57,2,1,3,5,0,0,[],2022-08-01 07:17:00+00:00,2022-08-02 09:19:41+00:00,93761.0,"1 day, 2:02:41","[{'comment_id': 934302186, 'comment_body': 'These  assertions (and the following) could be combined with a single assertThat DSL call ---> `assertThat(profile.getEnricherConfig())` ---> `.returns()`', 'comment_created': datetime.datetime(2022, 8, 1, 9, 4, 20, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 934303237, 'comment_body': 'It would be nice if we could combined all of the assertions into a single assertThat() statement.', 'comment_created': datetime.datetime(2022, 8, 1, 9, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 935115308, 'comment_body': 'Can you tell me exactly how should I do this?\r\nI tried to combine these assertions like\r\n\r\n```java\r\nassertThat(profiles).isNotNull().hasSize(4)\r\n                .first()\r\n                .satisfies(\r\n                        profile -> {\r\n                            assertThat(profile).hasFieldOrPropertyWithValue(""name"", ""simple"");\r\n                            assertThat(profile.getEnricherConfig().use(""base"")).isTrue();\r\n                            assertThat(profile.getEnricherConfig().use(""blub"")).isFalse();\r\n                            assertThat(profile.getGeneratorConfig().use(""java.app"")).isFalse();\r\n                            assertThat(profile.getGeneratorConfig().use(""spring.swarm"")).isTrue();\r\n                        });\r\n```', 'comment_created': datetime.datetime(2022, 8, 2, 4, 59, 39, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 935120540, 'comment_body': 'I was thinking and more concerned about the second part (get...use), but yes something like this:\r\n```java\r\n        assertThat(profiles).isNotNull().hasSize(4)\r\n            .first().hasFieldOrPropertyWithValue(""name"", ""simple"")\r\n            .satisfies(profile -> assertThat(profile.getEnricherConfig())\r\n                .returns(true, c -> c.use(""base""))\r\n                .returns(false, c -> c.use(""blub"")))\r\n            .satisfies(profile -> assertThat(profile.getGeneratorConfig())\r\n                .returns(false, c -> c.use(""java.app""))\r\n                .returns(true, c -> c.use(""spring.swarm"")));\r\n```', 'comment_created': datetime.datetime(2022, 8, 2, 5, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 935121486, 'comment_body': 'Thank you', 'comment_created': datetime.datetime(2022, 8, 2, 5, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': '8b2ab2c039646b3b146ad1fb532ca5982a348863', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1014917060,refactor (jkube-kit-thorntail): Migrate all tests from JUnit4 to JUnit5 (#1571),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1571 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1685,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1685,https://github.com/eclipse-jkube/jkube/pull/1685,closed,45,52,3,1,3,0,0,0,[],2022-08-02 10:17:16+00:00,2022-08-03 05:16:34+00:00,68358.0,18:59:18,[],"[{'commit_sha': 'db0de0a85ac51319db7e19b1ed1a88bdf9c84efe', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1015212247,refactor (jkube-kit-generator-karaf): Migrate test from JUnit4 to JUnit5 (#1562),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1562 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1687,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1687,https://github.com/eclipse-jkube/jkube/pull/1687,closed,23,20,2,1,3,0,0,0,[],2022-08-02 14:43:00+00:00,2022-08-03 05:27:59+00:00,53099.0,14:44:59,[],"[{'commit_sha': 'b059783bbffb90ac326845c25bb919905b088890', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1015862574,refactor (jkube-kit-generator-java-exec): Migrate all tests from JUnit4 to JUnit5 (#1561),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1561 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1688,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1688,https://github.com/eclipse-jkube/jkube/pull/1688,closed,70,76,6,1,3,3,0,0,[],2022-08-03 05:45:20+00:00,2022-08-09 06:17:27+00:00,520327.0,"6 days, 0:32:07","[{'comment_id': 936307261, 'comment_body': 'Could we use literals here instead of referencing the `JavaExecGenerator` constants?', 'comment_created': datetime.datetime(2022, 8, 3, 7, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936307349, 'comment_body': 'Could we use literals here instead of referencing the `JavaExecGenerator` constants?', 'comment_created': datetime.datetime(2022, 8, 3, 7, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936307520, 'comment_body': 'Could we use literals here instead of referencing the `JavaExecGenerator` constants?', 'comment_created': datetime.datetime(2022, 8, 3, 7, 4, 18, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}]","[{'commit_sha': '381f49a106f5e62e640a8088b0030df9a1793724', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1016516200,refactor (jkube-kit-generator-webapp): Migrate all tests from JUnit4 to JUnit5 (#1563),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1563 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1691,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1691,https://github.com/eclipse-jkube/jkube/pull/1691,closed,557,511,7,4,15,41,0,0,[],2022-08-03 15:52:06+00:00,2022-10-03 13:00:26+00:00,5260100.0,"60 days, 21:08:20","[{'comment_id': 937361557, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\nAlso, consider removing the slash from the directory paths.', 'comment_created': datetime.datetime(2022, 8, 4, 5, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937363410, 'comment_body': ""Maybe use a proper assertion for the exception.\r\nIf we have a customized message, it might be a good idea to check we're actually throwing that exception and not something else."", 'comment_created': datetime.datetime(2022, 8, 4, 5, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937363890, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\n', 'comment_created': datetime.datetime(2022, 8, 4, 5, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937363940, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\n', 'comment_created': datetime.datetime(2022, 8, 4, 5, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937363997, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\n', 'comment_created': datetime.datetime(2022, 8, 4, 5, 34, 50, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937364357, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\n', 'comment_created': datetime.datetime(2022, 8, 4, 5, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937364440, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\n', 'comment_created': datetime.datetime(2022, 8, 4, 5, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937364498, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\n', 'comment_created': datetime.datetime(2022, 8, 4, 5, 35, 57, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937364600, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\n', 'comment_created': datetime.datetime(2022, 8, 4, 5, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937364692, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\n', 'comment_created': datetime.datetime(2022, 8, 4, 5, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937364822, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\n', 'comment_created': datetime.datetime(2022, 8, 4, 5, 36, 40, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937364856, 'comment_body': 'As commented [here](https://github.com/eclipse/jkube/issues/1563#issuecomment-1203719846), these assertions are not necessary if you use the nio Files utility.\r\n', 'comment_created': datetime.datetime(2022, 8, 4, 5, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937446403, 'comment_body': 'I guess my comment was not clear. Please use nio Files utility methods that don\'t return boolean false in case of failure but  throw an exception (Runtime) instead.\r\n```suggestion\r\n            Path webInf = Files.createDirectories(folder.resolve(""webapp"" + i)\r\n                .resolve(""META-INF"").resolve(""WEB-INF""));\r\n            Files.createFile(webInf.resolve(descriptor));\r\n```', 'comment_created': datetime.datetime(2022, 8, 4, 7, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937754479, 'comment_body': 'This path is not resolving to `webapp$i/META-INF/WEB-INF`\r\nConsidering L139(L138), we need to keep the other `appDir` variable too.\r\n\r\nhttps://github.com/eclipse/jkube/pull/1691#discussion_r937446403', 'comment_created': datetime.datetime(2022, 8, 4, 13, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937755609, 'comment_body': ""Please use nio Files. I'm not sure if you're having trouble with this, or I'm not explaining correctly why we should do so."", 'comment_created': datetime.datetime(2022, 8, 4, 13, 4, 12, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937755804, 'comment_body': 'nio Files', 'comment_created': datetime.datetime(2022, 8, 4, 13, 4, 25, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937755929, 'comment_body': 'nio Files', 'comment_created': datetime.datetime(2022, 8, 4, 13, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937756662, 'comment_body': 'why webInf? this path has nothing to do with that (seems like a copy-paste residue)', 'comment_created': datetime.datetime(2022, 8, 4, 13, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937756813, 'comment_body': 'not webInf', 'comment_created': datetime.datetime(2022, 8, 4, 13, 5, 26, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937757070, 'comment_body': 'not webInf', 'comment_created': datetime.datetime(2022, 8, 4, 13, 5, 43, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937757494, 'comment_body': 'not webInf', 'comment_created': datetime.datetime(2022, 8, 4, 13, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937757681, 'comment_body': 'not webInf', 'comment_created': datetime.datetime(2022, 8, 4, 13, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937757903, 'comment_body': 'not webInf', 'comment_created': datetime.datetime(2022, 8, 4, 13, 6, 33, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937758069, 'comment_body': ""Please don't reuse local variables"", 'comment_created': datetime.datetime(2022, 8, 4, 13, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937758245, 'comment_body': 'not webInf', 'comment_created': datetime.datetime(2022, 8, 4, 13, 6, 54, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 937870569, 'comment_body': 'On (master branch) debugging this, I found out that on each iteration it is creating a directory `webapp$i` and inside it creates two different directories `META-INF` and `WEB-INF`, not nested as you said `webapp$i/META-INF/WEB-INF`\r\nAfter resolving these different directories it resolves `descriptor` accordingly.\r\n\r\nIf I do like [#1691 (comment)](https://github.com/eclipse/jkube/pull/1691#discussion_r937446403) then it gives\r\n```java\r\njava.nio.file.NoSuchFileException: /tmp/junit3247740821297201882/webapp0/META-INF/WEB-INF/WEB-INF/jboss-deployment-structure.xml\r\n```\r\nbecause `jboss-deployment-structure.xml` file needs to be resolved in `webapp0/WEB-INF` directory  instead of `webapp0/META-INF/WEB-INF/WEB-INF` directory (nested WEB-INF)\r\n\r\nand the path resolved in `webapp$i/META-INF/WEB-INF` after that, it resolved the `$descriptor` which contains an absolute path to the file, resulting in nested directories. And that causes the exception.\r\n\r\nbut on doing like \r\n```java\r\nString appDir = descriptor.split(""/"")[0];\r\nString file = descriptor.split(""/"")[1];\r\n\r\nPath webInf = Files.createDirectories(folder.resolve(""webapp"" + i).resolve(appDir));\r\nFiles.createFile(webInf.resolve(file));\r\n```\r\nit works because here we create a directory `webapp$i` and inside it a `$appDir` directory and inside `$appDir` a `$file` file, the `$appDir` and `$file` we get from the `$descriptor` because it contains the absolute path to the `$file`', 'comment_created': datetime.datetime(2022, 8, 4, 14, 34, 47, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 937870649, 'comment_body': 'Sorry I missed this 😔\r\nLet me be clear should I do something like this?\r\n```java\r\nFiles.createFile(buildDirectory.toPath().resolve(""artifact.war""));\r\n```', 'comment_created': datetime.datetime(2022, 8, 4, 14, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 937870855, 'comment_body': ""In many tests, I have seen that local variables are reused so why don't you want to reuse them?"", 'comment_created': datetime.datetime(2022, 8, 4, 14, 34, 59, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 938394178, 'comment_body': 'Does `metaInf` for `META-INF` work?\r\n\r\nPlease suggest a better name for `META-INF-1337`', 'comment_created': datetime.datetime(2022, 8, 5, 2, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 940934846, 'comment_body': 'The https://github.com/eclipse/jkube/pull/1691#discussion_r937446403 code suggestion is wrong.\r\nFor some reason I assumed the directories were nested (probably too many iterations over the same issue).\r\nThe test should be migrated to keep the previous behavior but using the nio Files utils instead.\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 9, 6, 11, 40, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 940936129, 'comment_body': ""> Does `metaInf` for `META-INF` work?\r\n\r\nYes, of course.\r\n\r\n> Please suggest a better name for `META-INF-1337`\r\n\r\nWhatever you think is best.\r\nIs this testing the behavior of an invalid META-INF directory? `invalidMetaInf` sounds good then.\r\nI'm not in the best position to name the variables. The idea is that these variables describe what's actually going on and provide meaning to the test.\r\n\r\n"", 'comment_created': datetime.datetime(2022, 8, 9, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 940937334, 'comment_body': ""Because that's a bad practice.\r\n\r\nFor example, in this case, what's the point of assigning the variable?\r\nIs the name webInf appropriate?\r\nAre the variables reused later on?\r\n\r\n_The S in SOLID should also resonate here_"", 'comment_created': datetime.datetime(2022, 8, 9, 6, 15, 31, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 974269706, 'comment_body': ""Maybe this method needs some more explanation (in a comment?). I read it several times but still don't know what it is doing. "", 'comment_created': datetime.datetime(2022, 9, 19, 13, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sunix', 'type': 'User'}, {'comment_id': 974954739, 'comment_body': 'Here we are checking that if the app server is null or not specified, we should get the default server, which is tomcat.\r\n\r\nMaybe this method name will explain what it is doing.\r\n```java\r\ndetect_withNullServer_shouldReturnTomcatAsDefaultServer()\r\n```', 'comment_created': datetime.datetime(2022, 9, 20, 6, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 974968865, 'comment_body': 'I was refering to `assertAppServerDescriptorApplicability`', 'comment_created': datetime.datetime(2022, 9, 20, 7, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sunix', 'type': 'User'}, {'comment_id': 974979615, 'comment_body': 'OK I understand now ... what is confusing is that we are building the tuples (parameter/expectation) that are then extracted to be asserted ... Is it possible to make it simpler to implement and read.', 'comment_created': datetime.datetime(2022, 9, 20, 7, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sunix', 'type': 'User'}, {'comment_id': 976086070, 'comment_body': 'I tried to make it simple like this\r\n```java\r\nprivate void assertAppServerDescriptorApplicability(String appDir, String file, boolean expected) throws IOException {\r\n        Random random = new Random();\r\n        int i = random.nextInt(1000);\r\n\r\n        Path webInf = Files.createDirectories(folder.resolve(""webapp"" + i).resolve(appDir));\r\n        Files.createFile(webInf.resolve(file));\r\n\r\n        GeneratorContext generatorContext = GeneratorContext.builder().project(JavaProject.builder()\r\n                .buildDirectory(webInf.toFile())\r\n                .plugins(Collections.emptyList())\r\n                .build()).build();\r\n\r\n        boolean result = new AppServerDetector(generatorContext).detect(null).isApplicable();\r\n        assertThat(result).isEqualTo(expected);\r\n}\r\n```\r\nbut due to this statement\r\nhttps://github.com/eclipse/jkube/blob/40ce95a6366986bd005b51420a799f09b5e075f8/jkube-kit/generator/webapp/src/test/java/org/eclipse/jkube/generator/webapp/AppServerAutoDetectionTest.java#L132\r\n\r\nwe need a random integer or we can change signature of `assertAppServerDescriptorApplicability` method to accept an additional argument.', 'comment_created': datetime.datetime(2022, 9, 21, 6, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 977407142, 'comment_body': 'We can simplify `assertAppServerDescriptorApplicability` method like this\r\n\r\n```java\r\nprivate void assertAppServerDescriptorApplicability(String appDir, String file, boolean expected) throws IOException {\r\n    File webInf = Files.createDirectories(folder.resolve(""webapp"").resolve(appDir)).toFile();\r\n    Files.createFile(webInf.toPath().resolve(file));\r\n    try {\r\n      GeneratorContext generatorContext = GeneratorContext.builder().project(JavaProject.builder()\r\n          .buildDirectory(webInf)\r\n          .plugins(Collections.emptyList())\r\n          .build()).build();\r\n\r\n      boolean result = new AppServerDetector(generatorContext).detect(null).isApplicable();\r\n      assertThat(result).isEqualTo(expected);\r\n    } finally {\r\n      FileUtils.deleteDirectory(webInf);\r\n    }\r\n  }\r\n```\r\nwill this work?', 'comment_created': datetime.datetime(2022, 9, 22, 9, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 980877108, 'comment_body': 'yes it is better', 'comment_created': datetime.datetime(2022, 9, 27, 7, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sunix', 'type': 'User'}, {'comment_id': 980879649, 'comment_body': 'then, If it has to be in another PR it works for me. If this refactor is not related to the migration from JUnit4 to JUnit5 it should be in another PR (I was mentioning that here in case you could use a JUnit5 feature to make that clearer)', 'comment_created': datetime.datetime(2022, 9, 27, 7, 46, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sunix', 'type': 'User'}, {'comment_id': 980973695, 'comment_body': ""Sure, I see https://github.com/eclipse/jkube/issues/1662 that's why I've not refactored it in this PR."", 'comment_created': datetime.datetime(2022, 9, 27, 9, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': '49abb46ce804d192feacb937e0f74247ce97a052', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a757ba496d28bcd5198d7611c1e4eedd2699d5dc', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b573e9cf81ec0a193590b60e787f6d69b7f9024', 'committer_username': 'manusa', 'committer_name': 'Marc Nuri', 'committer_email': 'marc@marcnuri.com', 'commit_date': datetime.datetime(2010, 11, 19, 12, 16, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02867c51dd49189efc310dc46619a9c4c1bab6fd', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1021021148,refactor (jkube-kit-openliberty): Migrate all tests from JUnit4 to JUnit5 (#1575),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1575 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1694,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1694,https://github.com/eclipse-jkube/jkube/pull/1694,closed,63,69,5,1,3,0,0,0,[],2022-08-09 04:26:57+00:00,2022-08-10 07:05:11+00:00,95894.0,"1 day, 2:38:14",[],"[{'commit_sha': '6e06c149911a315b69bf3cfed5f1bf57831ab9ce', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1021501584,refactor (jkube-kit-micronaut): Migrate all tests from JUnit4 to JUnit5 (#1574),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1574 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1695,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1695,https://github.com/eclipse-jkube/jkube/pull/1695,closed,49,51,5,1,3,1,0,0,[],2022-08-09 13:10:03+00:00,2022-08-10 07:05:41+00:00,64538.0,17:55:38,"[{'comment_id': 942063840, 'comment_body': '```suggestion\r\n  @ParameterizedTest(name = ""Micronaut configuration can be read from application.{0} files"")\r\n```', 'comment_created': datetime.datetime(2022, 8, 10, 6, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}]","[{'commit_sha': '8e5b8f21557f211f13972bf8f32b7791a6d25554', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1022665750,refactor (jkube-kit-quarkus): Migrate all tests from JUnit4 to JUnit5 (#1573),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1573 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1696,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1696,https://github.com/eclipse-jkube/jkube/pull/1696,closed,714,747,8,3,7,3,0,0,[],2022-08-10 12:48:26+00:00,2022-09-05 14:31:04+00:00,2252558.0,"26 days, 1:42:38","[{'comment_id': 942595989, 'comment_body': ""You should adapt the test so that the test name can be defined as\r\n`QuarkusMode from project with '{0}' packaging should return '{1}'`.\r\n\r\nFor example: `QuarkusMode from project with 'native' packaging should return 'NATIVE'`\r\n\r\nThen the assertion should include `isFatJar`\r\n\r\nSo the method signature should look sth like \r\n```\r\nvoid fromWithPackageType(String packageType, QuarkusMode expectedMode, boolean isFatJar)\r\n```\r\n\r\nYou should also notice how in your initial implementation, both `String property`, and the `property` arguments make no sense in the scope of the test. If those were to be different (which aren't), then different tests should be expected."", 'comment_created': datetime.datetime(2022, 8, 10, 15, 27, 39, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 942601754, 'comment_body': 'Why did you choose to combine some of the test cases into a parameterized test and not the others?\r\n\r\nIt might be a good exercise to write the `@ParameterizedTest(name = ""{0}"")` using placeholders instead of a full description. Then it might be easier to identify those tests that can be combined and those that shouldn\'t be.\r\n\r\nFor this complete test suite, I guess that test cases could be combined in pairs with still having some meaning.', 'comment_created': datetime.datetime(2022, 8, 10, 15, 32, 54, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 942604232, 'comment_body': 'Please, try to create a description using placeholders and the provided values, this one should be easy.\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 10, 15, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}]","[{'commit_sha': 'c29987abd7f1118cd56e2bdd668f11e999fb117d', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7d0ee7737ba4bf5f7a36ff9536f11b7aff6ec6f', 'committer_username': 'manusa', 'committer_name': 'Marc Nuri', 'committer_email': 'marc@marcnuri.com', 'commit_date': datetime.datetime(2010, 11, 19, 12, 16, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '263467640e153be85b1253cb606bf61038829881', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1022752124,refactor (openshift-maven-plugin): Migrate all tests from JUnit4 to JUnit5 (#1579),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1579 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1697,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1697,https://github.com/eclipse-jkube/jkube/pull/1697,closed,62,73,4,1,3,0,0,0,[],2022-08-10 14:00:39+00:00,2022-08-23 06:17:49+00:00,1095430.0,"12 days, 16:17:10",[],"[{'commit_sha': '16c439e6b32cf63b1d8f3ea6e452171148e65ad1', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1030769271,refactor (jkube-kit-build-service-docker): Migrate all tests from JUnit4 to JUnit5 (#1555),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1555 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1710,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1710,https://github.com/eclipse-jkube/jkube/pull/1710,closed,610,672,26,1,3,10,0,0,[],2022-08-19 06:10:46+00:00,2022-08-23 06:06:46+00:00,345360.0,"3 days, 23:56:00","[{'comment_id': 951680207, 'comment_body': '```suggestion\r\n        assertThat(stringAtomicReference).hasValue(mavenGoalToExecute);\r\n```', 'comment_created': datetime.datetime(2022, 8, 22, 17, 3, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 951681098, 'comment_body': '```suggestion\r\n        assertThat(restarted).isTrue();\r\n```', 'comment_created': datetime.datetime(2022, 8, 22, 17, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 951681437, 'comment_body': '```suggestion\r\n        assertThat(fileCopied).isTrue();\r\n```', 'comment_created': datetime.datetime(2022, 8, 22, 17, 4, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 951681722, 'comment_body': '```suggestion\r\n        assertThat(postExecCommandExecuted).isTrue();\r\n```', 'comment_created': datetime.datetime(2022, 8, 22, 17, 4, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 951685470, 'comment_body': 'Umm, why are these local BuildOption variables declared final?', 'comment_created': datetime.datetime(2022, 8, 22, 17, 8, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 951714271, 'comment_body': '```suggestion\r\n    assertThat(params)\r\n        .returns(username, from(j -> j.get(""username"").getAsString()))\r\n        .returns(password, from(j -> j.get(""password"").getAsString()));\r\n```', 'comment_created': datetime.datetime(2022, 8, 22, 17, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 951727310, 'comment_body': '```suggestion\r\n        assertThat(registryServerConfiguration)\r\n            .hasSize(2)\r\n            .extracting(RegistryServerConfiguration::getId, RegistryServerConfiguration::getUsername, RegistryServerConfiguration::getPassword, RegistryServerConfiguration::getConfiguration)\r\n            .containsExactlyInAnyOrder(\r\n                tuple(""docker.io"", ""username"", ""password"", Collections.emptyMap()),\r\n                tuple(""quay.io"", ""quayUsername"", ""quayPassword"", null)\r\n            );\r\n```', 'comment_created': datetime.datetime(2022, 8, 22, 17, 45, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 951734099, 'comment_body': '```suggestion\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 22, 17, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 952179612, 'comment_body': ""**No need to change**, but just as a note.\r\n\r\nThis test is actually testing 2 different things. The best approach would be to separate these tests into 2 separate tests (or a parameterized test). This way, in case of failure, you'd actually know what is failing. In addition, if the first part of the test fails, you won't know if the second part fails too because it will never run.\r\n\r\nTests should always respect the Given-When-Then (GWT) / Assemble-Act-Assert (AAA) structure, where the When/Act should consist of a single statement if possible."", 'comment_created': datetime.datetime(2022, 8, 23, 5, 55, 47, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 952201783, 'comment_body': ""Thanks for the note, I'll remember it."", 'comment_created': datetime.datetime(2022, 8, 23, 6, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': '1ee334a38c8e74133f740e14a5c5ff7abda742d3', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1049503689,refactor (jkube-kit-generator-api): Migrate all tests from JUnit4 to JUnit5 (#1560),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1560 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1743,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1743,https://github.com/eclipse-jkube/jkube/pull/1743,closed,292,250,6,1,3,4,0,0,[],2022-09-08 04:34:34+00:00,2022-09-19 10:01:26+00:00,970012.0,"11 days, 5:26:52","[{'comment_id': 966817665, 'comment_body': 'Why have you made these tests parameterized? I see only a constant input provided to test.', 'comment_created': datetime.datetime(2022, 9, 9, 9, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 966820662, 'comment_body': ""I cannot understand why you're using a parameterized test to check map keys. \r\n\r\nParameterized tests are supposed to be used when there is a possibility of running same test with different input/outputs."", 'comment_created': datetime.datetime(2022, 9, 9, 9, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 967600841, 'comment_body': ""I'm really sorry, it was due to some misunderstandings.\r\nFixed."", 'comment_created': datetime.datetime(2022, 9, 10, 5, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 967600843, 'comment_body': ""I'm really sorry, it was due to some misunderstandings related to testData.\r\nFixed."", 'comment_created': datetime.datetime(2022, 9, 10, 5, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': 'f5786bdb8af487e94b0161316ad952abcf0e6949', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1055698575,refactor(jkube-kit-enricher-specific): Migrate all tests from JUnit4 to JUnit5 (#1565),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1565 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1754,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1754,https://github.com/eclipse-jkube/jkube/pull/1754,closed,121,174,6,1,3,3,0,0,[],2022-09-14 08:42:20+00:00,2022-09-22 08:35:07+00:00,690767.0,"7 days, 23:52:47","[{'comment_id': 974907356, 'comment_body': ""This doesn't look like the right way to use parameterized test. You can simply assert map entries instead."", 'comment_created': datetime.datetime(2022, 9, 20, 5, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 975016759, 'comment_body': 'I\'m sorry for not being clear in my first comment. What I meant was that you don\'t need to have parameterized test here. You\'re providing a constant value as input to the test. Maybe it can be refactored like this:\r\n```java\r\n    @Test\r\n    void addedAnnotations() {\r\n        // Given + When\r\n        enricher.addAnnotations(builder);\r\n\r\n        // Then\r\n        assertThat(builder.buildMetadata().getAnnotations())\r\n            .containsEntry(""discovery.3scale.net/description-path"", descriptionPath)\r\n            .containsEntry(""discovery.3scale.net/discovery-version"", discoveryVersion)\r\n            .containsEntry(""discovery.3scale.net/path"", ""/rest-3scale"")\r\n            .containsEntry(""discovery.3scale.net/port"", port)\r\n            .containsEntry(""discovery.3scale.net/scheme"", scheme);\r\n        // OR\r\n        for (Map.Entry<String, String> entry : Arrays.asList(\r\n            new AbstractMap.SimpleEntry<>(""description-path"", descriptionPath),\r\n            new AbstractMap.SimpleEntry<>(""discovery-version"", discoveryVersion),\r\n            new AbstractMap.SimpleEntry<>(""path"", ""/rest-3scale""),\r\n            new AbstractMap.SimpleEntry<>(""port"", port),\r\n            new AbstractMap.SimpleEntry<>(""scheme"", scheme))) {\r\n           assertAnnotation(entry.getValue(), entry.getKey());\r\n        }\r\n    }\r\n```', 'comment_created': datetime.datetime(2022, 9, 20, 8, 3, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 975024409, 'comment_body': 'Got it!', 'comment_created': datetime.datetime(2022, 9, 20, 8, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': '8b43fdfbd5395d6189016bdf820d0b61b18f2dc1', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1055700449,refactor (jkube-kit-vertx): Migrate all tests from JUnit4 to JUnit5 (#1572),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1572 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1755,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1755,https://github.com/eclipse-jkube/jkube/pull/1755,closed,527,557,5,1,3,0,0,0,[],2022-09-14 08:43:59+00:00,2022-10-31 10:43:58+00:00,4067999.0,"47 days, 1:59:59",[],"[{'commit_sha': '0f328cb180616738651458b570ca02df9327bc0d', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1062929076,refactor (kubernetes-maven-plugin): Migrate all tests from JUnit4 to JUnit5 (#1577),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1577 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1761,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1761,https://github.com/eclipse-jkube/jkube/pull/1761,closed,231,251,12,1,3,0,0,0,[],2022-09-21 14:17:46+00:00,2022-09-22 08:07:43+00:00,64197.0,17:49:57,[],"[{'commit_sha': 'ef61d626ec0898b57e489daa4e820f91cec9d118', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1063846760,refactor (jkube-kit-wildfly-jar): Migrate all tests from JUnit4 to JUnit5 (#1576),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1576 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1765,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1765,https://github.com/eclipse-jkube/jkube/pull/1765,closed,198,187,4,1,3,0,0,0,[],2022-09-22 08:47:10+00:00,2022-11-07 10:25:26+00:00,3980296.0,"46 days, 1:38:16",[],"[{'commit_sha': 'f80dd485c4669fb6365bfa9d1271442a59ed178b', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1074126415,refactor (jkube-kit-build-api): Migrate tests from JUnit4 to JUnit5 (#1554),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1554 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [ ] I Keep It Small and Simple: The smaller the PR is, the easier it is to review and have it merged
 - [x] I use [conventional commits](https://www.conventionalcommits.org/) in my commit messages
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1776,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1776,https://github.com/eclipse-jkube/jkube/pull/1776,closed,398,382,14,1,3,0,0,0,[],2022-10-03 04:19:18+00:00,2022-10-10 13:29:58+00:00,637840.0,"7 days, 9:10:40",[],"[{'commit_sha': '8d977f3fca09fad9fcc033375898f6eab2873613', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1079861501,refactor (jkube-kit-config-service): Migrate tests from JUnit4 to JUnit5 (#1559),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1559 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [ ] I Keep It Small and Simple: The smaller the PR is, the easier it is to review and have it merged
 - [x] I use [conventional commits](https://www.conventionalcommits.org/) in my commit messages
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1802,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1802,https://github.com/eclipse-jkube/jkube/pull/1802,closed,540,552,24,1,3,0,0,0,[],2022-10-07 04:27:28+00:00,2022-10-10 13:29:17+00:00,291709.0,"3 days, 9:01:49",[],"[{'commit_sha': '74baccc3917f91ae2d4cf5a34eead3343c1bfc84', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1083444053,refactor (org.eclipse.jkube.openshift.gradle.plugin): Migrate tests from JUnit4 to JUnit5 (#1582),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1582 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [ ] I Keep It Small and Simple: The smaller the PR is, the easier it is to review and have it merged
 - [x] I use [conventional commits](https://www.conventionalcommits.org/) in my commit messages
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1826,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1826,https://github.com/eclipse-jkube/jkube/pull/1826,closed,290,316,15,1,4,5,0,0,[],2022-10-11 14:49:13+00:00,2022-11-04 10:19:24+00:00,2057411.0,"23 days, 19:30:11","[{'comment_id': 999138915, 'comment_body': ""This description doesn't seem to be right"", 'comment_created': datetime.datetime(2022, 10, 19, 8, 48, 8, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 999139963, 'comment_body': ""Maybe you can improve the description so that the test name reports what's actually happening (see method name)."", 'comment_created': datetime.datetime(2022, 10, 19, 8, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 999151040, 'comment_body': ""Maybe keep this one private and provide a getter `getRoot` so there's no need for the extra-changes in the other extension-dependent test classes."", 'comment_created': datetime.datetime(2022, 10, 19, 8, 59, 1, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 999362677, 'comment_body': ""I think you didn't fully grasp my last comment.\r\n\r\nWhat will this description print?\r\n\r\nIs there any place in this test implementation/method where you are setting properties (i.e. the {1} and {2} values). If not, why do they appear in the description?\r\n\r\nIn this case you need to understand that the original test was implemented using JUnit 4 parameters which was way more limited than what JUnit5 offers now.\r\n\r\nNot now, but probably if this test was implemented now from scratch you would probably opt to provide different datasets for each of the test cases in this suite.\r\n\r\nTL;DR, the `{1}={2}` makes no sense at all in this test."", 'comment_created': datetime.datetime(2022, 10, 19, 12, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1007706413, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2022, 10, 28, 6, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': '74bc2f469f1b201efe2f02a88b01dcf7e4f8e119', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1087420533,refactor (org.eclipse.jkube.kubernetes.gradle.plugin): Migrate tests from JUnit4 to JUnit5 (#1581),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1581 

## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [ ] I Keep It Small and Simple: The smaller the PR is, the easier it is to review and have it merged
 - [x] I use [conventional commits](https://www.conventionalcommits.org/) in my commit messages
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1851,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1851,https://github.com/eclipse-jkube/jkube/pull/1851,closed,512,482,21,1,7,9,0,0,[],2022-10-14 12:58:12+00:00,2022-11-03 11:40:19+00:00,1723327.0,"19 days, 22:42:07","[{'comment_id': 1011390359, 'comment_body': 'instead of manually deleting folder is it possible to use `deleteOnExit()` ?', 'comment_created': datetime.datetime(2022, 11, 2, 8, 57, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 1011518838, 'comment_body': ""That's not working but the below ones are working\r\n\r\n`    FileUtil.cleanDirectory()` and ` FileUtils.deleteDirectory()`\r\n\r\nwhich one to use?"", 'comment_created': datetime.datetime(2022, 11, 2, 10, 18, 59, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 1011556084, 'comment_body': ""I'm okay with any option as long as we don't manually do it."", 'comment_created': datetime.datetime(2022, 11, 2, 10, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 1011803045, 'comment_body': 'Some arguments appear to be missing here, initially there were 70 parameters.\r\nThis method returns only 69.\r\nAny explanation for this?\r\n', 'comment_created': datetime.datetime(2022, 11, 2, 13, 53, 8, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1011805144, 'comment_body': '```suggestion\r\n  @ParameterizedTest(name = ""{index}: with valid project, should create extension and register task \'\'{0}\'\' "")\r\n```', 'comment_created': datetime.datetime(2022, 11, 2, 13, 54, 42, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1011818600, 'comment_body': 'I think the original implementation was replicating what the `TemporaryFolder` rule did.\r\n(`delete`,`tryDelete`,`recursiveDelete`)', 'comment_created': datetime.datetime(2022, 11, 2, 14, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1011866771, 'comment_body': ""In the initial implementation, there was a single dataset to check both default values and property values, but here I provide different datasets for each of the test cases in this suite.\r\n\r\nSo I removed one test case for `getBuildStrategyOrDefault` because we're checking for default values which is `docker` then why should we check the build strategy set by the property?\r\nhttps://github.com/eclipse/jkube/blob/3724101d687f2885b2d917f769cdd4fa3e23891b/gradle-plugin/kubernetes/src/main/java/org/eclipse/jkube/gradle/plugin/KubernetesExtension.java#L416-L419\r\n\r\n\r\nSince we've another test that will check for build strategy set by the property. "", 'comment_created': datetime.datetime(2022, 11, 2, 14, 42, 27, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 1011879989, 'comment_body': 'OK; I see it now, there\'s a duplicate entry for `getBuildStrategyOrDefault` that only applies for the properties set `jib`, `s2i`.\r\n\r\n> Since we\'ve another test that will check for build strategy set by the property.\r\n\r\nHowever, you\'d probably want to add the third option to the `propertiesAndValues` set:\r\n```java\r\n        arguments(""getBuildStrategyOrDefault"", ""jkube.build.strategy"", ""docker"", JKubeBuildStrategy.docker),\r\n```\r\n\r\nThe reasoning is that you need to consider the following spec:\r\n- The default build strategy if not specified is `docker`\r\n- I can set a build strategy by providing the property `jkube.build.strategy`\r\n  - with value `s2i` will use S2I\r\n  - with value `jib` will use Jib\r\n  - with value `docker` will use Docker _(missing)_\r\n\r\nConsidering a future change in the spec (new default, additional strategy, removed strategy, and so on), I could easily change the tests to match the updated spec.', 'comment_created': datetime.datetime(2022, 11, 2, 14, 52, 20, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1011901094, 'comment_body': 'Added 👍', 'comment_created': datetime.datetime(2022, 11, 2, 15, 3, 53, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': '08d85f0cc030dced5d21bddeb29b5429d4df8ba8', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1094930746,refactor (gradle-plugin-it): Migrate tests from JUnit4 to JUnit5 (#1583),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1583 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [ ] I Keep It Small and Simple: The smaller the PR is, the easier it is to review and have it merged
 - [x] I use [conventional commits](https://www.conventionalcommits.org/) in my commit messages
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1872,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1872,https://github.com/eclipse-jkube/jkube/pull/1872,closed,436,584,36,1,3,0,0,0,[],2022-10-21 07:27:33+00:00,2022-11-02 07:41:34+00:00,1037641.0,"12 days, 0:14:01",[],"[{'commit_sha': 'c5771057de85b94818b66b67eeadd7230a1e94fd', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1082029110,refactor (jkube-kit-enricher-generic): Migrate tests from JUnit4 to JUnit5 (#1564),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1564 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [ ] I Keep It Small and Simple: The smaller the PR is, the easier it is to review and have it merged
 - [x] I use [conventional commits](https://www.conventionalcommits.org/) in my commit messages
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1819,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1819,https://github.com/eclipse-jkube/jkube/pull/1819,closed,1224,1440,41,2,3,13,0,0,[],2022-10-10 13:16:10+00:00,2022-11-18 10:44:55+00:00,3360525.0,"38 days, 21:28:45","[{'comment_id': 1021610197, 'comment_body': 'The comment needs to be moved to the relevant argument entry', 'comment_created': datetime.datetime(2022, 11, 14, 14, 28, 35, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1021611150, 'comment_body': ""It explains why despite using DeploymentConfig as controller type we end up with a Deployment, so yes, it's necessary"", 'comment_created': datetime.datetime(2022, 11, 14, 14, 29, 20, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1021615870, 'comment_body': ""This description makes no sense.\r\nAlso, once more, you've combined far too many tests\r\nYou can combine `create_withImagePullPolicyConfigured_shouldUseConfiguredImagePullPolicy` and `create_withImagePullPolicyProperty_shouldUseConfiguredImagePullPolicy` and talk about the resulting pull policy.\r\n\r\nThe other one you need to leave as is, or combine by providing all of the property combinations that affect the replica count outcome."", 'comment_created': datetime.datetime(2022, 11, 14, 14, 33, 16, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1021619308, 'comment_body': ""combining these tests makes it hard to understand what we're testing.\r\n\r\nMost of them assert different things."", 'comment_created': datetime.datetime(2022, 11, 14, 14, 36, 5, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1021620164, 'comment_body': ""Remove the parameterized test and try to add displaynames that describe what the test is doing, you'll probably see why it's not a good idea to combine them"", 'comment_created': datetime.datetime(2022, 11, 14, 14, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1021621625, 'comment_body': ""one more time :sweat_smile: \r\nAs a rule of thumb, if you need to add a `description` field to a parameterized test, then very likely it's not a good idea to make it parameterized."", 'comment_created': datetime.datetime(2022, 11, 14, 14, 37, 58, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1021632466, 'comment_body': 'this test seems to be missing', 'comment_created': datetime.datetime(2022, 11, 14, 14, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1021633813, 'comment_body': '```suggestion\r\n  void enrich(String controllerKind, VisitableBuilder<? extends HasMetadata, ?> item, Class<? extends KubernetesListBuilder> clazz) {\r\n```', 'comment_created': datetime.datetime(2022, 11, 14, 14, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1022365868, 'comment_body': 'This test is same as https://github.com/eclipse/jkube/blob/22a2c40b8599cadbdac79be6d49e2069930528b4/jkube-kit/enricher/generic/src/test/java/org/eclipse/jkube/enricher/generic/MavenScmEnricherTest.java#L65 so I removed it.', 'comment_created': datetime.datetime(2022, 11, 15, 6, 28, 46, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 1025022672, 'comment_body': ""Why did you remove this one?\r\nWhat do connection and URL mean in this context?\r\nThe other test refers to connection (which I can't find anywhere in the code), this one refers to URL which at least is present in the Java Project as scmUrl field."", 'comment_created': datetime.datetime(2022, 11, 17, 10, 38, 41, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1025143448, 'comment_body': 'Because both tests are asserting exactly same thing, they differ only in their name. So, I thought they are duplicates and removed one of them.\r\n\r\n`testMavenScmOnlyConnection `\r\nhttps://github.com/eclipse/jkube/blob/22a2c40b8599cadbdac79be6d49e2069930528b4/jkube-kit/enricher/generic/src/test/java/org/eclipse/jkube/enricher/generic/MavenScmEnricherTest.java#L80-L83\r\n\r\n`testMavenScmOnlyUrl `\r\nhttps://github.com/eclipse/jkube/blob/22a2c40b8599cadbdac79be6d49e2069930528b4/jkube-kit/enricher/generic/src/test/java/org/eclipse/jkube/enricher/generic/MavenScmEnricherTest.java#L124-L127\r\n', 'comment_created': datetime.datetime(2022, 11, 17, 12, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 1025387398, 'comment_body': ""Yes I see that.\r\nWhat I'm asking is if you randomly deleted a test.\r\nBecause from my PoV (without digging in), it's the other test that makes sense to stay, given that its name at least matches part of the test code."", 'comment_created': datetime.datetime(2022, 11, 17, 16, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 1025415245, 'comment_body': ""> What I'm asking is if you randomly deleted a test.\r\n\r\nNo, because of this I removed `testMavenScmOnlyUrl` test\r\n https://github.com/eclipse/jkube/blob/22a2c40b8599cadbdac79be6d49e2069930528b4/jkube-kit/enricher/generic/src/main/java/org/eclipse/jkube/enricher/generic/MavenScmEnricher.java#L40\r\n\r\nAnyways fixed it. \r\nReally sorry for misunderstanding 😔"", 'comment_created': datetime.datetime(2022, 11, 17, 16, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': 'bd3deb45b71538c79be723dff8720f0a487b11ef', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70b1c672842152e8871da65ba80241e1487b24e1', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1031825552,refactor (jkube-kit-enricher-api): Migrate all tests from JUnit4 to JUnit5 (#1557),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1557 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [ ] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1715,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1715,https://github.com/eclipse-jkube/jkube/pull/1715,closed,1428,1508,26,3,3,14,0,0,[],2022-08-20 16:23:30+00:00,2022-11-22 08:34:06+00:00,8093436.0,"93 days, 16:10:36","[{'comment_id': 952173476, 'comment_body': 'test cases for empty and null values are missing. You can use `@MethodSource` to accommodate null values here', 'comment_created': datetime.datetime(2022, 8, 23, 5, 44, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 952178189, 'comment_body': '```suggestion\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 23, 5, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 952182402, 'comment_body': '`null` test argument seems to be missing. You can use `@MethodSource` here', 'comment_created': datetime.datetime(2022, 8, 23, 6, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 952197257, 'comment_body': 'According to [JUnit5 docs](https://javadoc.io/doc/org.junit.jupiter/junit-jupiter-params/5.8.2/org/junit/jupiter/params/provider/NullSource.html) `@NullSource` is an ArgumentsSource which provides a single null argument to the annotated `@ParameterizedTest` method.', 'comment_created': datetime.datetime(2022, 8, 23, 6, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 952199192, 'comment_body': 'According to [JUnit5 docs](https://javadoc.io/doc/org.junit.jupiter/junit-jupiter-params/5.8.2/org/junit/jupiter/params/provider/NullAndEmptySource.html) `@NullAndEmptySource` is a composed annotation which provides a single null and empty argument to the annotated `@ParameterizedTest` method.', 'comment_created': datetime.datetime(2022, 8, 23, 6, 27, 53, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 952270046, 'comment_body': 'Sorry, I missed this annotation. Learned something new today :-) ', 'comment_created': datetime.datetime(2022, 8, 23, 7, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 952270335, 'comment_body': 'Sorry, I missed this annotation. Learned something new today :-)', 'comment_created': datetime.datetime(2022, 8, 23, 7, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 953358790, 'comment_body': 'getReplicaCount with {0} ({3} replicas)', 'comment_created': datetime.datetime(2022, 8, 24, 5, 17, 56, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 953454549, 'comment_body': ""Like in other PRs, you're grouping too many tests.\r\n\r\nKeep always in mind that tests should be readable and maintainable. For these tests, we end up not knowing what we're actually testing until you read the parameterized description. As stated in other reviews, you need to find the common denominator for the test cases to be able to parameterize the test with a description that uses place holders `fooBarMethodOrProcedureOrBehavior, with $baz, should do something expecting $qux.`"", 'comment_created': datetime.datetime(2022, 8, 24, 7, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 953462185, 'comment_body': 'type is always `NodePort` why is this a parameter?', 'comment_created': datetime.datetime(2022, 8, 24, 7, 44, 31, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 953463422, 'comment_body': 'What happened to this test?', 'comment_created': datetime.datetime(2022, 8, 24, 7, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 953681544, 'comment_body': ""whether we check for `null` protocol or `default`, we get `TCP` that's why this test has been parameterized into the `getServicesWithProtocol` test."", 'comment_created': datetime.datetime(2022, 8, 24, 11, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 953683252, 'comment_body': 'And this test is checking `type` instead of `null` protocol https://github.com/eclipse/jkube/blob/c4000c845647f1c280e0680c3c9d3e391d90b9e7/jkube-kit/enricher/api/src/test/java/org/eclipse/jkube/kit/enricher/handler/ServiceHandlerTest.java#L205-L223\r\n\r\nSo, should I remove it or rename it to `getServicesWithNullType` ?', 'comment_created': datetime.datetime(2022, 8, 24, 11, 37, 14, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 953854549, 'comment_body': 'Missed due to null and default protocol tests.', 'comment_created': datetime.datetime(2022, 8, 24, 14, 10, 27, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': '6951e1bcfeb8e513ae9589644cb98e46e7380c3c', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ce40cb71b06b74d4e23028efd44b9954c155f9c', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b728a7f367566ede487b5429480cf2bc3b4dd47', 'committer_username': 'manusa', 'committer_name': 'Marc Nuri', 'committer_email': 'marc@marcnuri.com', 'commit_date': datetime.datetime(2010, 11, 19, 12, 16, 4, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
1076057603,refactor (jkube-kit-spring-boot): Migrate tests from JUnit4 to JUnit5(#1570),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1570 


## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] My code follows the style guidelines of this project
 - [ ] I Keep It Small and Simple: The smaller the PR is, the easier it is to review and have it merged
 - [x] I use [conventional commits](https://www.conventionalcommits.org/) in my commit messages
 - [x] I have performed a self-review of my code
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I have added tests that prove my fix is effective or that my feature works
 - [x] New and existing unit tests pass locally with my changes
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->
",True,1777,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1777,https://github.com/eclipse-jkube/jkube/pull/1777,closed,164,260,4,2,4,0,0,0,[],2022-10-04 13:57:54+00:00,2022-11-17 10:55:53+00:00,3790679.0,"43 days, 20:57:59",[],"[{'commit_sha': '5ccd256cf366012be8944a096f8ba2c39f9b346a', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3f24e69c1b95ad1d149778bd9b7313b874d0abe', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
931198333,feat (jkube-kit/wildfly-jar): Add startup probe in WildFlyJARHealthCheckEnricher (#1474),"## Description
Fix: #1474

Signed-off-by: Anurag Singh Rajawat <anuragsinghrajawat22@gmail.com>
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->

## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [x] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [ ] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have implemented unit tests to cover my changes
 - [x] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->",True,1492,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1492,https://github.com/eclipse-jkube/jkube/pull/1492,closed,440,272,9,1,11,53,0,0,[],2022-05-09 13:46:21+00:00,2022-08-25 11:26:45+00:00,9322824.0,"107 days, 21:40:24","[{'comment_id': 874463417, 'comment_body': ""I see you've added a new periodSeconds config parameter. Why is it used only in case of startup probes?\r\n\r\nI see both blocks for ProbeBuilder look the same. Can we change it like this?\r\n\r\n```java\r\n            int port = getPort();\r\n            if (port <= 0) {\r\n                return null;\r\n            }\r\n            // scheme must be in upper case in k8s\r\n            String scheme = getScheme().toUpperCase();\r\n            int periodSeconds = getPeriodSeconds();\r\n\r\n            return new ProbeBuilder().withNewHttpGet()\r\n                .withNewPort(port).withPath(getProbePath(isReadiness, isStartup)).withScheme(scheme)\r\n                .endHttpGet()\r\n                .withFailureThreshold(getFailureThreshold())\r\n                .withSuccessThreshold(getSuccessThreshold())\r\n                .withInitialDelaySeconds(getInitialDelaySeonds(isReadiness, isStartup))\r\n                .withPeriodSeconds(periodSeconds)\r\n                .build();\r\n```"", 'comment_created': datetime.datetime(2022, 5, 17, 7, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 874464301, 'comment_body': 'Do you think we should also add a startupInitialDelay field?\r\n```\r\nSTARTUPINITIALDELAY(""startupInitialDelay"", ""10""),\r\n```', 'comment_created': datetime.datetime(2022, 5, 17, 7, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 874862300, 'comment_body': 'Actually, from [Kubernetes Docs](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes)\r\n\r\nI got to know how to configure these probes, and in that configuration file, there is a `periodSeconds` parameter,  and I was thinking should I add `startupInitialDelay` config parameter or `periodSeconds` then I thought `periodSeconds` is mentioned in the k8s docs so add it.', 'comment_created': datetime.datetime(2022, 5, 17, 14, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 874871433, 'comment_body': ""I'll refactor periodSeconds to startupInitialDelay"", 'comment_created': datetime.datetime(2022, 5, 17, 14, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 875467517, 'comment_body': 'Umm, from what I read in Kubernetes documentation `initialDelaySeconds` and `periodSeconds` are different fields. The former is wait period before performing the first probe and the latter is time interval between performing probes repeatedly.', 'comment_created': datetime.datetime(2022, 5, 18, 4, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 875468886, 'comment_body': ""Sorry, I didn't mean to remove `periodSeconds` but use it in the case of all three probes."", 'comment_created': datetime.datetime(2022, 5, 18, 5, 1, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 875737637, 'comment_body': 'Sorry for the misunderstanding and thanks for the clarification.', 'comment_created': datetime.datetime(2022, 5, 18, 10, 34, 23, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 875765940, 'comment_body': ""According to [Configure Probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes), the default value for `periodSeconds` is 10 and if we keep the default value then it's same as `startupInitialDelay` & `readinessInitialDelay` so, do we need to change any of these or keep the default?"", 'comment_created': datetime.datetime(2022, 5, 18, 11, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 875871650, 'comment_body': ""I think it's okay to keep the default values as provided by kubernetes. If the user needs to change these, an explicit configuration can be provided."", 'comment_created': datetime.datetime(2022, 5, 18, 13, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924466217, 'comment_body': ""I don't think this is required."", 'comment_created': datetime.datetime(2022, 7, 19, 12, 54, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924474298, 'comment_body': 'Add AssertJ to project and use assertj assertions here', 'comment_created': datetime.datetime(2022, 7, 19, 13, 2, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924474539, 'comment_body': 'Add AssertJ to project and use assertj assertions here', 'comment_created': datetime.datetime(2022, 7, 19, 13, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924479906, 'comment_body': '```suggestion\r\n  private List<Dependency> createNewJavaProjectDependencyList(String version) {\r\n```', 'comment_created': datetime.datetime(2022, 7, 19, 13, 7, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924486062, 'comment_body': '```suggestion\r\n                    .withScheme(getConfig(Config.SCHEME).toUpperCase())\r\n```', 'comment_created': datetime.datetime(2022, 7, 19, 13, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 924542840, 'comment_body': ""You shouldn't be changing existing test expectations. It was failing because we missed `toUpperCase` while parsing scheme"", 'comment_created': datetime.datetime(2022, 7, 19, 14, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 925696718, 'comment_body': 'Try to use chained assertions using assertj when asserting specific object. For example, here you can do something like this:\r\n\r\n```java\r\n        assertThat(probe)\r\n            .isNotNull()\r\n            .hasFieldOrPropertyWithValue(""httpGet.host"", null)\r\n            .hasFieldOrPropertyWithValue(""httpGet.scheme"", ""HTTPS"")\r\n            .hasFieldOrPropertyWithValue(""httpGet.port"", new IntOrString(1234))\r\n            .hasFieldOrPropertyWithValue(""httpGet.path"", ""/foo/live"")\r\n            .hasFieldOrPropertyWithValue(""initialDelaySeconds"", 99)\r\n            .hasFieldOrPropertyWithValue(""periodSeconds"",  10)\r\n            .hasFieldOrPropertyWithValue(""successThreshold"", 27)\r\n            .hasFieldOrPropertyWithValue(""failureThreshold"", 17);\r\n```', 'comment_created': datetime.datetime(2022, 7, 20, 14, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 925698210, 'comment_body': 'chain these assertions together like I suggested above', 'comment_created': datetime.datetime(2022, 7, 20, 14, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 925699095, 'comment_body': ""Sure, I'll do it wherever applicable"", 'comment_created': datetime.datetime(2022, 7, 20, 14, 45, 41, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 925700007, 'comment_body': ""I see there are a lot of places where we're asserting `Probe` contents. Do you think we should create a new method `assertProbe` that would receive probe to verify and expected values?"", 'comment_created': datetime.datetime(2022, 7, 20, 14, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 925717238, 'comment_body': 'It would be nice as it was done in  [Quarkus Test](https://github.com/eclipse/jkube/blob/0e8269d1a290a3542a1144a40310e9c39f69d566/jkube-kit/jkube-kit-quarkus/src/test/java/org/eclipse/jkube/quarkus/enricher/QuarkusHealthCheckEnricherTest.java#L285)', 'comment_created': datetime.datetime(2022, 7, 20, 15, 0, 13, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 925721161, 'comment_body': 'Thanks a lot :pray: . ', 'comment_created': datetime.datetime(2022, 7, 20, 15, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 926427365, 'comment_body': 'Should we do something like this?\r\n```java\r\n    private void assertProbe(Probe probe, String scheme, int port, String path, int initialDelaySeconds,\r\n                             int periodSeconds, int successThreshold, int failureThreshold) {\r\n        assertThat(probe)\r\n                .isNotNull()\r\n                .hasFieldOrPropertyWithValue(""httpGet.host"", null)\r\n                .hasFieldOrPropertyWithValue(""httpGet.scheme"", scheme)\r\n                .hasFieldOrPropertyWithValue(""httpGet.port"", new IntOrString(port))\r\n                .hasFieldOrPropertyWithValue(""httpGet.path"", path)\r\n                .hasFieldOrPropertyWithValue(""initialDelaySeconds"", initialDelaySeconds)\r\n                .hasFieldOrPropertyWithValue(""periodSeconds"",  periodSeconds)\r\n                .hasFieldOrPropertyWithValue(""successThreshold"", successThreshold)\r\n                .hasFieldOrPropertyWithValue(""failureThreshold"", failureThreshold);\r\n    }\r\n```', 'comment_created': datetime.datetime(2022, 7, 21, 8, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 926441978, 'comment_body': 'looks good, but I would move httpGet related assertions to another method `assertHttpGet` and use that here. I see some places where we only check httpGet. This method could be reused there as well.', 'comment_created': datetime.datetime(2022, 7, 21, 9, 8, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 936633549, 'comment_body': ""Considering that in the end we're passing the values extracted from configurations by following the same pattern in all of the `discoverWildflyJARHealthCheck` method calls, why not just pass the Configuration reference?\r\n\r\n```suggestion\r\n        return discoverWildflyJARHealthCheck(Config.READINESS_PATH, Config.READINESS_INITIAL_DELAY, Config.FAILURE_THRESHOLD, Config.SUCCESS_THRESHOLD, Config.READINESS_PERIOD_SECONDS);\r\n```"", 'comment_created': datetime.datetime(2022, 8, 3, 13, 0, 26, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936634089, 'comment_body': 'See comment about passing Configuration(s) instead of resolved values.', 'comment_created': datetime.datetime(2022, 8, 3, 13, 0, 56, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936634906, 'comment_body': 'is this variable used elsewhere? why not just evaluate in the if clause?', 'comment_created': datetime.datetime(2022, 8, 3, 13, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936636006, 'comment_body': 'Is this method still used?? I see we replaced the call to `getPort()` in the `discoverWildflyJARHealthCheck`, this method is probably useless now.', 'comment_created': datetime.datetime(2022, 8, 3, 13, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936636836, 'comment_body': 'Not used anymore.\r\n\r\n(Tests should be improved to test the actual Enricher behavior)', 'comment_created': datetime.datetime(2022, 8, 3, 13, 3, 32, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936638368, 'comment_body': 'Not used anymore.\r\n\r\n(Tests should be improved to test the actual Enricher behavior)', 'comment_created': datetime.datetime(2022, 8, 3, 13, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936639364, 'comment_body': 'Please use string literals and not constants here', 'comment_created': datetime.datetime(2022, 8, 3, 13, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936640161, 'comment_body': 'Maybe use a real JavaProject instance instead of a mocked one.', 'comment_created': datetime.datetime(2022, 8, 3, 13, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936640432, 'comment_body': 'Please use string literals and not constants', 'comment_created': datetime.datetime(2022, 8, 3, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936641811, 'comment_body': ""Don't reuse the variable:\r\n\r\n```java\r\nassertThat(enricher)\r\n  .returns(null, e -> e.getLivenessProbe())\r\n  .returns(null, e -> e.getReadinessProbe());\r\n```"", 'comment_created': datetime.datetime(2022, 8, 3, 13, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936642208, 'comment_body': ""Please, don't reuse the local variable"", 'comment_created': datetime.datetime(2022, 8, 3, 13, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936642691, 'comment_body': ""Please, don't reuse the local variable"", 'comment_created': datetime.datetime(2022, 8, 3, 13, 9, 13, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936643475, 'comment_body': 'Please combine the assertions', 'comment_created': datetime.datetime(2022, 8, 3, 13, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936643924, 'comment_body': 'Please use literals instead of constants here.', 'comment_created': datetime.datetime(2022, 8, 3, 13, 10, 20, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 936645365, 'comment_body': 'Please use literals instead of constants here', 'comment_created': datetime.datetime(2022, 8, 3, 13, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 938397845, 'comment_body': 'This and the other two methods `getLivenessPath()` and `getReadinessPath()` are only required for this test\r\nhttps://github.com/eclipse/jkube/blob/e643a0a28ffe520b3122a42cf01cf0792d4fd1ba/jkube-kit/jkube-kit-wildfly-jar/src/test/java/org/eclipse/jkube/wildfly/jar/enricher/WildflyJARHealthCheckEnricherTest.java#L195-L201', 'comment_created': datetime.datetime(2022, 8, 5, 2, 46, 24, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 938398648, 'comment_body': 'Do we really need this test? If yes then tell me how to test the actual Enricher behavior after removing these three methods.', 'comment_created': datetime.datetime(2022, 8, 5, 2, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 940927632, 'comment_body': ""This wasn't fixed\r\nWe still have a local variable declaration that is not needed. Why aren't we just consuming its instantiation value?\r\n\r\n```java\r\n        if (asBoolean(getConfig(Config.ENFORCE_PROBES))) {\r\n            return true;\r\n        }\r\n\r\n```"", 'comment_created': datetime.datetime(2022, 8, 9, 5, 59, 13, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 940928027, 'comment_body': 'Are you going to address this? Is there something else I can add or elaborate on to clarify what I mean?', 'comment_created': datetime.datetime(2022, 8, 9, 5, 59, 54, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 940929218, 'comment_body': ""Testing an unused method seems like something unnecessary.\r\nWe should refactor the test to actually verify something. IF we changed the implementation of the calling method to evaluate the ports, then refactor the test to verify that method.\r\n\r\n> Do we really need this test? \r\n\r\nThat's part of your assignment. You should try to evaluate what the class is actually doing and if the tests are verifying this behavior.\r\n"", 'comment_created': datetime.datetime(2022, 8, 9, 6, 1, 56, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 940929784, 'comment_body': 'I can still see the constants here', 'comment_created': datetime.datetime(2022, 8, 9, 6, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 940931434, 'comment_body': ""If you're using the resolution feature to track that you locally changed things, maybe use an emoji instead.\r\nIt makes it very hard for reviewers when you mark things as resolved but things haven't changed in the repo. Personally, I prefer to resolve the conversations so I can recall what I requested changes for (instead of expanding all of the conversations). "", 'comment_created': datetime.datetime(2022, 8, 9, 6, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 941018455, 'comment_body': '> Are you going to address this?\r\n\r\nYes\r\n\r\n\r\n> Is there something else I can add or elaborate on to clarify what I mean?\r\n\r\nNo\r\n', 'comment_created': datetime.datetime(2022, 8, 9, 7, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 941282554, 'comment_body': ""I'm not sure if you interpreted this from a comment in one of the tests.\r\n\r\n**Production code** should be using the constants, that's not a problem.\r\n\r\nHowever, the test code SHOULD NOT use the constants, especially if they are the same as the ones in the production code. The reason is simple, a change in the constant, will not make the test fail even though we've completely changed the specification constraint. Considering a test is used to verify a specification or a defined behavior, we should use either a literal, or if needed a variable defined in the same test (however, this might make the test less readable)."", 'comment_created': datetime.datetime(2022, 8, 9, 12, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 941283022, 'comment_body': ""I'm not sure if you interpreted this from a comment in one of the tests.\r\n\r\n**Production code** should be using the constants, that's not a problem.\r\n\r\nHowever, the test code SHOULD NOT use the constants, especially if they are the same as the ones in the production code. The reason is simple, a change in the constant, will not make the test fail even though we've completely changed the specification constraint. Considering a test is used to verify a specification or a defined behavior, we should use either a literal, or if needed a variable defined in the same test (however, this might make the test less readable)."", 'comment_created': datetime.datetime(2022, 8, 9, 12, 34, 45, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 941283143, 'comment_body': ""I'm not sure if you interpreted this from a comment in one of the tests.\r\n\r\n**Production code** should be using the constants, that's not a problem.\r\n\r\nHowever, the test code SHOULD NOT use the constants, especially if they are the same as the ones in the production code. The reason is simple, a change in the constant, will not make the test fail even though we've completely changed the specification constraint. Considering a test is used to verify a specification or a defined behavior, we should use either a literal, or if needed a variable defined in the same test (however, this might make the test less readable)."", 'comment_created': datetime.datetime(2022, 8, 9, 12, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 941293668, 'comment_body': ""This is not very readable, it's hard to say what the `99, 3, 1, 10` values mean.\r\n\r\nEspecially considering that these values are repeated:\r\nA simple replacement of the Config.READINESS_SUCCESS_THRESHOLD with the Config.STARTUP_SUCCESS_THRESHOLD in the `getReadinessProbe()` wouldn't make this test fail.\r\n\r\nAlso, some of these values are just the default, value, so a change in the first argument of the Config enum for READINESS_SUCCESS_THRESHOLD wouldn't make the test fail either."", 'comment_created': datetime.datetime(2022, 8, 9, 12, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 941333317, 'comment_body': 'Got it', 'comment_created': datetime.datetime(2022, 8, 9, 13, 21, 58, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 941334053, 'comment_body': 'Got it', 'comment_created': datetime.datetime(2022, 8, 9, 13, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 941334169, 'comment_body': 'Got it', 'comment_created': datetime.datetime(2022, 8, 9, 13, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}]","[{'commit_sha': 'efad8206a5d2f63526a2a454f2f4cb60b650e90a', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
949032796,feat (jkube-kit/quarkus): Add startup probe in QuarkusHealthCheckEnricher (#1468),"## Description
Fix: #1468 
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->

## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [x] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [ ] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [x] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [x] I have implemented unit tests to cover my changes
 - [x] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [ ] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->",True,1524,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1524,https://github.com/eclipse-jkube/jkube/pull/1524,closed,131,24,7,2,7,5,0,0,[],2022-05-27 07:48:08+00:00,2022-07-06 11:20:22+00:00,3468734.0,"40 days, 3:32:14","[{'comment_id': 893374738, 'comment_body': ""Maybe you should refactor test name from `isStartupEndpointSupported_withQuakursVersionAfter2_1_shouldReturnFalse` to \r\n`isStartupEndpointSupported_withQuakursVersionAfter2_1_shouldReturnTrue` because you're asserting opposite of name."", 'comment_created': datetime.datetime(2022, 6, 9, 11, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 893376322, 'comment_body': ""You're right. I'll update it."", 'comment_created': datetime.datetime(2022, 6, 9, 11, 14, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 913665524, 'comment_body': ""Could you please provide information on why we're checking for Quarkus 2.1 instead of Quarkus 2.0\r\n\r\nAFAIK Smallrye health was updated to 3.0 in this PR https://github.com/quarkusio/quarkus/pull/16333 which was released along with Quarkus 2.0\r\n\r\n\r\nhttps://github.com/eclipse/jkube/pull/1524#issuecomment-1149658415"", 'comment_created': datetime.datetime(2022, 7, 5, 10, 57, 53, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}, {'comment_id': 913681414, 'comment_body': 'Just tried again on a simple Quarkus project with SmallRYE dependency. These were my observations:\r\n\r\n- On 2.0.0.Final `/q/health/started` gives 404\r\n- On 2.1.0.Final `q/health/started` gives 200 OK', 'comment_created': datetime.datetime(2022, 7, 5, 11, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 914720309, 'comment_body': 'It seems that there was some work done on Quarkus in between the Smallrye dependency update and the startup probe wiring.', 'comment_created': datetime.datetime(2022, 7, 6, 11, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'manusa', 'type': 'User'}]","[{'commit_sha': '0dee201e42401551837f7a3104393e418e675e6c', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe21e30e25a1586cbbf423c99827a3be85db3a45', 'committer_username': 'rohanKanojia', 'committer_name': 'Rohan Kumar ', 'committer_email': 'rohaan@redhat.com', 'commit_date': datetime.datetime(2015, 8, 17, 14, 0, 47, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22
904857646,chore (quickstarts/kit): Port quarkus to gradle (#1431),"## Description
<!--
Thank you for your pull request (PR)!

Please provide a description of what your PR does providing a link (if applicable) to the issue it fixes.
-->
Fixes #1431 

## Type of change
<!---
What types of changes does your code introduce? Put an `x` in all the boxes that apply
-->
 - [ ] Bug fix (non-breaking change which fixes an issue)
 - [ ] Feature (non-breaking change which adds functionality)
 - [ ] Breaking change (fix or feature that would cause existing functionality to change
 - [x] Chore (non-breaking change which doesn't affect codebase;
   test, version modification, documentation, etc.)

## Checklist
 - [x] I have read the [contributing guidelines](https://www.eclipse.org/jkube/contributing)
 - [x] I signed-off my commit with a user that has signed the [Eclipse Contributor Agreement](https://www.eclipse.org/legal/ECA.php)
 - [ ] I Added [CHANGELOG](../CHANGELOG.md) entry
 - [ ] I have implemented unit tests to cover my changes
 - [ ] I have updated the [documentation](../kubernetes-maven-plugin/doc) accordingly
 - [x] No new bugs, code smells, etc. in [SonarCloud](https://sonarcloud.io/dashboard?id=jkubeio_jkube) report
 - [x] I tested my code in Kubernetes
 - [ ] I tested my code in OpenShift

<!--
Integration tests (https://github.com/jkubeio/jkube-integration-tests)
Please check integration tests and provide/improve tests if necessary.

Open your PR in Draft mode and verify all of the applicable Checklist items before marking your issue as ready
-->",True,1443,https://api.github.com/repos/eclipse-jkube/jkube/pulls/1443,https://github.com/eclipse-jkube/jkube/pull/1443,closed,616,0,12,1,5,3,0,0,[],2022-04-09 11:44:14+00:00,2022-05-16 12:10:47+00:00,3198393.0,"37 days, 0:26:33","[{'comment_id': 872375525, 'comment_body': 'Could you please add a small section about native mode as well?', 'comment_created': datetime.datetime(2022, 5, 13, 12, 59, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}, {'comment_id': 872499037, 'comment_body': 'How to do that?', 'comment_created': datetime.datetime(2022, 5, 13, 15, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anurag-rajawat', 'type': 'User'}, {'comment_id': 872577206, 'comment_body': ""In [quickstarts/maven/quarkus](https://github.com/eclipse/jkube/tree/master/quickstarts/maven/quarkus#native-mode) you had `native-docker` and `native-jib` profiles.\r\n\r\nI was wondering if we could have a small section about Native mode just like that here. We don't have concept of profiles in gradle but we can at least add some documentation for user. Native mode can be activated by two properties:\r\n```sh\r\n$ gradle clean build -Pquarkus.package.type=native -Pquarkus.native.remote-container.build=true\r\n```"", 'comment_created': datetime.datetime(2022, 5, 13, 16, 22, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rohanKanojia', 'type': 'User'}]","[{'commit_sha': '81bf58042cb608220c49d3e09d0eb1a0f5d52376', 'committer_username': 'anurag-rajawat', 'committer_name': 'Anurag Rajawat', 'committer_email': 'anuragsinghrajawat22@gmail.com', 'commit_date': datetime.datetime(2021, 11, 24, 14, 35, 15, tzinfo=datetime.timezone.utc)}]",Anurag Rajawat,94977678,anuragsinghrajawat22@gmail.com,User,,44,,0,22

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
216815773,jkube,eclipse-jkube/jkube,Java,473,724,13,267,2163,210,8,21,"[{'id': 1453243347, 'number': 2313, 'closed': datetime.datetime(2023, 7, 31, 9, 1, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 6, 5, 54, tzinfo=datetime.timezone.utc), 'time_taken': 269714.0, 'time_delta': '3 days, 2:55:14', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 1298544327, 'number': 2121, 'closed': datetime.datetime(2023, 4, 3, 14, 11, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 1, 3, 19, 55, tzinfo=datetime.timezone.utc), 'time_taken': 211887.0, 'time_delta': '2 days, 10:51:27', 'additions': 96, 'deletions': 2, 'state': 'closed'}, {'id': 1212291600, 'number': 2012, 'closed': datetime.datetime(2023, 3, 31, 5, 44, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 21, 6, 29, 6, tzinfo=datetime.timezone.utc), 'time_taken': 5958941.0, 'time_delta': '68 days, 23:15:41', 'additions': 279, 'deletions': 11, 'state': 'closed'}, {'id': 1176518782, 'number': 1976, 'closed': datetime.datetime(2023, 1, 3, 6, 45, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 23, 15, 17, 21, tzinfo=datetime.timezone.utc), 'time_taken': 919671.0, 'time_delta': '10 days, 15:27:51', 'additions': 1, 'deletions': 118, 'state': 'closed'}, {'id': 1139254456, 'number': 1949, 'closed': datetime.datetime(2023, 8, 24, 10, 50, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 29, 16, 47, 20, tzinfo=datetime.timezone.utc), 'time_taken': 23133803.0, 'time_delta': '267 days, 18:03:23', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 1131410506, 'number': 1930, 'closed': datetime.datetime(2022, 11, 22, 10, 26, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 22, 9, 10, 20, tzinfo=datetime.timezone.utc), 'time_taken': 4577.0, 'time_delta': '1:16:17', 'additions': 1, 'deletions': 15, 'state': 'closed'}, {'id': 1094930746, 'number': 1872, 'closed': datetime.datetime(2022, 11, 2, 7, 41, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 21, 7, 27, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1037641.0, 'time_delta': '12 days, 0:14:01', 'additions': 436, 'deletions': 584, 'state': 'closed'}, {'id': 1087420533, 'number': 1851, 'closed': datetime.datetime(2022, 11, 3, 11, 40, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 14, 12, 58, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1723327.0, 'time_delta': '19 days, 22:42:07', 'additions': 512, 'deletions': 482, 'state': 'closed'}, {'id': 1083444053, 'number': 1826, 'closed': datetime.datetime(2022, 11, 4, 10, 19, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 11, 14, 49, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2057411.0, 'time_delta': '23 days, 19:30:11', 'additions': 290, 'deletions': 316, 'state': 'closed'}, {'id': 1082029110, 'number': 1819, 'closed': datetime.datetime(2022, 11, 18, 10, 44, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 10, 13, 16, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3360525.0, 'time_delta': '38 days, 21:28:45', 'additions': 1224, 'deletions': 1440, 'state': 'closed'}, {'id': 1079861501, 'number': 1802, 'closed': datetime.datetime(2022, 10, 10, 13, 29, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 7, 4, 27, 28, tzinfo=datetime.timezone.utc), 'time_taken': 291709.0, 'time_delta': '3 days, 9:01:49', 'additions': 540, 'deletions': 552, 'state': 'closed'}, {'id': 1076057603, 'number': 1777, 'closed': datetime.datetime(2022, 11, 17, 10, 55, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 4, 13, 57, 54, tzinfo=datetime.timezone.utc), 'time_taken': 3790679.0, 'time_delta': '43 days, 20:57:59', 'additions': 164, 'deletions': 260, 'state': 'closed'}, {'id': 1074126415, 'number': 1776, 'closed': datetime.datetime(2022, 10, 10, 13, 29, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 3, 4, 19, 18, tzinfo=datetime.timezone.utc), 'time_taken': 637840.0, 'time_delta': '7 days, 9:10:40', 'additions': 398, 'deletions': 382, 'state': 'closed'}, {'id': 1063846760, 'number': 1765, 'closed': datetime.datetime(2022, 11, 7, 10, 25, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 22, 8, 47, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3980296.0, 'time_delta': '46 days, 1:38:16', 'additions': 198, 'deletions': 187, 'state': 'closed'}, {'id': 1062929076, 'number': 1761, 'closed': datetime.datetime(2022, 9, 22, 8, 7, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 21, 14, 17, 46, tzinfo=datetime.timezone.utc), 'time_taken': 64197.0, 'time_delta': '17:49:57', 'additions': 231, 'deletions': 251, 'state': 'closed'}, {'id': 1055700449, 'number': 1755, 'closed': datetime.datetime(2022, 10, 31, 10, 43, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 14, 8, 43, 59, tzinfo=datetime.timezone.utc), 'time_taken': 4067999.0, 'time_delta': '47 days, 1:59:59', 'additions': 527, 'deletions': 557, 'state': 'closed'}, {'id': 1055698575, 'number': 1754, 'closed': datetime.datetime(2022, 9, 22, 8, 35, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 14, 8, 42, 20, tzinfo=datetime.timezone.utc), 'time_taken': 690767.0, 'time_delta': '7 days, 23:52:47', 'additions': 121, 'deletions': 174, 'state': 'closed'}, {'id': 1049503689, 'number': 1743, 'closed': datetime.datetime(2022, 9, 19, 10, 1, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 8, 4, 34, 34, tzinfo=datetime.timezone.utc), 'time_taken': 970012.0, 'time_delta': '11 days, 5:26:52', 'additions': 292, 'deletions': 250, 'state': 'closed'}, {'id': 1031825552, 'number': 1715, 'closed': datetime.datetime(2022, 11, 22, 8, 34, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 20, 16, 23, 30, tzinfo=datetime.timezone.utc), 'time_taken': 8093436.0, 'time_delta': '93 days, 16:10:36', 'additions': 1428, 'deletions': 1508, 'state': 'closed'}, {'id': 1030769271, 'number': 1710, 'closed': datetime.datetime(2022, 8, 23, 6, 6, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 19, 6, 10, 46, tzinfo=datetime.timezone.utc), 'time_taken': 345360.0, 'time_delta': '3 days, 23:56:00', 'additions': 610, 'deletions': 672, 'state': 'closed'}, {'id': 1022752124, 'number': 1697, 'closed': datetime.datetime(2022, 8, 23, 6, 17, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 14, 0, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1095430.0, 'time_delta': '12 days, 16:17:10', 'additions': 62, 'deletions': 73, 'state': 'closed'}, {'id': 1022665750, 'number': 1696, 'closed': datetime.datetime(2022, 9, 5, 14, 31, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 12, 48, 26, tzinfo=datetime.timezone.utc), 'time_taken': 2252558.0, 'time_delta': '26 days, 1:42:38', 'additions': 714, 'deletions': 747, 'state': 'closed'}, {'id': 1021501584, 'number': 1695, 'closed': datetime.datetime(2022, 8, 10, 7, 5, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 13, 10, 3, tzinfo=datetime.timezone.utc), 'time_taken': 64538.0, 'time_delta': '17:55:38', 'additions': 49, 'deletions': 51, 'state': 'closed'}, {'id': 1021021148, 'number': 1694, 'closed': datetime.datetime(2022, 8, 10, 7, 5, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 4, 26, 57, tzinfo=datetime.timezone.utc), 'time_taken': 95894.0, 'time_delta': '1 day, 2:38:14', 'additions': 63, 'deletions': 69, 'state': 'closed'}, {'id': 1016516200, 'number': 1691, 'closed': datetime.datetime(2022, 10, 3, 13, 0, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 3, 15, 52, 6, tzinfo=datetime.timezone.utc), 'time_taken': 5260100.0, 'time_delta': '60 days, 21:08:20', 'additions': 557, 'deletions': 511, 'state': 'closed'}, {'id': 1015862574, 'number': 1688, 'closed': datetime.datetime(2022, 8, 9, 6, 17, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 3, 5, 45, 20, tzinfo=datetime.timezone.utc), 'time_taken': 520327.0, 'time_delta': '6 days, 0:32:07', 'additions': 70, 'deletions': 76, 'state': 'closed'}, {'id': 1015212247, 'number': 1687, 'closed': datetime.datetime(2022, 8, 3, 5, 27, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 14, 43, tzinfo=datetime.timezone.utc), 'time_taken': 53099.0, 'time_delta': '14:44:59', 'additions': 23, 'deletions': 20, 'state': 'closed'}, {'id': 1014917060, 'number': 1685, 'closed': datetime.datetime(2022, 8, 3, 5, 16, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 10, 17, 16, tzinfo=datetime.timezone.utc), 'time_taken': 68358.0, 'time_delta': '18:59:18', 'additions': 45, 'deletions': 52, 'state': 'closed'}, {'id': 1013446888, 'number': 1682, 'closed': datetime.datetime(2022, 8, 2, 9, 19, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 1, 7, 17, tzinfo=datetime.timezone.utc), 'time_taken': 93761.0, 'time_delta': '1 day, 2:02:41', 'additions': 64, 'deletions': 57, 'state': 'closed'}, {'id': 1011844770, 'number': 1678, 'closed': datetime.datetime(2022, 8, 2, 9, 20, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 10, 51, 54, tzinfo=datetime.timezone.utc), 'time_taken': 340096.0, 'time_delta': '3 days, 22:28:16', 'additions': 31, 'deletions': 29, 'state': 'closed'}, {'id': 1011805945, 'number': 1677, 'closed': datetime.datetime(2022, 8, 2, 9, 19, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 10, 28, 59, tzinfo=datetime.timezone.utc), 'time_taken': 341455.0, 'time_delta': '3 days, 22:50:55', 'additions': 11, 'deletions': 12, 'state': 'closed'}, {'id': 1010401475, 'number': 1676, 'closed': datetime.datetime(2022, 7, 29, 8, 27, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 28, 6, 17, 44, tzinfo=datetime.timezone.utc), 'time_taken': 94202.0, 'time_delta': '1 day, 2:10:02', 'additions': 53, 'deletions': 58, 'state': 'closed'}, {'id': 1009823235, 'number': 1675, 'closed': datetime.datetime(2022, 7, 29, 7, 16, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 15, 36, 22, tzinfo=datetime.timezone.utc), 'time_taken': 142829.0, 'time_delta': '1 day, 15:40:29', 'additions': 168, 'deletions': 160, 'state': 'closed'}, {'id': 1005137252, 'number': 1665, 'closed': datetime.datetime(2022, 7, 28, 5, 24, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 5, 21, 38, tzinfo=datetime.timezone.utc), 'time_taken': 518557.0, 'time_delta': '6 days, 0:02:37', 'additions': 20, 'deletions': 23, 'state': 'closed'}, {'id': 1001970341, 'number': 1664, 'closed': datetime.datetime(2022, 7, 25, 7, 46, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 10, 57, 8, tzinfo=datetime.timezone.utc), 'time_taken': 420574.0, 'time_delta': '4 days, 20:49:34', 'additions': 86, 'deletions': 111, 'state': 'closed'}, {'id': 997381121, 'number': 1659, 'closed': datetime.datetime(2022, 7, 20, 15, 19, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 5, 50, 52, tzinfo=datetime.timezone.utc), 'time_taken': 466095.0, 'time_delta': '5 days, 9:28:15', 'additions': 248, 'deletions': 333, 'state': 'closed'}, {'id': 983517530, 'number': 1641, 'closed': datetime.datetime(2022, 7, 14, 9, 37, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 30, 8, 16, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1214464.0, 'time_delta': '14 days, 1:21:04', 'additions': 183, 'deletions': 184, 'state': 'closed'}, {'id': 977351933, 'number': 1629, 'closed': datetime.datetime(2022, 7, 11, 8, 15, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 23, 15, 52, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1527775.0, 'time_delta': '17 days, 16:22:55', 'additions': 58, 'deletions': 17, 'state': 'closed'}, {'id': 970400669, 'number': 1621, 'closed': datetime.datetime(2022, 7, 21, 9, 40, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 17, 9, 11, 29, tzinfo=datetime.timezone.utc), 'time_taken': 2939328.0, 'time_delta': '34 days, 0:28:48', 'additions': 1231, 'deletions': 1524, 'state': 'closed'}, {'id': 968046049, 'number': 1616, 'closed': datetime.datetime(2022, 6, 17, 7, 49, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 11, 24, 36, tzinfo=datetime.timezone.utc), 'time_taken': 159875.0, 'time_delta': '1 day, 20:24:35', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 966782565, 'number': 1550, 'closed': datetime.datetime(2022, 6, 15, 10, 45, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 14, 11, 7, 13, tzinfo=datetime.timezone.utc), 'time_taken': 85112.0, 'time_delta': '23:38:32', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 949032796, 'number': 1524, 'closed': datetime.datetime(2022, 7, 6, 11, 20, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 27, 7, 48, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3468734.0, 'time_delta': '40 days, 3:32:14', 'additions': 131, 'deletions': 24, 'state': 'closed'}, {'id': 935788515, 'number': 1497, 'closed': datetime.datetime(2022, 5, 18, 10, 36, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 13, 10, 50, 53, tzinfo=datetime.timezone.utc), 'time_taken': 431130.0, 'time_delta': '4 days, 23:45:30', 'additions': 48, 'deletions': 40, 'state': 'closed'}, {'id': 935599701, 'number': 1496, 'closed': datetime.datetime(2022, 5, 18, 10, 37, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 13, 7, 50, 2, tzinfo=datetime.timezone.utc), 'time_taken': 442055.0, 'time_delta': '5 days, 2:47:35', 'additions': 109, 'deletions': 116, 'state': 'closed'}, {'id': 931198333, 'number': 1492, 'closed': datetime.datetime(2022, 8, 25, 11, 26, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 9, 13, 46, 21, tzinfo=datetime.timezone.utc), 'time_taken': 9322824.0, 'time_delta': '107 days, 21:40:24', 'additions': 440, 'deletions': 272, 'state': 'closed'}, {'id': 909666929, 'number': 1453, 'closed': datetime.datetime(2022, 4, 28, 9, 42, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 14, 7, 39, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1217024.0, 'time_delta': '14 days, 2:03:44', 'additions': 15, 'deletions': 16, 'state': 'closed'}, {'id': 904857646, 'number': 1443, 'closed': datetime.datetime(2022, 5, 16, 12, 10, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 9, 11, 44, 14, tzinfo=datetime.timezone.utc), 'time_taken': 3198393.0, 'time_delta': '37 days, 0:26:33', 'additions': 616, 'deletions': 0, 'state': 'closed'}, {'id': 903503438, 'number': 1435, 'closed': datetime.datetime(2022, 5, 12, 16, 35, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 8, 7, 9, 38, tzinfo=datetime.timezone.utc), 'time_taken': 2971533.0, 'time_delta': '34 days, 9:25:33', 'additions': 1, 'deletions': 7, 'state': 'closed'}, {'id': 885650247, 'number': 1375, 'closed': datetime.datetime(2022, 3, 22, 10, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 22, 6, 27, 12, tzinfo=datetime.timezone.utc), 'time_taken': 14748.0, 'time_delta': '4:05:48', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 883934232, 'number': 1366, 'closed': datetime.datetime(2022, 4, 12, 5, 38, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 19, 8, 7, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2064674.0, 'time_delta': '23 days, 21:31:14', 'additions': 275, 'deletions': 300, 'state': 'closed'}, {'id': 880204063, 'number': 1350, 'closed': datetime.datetime(2022, 3, 21, 16, 56, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 15, 13, 47, 18, tzinfo=datetime.timezone.utc), 'time_taken': 529743.0, 'time_delta': '6 days, 3:09:03', 'additions': 17, 'deletions': 16, 'state': 'closed'}, {'id': 879953276, 'number': 1348, 'closed': datetime.datetime(2022, 3, 21, 13, 45, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 15, 9, 37, 9, tzinfo=datetime.timezone.utc), 'time_taken': 533306.0, 'time_delta': '6 days, 4:08:26', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 879896570, 'number': 1346, 'closed': datetime.datetime(2022, 3, 21, 14, 41, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 15, 8, 33, 10, tzinfo=datetime.timezone.utc), 'time_taken': 540486.0, 'time_delta': '6 days, 6:08:06', 'additions': 13, 'deletions': 16, 'state': 'closed'}]"
216815773,jkube,eclipse-jkube/jkube,Java,473,724,13,267,2163,210,8,21,"[{'id': 1453243347, 'number': 2313, 'closed': datetime.datetime(2023, 7, 31, 9, 1, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 6, 5, 54, tzinfo=datetime.timezone.utc), 'time_taken': 269714.0, 'time_delta': '3 days, 2:55:14', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 1298544327, 'number': 2121, 'closed': datetime.datetime(2023, 4, 3, 14, 11, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 1, 3, 19, 55, tzinfo=datetime.timezone.utc), 'time_taken': 211887.0, 'time_delta': '2 days, 10:51:27', 'additions': 96, 'deletions': 2, 'state': 'closed'}, {'id': 1212291600, 'number': 2012, 'closed': datetime.datetime(2023, 3, 31, 5, 44, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 21, 6, 29, 6, tzinfo=datetime.timezone.utc), 'time_taken': 5958941.0, 'time_delta': '68 days, 23:15:41', 'additions': 279, 'deletions': 11, 'state': 'closed'}, {'id': 1176518782, 'number': 1976, 'closed': datetime.datetime(2023, 1, 3, 6, 45, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 23, 15, 17, 21, tzinfo=datetime.timezone.utc), 'time_taken': 919671.0, 'time_delta': '10 days, 15:27:51', 'additions': 1, 'deletions': 118, 'state': 'closed'}, {'id': 1139254456, 'number': 1949, 'closed': datetime.datetime(2023, 8, 24, 10, 50, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 29, 16, 47, 20, tzinfo=datetime.timezone.utc), 'time_taken': 23133803.0, 'time_delta': '267 days, 18:03:23', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 1131410506, 'number': 1930, 'closed': datetime.datetime(2022, 11, 22, 10, 26, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 22, 9, 10, 20, tzinfo=datetime.timezone.utc), 'time_taken': 4577.0, 'time_delta': '1:16:17', 'additions': 1, 'deletions': 15, 'state': 'closed'}, {'id': 1094930746, 'number': 1872, 'closed': datetime.datetime(2022, 11, 2, 7, 41, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 21, 7, 27, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1037641.0, 'time_delta': '12 days, 0:14:01', 'additions': 436, 'deletions': 584, 'state': 'closed'}, {'id': 1087420533, 'number': 1851, 'closed': datetime.datetime(2022, 11, 3, 11, 40, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 14, 12, 58, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1723327.0, 'time_delta': '19 days, 22:42:07', 'additions': 512, 'deletions': 482, 'state': 'closed'}, {'id': 1083444053, 'number': 1826, 'closed': datetime.datetime(2022, 11, 4, 10, 19, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 11, 14, 49, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2057411.0, 'time_delta': '23 days, 19:30:11', 'additions': 290, 'deletions': 316, 'state': 'closed'}, {'id': 1082029110, 'number': 1819, 'closed': datetime.datetime(2022, 11, 18, 10, 44, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 10, 13, 16, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3360525.0, 'time_delta': '38 days, 21:28:45', 'additions': 1224, 'deletions': 1440, 'state': 'closed'}, {'id': 1079861501, 'number': 1802, 'closed': datetime.datetime(2022, 10, 10, 13, 29, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 7, 4, 27, 28, tzinfo=datetime.timezone.utc), 'time_taken': 291709.0, 'time_delta': '3 days, 9:01:49', 'additions': 540, 'deletions': 552, 'state': 'closed'}, {'id': 1076057603, 'number': 1777, 'closed': datetime.datetime(2022, 11, 17, 10, 55, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 4, 13, 57, 54, tzinfo=datetime.timezone.utc), 'time_taken': 3790679.0, 'time_delta': '43 days, 20:57:59', 'additions': 164, 'deletions': 260, 'state': 'closed'}, {'id': 1074126415, 'number': 1776, 'closed': datetime.datetime(2022, 10, 10, 13, 29, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 3, 4, 19, 18, tzinfo=datetime.timezone.utc), 'time_taken': 637840.0, 'time_delta': '7 days, 9:10:40', 'additions': 398, 'deletions': 382, 'state': 'closed'}, {'id': 1063846760, 'number': 1765, 'closed': datetime.datetime(2022, 11, 7, 10, 25, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 22, 8, 47, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3980296.0, 'time_delta': '46 days, 1:38:16', 'additions': 198, 'deletions': 187, 'state': 'closed'}, {'id': 1062929076, 'number': 1761, 'closed': datetime.datetime(2022, 9, 22, 8, 7, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 21, 14, 17, 46, tzinfo=datetime.timezone.utc), 'time_taken': 64197.0, 'time_delta': '17:49:57', 'additions': 231, 'deletions': 251, 'state': 'closed'}, {'id': 1055700449, 'number': 1755, 'closed': datetime.datetime(2022, 10, 31, 10, 43, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 14, 8, 43, 59, tzinfo=datetime.timezone.utc), 'time_taken': 4067999.0, 'time_delta': '47 days, 1:59:59', 'additions': 527, 'deletions': 557, 'state': 'closed'}, {'id': 1055698575, 'number': 1754, 'closed': datetime.datetime(2022, 9, 22, 8, 35, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 14, 8, 42, 20, tzinfo=datetime.timezone.utc), 'time_taken': 690767.0, 'time_delta': '7 days, 23:52:47', 'additions': 121, 'deletions': 174, 'state': 'closed'}, {'id': 1049503689, 'number': 1743, 'closed': datetime.datetime(2022, 9, 19, 10, 1, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 8, 4, 34, 34, tzinfo=datetime.timezone.utc), 'time_taken': 970012.0, 'time_delta': '11 days, 5:26:52', 'additions': 292, 'deletions': 250, 'state': 'closed'}, {'id': 1031825552, 'number': 1715, 'closed': datetime.datetime(2022, 11, 22, 8, 34, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 20, 16, 23, 30, tzinfo=datetime.timezone.utc), 'time_taken': 8093436.0, 'time_delta': '93 days, 16:10:36', 'additions': 1428, 'deletions': 1508, 'state': 'closed'}, {'id': 1030769271, 'number': 1710, 'closed': datetime.datetime(2022, 8, 23, 6, 6, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 19, 6, 10, 46, tzinfo=datetime.timezone.utc), 'time_taken': 345360.0, 'time_delta': '3 days, 23:56:00', 'additions': 610, 'deletions': 672, 'state': 'closed'}, {'id': 1022752124, 'number': 1697, 'closed': datetime.datetime(2022, 8, 23, 6, 17, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 14, 0, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1095430.0, 'time_delta': '12 days, 16:17:10', 'additions': 62, 'deletions': 73, 'state': 'closed'}, {'id': 1022665750, 'number': 1696, 'closed': datetime.datetime(2022, 9, 5, 14, 31, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 12, 48, 26, tzinfo=datetime.timezone.utc), 'time_taken': 2252558.0, 'time_delta': '26 days, 1:42:38', 'additions': 714, 'deletions': 747, 'state': 'closed'}, {'id': 1021501584, 'number': 1695, 'closed': datetime.datetime(2022, 8, 10, 7, 5, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 13, 10, 3, tzinfo=datetime.timezone.utc), 'time_taken': 64538.0, 'time_delta': '17:55:38', 'additions': 49, 'deletions': 51, 'state': 'closed'}, {'id': 1021021148, 'number': 1694, 'closed': datetime.datetime(2022, 8, 10, 7, 5, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 4, 26, 57, tzinfo=datetime.timezone.utc), 'time_taken': 95894.0, 'time_delta': '1 day, 2:38:14', 'additions': 63, 'deletions': 69, 'state': 'closed'}, {'id': 1016516200, 'number': 1691, 'closed': datetime.datetime(2022, 10, 3, 13, 0, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 3, 15, 52, 6, tzinfo=datetime.timezone.utc), 'time_taken': 5260100.0, 'time_delta': '60 days, 21:08:20', 'additions': 557, 'deletions': 511, 'state': 'closed'}, {'id': 1015862574, 'number': 1688, 'closed': datetime.datetime(2022, 8, 9, 6, 17, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 3, 5, 45, 20, tzinfo=datetime.timezone.utc), 'time_taken': 520327.0, 'time_delta': '6 days, 0:32:07', 'additions': 70, 'deletions': 76, 'state': 'closed'}, {'id': 1015212247, 'number': 1687, 'closed': datetime.datetime(2022, 8, 3, 5, 27, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 14, 43, tzinfo=datetime.timezone.utc), 'time_taken': 53099.0, 'time_delta': '14:44:59', 'additions': 23, 'deletions': 20, 'state': 'closed'}, {'id': 1014917060, 'number': 1685, 'closed': datetime.datetime(2022, 8, 3, 5, 16, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 10, 17, 16, tzinfo=datetime.timezone.utc), 'time_taken': 68358.0, 'time_delta': '18:59:18', 'additions': 45, 'deletions': 52, 'state': 'closed'}, {'id': 1013446888, 'number': 1682, 'closed': datetime.datetime(2022, 8, 2, 9, 19, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 1, 7, 17, tzinfo=datetime.timezone.utc), 'time_taken': 93761.0, 'time_delta': '1 day, 2:02:41', 'additions': 64, 'deletions': 57, 'state': 'closed'}, {'id': 1011844770, 'number': 1678, 'closed': datetime.datetime(2022, 8, 2, 9, 20, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 10, 51, 54, tzinfo=datetime.timezone.utc), 'time_taken': 340096.0, 'time_delta': '3 days, 22:28:16', 'additions': 31, 'deletions': 29, 'state': 'closed'}, {'id': 1011805945, 'number': 1677, 'closed': datetime.datetime(2022, 8, 2, 9, 19, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 10, 28, 59, tzinfo=datetime.timezone.utc), 'time_taken': 341455.0, 'time_delta': '3 days, 22:50:55', 'additions': 11, 'deletions': 12, 'state': 'closed'}, {'id': 1010401475, 'number': 1676, 'closed': datetime.datetime(2022, 7, 29, 8, 27, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 28, 6, 17, 44, tzinfo=datetime.timezone.utc), 'time_taken': 94202.0, 'time_delta': '1 day, 2:10:02', 'additions': 53, 'deletions': 58, 'state': 'closed'}, {'id': 1009823235, 'number': 1675, 'closed': datetime.datetime(2022, 7, 29, 7, 16, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 15, 36, 22, tzinfo=datetime.timezone.utc), 'time_taken': 142829.0, 'time_delta': '1 day, 15:40:29', 'additions': 168, 'deletions': 160, 'state': 'closed'}, {'id': 1005137252, 'number': 1665, 'closed': datetime.datetime(2022, 7, 28, 5, 24, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 5, 21, 38, tzinfo=datetime.timezone.utc), 'time_taken': 518557.0, 'time_delta': '6 days, 0:02:37', 'additions': 20, 'deletions': 23, 'state': 'closed'}, {'id': 1001970341, 'number': 1664, 'closed': datetime.datetime(2022, 7, 25, 7, 46, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 10, 57, 8, tzinfo=datetime.timezone.utc), 'time_taken': 420574.0, 'time_delta': '4 days, 20:49:34', 'additions': 86, 'deletions': 111, 'state': 'closed'}, {'id': 997381121, 'number': 1659, 'closed': datetime.datetime(2022, 7, 20, 15, 19, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 5, 50, 52, tzinfo=datetime.timezone.utc), 'time_taken': 466095.0, 'time_delta': '5 days, 9:28:15', 'additions': 248, 'deletions': 333, 'state': 'closed'}, {'id': 983517530, 'number': 1641, 'closed': datetime.datetime(2022, 7, 14, 9, 37, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 30, 8, 16, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1214464.0, 'time_delta': '14 days, 1:21:04', 'additions': 183, 'deletions': 184, 'state': 'closed'}, {'id': 977351933, 'number': 1629, 'closed': datetime.datetime(2022, 7, 11, 8, 15, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 23, 15, 52, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1527775.0, 'time_delta': '17 days, 16:22:55', 'additions': 58, 'deletions': 17, 'state': 'closed'}, {'id': 970400669, 'number': 1621, 'closed': datetime.datetime(2022, 7, 21, 9, 40, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 17, 9, 11, 29, tzinfo=datetime.timezone.utc), 'time_taken': 2939328.0, 'time_delta': '34 days, 0:28:48', 'additions': 1231, 'deletions': 1524, 'state': 'closed'}, {'id': 968046049, 'number': 1616, 'closed': datetime.datetime(2022, 6, 17, 7, 49, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 11, 24, 36, tzinfo=datetime.timezone.utc), 'time_taken': 159875.0, 'time_delta': '1 day, 20:24:35', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 966782565, 'number': 1550, 'closed': datetime.datetime(2022, 6, 15, 10, 45, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 14, 11, 7, 13, tzinfo=datetime.timezone.utc), 'time_taken': 85112.0, 'time_delta': '23:38:32', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 949032796, 'number': 1524, 'closed': datetime.datetime(2022, 7, 6, 11, 20, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 27, 7, 48, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3468734.0, 'time_delta': '40 days, 3:32:14', 'additions': 131, 'deletions': 24, 'state': 'closed'}, {'id': 935788515, 'number': 1497, 'closed': datetime.datetime(2022, 5, 18, 10, 36, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 13, 10, 50, 53, tzinfo=datetime.timezone.utc), 'time_taken': 431130.0, 'time_delta': '4 days, 23:45:30', 'additions': 48, 'deletions': 40, 'state': 'closed'}, {'id': 935599701, 'number': 1496, 'closed': datetime.datetime(2022, 5, 18, 10, 37, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 13, 7, 50, 2, tzinfo=datetime.timezone.utc), 'time_taken': 442055.0, 'time_delta': '5 days, 2:47:35', 'additions': 109, 'deletions': 116, 'state': 'closed'}, {'id': 931198333, 'number': 1492, 'closed': datetime.datetime(2022, 8, 25, 11, 26, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 9, 13, 46, 21, tzinfo=datetime.timezone.utc), 'time_taken': 9322824.0, 'time_delta': '107 days, 21:40:24', 'additions': 440, 'deletions': 272, 'state': 'closed'}, {'id': 909666929, 'number': 1453, 'closed': datetime.datetime(2022, 4, 28, 9, 42, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 14, 7, 39, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1217024.0, 'time_delta': '14 days, 2:03:44', 'additions': 15, 'deletions': 16, 'state': 'closed'}, {'id': 904857646, 'number': 1443, 'closed': datetime.datetime(2022, 5, 16, 12, 10, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 9, 11, 44, 14, tzinfo=datetime.timezone.utc), 'time_taken': 3198393.0, 'time_delta': '37 days, 0:26:33', 'additions': 616, 'deletions': 0, 'state': 'closed'}, {'id': 903503438, 'number': 1435, 'closed': datetime.datetime(2022, 5, 12, 16, 35, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 8, 7, 9, 38, tzinfo=datetime.timezone.utc), 'time_taken': 2971533.0, 'time_delta': '34 days, 9:25:33', 'additions': 1, 'deletions': 7, 'state': 'closed'}, {'id': 885650247, 'number': 1375, 'closed': datetime.datetime(2022, 3, 22, 10, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 22, 6, 27, 12, tzinfo=datetime.timezone.utc), 'time_taken': 14748.0, 'time_delta': '4:05:48', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 883934232, 'number': 1366, 'closed': datetime.datetime(2022, 4, 12, 5, 38, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 19, 8, 7, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2064674.0, 'time_delta': '23 days, 21:31:14', 'additions': 275, 'deletions': 300, 'state': 'closed'}, {'id': 880204063, 'number': 1350, 'closed': datetime.datetime(2022, 3, 21, 16, 56, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 15, 13, 47, 18, tzinfo=datetime.timezone.utc), 'time_taken': 529743.0, 'time_delta': '6 days, 3:09:03', 'additions': 17, 'deletions': 16, 'state': 'closed'}, {'id': 879953276, 'number': 1348, 'closed': datetime.datetime(2022, 3, 21, 13, 45, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 15, 9, 37, 9, tzinfo=datetime.timezone.utc), 'time_taken': 533306.0, 'time_delta': '6 days, 4:08:26', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 879896570, 'number': 1346, 'closed': datetime.datetime(2022, 3, 21, 14, 41, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 15, 8, 33, 10, tzinfo=datetime.timezone.utc), 'time_taken': 540486.0, 'time_delta': '6 days, 6:08:06', 'additions': 13, 'deletions': 16, 'state': 'closed'}]"
