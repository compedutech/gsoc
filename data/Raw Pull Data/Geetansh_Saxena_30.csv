pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
633142200,"PR: Implement parsers for ""Sekonic"" and ""UPRTek"" ""Pseudo XLS""/""CSV"" files.",Fixes #796.,True,813,https://api.github.com/repos/colour-science/colour/pulls/813,https://github.com/colour-science/colour/pull/813,closed,3042,5,7,7,7,22,0,0,[],2021-05-07 17:42:03+00:00,2021-07-12 08:55:44+00:00,5670821.0,"65 days, 15:13:41","[{'comment_id': 659604105, 'comment_body': 'Should be put in alphabetic order.', 'comment_created': datetime.datetime(2021, 6, 28, 8, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659604248, 'comment_body': 'Likewise! :)', 'comment_created': datetime.datetime(2021, 6, 28, 8, 57, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659606242, 'comment_body': 'Careful, the old `sekonic.py` and `uprtek.py` files still exist:\r\n\r\n![image](https://user-images.githubusercontent.com/99779/123609400-bb3aa500-d853-11eb-86be-16c1f8c69404.png)\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 8, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659606496, 'comment_body': 'Old import from old files!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659606856, 'comment_body': 'That file should be removed now!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659610891, 'comment_body': 'Pedantry but might want a line break for consistency here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 6, 23, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659611144, 'comment_body': 'Alphabetical ordering please!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659612012, 'comment_body': 'Need the `__all__` attribute here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659612324, 'comment_body': 'Single quotes everywhere for consistency please.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659613818, 'comment_body': '```\r\n        """"""\r\n        Tests :attr:`colour.io.uprtek_sekonic.\\\r\nSpectralDistribution_IESTM2714.write` method.\r\n        """"""\r\n```', 'comment_created': datetime.datetime(2021, 6, 28, 9, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659614369, 'comment_body': 'Would be useful to have some tests for the **Sekonic** class too.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659614749, 'comment_body': 'This file can go too!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659618239, 'comment_body': 'Need standard header!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659618497, 'comment_body': 'Needs standard attributes.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 16, 41, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659620694, 'comment_body': 'Given subsequent indentation, those must be breaking in doctests.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 19, 44, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659622621, 'comment_body': 'This is executed, so we would like a `  # doctest: +SKIP` here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 22, 13, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659623090, 'comment_body': 'Single quote please!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659623556, 'comment_body': 'Ditto of the doctests.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659624703, 'comment_body': 'Might want a single line docstring here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659625318, 'comment_body': 'Will need docstrings, doctests and  unit tests here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 25, 52, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 660400316, 'comment_body': '1. I had a doubt. For the UPRTek parser, since we are inheriting the `write` method, and not modifying it in the child class in any way, do I still need to write unit tests for it?\r\n2. The same for the Sekonic parser. Since we are not introducing any new methods in it, do I still need to write unit tests for it? I left the docstring, doctests and unit tests for sekonic because I had this doubt. \r\n3. Also, since there are two different spectral data that we get in a sekonic csv file, how do we access the other one?', 'comment_created': datetime.datetime(2021, 6, 29, 8, 34, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SGeetansh', 'type': 'User'}, {'comment_id': 661272083, 'comment_body': '1. All good with the write method, we can do without!\r\n2. Same for the write method, however, we need basic testing to be sure that it works.\r\n3. All good to lose one.', 'comment_created': datetime.datetime(2021, 6, 30, 9, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}]","[{'commit_sha': 'd928a57eed489686e73c98283a67e591e2110da0', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6314dcadc5e3b88f259544bd61677c45dc23990d', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b19f8516fe2c44b12f0eb58d9c78adc96b96018', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec2f9db048565f5941e54ba205d2d03e45fe7f8e', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39244812207cc2de7212c03c64e5c312b8f929b8', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e91eefd34aa4998026875bf011a38ae53f0e267', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebca27609b8823fc1c1789b11cfd1f491117079e', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}]",Geetansh Saxena,43946936,saxenageetansh1@gmail.com,User,,24,,0,24
633142200,"PR: Implement parsers for ""Sekonic"" and ""UPRTek"" ""Pseudo XLS""/""CSV"" files.",Fixes #796.,True,813,https://api.github.com/repos/colour-science/colour/pulls/813,https://github.com/colour-science/colour/pull/813,closed,3042,5,7,7,7,22,0,0,[],2021-05-07 17:42:03+00:00,2021-07-12 08:55:44+00:00,5670821.0,"65 days, 15:13:41","[{'comment_id': 659604105, 'comment_body': 'Should be put in alphabetic order.', 'comment_created': datetime.datetime(2021, 6, 28, 8, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659604248, 'comment_body': 'Likewise! :)', 'comment_created': datetime.datetime(2021, 6, 28, 8, 57, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659606242, 'comment_body': 'Careful, the old `sekonic.py` and `uprtek.py` files still exist:\r\n\r\n![image](https://user-images.githubusercontent.com/99779/123609400-bb3aa500-d853-11eb-86be-16c1f8c69404.png)\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 8, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659606496, 'comment_body': 'Old import from old files!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659606856, 'comment_body': 'That file should be removed now!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659610891, 'comment_body': 'Pedantry but might want a line break for consistency here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 6, 23, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659611144, 'comment_body': 'Alphabetical ordering please!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659612012, 'comment_body': 'Need the `__all__` attribute here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659612324, 'comment_body': 'Single quotes everywhere for consistency please.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659613818, 'comment_body': '```\r\n        """"""\r\n        Tests :attr:`colour.io.uprtek_sekonic.\\\r\nSpectralDistribution_IESTM2714.write` method.\r\n        """"""\r\n```', 'comment_created': datetime.datetime(2021, 6, 28, 9, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659614369, 'comment_body': 'Would be useful to have some tests for the **Sekonic** class too.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659614749, 'comment_body': 'This file can go too!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659618239, 'comment_body': 'Need standard header!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659618497, 'comment_body': 'Needs standard attributes.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 16, 41, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659620694, 'comment_body': 'Given subsequent indentation, those must be breaking in doctests.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 19, 44, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659622621, 'comment_body': 'This is executed, so we would like a `  # doctest: +SKIP` here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 22, 13, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659623090, 'comment_body': 'Single quote please!', 'comment_created': datetime.datetime(2021, 6, 28, 9, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659623556, 'comment_body': 'Ditto of the doctests.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659624703, 'comment_body': 'Might want a single line docstring here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659625318, 'comment_body': 'Will need docstrings, doctests and  unit tests here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 25, 52, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 660400316, 'comment_body': '1. I had a doubt. For the UPRTek parser, since we are inheriting the `write` method, and not modifying it in the child class in any way, do I still need to write unit tests for it?\r\n2. The same for the Sekonic parser. Since we are not introducing any new methods in it, do I still need to write unit tests for it? I left the docstring, doctests and unit tests for sekonic because I had this doubt. \r\n3. Also, since there are two different spectral data that we get in a sekonic csv file, how do we access the other one?', 'comment_created': datetime.datetime(2021, 6, 29, 8, 34, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SGeetansh', 'type': 'User'}, {'comment_id': 661272083, 'comment_body': '1. All good with the write method, we can do without!\r\n2. Same for the write method, however, we need basic testing to be sure that it works.\r\n3. All good to lose one.', 'comment_created': datetime.datetime(2021, 6, 30, 9, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}]","[{'commit_sha': 'd928a57eed489686e73c98283a67e591e2110da0', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6314dcadc5e3b88f259544bd61677c45dc23990d', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b19f8516fe2c44b12f0eb58d9c78adc96b96018', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec2f9db048565f5941e54ba205d2d03e45fe7f8e', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39244812207cc2de7212c03c64e5c312b8f929b8', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e91eefd34aa4998026875bf011a38ae53f0e267', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebca27609b8823fc1c1789b11cfd1f491117079e', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}]",Geetansh Saxena,43946936,saxenageetansh1@gmail.com,User,,24,,0,24
703742313,PR: Support for 'ProLab' colourspace.,Fixes #675.,False,841,https://api.github.com/repos/colour-science/colour/pulls/841,https://github.com/colour-science/colour/pull/841,closed,414,44,9,7,2,1,0,0,[],2021-08-04 17:09:16+00:00,2022-01-30 09:22:49+00:00,15437613.0,"178 days, 16:13:33","[{'comment_id': 725579952, 'comment_body': '@SGeetansh : This is the reason why the unit tests are actually failing, we have a way to set precision computation on most of the API but this requires using `as_float_array` instead of `np.array`. Actually, in this specific case, we want to be able to handle *domain-range* scale, so we will need to use `to_domain_1` and `from_range_100` like with *CIE Lab*.', 'comment_created': datetime.datetime(2021, 10, 10, 5, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}]","[{'commit_sha': 'ff6ec36bdf0637bc63e20c6e0233b48b7d8760b8', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4e860bd0312f3626ffce8675ddd1bc549165a09', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b0a7e51c4f2d79ee6e5ef63276e015d7f3ca6e4', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f9e5118bc3cff5455b3522c8ebac70b7616e8c9', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a031ff7662dd9c34240f17b0e0feb1472f3ba3b5', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e022e5554d044dc9dad38312a07197bede8c5c7', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22c88559a4b8b47ed0044af82b2406e1951c102c', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}]",Geetansh Saxena,43946936,saxenageetansh1@gmail.com,User,,24,,0,24
683873232,"PR: Support for ""ICaCb"" colourspace.",Fixes #553.,True,834,https://api.github.com/repos/colour-science/colour/pulls/834,https://github.com/colour-science/colour/pull/834,closed,430,42,9,8,3,19,0,0,[],2021-07-05 18:20:52+00:00,2021-08-28 21:50:06+00:00,4678154.0,"54 days, 3:29:14","[{'comment_id': 684686369, 'comment_body': 'We could use ``:math:`IC_AC_B` `` for consistency with ``:math:`IC_TC_P` ``.', 'comment_created': datetime.datetime(2021, 8, 7, 22, 49, 40, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684686413, 'comment_body': 'Likewise for ``:math:`IC_AC_B` ``.', 'comment_created': datetime.datetime(2021, 8, 7, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684686439, 'comment_body': 'This import should be above the `colour` imports.', 'comment_created': datetime.datetime(2021, 8, 7, 22, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684686872, 'comment_body': '```\n-   :cite:`Frohlich2017` : Fröhlich, J. (2017). Encoding high dynamic range and wide color gamut imagery. doi:10.18419/OPUS-9664\n```', 'comment_created': datetime.datetime(2021, 8, 7, 22, 55, 42, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684687646, 'comment_body': '*ICACB* like *IPT* and Co. has two matrices the first, this one converts from *CIE XYZ* tristimulus values to LMS cone space. The second one from non-linear LMS cone space to the final colourspace representation. So we should probably rename this matrix as follows for consistency: \n\n```python\nMATRIX_ICACB_XYZ_TO_LMS = np.array([\n    [0.37613, 0.70431, -0.05675],\n    [-0.21649, 1.14744, 0.05356],\n    [0.02567, 0.16713, 0.74235],\n])\n""""""\n*CIE XYZ* tristimulus values to normalised cone responses matrix.\n\nMATRIX_ICACB_XYZ_TO_LMS : array_like, (3, 3)\n""""""\n```\n\nWe should also precompute the inverse, i.e.,\n\n```python\nMATRIX_ICACB_LMS_TO_XYZ = np.linalg.inv(MATRIX_ICACB_XYZ_TO_LMS)\n\n""""""\nNormalised cone responses to *CIE XYZ* tristimulus values matrix.\n\nMATRIX_ICACB_LMS_TO_XYZ : array_like, (3, 3)\n""""""\n```\n', 'comment_created': datetime.datetime(2021, 8, 7, 23, 5, 37, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684687671, 'comment_body': 'Same comment as above by following *IPT*.', 'comment_created': datetime.datetime(2021, 8, 7, 23, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684687692, 'comment_body': 'Can replace all the instances with the LaTeX math variant.', 'comment_created': datetime.datetime(2021, 8, 7, 23, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684687719, 'comment_body': '``:cite:`Frohlich2017` ``', 'comment_created': datetime.datetime(2021, 8, 7, 23, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684687819, 'comment_body': 'Careful the ellipsis are not in here:\n\n> array([ 0.06875297,  0.05753352,  0.02081548])\n\nvs\n\n> array([ 0.0687529...,  0.0575335...,  0.0208154...])', 'comment_created': datetime.datetime(2021, 8, 7, 23, 8, 2, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684687897, 'comment_body': '> r_g_b =\n\nshould probably be\n\n> LMS = ', 'comment_created': datetime.datetime(2021, 8, 7, 23, 8, 46, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684688040, 'comment_body': '> r_g_b_ =\n\ncould be\n\n> LMS_prime =', 'comment_created': datetime.datetime(2021, 8, 7, 23, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684688051, 'comment_body': 'Careful, the docstring should be updated in the reverse direction.', 'comment_created': datetime.datetime(2021, 8, 7, 23, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684688100, 'comment_body': 'Ditto!', 'comment_created': datetime.datetime(2021, 8, 7, 23, 10, 49, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684688114, 'comment_body': 'Ditto!', 'comment_created': datetime.datetime(2021, 8, 7, 23, 10, 59, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684688116, 'comment_body': 'Ditto! :)', 'comment_created': datetime.datetime(2021, 8, 7, 23, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684689286, 'comment_body': 'This import should be after `colour.models` and you are missing `from_range_1`.', 'comment_created': datetime.datetime(2021, 8, 7, 23, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684689355, 'comment_body': 'Likewise for the n-dimensional and domain-range scale unit tests.', 'comment_created': datetime.datetime(2021, 8, 7, 23, 27, 39, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 684689386, 'comment_body': 'We will need n-dimensional and domain-range scale unit tests.', 'comment_created': datetime.datetime(2021, 8, 7, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 697814258, 'comment_body': 'Looks like `Range` got swallowed here! :)', 'comment_created': datetime.datetime(2021, 8, 28, 5, 53, 7, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}]","[{'commit_sha': '348191a52bc5c43f0e1cb1bda4a76a51dc58a209', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24bea81f6ad7b352403f42b98de537180afc5d44', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e231000e53e7adcef7aab23def40b6bb14efb9b', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83ae75dc85af9fe1ed10bda9a4c4f47e8edfcfe8', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '289ec1c0b03d9d9ffa9399e64ad6bf9d0102cf8f', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac2248fd6824fd5c51f4e95f8602e2cc2c0e9456', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ba8d6860a123fba9ff338628a38e4fe0233be3c', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb934bb7e8f54f2a7dcf66f492b5ec1eff771c3e', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}]",Geetansh Saxena,43946936,saxenageetansh1@gmail.com,User,,24,,0,24
673835351,PR: Implement support for IHLS colourspace.,Cherry-picked commits from #614.,True,822,https://api.github.com/repos/colour-science/colour/pulls/822,https://github.com/colour-science/colour/pull/822,closed,412,48,8,4,2,21,0,0,[],2021-06-19 07:05:20+00:00,2021-08-13 21:33:09+00:00,4804069.0,"55 days, 14:27:49","[{'comment_id': 659647028, 'comment_body': 'Needs to be in alphabetical order here.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659647253, 'comment_body': 'This one is extraneous.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659647383, 'comment_body': 'Ditto for order.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659647611, 'comment_body': 'Header `===` are too long.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 57, 41, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659648366, 'comment_body': '- Key: Hanbury2003\r\n- Bibliography: Hanbury, A. (2003). A 3D-Polar Coordinate Colour Representation Well Adapted to Image Analysis. In J. Bigun & T. Gustavsson (Eds.), Image Analysis (pp. 804–811). Springer Berlin Heidelberg. ISBN:978-3-540-45103-7\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 9, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659648894, 'comment_body': 'This is not required anymore as we have dropped Python 2.', 'comment_created': datetime.datetime(2021, 6, 28, 9, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659649013, 'comment_body': '`2021`', 'comment_created': datetime.datetime(2021, 6, 28, 9, 59, 46, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659649438, 'comment_body': 'Looks like there is duplication here.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 0, 21, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659651473, 'comment_body': 'Can we please remove the extra line return here?', 'comment_created': datetime.datetime(2021, 6, 28, 10, 3, 19, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659651729, 'comment_body': 'no need for `(..., 3) ` here', 'comment_created': datetime.datetime(2021, 6, 28, 10, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659652655, 'comment_body': 'Just need citation key here, i.e. `:cite:\\`Hanbury2003\\``', 'comment_created': datetime.datetime(2021, 6, 28, 10, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659652893, 'comment_body': 'Need to remove that and replace with examples.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659653320, 'comment_body': 'Most of the inline comments are not useful here and should be removed.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659653607, 'comment_body': 'Ditto!', 'comment_created': datetime.datetime(2021, 6, 28, 10, 6, 38, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659653685, 'comment_body': 'Ditto!', 'comment_created': datetime.datetime(2021, 6, 28, 10, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659653853, 'comment_body': 'Ditto and example.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659654006, 'comment_body': 'Not required.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659654162, 'comment_body': 'Line break.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 7, 32, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659654324, 'comment_body': 'no need for parenthesis.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 7, 46, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659657975, 'comment_body': 'Line breaks consistency.', 'comment_created': datetime.datetime(2021, 6, 28, 10, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 659658066, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 6, 28, 10, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}]","[{'commit_sha': 'd29dbb71772774d5217620531c9d1590351f9fca', 'committer_username': 'amulyagupta1278', 'committer_name': 'AMULYA GUPTA', 'committer_email': 'f20191278@pilani.bits-pilani.ac.in', 'commit_date': datetime.datetime(2019, 11, 2, 14, 55, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e471b17c392d722b49181b6d66ca84009235944', 'committer_username': 'KelSolaar', 'committer_name': 'Thomas Mansencal', 'committer_email': 'thomas.mansencal@gmail.com', 'commit_date': datetime.datetime(2009, 6, 28, 22, 34, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4952a28f45ef13854640c7f7fa81002b41d328fc', 'committer_username': 'KelSolaar', 'committer_name': 'Thomas Mansencal', 'committer_email': 'thomas.mansencal@gmail.com', 'commit_date': datetime.datetime(2009, 6, 28, 22, 34, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b43d8ffc8f25330cba0187f1c4605f3d67205df', 'committer_username': 'KelSolaar', 'committer_name': 'Thomas Mansencal', 'committer_email': 'thomas.mansencal@gmail.com', 'commit_date': datetime.datetime(2009, 6, 28, 22, 34, 29, tzinfo=datetime.timezone.utc)}]",Geetansh Saxena,43946936,saxenageetansh1@gmail.com,User,,24,,0,24
710248747,PR: Implement support for DIN99 variants.,Fixes #771.,True,845,https://api.github.com/repos/colour-science/colour/pulls/845,https://github.com/colour-science/colour/pull/845,closed,137,27,4,4,1,14,0,0,[],2021-08-12 05:47:57+00:00,2021-08-27 22:34:21+00:00,1356384.0,"15 days, 16:46:24","[{'comment_id': 689023753, 'comment_body': 'With Yapf formatting that:\n\n```python\nfrom colour.utilities import (CaseInsensitiveMapping from_range_100, tsplit, tstack, to_domain_100)\n```\n\n', 'comment_created': datetime.datetime(2021, 8, 15, 3, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691918123, 'comment_body': 'I cannot comment above because it is out of the lines that can be commented on but we will need the reference and citation key:\r\n\r\n```rst\r\n-   :cite:`Cui2020` :  Cui, G., Luo, M. R., Rigg, B., Roesler, G., & Witt, K.\r\n    (2002). Uniform colour spaces based on the DIN99 colour-difference formula.\r\n    Color Research & Application, 27(4), 282–290. doi:10.1002/col.10066\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 8, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691918553, 'comment_body': '`DIN99_METHODS` is defined first, so it should probably go first! :)', 'comment_created': datetime.datetime(2021, 8, 19, 8, 53, 33, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691919616, 'comment_body': 'In order to not break compatibility by modifying the signature, we should put the new `method` argument last and with the above `DIN99` alias we can use it instead of `ASTMD2244-07`.', 'comment_created': datetime.datetime(2021, 8, 19, 8, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691921587, 'comment_body': '```\r\nConverts from *CIE L\\\\*a\\\\*b\\\\** colourspace to *DIN99* colourspace or one of the *DIN99b*, *DIN99c*, *DIN99d* refined formulas according to *Cui et al. (2002)*.\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 8, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691921890, 'comment_body': ""`'b'` --> `'DIN99b'`"", 'comment_created': datetime.datetime(2021, 8, 19, 8, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691922131, 'comment_body': ""`'c'` --> `'DIN99c'`"", 'comment_created': datetime.datetime(2021, 8, 19, 8, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691922352, 'comment_body': ""`'d'` --> `'DIN99d'`"", 'comment_created': datetime.datetime(2021, 8, 19, 8, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691923734, 'comment_body': ""Let's also make a `DIN99` variant with the exact same values for reference with the publication.\r\n\r\nThe paper also say:\r\n\r\n> The refined formulas are named DIN99b, DIN99c, and DIN99d.\r\n\r\nSo..."", 'comment_created': datetime.datetime(2021, 8, 19, 9, 0, 19, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691928961, 'comment_body': ""This should be reordered accordingly and might be better put as follows:\r\n\r\n```\r\n    method : unicode, optional\r\n        **{'DIN99', 'ASTMD2244-07', 'DIN99b', 'DIN99c', 'DIN99d'}**,\r\n        Computation method to choose between the :cite:`ASTMInternational2007` formula and the refined formulas according to *Cui et al. (2002)*.\r\n```"", 'comment_created': datetime.datetime(2021, 8, 19, 9, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691935291, 'comment_body': 'We should validate the method: `p = DIN99_METHODS[validate_method(method, DIN99_METHODS)]`\r\n\r\nMaybe `p` should actually be `c`, standing for coefficient and maybe we expand them too, instead of accessing them:\r\n\r\n```python\r\nc_1, c_2, c_3, c_4, c_5, c_6, c_7, c_8 = DIN99_METHODS[validate_method(method, DIN99_METHODS)]\r\n```', 'comment_created': datetime.datetime(2021, 8, 19, 9, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691936525, 'comment_body': '`cos` and `sin` feel dangerous here, should we add a `_c` for coefficient suffix? e.g. `cos_c`', 'comment_created': datetime.datetime(2021, 8, 19, 9, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691937150, 'comment_body': 'All the above comments are valid for the inverse model.', 'comment_created': datetime.datetime(2021, 8, 19, 9, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}, {'comment_id': 691939624, 'comment_body': 'We might also want to update the module header and the docs:\r\n\r\n```\r\nDIN99 Colourspace and DIN99b, DIN99c, DIN99d Refined Formulas\r\n=============================================================\r\n\r\nDefines the *DIN99* colourspace and *DIN99b*, *DIN99c*, *DIN99d* refined formulas transformations:\r\n```\r\n\r\nDocs: https://github.com/colour-science/colour/blob/259bcae104692293d2a4b0781efc9af6068850c3/docs/colour.models.rst#din99-colourspace', 'comment_created': datetime.datetime(2021, 8, 19, 9, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'KelSolaar', 'type': 'User'}]","[{'commit_sha': '4ca7ffb04efe4e5af778cc7dbeee72ef3fc12722', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c92ac93950c5a3d4a6e310b0e6cbe4cd0e6a5fa3', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf2b701dd84abc3883e5e30947467dd7691b7a48', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ef87dc4282d63df7b80b90bc59c0bda0a1197dc', 'committer_username': 'SGeetansh', 'committer_name': 'Geetansh Saxena', 'committer_email': 'saxenageetansh1@gmail.com', 'commit_date': datetime.datetime(2018, 10, 8, 5, 58, 48, tzinfo=datetime.timezone.utc)}]",Geetansh Saxena,43946936,saxenageetansh1@gmail.com,User,,24,,0,24

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
17114363,colour,colour-science/colour,Python,258,2069,86,51,5054,91,41,8,"[{'id': 710248747, 'number': 845, 'closed': datetime.datetime(2021, 8, 27, 22, 34, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 5, 47, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1356384.0, 'time_delta': '15 days, 16:46:24', 'additions': 137, 'deletions': 27, 'state': 'closed'}, {'id': 703742313, 'number': 841, 'closed': datetime.datetime(2022, 1, 30, 9, 22, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 17, 9, 16, tzinfo=datetime.timezone.utc), 'time_taken': 15437613.0, 'time_delta': '178 days, 16:13:33', 'additions': 414, 'deletions': 44, 'state': 'closed'}, {'id': 683873232, 'number': 834, 'closed': datetime.datetime(2021, 8, 28, 21, 50, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 18, 20, 52, tzinfo=datetime.timezone.utc), 'time_taken': 4678154.0, 'time_delta': '54 days, 3:29:14', 'additions': 430, 'deletions': 42, 'state': 'closed'}, {'id': 673835351, 'number': 822, 'closed': datetime.datetime(2021, 8, 13, 21, 33, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 7, 5, 20, tzinfo=datetime.timezone.utc), 'time_taken': 4804069.0, 'time_delta': '55 days, 14:27:49', 'additions': 412, 'deletions': 48, 'state': 'closed'}, {'id': 633142200, 'number': 813, 'closed': datetime.datetime(2021, 7, 12, 8, 55, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 17, 42, 3, tzinfo=datetime.timezone.utc), 'time_taken': 5670821.0, 'time_delta': '65 days, 15:13:41', 'additions': 3042, 'deletions': 5, 'state': 'closed'}, {'id': 572140834, 'number': 778, 'closed': datetime.datetime(2021, 2, 13, 23, 40, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 11, 22, 2, 26, tzinfo=datetime.timezone.utc), 'time_taken': 178656.0, 'time_delta': '2 days, 1:37:36', 'additions': 4, 'deletions': 3, 'state': 'closed'}]"
