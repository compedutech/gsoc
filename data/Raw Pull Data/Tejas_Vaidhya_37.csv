pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
409738446,Language Model Interface,"language model  inspired by NLTK.lm package

**Roadmap** 
- [X] **vocabulary** - Implemented contain vocabulary structure
- [x] **Counter** - contains language model counter 

- Structure and methods for counting ngrams and will count any ngram sequence you give it 


- [x] **models** -  contains Interpolated Language model

- KneserNeyInterpolated :heavy_check_mark:
- Laplace :heavy_check_mark:
- Lidstone :heavy_check_mark:
- MLE :heavy_check_mark:
- WittenBellInterpolated :heavy_check_mark:

- [x] **preprocessing** - contains all function needed for preprocessing
- [x] **smoothing** -  Smoothing algorithms for language modeling.
- [x] **utility** 
- [x] **documentation and test**

it will also include 
- **Cross entropy** of model for given eval text
- **logscore** - eval the log score of word in the context
- **Perplexity** - perplexity of the given text



",True,210,https://api.github.com/repos/JuliaText/TextAnalysis.jl/pulls/210,https://github.com/JuliaText/TextAnalysis.jl/pull/210,closed,813,2,12,51,10,29,0,0,[],2020-04-27 20:47:03+00:00,2020-09-02 15:31:36+00:00,11040273.0,"127 days, 18:44:33","[{'comment_id': 430850992, 'comment_body': '```suggestion\r\n    data = everygram(data, min_len=min, max_len=max)\r\n```', 'comment_created': datetime.datetime(2020, 5, 27, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 430851258, 'comment_body': 'Please go through this: https://docs.julialang.org/en/v1/manual/style-guide/index.html#Avoid-writing-overly-specific-types-1\r\nTry to minimize overly specified types if possible.', 'comment_created': datetime.datetime(2020, 5, 27, 4, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 430851563, 'comment_body': 'Indentation, docstring outside the function, overly specified types.', 'comment_created': datetime.datetime(2020, 5, 27, 4, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 430852386, 'comment_body': 'Documentation are good, but the syntax seems a bit off. Go through the julia docs on documentation: https://docs.julialang.org/en/v1/manual/documentation/index.html\r\n\r\nSee this for example docstrings: [FileDocument](https://github.com/JuliaText/TextAnalysis.jl/blob/a959025daa6908cbff2c0efc4aeed5c5bbecc479/src/document.jl#L48)', 'comment_created': datetime.datetime(2020, 5, 27, 4, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 430852527, 'comment_body': 'Indentation, newline b/w functions', 'comment_created': datetime.datetime(2020, 5, 27, 4, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 432889317, 'comment_body': 'ayush for using **Accumulator and counter** we have to overspecified at least her.', 'comment_created': datetime.datetime(2020, 5, 30, 21, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 436282673, 'comment_body': 'This is highly unlikely, but we can do a sanity check for ""\\<unk>"" being in vocab itself and raising error when this happens. \r\nAlso add to tests.', 'comment_created': datetime.datetime(2020, 6, 6, 16, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436289089, 'comment_body': 'It is already there @Ayushk4  in Vocabulary.jl ', 'comment_created': datetime.datetime(2020, 6, 6, 18, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 436325927, 'comment_body': ""Indentation and ','.\r\nTry building docs locally."", 'comment_created': datetime.datetime(2020, 6, 7, 5, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436325966, 'comment_body': '```suggestion\r\n- **Lidstone** - Base Ngram model with Lidstone smoothing.\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 5, 18, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436326506, 'comment_body': '```suggestion\r\n * `discount`:  discounting factor for `KneserNeyInterpolated`\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 5, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436326569, 'comment_body': 'Also statistical -> Statistical', 'comment_created': datetime.datetime(2020, 6, 7, 5, 29, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436326693, 'comment_body': '```suggestion\r\njulia> train = [""khan"",""is"",""my"",""good"", ""friend"",""and"",""He"",""is"",""my"",""brother""]\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 5, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436327509, 'comment_body': ""Check this locally once, but I don't think this will be rendered as expected from markdown to HTML format due to indentation of ```julia.\r\nIf you want to keep - score as sub-section under Evaluation Method. Then try the following instead.\r\n\r\n```suggestion\r\n### `score` \r\n\r\n    used to evaluate the probability of word given context (*P(word | context)*)\r\n\r\n```julia\r\n\tscore(m::gammamodel, temp_lm::DefaultDict, word::AbstractString, context::AbstractString)\r\n```\r\nIf you go this way then, incorporate similar changes in the next 4 evaluation measures."", 'comment_created': datetime.datetime(2020, 6, 7, 5, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436327653, 'comment_body': ""> I don't think this will be rendered as expected from markdown to HTML format.\r\n\r\nI am not sure about this, do test this locally once."", 'comment_created': datetime.datetime(2020, 6, 7, 5, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436327717, 'comment_body': 'Repeat?', 'comment_created': datetime.datetime(2020, 6, 7, 5, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436335460, 'comment_body': 'sorry it is by mistake', 'comment_created': datetime.datetime(2020, 6, 7, 7, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 436374763, 'comment_body': 'Oh. Sorry I missed that one. Thanks. Marking this resolved.', 'comment_created': datetime.datetime(2020, 6, 7, 15, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436374979, 'comment_body': '```suggestion\r\n   score(m, temp_lm, lookup(m.vocab, [word])[1], lookup(m.vocab, [context])[1])\r\n```\r\nThis is just a suggestion. I know it will be a lot of work making code style changes in the entire PR, so feel to incorporate it or not.', 'comment_created': datetime.datetime(2020, 6, 7, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436375064, 'comment_body': 'Indent', 'comment_created': datetime.datetime(2020, 6, 7, 15, 33, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436375128, 'comment_body': 'Is the repetition by mistake?', 'comment_created': datetime.datetime(2020, 6, 7, 15, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436375176, 'comment_body': '```suggestion\r\n\r\nfunction Vocabulary(word::Vector{T}, unk_cutoff=1, unk_label=""<unk>"") where { T <: AbstractString}\r\n```\r\nNewline', 'comment_created': datetime.datetime(2020, 6, 7, 15, 34, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436375902, 'comment_body': 'yes ', 'comment_created': datetime.datetime(2020, 6, 7, 15, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 436375971, 'comment_body': 'Cool.', 'comment_created': datetime.datetime(2020, 6, 7, 15, 43, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436458370, 'comment_body': 'Any reason for import instead of using?', 'comment_created': datetime.datetime(2020, 6, 8, 5, 4, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 483815234, 'comment_body': '`word` needs a type tag here. Since other parameters of this function have default value, it can revert to a one argument form, that is then ambigous with the struct definiton. Is `word` meant to be a vector? The docstring suggests so, and the function definition should be amended', 'comment_created': datetime.datetime(2020, 9, 4, 19, 43, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aviks', 'type': 'User'}, {'comment_id': 483815324, 'comment_body': 'same...', 'comment_created': datetime.datetime(2020, 9, 4, 19, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aviks', 'type': 'User'}, {'comment_id': 483815375, 'comment_body': 'same ...', 'comment_created': datetime.datetime(2020, 9, 4, 19, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aviks', 'type': 'User'}, {'comment_id': 483907951, 'comment_body': 'yes word is Vector here\r\nI will make a small PR with all word tags', 'comment_created': datetime.datetime(2020, 9, 5, 4, 10, 40, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}]","[{'commit_sha': '44b540c1a42c182d385eb48c6cdb66a667b29a60', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8becfce954c8e7909a63c37bce8c8d1b04b4406b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d8b5f2d36e53521173a9aba591d3862acb62f3', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59b8fae8f179b6ac532d0fe4342ebb49283c4c08', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '328303322b53bae2f2349c5da4be17024eb97964', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36aca88f810ac4953296207de32f02e331904dee', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29fee5564f81e2e88237af814ed21fb1fba38b63', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c41df193371846cf60e38ac8420615beb3f60079', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a35ca92af0ebe52ce4df50e0578d4355e9e4afa5', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '698dc0e4876774b2238364a7f0bc234a11f14d90', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9e7345ae76e801bc875cdbb108f5758e4c8fea5', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f9a0ba5b3e4624191d30a622b7179d4cfed7f35', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eded08451388d1adba00a48a4ad8a60ab85cceaf', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1150e4ed7c133f05324c7430773977721821959e', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15bef1082c0529f10fe28bed45ea5b63f33f9792', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fb6db9d98c502080864119234f4ac638df70b1b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f240cae4aa2998495254fd8c94a13837eb56a001', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bd06efce1b498ab6af6080d88788121eefffac9', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e34e71e800eb762f40d1d74c01612c578f34c562', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be686aff5d3fed2d697e67eed399cbe2557f0b2d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40bae7b011472c37aa8f620e5096ff40123db46d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e58fd17f89f8cbc1cd41f302fc59de3b80ac7108', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8f09f65d25ecd252dc4ac402b70ecd1d2b69a85', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f966544e9e2727a93da35cbeabfe4ceffc12e74', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db6d38a0884638c47c5c52f1c2409ca7d2231a77', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ddf7cb132e8143e9e274a86d52d46035af7c8e8', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1d7417b5e03d1b1ea1c7f58065d7846d0dcd21b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36ffa46ac0cad6931512dad890b4a5ad9710dcd4', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bb35aa8d267b55472f06d2d7f60a5cd9588af5f', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3bcd941ed3813f058e4652dd2e4e25f1812d094', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5408f157066348d956dd80dca63382f78d9cc4a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c5230d539b6a4816802c7f2bf20f96372dcd5ae', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37025af49221110a9bed2df4ec579a6fbc674dff', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d4b9eba6de1e448c23acc18b18ff3370505e93a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c979bceb6ee8796b077a2862fa50a24732294323', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cdfea019d5d66bf2a27b54e158faef8b4345dc6', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e566904c91a5315b118df50599e30a95256e7aa1', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16a254651dd163e76f7c3a66099cced66959782a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8481cfb002fb3a29853b0dccb08355e8789fb9ad', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dc882c3d51a627804a0538b86979a0de6719ea9', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '723103cf392746ada9fcaaaa25196037538ddf89', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b14cc743a35cf6f4f8cc741f852a44d3c4a87e40', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58498eaa47f9d8e82f2e7198d12c3afbbb2c6259', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feb2d46b307b245eb7de6484b99f056426805110', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '995581b1ff87b0501962a4796f49205eea9845d9', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac50d6d36f3066c96266a66e0eb8b84b5c8529d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2345902fe95c5a60268afbe69256116743e1619', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72c4cb040607ee9787d81dd2958121396d48b80f', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12fd3c6f6bff81161bf403807552ef70524ebce0', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd089d519d0b4de2f785866c23ab9dce776a2d8ca', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85f93a8e392e0c918f5855123689a4b93de5384d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}]",Tejas Vaidhya,39345998,iamtejasvaidhya@gmail.com,User,,58,,39,51
444291829,Adding support for unigram sentencepiece model ,"As discussed in #44 
I am adding support for the sentencepiece unigram model with `DataDeps` to download pre-trained vocab file with their log-likelihood
 for more detail refer to the blog post [here](https://tejasvaidhyadev.github.io/blog/Sentencepiece)
Roadmap
 - [x] DataDeps for Downloading Vocab or .protofile
 - [X] unigram encoder algorithm implementation in Julia
 - [x] Test and doc",True,51,https://api.github.com/repos/JuliaText/WordTokenizers.jl/pulls/51,https://github.com/JuliaText/WordTokenizers.jl/pull/51,closed,418,3,9,36,14,84,0,0,[],2020-07-04 14:36:40+00:00,2020-07-20 07:41:27+00:00,1357487.0,"15 days, 17:04:47","[{'comment_id': 451772251, 'comment_body': 'Does this need to be exported? Seems like a global value?', 'comment_created': datetime.datetime(2020, 7, 8, 19, 19, 59, tzinfo=datetime.timezone.utc), 'commenter': 'aviks', 'type': 'User'}, {'comment_id': 451773982, 'comment_body': 'Maybe `ALBERT_V1` ? ', 'comment_created': datetime.datetime(2020, 7, 8, 19, 23, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aviks', 'type': 'User'}, {'comment_id': 451774429, 'comment_body': 'I like having camel case for types. So `PretrainedTokenizer`?', 'comment_created': datetime.datetime(2020, 7, 8, 19, 24, 11, tzinfo=datetime.timezone.utc), 'commenter': 'aviks', 'type': 'User'}, {'comment_id': 451774941, 'comment_body': 'The files seem to be on github. Why is google drive required? ', 'comment_created': datetime.datetime(2020, 7, 8, 19, 25, 11, tzinfo=datetime.timezone.utc), 'commenter': 'aviks', 'type': 'User'}, {'comment_id': 451970216, 'comment_body': 'I first kept all files in G-Drive and later shifted it to Github\r\nsure, I will remove GoogleDrive Dependency.', 'comment_created': datetime.datetime(2020, 7, 9, 5, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 451970300, 'comment_body': 'Okay I will do it', 'comment_created': datetime.datetime(2020, 7, 9, 5, 23, 6, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 451972339, 'comment_body': ""`pretrained` will act as a list vocab function\r\n Albert_Version1 and Alber_version2 will help in downloading using Datadeps \r\n`load(ty::Type{T}, name::String)\r\n`I think we need to export them in order to remain DataType. It's something similar to embedding.jl \r\nwould you like me to change it?"", 'comment_created': datetime.datetime(2020, 7, 9, 5, 30, 21, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 452314833, 'comment_body': 'so keeping `fetch_method = google_download` usually handle all kinds of downloads including strings containing HTTP[S] URLs. \r\n', 'comment_created': datetime.datetime(2020, 7, 9, 15, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 452318023, 'comment_body': '@aviks ', 'comment_created': datetime.datetime(2020, 7, 9, 15, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 453607008, 'comment_body': 'CI is failing. I think this may be the cause.\r\nCan you look into it?', 'comment_created': datetime.datetime(2020, 7, 13, 12, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 453615419, 'comment_body': 'yeah my bad', 'comment_created': datetime.datetime(2020, 7, 13, 12, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 453848061, 'comment_body': 'Can we shift the DataDeps registration block into a separate file and inside \\__init__ either include file as in  [CorpusLoaders.jl](https://github.com/JuliaText/CorpusLoaders.jl/blob/master/src/CorpusLoaders.jl#L17)\r\nor call function as in [TextAnalysis.jl](https://github.com/JuliaText/TextAnalysis.jl/blob/master/src/TextAnalysis.jl#L133)', 'comment_created': datetime.datetime(2020, 7, 13, 18, 30, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 453848198, 'comment_body': 'Why 30000? ', 'comment_created': datetime.datetime(2020, 7, 13, 18, 30, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 453849039, 'comment_body': 'If it is the vocab size?\r\nBetter to replace with the length, so that this same code can support different vocab sizes from various other sentencepiece trained tokenizers.', 'comment_created': datetime.datetime(2020, 7, 13, 18, 31, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 453849387, 'comment_body': 'indent', 'comment_created': datetime.datetime(2020, 7, 13, 18, 32, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 453849850, 'comment_body': 'Whitespace\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 13, 18, 32, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 453850020, 'comment_body': '```suggestion\r\n\r\n""""""\r\n```', 'comment_created': datetime.datetime(2020, 7, 13, 18, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454024970, 'comment_body': 'sure', 'comment_created': datetime.datetime(2020, 7, 14, 0, 28, 1, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 454093078, 'comment_body': 'Indentation seems off for this file.', 'comment_created': datetime.datetime(2020, 7, 14, 4, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454093416, 'comment_body': '```suggestion\r\n        vocab1 = replace(vocab1, ""▁""=>""_"")\r\n```', 'comment_created': datetime.datetime(2020, 7, 14, 4, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454093468, 'comment_body': '```suggestion\r\n    vocabnew = split.(vocab, ""\\t"")\r\n```', 'comment_created': datetime.datetime(2020, 7, 14, 4, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454093590, 'comment_body': '```suggestion\r\n        push!(logprob, logp)\r\n```', 'comment_created': datetime.datetime(2020, 7, 14, 4, 32, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454093758, 'comment_body': '```suggestion\r\n    length(id_list) == 0 && return 2\r\n```\r\n?', 'comment_created': datetime.datetime(2020, 7, 14, 4, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454094020, 'comment_body': '```suggestion\r\nfunction getindex(sp::Sentencepiecemodel, text)\r\n```', 'comment_created': datetime.datetime(2020, 7, 14, 4, 34, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454094160, 'comment_body': 'Why return 2, here, is it the index for Out-of-vocab-Tokens?', 'comment_created': datetime.datetime(2020, 7, 14, 4, 34, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454094340, 'comment_body': '```suggestion\r\n    tks = []\r\n```', 'comment_created': datetime.datetime(2020, 7, 14, 4, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454094413, 'comment_body': '```suggestion\r\n    idlist = []\r\n```', 'comment_created': datetime.datetime(2020, 7, 14, 4, 35, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454094480, 'comment_body': '```suggestion\r\n    sen = tk[1]\r\n```', 'comment_created': datetime.datetime(2020, 7, 14, 4, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454094832, 'comment_body': '```suggestion\r\n    logp = parse.(Float64, logprob)\r\n```', 'comment_created': datetime.datetime(2020, 7, 14, 4, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454095081, 'comment_body': '```suggestion\r\n\r\nfunction __init__()\r\n    include(joinpath(@__DIR__, ""statistical/Vocab_DataDeps.jl""))\r\nend\r\n\r\n```', 'comment_created': datetime.datetime(2020, 7, 14, 4, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454125975, 'comment_body': 'unkown token \r\nyes it is used in oov tokens', 'comment_created': datetime.datetime(2020, 7, 14, 6, 15, 3, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 454139997, 'comment_body': '```suggestion\r\n`DataDeps` will handle all the downloading part for us.  You can also create an issue or PR for other pretrained models or directly load by providing path in `load` function\r\n```', 'comment_created': datetime.datetime(2020, 7, 14, 6, 49, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454141408, 'comment_body': 'Maybe this can be re-phrased?\r\nIndices can be used for other than deep learning models.\r\nAlso, mention something about the unknown token.', 'comment_created': datetime.datetime(2020, 7, 14, 6, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454144167, 'comment_body': 'Can we have an example that shows subword level tokenization working? Maybe just append some words in this sentence along with with punctuations, capitalized letters?', 'comment_created': datetime.datetime(2020, 7, 14, 6, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454161819, 'comment_body': 'yeah sure \r\n', 'comment_created': datetime.datetime(2020, 7, 14, 7, 35, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 454797064, 'comment_body': '```suggestion\r\n\r\nvectors_albertversion2 = [\r\n```', 'comment_created': datetime.datetime(2020, 7, 15, 5, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454797861, 'comment_body': 'Can we have a field in sp for holding the unknown token index?\r\nAnd then replace 2 by that index. For Albert, we can set 2 by default.', 'comment_created': datetime.datetime(2020, 7, 15, 5, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454798511, 'comment_body': 'Decode forward or backward? docstrings not match function', 'comment_created': datetime.datetime(2020, 7, 15, 5, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454799757, 'comment_body': 'Where is `everygram` defined?\r\nThe docstrings do not match function.', 'comment_created': datetime.datetime(2020, 7, 15, 5, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454801558, 'comment_body': 'How about changing this to `function (sp::Sentencepiecemodel)(text:AbstractString)`\r\nThis way instead of `tokenizer(spm, ""Some string here."")` we can use `spm(""Some string here."")`', 'comment_created': datetime.datetime(2020, 7, 15, 5, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454801942, 'comment_body': '```suggestion\r\n    tokenizer(sp::Sentencepiecemodel,text::AbstractString)\r\n```', 'comment_created': datetime.datetime(2020, 7, 15, 5, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 454891735, 'comment_body': 'yeah you are right that will be much better', 'comment_created': datetime.datetime(2020, 7, 15, 8, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 454912822, 'comment_body': 'changed', 'comment_created': datetime.datetime(2020, 7, 15, 9, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 454913780, 'comment_body': 'I think instead of setting unk_id to 2 \r\nwe can search for ""unk""  which is the default for all other models ', 'comment_created': datetime.datetime(2020, 7, 15, 9, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 454983138, 'comment_body': ""sure I am adding both the methods \r\nI think it is better to keep it similar to other APIs of 'WordTokenizers' like 'tokenize'\r\n"", 'comment_created': datetime.datetime(2020, 7, 15, 11, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 455746190, 'comment_body': '```suggestion\r\n    scores[1] = 0\r\n```', 'comment_created': datetime.datetime(2020, 7, 16, 12, 24, 41, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455746970, 'comment_body': ""Do we have to worry about unicode and non-length 1 characters?\r\n\r\n```suggestion\r\n    for char_end in eachindex(text)\r\n```\r\nMaybe this is cleaner to read even if we don't"", 'comment_created': datetime.datetime(2020, 7, 16, 12, 26, 2, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455747472, 'comment_body': 'if we did have to worry about unicode then:\r\n```suggestion\r\n        for char_start in eachindex(text)\r\n            char_start > char_end && break\r\n```', 'comment_created': datetime.datetime(2020, 7, 16, 12, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455749301, 'comment_body': 'If we are gong to be doing `in` on this a lot, then it would be better if it was a `Set{String}`\r\nOr possibly we have a dictionary where the `vocab` is the `keys`  and the `logprob` is the values?', 'comment_created': datetime.datetime(2020, 7, 16, 12, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455749743, 'comment_body': 'if we use `substring` then we can avoid allocating a copy of the string, so it should be faster.\r\n```suggestion\r\n            subtoken = substring(text, char_start:char_end)\r\n            if subtoken in sp.vocab\r\n                subtokenid = sp[subtoken][1]\r\n```\r\n\r\nshould also change all the other places below.\r\n', 'comment_created': datetime.datetime(2020, 7, 16, 12, 31, 8, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455750382, 'comment_body': 'Can we make this concretely typed?', 'comment_created': datetime.datetime(2020, 7, 16, 12, 32, 20, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455751527, 'comment_body': ""using a list comprehension means that this will end up concretely typed.\r\nSo won't need to call `string.(...)` on it.\r\nIt also means that can delete `tks` from start\r\n```suggestion\r\n    tks = [node.text for node in tokens]\r\n```"", 'comment_created': datetime.datetime(2020, 7, 16, 12, 34, 26, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455751706, 'comment_body': 'conventionally written as:\r\n```suggestion\r\n    return tks\r\n```', 'comment_created': datetime.datetime(2020, 7, 16, 12, 34, 47, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455752566, 'comment_body': 'It is nicer to always use long form functions if going  multiline.\r\nand to write `getindex` with `[]` \r\n```suggestion\r\nfunction ids_from_tokens(spm::SentencePieceModel, tk::Array{String,1}) \r\n    map(tk) do x\r\n        spm[x]\r\n    end\r\nend\r\n```', 'comment_created': datetime.datetime(2020, 7, 16, 12, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455753239, 'comment_body': '```suggestion\r\n    sen = join(tk)\r\n```', 'comment_created': datetime.datetime(2020, 7, 16, 12, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455753596, 'comment_body': '```suggestion\r\n    sen = strip(sen)\r\n    return sen\r\n```', 'comment_created': datetime.datetime(2020, 7, 16, 12, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 455815126, 'comment_body': 'thanks', 'comment_created': datetime.datetime(2020, 7, 16, 14, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 455816715, 'comment_body': 'i will keep it Set{String}', 'comment_created': datetime.datetime(2020, 7, 16, 14, 11, 19, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 455836181, 'comment_body': 'sure I will do it', 'comment_created': datetime.datetime(2020, 7, 16, 14, 36, 22, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 455842186, 'comment_body': 'I will take care of all from next time', 'comment_created': datetime.datetime(2020, 7, 16, 14, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 455966577, 'comment_body': '@oxinabox I think to keep it as the set will disturb the order of vocab?\r\nand that is required for getting ids', 'comment_created': datetime.datetime(2020, 7, 16, 17, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 455988399, 'comment_body': 'In the case of dict we have to maintain ids for vocab and keys as the order is important?\r\n', 'comment_created': datetime.datetime(2020, 7, 16, 18, 28, 40, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456387184, 'comment_body': '@oxinabox  should I keep it  same\r\nor change it  ?\r\nany suggestions', 'comment_created': datetime.datetime(2020, 7, 17, 11, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456787116, 'comment_body': '@oxinabox ', 'comment_created': datetime.datetime(2020, 7, 18, 12, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456787436, 'comment_body': ""You should change it.\r\n`in` and `findin` in an array takes `O(n)` operations where `n` is the length of the array.\r\nThat is **very** slow, given vocab is 10,000 -100,000 words (or more?), and you have to do it for every possible token in the string being tokenized.\r\nWhere-as `haskey` and `getindex` on a `Dict` is `O(1)` i.e. constant time, and is fast.\r\n\r\nAs far as I can tell having a dict with the `vocab` as keys, and the `logprob` as values is all you need.\r\nthe order doesn't seem to matter from what i can see? I might be missing something, but if it does matter then you can use a `OrderedCollections.OrderedDict`.\r\n\r\nYou can also, if you use a dictionary, stop converting the string tokens into integer ids.\r\nAnd just always work with the tokens directly.\r\n\r\n"", 'comment_created': datetime.datetime(2020, 7, 18, 12, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 456788326, 'comment_body': 'Thanks \r\nOrder matters because it will act as the keys for Pretrained embedding weights here the position of vocab is the key for embedding vector  in ALBERT or other Transformer based models \r\nthanks for the suggestion I will make all the other changes using OrderedDict.\r\nwe don\'t require it to handle Unicode because we always preprocessed sentences and it always gives ""unk"" token to Unicode. I will change to accept Unicodes as well \r\nthanks \r\n', 'comment_created': datetime.datetime(2020, 7, 18, 13, 5, 28, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456789682, 'comment_body': ""> You can also, if you use a dictionary, stop converting the string tokens into integer ids.\r\n\r\nDid you mean `ids_from_tokens` here?\r\nIt's for Albert_model maybe I can drop it here and implement it in ALBERT(`TextAnlaysis`) what do you think ? @oxinabox \r\nor maybe I can go with OrderDict as you mentioned"", 'comment_created': datetime.datetime(2020, 7, 18, 13, 21, 25, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456790970, 'comment_body': 'I think it is better to keep tokenizer more like SentencePiece APIs which offer us Ids_for_token \r\nfunction serving as keys for ALBERT embedding weights\r\nSo, it better to use OrderDict here  ', 'comment_created': datetime.datetime(2020, 7, 18, 13, 36, 50, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456794420, 'comment_body': '> Did you mean ids_from_tokens here?\r\n\r\nEither is viable.\r\n\r\nI could go either way on wether to provide ids.\r\nOn the one hand it makes sense since this is where you have the embeddings loaded.\r\nOn the other hand nothing else provides it.\r\n\r\n\r\nAnother option for how to handle the dict is to do:\r\n the dict as:\r\n`vocab -> (logprob, id)` as a `Dict{String, Tuple{Float64, Int}`\r\nOr as two dicts: `vocab->id` and `vocab->logprob`\r\nYou may also need to maintained a `id2token` mapping still which would be the current `vocab` array.\r\n\r\nWhat one needs to avoid ever doing is `findin` or `in` on vectors, as that is so slow.', 'comment_created': datetime.datetime(2020, 7, 18, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 456798014, 'comment_body': 'Thanks, \r\nGot your point \r\nI will make all changes soon.', 'comment_created': datetime.datetime(2020, 7, 18, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456945544, 'comment_body': '```suggestion\r\njulia> tk = tokenizer(spm, ""i the love julia language"")  # or tk = spm(""i love the julia language"")\r\n```', 'comment_created': datetime.datetime(2020, 7, 19, 19, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 456945603, 'comment_body': '```suggestion\r\n ""▁love""\r\n ""_the""\r\n```', 'comment_created': datetime.datetime(2020, 7, 19, 19, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 456945760, 'comment_body': '```suggestion\r\nuse to initialize the SentencePieceModel by loading the file from the DataDep\r\n```', 'comment_created': datetime.datetime(2020, 7, 19, 19, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 456946067, 'comment_body': 'I think it is confusing to use `UndefVarError` for this. It should only really be thrown by the compiler.\r\n \r\n```suggestion\r\n        throw(DomainError(unk_token, ""Unknown token is not in the vocabulary"")\r\n```', 'comment_created': datetime.datetime(2020, 7, 19, 19, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 456946741, 'comment_body': 'We can replace the loop with\r\n```suggestion\r\n    vocab_map = Dict(tok=>parse(logp) for (tok, logp) in vocabnlogp)\r\n``````', 'comment_created': datetime.datetime(2020, 7, 19, 19, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 456946820, 'comment_body': 'Seems like something went wrong with git here.', 'comment_created': datetime.datetime(2020, 7, 19, 19, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 456947183, 'comment_body': '`get` allows one to pass in a default. Which avoids looking up the hash twice if found.\r\nand numbers are single item iterators `last(x::Int)=x`.\r\n\r\n```suggestion\r\n        last(get(spm.vocab_map, x, spm.unk_id))\r\n```', 'comment_created': datetime.datetime(2020, 7, 19, 19, 42, 37, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 456952806, 'comment_body': ""yeah it's happening frequently \r\nmaybe some internal issue"", 'comment_created': datetime.datetime(2020, 7, 19, 20, 37, 26, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456953494, 'comment_body': 'thanks', 'comment_created': datetime.datetime(2020, 7, 19, 20, 44, 28, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456958008, 'comment_body': 'nice ', 'comment_created': datetime.datetime(2020, 7, 19, 21, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456958063, 'comment_body': 'vocab_map = Dict(tok=>(parse(Float64, logp), index) for (index, (tok, logp)) in enumerate(vocabnlogp)) \r\ngot it', 'comment_created': datetime.datetime(2020, 7, 19, 21, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 456958320, 'comment_body': 'thanks, @oxinabox for the suggestion\r\nI will try to write more optimized and better code from onward ', 'comment_created': datetime.datetime(2020, 7, 19, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 457076490, 'comment_body': '```suggestion\r\n    append!(tokenizer_files(ALBERT_V2), [""$depname""])\r\n```\r\nIndent', 'comment_created': datetime.datetime(2020, 7, 20, 5, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 457077678, 'comment_body': '```suggestion\r\n\r\n""""""\r\n```', 'comment_created': datetime.datetime(2020, 7, 20, 5, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}]","[{'commit_sha': 'b99ea921435fd9df3708bd56d5baaf4177325c57', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36a804380e6cebb7261ffba98d56052c941dd49b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96de61c7e54cc3150abf536f676ba956e78f5865', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56681e3adaccafe936f25395f3af9e64434f651a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7c5142abdec51ed660163d7f18f0801791e032e', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd81e1e8eea720dae24efebc17ddcf6d4e9166a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f46167cce3d9d9744493bd0a9dfa0f7a01893144', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dfa8a04eee288efcf3c34b00c95c23bf614c367', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cd829bae80de4fbcc6d4fd9fec455f99fbb4743', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f60f4a3cd8f0760b86a12cdbdbfe5f16de2a42f', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cc291573c54004c1178ad614ec60c30b6e5ad58', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd6a81e78b0cf6f2364546a44ba4ca192e15861e', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e4aba108ea58d5ece9150ea469475467b9ea927', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6fee2accede957d4584b8063e03036f376748b9', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f45c44bf5dfa4dcea09365d19b6eaf80d752a2ab', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a71a9e21d8a9d436495f272cf557e551726a435b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52372ca9deeedaad7229d91fb8d268c945476b10', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '290b13df358efc2f438d3dfc29c31fc6ab360c35', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90d853ecb551644a65d075cca705e29cef6e1dc2', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04bfdd0a0e41319528107848eb6637c99f4e4ae5', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceae47824427faa81fabf4afb907cd77e334e517', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7be03fa9efc6e8c89df6535b18e1c09ef6a7d26e', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89fe7e876fe85a4324626a5005153dcfee0b1b07', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95522d31c313e7d8bbeb5b48abef785ce2287a62', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb4a4d41a3a45032e26788fdfd97a0e4d6468df0', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c94cc55d99cc8c0ca59340584b8fa58c69dad1e', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64f388439344b64316248ad0430f22724a622cf7', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b157b65d8e30bc5482ad11e5faf14a0ba46d9db1', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa3026d7f248bb777830881f5887d0cd0adfe044', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f7381be2b6c1ae97ae7cae7cb589b6ffd2b95cb', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3c25c7127067473eebc6e6006f4e57887c798fc', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5887c88be184e8f7a1768a15b13227a6e9053c55', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '382b38266623653a6efa12c3f52cdce907d00fae', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '918dd717eb948e1c50f1d7ff2146338c5934dbbb', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52e8cff2eccd03fab0e2507f92418098f610acf6', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '305909cc9a48162cc8a3e987d0a7d81329a39746', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}]",Tejas Vaidhya,39345998,iamtejasvaidhya@gmail.com,User,,58,,39,51
409738446,Language Model Interface,"language model  inspired by NLTK.lm package

**Roadmap** 
- [X] **vocabulary** - Implemented contain vocabulary structure
- [x] **Counter** - contains language model counter 

- Structure and methods for counting ngrams and will count any ngram sequence you give it 


- [x] **models** -  contains Interpolated Language model

- KneserNeyInterpolated :heavy_check_mark:
- Laplace :heavy_check_mark:
- Lidstone :heavy_check_mark:
- MLE :heavy_check_mark:
- WittenBellInterpolated :heavy_check_mark:

- [x] **preprocessing** - contains all function needed for preprocessing
- [x] **smoothing** -  Smoothing algorithms for language modeling.
- [x] **utility** 
- [x] **documentation and test**

it will also include 
- **Cross entropy** of model for given eval text
- **logscore** - eval the log score of word in the context
- **Perplexity** - perplexity of the given text



",True,210,https://api.github.com/repos/JuliaText/TextAnalysis.jl/pulls/210,https://github.com/JuliaText/TextAnalysis.jl/pull/210,closed,813,2,12,51,10,29,0,0,[],2020-04-27 20:47:03+00:00,2020-09-02 15:31:36+00:00,11040273.0,"127 days, 18:44:33","[{'comment_id': 430850992, 'comment_body': '```suggestion\r\n    data = everygram(data, min_len=min, max_len=max)\r\n```', 'comment_created': datetime.datetime(2020, 5, 27, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 430851258, 'comment_body': 'Please go through this: https://docs.julialang.org/en/v1/manual/style-guide/index.html#Avoid-writing-overly-specific-types-1\r\nTry to minimize overly specified types if possible.', 'comment_created': datetime.datetime(2020, 5, 27, 4, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 430851563, 'comment_body': 'Indentation, docstring outside the function, overly specified types.', 'comment_created': datetime.datetime(2020, 5, 27, 4, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 430852386, 'comment_body': 'Documentation are good, but the syntax seems a bit off. Go through the julia docs on documentation: https://docs.julialang.org/en/v1/manual/documentation/index.html\r\n\r\nSee this for example docstrings: [FileDocument](https://github.com/JuliaText/TextAnalysis.jl/blob/a959025daa6908cbff2c0efc4aeed5c5bbecc479/src/document.jl#L48)', 'comment_created': datetime.datetime(2020, 5, 27, 4, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 430852527, 'comment_body': 'Indentation, newline b/w functions', 'comment_created': datetime.datetime(2020, 5, 27, 4, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 432889317, 'comment_body': 'ayush for using **Accumulator and counter** we have to overspecified at least her.', 'comment_created': datetime.datetime(2020, 5, 30, 21, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 436282673, 'comment_body': 'This is highly unlikely, but we can do a sanity check for ""\\<unk>"" being in vocab itself and raising error when this happens. \r\nAlso add to tests.', 'comment_created': datetime.datetime(2020, 6, 6, 16, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436289089, 'comment_body': 'It is already there @Ayushk4  in Vocabulary.jl ', 'comment_created': datetime.datetime(2020, 6, 6, 18, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 436325927, 'comment_body': ""Indentation and ','.\r\nTry building docs locally."", 'comment_created': datetime.datetime(2020, 6, 7, 5, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436325966, 'comment_body': '```suggestion\r\n- **Lidstone** - Base Ngram model with Lidstone smoothing.\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 5, 18, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436326506, 'comment_body': '```suggestion\r\n * `discount`:  discounting factor for `KneserNeyInterpolated`\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 5, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436326569, 'comment_body': 'Also statistical -> Statistical', 'comment_created': datetime.datetime(2020, 6, 7, 5, 29, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436326693, 'comment_body': '```suggestion\r\njulia> train = [""khan"",""is"",""my"",""good"", ""friend"",""and"",""He"",""is"",""my"",""brother""]\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 5, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436327509, 'comment_body': ""Check this locally once, but I don't think this will be rendered as expected from markdown to HTML format due to indentation of ```julia.\r\nIf you want to keep - score as sub-section under Evaluation Method. Then try the following instead.\r\n\r\n```suggestion\r\n### `score` \r\n\r\n    used to evaluate the probability of word given context (*P(word | context)*)\r\n\r\n```julia\r\n\tscore(m::gammamodel, temp_lm::DefaultDict, word::AbstractString, context::AbstractString)\r\n```\r\nIf you go this way then, incorporate similar changes in the next 4 evaluation measures."", 'comment_created': datetime.datetime(2020, 6, 7, 5, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436327653, 'comment_body': ""> I don't think this will be rendered as expected from markdown to HTML format.\r\n\r\nI am not sure about this, do test this locally once."", 'comment_created': datetime.datetime(2020, 6, 7, 5, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436327717, 'comment_body': 'Repeat?', 'comment_created': datetime.datetime(2020, 6, 7, 5, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436335460, 'comment_body': 'sorry it is by mistake', 'comment_created': datetime.datetime(2020, 6, 7, 7, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 436374763, 'comment_body': 'Oh. Sorry I missed that one. Thanks. Marking this resolved.', 'comment_created': datetime.datetime(2020, 6, 7, 15, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436374979, 'comment_body': '```suggestion\r\n   score(m, temp_lm, lookup(m.vocab, [word])[1], lookup(m.vocab, [context])[1])\r\n```\r\nThis is just a suggestion. I know it will be a lot of work making code style changes in the entire PR, so feel to incorporate it or not.', 'comment_created': datetime.datetime(2020, 6, 7, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436375064, 'comment_body': 'Indent', 'comment_created': datetime.datetime(2020, 6, 7, 15, 33, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436375128, 'comment_body': 'Is the repetition by mistake?', 'comment_created': datetime.datetime(2020, 6, 7, 15, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436375176, 'comment_body': '```suggestion\r\n\r\nfunction Vocabulary(word::Vector{T}, unk_cutoff=1, unk_label=""<unk>"") where { T <: AbstractString}\r\n```\r\nNewline', 'comment_created': datetime.datetime(2020, 6, 7, 15, 34, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436375902, 'comment_body': 'yes ', 'comment_created': datetime.datetime(2020, 6, 7, 15, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}, {'comment_id': 436375971, 'comment_body': 'Cool.', 'comment_created': datetime.datetime(2020, 6, 7, 15, 43, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 436458370, 'comment_body': 'Any reason for import instead of using?', 'comment_created': datetime.datetime(2020, 6, 8, 5, 4, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ayushk4', 'type': 'User'}, {'comment_id': 483815234, 'comment_body': '`word` needs a type tag here. Since other parameters of this function have default value, it can revert to a one argument form, that is then ambigous with the struct definiton. Is `word` meant to be a vector? The docstring suggests so, and the function definition should be amended', 'comment_created': datetime.datetime(2020, 9, 4, 19, 43, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aviks', 'type': 'User'}, {'comment_id': 483815324, 'comment_body': 'same...', 'comment_created': datetime.datetime(2020, 9, 4, 19, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aviks', 'type': 'User'}, {'comment_id': 483815375, 'comment_body': 'same ...', 'comment_created': datetime.datetime(2020, 9, 4, 19, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aviks', 'type': 'User'}, {'comment_id': 483907951, 'comment_body': 'yes word is Vector here\r\nI will make a small PR with all word tags', 'comment_created': datetime.datetime(2020, 9, 5, 4, 10, 40, tzinfo=datetime.timezone.utc), 'commenter': 'tejasvaidhyadev', 'type': 'User'}]","[{'commit_sha': '44b540c1a42c182d385eb48c6cdb66a667b29a60', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8becfce954c8e7909a63c37bce8c8d1b04b4406b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d8b5f2d36e53521173a9aba591d3862acb62f3', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59b8fae8f179b6ac532d0fe4342ebb49283c4c08', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '328303322b53bae2f2349c5da4be17024eb97964', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36aca88f810ac4953296207de32f02e331904dee', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29fee5564f81e2e88237af814ed21fb1fba38b63', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c41df193371846cf60e38ac8420615beb3f60079', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a35ca92af0ebe52ce4df50e0578d4355e9e4afa5', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '698dc0e4876774b2238364a7f0bc234a11f14d90', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9e7345ae76e801bc875cdbb108f5758e4c8fea5', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f9a0ba5b3e4624191d30a622b7179d4cfed7f35', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eded08451388d1adba00a48a4ad8a60ab85cceaf', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1150e4ed7c133f05324c7430773977721821959e', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15bef1082c0529f10fe28bed45ea5b63f33f9792', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fb6db9d98c502080864119234f4ac638df70b1b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f240cae4aa2998495254fd8c94a13837eb56a001', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bd06efce1b498ab6af6080d88788121eefffac9', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e34e71e800eb762f40d1d74c01612c578f34c562', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be686aff5d3fed2d697e67eed399cbe2557f0b2d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40bae7b011472c37aa8f620e5096ff40123db46d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e58fd17f89f8cbc1cd41f302fc59de3b80ac7108', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8f09f65d25ecd252dc4ac402b70ecd1d2b69a85', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f966544e9e2727a93da35cbeabfe4ceffc12e74', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db6d38a0884638c47c5c52f1c2409ca7d2231a77', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ddf7cb132e8143e9e274a86d52d46035af7c8e8', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1d7417b5e03d1b1ea1c7f58065d7846d0dcd21b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36ffa46ac0cad6931512dad890b4a5ad9710dcd4', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bb35aa8d267b55472f06d2d7f60a5cd9588af5f', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3bcd941ed3813f058e4652dd2e4e25f1812d094', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5408f157066348d956dd80dca63382f78d9cc4a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c5230d539b6a4816802c7f2bf20f96372dcd5ae', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37025af49221110a9bed2df4ec579a6fbc674dff', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d4b9eba6de1e448c23acc18b18ff3370505e93a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c979bceb6ee8796b077a2862fa50a24732294323', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cdfea019d5d66bf2a27b54e158faef8b4345dc6', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e566904c91a5315b118df50599e30a95256e7aa1', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16a254651dd163e76f7c3a66099cced66959782a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8481cfb002fb3a29853b0dccb08355e8789fb9ad', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dc882c3d51a627804a0538b86979a0de6719ea9', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '723103cf392746ada9fcaaaa25196037538ddf89', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b14cc743a35cf6f4f8cc741f852a44d3c4a87e40', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58498eaa47f9d8e82f2e7198d12c3afbbb2c6259', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feb2d46b307b245eb7de6484b99f056426805110', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '995581b1ff87b0501962a4796f49205eea9845d9', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac50d6d36f3066c96266a66e0eb8b84b5c8529d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2345902fe95c5a60268afbe69256116743e1619', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72c4cb040607ee9787d81dd2958121396d48b80f', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12fd3c6f6bff81161bf403807552ef70524ebce0', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd089d519d0b4de2f785866c23ab9dce776a2d8ca', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85f93a8e392e0c918f5855123689a4b93de5384d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}]",Tejas Vaidhya,39345998,iamtejasvaidhya@gmail.com,User,,58,,39,51
396210297,[WIP] Albert,"Hi everyone
I am adding **ALBERT [WIP]** 
Currently only raw code is given in PR.
Dependencies - **Transformers.jl , WordTokenizer.jl**

I am not exporting any function.I am still in middle of deciding what is the best way to use it.
But i am adding some important codes which is used for conversion of pretrained checkpoints and in Demo file below
### Roadmap
- [x] SentencePiece - containing wordpiece as well as unigram model(python Wrapper (for now) as well as julia implementation (under development)) 
- [X] tfckpt2bsonforalbert.jl - for conversion of Tensorflow checkpoint to BSON weights
- [x] albert transformer - It is not completed but is based on transformers.jl transformer
- [X] model file - for now is kept inside ALBERT folder but it just the general wrapping structure to load ALBERT pretrain weight
- [x]  APIs - alberttokenizer , albertmasklm , albertforsequenceclassification etc. 
- [x] our own hosted Pretrain model manage by datadeps.jl
- [x] Documentation, test and Tutorial
- [x] code and APIs for fine tuning and Data loading 
apart from above  refactoring and cleaning of code is remaining

### Important links

Pretrained weights [link](https://drive.google.com/drive/folders/1HHTlS_jBYRE4cG0elITEH7fAkiNmrEgz?usp=sharing) .

- The pretrained weigths are converted from tensorflow check point released by google-research.
- The code for conversion is given in `tfckpt2bsonforalbert.jl`
- Currently Pretrained weight for Version-1 is given soon I will release it for version-2

For detail refer - [link](https://github.com/tejasvaidhyadev/ALBERT.jl)

Demo - [link](https://github.com/tejasvaidhyadev/ALBERT.jl/blob/master/docs/Demo.ipynb)

**PS**
All the suggestions are welcome 




",False,203,https://api.github.com/repos/JuliaText/TextAnalysis.jl/pulls/203,https://github.com/JuliaText/TextAnalysis.jl/pull/203,closed,2015,34,20,58,10,0,0,0,[],2020-03-31 09:52:05+00:00,2023-10-26 14:18:07+00:00,112681562.0,"1304 days, 4:26:02",[],"[{'commit_sha': '98c2c26d994d1542bd1fa26b1993e887ea21f275', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '512ab808195ed3c6f879203beca79548acaf2a4f', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c657e7d34aa8eb18cd0f03d1dcf8b5e8f6006f', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fea372cf808068b07acfbc80ff3ddc2cf2642f2', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8420e920d168ff7faa8fc75653d2c2c043d4073c', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f7b578535138be1861f4b9180ae3f4407d61a9d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ab35bac52d93aa89a5173000d8b5383d8673ca0', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '330eaf1072d3da56fe22f6e10dc510258cd6a566', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fce4d031fc5a26326bf98e9c67444045d34c4d85', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9477952c085c06e0a287ed7f4e5fe1b71380c863', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b4d60d0856aaa8748e8f4d34075eb1be15f0958', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '271645b36b859261d13307ac0da84a3f0f92766d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80bfecd98150f77bd8b07d97c2a411ba92b442b3', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdd80cc2e97a25f92a17f21350adfe51d4147f15', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd982be6f246d2c568d3a806c7dded0b3daf6d09f', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '023fe36dc790ab616b407a37c070a84e2a1d6c89', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '026da7ee90cdd35f7cb53225ffea2eb271774fd7', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9896877f9a35b4fdd790b9ca25211bb6af219795', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ef22ad45ca3eafbcf54600281fee1cee1328410', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71ce4e6f2f97bad0959fda6c904848ce1ad5d156', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c799c8b06ac7b00a251bcc55469c7136b90f1a2a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2908a7c4f60fb87a1d10dd1c11a557c2aae2d4da', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4712b5aed635390a6296a4a49ec94ba4bd72b70b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89c46cf55ef25f0c8f1e7c17c11c7d2d41854bdb', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5279243071067fee621c225720ed03e9f4dffd73', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27ac19dcd43f84fecf62afc34bf27dd434cdf786', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70e1e4d08c16ffeadecaa73ec5438e397dfdd25d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3f5240211bc3ed6afd4fe826703bf07472edc19', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41cdfb5b8eceb9b2643f388cc95d498053804225', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75ad2edc3b7f70e3e6e016e1c41722a7d3e67b47', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36dfd72fed377fbda24f75945a31ce04a20f6df5', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '240beb6369c2f9f108d4605c05f607ff13ab6e4e', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fc9f996232e4fd30033e496c7b2759da60fb26d', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97c18f3fb300bbf2fe7a7a1624b5df9fd3668adc', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f20a216bb71b492888c9b62b0a7933da6cc0a65', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c45a02b8b0db31f1bee93b9a8932341eda5e41d2', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2896cb75afb3a880924e68fe04adda0bbad2fff', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db4ed61dae5b2c580d866837f8eb6793b95dfa9b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5dea1d21bc0550949983b1ad7fc84966bd0d4df', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0ad8d2d497afa590df46db24ad4900ad60759f9', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46a5cf2074afdc70142752f0f0026e320ff05b7c', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2172d27c5ecd2055e7eccaf71b49f942dc50303', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '441e640c70b7bc034aa40adf3281b9ef728603dc', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ace85b1a54659b1b642d4cd03bc6a756dbfb1b4a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ed722cbf5fa1a4e52afe0402a999b31473e5ab7', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd214d4722c2bf78be6d4757f9c3a74389e161a43', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6492751ab9d67f97c0e07b149d306f0125c832c2', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e13066770f2cfc8f34296f8f64c35a85399504b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9c0a3e575a6d3b80841068f6fa848c634b1f1b9', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fa117d1e4bf307d88250d45e497f3a42f2c4384', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cad624fc5dcc645c399e68811f206fa532431e1f', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c56b65bc0de04a87e3fbf7feb2f6fa2c515d7295', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39375338a8f10755eff4a9c6f55cc31d6b22c5b9', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0735b0fd946d60fc65470e23986081d7156b105', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e4509d5c22806a87739e7fba8990143b0504e3b', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29bf3796f791717d1a0d170efdea6129aa7def6a', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c27665e5aba693f16d09c5497b1a3fb434d52e75', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5128da0da80b168699930af6363ec852b7ce9d28', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}]",Tejas Vaidhya,39345998,iamtejasvaidhya@gmail.com,User,,58,,39,51
408645286,Update TextAnalysis.jl for supporting flux-zygote [WIP],"Addressing issue mention in #208 
",False,209,https://api.github.com/repos/JuliaText/TextAnalysis.jl/pulls/209,https://github.com/JuliaText/TextAnalysis.jl/pull/209,closed,22,14,8,5,5,0,0,0,[],2020-04-24 16:20:58+00:00,2021-06-25 12:58:33+00:00,36880655.0,"426 days, 20:37:35",[],"[{'commit_sha': 'dede328da1c35b8428966b40cd836c9f9dd78a53', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e459db2635afcd6274c09d70b21d7fcf7e57e64', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1e35131f99efe694f1af94a029ca05ff6d52661', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98e6043d60e85b1b41d238d2360b2a9f2937784c', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26890d881efa2b2a57b03aaa6f584b0ee22bbb20', 'committer_username': 'tejasvaidhyadev', 'committer_name': 'Tejas Vaidhya', 'committer_email': 'iamtejasvaidhya@gmail.com', 'commit_date': datetime.datetime(2018, 5, 16, 17, 46, 27, tzinfo=datetime.timezone.utc)}]",Tejas Vaidhya,39345998,iamtejasvaidhya@gmail.com,User,,58,,39,51

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
4300438,TextAnalysis.jl,JuliaText/TextAnalysis.jl,Julia,96,373,19,49,629,39,29,5,"[{'id': 480798880, 'number': 233, 'closed': datetime.datetime(2020, 9, 6, 15, 52, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 6, 15, 20, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1923.0, 'time_delta': '0:32:03', 'additions': 62, 'deletions': 57, 'state': 'closed'}, {'id': 480443350, 'number': 220, 'closed': datetime.datetime(2020, 9, 5, 8, 39, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 5, 5, 0, 47, tzinfo=datetime.timezone.utc), 'time_taken': 13146.0, 'time_delta': '3:39:06', 'additions': 13, 'deletions': 13, 'state': 'closed'}, {'id': 409738446, 'number': 210, 'closed': datetime.datetime(2020, 9, 2, 15, 31, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 27, 20, 47, 3, tzinfo=datetime.timezone.utc), 'time_taken': 11040273.0, 'time_delta': '127 days, 18:44:33', 'additions': 813, 'deletions': 2, 'state': 'closed'}, {'id': 408645286, 'number': 209, 'closed': datetime.datetime(2021, 6, 25, 12, 58, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 24, 16, 20, 58, tzinfo=datetime.timezone.utc), 'time_taken': 36880655.0, 'time_delta': '426 days, 20:37:35', 'additions': 22, 'deletions': 14, 'state': 'closed'}, {'id': 404471149, 'number': 206, 'closed': datetime.datetime(2020, 4, 23, 9, 18, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 15, 34, 10, tzinfo=datetime.timezone.utc), 'time_taken': 582250.0, 'time_delta': '6 days, 17:44:10', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 396210297, 'number': 203, 'closed': datetime.datetime(2023, 10, 26, 14, 18, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 31, 9, 52, 5, tzinfo=datetime.timezone.utc), 'time_taken': 112681562.0, 'time_delta': '1304 days, 4:26:02', 'additions': 2015, 'deletions': 34, 'state': 'closed'}, {'id': 382649282, 'number': 198, 'closed': datetime.datetime(2020, 3, 14, 14, 10, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 2, 22, 50, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1005611.0, 'time_delta': '11 days, 15:20:11', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 361477208, 'number': 184, 'closed': datetime.datetime(2020, 1, 13, 14, 41, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 10, 14, 33, 42, tzinfo=datetime.timezone.utc), 'time_taken': 259681.0, 'time_delta': '3 days, 0:08:01', 'additions': 6, 'deletions': 4, 'state': 'closed'}]"
128929229,WordTokenizers.jl,JuliaText/WordTokenizers.jl,Julia,25,97,9,17,258,12,6,5,"[{'id': 444291829, 'number': 51, 'closed': datetime.datetime(2020, 7, 20, 7, 41, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 4, 14, 36, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1357487.0, 'time_delta': '15 days, 17:04:47', 'additions': 418, 'deletions': 3, 'state': 'closed'}]"
