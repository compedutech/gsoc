pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
952678162,Add support for external licenses in scans,"This is for the 2022 Google Summer of Code. This PR contains all the work that needs to be done for the project.

This adds `--additional-license-directory` as a command line option in license reindexing. This allows users to specify paths to directories of licenses and rules they'd like to use during license detection, but would not like to add to the ScanCode database of licenses. First, the user must run Scancode with the `--reindex-licenses` option and they can use `--additional-license-directory` to add directories of licenses or rules to the index.

This involves adding a new option in `licensedcode/plugin_license.py`, and this option is used as a parameter in `scancode/api.py`. In this approach, the licenses and rules contained in these additional directories are combined with the existing licenses and rules in the ScanCode database to produce a single index. The code for this is found in `licensedcode/cache.py` and the helper methods for loading these licenses and rules are found in `licensedcode/models.py`. 

This commit also includes unit tests to verify that license detection succeeds with additional directories and installed licenses/rules. Part of the setup for the unit test and future tests involves creating a new directory in `tests/licensedcode/data` that contains sample external licenses used in the unit tests.

<!-- Delete Template sections if unneccesary -->
<!-- Add issue number here (We encourage you to create the Issue First) -->
<!-- You can also link the issue in Commit Messages -->

Fixes #480

<!--
Make sure these boxes are checked before your pull request (PR) is ready to be reviewed and merged. Thanks!
* [x] - Checked Box
* [ ] - Unchecked Box
-->

### Tasks

* [x] Reviewed [contribution guidelines](https://github.com/nexB/scancode-toolkit/blob/develop/CONTRIBUTING.rst)
* [x] PR is descriptively titled üìë and links the original issue above üîó
* [x] Tests pass -- look for a green checkbox ‚úîÔ∏è a few minutes after opening your PR
  Run [tests](https://scancode-toolkit.readthedocs.io/en/latest/contribute/contrib_dev.html#running-tests) locally to check for errors. 
* [x] Commits are in uniquely-named feature branch and has no merge conflicts üìÅ

<!--
We're happy to help you get this ready -- don't be afraid to ask for help, and **don't be discouraged**
if your tests fail at first!
If tests do fail, click on the red `X` to learn why by reading the logs.
Thanks!
-->

<!-- Don't forget to Signoff -->
",True,2979,https://api.github.com/repos/aboutcode-org/scancode-toolkit/pulls/2979,https://github.com/aboutcode-org/scancode-toolkit/pull/2979,closed,2488,812,120,45,16,66,0,0,[],2022-06-01 02:10:59+00:00,2022-10-28 15:29:02+00:00,12921483.0,"149 days, 13:18:03","[{'comment_id': 886350849, 'comment_body': 'Put a docstring here explaining the function.', 'comment_created': datetime.datetime(2022, 6, 1, 6, 12, 37, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 886351062, 'comment_body': 'Like above, this function should have a docstring', 'comment_created': datetime.datetime(2022, 6, 1, 6, 13, 3, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 886351271, 'comment_body': 'Add docstring', 'comment_created': datetime.datetime(2022, 6, 1, 6, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 886351313, 'comment_body': 'Add docstring', 'comment_created': datetime.datetime(2022, 6, 1, 6, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 886359312, 'comment_body': ""You can use `test_env.get_testloc()` to get your test directory location since we already set up that stuff on line 22.\r\n```suggestion\r\n    external_license_dir = test_env.get_test_loc('example_external_licenses/example1')\r\n```"", 'comment_created': datetime.datetime(2022, 6, 1, 6, 27, 29, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 886361862, 'comment_body': ""I think its cleaner to have the `kwargs.get()` call set as a variable first\r\n```suggestion\r\n        additional_directories = kwargs.get('additional_directories')\r\n        populate_cache(additional_directories=additional_directories)\r\n```"", 'comment_created': datetime.datetime(2022, 6, 1, 6, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 886366185, 'comment_body': ""I think it's better to separate some of this out to their own variables for readability. \r\n```suggestion\r\n            r = list(load_rules(rules_data_dir=rules_dir)\r\n            combined_rules.append(r)\r\n```"", 'comment_created': datetime.datetime(2022, 6, 1, 6, 38, 40, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 886366690, 'comment_body': 'Maybe call this `combined_rules`. We generally want to avoid using the data type in the variable name.', 'comment_created': datetime.datetime(2022, 6, 1, 6, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 894831227, 'comment_body': 'Nitpick: include another new line here. There should be two new lines between functions, as per the PEP 8 style guide.', 'comment_created': datetime.datetime(2022, 6, 10, 19, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 894832119, 'comment_body': 'Add another new line here.', 'comment_created': datetime.datetime(2022, 6, 10, 19, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 894845821, 'comment_body': 'I would consider adding the `@pytest.mark.scanslow` tag here since this test takes a relatively long time to run due to the license cache being built.', 'comment_created': datetime.datetime(2022, 6, 10, 19, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 894846030, 'comment_body': 'Like above, consider adding the `@pytest.mark.scanslow` tag.', 'comment_created': datetime.datetime(2022, 6, 10, 19, 49, 57, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 907751112, 'comment_body': 'Add a docstring for this function.', 'comment_created': datetime.datetime(2022, 6, 27, 20, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 907769330, 'comment_body': ""I think it would be better to extract the custom license plugin prefix (`'licenses'`) to a variable after line 39, something along the lines of `EXTERNAL_LICENSE_PLUGIN_PREFIX = 'licenses'`, then use that variable here. It would make it easier to see and change what the external license plugin prefix is. \r\n"", 'comment_created': datetime.datetime(2022, 6, 27, 20, 26, 27, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 923804542, 'comment_body': 'Just wondering: if we were to run: \r\n\r\n`scancode -clpieu --json-pp output.json samples -dir /home/user/external_licenses/external1 -dir /home/user/external_licenses/external2`\r\n\r\nthen afterwards we wanted to add the custom license `home/user/external_licenses/external3`, would we need to run the command:\r\n\r\n`scancode -clpieu --json-pp output.json samples -dir /home/user/external_licenses/external1 -dir /home/user/external_licenses/external2 -dir /home/user/external_licenses/external3`\r\n\r\nor is it enough to just call \r\n\r\n`scancode -clpieu --json-pp output.json samples -dir /home/user/external_licenses/external3` \r\n\r\nsince we included `/home/user/external_licenses/external1` and `/home/user/external_licenses/external2` before?', 'comment_created': datetime.datetime(2022, 7, 18, 19, 58, 56, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 923808759, 'comment_body': 'Run this test on the Windows and MacOS CI platforms as well', 'comment_created': datetime.datetime(2022, 7, 18, 20, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 924806203, 'comment_body': 'In this case, we\'d have to run \r\n`\r\nscancode -clpieu --json-pp output.json samples -dir /home/user/external_licenses/external1 -dir /home/user/external_licenses/external2 -dir /home/user/external_licenses/external3`\r\n\r\nRight now the code checks if the directories passed in from the command line are a subset of the directories included in the cache, and if they aren\'t, it recreates the index with the input directories. So in this case, initially, `external1` and `external2` would be in the index.\r\n\r\n If we ran \r\n`scancode -clpieu --json-pp output.json samples -dir /home/user/external_licenses/external1 -dir /home/user/external_licenses/external2 -dir /home/user/external_licenses/external3\r\n`, then `external1`, `external2`, and `external3` would be in the index.\r\n\r\nIf we ran `scancode -clpieu --json-pp output.json samples -dir /home/user/external_licenses/external3`, only `external3` would be in the index.\r\n\r\nI implemented it this way since there isn\'t a way to ""remove"" licenses from the index, so I thought that if we always kept on adding licenses to the index each time someone used `-dir`, the index could get really large. Do you think I should implement it such that they always stay in the index?', 'comment_created': datetime.datetime(2022, 7, 19, 17, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'KevinJi22', 'type': 'User'}, {'comment_id': 927003898, 'comment_body': 'I think what you did makes sense. Thanks for clarifying!', 'comment_created': datetime.datetime(2022, 7, 21, 18, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 931716880, 'comment_body': 'Extra new line here', 'comment_created': datetime.datetime(2022, 7, 28, 2, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 931721187, 'comment_body': 'Just thinking out loud: should reindex licenses also index custom licenses?\r\n\r\n@pombredanne ', 'comment_created': datetime.datetime(2022, 7, 28, 2, 13, 59, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 953397733, 'comment_body': 'I am not convinced that this should be related to `--license` at all. Instead this is something that should require the `--reindex-licenses` option and should be used for reindexing and not for an actual scan. Otherwise this is confusing. ', 'comment_created': datetime.datetime(2022, 8, 24, 6, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953398833, 'comment_body': 'Any reason to create a pipeline just for this rather than just reuse the existing ones?\r\n`venv/bin/python3 -m pip install tests/licensedcode/data/example_external_licenses/licenses_to_install1` could very much run as part of the first line of the tests IMHO', 'comment_created': datetime.datetime(2022, 8, 24, 6, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953400408, 'comment_body': 'It looks like you are persisting the list of extra license directories... Can you elaborate on why would you need this?', 'comment_created': datetime.datetime(2022, 8, 24, 6, 33, 20, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953402239, 'comment_body': 'Everywhere in your code, you seem to use the term ""additional"" rather than external. Any reason for not using additional everywhere? It feels to describe better what this is about.', 'comment_created': datetime.datetime(2022, 8, 24, 6, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953403665, 'comment_body': 'I wonder if it could be simpler to always consider multiple directories and not treat ""licenses_data_dir"" as special? ', 'comment_created': datetime.datetime(2022, 8, 24, 6, 37, 57, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953413691, 'comment_body': 'I do not think we should need any cache rebuild logic at all. Either we request an explicit rebuilt of the index with additional licenses or we do not. \r\n\r\nRebuilding based on some cache invalidation is too complex to work correctly all the times and just checking directory names is not enough: the content inside could have changed for instance.\r\n\r\nFWIW, there used to be a fairly sophisticated license cache invalidation logic in the past https://github.com/nexB/scancode-toolkit/blob/aadd743c5f789dc372ef75ed4745829c56cf37a9/src/licensedcode/cache.py#L205\r\nI dropped this as this this was slow and incorrect.   ', 'comment_created': datetime.datetime(2022, 8, 24, 6, 50, 58, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953419810, 'comment_body': 'I am not convinced that using a ""prefix"" is the best design.... Could we do better?\r\nWhat about simply adding a new extension point that would be derived of the location provider? The location providers are supposed to be unique for a given location. In your cases, this does not hold and you can have multiple paths.\r\n\r\n  ', 'comment_created': datetime.datetime(2022, 8, 24, 6, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953422118, 'comment_body': 'IMHO this is the sign that you need a new ""scancode_additional_licenses_provider"" of sorts and should not rely on scancode_location_provider (but can base yours on it alright).', 'comment_created': datetime.datetime(2022, 8, 24, 7, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953427842, 'comment_body': 'As a general style rule, we prefer:\r\n1. imperative style\r\n2. starting with the outcome\r\n\r\nso here, this would become:\r\n```\r\nReturn a mapping of {key: License} built from a list of ``license_directories``.\r\n```\r\n... which raises a few extra questions: ```license_directories``: are these absolute locations? say so.\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 7, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953433364, 'comment_body': 'Are you sure this is what you want there? IMHO a more and explicit common syntax would be: `combined_licenses.update(licenses)` and avoid recreating a whole new dict at each iteration.\r\n\r\nAlso what this would mean is that:\r\n1. there can be multiple time the same license key\r\n2. whichever comes last in the loading order wins\r\n\r\nIMHO this becomes rather important as this means that additional licenses can override existing licenses. We should prohibit this: I think this is best as otherwise the loading order is undefined and we end up with really byzantine weirdness. You should ensure that the keys are unique and fail loudly with a list of duplicate keys if this happens. \r\n', 'comment_created': datetime.datetime(2022, 8, 24, 7, 13, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953434517, 'comment_body': 'Always use imperative style in docstrings.', 'comment_created': datetime.datetime(2022, 8, 24, 7, 15, 9, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953436274, 'comment_body': 'This should be right after the `import attr` in the import order (and eventually we should use isort or usort to automate this)', 'comment_created': datetime.datetime(2022, 8, 24, 7, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953439283, 'comment_body': 'this should be `reindex_licenses` instead', 'comment_created': datetime.datetime(2022, 8, 24, 7, 20, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953440259, 'comment_body': ""You use additional here again. So IMHO additional is the right term to use throughout, not external.\r\nAlso I would add a `metavar='DIR'` and the help could be refined.... What about:\r\n`Include this directory with additional custom licenses and license rules in the license detection index.`"", 'comment_created': datetime.datetime(2022, 8, 24, 7, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953441856, 'comment_body': '```suggestion\r\n            type=click.Path(exists=True, readable=True, file_okay=False, resolve_path=True, path_type=str),\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 7, 22, 57, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953447900, 'comment_body': '@JonoYang yes', 'comment_created': datetime.datetime(2022, 8, 24, 7, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953452824, 'comment_body': 'IMHO additional_directories should be used only when reindexing and not in general. ', 'comment_created': datetime.datetime(2022, 8, 24, 7, 34, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953453546, 'comment_body': 'I am not sure this would be needed further down. Instead the license index has these details', 'comment_created': datetime.datetime(2022, 8, 24, 7, 35, 24, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953455369, 'comment_body': ""IMHO this is not needed. As explained earlier, I think that considering additional directories should  be something that's only done when re-indexing and not when scanning. Asking for additional_directories should be an error when scanning.\r\nSo much so that I would think as the `--reindex-licenses` option pretty much as if it were a separate command entirely."", 'comment_created': datetime.datetime(2022, 8, 24, 7, 37, 26, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953457529, 'comment_body': 'The index should be:\r\n- not existing in the cache in which case we could either rebuild or we could simply error out asking for a reindex.\r\n- existing in the cache and used as-is with whatever directories was used to create it....but passing down additional_directories should never be needed.', 'comment_created': datetime.datetime(2022, 8, 24, 7, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953459583, 'comment_body': 'All these URLs should be empty for additional licenses for now. Later we could provide a way to include them in the data files.', 'comment_created': datetime.datetime(2022, 8, 24, 7, 41, 42, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953463100, 'comment_body': ""Using something shorter and with a smaller file size for an example plugin may be better? This is going to be checked out 1000's of times ;)"", 'comment_created': datetime.datetime(2022, 8, 24, 7, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953463955, 'comment_body': 'Why would you need wheel and pytest as runtime requirements?', 'comment_created': datetime.datetime(2022, 8, 24, 7, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 953465989, 'comment_body': 'IMHO we should include the list of paths to additional licenses directories (either plain dirs or plugin-contributed) in the output as extra data, otherwise there is no way to know something non-standard was used. ', 'comment_created': datetime.datetime(2022, 8, 24, 7, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 954456265, 'comment_body': 'The reason I used ""external"" was in response to one of your earlier comments:\r\n\r\n> Actually --external-license-directory would be better for consistency as we never use an underscore in a command line option. Note that Click will translate this to an undescore-separated Python variable name alright\r\n\r\nbut I can change it to something like `--additional-license-directory`?', 'comment_created': datetime.datetime(2022, 8, 25, 2, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'KevinJi22', 'type': 'User'}, {'comment_id': 954469926, 'comment_body': ""This was originally used for determining cache invalidation but now that we're changing the approach to explicitly force reindexing this can be deleted."", 'comment_created': datetime.datetime(2022, 8, 25, 3, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'KevinJi22', 'type': 'User'}, {'comment_id': 959202055, 'comment_body': '@KevinJi22 you wrote:\r\n\r\n> also, for this, I don\'t think there\'s a way to identify if a license matches an external license vs. a license already in the licenseDB, right? So I\'m not sure how we can set these fields to empty for additional licenses\r\n\r\nGood point... may be we need to add some flag or data source field of sorts to the License and Rule? something that would indicate the provenance?\r\nSome food for thoughts: a minimal approach could be an ""is_builtin"" field added to the License and Rule and that would be set automatically to False for additions and True for builtins? \r\n', 'comment_created': datetime.datetime(2022, 8, 31, 6, 26, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 962182915, 'comment_body': 'This would work as an approach but then I think we\'d have to separate out loading the built in licenses/rules and the additional ones, which is a little less clean but I think that\'s the only way to do it. \r\n\r\nBasically, going back on this idea and treating licenses_data_dir as special:\r\n> I wonder if it could be simpler to always consider multiple directories and not treat ""licenses_data_dir"" as special?', 'comment_created': datetime.datetime(2022, 9, 3, 17, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'KevinJi22', 'type': 'User'}, {'comment_id': 1001669307, 'comment_body': 'Why removing this? this will be a regression.\r\n\r\n```suggestion\r\n                  --ignore=tests/licensedcode/test_detection_datadriven4.py \\\r\n                  --ignore=tests/licensedcode/test_additional_license.py \\\r\n                   tests/licensedcode\r\n```', 'comment_created': datetime.datetime(2022, 10, 21, 11, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1001670343, 'comment_body': 'This whole section likely needs to be updated now that we changed the CLI UX.', 'comment_created': datetime.datetime(2022, 10, 21, 11, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1001670900, 'comment_body': 'This likely needs love with the new CLI UX.', 'comment_created': datetime.datetime(2022, 10, 21, 11, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1001671174, 'comment_body': 'Now obsolete', 'comment_created': datetime.datetime(2022, 10, 21, 11, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1001671316, 'comment_body': 'Obsolete', 'comment_created': datetime.datetime(2022, 10, 21, 11, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1001673523, 'comment_body': 'This should be moved further down... this is not stdlib', 'comment_created': datetime.datetime(2022, 10, 21, 11, 19, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1001678024, 'comment_body': 'If we merely pass an  additional directory, this should not implicitly trigger a forced rebuild.\r\n', 'comment_created': datetime.datetime(2022, 10, 21, 11, 25, 35, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1003140024, 'comment_body': 'I am not sure keeping these directories make sense. They cannot really be used at runtime as the additional license directory may not exist anymore and the plugins could have been uninstalled. In a way now that we keep all the license and rule texts and data in the index, these directories do not matter anymore: we could dump the data if needed and we just need to know if a license is built-in or not: this could be a flag on the License or this could just be a separate index set that lists built-in license keys?', 'comment_created': datetime.datetime(2022, 10, 24, 10, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1003283327, 'comment_body': 'Why removing this?', 'comment_created': datetime.datetime(2022, 10, 24, 12, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1007910255, 'comment_body': ""Added this back, this shouldn't be removed, used in scripts."", 'comment_created': datetime.datetime(2022, 10, 28, 10, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'AyanSinhaMahapatra', 'type': 'User'}, {'comment_id': 1007910295, 'comment_body': ""This isn't the current behaviour, updating the docstring."", 'comment_created': datetime.datetime(2022, 10, 28, 10, 25, 33, tzinfo=datetime.timezone.utc), 'commenter': 'AyanSinhaMahapatra', 'type': 'User'}, {'comment_id': 1007910324, 'comment_body': ""This is outdated, couldn't find it."", 'comment_created': datetime.datetime(2022, 10, 28, 10, 25, 35, tzinfo=datetime.timezone.utc), 'commenter': 'AyanSinhaMahapatra', 'type': 'User'}, {'comment_id': 1007910359, 'comment_body': 'Removing this.', 'comment_created': datetime.datetime(2022, 10, 28, 10, 25, 37, tzinfo=datetime.timezone.utc), 'commenter': 'AyanSinhaMahapatra', 'type': 'User'}, {'comment_id': 1007910425, 'comment_body': 'Yes! Removing this.', 'comment_created': datetime.datetime(2022, 10, 28, 10, 25, 42, tzinfo=datetime.timezone.utc), 'commenter': 'AyanSinhaMahapatra', 'type': 'User'}, {'comment_id': 1007910551, 'comment_body': 'Yes, moving this to a new page for `other commands`', 'comment_created': datetime.datetime(2022, 10, 28, 10, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'AyanSinhaMahapatra', 'type': 'User'}, {'comment_id': 1007911145, 'comment_body': 'Added this back.', 'comment_created': datetime.datetime(2022, 10, 28, 10, 26, 35, tzinfo=datetime.timezone.utc), 'commenter': 'AyanSinhaMahapatra', 'type': 'User'}, {'comment_id': 1008174502, 'comment_body': 'Actually you are right!', 'comment_created': datetime.datetime(2022, 10, 28, 15, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 1008183579, 'comment_body': '```suggestion\r\n\r\n- There is a new ""scancode-reindex-licenses"" command that replace the\r\n  ""scancode --reindex-licenses"" command line option which has been\r\n  removed. This new command supports simpler reindexing using custom\r\n  license texts and license rules contributed by plugins or stored in an\r\n  additional directory. \r\n```', 'comment_created': datetime.datetime(2022, 10, 28, 15, 20, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}]","[{'commit_sha': '05d9197eb7ddda08e0f9cf9357b9a875d4475644', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4989205632d9a994d06d167d321f54ae7679e585', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cbfff1e7ea2bb283469f0fadf44a2a7627f7079', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3376b9cbf81f6abc67352681d0c5bb0d06b7162a', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '681436da62d77b3b56d7e7a23629bf03fc38a75a', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e741ffd93722342b4585902b9c3d1fe320866b3f', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afae69285341151d85693021f2af119ff7e3fa85', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f576dfa4ec395e9f1e892613a3d5e85f3ef486bf', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a68c4cc0ac8d5a132fae714cc22f7b3cc0e09c22', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '789cf76b11876553587562b1eb25e7aa248556fd', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7809eec0185122f3812bdc60e24b2e3fd15f807', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdf627f98255eddfcc69f2929bdbb6a649436458', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e66c9a98f905c2da845c74a5bc1ba72ce60129f', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9679feb5277b5b3a08eabf65741694dfd786193e', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6aae7e26ced612a2b03623dd83fdc1f2f32377f7', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f13ed1d50337703af8596d9ea4333621597ae6b7', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b03eea1dee2d3f40d0a2c7268b2374729f8eb38', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f3be97aa32aa3a8640cc26b773733a7f86e115', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '983024eb41354f1f9828bb1a39aacbf779d282b4', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8391d00c5807d1c3ce2446da84d30f594bf0b12', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bc43afe08873ab9faf9fba9e0ef2dabd12b38ad', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc7b967aa1aa9161da82d05baac7f2514a0c7007', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '597c616e3c0077ef0de5608f4da08df2b1b146b4', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85001c1bf457004018757e82560847d1dbca6d84', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74970096d56e592602aa41e56e62a0ed40bf08d6', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6068c64918db51a76802081939dd9152f67ef3d', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16513ff40eadd517dca2af6ba090bcbac0a90c6a', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17df9d0cfbfd0c655df2b51042aabbb383f1fee5', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3762ca5190f362562217d08bc4a4d137c5419204', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba9740b387f01c8bfc81426e71c3468a12cf1a05', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba11f059f10599c8410de3a6d768cf072fe84fc9', 'committer_username': 'pombredanne', 'committer_name': 'Philippe Ombredanne', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 17, 21, 45, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61c3283954dfe85ced0506a9176ca8adf0d6168a', 'committer_username': 'pombredanne', 'committer_name': 'Philippe Ombredanne', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 17, 21, 45, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4ebbe07477b9822f0fc7c726a1ecf8206dde070', 'committer_username': 'pombredanne', 'committer_name': 'Philippe Ombredanne', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 17, 21, 45, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1db9437fdba688d05fe692aaf5d4cd9cd58840be', 'committer_username': 'pombredanne', 'committer_name': 'Philippe Ombredanne', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 17, 21, 45, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8df0e2710fa596009ec8f4abd19a5095b3d4952d', 'committer_username': 'KevinJi22', 'committer_name': 'Kevin Ji', 'committer_email': None, 'commit_date': datetime.datetime(2016, 7, 28, 23, 37, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f53886f9db39ca752e9ebd0aeb6fbd0ed18c31a9', 'committer_username': 'AyanSinhaMahapatra', 'committer_name': 'Ayan Sinha Mahapatra', 'committer_email': 'ayansmahapatra@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 14, 39, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5361052117189489703d436a68e5f364f9a39c0d', 'committer_username': 'AyanSinhaMahapatra', 'committer_name': 'Ayan Sinha Mahapatra', 'committer_email': 'ayansmahapatra@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 14, 39, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a477e54f5898d59e7e6d7136f57d1343b9e6c339', 'committer_username': 'AyanSinhaMahapatra', 'committer_name': 'Ayan Sinha Mahapatra', 'committer_email': 'ayansmahapatra@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 14, 39, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64120395dc35a0f16e0227499e2ec855bdfd9475', 'committer_username': 'AyanSinhaMahapatra', 'committer_name': 'Ayan Sinha Mahapatra', 'committer_email': 'ayansmahapatra@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 14, 39, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e14d8a6249fd341cea4fec26018bd7f36318c59', 'committer_username': 'AyanSinhaMahapatra', 'committer_name': 'Ayan Sinha Mahapatra', 'committer_email': 'ayansmahapatra@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 14, 39, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '044f60d4b642081d2721f0253bdf7748db8ac2ca', 'committer_username': 'AyanSinhaMahapatra', 'committer_name': 'Ayan Sinha Mahapatra', 'committer_email': 'ayansmahapatra@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 14, 39, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f201faaa6330c4ec17b32b6832520b207d52ca45', 'committer_username': 'AyanSinhaMahapatra', 'committer_name': 'Ayan Sinha Mahapatra', 'committer_email': 'ayansmahapatra@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 14, 39, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '095c8ede52559378af041ddd90c08ab7e7927ada', 'committer_username': 'AyanSinhaMahapatra', 'committer_name': 'Ayan Sinha Mahapatra', 'committer_email': 'ayansmahapatra@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 14, 39, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54fb102c29c8fbd65e4b93a4d0d7cd7c22b9ea53', 'committer_username': 'AyanSinhaMahapatra', 'committer_name': 'Ayan Sinha Mahapatra', 'committer_email': 'ayansmahapatra@gmail.com', 'commit_date': datetime.datetime(2017, 2, 13, 14, 39, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2b1e13a10fe8e7b4863f22beba29691b4ada6c2', 'committer_username': 'pombredanne', 'committer_name': 'Philippe Ombredanne', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 17, 21, 45, 6, tzinfo=datetime.timezone.utc)}]",Kevin Ji,20713830,,User,,16,,0,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
38373338,scancode-toolkit,aboutcode-org/scancode-toolkit,Python,538,2045,74,375,11177,1054,37,30,"[{'id': 952678162, 'number': 2979, 'closed': datetime.datetime(2022, 10, 28, 15, 29, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 1, 2, 10, 59, tzinfo=datetime.timezone.utc), 'time_taken': 12921483.0, 'time_delta': '149 days, 13:18:03', 'additions': 2488, 'deletions': 812, 'state': 'closed'}, {'id': 842416255, 'number': 2858, 'closed': datetime.datetime(2022, 2, 8, 10, 9, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 8, 4, 59, tzinfo=datetime.timezone.utc), 'time_taken': 18604.0, 'time_delta': '5:10:04', 'additions': 14, 'deletions': 3, 'state': 'closed'}, {'id': 831017361, 'number': 2811, 'closed': datetime.datetime(2022, 2, 1, 21, 33, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 25, 2, 56, 35, tzinfo=datetime.timezone.utc), 'time_taken': 671825.0, 'time_delta': '7 days, 18:37:05', 'additions': 4, 'deletions': 17, 'state': 'closed'}, {'id': 825914399, 'number': 2799, 'closed': datetime.datetime(2022, 1, 24, 22, 25, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 18, 22, 2, 52, tzinfo=datetime.timezone.utc), 'time_taken': 519782.0, 'time_delta': '6 days, 0:23:02', 'additions': 4, 'deletions': 0, 'state': 'closed'}]"
