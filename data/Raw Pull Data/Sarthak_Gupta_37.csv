pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
373266619,Add Config Modules,"#8 

TODO: Add and modify relevant files to make it ready to upload in PyPi",True,9,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/9,https://github.com/elixir-cloud-aai/foca/pull/9,closed,277,0,4,6,0,0,0,0,[],2020-02-10 17:43:27+00:00,2020-02-10 18:25:24+00:00,2517.0,0:41:57,[],"[{'commit_sha': '70e65bfd1de504df55acbe147653aad4ac2552f2', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1320b3925895835cd72b6f208382fb80b57b84a', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a8b11bd29da074d855c09c0cb300a56a3e74033', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c24c774388c48104b37087cd76ff414d99a7572', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69ad44ffcbadc389292746da76f0772fef8e6bc0', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac23930c7e89c893e99a1b0b4b68385765a524a', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
379725810,Add code coverage badge,https://github.com/elixir-cloud-aai/archetype-flask-connexion/issues/14 ,True,16,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/16,https://github.com/elixir-cloud-aai/foca/pull/16,closed,1,0,1,1,2,0,0,0,[],2020-02-25 18:13:26+00:00,2020-02-25 20:07:27+00:00,6841.0,1:54:01,[],"[{'commit_sha': '397fbb682d621f2e5aff4a166f3d9180ca930418', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
385136752,Add config_parser.py tests,#15 ,True,17,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/17,https://github.com/elixir-cloud-aai/foca/pull/17,closed,174,0,5,12,3,3,0,0,[],2020-03-07 11:45:59+00:00,2020-03-11 18:50:21+00:00,371062.0,"4 days, 7:04:22","[{'comment_id': 389820571, 'comment_body': 'Guess you could use a `lambda` here instead of defining a function that you only use once...', 'comment_created': datetime.datetime(2020, 3, 9, 16, 49, 35, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 389823918, 'comment_body': 'I would define these variables as constants at the top of the file, so you can reuse them, e.g.:\r\n```\r\nCONFIG_PATH_OKAY = [""some/valid/path""]\r\nCONFIG_PATH_MISSING = [""some/invalid/path""]\r\nCONFIG_VAR_EMPTY = []\r\n```\r\n', 'comment_created': datetime.datetime(2020, 3, 9, 16, 54, 50, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 389837371, 'comment_body': 'Will study about lambdas and then change it :)', 'comment_created': datetime.datetime(2020, 3, 9, 17, 16, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}]","[{'commit_sha': '4eb83d78720b33a8317cdd8fd4ca53197a9b82ec', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d7d61c50cea4f53b1acce79769336cd51df083f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5ff96665f34f80778f016851f8ff3c8fe329185', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d263db8029e43d1ea310e66fd5d9a89e17661a6', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c090798449b3a5cc4bafffdb31c2c6894104827f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b93d800fd851b5ddfea5dbc839f01d5e0266983', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8edfa4b0ab51c19870806409c91277314698bc21', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ed83b95b0a3fafddafdacc6e61659f6584a0eb9', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be679ba82eb2a7f152e84e623e7c9629f22d516e', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '756647e96ffb3da434d1c4cdd77302fa6b9d1b76', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b8d00e49360e29784bcf37badff76b7b84fc97d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4001ebe58cc6a105b37480d6ddf12a9d1d58a87b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
388252826,Add log config tests,Will close #15 ,True,20,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/20,https://github.com/elixir-cloud-aai/foca/pull/20,closed,66,0,2,14,0,0,0,0,[],2020-03-14 10:36:01+00:00,2020-03-17 14:46:35+00:00,274234.0,"3 days, 4:10:34",[],"[{'commit_sha': '4eb83d78720b33a8317cdd8fd4ca53197a9b82ec', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d7d61c50cea4f53b1acce79769336cd51df083f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5ff96665f34f80778f016851f8ff3c8fe329185', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d263db8029e43d1ea310e66fd5d9a89e17661a6', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c090798449b3a5cc4bafffdb31c2c6894104827f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b93d800fd851b5ddfea5dbc839f01d5e0266983', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8edfa4b0ab51c19870806409c91277314698bc21', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ed83b95b0a3fafddafdacc6e61659f6584a0eb9', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be679ba82eb2a7f152e84e623e7c9629f22d516e', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '756647e96ffb3da434d1c4cdd77302fa6b9d1b76', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b8d00e49360e29784bcf37badff76b7b84fc97d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4001ebe58cc6a105b37480d6ddf12a9d1d58a87b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c76171d4985d5b85251d3939aa5819f6473930d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bca83b8c24caa095e32b5bf74deb6329aaf3444c', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
390353440,Name change in different files,With respect to our discussions in #7,True,21,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/21,https://github.com/elixir-cloud-aai/foca/pull/21,closed,17,44,10,5,2,2,0,0,[],2020-03-18 10:34:35+00:00,2020-03-18 12:25:47+00:00,6672.0,1:51:12,"[{'comment_id': 394294158, 'comment_body': 'This regression (4.2b1 to 3.12) is probably the reason for the CI failing', 'comment_created': datetime.datetime(2020, 3, 18, 12, 0, 25, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 394294646, 'comment_body': ""Isn't this built-in? Don't think it's necessary to list explicitly"", 'comment_created': datetime.datetime(2020, 3, 18, 12, 1, 20, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': '5797605aa9a48c03f42eb207f2751b076f00b52a', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fff4559a6df60858c32ae2a613b80d9658dcefc', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0e1de99030600c93527b2bc791f532cd2f8b8b3', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f02d9e663c2087ac4fede1e77d137ab134c5c5', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41fa03d148963888b0ca3e5ee2b6c93ff61cc680', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
390616706,Package project,"#7 
Release the project to Pypi",True,22,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/22,https://github.com/elixir-cloud-aai/foca/pull/22,closed,107,5,5,21,0,3,0,0,[],2020-03-18 19:12:18+00:00,2020-03-18 22:35:54+00:00,12216.0,3:23:36,"[{'comment_id': 394765437, 'comment_body': 'why not 0.0.1?', 'comment_created': datetime.datetime(2020, 3, 19, 3, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 394909035, 'comment_body': ""I think it's more standard, because of the semantics associated with [semver](https://semver.org). Doesn't really make sense to start a project with a _patch_. On the other hand, a version of 1.x implies that a program is production-grade. So that's why the first version is typically 0.1.0. But it's not important, just convention, and others may disagree"", 'comment_created': datetime.datetime(2020, 3, 19, 9, 57, 58, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 394910694, 'comment_body': 'got it. :)', 'comment_created': datetime.datetime(2020, 3, 19, 10, 0, 39, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}]","[{'commit_sha': '4eb83d78720b33a8317cdd8fd4ca53197a9b82ec', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d7d61c50cea4f53b1acce79769336cd51df083f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5ff96665f34f80778f016851f8ff3c8fe329185', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d263db8029e43d1ea310e66fd5d9a89e17661a6', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c090798449b3a5cc4bafffdb31c2c6894104827f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b93d800fd851b5ddfea5dbc839f01d5e0266983', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8edfa4b0ab51c19870806409c91277314698bc21', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ed83b95b0a3fafddafdacc6e61659f6584a0eb9', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be679ba82eb2a7f152e84e623e7c9629f22d516e', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '756647e96ffb3da434d1c4cdd77302fa6b9d1b76', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b8d00e49360e29784bcf37badff76b7b84fc97d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4001ebe58cc6a105b37480d6ddf12a9d1d58a87b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c76171d4985d5b85251d3939aa5819f6473930d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bca83b8c24caa095e32b5bf74deb6329aaf3444c', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef60a41750c6cdec18aa979423b760d83c1a790d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ab1393581daba841593e3470deba7b54dba6588', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0ee52074b7606df70f07464f9c2c74277cc4ddd', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '107b87f906f3f87e68089c07bb30a024f6e3454c', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '271c147b9fca607a058c827098862a062611f916', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e11131df8d7ba1465c970da0b4b56b524029a2ca', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd345060bd16e608694d76604824cbf420abecc08', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
395092797,Adding database modules with tests,"Replaces PR https://github.com/elixir-cloud-aai/foca/pull/11.

Partly addresses https://github.com/elixir-cloud-aai/foca/issues/10

Only adding two functions in `db_utils.py` file. Others are specific to service and/or Celery.",True,24,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/24,https://github.com/elixir-cloud-aai/foca/pull/24,closed,74,1,5,22,4,0,0,0,[],2020-03-28 12:59:41+00:00,2020-03-30 13:28:37+00:00,174536.0,"2 days, 0:28:56",[],"[{'commit_sha': '4eb83d78720b33a8317cdd8fd4ca53197a9b82ec', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d7d61c50cea4f53b1acce79769336cd51df083f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5ff96665f34f80778f016851f8ff3c8fe329185', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d263db8029e43d1ea310e66fd5d9a89e17661a6', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c090798449b3a5cc4bafffdb31c2c6894104827f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b93d800fd851b5ddfea5dbc839f01d5e0266983', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8edfa4b0ab51c19870806409c91277314698bc21', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ed83b95b0a3fafddafdacc6e61659f6584a0eb9', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be679ba82eb2a7f152e84e623e7c9629f22d516e', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '756647e96ffb3da434d1c4cdd77302fa6b9d1b76', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b8d00e49360e29784bcf37badff76b7b84fc97d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4001ebe58cc6a105b37480d6ddf12a9d1d58a87b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c76171d4985d5b85251d3939aa5819f6473930d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bca83b8c24caa095e32b5bf74deb6329aaf3444c', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef60a41750c6cdec18aa979423b760d83c1a790d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ab1393581daba841593e3470deba7b54dba6588', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0ee52074b7606df70f07464f9c2c74277cc4ddd', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '107b87f906f3f87e68089c07bb30a024f6e3454c', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '775536f532bfbcc6c103e099a8e00a3801aeb2c8', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfe3c5679aeb50709595b9e56203fce7d85c7ea4', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a49261366c2c6f815a15987c47da598df925522', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b3d9d60e7cf34128f641ae6a78a94287e1900b1', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
395228100,Add security modules with tests,Addresses part of #25 ,True,26,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/26,https://github.com/elixir-cloud-aai/foca/pull/26,closed,34,0,3,2,0,0,0,0,[],2020-03-29 10:16:32+00:00,2020-03-30 11:49:45+00:00,91993.0,"1 day, 1:33:13",[],"[{'commit_sha': '779b296ddaf853b6578fc8d43590ca6594fe0806', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08ce010f68768cd8855a4af630275d755439e542', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
419084606,docs: update documentation,"Changes done:
* Update documentation
* Add CONTRIBUTING.md
* Add CODE_OF_CONDUCT.md
* Add PULL_REQUEST_TEMPLATE.md",True,32,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/32,https://github.com/elixir-cloud-aai/foca/pull/32,closed,78,4,2,10,0,5,0,0,[],2020-05-17 09:19:27+00:00,2020-05-18 17:05:15+00:00,114348.0,"1 day, 7:45:48","[{'comment_id': 426528702, 'comment_body': ""Instead of adding this file, I think we could just add a link to the README pointing to our org's new contributor guidelines, available here: https://github.com/elixir-cloud-aai/elixir-cloud-aai/blob/dev/CONTRIBUTING.md"", 'comment_created': datetime.datetime(2020, 5, 18, 10, 32, 52, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 426530587, 'comment_body': ""Instead of adding this file, I think it's better to add a section `## Code of Conduct` to the `README.md` and link to the one in our welcoming/landing page repo here: https://github.com/elixir-cloud-aai/elixir-cloud-aai/blob/dev/CODE_OF_CONDUCT.md\r\n\r\nAdditional advantage is that we already have the contact email address filled out in that one"", 'comment_created': datetime.datetime(2020, 5, 18, 10, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 426531103, 'comment_body': ""Update this link to point to the corresponding section in our org's contributing guidelines (see last comment above)"", 'comment_created': datetime.datetime(2020, 5, 18, 10, 37, 30, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 426535164, 'comment_body': ""I'd propose:\r\n\r\n```console\r\nFOCA is a [Python package](https://pypi.org/project/foca/) that enables fast development of OpenAPI-based HTTP API microservices in Flask. It includes modules for\r\n* configuration management\r\n* error handling\r\n* database interaction (currently MongoDB)\r\n* JWT validation\r\n```"", 'comment_created': datetime.datetime(2020, 5, 18, 10, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 426658595, 'comment_body': 'https://github.com/elixir-cloud-aai/elixir-cloud-aai/blob/dev/resources/contributing_guidelines.md this is the correct link, right? This is a little specific.', 'comment_created': datetime.datetime(2020, 5, 18, 14, 15, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}]","[{'commit_sha': '546c143281539302b65f8a40836b91bd7ff9f9d6', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a627caf4d73df88048746396e7439c457414cd3b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75f88b3c19ff4dc343ac9c56382b4de97b0375d4', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc5062ed08e57017ddfb875382211ec3170cd026', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f001fc5835a551dd618f26a7278eae5d114a05f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a96b3f1116f8c53d5ab1f50849873aa59e3860b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c92dcc4ea63b5cdf78dca3776acbad63360b05c8', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35dea99e77dde8d731a9b0da04bcf9582a3cbe1d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9914be87feb32f37759383b57ced57f29cca41ac', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4fd5e794d7f47f6ee97e0f23bfb567af6cf15cb', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
422729077,feat: register MongoDB,"## Description

`register_mongodb.py` module in various service have two functions namely `create_mongo_client` and `register_mongodb`.

On some analysis it can be seen that, `create_mongo_client` function can be used for any service. But `register_mongodb` is specific to each service because it involves creating a database and collections which are specific to each service.

Closes #10 

Along with this change, there are some style changes in some previously written tests to follow [PEP-257](https://www.python.org/dev/peps/pep-0257/)

## Type of change

Please delete options that are not relevant.

- [x] New feature (non-breaking change which adds functionality)
- [x] Style Changes

## Checklist:

- [x] My code follows the [style guidelines](https://github.com/elixir-cloud-aai/elixir-cloud-aai/blob/dev/resources/contributing_guidelines.md#language-specific-guidelines) of this project
- [x] I have performed a self-review of my own code
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] My changes generate no new warnings
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] I have not reduced the existing code coverage
",True,37,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/37,https://github.com/elixir-cloud-aai/foca/pull/37,closed,233,77,5,3,1,0,0,0,[],2020-05-25 12:34:18+00:00,2020-05-25 17:48:37+00:00,18859.0,5:14:19,[],"[{'commit_sha': 'a6adc0182344ef7cce03b3cbd181d046ffcac940', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2cfca8f2b3baace183d98a31e5fb6c5ea1992f0', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b8b58bd8bb59ef813e2bfb74b72f8d336ae3a43', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
427313606,feat: class-based config handling with validation,"## Description

* Config handling based on auto-validated `pydantic` models
* Config parameters can be accessed via attributes (e.g., `config.db.host` rather `config['db']['host']`)
* Defaults allow instantiating the main `Config()` class without any additional arguments
* Passing a valid YAML file overwrites defaults and allows passing parameters for configuring the service, logging, registering OpenAPI specs, securing endpoints, adding a MongoDB database and a RabbitMQ- & Celery-based infrastructure for executing background jobs

Fixes #43",True,44,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/44,https://github.com/elixir-cloud-aai/foca/pull/44,closed,860,574,15,18,0,2,0,0,[],2020-06-03 16:16:20+00:00,2020-06-18 21:45:42+00:00,1315762.0,"15 days, 5:29:22","[{'comment_id': 440089130, 'comment_body': ""Really nice. I didn't think that a class can be used in this way also. :)"", 'comment_created': datetime.datetime(2020, 6, 15, 10, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 441930997, 'comment_body': 'All docstrings in this module should be in this format.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': '3dc91a11ca31d74fe90b8b19c7756e59aa3421fa', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b90b1c35c1983935b390c26c94dba460479dc3ac', 'committer_username': 'kushagra189', 'committer_name': 'Kushagra', 'committer_email': 'nagorikushagra9@gmail.com', 'commit_date': datetime.datetime(2016, 11, 3, 9, 30, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9bea532358533807ab9b4d73419500852101d5a', 'committer_username': 'kushagra189', 'committer_name': 'Kushagra', 'committer_email': 'nagorikushagra9@gmail.com', 'commit_date': datetime.datetime(2016, 11, 3, 9, 30, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd43cb44342ea267435c30fc40fab9e8990859479', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1387d575bd128ad692467a44460dacf86c997bec', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '448128e1de63728e15f7a8d61f7c856e46f28d8c', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80ac3df30a3dd95b43596f2207a728f637c2469a', 'committer_username': 'kushagra189', 'committer_name': 'Kushagra', 'committer_email': 'nagorikushagra9@gmail.com', 'commit_date': datetime.datetime(2016, 11, 3, 9, 30, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06163f7f082a846507358dee47845250916dee3f', 'committer_username': 'kushagra189', 'committer_name': 'Kushagra', 'committer_email': 'nagorikushagra9@gmail.com', 'commit_date': datetime.datetime(2016, 11, 3, 9, 30, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2521289726c862a10589a5f895a5b9b925890f2d', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82ff7565f31665b173e8a443a4ac0302ad249910', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37468906ca4b3871de810f89531c69734763e593', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e66b58820623ca378708c25bf955ce93549777f', 'committer_username': 'kushagra189', 'committer_name': 'Kushagra', 'committer_email': 'nagorikushagra9@gmail.com', 'commit_date': datetime.datetime(2016, 11, 3, 9, 30, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62453c53b19b517b7c1e698d3e46cc570832c2b2', 'committer_username': 'kushagra189', 'committer_name': 'Kushagra', 'committer_email': 'nagorikushagra9@gmail.com', 'commit_date': datetime.datetime(2016, 11, 3, 9, 30, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '405b098eadfdf2a823bccbc68d627cf7f6d56850', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f1640f59639873f1080c6ee408d92707587ff98', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '435038602134b6e9f438279102227aa5be7e737d', 'committer_username': 'kushagra189', 'committer_name': 'Kushagra', 'committer_email': 'nagorikushagra9@gmail.com', 'commit_date': datetime.datetime(2016, 11, 3, 9, 30, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f3a91c3e0cdbc82ac1f250966a6fd02883c2788', 'committer_username': 'kushagra189', 'committer_name': 'Kushagra', 'committer_email': 'nagorikushagra9@gmail.com', 'commit_date': datetime.datetime(2016, 11, 3, 9, 30, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61c9791d120c7e2f39522c535a7bf718c47633d6', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
446653616,feat(api): support merging multiple specs (#75),"## Description

Adding the ability to provide `str` or `List[str]` in `path` parameter of the `specs`. The OpenAPI yaml files provided in the list will be merged into a single OpenAPI yaml file.

Fixes #74 

## Before the change

The api structure in config file can be in the following format, if there is a file `petstore.yaml` where specs are defined.
```
api:
    specs:
        - path: petstore.yaml
          append: null
          add_operation_fields:
              x-openapi-router-controller: controllers
          connexion:
              strict_validation: True
              validate_responses: False
              options:
                  swagger_ui: True
                  serve_spec: True
```

## After the change

If we need to merge two spec file `add.yaml` into `petstore.yaml` then it can done in the below given way:

```
api:
    specs:
        - path:
            - petstore.yaml
            - add.yaml
          append: null
          add_operation_fields:
              x-openapi-router-controller: controllers
          connexion:
              strict_validation: True
              validate_responses: False
              options:
                  swagger_ui: True
                  serve_spec: True
```
If there is a single spec file only, then also it can be passed like this:

```
api:
    specs:
        - path:
            - petstore.yaml
          append: null
          add_operation_fields:
              x-openapi-router-controller: controllers
          connexion:
              strict_validation: True
              validate_responses: False
              options:
                  swagger_ui: True
                  serve_spec: True
```

## Type of change

Please delete options that are not relevant.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [x] Documentation update

## Checklist:

- [x] My code follows the [style guidelines](https://github.com/elixir-cloud-aai/elixir-cloud-aai/blob/dev/resources/contributing_guidelines.md#language-specific-guidelines) of this project
- [x] I have performed a self-review of my own code
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] My changes generate no new warnings
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] I have not reduced the existing code coverage
",True,75,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/75,https://github.com/elixir-cloud-aai/foca/pull/75,closed,195,14,9,20,0,15,0,0,[],2020-07-09 06:45:03+00:00,2020-07-17 17:33:13+00:00,730090.0,"8 days, 10:48:10","[{'comment_id': 453329533, 'comment_body': ""Lacks typing info and docstring. Also, the function name does not conform to conventions (use snake case for all Python functions, i.e., `_merge_specs()`). I also don't think this function needs to be private - in fact it may be useful for people to use, so better call `merge_specs()`. As you don't seem to make use of `kwargs`, there's no need to include it in the signature. Finally, I think just `args`, without `original` is enough, then use `.pop(0)` to retrieve it and remove it from the list. This makes it cleaner and easier to use. Just document this behavior in the docstring (not in the summary line, but in the extended description before the `Args:` section.\r\n\r\nYou should also think about edge cases: what if the user supplies no or only one argument?\r\nE.g.: if no arguments are supplied, return `None`, if one arg is supplied, return the unmodified specs (which is what happens already). Given these cases, it might actually make more sense to just call the function `parse_specs()`.In that case, you can then further simplify the logic in the calling context like this::\r\n\r\n```py\r\nif isinstance(spec.path, str):  # this takes care of the case where the user provides `str` rather than a list of `str`\r\n    spec_path = [spec_path]\r\nelif len(spec.path) > 1:\r\n    spec_modified = True\r\nspec_parsed = parse_specs(*spec.path)\r\n```"", 'comment_created': datetime.datetime(2020, 7, 12, 15, 19, 20, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 453329615, 'comment_body': '`original_data` is perhaps not the best name, because you are changing it over the course of the function. Just call it `specs`.', 'comment_created': datetime.datetime(2020, 7, 12, 15, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 453329851, 'comment_body': 'Seems like in this case the specs are never parsed. Actually, if the user provides just a file path or a list with a single file path, the behavior should be the same: the file path should be parsed with `ConfigParser.parse_yaml()`.\r\n\r\nTherefore, you can simplify the code, e.g., like this:\r\n\r\n```py\r\nif isinstance(spec.path, list) and len(spec.path) > 1:\r\n    spec_modified = True\r\n    spec_parsed = _mergeSpecs(*spec.path)\r\nelse:\r\n    spec_parsed = ConfigParser.parse_yaml(spec.path)\r\n```', 'comment_created': datetime.datetime(2020, 7, 12, 15, 21, 58, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 453331214, 'comment_body': ""I'm actually not sure how generally applicable this is: why do you update exactly on level 2, why not on level 1, why not on level 3, 4, 5... ? What are the consequences and limitations of this approach? You could have a look at the `addict` package to update dictionaries smartly. Or use a package to merge json/yaml before parsing it with `ConfigParser.parse_yaml()`."", 'comment_created': datetime.datetime(2020, 7, 12, 15, 34, 38, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 453530738, 'comment_body': ""Let's better not do that or otherwise we should also implement the logic for this. Instead, put `add.yaml` to `tests/test_files` and use it in your unit tests (and leave this file as it was)."", 'comment_created': datetime.datetime(2020, 7, 13, 9, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 453612954, 'comment_body': ""@uniqueg  https://github.com/elixir-cloud-aai/foca/pull/75/files#diff-eb7d57a240e2ff03256e64aa7fb30a13L78  expects a string when specs are not modified. I have tested this. This will break when the input is like this:\r\n\r\nHere the path contains a list with a single spec file.\r\n```\r\napi:\r\n    specs:\r\n        - path: petstore.yaml\r\n          append: null\r\n          connexion:\r\n              strict_validation: True\r\n              validate_responses: False\r\n              options:\r\n                  swagger_ui: True\r\n                  serve_spec: True\r\n```\r\n\r\nor \r\n\r\n```\r\napi:\r\n    specs:\r\n        - path: \r\n            -petstore.yaml \r\n          append: null\r\n          connexion:\r\n              strict_validation: True\r\n              validate_responses: False\r\n              options:\r\n                  swagger_ui: True\r\n                  serve_spec: True\r\n```\r\nI'll make the relevant changes along with unit tests.\r\n\r\n"", 'comment_created': datetime.datetime(2020, 7, 13, 12, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 453623620, 'comment_body': 'I don\'t understand this comment. What I implemented (I hope) should behave like this:\r\n- when a single path (e.g., `- path: petstore.yaml`) is passed (`str`), it is converted to a list (`[""petstore.yaml""]`) which is then passed to `.merge_yaml()`\r\n- when a list of paths is passed, regardless of how many items are listed (like in your example; `List[str]`), it is passed to `.merge_yaml()` directly\r\n\r\nWhere exactly is the problem? I can see that there\'s no check what happens when an empty list is passed (this should be implemented), but I thought the single string is covered...', 'comment_created': datetime.datetime(2020, 7, 13, 12, 47, 29, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 453628411, 'comment_body': 'If you see the line `82` here. You can see this code\r\n`spec_use = spec.path`\r\n\r\n`spec_use` expects a string when `spec_modified` is false. So when it is used after in `app.add_api`, it will break.\r\n\r\nI covered this case in https://github.com/elixir-cloud-aai/foca/pull/75/files/1d01ebbd14f8cf63751b7c52141a86f0f4caa2bc#diff-eb7d57a240e2ff03256e64aa7fb30a13R45 though it was partially correct.', 'comment_created': datetime.datetime(2020, 7, 13, 12, 55, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 453696157, 'comment_body': 'Ah okay, got it. Well, easy to fix :)', 'comment_created': datetime.datetime(2020, 7, 13, 14, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 456498566, 'comment_body': 'Please keep the description in `Args` and `Attributes` section the same if a class/instance attribute with the same name exists.', 'comment_created': datetime.datetime(2020, 7, 17, 15, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 456498806, 'comment_body': 'Mind the indentation', 'comment_created': datetime.datetime(2020, 7, 17, 15, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 456504168, 'comment_body': ""Okay, so for the _user's_ convenience, we allow him/her to specify a single string rather than requiring that he/she always provide a _list_ of strings, right? For us this naturally makes things more complicated. However, the user can _also_ provide a list of strings with a _single_ path only - and the behavior should be _exactly_ the same as the one expected when he/she provides a single string _outside_ of a list, right?\r\n\r\nSo what I don't understand: why don't you just check if the value is a string and _if it is_ a string, put it inside a list (I think I had started such a solution). Then after you can be sure that you are dealing with a list of strings and all the other complicated checks are unnecessary, as you will only have to deal with one case. I would _much_ prefer such a solution, as it's quite painful to see all the conditionals."", 'comment_created': datetime.datetime(2020, 7, 17, 15, 10, 43, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 456564107, 'comment_body': ""Couldn't we simplify this like this:\r\n\r\n```py\r\nif len(spec.path) > 1:\r\n    spec_modified = True\r\nspec_parsed = ConfigParser.merge_yaml(*spec.path)\r\n```\r\n\r\nDon't see why this wouldn't work with a list of size one?"", 'comment_created': datetime.datetime(2020, 7, 17, 17, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 456565432, 'comment_body': ""Because this code (from `.merge_yaml()`) does never enter the `for` loop if there's only one spec and thus return the parsed specs without any merging, which is exactly what we want:\r\n\r\n```py\r\n        args_list = list(args)\r\n        if not args_list:\r\n            return None\r\n        yaml_dict = Addict(ConfigParser.parse_yaml(args_list.pop(0)))\r\n\r\n        for arg in args_list:\r\n            yaml_dict.update(Addict(ConfigParser.parse_yaml(arg)))\r\n\r\n        return yaml_dict.to_dict()\r\n```"", 'comment_created': datetime.datetime(2020, 7, 17, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 456567182, 'comment_body': 'You could document this behavior in the `Returns:` section specifically, something like this:\r\n\r\n```\r\nDictionary of merged YAML file contents, or `None` if no arguments have been supplied; if only a single YAML file path is provided, no merging is done.\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 17, 8, 32, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': '74da34409518c1b92786eca5e85d5ec885cba3e6', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa7e0b68210bd9e9a42ecab57ecee2e7f056c3ce', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73e949f254afb9a8d53966645364d29a01e7cf71', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0754f1b3199e775d598050403d58d596c43d3410', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c856be890c5c9a1a14de1745dcd976381f90da04', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df181d7eef5fd35dcbd4a483b07f120f9cc61707', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3582f6266089458fc716826336327e04cce3119', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9b915073c632d8c5872e8de121c8c091ee17bdb', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '456af581b06f861aec7898f2dac5a23315c7e067', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d01ebbd14f8cf63751b7c52141a86f0f4caa2bc', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d3a2dda9e217f69ed6bfbbc7cd1baa4420f3d17', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e937d0a89ae96c6b7a2373d52465492bc4d0716', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f06d52b67d5da660416d56c4b721c54c40b4085', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5706fb83bd48ed3db124d2aeb4c09d3e9db9e4c0', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f44c1fe707008f50b7e3c9622d913a3ad988824', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97ac56eb41f96f9ad6a18af4c78bd14432bfd259', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5d090c57678628eb55dd61c4b82d3bc1f59b375', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '469bd0d917b7ec819602ffc7ee375f79e4463f88', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b2c66e562cf1856650a842eaafe4746ff56b159', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1551c6474dafafe418308df2067eb8645eb98242', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
459361242,feat(db): improve support for index creation,"## Description

Pass keys and sort order as dictionaries, then transform to tuples, as it is not easy to define tuples in YAML.

Fixes #80
",True,79,https://api.github.com/repos/elixir-cloud-aai/foca/pulls/79,https://github.com/elixir-cloud-aai/foca/pull/79,closed,47,55,5,19,0,2,0,1,[],2020-07-30 16:20:19+00:00,2020-08-09 07:46:09+00:00,833150.0,"9 days, 15:25:50","[{'comment_id': 464342844, 'comment_body': ""Please format like other example outputs: exactly 79 chars, then backslash and continue on first character of additional lines.\r\nAlso, I'm afraid all other dependent examples need to be updated (anything that has `IndexConfig()` in its output)."", 'comment_created': datetime.datetime(2020, 8, 3, 11, 0, 30, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 464343272, 'comment_body': 'I think it\'s more consistent to log after index creation:\r\n\r\n```py\r\n                    if coll_conf.indexes is not None:\r\n                        # Remove already created indexes, if any\r\n                        coll_conf.client.drop_indexes()\r\n                        for index in coll_conf.indexes:\r\n                            if index.keys is not None:\r\n                                coll_conf.client.create_index(\r\n                                    index.keys, **index.options)\r\n                        logger.info(\r\n                            f""Indexes created for collection \'{coll_name}\'.""\r\n                        )\r\n```', 'comment_created': datetime.datetime(2020, 8, 3, 11, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': '5116b12fdea2f7184e0c9a55f2456200e2ac30ad', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcab88c06013b5218d50505fc7c0d10f1c727277', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9c78d839cdf298df7da7075dc168e843c9f78e9', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2cfdf3d1424f7ea301c7cec08465ae52525d357', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d882db60ded7e72e080f970bcc5d2245a898259', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a4b25846aab0b8921bd9de4aa837d1e7f3e4a80', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05c3cad6d7adda1027a1f659cf244048c5379297', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '636b119aaf4fa30bf99147c622e9a5c014a02785', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd841b29d53642c37bf63eef8ec4694aa99aad2b8', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd5662d1888d1b28f1fa1d6a2ee3dc003e7178ba', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93d7296e7d6e9ef78af9b87e02a7ef5b7464372a', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e19355de3e3c384abf8654270ea8bdb052d9b3d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e878f7a4d67d2018003fb4afe4fc32909d42567d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bd417bddd16498c4c16459d7818818693156f91', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7c940ded73d78fcd72e43d31ec4439e65d314e1', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b035860b75b13eeeb14bb3df917f8b3b1116d8a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '718aaeefcea7d886b1c6aa3b5f2e1c9b316149e7', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a9de95c7a4d0ed384f8d1d23830da83acb4072d', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3d2692b915a02c6200e86571dd3632436d0a0ee', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
420889207,chore: init repository,,True,1,https://api.github.com/repos/elixir-cloud-aai/drs-filer/pulls/1,https://github.com/elixir-cloud-aai/drs-filer/pull/1,closed,623,0,10,7,4,27,0,0,[],2020-05-20 17:00:46+00:00,2020-05-23 17:54:23+00:00,262417.0,"3 days, 0:53:37","[{'comment_id': 428600109, 'comment_body': ""We won't need this, at least for now"", 'comment_created': datetime.datetime(2020, 5, 21, 11, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428600198, 'comment_body': ""This we also won't need, I think"", 'comment_created': datetime.datetime(2020, 5, 21, 11, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428600361, 'comment_body': ""For now we don't need this"", 'comment_created': datetime.datetime(2020, 5, 21, 11, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428600409, 'comment_body': 'And this', 'comment_created': datetime.datetime(2020, 5, 21, 11, 38, 40, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428600507, 'comment_body': 'and these two', 'comment_created': datetime.datetime(2020, 5, 21, 11, 38, 55, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428600567, 'comment_body': 'and this :-)', 'comment_created': datetime.datetime(2020, 5, 21, 11, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428603132, 'comment_body': 'Actually, I\'m having the following issue in cwl-WES: PRs from forks do not automatically trigger the pipeline, and I think that\'s because of this setting. At the same time, triggering the pipeline for PRs as well will trigger _two_ pipeline runs for internal PRs (because they are pushes _and_ PRs). Perhaps you could try to look for a solution, I think I\'ve seen a discussion about this before, and I think there\'s probably (hopefully) a simple solution. I guess something along the lines of ""run if no pull request OR (if pull request AND pull request comes from fork)""', 'comment_created': datetime.datetime(2020, 5, 21, 11, 45, 26, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428603172, 'comment_body': ""I copied these LABEL directives from our lab's template, but I don't think they are a bit too many. I would remove this version and instead use the `software.version` one, which you can set to `0.1.0` to start with"", 'comment_created': datetime.datetime(2020, 5, 21, 11, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428603274, 'comment_body': 'this should be set to `drs-filer`', 'comment_created': datetime.datetime(2020, 5, 21, 11, 45, 43, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428603373, 'comment_body': 'set to `0.1.0`', 'comment_created': datetime.datetime(2020, 5, 21, 11, 45, 56, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428603465, 'comment_body': 'You can take the one I added to the repo on GitHub', 'comment_created': datetime.datetime(2020, 5, 21, 11, 46, 12, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428603761, 'comment_body': 'I think you can remove that', 'comment_created': datetime.datetime(2020, 5, 21, 11, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428603851, 'comment_body': 'Please put `ELIXIR Cloud & AAI` here', 'comment_created': datetime.datetime(2020, 5, 21, 11, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428603911, 'comment_body': 'You can remove that', 'comment_created': datetime.datetime(2020, 5, 21, 11, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428604222, 'comment_body': 'You can remove everything after ""Install app"" from this comment', 'comment_created': datetime.datetime(2020, 5, 21, 11, 47, 58, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428604297, 'comment_body': ""You can remove the TODO, I don't think we need to refer to cwl-WES\r\n\r\nPerhaps at a later point we could build a FOCA image that we could inherit from for the cwl-WES, drs-filer, proTES, proWES images etc., it would be nice :-) You could add an issue for adding a boilerplate Dockerfile to FOCA, very similar to this one"", 'comment_created': datetime.datetime(2020, 5, 21, 11, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428604403, 'comment_body': 'Change to 2020', 'comment_created': datetime.datetime(2020, 5, 21, 11, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428604722, 'comment_body': ""We don't have a tag yet, so this can be removed for now (and the corresponding links at the end of the document)"", 'comment_created': datetime.datetime(2020, 5, 21, 11, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428606468, 'comment_body': 'Use description from GitHub repo (as in Dockerfile)', 'comment_created': datetime.datetime(2020, 5, 21, 11, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428606728, 'comment_body': 'ELIXIR Cloud & AAI', 'comment_created': datetime.datetime(2020, 5, 21, 11, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428606781, 'comment_body': '0.1.0', 'comment_created': datetime.datetime(2020, 5, 21, 11, 54, 6, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 428699171, 'comment_body': ""I'll see this :)\r\n"", 'comment_created': datetime.datetime(2020, 5, 21, 14, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 428704312, 'comment_body': 'Yes sure. https://github.com/elixir-cloud-aai/foca/issues/34', 'comment_created': datetime.datetime(2020, 5, 21, 14, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 428727295, 'comment_body': ""@uniqueg I have a doubt. This is also a PR, so according to this condition  `if: type != pull_request  # do not build anything for PRs`  it shouldn't have a build, right?"", 'comment_created': datetime.datetime(2020, 5, 21, 15, 27, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 429197352, 'comment_body': ""It's building for the push and not for the PR. That's the thing, if it's _also_ building for the PR, the pipeline runs twice"", 'comment_created': datetime.datetime(2020, 5, 22, 11, 39, 58, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 429202851, 'comment_body': 'https://docs.travis-ci.com/user/conditions-v1\r\n\r\nThere is a `fork` attribute known to Travis. If a PR is coming from a fork, it is set to `True`, so you can build a condition with that.\r\n\r\nI think you could do something like this:\r\n`if: (type == push) OR (type == pull_request AND fork == true)`\r\n\r\nThis way we are building for all pushes, as well as for PRs if they come from forks. Note that this is untested though. See here how to test Travis conditions: https://docs.travis-ci.com/user/conditions-testing', 'comment_created': datetime.datetime(2020, 5, 22, 11, 53, 40, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 429294816, 'comment_body': 'I tested it with the following:\r\n\r\n`travis-conditions eval ""(type == push) OR (type == pull_request AND fork == true)"" --data \'{""type"": ""pull_request"", ""fork"": ""false""}\'` -> `false`\r\n\r\n`travis-conditions eval ""(type == push) OR (type == pull_request AND fork == true)"" --data \'{""type"": ""push""}\'` -> `true`\r\n\r\n`travis-conditions eval ""(type == push) OR (type == pull_request AND fork == true)"" --data \'{""fork"": ""true"",""type"": ""pull_request""}\'` -> `true`\r\n\r\nIt should work.', 'comment_created': datetime.datetime(2020, 5, 22, 14, 52, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}]","[{'commit_sha': 'f9da8ee0fce8d453851081820c8a3f163515b861', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35a13f699102123299bafef9763ddfc2cf61ab6d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a75b9d1de37d3c809c0e8a31394ef4b1a9b03917', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c850114dcd6aec016658b85b2b6387cc57535a1', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42ec1492c95124297168b2bf56f38ce2349d221f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05f7088441d15302c8fdf7f029ac7e24d5b92733', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dd2eedc5b84e52e7624f6d3d4644de10c69b44b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
422294898,feat: Create GET  and POST endpoints with FOCA 0.3.0,"The issue being addressed: #2, #7, #8 

TODO:
- [ ] - Replace the configuration with Gunicorn.
- [ ] - Allow the post endpoints to take a list of DRS metadata. Discuss the body format first.
- [ ] - Write error handlers for corner cases.",True,5,https://api.github.com/repos/elixir-cloud-aai/drs-filer/pulls/5,https://github.com/elixir-cloud-aai/drs-filer/pull/5,closed,1213,45,23,37,2,39,0,0,[],2020-05-23 16:17:25+00:00,2020-07-27 23:04:41+00:00,5640436.0,"65 days, 6:47:16","[{'comment_id': 429623391, 'comment_body': 'I guess you can use the new FOCA errors here and only overwrite `404` accordingly. Note that there are _two_ different `404` errors in the DRS specs (different descriptions). So you can use and register FOCA defaults first, then override the other two handlers here.', 'comment_created': datetime.datetime(2020, 5, 24, 10, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450636892, 'comment_body': 'If I change `objects` to `object` (spelling mistake), then this results into `KeyError`.', 'comment_created': datetime.datetime(2020, 7, 7, 6, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 450637764, 'comment_body': 'TODO: Need to replace this with Gunicorn.', 'comment_created': datetime.datetime(2020, 7, 7, 6, 28, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 450736911, 'comment_body': 'Can you please use an informative naming scheme for the specs. For example, in cwl-WES, we have used `20180830.74fd916.workflow_execution_service.swagger.yaml`, i.e., the name includes the date of the commit, the first 7 characters of the commit hash, the name of the service and what type of YAML file it is (swagger = OpenAPI2).', 'comment_created': datetime.datetime(2020, 7, 7, 9, 37, 45, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450737331, 'comment_body': ""Please don't forget to re-add the `coverage`/`pytest` call, especially because `coveralls` can't possibly work correctly if there is no `.coverage` directory created by `coverage`."", 'comment_created': datetime.datetime(2020, 7, 7, 9, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450745273, 'comment_body': ""Please also make sure that you keep the _unmodified_ DRS specs in this directory. In fact, ideally, the additions should go inside another file and the combined specs should be generated on the fly (similar to how this is done with the security definitions in cwl-WES), so that it will be easy to include newer versions of the DRS specs in the future. If you do that, try to find a generic solution for merging the different parts of the specs (original & added endpoints/models) so that we could in the future include the mechanism to merge Swagger/OpenAPI specs in FOCA. Or better yet: add it directly to FOCA as a PR. Note that you don't necessarily need to parse the specs as Swagger/OpenAPI for that. Simple JSON/YAML-merging should in principle be enough, as we would want a solution that does not require references from one file to another OR having to two or more _complete_ spec files (just added endpoints and models).\r\n\r\nQuick search for some tools that may be of help (I didn't check them in detail):\r\n- https://pypi.org/project/jsonmerge/\r\n- https://pypi.org/project/swaggertools/\r\n\r\nThere are also these, but they're written in JS, not Python:\r\n- https://www.npmjs.com/package/json-merger\r\n- https://www.npmjs.com/package/openapi-merge\r\n- some more info: https://github.com/OpenAPITools/openapi-generator/issues/1375\r\n\r\nI didn't look very long though, perhaps there is a ready-made solution available for Python."", 'comment_created': datetime.datetime(2020, 7, 7, 9, 51, 24, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450747794, 'comment_body': ""Would be better to do the Gunicorn stuff directly in FOCA, so that we don't have to repeat it across cwl-WES, DRS-filer, TRS-filer, proWES, proTES etc."", 'comment_created': datetime.datetime(2020, 7, 7, 9, 55, 44, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450749681, 'comment_body': 'Make sure to use the FOCA Dockerfile as base image, as this will speed up your builds. Make sure to only include here what you really need for DRS-filer.\r\n\r\nAlso, have a look at the FOCA Dockerfile and keep only those metadata `LABEL`s that we have in FOCA. I cleaned them up recently, I think many, if not most, of them were pointless/confusing, and hard to maintain.', 'comment_created': datetime.datetime(2020, 7, 7, 9, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450752415, 'comment_body': 'You should get the port from the config', 'comment_created': datetime.datetime(2020, 7, 7, 10, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450753556, 'comment_body': ""It would also make it easier for me to review your additions - don't want to end up reviewing the DRS specs :-D"", 'comment_created': datetime.datetime(2020, 7, 7, 10, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450754498, 'comment_body': ""Perhaps use some different ports than the ones for cwl-WES, proWES, proTES, TEStribute, so that there won't be clashes if deployed locally with `docker-compose`. Alternatively, keep the original ports. This will mean clashes, too, but at least you are clashing on the default ports."", 'comment_created': datetime.datetime(2020, 7, 7, 10, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450755134, 'comment_body': ""I think now with FOCA and a single config file, I'd prefer to just put the file in the root directory of the repo and call it `config.yaml`"", 'comment_created': datetime.datetime(2020, 7, 7, 10, 9, 9, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450755698, 'comment_body': ""Not sure about this file. I think it's really better to add this to FOCA in a generic way. It's annoying to have to have another config module to take care of after all..."", 'comment_created': datetime.datetime(2020, 7, 7, 10, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450756148, 'comment_body': 'Well, if you want `object`, just change it to `object` in the config...', 'comment_created': datetime.datetime(2020, 7, 7, 10, 11, 4, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450759834, 'comment_body': ""Please check whether you really need all of these packages, e.g., I'm not sure what you would need `flask-cors` for, or even `connexion` and `Flask`. Only add what you _explicitly_ import from. If packages are installed as dependencies of another module that you need explicitly, don't mention them here, because the version lock may cause unnecessary problems if you update dependencies."", 'comment_created': datetime.datetime(2020, 7, 7, 10, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450761969, 'comment_body': ""Define new error classes for each error (in some module `exceptions.py` or `errors.py`, then create a dictionary of your errors with specific JSON members and handle them through FOCA's generic error handler."", 'comment_created': datetime.datetime(2020, 7, 7, 10, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450763080, 'comment_body': 'I think this should be `ga4gh.drs.server`, no?', 'comment_created': datetime.datetime(2020, 7, 7, 10, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450763360, 'comment_body': ""Ideally, if there's no strong reason against it, this should be `True`."", 'comment_created': datetime.datetime(2020, 7, 7, 10, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450763974, 'comment_body': ""Make sure to make use of FOCA's error handling (see comment below and the corresponding models and docs in FOCA for more infos)."", 'comment_created': datetime.datetime(2020, 7, 7, 10, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 450766750, 'comment_body': 'I was actually just informing on the error handling part. :smile: ', 'comment_created': datetime.datetime(2020, 7, 7, 10, 31, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 451011066, 'comment_body': 'Sure.\r\nNow, if I add this, I suspect it will cause the build to fail because there are no tests after all. So, will add it later when I add some basic tests.', 'comment_created': datetime.datetime(2020, 7, 7, 16, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 451294588, 'comment_body': ""Changing it to 8888:8080? I don't understand the second part. Do you mean doing like this 8080:8080?\r\n\r\n> Alternatively, keep the original ports. This will mean clashes, too, but at least you are clashing on the default ports."", 'comment_created': datetime.datetime(2020, 7, 8, 5, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 451300327, 'comment_body': '> Can you please use an informative naming scheme for the specs. For example, in cwl-WES, we have used `20180830.74fd916.workflow_execution_service.swagger.yaml`, i.e., the name includes the date of the commit, the first 7 characters of the commit hash, the name of the service, and what type of YAML file it is (swagger = OpenAPI2).\r\n\r\nIs there any script that you already use to name the file like this? git-hooks?', 'comment_created': datetime.datetime(2020, 7, 8, 5, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 454131359, 'comment_body': 'https://github.com/elixir-cloud-aai/foca/pull/75', 'comment_created': datetime.datetime(2020, 7, 14, 6, 29, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 457161010, 'comment_body': 'Please just name it `config.yaml`, as there is only one config file left now.', 'comment_created': datetime.datetime(2020, 7, 20, 8, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 457162301, 'comment_body': 'These should follow the error model from the specs, i.e., use fields `msg` and `status_code`, then you can use the error descriptions from the specs for the `msg` values, e.g. ""The request is malformed"" for `400` errors.', 'comment_created': datetime.datetime(2020, 7, 20, 8, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 457162686, 'comment_body': 'I still think this should not go in here...', 'comment_created': datetime.datetime(2020, 7, 20, 8, 15, 40, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 457164396, 'comment_body': 'Should probably add some more text here. At least a little intro and a very basic usage section. Rest we can do later.', 'comment_created': datetime.datetime(2020, 7, 20, 8, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 457165480, 'comment_body': 'At this point, I think the code should be unit tested.', 'comment_created': datetime.datetime(2020, 7, 20, 8, 19, 45, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 457171503, 'comment_body': ""I suppose you should also coin somewhere a DRS identifier of the form outlined in the spec. I'm not sure how it should look like, but I think it should start with something like `drs://`. Please carefully read the specs"", 'comment_created': datetime.datetime(2020, 7, 20, 8, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 457173596, 'comment_body': 'Probably clearer to use either `del` or `.pop()` in the different endpoints, not both.', 'comment_created': datetime.datetime(2020, 7, 20, 8, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 457176368, 'comment_body': ""The version string (further up, but couldn't add the comment there) should only be hard-coded in a single place, so please make use of `drs_filer/__init__.py` like we are now doing in FOCA. "", 'comment_created': datetime.datetime(2020, 7, 20, 8, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 457239169, 'comment_body': 'Will take care of it later, when it is added to `foca`. Deleting the file for now.', 'comment_created': datetime.datetime(2020, 7, 20, 9, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 457278919, 'comment_body': '@uniqueg Do you mean, I should add a validator to check if the `self_uri` should start with `drs://` as mentioned here https://github.com/ga4gh/data-repository-service-schemas/blob/master/openapi/data_repository_service.swagger.yaml?', 'comment_created': datetime.datetime(2020, 7, 20, 10, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 458338932, 'comment_body': ""Yes, but this is slightly complex because:\r\n- this is _not_ something that the user or admin should ever fill out in the `POST` / `PUT` endpoints\r\n- this should _always_ be generated by the DRS itself, according to the rules described in the spec\r\n- the implementation should be so generic that it will still work on different machines\r\n- note that due to the host name, this is essentially a [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier); but it won't be if the host is an IP address - so what to do when there's no domain registered (yet) for the service? I don't know...\r\n\r\nBut these considerations I think you can put in a separate issue and deal with it later. But for sure this means that we will need a slightly different model for `POST` and `PUT` endpoints, I'm afraid. Same goes for the `id` field - it doesn't make sense to put that manually when creating an object. I need to think this through some more..."", 'comment_created': datetime.datetime(2020, 7, 21, 19, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 460522251, 'comment_body': ""We'll do Gunicorn later, it's not urgent"", 'comment_created': datetime.datetime(2020, 7, 26, 12, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 460524525, 'comment_body': 'This is unnecessary, FOCA will do that by itself', 'comment_created': datetime.datetime(2020, 7, 26, 12, 56, 3, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 460803418, 'comment_body': '@uniqueg This should be `return` or `raise`? Is this correct?', 'comment_created': datetime.datetime(2020, 7, 27, 10, 43, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 461216832, 'comment_body': ""Raise, correct. I'll fix it"", 'comment_created': datetime.datetime(2020, 7, 27, 22, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': 'f9da8ee0fce8d453851081820c8a3f163515b861', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35a13f699102123299bafef9763ddfc2cf61ab6d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a75b9d1de37d3c809c0e8a31394ef4b1a9b03917', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c850114dcd6aec016658b85b2b6387cc57535a1', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42ec1492c95124297168b2bf56f38ce2349d221f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05f7088441d15302c8fdf7f029ac7e24d5b92733', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59fd03c52d9b7882e02e0d4ac6376d1b100ef2bb', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eba9c0eed20cf44627621d3311c408f0886bb1d8', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dd2eedc5b84e52e7624f6d3d4644de10c69b44b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52ca3536dd7bfef1b32eb2a86ea7de9234984771', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dde571cc35e175ad043c57e92a8806136e8276b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d5206358f070c9d1743ebe9950657b3045e5ecf', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adbcb890cfecc6556dc1c4093f87efa1d492b58b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bbdb0a4cccc9eb100eb938052585ddec0a2e70c', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb758e1f976c9d1d21ba0db4ea17dad56d0c596a', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05cb09565eb75ab732eaff3e316bdb7a8779dcac', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb5e803dc0b7543bca929283f0130301dbf22676', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a667de4749823a1793cf5c0a479a388f9027d021', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be4c63d9a8ab8d5e7fe17fb3a7c37d9bb65500ce', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a8dc938937ed20f692b46e3d4c37f5af47d5335', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1642bf2bab10b54f9232038bb03c8cae85369135', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5f05f78a91928fa87555bf9b192a3f35a17f298', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '271724a52640f524ea189f7ab7f8b81ac903f681', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cfea260e7662ac6200854dd7023b70558782965', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4bd85d2bdc7b8e50a54175e3a9c792715eb988c', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '558a644fa192d594b4035ae9553d637fff9ce5c9', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bf152eaaf11e22c8b78d312649463de3a73b2f6', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6924c41f5721177390b71e2787709984f1488d0', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7535ed72adaf5e5873669a4249b71effebb9a386', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4584df6492af2f64160ff83af9d628e86d4b4856', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58581e225380d6da583dc77a409c9815da1f1585', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e5cff67d83578c982cf632a590d10fe5085021d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '640e382e54b10c4e0bac27453332715c301c6d68', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ddc2a84e169b1c2aa4b71c182049b594f45f598', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '835d485af88f591b035674618b34c07004e2bb80', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83b8816e83ef20ab4536eac96625d73112c733f9', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb965be50d3d72a52892e62947ecf82d17798c26', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
460968136,feat: add POST and DELETE endpoints for objects,"## Description

* add specs for `POST /objects` and `DELETE /objects/{object_id}` endpoints
* implement endpoint logic
* properties `id`, `self_uri` and `access_id` in the `Object` definition of the [DRS specs](https://github.com/ga4gh/data-repository-service-schemas/blob/master/openapi/data_repository_service.swagger.yaml) are auto-populated upon `POST`ing objects

Fixes #8 and #10 

## Type of change

Please delete options that are not relevant.

- [x] New feature (non-breaking change which adds functionality)
- [x] Documentation update

## Checklist:

- [x] My code follows the [style guidelines](https://github.com/elixir-cloud-aai/elixir-cloud-aai/blob/dev/resources/contributing_guidelines.md#language-specific-guidelines) of this project
- [x] I have performed a self-review of my own code
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] My changes generate no new warnings
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing unit tests pass locally with my changes
- [x] I have not reduced the existing code coverage
- [x] I have added docstrings following the [Python style guidelines](https://github.com/elixir-cloud-aai/elixir-cloud-aai/blob/dev/resources/python.md) of this project to all new modules, classes, methods and functions are documented with docstrings following; I have updated any previously existing docstrings, if applicable
- [x] I have updated any sections of the app's documentation that are affected by the proposed changes, if applicable",True,9,https://api.github.com/repos/elixir-cloud-aai/drs-filer/pulls/9,https://github.com/elixir-cloud-aai/drs-filer/pull/9,closed,466,50,7,11,0,7,0,0,[],2020-08-01 09:55:45+00:00,2020-08-14 13:45:15+00:00,1136970.0,"13 days, 3:49:30","[{'comment_id': 467826301, 'comment_body': 'Please add a new model for `POST` and remove these hacks.', 'comment_created': datetime.datetime(2020, 8, 10, 10, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 467828066, 'comment_body': 'Please add these to the config file. You can [add any sections you want to the FOCA config file](https://github.com/elixir-cloud-aai/foca/blob/30029539de172973dd0a82958bab32fc9ecce840/foca/models/config.py#L1134), apart from the reserved ones (e.g., `server`, `api`), and they will be added to the Flask config just like all the other params.\r\nWhen you do that, set up support for _different_ settings for the object and access method IDs, because service admins may want to reduce the chance of users mixing them up (e.g., uppercase vs lowercase or whatever). You can use the same defaults if you like (although different might be better to illustrate the behavior), just make sure you have: `object_id_charset`, `object_id_length`, `access_id_charset` and `access_id_length` under some new section, e.g., `endpoints`.\r\n\r\nYou could also nest them if you prefer that:\r\n```yaml\r\nendpoints:\r\n  objects:\r\n    id_charset: # set some default\r\n    id_length: # set some default\r\n  access_methods:\r\n    id_charset: # set some default\r\n    id_length: # set some default\r\n```\r\n\r\nBut how you organize the settings is not important, we can change it anytime later, so no need to think about it too much.', 'comment_created': datetime.datetime(2020, 8, 10, 10, 59, 19, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 467849972, 'comment_body': 'Pass the config vars (see comment above) as arguments, do not use global vars.', 'comment_created': datetime.datetime(2020, 8, 10, 11, 48, 20, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 467853604, 'comment_body': 'You need to consider the possibility that an `access_id` already exists when adding an _additional_ access method to an existing object. While there is no way of doing this now, there will be in the future, so best to already prepare for this. If you raise a specific error when trying to add an access method with a generated ID, I think you can just add the code for parsing/adding access methods inside the `while` loop in the main function (rather than before) and catch/handle it together with the `DuplicateKeyError` like so:\r\n\r\n```\r\nexcept (DuplicateKeyError, DuplicateAccessIDError):\r\n    continue\r\n```', 'comment_created': datetime.datetime(2020, 8, 10, 11, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 467854691, 'comment_body': 'After adding new models for the POST endpoint (smaller versions of `Object` and `AccessMethod`; see comment above), most of this should not be necessary. Pretty much just the generation of an `access_id` will remain.', 'comment_created': datetime.datetime(2020, 8, 10, 11, 58, 59, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 469172367, 'comment_body': ""Right now, we are adding `POST` endpoint only, right? So, `DuplicateAccessIDError` won't occur, no?"", 'comment_created': datetime.datetime(2020, 8, 12, 10, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 469230281, 'comment_body': 'Yes, for `POST` in principle you only need to make sure that if there are multiple access methods, their randomly generated `access_id`s need to be different. Only in a `PUT`/`PATCH` endpoint, you would need to (further) ensure that conflicts with already existing `access_id`s in the database are prevented.', 'comment_created': datetime.datetime(2020, 8, 12, 12, 42, 40, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': '5cd692c21bf5a4e1aee4805a7011c80884eff8e1', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aa61ce4f5bbb60cdb8cbe362c94960bbe593fe0', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c7e070caa77c92c9f63210833b4cc542d463343', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d060365c3392bddbf66f730d3f69db163ed2c33', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635bf0f21cb21d9edfca75ad67ae1e41626454e0', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55e10e8d36e3323c0730c19a082089f6b81fd187', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39685704b4896c60a80dfbf2137b469c5a2a879b', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86a0e26ff09eb152e87e1abaedaa6d1c02461457', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03cfb96dce3f3385cbca339a3028aa83851b9e90', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12639d102720fa4913f25dd518331208df3ba523', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '150a5e5129e6aa011d6f5ea840f3eadab2ca9571', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
476066755,feat: add DRS client code,"* add license
* auto-generate [Pydantic](https://pydantic-docs.helpmanual.io/) data models with [datamodel-code-generator](https://github.com/koxudaxi/datamodel-code-generator/)
* implement client class and methods for each [DRS](https://github.com/ga4gh/data-repository-service-schemas) and [DRS-Filer](https://github.com/elixir-cloud-aai/drs-filer) endpoint
* add unit tests for all code
* add usage and installation instructions
* add API docs
* add CI pipeline
",True,1,https://api.github.com/repos/elixir-cloud-aai/DRS-cli/pulls/1,https://github.com/elixir-cloud-aai/DRS-cli/pull/1,closed,1444,0,16,9,0,0,0,0,[],2020-08-31 05:50:02+00:00,2020-08-31 17:04:11+00:00,40449.0,11:14:09,[],"[{'commit_sha': 'f642c81cb0fb76b6f9a4a8192c976368e00eec7d', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8be72f752a47f53cdd20f06fbe9278eeabacab92', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '524fda06d0964df776e29c26d73fcd5dce49e190', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6db765ed3d0a86c84edd8c58a0576f3909dae124', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4f1280589982bf8fe50f356935ab4b39c5def84', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c28e32e2ea224ffa670ca403a6b85351fcdba974', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f52096bf3044d50abee508f9c937f64a17de1420', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a40073dce37c49828b77d74452264bbe8ada317d', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4598bc1da1b0d5642a1182f26798ab71353839f4', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
415575082,Replace config handler with external one,"**Details**

This PR addresses #153 and more specifically #161 . External config handler included in the package [foca](https://github.com/elixir-cloud-aai/foca) is being used now.
",True,160,https://api.github.com/repos/elixir-cloud-aai/cwl-WES/pulls/160,https://github.com/elixir-cloud-aai/cwl-WES/pull/160,closed,49,279,17,4,0,4,0,0,[],2020-05-09 13:21:55+00:00,2020-05-13 15:55:56+00:00,354841.0,"4 days, 2:34:01","[{'comment_id': 422496730, 'comment_body': 'Will this part of the code cause any problem? We are taking the absolute path here of the current file.', 'comment_created': datetime.datetime(2020, 5, 9, 13, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sarthakgupta072', 'type': 'User'}, {'comment_id': 422496851, 'comment_body': 'Please pin the version', 'comment_created': datetime.datetime(2020, 5, 9, 13, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 422498681, 'comment_body': 'This should be fine. But actually, you can remove `log_config.yaml` from _this_ repo, as well, because the config is taken from FOCA.', 'comment_created': datetime.datetime(2020, 5, 9, 13, 54, 36, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}, {'comment_id': 422502008, 'comment_body': 'Also, please put it in the right place alphabetically', 'comment_created': datetime.datetime(2020, 5, 9, 14, 26, 33, tzinfo=datetime.timezone.utc), 'commenter': 'uniqueg', 'type': 'User'}]","[{'commit_sha': '6044e5f01c21bf25004b522b6ec9349687be498f', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e67f5d929aca84476674679404fae329f11a4bd', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b96bdea67092b504829f3cdf2250cf77505701e', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fc1cfd468f703badc25f89d2d26f7f267836b61', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91
416143272,chore: replace config with an external one,"**Details**

This PR addresses #10 and more specifically #11. External config handler included in the package [foca](https://github.com/elixir-cloud-aai/foca) is being used now.
",True,12,https://api.github.com/repos/elixir-cloud-aai/proWES/pulls/12,https://github.com/elixir-cloud-aai/proWES/pull/12,closed,18,259,17,2,0,0,0,0,[],2020-05-11 14:31:40+00:00,2020-05-12 16:11:50+00:00,92410.0,"1 day, 1:40:10",[],"[{'commit_sha': 'c7c18277aca9c52e8941d39a76bb774513c9f2e6', 'committer_username': 'sarthakgupta072', 'committer_name': 'Sarthak Gupta', 'committer_email': 'sarthakgupta072@gmail.com', 'commit_date': datetime.datetime(2016, 12, 6, 9, 50, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aedc5febe0da523b7814fbdea1eb42f767b6e4e0', 'committer_username': 'uniqueg', 'committer_name': 'Alex Kanitz', 'committer_email': 'alexander.kanitz@alumni.ethz.ch', 'commit_date': datetime.datetime(2015, 2, 4, 20, 57, 29, tzinfo=datetime.timezone.utc)}]",Sarthak Gupta,24408266,sarthakgupta072@gmail.com,User,,55,,54,91

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
238483669,foca,elixir-cloud-aai/foca,Python,11,18,24,12,110,24,9,2,"[{'id': 459361242, 'number': 79, 'closed': datetime.datetime(2020, 8, 9, 7, 46, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 16, 20, 19, tzinfo=datetime.timezone.utc), 'time_taken': 833150.0, 'time_delta': '9 days, 15:25:50', 'additions': 47, 'deletions': 55, 'state': 'closed'}, {'id': 446653616, 'number': 75, 'closed': datetime.datetime(2020, 7, 17, 17, 33, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 9, 6, 45, 3, tzinfo=datetime.timezone.utc), 'time_taken': 730090.0, 'time_delta': '8 days, 10:48:10', 'additions': 195, 'deletions': 14, 'state': 'closed'}, {'id': 427313606, 'number': 44, 'closed': datetime.datetime(2020, 6, 18, 21, 45, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 3, 16, 16, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1315762.0, 'time_delta': '15 days, 5:29:22', 'additions': 860, 'deletions': 574, 'state': 'closed'}, {'id': 422729077, 'number': 37, 'closed': datetime.datetime(2020, 5, 25, 17, 48, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 25, 12, 34, 18, tzinfo=datetime.timezone.utc), 'time_taken': 18859.0, 'time_delta': '5:14:19', 'additions': 233, 'deletions': 77, 'state': 'closed'}, {'id': 419084606, 'number': 32, 'closed': datetime.datetime(2020, 5, 18, 17, 5, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 17, 9, 19, 27, tzinfo=datetime.timezone.utc), 'time_taken': 114348.0, 'time_delta': '1 day, 7:45:48', 'additions': 78, 'deletions': 4, 'state': 'closed'}, {'id': 395228100, 'number': 26, 'closed': datetime.datetime(2020, 3, 30, 11, 49, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 29, 10, 16, 32, tzinfo=datetime.timezone.utc), 'time_taken': 91993.0, 'time_delta': '1 day, 1:33:13', 'additions': 34, 'deletions': 0, 'state': 'closed'}, {'id': 395092797, 'number': 24, 'closed': datetime.datetime(2020, 3, 30, 13, 28, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 28, 12, 59, 41, tzinfo=datetime.timezone.utc), 'time_taken': 174536.0, 'time_delta': '2 days, 0:28:56', 'additions': 74, 'deletions': 1, 'state': 'closed'}, {'id': 390616706, 'number': 22, 'closed': datetime.datetime(2020, 3, 18, 22, 35, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 19, 12, 18, tzinfo=datetime.timezone.utc), 'time_taken': 12216.0, 'time_delta': '3:23:36', 'additions': 107, 'deletions': 5, 'state': 'closed'}, {'id': 390353440, 'number': 21, 'closed': datetime.datetime(2020, 3, 18, 12, 25, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 10, 34, 35, tzinfo=datetime.timezone.utc), 'time_taken': 6672.0, 'time_delta': '1:51:12', 'additions': 17, 'deletions': 44, 'state': 'closed'}, {'id': 388252826, 'number': 20, 'closed': datetime.datetime(2020, 3, 17, 14, 46, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 14, 10, 36, 1, tzinfo=datetime.timezone.utc), 'time_taken': 274234.0, 'time_delta': '3 days, 4:10:34', 'additions': 66, 'deletions': 0, 'state': 'closed'}, {'id': 385136752, 'number': 17, 'closed': datetime.datetime(2020, 3, 11, 18, 50, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 7, 11, 45, 59, tzinfo=datetime.timezone.utc), 'time_taken': 371062.0, 'time_delta': '4 days, 7:04:22', 'additions': 174, 'deletions': 0, 'state': 'closed'}, {'id': 379725810, 'number': 16, 'closed': datetime.datetime(2020, 2, 25, 20, 7, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 25, 18, 13, 26, tzinfo=datetime.timezone.utc), 'time_taken': 6841.0, 'time_delta': '1:54:01', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 373771824, 'number': 11, 'closed': datetime.datetime(2020, 3, 28, 13, 6, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 11, 16, 58, 11, tzinfo=datetime.timezone.utc), 'time_taken': 3960502.0, 'time_delta': '45 days, 20:08:22', 'additions': 29, 'deletions': 0, 'state': 'closed'}, {'id': 373266619, 'number': 9, 'closed': datetime.datetime(2020, 2, 10, 18, 25, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 10, 17, 43, 27, tzinfo=datetime.timezone.utc), 'time_taken': 2517.0, 'time_delta': '0:41:57', 'additions': 277, 'deletions': 0, 'state': 'closed'}]"
265537206,drs-filer,elixir-cloud-aai/drs-filer,Python,8,5,25,9,30,14,8,5,"[{'id': 673830989, 'number': 43, 'closed': None, 'created': datetime.datetime(2021, 6, 19, 6, 25, 22, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 217, 'deletions': 20, 'state': 'open'}, {'id': 673829391, 'number': 42, 'closed': None, 'created': datetime.datetime(2021, 6, 19, 6, 9, 9, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 42, 'deletions': 32, 'state': 'open'}, {'id': 577120157, 'number': 34, 'closed': datetime.datetime(2021, 5, 2, 13, 16, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 21, 14, 25, 7, tzinfo=datetime.timezone.utc), 'time_taken': 6043862.0, 'time_delta': '69 days, 22:51:02', 'additions': 3, 'deletions': 9, 'state': 'closed'}, {'id': 520058841, 'number': 32, 'closed': None, 'created': datetime.datetime(2020, 11, 12, 17, 59, 31, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 264, 'deletions': 1, 'state': 'open'}, {'id': 514829974, 'number': 31, 'closed': datetime.datetime(2020, 11, 6, 17, 44, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 3, 15, 54, 19, tzinfo=datetime.timezone.utc), 'time_taken': 265817.0, 'time_delta': '3 days, 1:50:17', 'additions': 393, 'deletions': 241, 'state': 'closed'}, {'id': 489879634, 'number': 20, 'closed': datetime.datetime(2020, 9, 22, 9, 45, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 20, 9, 27, 36, tzinfo=datetime.timezone.utc), 'time_taken': 173846.0, 'time_delta': '2 days, 0:17:26', 'additions': 90, 'deletions': 8, 'state': 'closed'}, {'id': 479496547, 'number': 14, 'closed': datetime.datetime(2020, 9, 4, 13, 53, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 4, 9, 23, 45, tzinfo=datetime.timezone.utc), 'time_taken': 16197.0, 'time_delta': '4:29:57', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 478770639, 'number': 12, 'closed': datetime.datetime(2020, 9, 3, 17, 26, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 3, 17, 9, 48, tzinfo=datetime.timezone.utc), 'time_taken': 981.0, 'time_delta': '0:16:21', 'additions': 20, 'deletions': 3, 'state': 'closed'}, {'id': 460968136, 'number': 9, 'closed': datetime.datetime(2020, 8, 14, 13, 45, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 1, 9, 55, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1136970.0, 'time_delta': '13 days, 3:49:30', 'additions': 466, 'deletions': 50, 'state': 'closed'}, {'id': 422294898, 'number': 5, 'closed': datetime.datetime(2020, 7, 27, 23, 4, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 23, 16, 17, 25, tzinfo=datetime.timezone.utc), 'time_taken': 5640436.0, 'time_delta': '65 days, 6:47:16', 'additions': 1213, 'deletions': 45, 'state': 'closed'}, {'id': 421979518, 'number': 4, 'closed': datetime.datetime(2020, 5, 24, 8, 55, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 22, 15, 16, 33, tzinfo=datetime.timezone.utc), 'time_taken': 149946.0, 'time_delta': '1 day, 17:39:06', 'additions': 17, 'deletions': 0, 'state': 'closed'}, {'id': 421968652, 'number': 3, 'closed': datetime.datetime(2020, 5, 24, 11, 36, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 22, 15, 0, 10, tzinfo=datetime.timezone.utc), 'time_taken': 160586.0, 'time_delta': '1 day, 20:36:26', 'additions': 19, 'deletions': 0, 'state': 'closed'}, {'id': 420889207, 'number': 1, 'closed': datetime.datetime(2020, 5, 23, 17, 54, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 17, 0, 46, tzinfo=datetime.timezone.utc), 'time_taken': 262417.0, 'time_delta': '3 days, 0:53:37', 'additions': 623, 'deletions': 0, 'state': 'closed'}]"
288727864,DRS-cli,elixir-cloud-aai/DRS-cli,Python,1,2,25,3,9,2,3,0,"[{'id': 491607798, 'number': 8, 'closed': datetime.datetime(2020, 9, 23, 10, 13, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 23, 8, 30, 5, tzinfo=datetime.timezone.utc), 'time_taken': 6183.0, 'time_delta': '1:43:03', 'additions': 4, 'deletions': 34, 'state': 'closed'}, {'id': 491134179, 'number': 6, 'closed': datetime.datetime(2020, 9, 23, 1, 25, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 22, 18, 59, 39, tzinfo=datetime.timezone.utc), 'time_taken': 23156.0, 'time_delta': '6:25:56', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 480802420, 'number': 4, 'closed': datetime.datetime(2020, 9, 17, 15, 53, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 6, 15, 33, 7, tzinfo=datetime.timezone.utc), 'time_taken': 951617.0, 'time_delta': '11 days, 0:20:17', 'additions': 692, 'deletions': 135, 'state': 'closed'}, {'id': 476066755, 'number': 1, 'closed': datetime.datetime(2020, 8, 31, 17, 4, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 5, 50, 2, tzinfo=datetime.timezone.utc), 'time_taken': 40449.0, 'time_delta': '11:14:09', 'additions': 1444, 'deletions': 0, 'state': 'closed'}]"
144850939,cwl-WES,elixir-cloud-aai/cwl-WES,Python,18,16,28,21,298,30,9,5,"[{'id': 491093788, 'number': 197, 'closed': datetime.datetime(2020, 9, 24, 17, 46, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 22, 17, 37, 21, tzinfo=datetime.timezone.utc), 'time_taken': 173360.0, 'time_delta': '2 days, 0:09:20', 'additions': 187, 'deletions': 56, 'state': 'closed'}, {'id': 415575082, 'number': 160, 'closed': datetime.datetime(2020, 5, 13, 15, 55, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 9, 13, 21, 55, tzinfo=datetime.timezone.utc), 'time_taken': 354841.0, 'time_delta': '4 days, 2:34:01', 'additions': 49, 'deletions': 279, 'state': 'closed'}]"
222950519,proWES,elixir-cloud-aai/proWES,Python,5,3,26,7,41,28,3,0,"[{'id': 416143272, 'number': 12, 'closed': datetime.datetime(2020, 5, 12, 16, 11, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 11, 14, 31, 40, tzinfo=datetime.timezone.utc), 'time_taken': 92410.0, 'time_delta': '1 day, 1:40:10', 'additions': 18, 'deletions': 259, 'state': 'closed'}]"
