pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
591883024,Sort backup-list output by time of backup creation,"Changes to `backup-list` command proposed. Now backups are sorted by creation time instead of modification time. To retrieve creation time `metadata.json` needed, so if there is no metadata file, `backup-list` works as previous.
""LATEST"" flag behavior was not changed.

Related links:
#694 #816
",True,907,https://api.github.com/repos/wal-g/wal-g/pulls/907,https://github.com/wal-g/wal-g/pull/907,closed,723,151,22,26,3,18,0,0,[],2021-03-12 18:45:32+00:00,2021-05-31 14:12:43+00:00,6895631.0,"79 days, 19:27:11","[{'comment_id': 593749657, 'comment_body': 'We may need the backup sorting/ordering logic in the other places later, maybe introduce an interface like `BackupSorter` or `BackupComparator` and pass it to `GetBackupTimeSlices`?', 'comment_created': datetime.datetime(2021, 3, 13, 13, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 593755281, 'comment_body': ""Why do we need to save this information? Why don't just sort the backups in place of usage?"", 'comment_created': datetime.datetime(2021, 3, 13, 14, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 593957709, 'comment_body': '`BackupTimeSlice` used in functions like [WriteBackupList](https://github.com/wal-g/wal-g/blob/b37391044879631b630dab418b6f29377d2cfdd3/internal/backup_list_handler.go#L134) and we cannot use just one `TimeDenotation` here because of possible old backups.\r\n\r\nIs it flexible to left  `BackupTimeSlice` in [GetBackupsWithTargetOrdered](https://github.com/wal-g/wal-g/blob/b37391044879631b630dab418b6f29377d2cfdd3/internal/backup.go#L418) and still use `[]BackupTime` elsewhere?', 'comment_created': datetime.datetime(2021, 3, 14, 20, 40, 21, tzinfo=datetime.timezone.utc), 'commenter': 'slesarev-hub', 'type': 'User'}, {'comment_id': 594939500, 'comment_body': ""> `BackupTimeSlice` used in functions like [WriteBackupList](https://github.com/wal-g/wal-g/blob/b37391044879631b630dab418b6f29377d2cfdd3/internal/backup_list_handler.go#L134) and we cannot use just one `TimeDenotation` here because of possible old backups.\r\n> \r\n> Is it flexible to left `BackupTimeSlice` in [GetBackupsWithTargetOrdered](https://github.com/wal-g/wal-g/blob/b37391044879631b630dab418b6f29377d2cfdd3/internal/backup.go#L418) and still use `[]BackupTime` elsewhere?\r\n\r\nIf there are old backups without metadata we can fall back to the old time denotation logic for all of the backups, to avoid mixing up the logic.\r\n\r\nWriteBackupList shouldn't explicitly depend on the TimeDenotation to conform with OOP Open/Closed principle. We may simplify the logic here and output the both `last_modified` and `created` fields in the output."", 'comment_created': datetime.datetime(2021, 3, 16, 8, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 600312556, 'comment_body': 'Changing the time format is undesirable unless there is some strong reason to do it.', 'comment_created': datetime.datetime(2021, 3, 24, 9, 36, 49, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 600314866, 'comment_body': 'Add tests with metadata', 'comment_created': datetime.datetime(2021, 3, 24, 9, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 600320166, 'comment_body': ""Too many things are taking place in this function. Let's decompose them: \r\n- extract the creation time retrieval logic\r\n- extract the backups sorting logic"", 'comment_created': datetime.datetime(2021, 3, 24, 9, 47, 6, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 600842340, 'comment_body': ""Yes, I didn't notice it."", 'comment_created': datetime.datetime(2021, 3, 24, 20, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'slesarev-hub', 'type': 'User'}, {'comment_id': 612675883, 'comment_body': 'Add a comment regarding the gaps logic', 'comment_created': datetime.datetime(2021, 4, 13, 18, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 612676420, 'comment_body': 'Order?', 'comment_created': datetime.datetime(2021, 4, 13, 18, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 620193718, 'comment_body': 'This logic is not Postgres-specific. You can now use GenericMetadata to fetch `CreationTime` (StartTime) for any database. So I suggest to leave it in internal and use the GenericMetaFetcher to fetch the backup start time like this:\r\n\r\n```\r\nfunc doSmth(..., metaFetcher GenericMetaFetcher) {\r\n...\r\nmeta, err := metaFetcher.Fetch(backupName, folder.GetSubFolder(utility.BaseBackupPath))\r\n...\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 4, 26, 11, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 627517570, 'comment_body': ""better leave the linter hint: //nolint:lll, it's easier to read the table header when it is one-liner"", 'comment_created': datetime.datetime(2021, 5, 6, 15, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 627517827, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 5, 6, 15, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 627517982, 'comment_body': 'and here', 'comment_created': datetime.datetime(2021, 5, 6, 15, 19, 52, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 627533213, 'comment_body': 'Since this test is Postgres-specific now, why does `WAL SEGMENT BACKUP START` is `ZZZZZZZZZZZZZZZZZZZZZZZZ`? And other values are absent too.\r\n\r\nMaybe fill other fields of metadata.json and tests that they are being displayed too?\r\n\r\nIf this requires some noticeable effort, we can postpone it to the separate PR and merge the current as it is.', 'comment_created': datetime.datetime(2021, 5, 6, 15, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 639808824, 'comment_body': 'Why order became inversed?', 'comment_created': datetime.datetime(2021, 5, 26, 14, 56, 4, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 641695963, 'comment_body': 'why this changed?', 'comment_created': datetime.datetime(2021, 5, 28, 17, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}]","[{'commit_sha': '9e7766e30bff5524804d7fcefb3ab24ad9ee3fda', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a25051252b79ab30c484ffd3a7eafa4729d68810', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b37391044879631b630dab418b6f29377d2cfdd3', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eefb4283cf05dd987e83cc966fbe595b79cb06c8', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbde92343d926f0179ea6760c1087fc42ee6d569', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9b5abc7ac29475f5c6da45e248d4eca907472c9', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40f270b0f49632a068921173c04db1cf74df69a4', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9e345af80f2c43074c429f375f1e0f3de1bc968', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27232551d883a73481cc15c6e58c256428710839', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '784bac87c014bc33440bd59b4eb45b8a6b4449eb', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99dfcb1c94f77ad55c4ebf5ed19c574564b092f2', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34b5979851eb5a3fbfc680c7db882d286466ea51', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09fc3ccfd43086245b067e467dc23415a24b26a8', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ec0700edda099ab7a1d73cca9022cd93d3005f8', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9382c04a9677c17207853db7ecefc4ed87d5da55', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf76b65c0a5f7c082e7754e086a77a7ad7e93cfa', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e58b5b22cc878d3f707b173e3da09870bf65a5', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38c13d21930196aca9815b8dd4dec5d3d3f526b9', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9864f1f6e6a9133323600b0e6f609bf4306a57ee', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b8c3555c229058fe22e0885bb478a56ce789c3', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd1c903c259cf4d17bf77fbd8530eb5fdf9d5105', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66fd0101879dfe721d70ef0f3c9706d99d44d096', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1895c256299f5ea32d010793eac9020fb759fd4', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a60e7d7efc17d054b839888bd17312b480a707e', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c349b910523b426974c50b7aa1d7d850f76b3dc9', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ace627bebbe2862bb374ee2d89ab062e9d13a91', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}]",Alexander Slesarev,32823165,alexander.g.slesarev@gmail.com,User,,20,,25,8
667469876,Add CopyComposer for full backups,"### Database name
Postgres

# Pull request description
Add new type of composer for remote copying unchanged tar files during full backup creation process.

Related links:
#877",True,1012,https://api.github.com/repos/wal-g/wal-g/pulls/1012,https://github.com/wal-g/wal-g/pull/1012,closed,746,59,47,53,1,26,0,0,[],2021-06-10 22:11:44+00:00,2021-08-20 09:14:01+00:00,6087737.0,"70 days, 11:02:17","[{'comment_id': 654588051, 'comment_body': 'I understand this is a WIP PR but make sure you remove this before the final review. Changes/updates to the storages module should be merged there first.', 'comment_created': datetime.datetime(2021, 6, 18, 17, 33, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bunsenmcdubbs', 'type': 'User'}, {'comment_id': 662010286, 'comment_body': 'Some users prefer to use config variables instead of flags, so you also need to add the setting like `WALG_USE_COPY_COMPOSER` to the config, similarly to the `internal.UseRatingComposerSetting`.', 'comment_created': datetime.datetime(2021, 7, 1, 6, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 662015419, 'comment_body': 'As I can see, this is pretty similar to `test_full_backup()`. Can you use it instead like it is done in `full_backup_test.sh` and `full_backup_rating_composer_test.sh`?', 'comment_created': datetime.datetime(2021, 7, 1, 6, 31, 53, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 662021273, 'comment_body': 'I guess it might be a good idea to search in the N last backups, not only in the last one. I am not saying that this surely would work better, but we can at least benchmark this approach too.', 'comment_created': datetime.datetime(2021, 7, 1, 6, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 662028569, 'comment_body': 'I suggest adding some comments ', 'comment_created': datetime.datetime(2021, 7, 1, 6, 56, 52, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 662036633, 'comment_body': 'Seems like the logic is identical to AddFile, maybe extract the common code?\r\n\r\nActually, headers do not consume much space but may be updated frequently, maybe just always pack them to the separate tar and skip the copy logic on them?', 'comment_created': datetime.datetime(2021, 7, 1, 7, 10, 48, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 662040955, 'comment_body': 'Possible KeyError. What if file was not in previous backup?', 'comment_created': datetime.datetime(2021, 7, 1, 7, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 662110115, 'comment_body': 'Why do we need to include the remote-copied tar to the `tarBallQueue`?', 'comment_created': datetime.datetime(2021, 7, 1, 8, 57, 29, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 662111892, 'comment_body': 'To get rid of collisions between old tarballs and new ones, you can create a new ones with the custom names, [like it is being done here](https://github.com/wal-g/wal-g/blob/196c92016f2ffb11b261f2e152f35ab066cdd6fb/internal/databases/postgres/bundle.go#L319).', 'comment_created': datetime.datetime(2021, 7, 1, 8, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 666252449, 'comment_body': 'If we will always pack headers to the separate tars, we cannot copy tars with other composers or we should duplicate headers in tars.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'slesarev-hub', 'type': 'User'}, {'comment_id': 666253790, 'comment_body': 'If we will move name resolver into copy composer, we cannot check tar name correctness [here](https://github.com/wal-g/wal-g/blob/5f14deb57b7b9679f4307839f205e73cc7167c88/internal/databases/postgres/backup_push_handler.go#L262) ', 'comment_created': datetime.datetime(2021, 7, 8, 14, 36, 6, tzinfo=datetime.timezone.utc), 'commenter': 'slesarev-hub', 'type': 'User'}, {'comment_id': 669288205, 'comment_body': ""It doesn't seems to be a problem if we assign a prefix like `copy_****.tar.gz` to a copied tars."", 'comment_created': datetime.datetime(2021, 7, 14, 4, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677130096, 'comment_body': 'NIT: `switch/case` is the go idiomatic way for such cases', 'comment_created': datetime.datetime(2021, 7, 27, 5, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677130563, 'comment_body': 'Looks like it is no longer needed (same for other `*_tarball.go` files)', 'comment_created': datetime.datetime(2021, 7, 27, 5, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677131174, 'comment_body': 'Is it still required?', 'comment_created': datetime.datetime(2021, 7, 27, 5, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677133317, 'comment_body': 'NIT: `path.Join` is the preferred way to combine path fragments', 'comment_created': datetime.datetime(2021, 7, 27, 5, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677133945, 'comment_body': 'This is an old version of the s3 `session.go` file, update with the actual one.', 'comment_created': datetime.datetime(2021, 7, 27, 5, 41, 11, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677136175, 'comment_body': 'remove this, it is no longer required', 'comment_created': datetime.datetime(2021, 7, 27, 5, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677137376, 'comment_body': 'Is panic required? I think that returning an error will do the job.', 'comment_created': datetime.datetime(2021, 7, 27, 5, 50, 5, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677148814, 'comment_body': 'Why not to generate the copy_001,copy_002,... names? It would be simpler', 'comment_created': datetime.datetime(2021, 7, 27, 6, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677150508, 'comment_body': 'Again, all errors should be handled on the top level, just return them, do not panic :)', 'comment_created': datetime.datetime(2021, 7, 27, 6, 19, 36, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677151444, 'comment_body': 'Is it possible to leave only the `fromPath` and `toPath`? Like this: `CopyObject(fromPath, toPath string) error`. It would be more universal interface.', 'comment_created': datetime.datetime(2021, 7, 27, 6, 21, 28, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 677153271, 'comment_body': '`CommonAllowedSettings` map acts like a set, so use `true` instead of `false`. ', 'comment_created': datetime.datetime(2021, 7, 27, 6, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 682427985, 'comment_body': 'Add some  tracelog.InfoLogger output to indicate that regular composer is going to be used instead of the copy.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 682428334, 'comment_body': 'In the copy composer mode?', 'comment_created': datetime.datetime(2021, 8, 4, 9, 1, 6, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}, {'comment_id': 692679537, 'comment_body': 'I see no changes here', 'comment_created': datetime.datetime(2021, 8, 20, 5, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'usernamedt', 'type': 'User'}]","[{'commit_sha': '6526a9708f4bce8780491a4d628feb48296015e0', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dde6a552ac79c718a0da4e5a7cb57ff844b59518', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '844f556bf3a9d80577f2c1081f02d4b2c7df5936', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4851142eb91f01022cc7de4bd3dc5786fa67dad7', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd08a4dfa69aa46ffa127a3fe78ffa868920a912', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '316f967b04b4d8e6b796ad9d60ea79fd386082dc', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43fbfa2d083d0b79bee229240778f01a6f320bfe', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dca92eed8063f33452b1ddf6e837e5cb7f20004', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adb3c08c339bfdb3db5f04d8bf2d7ffd4944408e', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a872c97e03f166e1b029706510d78fdcb1b1e3e5', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56be6d3a7757063b425596ab7395880dc797c40b', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '974fdf14b64bc8e94f07c615f220f795ff8c781a', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a1221f21b935581e26b3978dc080870f8cd8286', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12b1d214b52b522f01d1dac8d73caa6df0d3b5dc', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9de3d25470750a3b5ae1f709eba480ff6081d542', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '016270096d22b2ccbb22c3591b359ac4acd20069', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e58eeb9051164e96988d18a30170bef60a0a45e', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '216e8729f6e5578dbf9cee88416af3a9062b5c2a', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '207dddc547b3fe7508394637ee6797df349be8e3', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48aefa1cca60723cf781da308f0f2d72068f41bc', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e76edd521401cb60196815f297018aa53f1ee0c', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3035215e5e470d8cb79a596bd9f4e1633812668c', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e165033e55e31f41f6608c4f5d6ac1d4aff926fe', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d29527c39c100ed5950f1960fdf99f23d72df3d', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03f33c3e0c0e7b1f2904be9ffd2f5908ec76a1a0', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '390ebb7f56cd6cffc4cccd899387ffc0239c69f8', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acbd5e7b24dd13fde799a823b9e14d4e7849edcf', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31479f4c73af1d09afb1b2dd1daded73a3d6464f', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8abe854db6f1f6e5c2e65792ebd746a96d2cdfc8', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40d7615723fc88addb524122817fd85f5f9143f2', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f83c62385ed78105d363d52731851e56ad948483', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3b563611cfe70785cbae5f480e0edb2f0f0e31a', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f38578256ff83031541edbb02dc395bd31367d84', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '714f3df65e2978d81fb7b58c4663ac94824230f6', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5c54d406577c080a36dbe9e9ef799f887b08ab4', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9b610e100e9e040eca60fc1e09e4ddc44dfa157', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ba06a7b530741bfae73a70c484c34dab1283814', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed90946c293ac5b8f27f0f06f1c3ad070a2b5be4', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14aa87ffc968ad6c03de7e71d034fc3a1bf9c19e', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bb42a82b40d2c754dfe178e06b705bc6a2fbb99', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9098bd98147561abfff7cf6dc3149c469dfaaa9d', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f66d86d60e8a196d844ef88241fd85caaec4983', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc1d0bc3e9d38ba3cbecc2e8dcf4c0c45158f6d0', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd7124732684cb5496178dae7d0f9e88cb586792', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63098763c8f98449f21cffa33effe2685f79e025', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b94d76f28c76e50f9aaa3d68ea2d58c56fb44cfa', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cca9c20fa142bd896e4d4d7220337817f63c497', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc77e30c4e15432e7e04a9a5d82cf6d5c3ca6917', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78ec5e42a6654c37db3af9e918abe0e3f6bf4593', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c449c3891d709ba48ae4e34870ca19a1e0f5dc6a', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b316c010e0bcd518d7384bf783b2d2c655b73d19', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '523d4606812c46f75d802732983f209f29d95060', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f5e7b268ff00520a81cad2b042706d4dd5a3b68', 'committer_username': 'usernamedt', 'committer_name': 'Daniil Zakhlystov', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 18, 15, 21, 37, tzinfo=datetime.timezone.utc)}]",Alexander Slesarev,32823165,alexander.g.slesarev@gmail.com,User,,20,,25,8
717697322,Update Copy composer benchmark,"### Database name
Postgres

# Pull request description

This is pr with Copy composer benchmark in case when database is updated between pushes.

Related links:
#1012",True,1073,https://api.github.com/repos/wal-g/wal-g/pulls/1073,https://github.com/wal-g/wal-g/pull/1073,closed,83,1,9,1,0,0,0,0,[],2021-08-23 10:18:05+00:00,2021-08-23 11:14:29+00:00,3384.0,0:56:24,[],"[{'commit_sha': 'bad989dd9740353e3237865835d53483cf4e5008', 'committer_username': 'slesarev-hub', 'committer_name': 'Alexander Slesarev', 'committer_email': 'alexander.g.slesarev@gmail.com', 'commit_date': datetime.datetime(2017, 10, 15, 21, 25, 7, tzinfo=datetime.timezone.utc)}]",Alexander Slesarev,32823165,alexander.g.slesarev@gmail.com,User,,20,,25,8

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
95143992,wal-g,wal-g/wal-g,Go,455,3177,61,206,1764,280,92,47,"[{'id': 717697322, 'number': 1073, 'closed': datetime.datetime(2021, 8, 23, 11, 14, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 10, 18, 5, tzinfo=datetime.timezone.utc), 'time_taken': 3384.0, 'time_delta': '0:56:24', 'additions': 83, 'deletions': 1, 'state': 'closed'}, {'id': 717541826, 'number': 1072, 'closed': datetime.datetime(2021, 8, 23, 7, 13, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 6, 31, 24, tzinfo=datetime.timezone.utc), 'time_taken': 2539.0, 'time_delta': '0:42:19', 'additions': 83, 'deletions': 1, 'state': 'closed'}, {'id': 667469876, 'number': 1012, 'closed': datetime.datetime(2021, 8, 20, 9, 14, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 22, 11, 44, tzinfo=datetime.timezone.utc), 'time_taken': 6087737.0, 'time_delta': '70 days, 11:02:17', 'additions': 746, 'deletions': 59, 'state': 'closed'}, {'id': 591883024, 'number': 907, 'closed': datetime.datetime(2021, 5, 31, 14, 12, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 12, 18, 45, 32, tzinfo=datetime.timezone.utc), 'time_taken': 6895631.0, 'time_delta': '79 days, 19:27:11', 'additions': 723, 'deletions': 151, 'state': 'closed'}]"
