pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
992121940,compose: Add format hinting for spoilers.,"Until now, whenever typeahead autocompleted the spoiler syntax, there
was no indication if and how a visible header to the hidden content
could be added.

Now when autocompleting, the word ""Header"" is added as a placeholder
and highlighted, hinting at the format.

Fixes: #20868.

**Screenshots and screen captures:**

https://www.loom.com/share/f867f735e80e4486b4c69a6de956a8cd

**Self-review checklist**

- [X] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [X] Explains differences from previous plans (e.g., issue description).
- [X] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [X] Each commit is a coherent idea.
- [X] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [X] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [X] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
",True,22428,https://api.github.com/repos/zulip/zulip/pulls/22428,https://github.com/zulip/zulip/pull/22428,closed,36,16,2,3,9,1,4,0,"[{'name': 'area: compose (misc)'}, {'name': 'priority: high'}, {'name': 'size: L'}, {'name': 'integration review'}]",2022-07-09 01:24:25+00:00,2022-09-11 21:11:02+00:00,5600797.0,"64 days, 19:46:37","[{'comment_id': 962459294, 'comment_body': 'This change belongs in a separate commit, otherwise LGTM!', 'comment_created': datetime.datetime(2022, 9, 5, 4, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}]","[{'commit_sha': 'c4d9d1d33ba40b0ae307806d46421a85eb437044', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20620e68a4279ef6b5c195486336c7dbef39a5b5', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca2c0f7e2123a90cefbe71bd6382fce33244dbb6', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
909148132,"typeahead, markdown: Update characters allowed before @ and stream mentions.","Now the following characters are allowed before @-mentions, stream references (starting with #) and emojis (starting with :) - space, (, {, [, "", ', /, <, both for autocompleting and rendered markdown.

Earlier only the opening brace type characters and space was allowed.

**Screenshots and screen captures:**

Showing how typeahead is triggered when @ follows the above mentioned list of characters
https://www.loom.com/share/1e3dca7f5c6742e5bf8a75145b6b48d0

Showing the newly allowed rendered markdown mentions
![image](https://user-images.githubusercontent.com/68962290/173627511-d20ce7a1-c6e1-486c-a146-2e68e4e78d35.png)

**Self-review checklist**

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] Self-reviewed the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",True,21786,https://api.github.com/repos/zulip/zulip/pulls/21786,https://github.com/zulip/zulip/pull/21786,closed,66,16,5,2,12,5,2,0,"[{'name': 'size: L'}, {'name': 'integration review'}]",2022-04-13 16:48:10+00:00,2022-08-07 02:29:40+00:00,9970890.0,"115 days, 9:41:30","[{'comment_id': 898734066, 'comment_body': 'Why did we remove `,` and `:`? ', 'comment_created': datetime.datetime(2022, 6, 16, 6, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}, {'comment_id': 898737447, 'comment_body': ""That's because we expect there to be a space between `,` or `:` and the stream mention. This was discussed [here](https://chat.zulip.org/#narrow/stream/9-issues/topic/Mention.20after.20.2F)"", 'comment_created': datetime.datetime(2022, 6, 16, 6, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 898748001, 'comment_body': 'Cool, then it seems fine!', 'comment_created': datetime.datetime(2022, 6, 16, 6, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}, {'comment_id': 936093748, 'comment_body': '@N-Shar-ma it looks like you didn\'t apply this change from the STREAM_TOPIC regex; is that an oversight?\r\n\r\nAlso, should we extract `BEFORE_MENTION_ALLOWED_REGEX = r""(?<![^\\s\'""\\(\\{\\[\\/<])""` in `mention.py` and have all of these other regular expressions be constructed using that? Unless I\'m mistaken, we want the same thing in all 4 places, and we should express that in a way that indicates that.', 'comment_created': datetime.datetime(2022, 8, 2, 23, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 938641008, 'comment_body': 'Oops, that was an oversight! Have extracted the variable for re-use as suggested!', 'comment_created': datetime.datetime(2022, 8, 5, 9, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}]","[{'commit_sha': 'bcd93d54d8ceebc9cfff2e0e7c194bd2c293f52c', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a794124bcf5374a1c3b1e95e27a0c370e1dd67b3', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
950171316,typeahead: Don't match descriptions for streams and user groups.,"Uptil now, both names and descriptions of streams and user groups were matched to show the typeahead suggestions. This led to unexpected behaviour like for a clear mention of a certain stream, the typeahead menu suggested a completely different stream which had a mention of the first stream in it's description.

To prevent such bugs and also since description matching is not really useful for streams and user groups, only names will be matched.

Fixes: The bug mentioned on this [CZO thread](https://chat.zulip.org/#narrow/stream/9-issues/topic/typeahead.20regression)

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**
https://www.loom.com/share/4d9b9039d80146be90aa8954bda0a435)
This shows that despite having a mention of the Rome stream in its description, Denmark does not show up in the typeahead suggestions when the full stream name is typed out (it shows for ""r"" since Denmark too has ""r"" in it's name)

**Self-review checklist**

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",True,22150,https://api.github.com/repos/zulip/zulip/pulls/22150,https://github.com/zulip/zulip/pull/22150,closed,16,20,3,1,6,2,2,0,"[{'name': 'size: M'}, {'name': 'integration review'}]",2022-05-29 02:36:12+00:00,2022-07-08 21:28:53+00:00,3523961.0,"40 days, 18:52:41","[{'comment_id': 889425425, 'comment_body': 'We generally don\'t leave commented out things in tests like this; they are bad for readability. I think it\'d be better to just have these lines be things like: \r\n\r\n`assert_stream_matches(""cold"", [])`\r\n\r\nWith a comment noting that we don\'t match against descriptions, for all the test changes in this file.', 'comment_created': datetime.datetime(2022, 6, 4, 0, 41, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 889597709, 'comment_body': 'Perhaps a comment like `// Do not match stream descriptions` would help with the readability here.', 'comment_created': datetime.datetime(2022, 6, 4, 17, 34, 59, tzinfo=datetime.timezone.utc), 'commenter': 'aero31aero', 'type': 'User'}]","[{'commit_sha': '082e9adcea416e30089ff4fe065a6661f4fcf241', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
1025341512,typeahead: Fix thin blue line bug when there is space after `>`.,"When the user added space/s right after the topic typehead symbol `>`,
a thin blue line would be selected at the top of the typeahead menu.

To avoid this and to make stream and topic typeaheads' behaviour more
consistent with each other, space/s right after `>` is not allowed,
like it is not allowed right after `#`.

Fixes: #19124.

**Screenshots and screen captures:**
(no typeahead menu visible when there is a space immediately after `>`)
![image](https://user-images.githubusercontent.com/68962290/184433753-0bbd147f-1407-48e1-9972-aa8c40f1cea2.png)


**Self-review checklist**


- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",True,22708,https://api.github.com/repos/zulip/zulip/pulls/22708,https://github.com/zulip/zulip/pull/22708,closed,6,0,1,1,2,0,3,0,"[{'name': 'bug'}, {'name': 'area: compose (misc)'}, {'name': 'size: S'}]",2022-08-12 20:00:10+00:00,2022-08-12 23:47:28+00:00,13638.0,3:47:18,[],"[{'commit_sha': 'cfa49734410d13c796276f4f4e6d9456d242c682', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
1029247001,typeahead: 2 highlighting bugs fixed,"Earlier mid word parts matching with the search query were also
highlighted (made bold), but since actual matching for showing search
suggestions is based on prefix matching, this highlighting logic is
now made to be in sync with the search suggestions matching logic.

---------------------------------------------------------------------------

`make_query_highlighter` called `highlight_with_escaping_and_regex`
once for each word in the phrase, due to which only 1 word searches
could be highlighted. For example searching for `two wo` resulted
in no highlighting at all in `two words`.

One call per word in the phrase was also redundant since the called
function can handle a multi word query. So now the entire phrase is
passed to the called function just once.

Follow up to https://github.com/zulip/zulip/pull/22307#discussion_r947261493


**Screenshots and screen captures:**

Note the mid word `o`s are not highlighted:
![image](https://user-images.githubusercontent.com/68962290/185229882-81237896-b6cc-4454-a072-5b4adfa8663d.png)

![image](https://user-images.githubusercontent.com/68962290/185229998-c9ff4752-4e61-4982-9fcb-5082ee3bd47b.png)

**Self-review checklist**

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",True,22739,https://api.github.com/repos/zulip/zulip/pulls/22739,https://github.com/zulip/zulip/pull/22739,closed,18,13,2,2,4,2,2,0,"[{'name': 'size: M'}, {'name': 'integration review'}]",2022-08-17 19:52:52+00:00,2023-09-21 18:24:13+00:00,34554681.0,"399 days, 22:31:21","[{'comment_id': 968114825, 'comment_body': ""Would it be better to allow more delimiters than just space, like `'`, `-`,` _`,`,` and `/`?"", 'comment_created': datetime.datetime(2022, 9, 12, 8, 15, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}, {'comment_id': 969195299, 'comment_body': 'Hm, that seems like a question we should ask in the context of search filtering more so than highlighting? This seems like the desired behavior to me:\r\n\r\n> this highlighting logic is\r\nnow made to be in sync with the search suggestions matching logic.', 'comment_created': datetime.datetime(2022, 9, 13, 6, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'alya', 'type': 'User'}]","[{'commit_sha': '51ea47c60e9e503a5fd2227b9f58cbaa5fcc468e', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2c23b656ecac7cd78ab2584dd462d7ed309b3e1', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
969129833,"left-sidebar: Use -, _ and / additionally as stream word separators.","Uptil now only space was used as a word separating character when
searching streams. This meant that searching for ""xyz"" would not turn
up a stream named ""stream-xyz"" as one would expect.

Since -, _ and / are likely to be used as word separators in stream
names, these 3 are added as word separators for streams. The utility
function `filter_by_word_prefix_match` is refactored by adding an
optional `word_separator_regex` argument.

Fixes: #19700.

Earlier PRs #19726 and #20566 also aimed to fix the same issue. This PR takes a different approach (using indices and not splitting on the word separator character/s for matching stream names with search terms), but the testing strategy for util.js is inspired from #20566. This PR additionally fixes a bug not fixed in previous PRs where a sequence of consecutive words, starting after the 1st word would not match. For example, searching ""test stream"" would not show a stream named ""A test stream""

**Screenshots and screen captures:**
![image](https://user-images.githubusercontent.com/68962290/174044727-ac217f31-5799-4212-9c81-fa5524342f15.png)

![image](https://user-images.githubusercontent.com/68962290/174044815-0ba0cd48-49a5-47e4-9f0f-d9c5d768d7a8.png)


**Self-review checklist**


- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",True,22253,https://api.github.com/repos/zulip/zulip/pulls/22253,https://github.com/zulip/zulip/pull/22253,closed,89,8,4,1,8,9,4,0,"[{'name': 'area: left sidebar (misc)'}, {'name': 'priority: high'}, {'name': 'size: L'}, {'name': 'integration review'}]",2022-06-16 10:02:25+00:00,2022-08-02 22:55:41+00:00,4107196.0,"47 days, 12:53:16","[{'comment_id': 899911197, 'comment_body': 'Maybe change the variable name to something that describes the purpose of this more, `idx` is not very clear', 'comment_created': datetime.datetime(2022, 6, 17, 8, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'juliaBichler01', 'type': 'User'}, {'comment_id': 899911704, 'comment_body': 'Maybe add a comment here to explain what this does', 'comment_created': datetime.datetime(2022, 6, 17, 8, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'juliaBichler01', 'type': 'User'}, {'comment_id': 900161851, 'comment_body': 'Here idx is short for ""index"", and is a commonly used short form (even within this repository) so I think it is fine, but thanks for bringing this up!', 'comment_created': datetime.datetime(2022, 6, 17, 14, 12, 57, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 900162152, 'comment_body': ""I'll do that. Thanks!"", 'comment_created': datetime.datetime(2022, 6, 17, 14, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 929422088, 'comment_body': 'So, generally it\'s not safe to combine something into a regular expression via just `+`; one would need to escape special regular expression characters like `.` for this to be correct, or they\'ll be treated as part of the regular expression itself.\r\n\r\nI don\'t think we\'re intending this to feel like an ""enter a regular expression"" UI, so we should escape the `search_term` before doing this concatenation, I think? \r\n\r\nI\'m not entirely sure what you have in mind, but a good test case is searching for strings making use of `.` or `*` or `?`.', 'comment_created': datetime.datetime(2022, 7, 26, 0, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 929513565, 'comment_body': 'Thanks for pointing out this edge case. As you suspected, things do not work as expected when using those special characters. \r\n\r\nHere ""test"" should not show up when searching for `*st` but it does since the search term is (unintentionally) treated as a regular expression:\r\n![image](https://user-images.githubusercontent.com/68962290/180923137-3a1790ee-3fe7-46e7-b7ef-5c2c9cfea830.png)\r\n\r\nEscaping the search term fixes this!', 'comment_created': datetime.datetime(2022, 7, 26, 4, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 936089973, 'comment_body': 'Extended these tests, with comments explaining what the logic is doing.', 'comment_created': datetime.datetime(2022, 8, 2, 22, 55, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 936090079, 'comment_body': 'Same comment on extending these tests here.', 'comment_created': datetime.datetime(2022, 8, 2, 22, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 936090655, 'comment_body': ""Moved the `-` to the end of the bracketed region, to make clear we're not using `-` as a range here. I didn't test sure if your original version was buggy in considering every character in the the range between two of the other 3 characters here as a separator, but I think it might have been."", 'comment_created': datetime.datetime(2022, 8, 2, 22, 57, 10, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '13ef0b5b0427de7e939887d95612ca1e9195185f', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
978608823,search_suggestions: Show profile pictures in search auto-complete suggestions,"This PR adds the feature of showing users' profile pictures / avatars inline in the suggested autocomplete options. The last commit additionally fixes a bug where extra mid word segments of the search suggestions were highlighted instead of just the matching word prefixes.
(Borrows - after modifications - from #20494

Fixes: #20267

**Screenshots and screen captures:**

User profile pictures inline:
![image](https://user-images.githubusercontent.com/68962290/175644269-99175652-9de6-437a-beb7-725c570fa24c.png)

Only matching prefix highlighted (before this bug fix the ""the"" in the middle of O**the**llo too would be wrongly highlighted): 
![image](https://user-images.githubusercontent.com/68962290/175636409-41227632-b675-45be-98ee-8fb07b0de7be.png)


**Self-review checklist**

- [X] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [X] Explains differences from previous plans (e.g., issue description).
- [X] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [X] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [X] Each commit is a coherent idea.
- [X] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [X] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [X] Strings and tooltips.
- [X] End-to-end functionality of buttons, interactions and flows.
- [X] Corner cases, error conditions, and easily imagined bugs.
",True,22307,https://api.github.com/repos/zulip/zulip/pulls/22307,https://github.com/zulip/zulip/pull/22307,closed,390,180,11,4,10,8,3,0,"[{'name': 'area: search'}, {'name': 'priority: high'}, {'name': 'size: XL'}]",2022-06-24 18:31:31+00:00,2022-08-16 21:23:39+00:00,4589528.0,"53 days, 2:52:08","[{'comment_id': 910916873, 'comment_body': 'Is this necessary? Because the default padding should already be 0, except this inherits some padding?', 'comment_created': datetime.datetime(2022, 6, 30, 11, 35, tzinfo=datetime.timezone.utc), 'commenter': 'juliaBichler01', 'type': 'User'}, {'comment_id': 910919460, 'comment_body': 'Why do you test only the first piece here now?', 'comment_created': datetime.datetime(2022, 6, 30, 11, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'juliaBichler01', 'type': 'User'}, {'comment_id': 910925349, 'comment_body': ""Why did you add this condition if you always set 'is_person' to true in `search_suggestion.js`?"", 'comment_created': datetime.datetime(2022, 6, 30, 11, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'juliaBichler01', 'type': 'User'}, {'comment_id': 912369394, 'comment_body': ""`is_person` is not true (actually it's simply not defined) for stream suggestions, etc, so this condition is necessary"", 'comment_created': datetime.datetime(2022, 7, 2, 14, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 912369946, 'comment_body': 'Not too sure since this change is ported from a previous PR, but yes it does seem this is necessary to override the inherited padding (of 2px)', 'comment_created': datetime.datetime(2022, 7, 2, 14, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 912370470, 'comment_body': 'The first piece is essentially the prefix of the item (each of which is word) so only it is tested as mid word matches are irrelevant. For example, if the search term is ""the"" it\'ll match the prefix ""The"" in ""**The**ta"" but not the midword ""the"" in ""O**the**llo""', 'comment_created': datetime.datetime(2022, 7, 2, 14, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 947261493, 'comment_body': ""It's not clear to me that this change is correct in all cases where we use `highlight_with_escaping_and_regex`, and would like to see that satisfactorily explained -- we did add the loop in the below logic for a reason, and I'm not sure what it was. \r\n\r\nLet's move this commit to a separate PR, perhaps with a #frontend thread to get more eyes on it. I can imagine one possibility is that we should be using passing an option to this function, and another (if we're matching individual words) is that the regular expression needs a negative lookbehind assertion about which types of characters sit before `query`."", 'comment_created': datetime.datetime(2022, 8, 16, 21, 22, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 948362142, 'comment_body': '@timabbott The reason for the loop was probably for when the query has multiple words and so might have multiple highlighted parts (for example: **O**thello, the Moor **o**f Venice). I changed the logic to be much simpler and continue supporting multi word queries, as explained in a block comment. This resulted in not needing to remove the global flag.\r\n\r\nI also realised that for highlighting persons, we call the highlighting function per word of the name, while for streams, we do it for the entire stream name (which may be multi word). This resulted in the bug pointed out in the [above comment by Julia](https://github.com/zulip/zulip/pull/22307#pullrequestreview-1024711661), so I fixed that is a separate commit too! \r\n\r\nThe PR is #22739 ', 'comment_created': datetime.datetime(2022, 8, 17, 20, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}]","[{'commit_sha': '865023802eb07cb7eb71ec9927b035fd3d25ebc4', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd63e127f5c8167b9f05a40d9ee35eb6174c6241b', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cc8a2bc800b96483120370206d080ddbc54726d', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ed650f5969e9af2c4699fe5a540b0b2d954f31a', 'committer_username': 'oliver-pham', 'committer_name': 'Oliver Pham', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 9, 12, 10, 7, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
797064300,search_suggestion: Show profile pictures in search auto-complete suggestions,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->
Fix #20267

What I've basically changed is how [`bootstrap-typeahead`](https://bootstrapdocs.com/v2.0.1/docs/javascript.html#typeahead) should render the auto-complete suggestions for **users only**. I've attempted to reuse the existing UI components (e.g. `input_pill`) and styling, but it seems hard to make them work together as expected without adding a container and some CSS. If you find a better approach, I'm open to all recommendations.

During the process of encapsulating the `typeahead` list items inside flexboxes, I noticed the whitespace right after `prefix` is not escaped in HTML. This can cause, for example, `""StreamDenmark""` because the whitespace before `""Denmark""` is ignored in HTML.

**Testing plan:** <!-- How have you tested? -->
- Manual Testing

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->
On large screens:
![image](https://user-images.githubusercontent.com/55090719/145057916-64ea109b-3230-42a0-b7f8-f22019b480f4.png)
![image](https://user-images.githubusercontent.com/55090719/145057941-19147939-75f0-4c72-9024-8fcf2cc10b87.png)

On smaller screens:
![image](https://user-images.githubusercontent.com/55090719/145058064-e150d0f5-a077-4b20-849c-c5c18a9f5a55.png)
![image](https://user-images.githubusercontent.com/55090719/145058080-c1e3197b-35dc-4756-be7e-3c20cbfd8901.png)

When PM group:
![Screen Shot 2021-12-08 at 10 09 00 PM](https://user-images.githubusercontent.com/55090719/145330113-a809755b-a800-4706-922f-fb96f1a87ad0.png)

<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",False,20494,https://api.github.com/repos/zulip/zulip/pulls/20494,https://github.com/zulip/zulip/pull/20494,closed,210,113,9,2,17,17,4,0,"[{'name': 'area: search'}, {'name': 'priority: high'}, {'name': 'size: XL'}, {'name': 'has conflicts'}]",2021-12-07 15:52:28+00:00,2022-08-16 21:16:32+00:00,21792244.0,"252 days, 5:24:04","[{'comment_id': 764444487, 'comment_body': ""Let's add a comment for this, noting that the purpose is to disable the X to remove pill. \r\n\r\nOr, a better fix might be to extend the pill library to have an option to just not include an exit element."", 'comment_created': datetime.datetime(2021, 12, 7, 23, 44, 10, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 764445391, 'comment_body': ""What do this look like for Desdemona?  (I think she has permission to see emails; if not edit organization settings).\r\n\r\nI think it's likely we'll prefer to just have the pills (with no email address in the text), in which case we may not need this code."", 'comment_created': datetime.datetime(2021, 12, 7, 23, 46, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 764445586, 'comment_body': ""What's the motivation for this change?  I mostly want to make sure we're not at risk of breaking other search examples."", 'comment_created': datetime.datetime(2021, 12, 7, 23, 47, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 764446010, 'comment_body': ""Oh, I see it's in the commit message; I still don't understand, though -- are you fixing a problem created by other changes in this PR, or something that was present previously?  "", 'comment_created': datetime.datetime(2021, 12, 7, 23, 48, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 768246130, 'comment_body': ""Should this be a `span`, since it's an inline element?"", 'comment_created': datetime.datetime(2021, 12, 14, 1, 23, 58, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 768246401, 'comment_body': 'I think this should probably be called `description_html`, for clarity that it is being inserted without further escaping?  \r\n\r\n', 'comment_created': datetime.datetime(2021, 12, 14, 1, 24, 34, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 768246597, 'comment_body': ""This is a preexisting issue that's hard to fix, but this HTML ordering isn't going to work well for languages with a different word order than English.  I'm not sure there's a good solution, so just noting it.\r\n\r\nSee https://zulip.readthedocs.io/en/latest/translating/internationalization.html for details on this problem.\r\n"", 'comment_created': datetime.datetime(2021, 12, 14, 1, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 768247077, 'comment_body': ""Can we scope this CSS inside the search area container?  It's not a generic component that can be used elsewhere, and the name makes it sound like it might be.\r\n\r\nI think concretely this means we should move these lines inside the `zulip.css` nested block that you have below."", 'comment_created': datetime.datetime(2021, 12, 14, 1, 26, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 768247595, 'comment_body': 'Would it be better to just put the `"" ""` inside the `Handlebars.Utils.escapeExpression`?  Seems cleaner to have `prefix + Handlebars.Utils.escapeExpression("" "" + all_but_last_part + "","")`', 'comment_created': datetime.datetime(2021, 12, 14, 1, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '0fa996ecd86962723862864620cded22b49df288', 'committer_username': 'oliver-pham', 'committer_name': 'Oliver Pham', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 9, 12, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '190bf7c895d105991ee35a47bf8500db8e150256', 'committer_username': 'oliver-pham', 'committer_name': 'Oliver Pham', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 9, 12, 10, 7, tzinfo=datetime.timezone.utc)}]",Oliver Pham,55090719,,User,,46,,15,11
1030034560,search_suggestions: Fix bug where space in stream names did not show.,"For multi word stream names, searching for particular phrases, like
the entirety of any word in it, caused no space to show before and/or
after that word. For example, searching for `core` resulted in
`**core**team` (the space between `core` and `team` missing).

The cause of this bug was that the immediate container was `div` with
`display: flex` and so spaces at the ends of its immediate child
elements: text nodes and `strong`  elements - were not respected. This
is fixed now by wrapping all the `description_html` text in a `span`
element (while the optional `user_pill_context` stays in another `span`
as before).

Fixes: [CZO thread](https://chat.zulip.org/#narrow/stream/49-development-help/topic/difference.20in.20CZO.20and.20dev.20server/near/1420888)

**Screenshots and screen captures:**

![image](https://user-images.githubusercontent.com/68962290/185412439-63ad9677-025b-4d7e-9097-47627dde03f4.png)

**Self-review checklist**

- [X] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [X] Explains differences from previous plans (e.g., issue description).
- [X] Highlights technical choices and bugs encountered.
- [X] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [X] Each commit is a coherent idea.
- [X] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [X] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [X] Strings and tooltips.
- [X] End-to-end functionality of buttons, interactions and flows.
- [X] Corner cases, error conditions, and easily imagined bugs.
",True,22744,https://api.github.com/repos/zulip/zulip/pulls/22744,https://github.com/zulip/zulip/pull/22744,closed,16,16,4,1,1,1,1,0,[{'name': 'size: M'}],2022-08-18 13:55:33+00:00,2022-08-18 18:22:09+00:00,15996.0,4:26:36,"[{'comment_id': 949217614, 'comment_body': 'Reverting this change made in #22307 as this partially fixed (more like hid) the bug that this commit fixes completely', 'comment_created': datetime.datetime(2022, 8, 18, 14, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}]","[{'commit_sha': '26d8a77526cd08fd7f5274948a92c81766fd30ff', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
1024178473,compose: Allow ctrl + enter to send in preview mode as well.,"When the user chose to send the composebox message on pressing ctrl +
enter instead of just enter, it only worked in writing mode but not
the preview mode.

This change makes ctrl + enter send the message even in preview mode,
when that setting is chosen.

Fixes: #21670.

**Self-review checklist**

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",True,22705,https://api.github.com/repos/zulip/zulip/pulls/22705,https://github.com/zulip/zulip/pull/22705,closed,21,5,2,2,5,1,3,0,"[{'name': 'bug'}, {'name': 'area: compose (misc)'}, {'name': 'size: M'}]",2022-08-11 18:16:01+00:00,2022-08-16 21:38:02+00:00,444121.0,"5 days, 3:22:01","[{'comment_id': 944032975, 'comment_body': ""We're generally trying to avoid new use of `rewire`; is this necessary?"", 'comment_created': datetime.datetime(2022, 8, 12, 0, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '745b96ea4629b7385f7eeae89a0de646c71b0beb', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87a6c3924be74fb7b3d2581d5ae6565f2c325990', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
1027305436,Make switching to and from the preview mode more convenient,"When switching back to writing mode after preview mode, the composebox
would be out of focus and so the the cursor would semingly get lost.

Now on clearing the preview mode, the composebox is focused and so the
cursor is seen blinking at it's original position.

Till now, switching back to writing mode after preview mode, needed
the user to first focus on the `Write` (unpreview) button by tabbing
to it (if using keyboard) and then select it.

To make things easier, especially when using keyboard, now the `Write`
button will be automatically focused on entering preview mode, so
going back to writing mode only needs one 'Enter` keystroke.

Fixes: [CZO thread](https://chat.zulip.org/#narrow/stream/9-issues/topic/preview.20mode.20and.20cursor/near/1419965)

**Screenshots and screen captures:**

Entering and exiting preview mode using keyboard:
https://user-images.githubusercontent.com/68962290/184899009-5997e5db-1e79-411d-9d95-e5b525a43e07.mp4

Unpreview button focused immediately after entering preview mode
![image](https://user-images.githubusercontent.com/68962290/184908894-738d2f05-eda5-4006-94c0-141802b0d4cf.png)

**Self-review checklist**

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",True,22726,https://api.github.com/repos/zulip/zulip/pulls/22726,https://github.com/zulip/zulip/pull/22726,closed,4,0,2,2,1,0,1,0,[{'name': 'size: XS'}],2022-08-16 08:25:06+00:00,2022-08-16 20:46:32+00:00,44486.0,12:21:26,[],"[{'commit_sha': 'a264fe659591d8f83478eab8ed3215b98389af52', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d862bf9e6d9dee992d8ccbc92df100e797f3dcf', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
993277445,Make it easier to work with numbered and bulleted lists,"A formatting button below the compose box can format the selected text
by bulleting or unbulleting the selected (partially or completely)
lines. The behaviour is modelled closely after how GitHub's bullet
list format button works.

A formatting button below the compose box can format the selected text
by numbering or unnumbering the selected (partially or completely)
lines. The behaviour is modelled closely after how GitHub's numbered
list format button works.
    
When the user is typing a numbered / bulleted list in the compose box,
on pressing Enter the list syntax will be inserted automatically on
a new line, and removed if Enter is pressed after an empty line.

Fixes: #20305.

**Screenshots and screen captures:**

Formatting buttons: 
https://www.loom.com/share/e476156ec1cf4bac8ef641faaad8af92

Automatic insertion / removal of bulleting / numbering:
https://www.loom.com/share/a63aebbb2d9c464eb5b7a1140fcc364b

**Self-review checklist**

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [X] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [X] Explains differences from previous plans (e.g., issue description).
- [X] Highlights technical choices and bugs encountered.
- [X] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [X] Each commit is a coherent idea.
- [X] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [X] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [X] End-to-end functionality of buttons, interactions and flows.
- [X] Corner cases, error conditions, and easily imagined bugs.
",True,22445,https://api.github.com/repos/zulip/zulip/pulls/22445,https://github.com/zulip/zulip/pull/22445,closed,410,51,8,3,27,51,2,0,"[{'name': 'size: XL'}, {'name': 'integration review'}]",2022-07-11 15:51:49+00:00,2023-09-28 22:05:34+00:00,38384025.0,"444 days, 6:13:45","[{'comment_id': 939487817, 'comment_body': ""Let's move this change to the previous commit."", 'comment_created': datetime.datetime(2022, 8, 6, 5, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 939487895, 'comment_body': 'Since the logic here is similar to that of `bulleted`, we can extract a common function for both.', 'comment_created': datetime.datetime(2022, 8, 6, 5, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 939488098, 'comment_body': ""Let's create a list `DONT_TRIM_TYPES` and use it here. This will help read the code without reading the comments."", 'comment_created': datetime.datetime(2022, 8, 6, 5, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 939491275, 'comment_body': ""Add a comment to what this does? (I didn't know you could use range like that)"", 'comment_created': datetime.datetime(2022, 8, 6, 6, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 939491549, 'comment_body': 'Can you comment on why deleting this will have no regressions?', 'comment_created': datetime.datetime(2022, 8, 6, 6, 31, 1, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 939510002, 'comment_body': ""Now that we need to check the state of the previous line (if it's bulleted / numbered and take action accordingly) every time enter (or something to the same effect) is used, there are no cases where we just let the native behaviour take over, as we emulate that as part of the `handle_bulleting_or_numbering` function (even in cases where bulleting / numbering isn't needed). Hence, not using the native browser behaviour simplifies the code"", 'comment_created': datetime.datetime(2022, 8, 6, 9, 54, 26, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 957023845, 'comment_body': ""I guess we will need to look for regressions in testing. I couldn't find any when I did."", 'comment_created': datetime.datetime(2022, 8, 29, 8, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1330823549, 'comment_body': 'We as a practice avoid importing modules with a renaming list this; it makes `git grep` much less effective for finding where something is used.', 'comment_created': datetime.datetime(2023, 9, 20, 0, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330823950, 'comment_body': ""This could really benefit from the comment explaining why this is turned off for list formatting; the fact that it's disabled for those is clear from the code."", 'comment_created': datetime.datetime(2023, 9, 20, 0, 19, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330825571, 'comment_body': 'Why is this at -2 rather than -1?', 'comment_created': datetime.datetime(2023, 9, 20, 0, 23, 56, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330825728, 'comment_body': 'Why is this `.at(1)` rather than `.at(0)`?', 'comment_created': datetime.datetime(2023, 9, 20, 0, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330826035, 'comment_body': ""Which specific behavior -- the toggling if there's already bullets? "", 'comment_created': datetime.datetime(2023, 9, 20, 0, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330826632, 'comment_body': 'Small note: I removed the extra space after `=` in `role= ""button""`.\r\n\r\nThe breakpoints don\'t seem set correctly for this to avoid pushing the send button offscreen in narrow windows.\r\n\r\n![image](https://github.com/zulip/zulip/assets/2746074/76b403c3-5bc0-49fc-be4a-92986f34448b)\r\n', 'comment_created': datetime.datetime(2023, 9, 20, 0, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330828529, 'comment_body': ""This doesn't use the `text-field-edit` modules and thus this feature breaks undo."", 'comment_created': datetime.datetime(2023, 9, 20, 0, 30, 46, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330830405, 'comment_body': 'Fixed in https://github.com/zulip/zulip/pull/22445#issuecomment-1726717296.', 'comment_created': datetime.datetime(2023, 9, 20, 0, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330832488, 'comment_body': 'Oh, can you fix this import too?', 'comment_created': datetime.datetime(2023, 9, 20, 0, 40, 16, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330832797, 'comment_body': 'I think this particular place lacking `text-field-edit` is highly problematic -- it means using `enter` breaks undo every time, not just when using the new formatting buttons.\r\n\r\n', 'comment_created': datetime.datetime(2023, 9, 20, 0, 41, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330833343, 'comment_body': 'Should this be modernized to use the `getSelection` API too?', 'comment_created': datetime.datetime(2023, 9, 20, 0, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330833918, 'comment_body': ""Yeah, I can confirm that this should have no functional impact as long as we implement the emulation correctly, which we need to do. Could likely use a pass on comments though -- I'll push some changes to them."", 'comment_created': datetime.datetime(2023, 9, 20, 0, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1330835214, 'comment_body': '``` diff\r\ndiff --git a/web/src/composebox_typeahead.js b/web/src/composebox_typeahead.js\r\nindex 10ecbf0831..d85a5d6a96 100644\r\n--- a/web/src/composebox_typeahead.js\r\n+++ b/web/src/composebox_typeahead.js\r\n@@ -196,11 +196,17 @@ function handle_bulleting_or_numbering($textarea, e) {\r\n }\r\n \r\n export function handle_enter($textarea, e) {\r\n-    // Used only if Enter doesn\'t send.\r\n-\r\n-    // To properly emulate browser ""Enter"", if the\r\n-    // user had selected something in the textarea,\r\n-    // we need those characters to be cleared.\r\n+    // Used only if Enter doesn\'t send. We need to emulate the\r\n+    // browser\'s native ""Enter"" behavior because this code path\r\n+    // includes `Ctrl+Enter` and other modifier key variants that\r\n+    // should add a newline in the compose box in the enter-sends\r\n+    // configuration.\r\n+    //\r\n+    // And while we\'re at it, we implement some fancy behavior for\r\n+    // bulleted lists.\r\n+\r\n+    // To properly emulate browser ""Enter"", if the user had selected\r\n+    // something in the textarea, clear those characters\r\n     const range = $textarea.range();\r\n     if (range.length > 0) {\r\n         $textarea.range(range.start, range.end).range("""");\r\n```', 'comment_created': datetime.datetime(2023, 9, 20, 0, 46, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1331980366, 'comment_body': ""Changed to use [`setSelectionRange`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange) followed by `text-field-edit`'s `insert` function, which retains undo-ability"", 'comment_created': datetime.datetime(2023, 9, 20, 17, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1331981283, 'comment_body': ""Changed to `text-field-edit`'s `insert`"", 'comment_created': datetime.datetime(2023, 9, 20, 17, 40, 18, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1332002606, 'comment_body': ""After some tinkering I realised that using the `getSelection` API would be rather overkill here, and simply used textarea's properties `selectionStart` and `selectionEnd` which do the job well enough."", 'comment_created': datetime.datetime(2023, 9, 20, 18, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1332037568, 'comment_body': 'As noted in a comment in the `section_off_selected_lines` function, ""`before_lines` includes the `\\n` character that separates it from `selected_lines`"" and this is at -1 position. The blank line (if any) is the new line character at -2 position, which we check for here.\r\n\r\nDo you think the code will be more intuitive if we strip the last character (`\\n`) from `before_lines` returned from `section_off_selected_lines` @timabbott?', 'comment_created': datetime.datetime(2023, 9, 20, 18, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1332038608, 'comment_body': 'This is due to similar logic as the previous comment (`after_lines` always has the separating new line at its start)', 'comment_created': datetime.datetime(2023, 9, 20, 18, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1332042177, 'comment_body': ""I actually meant all of it, nothing specific -- the toggling of complete lines even when they are partially selected (and just selecting the newline character too counts as partial selection), the toggling when there's already some bullets and the adding of a blank line before and after the bulleted selection."", 'comment_created': datetime.datetime(2023, 9, 20, 18, 43, 3, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1332077704, 'comment_body': ""It's so that we also consider any newline selected at the start / end, to format that line too. In this example, the `|` denotes the start and end of selection, and on formatting this selection, all 3 lines get formatted:\r\n```\r\nselected from end of this line|\r\nthrough this line\r\n|to the start of this line\r\n```\r\n\r\nHave explained this in the comment"", 'comment_created': datetime.datetime(2023, 9, 20, 19, 20, 53, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1332248020, 'comment_body': 'Thanks for catching this! Since we use a standard bootstrap breakpoint (`md` - 768px) for this layout shift, changing that is not a good idea. \r\n\r\nMaybe we could reduce the space between the compose control buttons when they start reaching the send button? Getting rid of the dividers might also free up some space. Or we could have all the buttons left of the gif button appear in a popover at this width instead of a narrower one.\r\n\r\nA future proof solution would be nice here, I think, especially because the ""Add poll"" button is also going to crowd this limited width soon, and potentially others too. Thoughts @alya?', 'comment_created': datetime.datetime(2023, 9, 20, 22, 40, 27, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1332274824, 'comment_body': ""Hm, given our compose box redesign plans (which make the buttons scrollable -- see #24878), I'm happy with any solution here that is easy to implement and does not look broken. Perhaps @karlstolley has a specific suggestion."", 'comment_created': datetime.datetime(2023, 9, 20, 23, 15, 24, tzinfo=datetime.timezone.utc), 'commenter': 'alya', 'type': 'User'}, {'comment_id': 1333129731, 'comment_body': ""I don't want to push this too far afield, but I think as a stopgap prior to the scrollable buttons design, we could tune both the breakpoints and the appearance of the vdots menu--the message-edit area introduces vdots under a few more conditions than the compose box does.\r\n\r\nAlternatively, we could use the space needs for the list buttons to be our jumping-off point to try an initial pass at the scrollable design. But I'd be interested to know where best to situate our priorities at this point, especially as we draw closer to 8.0"", 'comment_created': datetime.datetime(2023, 9, 21, 14, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1333432289, 'comment_body': ""I would prefer to go with easy here rather than blocking on the scrollable design -- I'm not at all convinced that the scrollable design will feel better on web than the popover design, and so I'd like that to be its own independent change isolated from other changes. \r\n\r\nI think there's no real problem with using a custom breakpoint for this particular element -- we have at least one custom one defined in `web/src/css_variables.js`, and I don't see any reason this detail would be coupled with anything else from a technical or design perspective; the Bootstrap breakpoints are just conveniences. "", 'comment_created': datetime.datetime(2023, 9, 21, 18, 2, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1333435308, 'comment_body': ""Yeah; I think that would be an improvement. The thing that made me unhappy here is that we're checking `before_lines.length`, which just confirms it's at least one character, and then accessing it in a way that requires that it be at least two characters, which is the kind of thing that really looks like a bug (even if it might not be in practice if `before_lines` is never exactly 1 character)"", 'comment_created': datetime.datetime(2023, 9, 21, 18, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1333436971, 'comment_body': ""OK -- I would replace this with just briefly describing the behavior we are implemented -- GitHub's behavior may change over time, and we're not exactly replicating every detail of it (At least I remember finding at least one bug that they have that we don't!), and it's nice to just have explanation be self-contained (or link to a reference, if say we were implementing some stnadard)."", 'comment_created': datetime.datetime(2023, 9, 21, 18, 6, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1333625146, 'comment_body': '@timabbott What exactly would we like to change at the breakpoint where the send button starts getting pushed off? Should we show the popover vdots at this custom breakpoint instead?', 'comment_created': datetime.datetime(2023, 9, 21, 21, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1333692081, 'comment_body': 'Makes a lot of sense, have elaborated specifics in the comment', 'comment_created': datetime.datetime(2023, 9, 21, 23, 23, 38, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1333693322, 'comment_body': 'Right, it does read as very confusing, thanks for pointing this out!\r\n\r\nThis needed a fair bit of careful refactoring, but I added to the tests which all pass, and have tested manually as thoroughly as I could too', 'comment_created': datetime.datetime(2023, 9, 21, 23, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1335256680, 'comment_body': ""Correct, we just need to change the breakpoints such that we show the `\\vdots` menu when there stops being space for all the items -- the same conceptual rule as before; there's now a couple more items."", 'comment_created': datetime.datetime(2023, 9, 24, 22, 48, 20, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1335259881, 'comment_body': 'Just adding some context: the complexity here is that going from wide to narrow screens, we 1st have a breakpoint at which the left sidebar collapses and compose box takes up all the width (making way for compose control buttons, right when it was getting crowded there). On making the screen even narrower, we then reach a point where we finally need to show the vdots menu.\r\n\r\nIn the current state with these 2 added buttons, we will have to show the vdots menu earlier when things get too cramped with the uncollapsed sidebar. However, at the point where it collapses, we will now have enough space to fit all buttons; should we revert to having them all present in a row then? And again change to vdots menu at the original vdots breakpoint?', 'comment_created': datetime.datetime(2023, 9, 24, 23, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1340235293, 'comment_body': ""@N-Shar-ma I think I solved a very similar issue, and at the same problem dimensions, with one additional breakpoint and some more complicated media queries in 14e9f653492. You might want to study those queries in particular, and we can chat about all of this further either here or on CZO.\r\n\r\nAt some point, we'll be able to use [container queries](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_container_queries) to solve problems like this, but there are still too many legacy browsers around that don't support them."", 'comment_created': datetime.datetime(2023, 9, 28, 14, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1340238419, 'comment_body': '(I regret now not putting explanatory comments adjacent [those media queries](https://github.com/zulip/zulip/commit/14e9f653492bce0f408eca269d7d9670ac85fe5d#diff-c8c3e8721bbdc4746a5d69b38b191a91fe81c8c031b046d21b39c1f442e4d479).)', 'comment_created': datetime.datetime(2023, 9, 28, 14, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1340427133, 'comment_body': ""Container queries are what struck me 1st too, but we need to wait for better support :/\r\n\r\nI have pushed a commit adding the breakpoint -- the code is not elegant, but might do for now? If it looks good to you @karlstolley, I'll squash this with the 1st commit."", 'comment_created': datetime.datetime(2023, 9, 28, 16, 49, 7, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1340568191, 'comment_body': '```suggestion\r\n        // selected_lines neither includes the `\\n` character that marks its\r\n```', 'comment_created': datetime.datetime(2023, 9, 28, 19, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1340568361, 'comment_body': '```suggestion\r\n        // that marks its end (which exists if there are after_lines).\r\n```', 'comment_created': datetime.datetime(2023, 9, 28, 19, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1340568686, 'comment_body': ""Tiniest of tiny nits: Possessive _its_ doesn't take an apostrophe"", 'comment_created': datetime.datetime(2023, 9, 28, 19, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1340569721, 'comment_body': 'Your comment here has a parenthetical inside a parenthetical, but rather than fixing the punctuation, can you rewrite this so its a little easier to follow?', 'comment_created': datetime.datetime(2023, 9, 28, 19, 12, 11, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1340570487, 'comment_body': '```suggestion\r\n    // if previous line was bulleted, automatically add a bullet to the new line\r\n```', 'comment_created': datetime.datetime(2023, 9, 28, 19, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1340570936, 'comment_body': '```suggestion\r\n        // if previous line was numbered, continue numbering with the new line\r\n```', 'comment_created': datetime.datetime(2023, 9, 28, 19, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1340571848, 'comment_body': '```suggestion\r\n        // behavior for the ""Enter"" key, but also handle automatic\r\n```', 'comment_created': datetime.datetime(2023, 9, 28, 19, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1340575904, 'comment_body': ""On second thought, we don't want to risk this comment becoming nonsensical if GitHub changes their behavior. So consider striking this, or rewriting just to explain what the code is doing."", 'comment_created': datetime.datetime(2023, 9, 28, 19, 19, 24, tzinfo=datetime.timezone.utc), 'commenter': 'karlstolley', 'type': 'User'}, {'comment_id': 1340603048, 'comment_body': ""Thanks for catching this! This is one of those things where I know it's wrong, but by force of habit, I make the mistake anyway :see_no_evil: "", 'comment_created': datetime.datetime(2023, 9, 28, 19, 48, 18, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1340603906, 'comment_body': 'Retained just the 1st point about considering complete lines even on partial selection, since all other points already have comments explaining them.', 'comment_created': datetime.datetime(2023, 9, 28, 19, 49, 18, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}]","[{'commit_sha': 'da85f2bde03fb2ea528250bb133b35aab9b7a178', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '086ac7262ef079abeccc1658877d70ad21afa95e', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bb90f0f6c1975077d63c4ae9ae707f4ca9b0507', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
1004547224,todo_widget: Improve its functionality and customizability,"Earlier the tasks in a list were sorted alphabetically and on marking
one complete, it was pushed under any incomplete tasks. This behaviour
can be unexpected and confusing, so now each task is appended to the
bottom of the list on being added, and no shifting takes place on
marking it completed.

Message readers can now reorder todo tasks in the message view by
dragging and dropping them. The new order is persisted.

Users can now name task lists by providing the task list title in the
`/todo` command on the same line. Example: `/todo School Work`. If no
title is provided by the user, ""Task List Title"" is used as default.

The author of a task list can later edit / update the task list title
in the todo widget, just like the question in the poll widget.

Fixes part of #20213.

**Screenshots and screen captures:**

https://www.loom.com/share/74415f4ef43043fcadeb00b001f4f323

![image](https://user-images.githubusercontent.com/68962290/181759913-0b8729b4-0199-45a8-ba1c-29a808b34125.png)

![image](https://user-images.githubusercontent.com/68962290/181759082-f8bab0c2-e0c5-4a36-a624-b4dbd237dfa6.png)

![image](https://user-images.githubusercontent.com/68962290/181759265-661f9c46-2511-4d69-ad85-22c4052f1009.png)

![image](https://user-images.githubusercontent.com/68962290/181759380-225dce5d-924c-4d68-b288-4d1a639664df.png)


**Self-review checklist**

- [X] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [X] Explains differences from previous plans (e.g., issue description).
- [X] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [X] Each commit is a coherent idea.
- [X] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [X] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [X] End-to-end functionality of buttons, interactions and flows.
- [X] Corner cases, error conditions, and easily imagined bugs.
",False,22551,https://api.github.com/repos/zulip/zulip/pulls/22551,https://github.com/zulip/zulip/pull/22551,closed,565,73,9,7,19,6,2,1,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2022-07-21 18:36:26+00:00,2023-02-07 08:14:41+00:00,17329095.0,"200 days, 13:38:15","[{'comment_id': 928278956, 'comment_body': ""Everything looks and works alright! \r\n\r\nI just didn't understand why are we multiplying `old_pos` and `new_pos` with 2."", 'comment_created': datetime.datetime(2022, 7, 24, 15, 59, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}, {'comment_id': 928296729, 'comment_body': 'the way `idx` is assigned initially makes it so that it starts at 2 for a task list and increments by 2 for each task, so for three tasks their `idx` values would be 2, 4, and 6, while the actual indices in the tasks array would of course be 0, 1 and 2. Hence the addition by 1 and doubling to convert from array index to `idx` (have added this as a comment in the code!)', 'comment_created': datetime.datetime(2022, 7, 24, 18, 34, 20, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1014862556, 'comment_body': 'This adds unnecessary complexity to the code. Can we keep the `idx` values and indices same?', 'comment_created': datetime.datetime(2022, 11, 6, 17, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1014862687, 'comment_body': 'This adds unnecessary complexity to the code. Can we keep the idx values and indices same?', 'comment_created': datetime.datetime(2022, 11, 6, 17, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1015023245, 'comment_body': 'Needs a comment of what it is used for.', 'comment_created': datetime.datetime(2022, 11, 7, 5, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1038340883, 'comment_body': ""Since the idx values being the way they are, seem to have a lot of history and complexity, I've created [this thread](https://chat.zulip.org/#narrow/stream/49-development-help/topic/simplify.20todos.20indexing) to propose potentially changing them to be identical to indices (starting from 0 and incrementing by 1). Would really appreciate your opinions there!"", 'comment_created': datetime.datetime(2022, 12, 2, 16, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}]","[{'commit_sha': '178d91f45f769a1306800bed9b36597e14131ce4', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c501dfa234c5aad45418f2905cdfec4b22fd8eb5', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9453dad1b407c6316614676fba8b032460e160e4', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2a9165c8d07d5c48522aac19e3c3999f4ed3002', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dea79bc8b53e5a60b0ff907dc1d83318bd55064', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc8841e056b28dc7d06351714ac43821900a0d5c', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a6324679258f8d877a1ef96df3da6cfbac8422a', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
986133941,polls: Add option for modal to create polls.,"Earlier the `/poll` slash command was the only way to create polls.
To increase user friendliness with a UI, a button to launch a modal
to create a poll and send it, has been added to the compose box.

The modal has a form which on submission frames a message using the
`/poll` syntax and the data input in the form, and sends it directly.

Fixes: #20304.

**Screenshots and screen captures:**

https://www.loom.com/share/c0528232229b450285c0214ea7813e4d

**Self-review checklist**


- [X] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [X] Explains differences from previous plans (e.g., issue description).
- [X] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [X] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [X] Each commit is a coherent idea.
- [X] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [X] Visual appearance of the changes.
- [X] Responsiveness and internationalization.
- [X] Strings and tooltips.
- [X] End-to-end functionality of buttons, interactions and flows.
- [X] Corner cases, error conditions, and easily imagined bugs.
",False,22370,https://api.github.com/repos/zulip/zulip/pulls/22370,https://github.com/zulip/zulip/pull/22370,closed,608,139,24,5,48,34,4,0,"[{'name': 'priority: high'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'integration review'}]",2022-07-04 08:04:29+00:00,2023-09-11 22:23:55+00:00,37549166.0,"434 days, 14:19:26","[{'comment_id': 914526086, 'comment_body': ""Typo: `dtl`. Let's just use `delete-button-stub`."", 'comment_created': datetime.datetime(2022, 7, 6, 7, 49, 57, tzinfo=datetime.timezone.utc), 'commenter': 'aero31aero', 'type': 'User'}, {'comment_id': 914534747, 'comment_body': 'This comment, and in general, the `display_flag` option could use reworking and some additional explanation.', 'comment_created': datetime.datetime(2022, 7, 6, 7, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'aero31aero', 'type': 'User'}, {'comment_id': 914536314, 'comment_body': 'This function looks a bit cryptic. Maybe a comment here would help? As a reviewer I have to go back to the DOM and check a lot of things to assert whether this code is correct.', 'comment_created': datetime.datetime(2022, 7, 6, 8, 0, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aero31aero', 'type': 'User'}, {'comment_id': 914537879, 'comment_body': 'Instead of calling this function, we could use the `create_option_row` and `delete_option_row` functions, sort of end-to-end testing the module.', 'comment_created': datetime.datetime(2022, 7, 6, 8, 2, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aero31aero', 'type': 'User'}, {'comment_id': 914541640, 'comment_body': 'Your existing test could do well by adding a few more mock poll options and then finally calling this function to assert its output.', 'comment_created': datetime.datetime(2022, 7, 6, 8, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aero31aero', 'type': 'User'}, {'comment_id': 922413803, 'comment_body': 'Maybe adding this change as a prep commit would make more sense? ', 'comment_created': datetime.datetime(2022, 7, 15, 18, 16, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}, {'comment_id': 922415357, 'comment_body': 'Maybe adding a line here that says something like, `This handles a case when the next empty input row is already added and user is updating the above row(s).`  might be more clear. ', 'comment_created': datetime.datetime(2022, 7, 15, 18, 18, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}, {'comment_id': 922417802, 'comment_body': 'Maybe a better name for this function would be `update_delete_btn_visibility`?', 'comment_created': datetime.datetime(2022, 7, 15, 18, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}, {'comment_id': 922425889, 'comment_body': 'Maybe adding test coverage for this can be done in separate PR once this PR gets merged.', 'comment_created': datetime.datetime(2022, 7, 15, 18, 30, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}, {'comment_id': 922674437, 'comment_body': ""That sounds like a good idea, I'll make this a prep commit, thanks!"", 'comment_created': datetime.datetime(2022, 7, 16, 12, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 922674546, 'comment_body': 'agree, will update the name, thanks!', 'comment_created': datetime.datetime(2022, 7, 16, 12, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 922674669, 'comment_body': ""Had a discussion and Tim said this didn't need full test coverage so this should be fine as is"", 'comment_created': datetime.datetime(2022, 7, 16, 12, 24, 27, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 922686817, 'comment_body': 'Not feasible due to limits and unsuitability of zjquery for this case, so current tests will have to do', 'comment_created': datetime.datetime(2022, 7, 16, 14, 37, 21, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 922686867, 'comment_body': 'Not feasible due to limits and unsuitability of zjquery for this case, so current tests will have to do', 'comment_created': datetime.datetime(2022, 7, 16, 14, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 965385378, 'comment_body': 'These strings (""Question"" / ""Options"" / ""Anyone ..."") all need to be tagged for translation. See\r\n\r\nhttps://zulip.readthedocs.io/en/latest/translating/internationalization.html\r\n', 'comment_created': datetime.datetime(2022, 9, 7, 23, 44, 17, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 965386326, 'comment_body': ""We don't use abbreviations in variable names; `no_of_option_row` => `option_row_count` would be clearer."", 'comment_created': datetime.datetime(2022, 9, 7, 23, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 965386961, 'comment_body': ""This logic feels confusing; could we instead just compute the number of rows we expect to be present, and then show/hide based on that? In other words, should we just add 1 to the count if `display_flag` is set (or something like that)?\r\n\r\nI'm also not sure why it's correct to do nothing if the current number of rows is 0 or 2."", 'comment_created': datetime.datetime(2022, 9, 7, 23, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 965387874, 'comment_body': ""What does the `+ i` do here? I'd expect our `fa-ellipsis-v` here to always be an `i` element...\r\n\r\nOh, is this to space two identical icons from each other? I think an `i + i` rule outside this block, with a comment, might be clearer."", 'comment_created': datetime.datetime(2022, 9, 7, 23, 50, 37, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 965388685, 'comment_body': 'Is the purpose of this filter to exclude the empty string? Do we need to trim these first, or will ` ` be here? ', 'comment_created': datetime.datetime(2022, 9, 7, 23, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 965389002, 'comment_body': ""One option is to define an anonymous function that does the `setTimeout` you need here, with a comment, if we decide changing the `post_render` semantics doesn't make sense."", 'comment_created': datetime.datetime(2022, 9, 7, 23, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 965403230, 'comment_body': ""Why is it correct to not clear the compose box after sending the poll?\r\n\r\nIs the idea that there may be some content in the compose box that's unrelated to the poll, and we're trying to not disturb that? \r\n\r\nI worry a bit that the compose box code path may make assumptions that we don't send messages not currently in the compose box, and a different refactor involving saving the current compose state to a draft and then restoring it might be better; not sure; can you start a #frontend thread to discuss this particular detail?\r\n\r\n"", 'comment_created': datetime.datetime(2022, 9, 8, 0, 31, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 979261727, 'comment_body': 'A simpler non-nested logic based on only the final expected row count is possible, but would do more work than necessary. The crux here is that only when the current row count is 1, we may need to change the show / hide status of the 1 row depending on if another will be added right after (`display_flag`). This is also the reason we only do something if the row count is 1, and not 0, or 2 or anything else. (Also, count can never really be 0, since this function is never called in that state)\r\n\r\nIn other words, considering the current number of rows and the display flag separately gives us more fine grained control which allows better performance. Combining the 2 may make for simpler logic but we may do more work than necessary (like showing all rows - which may already be in a show state - when the combined / expected count is over 1)\r\n\r\nFor better clarity, here\'s what the simpler but less performant code would look:\r\n```js\r\nexport function update_option_delete_button_visibility($container, another_row_will_be_added) {\r\n    const current_option_row_count = $container.find("".option-row"").length;\r\n    // Add 1 if another row will be added right after, else let it stay the same as current\r\n    const expected_final_row_count = current_option_row_count + another_row_will_be_added;\r\n\r\n    // When there will be only one option row, we hide its delete button\r\n    if(expected_final_row_count === 1) {\r\n        $container.find("".option-row .delete-option"").hide();\r\n    } else {\r\n        $container.find("".option-row .delete-option"").show();\r\n    }\r\n}\r\n```', 'comment_created': datetime.datetime(2022, 9, 24, 15, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 979263118, 'comment_body': ""Actually, this is to add space after only the second (right side) icon to space it from the option text field. I'll separate it in a new block with a comment!"", 'comment_created': datetime.datetime(2022, 9, 24, 15, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 979264457, 'comment_body': ""Oh, seems like I'd forgotten to trim this, partly since we do trim on the backend so the visible results aren't affected, but yes, the message we compose logically on the frontend did have empty spaces. Thanks for pointing this out, I'll trim the values here too!"", 'comment_created': datetime.datetime(2022, 9, 24, 15, 41, 7, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 979287556, 'comment_body': 'The simplebar issue has been resolved as explained in this [CZO thread](https://chat.zulip.org/#narrow/stream/49-development-help/topic/add.20poll.20modal.20acting.20buggy)', 'comment_created': datetime.datetime(2022, 9, 24, 18, 38, 32, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 979287792, 'comment_body': ""Yes that was the idea, as mentioned by @alya in the linked issue. I'll make a frontend thread regarding this soon.\r\nEdit: here's the [thread](https://chat.zulip.org/#narrow/stream/6-frontend/topic/empty.20compose.20box.20after.20sending.20poll.20through.20GUI)"", 'comment_created': datetime.datetime(2022, 9, 24, 18, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1015784221, 'comment_body': ""We don't expect there to be more than a few dozen rows even for very large polls, so I'm not sure I understand the performance concern? Is this algorithm somehow cubic in the number of rows?"", 'comment_created': datetime.datetime(2022, 11, 7, 18, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1037073270, 'comment_body': ""Hm yes, the performance concerns aren't relevant here then, it's only linear in the row count. I'll update the code to the simpler code proposed above.\r\nEdit: changed and pushed!"", 'comment_created': datetime.datetime(2022, 12, 1, 12, 53, 5, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1149522174, 'comment_body': 'This parameter might be better labeled as `from_compose_box = true` -- since most of the logic will be about whether to access values from the compose box or not?', 'comment_created': datetime.datetime(2023, 3, 27, 16, 42, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1149529365, 'comment_body': ""Can you add some comment documentation here on how this differs from the `user_pill` module? It's not clear to me what the distinction is, and I'm also curious whether it'd make sense to make the special behavior here just a parameter that can be passed when initializing a user pill vs. whether it's appropriate to do a separate class."", 'comment_created': datetime.datetime(2023, 3, 27, 16, 45, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1149531863, 'comment_body': '(Also we may want a name like `direct_message_recipient_pill` for the module and `DirectMessageRecipientPill` for this class given the rename of ""private messages"" and our policy of not using abbreviations)', 'comment_created': datetime.datetime(2023, 3, 27, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1149534555, 'comment_body': 'Finally, it might make sense to make this commit earlier in the branch -- in theory, this is a refactor, and it might be preferable to integrate it before the modal is introduced in what is currently the previous commit.', 'comment_created': datetime.datetime(2023, 3, 27, 16, 47, 11, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1149536571, 'comment_body': ""I think after seeing how this is used in the next commits, probably it's better to stick with this current name."", 'comment_created': datetime.datetime(2023, 3, 27, 16, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1149575303, 'comment_body': ""> Can you add some comment documentation here on how this differs from the user_pill module?\r\n\r\nThis new class just uses `user_pill` as a utils module -- it's not something we can initialise. `PmPill` is mainly a wrapper around `input_pill`, an instance of which it passes to `user_pill` functions for processing for most of the `PmPill` functions... Does that answer your question? (I'm not sure I understood it correctly 😅)"", 'comment_created': datetime.datetime(2023, 3, 27, 17, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}]","[{'commit_sha': '2063f70bca985bb9236ee0a7c5cf993a929ee25e', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66cd6875eea964496fdbd174724ca87e38067475', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e506c7a7d05e933242c892656ab8be761716d25', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a69f28b43a0b65c65a5a8cced2dceda9890edf65', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3894ae9f8167ad08bda344321e2984b2ec2305e', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
1004547224,todo_widget: Improve its functionality and customizability,"Earlier the tasks in a list were sorted alphabetically and on marking
one complete, it was pushed under any incomplete tasks. This behaviour
can be unexpected and confusing, so now each task is appended to the
bottom of the list on being added, and no shifting takes place on
marking it completed.

Message readers can now reorder todo tasks in the message view by
dragging and dropping them. The new order is persisted.

Users can now name task lists by providing the task list title in the
`/todo` command on the same line. Example: `/todo School Work`. If no
title is provided by the user, ""Task List Title"" is used as default.

The author of a task list can later edit / update the task list title
in the todo widget, just like the question in the poll widget.

Fixes part of #20213.

**Screenshots and screen captures:**

https://www.loom.com/share/74415f4ef43043fcadeb00b001f4f323

![image](https://user-images.githubusercontent.com/68962290/181759913-0b8729b4-0199-45a8-ba1c-29a808b34125.png)

![image](https://user-images.githubusercontent.com/68962290/181759082-f8bab0c2-e0c5-4a36-a624-b4dbd237dfa6.png)

![image](https://user-images.githubusercontent.com/68962290/181759265-661f9c46-2511-4d69-ad85-22c4052f1009.png)

![image](https://user-images.githubusercontent.com/68962290/181759380-225dce5d-924c-4d68-b288-4d1a639664df.png)


**Self-review checklist**

- [X] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [X] Explains differences from previous plans (e.g., issue description).
- [X] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [X] Each commit is a coherent idea.
- [X] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [X] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [X] End-to-end functionality of buttons, interactions and flows.
- [X] Corner cases, error conditions, and easily imagined bugs.
",False,22551,https://api.github.com/repos/zulip/zulip/pulls/22551,https://github.com/zulip/zulip/pull/22551,closed,565,73,9,7,19,6,2,1,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2022-07-21 18:36:26+00:00,2023-02-07 08:14:41+00:00,17329095.0,"200 days, 13:38:15","[{'comment_id': 928278956, 'comment_body': ""Everything looks and works alright! \r\n\r\nI just didn't understand why are we multiplying `old_pos` and `new_pos` with 2."", 'comment_created': datetime.datetime(2022, 7, 24, 15, 59, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}, {'comment_id': 928296729, 'comment_body': 'the way `idx` is assigned initially makes it so that it starts at 2 for a task list and increments by 2 for each task, so for three tasks their `idx` values would be 2, 4, and 6, while the actual indices in the tasks array would of course be 0, 1 and 2. Hence the addition by 1 and doubling to convert from array index to `idx` (have added this as a comment in the code!)', 'comment_created': datetime.datetime(2022, 7, 24, 18, 34, 20, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1014862556, 'comment_body': 'This adds unnecessary complexity to the code. Can we keep the `idx` values and indices same?', 'comment_created': datetime.datetime(2022, 11, 6, 17, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1014862687, 'comment_body': 'This adds unnecessary complexity to the code. Can we keep the idx values and indices same?', 'comment_created': datetime.datetime(2022, 11, 6, 17, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1015023245, 'comment_body': 'Needs a comment of what it is used for.', 'comment_created': datetime.datetime(2022, 11, 7, 5, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1038340883, 'comment_body': ""Since the idx values being the way they are, seem to have a lot of history and complexity, I've created [this thread](https://chat.zulip.org/#narrow/stream/49-development-help/topic/simplify.20todos.20indexing) to propose potentially changing them to be identical to indices (starting from 0 and incrementing by 1). Would really appreciate your opinions there!"", 'comment_created': datetime.datetime(2022, 12, 2, 16, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}]","[{'commit_sha': '178d91f45f769a1306800bed9b36597e14131ce4', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c501dfa234c5aad45418f2905cdfec4b22fd8eb5', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9453dad1b407c6316614676fba8b032460e160e4', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2a9165c8d07d5c48522aac19e3c3999f4ed3002', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dea79bc8b53e5a60b0ff907dc1d83318bd55064', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc8841e056b28dc7d06351714ac43821900a0d5c', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a6324679258f8d877a1ef96df3da6cfbac8422a', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
1045096591,widgets: Make the todo and poll widgets look consistent / similar.,"Earlier the todo and poll widgets' UI differed a lot, especially in the
font size and weight, and the color and shape of the checkbox and vote
count box.

Now the font weights and sizes are consistent in both the widgets and
the todo widget's checkboxes and poll widget's vote count boxes are
styled similarly.

This is the rebased and cleaned version of #21006, and is visually the
same. (The commit history has been tidied and unnecessary naming
changes have been discarded, so we only have the minimal necessary
CSS only changes.)

PR #22551 also makes some related UI (though mostly functional) changes.

Fixes: #20283.

**Screenshots and screen captures:**

![image](https://user-images.githubusercontent.com/68962290/188196478-bb01cb46-6bb7-44f7-8411-f03b022d28c8.png)

![image](https://user-images.githubusercontent.com/68962290/188196544-65a4a33e-f9e3-4eac-b400-cf212a45291c.png)

GIFs can be seen in the original PR (#21006)

**Self-review checklist**

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",True,22852,https://api.github.com/repos/zulip/zulip/pulls/22852,https://github.com/zulip/zulip/pull/22852,closed,110,17,3,2,17,11,3,0,"[{'name': 'size: XL'}, {'name': 'area: message feed (display)'}, {'name': 'integration review'}]",2022-09-02 16:25:37+00:00,2023-01-30 19:51:34+00:00,12972357.0,"150 days, 3:25:57","[{'comment_id': 1039235975, 'comment_body': ""The duplicated `opacity` addition doesn't seem useful."", 'comment_created': datetime.datetime(2022, 12, 5, 7, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1039237718, 'comment_body': ""I see that you have used `pt` instead `px` in a lot of places, I am not sure what is the motivation for using it but let's keep them to limited `px` or `em` units."", 'comment_created': datetime.datetime(2022, 12, 5, 7, 40, 19, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1039241444, 'comment_body': 'How did you come up with these px values?', 'comment_created': datetime.datetime(2022, 12, 5, 7, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1039791484, 'comment_body': ""Most of the CSS here is directly ported from the original PR, to ensure this PR is visually identical, but I'll try to change the units to keep them consistent"", 'comment_created': datetime.datetime(2022, 12, 5, 16, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1039799137, 'comment_body': 'These again are from the original PR and they just happen to look the best I think (like to keep it square)', 'comment_created': datetime.datetime(2022, 12, 5, 16, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1039800375, 'comment_body': 'Some of the font sizes for the poll widget in the current main too are in `pt` though... Do I change those too?', 'comment_created': datetime.datetime(2022, 12, 5, 16, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1040361939, 'comment_body': 'Yes please!', 'comment_created': datetime.datetime(2022, 12, 6, 2, 40, 38, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1046464265, 'comment_body': '@amanagr Have replaced all instances of `pt` in widgets.css with their closest `px` equivalents. The UI is almost pixel wise identical as before... This should pass review now!', 'comment_created': datetime.datetime(2022, 12, 12, 22, 42, 37, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 1063917922, 'comment_body': ""This `not` block is really messy, and we should figure out a way to refactor it (probably involving these buttons not having the `new-style .button` class applied to them), but that's an existing mess and probably best left for future work."", 'comment_created': datetime.datetime(2023, 1, 7, 0, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1063918168, 'comment_body': ""Can we avoid this by just setting the `outline` property specifically for the new buttons? I don't want to add a `not` here."", 'comment_created': datetime.datetime(2023, 1, 7, 0, 50, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1064168330, 'comment_body': 'Also removed another similar `not` block in `zulip.css` which defined outline color', 'comment_created': datetime.datetime(2023, 1, 8, 16, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}]","[{'commit_sha': 'e573c2d78e8bc85334c15dcde569f4bee424e36c', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8998214a7b0ff9e4e90821dc234dc7fc226b0627', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
836899274,message_feed_display: Change /todo and /poll widget styles to make them consistent,"This PR solves #20283 

**Testing plan:** 
- ./tools/lint
- ./tools/test

**GIFs or screenshots:**
## /todo widget
### Light theme:
![147897835-b39e4afa-b180-4048-acc5-7ec5a694b06b](https://user-images.githubusercontent.com/72722967/151926134-c6dfd8b5-fe7b-4909-b123-65636a046bc1.gif)
### Dark theme:
![147897830-fab1af46-2143-4730-8325-1d79e10062fe](https://user-images.githubusercontent.com/72722967/151926192-abe4121c-9105-43c0-b5b6-6045c480ef2c.gif)

## /poll widget
### Light theme:
![147897834-f66b7337-a72a-4c3b-9001-3a749445184e](https://user-images.githubusercontent.com/72722967/151926242-0059ce5e-322d-46d3-875a-59df1f54e3c6.gif)
### Dark theme:
![147897831-09847900-a4d0-43fa-b309-04cdcd17e642](https://user-images.githubusercontent.com/72722967/151926271-ec97c9fe-da68-437f-8e7c-ff0e343823c4.gif)


",False,21006,https://api.github.com/repos/zulip/zulip/pulls/21006,https://github.com/zulip/zulip/pull/21006,closed,143,23,11,12,15,3,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2022-02-01 07:06:03+00:00,2022-11-12 12:14:28+00:00,24556105.0,"284 days, 5:08:25","[{'comment_id': 797081003, 'comment_body': ""It isn't valid HTML to use IDs for elements that appear more than once in the DOM.  A CSS class is appropriate, but as you see we already have one -- so you should be able to just scope your CSS properly as e.g. `.todo_widget .checkbox` without adding this.  "", 'comment_created': datetime.datetime(2022, 2, 1, 22, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 797255427, 'comment_body': 'So should I create a separate CSS class `.checkbox` under .todo_widget ?\r\nEdit: I have created a separate CSS class .checkbox under .todo_widget to override the pre-existing rules', 'comment_created': datetime.datetime(2022, 2, 2, 4, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Arch0125', 'type': 'User'}, {'comment_id': 858122119, 'comment_body': 'That sound good -- and then we should remove the change adding this ID.', 'comment_created': datetime.datetime(2022, 4, 26, 0, 24, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '809fe741cb376bd255a4529ff5bf9cbf8a4f68ee', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '175425c14d4acf21147e15e502d679d2ff1cb1b8', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35d96ace7d82eafdf4dea03abd77e5438740932d', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c541d360b534ff5278c7541c5151c5146f88e09', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e8a01cc9de4cf580a6d6223995d5f93c9bdfd77', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f27d398556e0f4842ab904ea0af6d10997c93a', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1854bb0c292964b988c13dadc9bc3a024ed27d0b', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81b6e0e5086488eb253fe7ee9cdb509dd32b6d85', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0f2849a1cc5ac0b321ed29dd67ef75ff4c0fd53', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c026ae3f823b807b7a902a6df25cd67a9425c59', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2c4db91b3003fcc8381c2fbd0b96902ebd62c98', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '157ebbd8a12161ebedf0aadf8ec51d78212a0bc2', 'committer_username': 'Arch0125', 'committer_name': 'Archisman Das', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 12, 4, 27, 48, tzinfo=datetime.timezone.utc)}]",Archisman Das,72722967,,User,,190,,60,126
989984890,documentation (user): Document /poll in ? help widget.,"documentation (user): Document `/poll` in `?` help widget.

To make it easier for users to make polls, their syntax is documented
using an example along with its (non dynamic) rendered version.

Fixes: #18588.

**Screenshots and screen captures:**
![image](https://user-images.githubusercontent.com/68962290/177752157-76af67e0-ebd0-4e84-9fbd-a8fa40848546.png)
![image](https://user-images.githubusercontent.com/68962290/177824018-fee1d34e-a202-4d0c-939c-07fc33bbf5b6.png)



**Self-review checklist**

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
",True,22409,https://api.github.com/repos/zulip/zulip/pulls/22409,https://github.com/zulip/zulip/pull/22409,closed,37,1,2,2,14,0,4,0,"[{'name': 'area: markdown'}, {'name': 'area: documentation (user)'}, {'name': 'priority: high'}, {'name': 'size: M'}]",2022-07-07 10:25:04+00:00,2022-08-16 20:55:56+00:00,3493852.0,"40 days, 10:30:52",[],"[{'commit_sha': '75d84e20c37b5c1d7a71baecc915510951001597', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85a6d8c382ff8cb796d915203c0eb68add0f2001', 'committer_username': 'N-Shar-ma', 'committer_name': 'Nehal Sharma', 'committer_email': None, 'commit_date': datetime.datetime(2020, 7, 29, 15, 52, 49, tzinfo=datetime.timezone.utc)}]",Nehal Sharma,68962290,,User,,38,,2,53
976771899,message-editing: Immediately show menu.,"Fixes #19196

This immediately shows the menu for which messages to move when
the user can not edit the content of the message.
I also changed the visibility so that the menu stays visible once it was shown once, to avoid it getting shown and removed all the time, which would confuse the user.

How it looks when the message is not editable:
![chrome-capture-2022-5-23](https://user-images.githubusercontent.com/74348920/175246345-a3484b6e-fd28-43c2-97e1-e9f0f13ed50f.gif)

How it looks when the message is editable:
![chrome-capture-2022-5-23 (1)](https://user-images.githubusercontent.com/74348920/175246414-634e09b5-75aa-43d8-8648-646f3df6ae8a.gif)

",True,22289,https://api.github.com/repos/zulip/zulip/pulls/22289,https://github.com/zulip/zulip/pull/22289,closed,17,2,1,1,9,5,5,0,"[{'name': 'area: message-editing'}, {'name': 'priority: high'}, {'name': 'size: S'}, {'name': 'release goal'}, {'name': 'integration review'}]",2022-06-23 07:54:42+00:00,2022-07-15 22:32:07+00:00,1953445.0,"22 days, 14:37:25","[{'comment_id': 920498021, 'comment_body': ""Can you explain this line? It seems to me that in situations where both the content and the topic are editable, that we'd incorrectly not display the menu."", 'comment_created': datetime.datetime(2022, 7, 13, 20, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 921186695, 'comment_body': '@timabbott you are right, if the content is editable, the menu is not immediately displayed. But this is the expected behavior, since the main goal of editing a message, when the content is still editable, is expected to be editing the content. And because of this it would be confusing to immediately show the menu then, as the user might not know what this refers to.\r\n(See also my previous messages with @alya or the issue description)', 'comment_created': datetime.datetime(2022, 7, 14, 13, 57, 5, tzinfo=datetime.timezone.utc), 'commenter': 'juliaBichler01', 'type': 'User'}, {'comment_id': 921820153, 'comment_body': 'Could you please add a code comment before this line explaining it? Thanks!', 'comment_created': datetime.datetime(2022, 7, 15, 5, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'alya', 'type': 'User'}, {'comment_id': 922104297, 'comment_body': '@alya alright, added the comment', 'comment_created': datetime.datetime(2022, 7, 15, 12, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'juliaBichler01', 'type': 'User'}, {'comment_id': 922556184, 'comment_body': 'So I\'m glad we spent some extra attention on this line, because it\'s wrong in the case that the user can\'t edit the message at all (aka ""View source""):\r\n\r\n![image](https://user-images.githubusercontent.com/2746074/179319205-5d964d85-033d-4fc3-9f53-6769f5e0150f.png)\r\n\r\nI\'ll fix this before merging, since I think the fix is straightforward.', 'comment_created': datetime.datetime(2022, 7, 15, 22, 32, 10, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '2fcd8d5e2115c9d27c60531bb71546f721ada67f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Julia Bichler,74348920,,User,,3,,0,3
988197749,message_scroll: Hide scroll to bottom button with using keypress.,"<!-- Describe your pull request here.-->

Fixes: <!-- Issue link, or clear description.--> https://github.com/zulip/zulip/issues/21844
CZO: https://chat.zulip.org/#narrow/stream/49-development-help/topic/Scroll.20to.20bottom.20button.20flashes.20repeatedly.20after.20scrolling.20.E2.86.91 

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**
Updated Animation from jQuery to CSS,
https://user-images.githubusercontent.com/63820270/177474318-eb43c15e-265f-408d-b813-418c5015fd73.mov



**Self-review checklist**

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [ ] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [ ] Visual appearance of the changes.
- [ ] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
",True,22393,https://api.github.com/repos/zulip/zulip/pulls/22393,https://github.com/zulip/zulip/pull/22393,closed,37,9,5,2,4,4,5,0,"[{'name': 'bug'}, {'name': 'priority: high'}, {'name': 'size: M'}, {'name': 'area: message feed (display)'}, {'name': 'integration review'}]",2022-07-06 05:27:31+00:00,2022-07-13 20:59:10+00:00,660699.0,"7 days, 15:31:39","[{'comment_id': 914454971, 'comment_body': 'Why would you mess with `z-index` when you can animate `visibility` directly?\r\n\r\n```css\r\nvisibility: hidden;\r\nopacity: 0;\r\ntransition: visibility 500ms, opacity 500ms ease-in-out;\r\n\r\n&.show {\r\n    visibility: visible;\r\n    opacity: 1;\r\n}\r\n```', 'comment_created': datetime.datetime(2022, 7, 6, 6, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 915089220, 'comment_body': 'This is a much better approach. Thanks, Anders!\r\n', 'comment_created': datetime.datetime(2022, 7, 6, 17, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}, {'comment_id': 915185307, 'comment_body': 'You mean `1`, not `100`.', 'comment_created': datetime.datetime(2022, 7, 6, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 916453388, 'comment_body': 'Yeah, Sorry!\r\nFixed!', 'comment_created': datetime.datetime(2022, 7, 8, 4, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Riken-Shah', 'type': 'User'}]","[{'commit_sha': '3ba89e777939f33b6f8494e48d4abfd9d7e9c4eb', 'committer_username': 'Riken-Shah', 'committer_name': 'Riken Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 16, 21, 34, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fdd93cf32ca558fafeeeddb2db6bd9b0cb6723c', 'committer_username': 'Riken-Shah', 'committer_name': 'Riken Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 16, 21, 34, 43, tzinfo=datetime.timezone.utc)}]",Riken Shah,63820270,,User,,23,,36,41
1006483358,message-edit: Do not show topic when stream and topic are not editable.,"<!-- Describe your pull request here.-->

Fixes: #22566 

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**

**Self-review checklist**

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",False,22579,https://api.github.com/repos/zulip/zulip/pulls/22579,https://github.com/zulip/zulip/pull/22579,closed,16,8,2,2,11,6,3,0,"[{'name': 'size: S'}, {'name': 'has conflicts'}, {'name': 'integration review'}]",2022-07-24 07:08:27+00:00,2023-01-06 02:31:07+00:00,14325760.0,"165 days, 19:22:40","[{'comment_id': 933860772, 'comment_body': ""Instead of using inline styles to hide the topic input, I think it'll be better to only include this input if the `should_topic_be_visible` conditional is true, using the handlebars if conditional syntax around the input. Maybe  similar refactoring would be nice for the few lines above this too!"", 'comment_created': datetime.datetime(2022, 7, 30, 17, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 933980413, 'comment_body': 'Hmm, I too had a thought of this, I added a commit refactoring this method above of the one which fixes the issue.\r\nThanks!', 'comment_created': datetime.datetime(2022, 7, 31, 12, 36, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jai2201', 'type': 'User'}, {'comment_id': 949697552, 'comment_body': ""Just a note -- this sort of change isn't always an improvement, in that it makes live-update if the user's permissions change more difficult to support (where one could just show/hide the elements). \r\n\r\nI would check if we have existing such live-update logic that this change is breaking; it seems like the kind of thing we might have done."", 'comment_created': datetime.datetime(2022, 8, 19, 0, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 956717391, 'comment_body': '@timabbott , I confirmed it on local that we do not live-update this message-edit form on change of permission;\r\n\r\nwe need to refresh the page or else login again to see the edit-form with updated permissions;', 'comment_created': datetime.datetime(2022, 8, 28, 12, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jai2201', 'type': 'User'}, {'comment_id': 956717476, 'comment_body': 'So I think it should be fine to go ahead with this change for now and can consider it as an improvement.\r\n', 'comment_created': datetime.datetime(2022, 8, 28, 12, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jai2201', 'type': 'User'}, {'comment_id': 981615852, 'comment_body': ""Looking further, I'm pretty sure this change is confusing at best as written. In `message_edit.js`, we call `stream_bar.decorate(message.stream, $stream_header_colorblock, false);`, which will try to set styles for those elements.\r\n\r\nSo I'd prefer you rework this to preserve the model that those elements are in the DOM but not visible when we want them that way; it's better for live-update and will be easier to review, since it doesn't require analyzing the impact of that change."", 'comment_created': datetime.datetime(2022, 9, 27, 19, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'd6d5026b9ce48ac75b2c98d80751a2b25dbcea31', 'committer_username': 'jai2201', 'committer_name': 'Jai soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 24, 13, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2370351b55cd3455038634bed7a965fba1cdc99', 'committer_username': 'jai2201', 'committer_name': 'Jai soni', 'committer_email': None, 'commit_date': datetime.datetime(2020, 12, 24, 13, 45, 46, tzinfo=datetime.timezone.utc)}]",Jai soni,76561593,,User,,20,,17,15
1006487339,message-edit: Make uneditable topic field unclickable.,"Currently when a user can't edit the topic of the message,
the edit/view source message view correctly shows a greyed
out topic field. However, this field incorrectly has a
click behavior which is fixed in this commit.

Fixes #22565.

<!-- Describe your pull request here.-->

Fixes: <!-- Issue link, or clear description.-->

<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**

**Self-review checklist**

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [x] Explains differences from previous plans (e.g., issue description).
- [x] Highlights technical choices and bugs encountered.
- [x] Calls out remaining decisions and concerns.
- [x] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [x] Each commit is a coherent idea.
- [x] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [x] Strings and tooltips.
- [x] End-to-end functionality of buttons, interactions and flows.
- [x] Corner cases, error conditions, and easily imagined bugs.
",True,22580,https://api.github.com/repos/zulip/zulip/pulls/22580,https://github.com/zulip/zulip/pull/22580,closed,0,0,0,0,9,3,3,0,"[{'name': 'bug'}, {'name': 'area: message-editing'}, {'name': 'size: S'}]",2022-07-24 07:37:09+00:00,2022-08-21 05:34:35+00:00,2411846.0,"27 days, 21:57:26","[{'comment_id': 933862800, 'comment_body': 'This line is no longer needed now, so can simply be replaced by the new one', 'comment_created': datetime.datetime(2022, 7, 30, 17, 54, 35, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 933862845, 'comment_body': 'This line can be removed too!', 'comment_created': datetime.datetime(2022, 7, 30, 17, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'N-Shar-ma', 'type': 'User'}, {'comment_id': 933981167, 'comment_body': 'Oops, sorry for missing on this, Removed. Thanks.', 'comment_created': datetime.datetime(2022, 7, 31, 12, 41, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jai2201', 'type': 'User'}]",[],Jai soni,76561593,,User,,20,,17,15
1046833589, Stream privacy icon in typeaheads,"<!-- Describe your pull request here.-->
It adds stream privacy icons in all the places except `Message compose addressee typeahead.` and `Adding streams in SETTINGS / DEFAULT STREAMS.` which are blocked by other PRs.

- [x] Move message typeahead.
-  [x] Move topic (via left sidebar menu) typeahead.
- [x] New stream notifications and New user notifications in SETTINGS / ORGANIZATION SETTINGS. Note that the decorator for the selected stream also needs to be modified to indicate the stream privacy setting, rather than always being shown as a #.
- [x] Stream reference compose box typeahead (i.e. #... typeahead).
- [x]  Top search bar auto-complete




Fixes: <!-- Issue link, or clear description.--> #22355
<!-- If the PR makes UI changes, always include one or more still screenshots to demonstrate your changes. If it seems helpful, add a screen capture of the new functionality as well.

Tooling tips: https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
-->

**Screenshots and screen captures:**
*Move message*
![Screenshot 2022-09-24 at 1 24 57 AM](https://user-images.githubusercontent.com/63820270/192047048-fbc0b226-1aa0-43ad-9527-042925113732.png)
![Screenshot 2022-10-08 at 3 54 35 PM](https://user-images.githubusercontent.com/63820270/194703120-a67abbed-264f-41cc-a138-b3320ce31c6a.png)


*Move Topic*
![Screenshot 2022-09-24 at 1 25 15 AM](https://user-images.githubusercontent.com/63820270/192047162-9d315323-f53d-4b6f-b540-8f704eed1128.png)
![Screenshot 2022-10-08 at 3 54 43 PM](https://user-images.githubusercontent.com/63820270/194703115-6fe8361d-8caa-406d-8d07-8cf3169aadb2.png)


*Settings ORG*
![settings_org_active_stream](https://user-images.githubusercontent.com/63820270/188557713-8865c1a3-7483-4f3d-92de-e254acdb1cfb.png)
![Screenshot 2022-09-24 at 1 28 53 AM](https://user-images.githubusercontent.com/63820270/192047591-79f70ad2-5d0d-4129-8894-c6b04ed0e70f.png)


*Search*
![Screenshot 2022-09-06 at 9 59 45 PM](https://user-images.githubusercontent.com/63820270/188689011-67412859-1b95-49dd-ab8f-35d3c0fb9993.png)



*Stream reference compose box typeahead*
![Screenshot 2022-09-06 at 9 59 34 PM](https://user-images.githubusercontent.com/63820270/188689092-8daddfc6-1fd5-4560-a8da-c92f71e57e88.png)



**Self-review checklist**

<!-- Prior to submitting a PR, follow our step-by-step guide to review your own code:
https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code -->

<!-- Once you create the PR, check off all the steps below that you have completed.
If any of these steps are not relevant or you have not completed, leave them unchecked.-->

- [x] [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability
      (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.

- [ ] Explains differences from previous plans (e.g., issue description).
- [ ] Highlights technical choices and bugs encountered.
- [ ] Calls out remaining decisions and concerns.
- [ ] Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

- [ ] Each commit is a coherent idea.
- [ ] Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

- [x] Visual appearance of the changes.
- [x] Responsiveness and internationalization.
- [ ] Strings and tooltips.
- [ ] End-to-end functionality of buttons, interactions and flows.
- [ ] Corner cases, error conditions, and easily imagined bugs.
",False,22864,https://api.github.com/repos/zulip/zulip/pulls/22864,https://github.com/zulip/zulip/pull/22864,closed,642,99,23,4,27,0,3,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'chat.zulip.org review'}]",2022-09-05 20:23:16+00:00,2023-04-18 16:44:33+00:00,19426877.0,"224 days, 20:21:17",[],"[{'commit_sha': '107ec987503bc05d425acdcb997c3e140d32dcdb', 'committer_username': 'Riken-Shah', 'committer_name': 'Riken Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 16, 21, 34, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b42f7996f093bda189af90192d0c5e5677a19d0', 'committer_username': 'Riken-Shah', 'committer_name': 'Riken Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 16, 21, 34, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35dc3ba613cf1910ea2e5ced8d75eaf5fa2c4145', 'committer_username': 'Riken-Shah', 'committer_name': 'Riken Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 16, 21, 34, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '776a1613db6e714215b93e5098ebdd9924121f83', 'committer_username': 'Riken-Shah', 'committer_name': 'Riken Shah', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 16, 21, 34, 43, tzinfo=datetime.timezone.utc)}]",Riken Shah,63820270,,User,,23,,36,41

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43160685,zulip,zulip/zulip,Python,7618,21016,375,1134,60300,2465,28,797,"[{'id': 1963031965, 'number': 30815, 'closed': datetime.datetime(2024, 7, 10, 22, 13, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 10, 19, 2, 53, tzinfo=datetime.timezone.utc), 'time_taken': 11415.0, 'time_delta': '3:10:15', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 1956178744, 'number': 30754, 'closed': datetime.datetime(2024, 7, 9, 20, 38, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 6, 21, 56, 36, tzinfo=datetime.timezone.utc), 'time_taken': 254528.0, 'time_delta': '2 days, 22:42:08', 'additions': 119, 'deletions': 44, 'state': 'closed'}, {'id': 1952377400, 'number': 30720, 'closed': datetime.datetime(2024, 7, 5, 21, 44, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 3, 20, 50, 3, tzinfo=datetime.timezone.utc), 'time_taken': 176050.0, 'time_delta': '2 days, 0:54:10', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1951831608, 'number': 30709, 'closed': datetime.datetime(2024, 7, 4, 1, 54, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 3, 14, 51, 11, tzinfo=datetime.timezone.utc), 'time_taken': 39784.0, 'time_delta': '11:03:04', 'additions': 12, 'deletions': 27, 'state': 'closed'}, {'id': 1945075054, 'number': 30637, 'closed': datetime.datetime(2024, 6, 28, 22, 13, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 28, 21, 40, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1976.0, 'time_delta': '0:32:56', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1945026198, 'number': 30636, 'closed': datetime.datetime(2024, 6, 28, 22, 14, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 28, 20, 57, 26, tzinfo=datetime.timezone.utc), 'time_taken': 4595.0, 'time_delta': '1:16:35', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 1938950339, 'number': 30585, 'closed': datetime.datetime(2024, 6, 26, 5, 52, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 26, 2, 51, 59, tzinfo=datetime.timezone.utc), 'time_taken': 10830.0, 'time_delta': '3:00:30', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1936120901, 'number': 30558, 'closed': datetime.datetime(2024, 7, 5, 22, 21, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 24, 18, 47, 49, tzinfo=datetime.timezone.utc), 'time_taken': 963225.0, 'time_delta': '11 days, 3:33:45', 'additions': 16, 'deletions': 4, 'state': 'closed'}, {'id': 1929238097, 'number': 30494, 'closed': datetime.datetime(2024, 6, 20, 16, 45, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 19, 17, 54, 34, tzinfo=datetime.timezone.utc), 'time_taken': 82244.0, 'time_delta': '22:50:44', 'additions': 20, 'deletions': 3, 'state': 'closed'}, {'id': 1921036020, 'number': 30434, 'closed': datetime.datetime(2024, 6, 14, 17, 15, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 14, 16, 50, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1492.0, 'time_delta': '0:24:52', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1919563717, 'number': 30424, 'closed': datetime.datetime(2024, 6, 14, 17, 18, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 13, 21, 29, 58, tzinfo=datetime.timezone.utc), 'time_taken': 71290.0, 'time_delta': '19:48:10', 'additions': 30, 'deletions': 35, 'state': 'closed'}, {'id': 1916933855, 'number': 30407, 'closed': datetime.datetime(2024, 6, 18, 22, 51, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 12, 16, 10, 53, tzinfo=datetime.timezone.utc), 'time_taken': 542458.0, 'time_delta': '6 days, 6:40:58', 'additions': 48, 'deletions': 69, 'state': 'closed'}, {'id': 1915420945, 'number': 30396, 'closed': datetime.datetime(2024, 6, 26, 23, 36, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 11, 23, 30, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1296364.0, 'time_delta': '15 days, 0:06:04', 'additions': 109, 'deletions': 36, 'state': 'closed'}, {'id': 1906688725, 'number': 30331, 'closed': datetime.datetime(2024, 6, 7, 20, 1, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 6, 8, 15, 27, tzinfo=datetime.timezone.utc), 'time_taken': 128771.0, 'time_delta': '1 day, 11:46:11', 'additions': 7, 'deletions': 6, 'state': 'closed'}, {'id': 1899932205, 'number': 30282, 'closed': datetime.datetime(2024, 6, 7, 0, 3, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 3, 4, 4, 57, tzinfo=datetime.timezone.utc), 'time_taken': 331127.0, 'time_delta': '3 days, 19:58:47', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 1883440563, 'number': 30173, 'closed': datetime.datetime(2024, 5, 23, 0, 16, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 22, 22, 35, 8, tzinfo=datetime.timezone.utc), 'time_taken': 6106.0, 'time_delta': '1:41:46', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1870034049, 'number': 30096, 'closed': datetime.datetime(2024, 5, 15, 17, 44, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 14, 23, 58, 47, tzinfo=datetime.timezone.utc), 'time_taken': 63933.0, 'time_delta': '17:45:33', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1862427520, 'number': 30034, 'closed': datetime.datetime(2024, 5, 9, 17, 48, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 9, 16, 23, 20, tzinfo=datetime.timezone.utc), 'time_taken': 5082.0, 'time_delta': '1:24:42', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1861350274, 'number': 30027, 'closed': datetime.datetime(2024, 6, 5, 16, 26, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 9, 3, 33, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2379130.0, 'time_delta': '27 days, 12:52:10', 'additions': 42, 'deletions': 29, 'state': 'closed'}, {'id': 1860444374, 'number': 30009, 'closed': datetime.datetime(2024, 5, 8, 23, 47, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 8, 14, 46, 46, tzinfo=datetime.timezone.utc), 'time_taken': 32421.0, 'time_delta': '9:00:21', 'additions': 37, 'deletions': 23, 'state': 'closed'}, {'id': 1859079310, 'number': 29998, 'closed': datetime.datetime(2024, 5, 7, 23, 11, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 7, 21, 13, 31, tzinfo=datetime.timezone.utc), 'time_taken': 7084.0, 'time_delta': '1:58:04', 'additions': 24, 'deletions': 4, 'state': 'closed'}, {'id': 1858811845, 'number': 29990, 'closed': datetime.datetime(2024, 5, 7, 19, 59, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 7, 18, 11, tzinfo=datetime.timezone.utc), 'time_taken': 6527.0, 'time_delta': '1:48:47', 'additions': 14, 'deletions': 53, 'state': 'closed'}, {'id': 1854700838, 'number': 29953, 'closed': datetime.datetime(2024, 6, 22, 0, 29, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 4, 17, 51, 21, tzinfo=datetime.timezone.utc), 'time_taken': 4171115.0, 'time_delta': '48 days, 6:38:35', 'additions': 105, 'deletions': 72, 'state': 'closed'}, {'id': 1849539789, 'number': 29911, 'closed': datetime.datetime(2024, 5, 3, 16, 20, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 1, 10, 51, 15, tzinfo=datetime.timezone.utc), 'time_taken': 192578.0, 'time_delta': '2 days, 5:29:38', 'additions': 18, 'deletions': 14, 'state': 'closed'}, {'id': 1848445127, 'number': 29901, 'closed': datetime.datetime(2024, 4, 30, 19, 36, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 30, 17, 24, 9, tzinfo=datetime.timezone.utc), 'time_taken': 7953.0, 'time_delta': '2:12:33', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1838214967, 'number': 29830, 'closed': datetime.datetime(2024, 4, 30, 21, 16, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 24, 7, 41, tzinfo=datetime.timezone.utc), 'time_taken': 567310.0, 'time_delta': '6 days, 13:35:10', 'additions': 25, 'deletions': 49, 'state': 'closed'}, {'id': 1824679217, 'number': 29748, 'closed': datetime.datetime(2024, 4, 16, 23, 55, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 16, 6, 36, 1, tzinfo=datetime.timezone.utc), 'time_taken': 62381.0, 'time_delta': '17:19:41', 'additions': 61, 'deletions': 8, 'state': 'closed'}, {'id': 1820797551, 'number': 29716, 'closed': datetime.datetime(2024, 4, 13, 0, 40, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 12, 20, 6, 55, tzinfo=datetime.timezone.utc), 'time_taken': 16409.0, 'time_delta': '4:33:29', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1818884041, 'number': 29701, 'closed': datetime.datetime(2024, 4, 17, 17, 13, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 11, 22, 21, 42, tzinfo=datetime.timezone.utc), 'time_taken': 499902.0, 'time_delta': '5 days, 18:51:42', 'additions': 24, 'deletions': 19, 'state': 'closed'}, {'id': 1817148282, 'number': 29683, 'closed': datetime.datetime(2024, 6, 11, 21, 13, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 11, 2, 24, 8, tzinfo=datetime.timezone.utc), 'time_taken': 5338142.0, 'time_delta': '61 days, 18:49:02', 'additions': 108, 'deletions': 18, 'state': 'closed'}, {'id': 1814544904, 'number': 29662, 'closed': datetime.datetime(2024, 4, 10, 18, 18, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 9, 16, 55, 38, tzinfo=datetime.timezone.utc), 'time_taken': 91359.0, 'time_delta': '1 day, 1:22:39', 'additions': 16, 'deletions': 7, 'state': 'closed'}, {'id': 1809513788, 'number': 29635, 'closed': datetime.datetime(2024, 4, 5, 16, 14, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 5, 14, 53, 15, tzinfo=datetime.timezone.utc), 'time_taken': 4883.0, 'time_delta': '1:21:23', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1800851462, 'number': 29547, 'closed': datetime.datetime(2024, 4, 1, 18, 31, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 1, 17, 4, 34, tzinfo=datetime.timezone.utc), 'time_taken': 5202.0, 'time_delta': '1:26:42', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1794952930, 'number': 29484, 'closed': datetime.datetime(2024, 3, 28, 20, 7, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 27, 21, 53, 53, tzinfo=datetime.timezone.utc), 'time_taken': 80022.0, 'time_delta': '22:13:42', 'additions': 32, 'deletions': 6, 'state': 'closed'}, {'id': 1792535920, 'number': 29470, 'closed': datetime.datetime(2024, 4, 11, 23, 34, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 26, 20, 7, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1394820.0, 'time_delta': '16 days, 3:27:00', 'additions': 8, 'deletions': 10, 'state': 'closed'}, {'id': 1788869327, 'number': 29447, 'closed': datetime.datetime(2024, 3, 25, 23, 12, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 25, 8, 4, 48, tzinfo=datetime.timezone.utc), 'time_taken': 54464.0, 'time_delta': '15:07:44', 'additions': 7, 'deletions': 10, 'state': 'closed'}, {'id': 1788099425, 'number': 29437, 'closed': datetime.datetime(2024, 4, 4, 20, 13, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 24, 8, 22, 54, tzinfo=datetime.timezone.utc), 'time_taken': 993017.0, 'time_delta': '11 days, 11:50:17', 'additions': 52, 'deletions': 16, 'state': 'closed'}, {'id': 1785128537, 'number': 29398, 'closed': datetime.datetime(2024, 4, 11, 23, 39, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 21, 18, 25, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1833293.0, 'time_delta': '21 days, 5:14:53', 'additions': 20, 'deletions': 5, 'state': 'closed'}, {'id': 1785055816, 'number': 29397, 'closed': datetime.datetime(2024, 4, 28, 17, 38, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 21, 17, 39, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3283171.0, 'time_delta': '37 days, 23:59:31', 'additions': 12, 'deletions': 30, 'state': 'closed'}, {'id': 1783761619, 'number': 29387, 'closed': datetime.datetime(2024, 3, 22, 11, 9, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 21, 7, 16, 19, tzinfo=datetime.timezone.utc), 'time_taken': 100420.0, 'time_delta': '1 day, 3:53:40', 'additions': 38, 'deletions': 96, 'state': 'closed'}, {'id': 1772056499, 'number': 29300, 'closed': None, 'created': datetime.datetime(2024, 3, 14, 12, 21, 23, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 180, 'deletions': 30, 'state': 'open'}, {'id': 1770783499, 'number': 29293, 'closed': datetime.datetime(2024, 3, 15, 0, 31, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 13, 19, 44, 56, tzinfo=datetime.timezone.utc), 'time_taken': 103603.0, 'time_delta': '1 day, 4:46:43', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 1763751474, 'number': 29246, 'closed': datetime.datetime(2024, 3, 9, 0, 11, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 22, 43, 45, tzinfo=datetime.timezone.utc), 'time_taken': 5252.0, 'time_delta': '1:27:32', 'additions': 43, 'deletions': 18, 'state': 'closed'}, {'id': 1761658664, 'number': 29227, 'closed': datetime.datetime(2024, 3, 25, 23, 30, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 18, 54, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1571729.0, 'time_delta': '18 days, 4:35:29', 'additions': 45, 'deletions': 10, 'state': 'closed'}, {'id': 1755816454, 'number': 29187, 'closed': datetime.datetime(2024, 3, 5, 1, 14, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 5, 0, 32, 16, tzinfo=datetime.timezone.utc), 'time_taken': 2515.0, 'time_delta': '0:41:55', 'additions': 94, 'deletions': 48, 'state': 'closed'}, {'id': 1753753426, 'number': 29172, 'closed': datetime.datetime(2024, 3, 5, 19, 34, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 4, 2, 3, 18, tzinfo=datetime.timezone.utc), 'time_taken': 149465.0, 'time_delta': '1 day, 17:31:05', 'additions': 37, 'deletions': 9, 'state': 'closed'}, {'id': 1750039426, 'number': 29123, 'closed': datetime.datetime(2024, 2, 29, 23, 12, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 29, 15, 45, 54, tzinfo=datetime.timezone.utc), 'time_taken': 26779.0, 'time_delta': '7:26:19', 'additions': 36, 'deletions': 13, 'state': 'closed'}, {'id': 1744716182, 'number': 29081, 'closed': None, 'created': datetime.datetime(2024, 2, 27, 4, 28, 27, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 206, 'deletions': 8, 'state': 'open'}, {'id': 1731247900, 'number': 28976, 'closed': datetime.datetime(2024, 2, 20, 19, 59, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 17, 19, 31, 52, tzinfo=datetime.timezone.utc), 'time_taken': 260875.0, 'time_delta': '3 days, 0:27:55', 'additions': 21, 'deletions': 28, 'state': 'closed'}, {'id': 1723603274, 'number': 28915, 'closed': datetime.datetime(2024, 6, 5, 12, 55, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 13, 10, 33, 35, tzinfo=datetime.timezone.utc), 'time_taken': 9771730.0, 'time_delta': '113 days, 2:22:10', 'additions': 141, 'deletions': 73, 'state': 'closed'}, {'id': 1715089966, 'number': 28857, 'closed': datetime.datetime(2024, 3, 13, 23, 53, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 7, 7, 37, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3082597.0, 'time_delta': '35 days, 16:16:37', 'additions': 80, 'deletions': 20, 'state': 'closed'}, {'id': 1707429530, 'number': 28798, 'closed': datetime.datetime(2024, 2, 2, 18, 34, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 2, 0, 31, 15, tzinfo=datetime.timezone.utc), 'time_taken': 64975.0, 'time_delta': '18:02:55', 'additions': 21, 'deletions': 58, 'state': 'closed'}, {'id': 1706893481, 'number': 28789, 'closed': datetime.datetime(2024, 3, 12, 19, 29, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 18, 44, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3458690.0, 'time_delta': '40 days, 0:44:50', 'additions': 150, 'deletions': 11, 'state': 'closed'}, {'id': 1690405071, 'number': 28664, 'closed': datetime.datetime(2024, 1, 31, 1, 22, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 22, 19, 6, 8, tzinfo=datetime.timezone.utc), 'time_taken': 713773.0, 'time_delta': '8 days, 6:16:13', 'additions': 189, 'deletions': 16, 'state': 'closed'}, {'id': 1681802766, 'number': 28587, 'closed': datetime.datetime(2024, 1, 25, 18, 51, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 16, 20, 36, 55, tzinfo=datetime.timezone.utc), 'time_taken': 771271.0, 'time_delta': '8 days, 22:14:31', 'additions': 62, 'deletions': 36, 'state': 'closed'}, {'id': 1676781054, 'number': 28554, 'closed': datetime.datetime(2024, 1, 12, 23, 48, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 12, 16, 8, 47, tzinfo=datetime.timezone.utc), 'time_taken': 27607.0, 'time_delta': '7:40:07', 'additions': 472, 'deletions': 729, 'state': 'closed'}, {'id': 1671104176, 'number': 28502, 'closed': datetime.datetime(2024, 1, 9, 18, 44, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 9, 17, 57, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2819.0, 'time_delta': '0:46:59', 'additions': 36, 'deletions': 7, 'state': 'closed'}, {'id': 1667903062, 'number': 28480, 'closed': datetime.datetime(2024, 1, 15, 2, 11, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 7, 22, 35, 39, tzinfo=datetime.timezone.utc), 'time_taken': 617747.0, 'time_delta': '7 days, 3:35:47', 'additions': 12, 'deletions': 12, 'state': 'closed'}, {'id': 1667535008, 'number': 28474, 'closed': datetime.datetime(2024, 1, 8, 0, 39, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 6, 22, 40, 20, tzinfo=datetime.timezone.utc), 'time_taken': 93577.0, 'time_delta': '1 day, 1:59:37', 'additions': 8, 'deletions': 5, 'state': 'closed'}, {'id': 1664896396, 'number': 28434, 'closed': datetime.datetime(2024, 1, 4, 18, 59, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 4, 15, 39, 11, tzinfo=datetime.timezone.utc), 'time_taken': 12046.0, 'time_delta': '3:20:46', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1638130159, 'number': 28133, 'closed': datetime.datetime(2023, 12, 11, 6, 30, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 11, 6, 5, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1493.0, 'time_delta': '0:24:53', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1629110597, 'number': 28038, 'closed': datetime.datetime(2023, 12, 5, 0, 3, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 4, 21, 14, 26, tzinfo=datetime.timezone.utc), 'time_taken': 10144.0, 'time_delta': '2:49:04', 'additions': 10, 'deletions': 4, 'state': 'closed'}, {'id': 1627790977, 'number': 28032, 'closed': datetime.datetime(2023, 12, 4, 21, 0, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 4, 8, 26, 28, tzinfo=datetime.timezone.utc), 'time_taken': 45247.0, 'time_delta': '12:34:07', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1622675044, 'number': 27973, 'closed': datetime.datetime(2024, 1, 14, 23, 36, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 29, 22, 11, 22, tzinfo=datetime.timezone.utc), 'time_taken': 3979517.0, 'time_delta': '46 days, 1:25:17', 'additions': 62, 'deletions': 1, 'state': 'closed'}, {'id': 1620824172, 'number': 27952, 'closed': datetime.datetime(2024, 1, 25, 19, 12, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 28, 22, 44, 53, tzinfo=datetime.timezone.utc), 'time_taken': 4998453.0, 'time_delta': '57 days, 20:27:33', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 1619057578, 'number': 27923, 'closed': datetime.datetime(2023, 12, 1, 21, 51, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 28, 2, 38, 27, tzinfo=datetime.timezone.utc), 'time_taken': 328393.0, 'time_delta': '3 days, 19:13:13', 'additions': 75, 'deletions': 116, 'state': 'closed'}, {'id': 1616463497, 'number': 27887, 'closed': datetime.datetime(2023, 12, 5, 0, 26, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 25, 7, 20, 39, tzinfo=datetime.timezone.utc), 'time_taken': 839174.0, 'time_delta': '9 days, 17:06:14', 'additions': 14, 'deletions': 2, 'state': 'closed'}, {'id': 1613703936, 'number': 27864, 'closed': datetime.datetime(2023, 11, 29, 0, 55, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 23, 1, 36, 32, tzinfo=datetime.timezone.utc), 'time_taken': 515914.0, 'time_delta': '5 days, 23:18:34', 'additions': 43, 'deletions': 1, 'state': 'closed'}, {'id': 1608082231, 'number': 27795, 'closed': datetime.datetime(2023, 11, 21, 1, 6, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 19, 21, 31, 45, tzinfo=datetime.timezone.utc), 'time_taken': 99298.0, 'time_delta': '1 day, 3:34:58', 'additions': 54, 'deletions': 49, 'state': 'closed'}, {'id': 1606031477, 'number': 27764, 'closed': datetime.datetime(2023, 11, 17, 16, 55, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 17, 9, 32, 53, tzinfo=datetime.timezone.utc), 'time_taken': 26583.0, 'time_delta': '7:23:03', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 1602064270, 'number': 27710, 'closed': datetime.datetime(2023, 11, 15, 17, 2, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 15, 7, 54, 8, tzinfo=datetime.timezone.utc), 'time_taken': 32906.0, 'time_delta': '9:08:26', 'additions': 32, 'deletions': 6, 'state': 'closed'}, {'id': 1600324420, 'number': 27695, 'closed': datetime.datetime(2023, 11, 15, 0, 36, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 14, 9, 3, 13, tzinfo=datetime.timezone.utc), 'time_taken': 56017.0, 'time_delta': '15:33:37', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1597558657, 'number': 27670, 'closed': datetime.datetime(2023, 11, 13, 16, 9, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 11, 23, 22, 30, tzinfo=datetime.timezone.utc), 'time_taken': 146793.0, 'time_delta': '1 day, 16:46:33', 'additions': 18, 'deletions': 18, 'state': 'closed'}, {'id': 1596859416, 'number': 27651, 'closed': datetime.datetime(2023, 11, 17, 18, 31, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 10, 20, 33, 36, tzinfo=datetime.timezone.utc), 'time_taken': 597502.0, 'time_delta': '6 days, 21:58:22', 'additions': 65, 'deletions': 22, 'state': 'closed'}, {'id': 1595103649, 'number': 27641, 'closed': datetime.datetime(2023, 11, 10, 21, 56, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 9, 20, 55, 20, tzinfo=datetime.timezone.utc), 'time_taken': 90091.0, 'time_delta': '1 day, 1:01:31', 'additions': 45, 'deletions': 2, 'state': 'closed'}, {'id': 1591756904, 'number': 27610, 'closed': datetime.datetime(2023, 11, 8, 17, 51, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 8, 3, 25, 27, tzinfo=datetime.timezone.utc), 'time_taken': 51967.0, 'time_delta': '14:26:07', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1590140164, 'number': 27592, 'closed': datetime.datetime(2023, 11, 7, 19, 39, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 7, 8, 56, 7, tzinfo=datetime.timezone.utc), 'time_taken': 38580.0, 'time_delta': '10:43:00', 'additions': 25, 'deletions': 6, 'state': 'closed'}, {'id': 1587831990, 'number': 27555, 'closed': None, 'created': datetime.datetime(2023, 11, 6, 4, 42, 12, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 117, 'deletions': 47, 'state': 'open'}, {'id': 1587332051, 'number': 27553, 'closed': datetime.datetime(2023, 11, 6, 17, 7, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 5, 7, 41, 39, tzinfo=datetime.timezone.utc), 'time_taken': 120372.0, 'time_delta': '1 day, 9:26:12', 'additions': 27, 'deletions': 8, 'state': 'closed'}, {'id': 1586722368, 'number': 27533, 'closed': datetime.datetime(2023, 11, 3, 21, 49, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 3, 21, 13, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2213.0, 'time_delta': '0:36:53', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1585360051, 'number': 27509, 'closed': datetime.datetime(2023, 11, 13, 16, 9, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 3, 3, 33, 38, tzinfo=datetime.timezone.utc), 'time_taken': 909327.0, 'time_delta': '10 days, 12:35:27', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 1585025894, 'number': 27502, 'closed': datetime.datetime(2023, 11, 2, 23, 8, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 2, 21, 1, 52, tzinfo=datetime.timezone.utc), 'time_taken': 7605.0, 'time_delta': '2:06:45', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 1576571210, 'number': 27410, 'closed': datetime.datetime(2023, 10, 31, 19, 32, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 27, 13, 3, 16, tzinfo=datetime.timezone.utc), 'time_taken': 368927.0, 'time_delta': '4 days, 6:28:47', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 1571568844, 'number': 27351, 'closed': datetime.datetime(2023, 11, 2, 20, 52, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 24, 18, 45, 24, tzinfo=datetime.timezone.utc), 'time_taken': 785227.0, 'time_delta': '9 days, 2:07:07', 'additions': 202, 'deletions': 25, 'state': 'closed'}, {'id': 1568220144, 'number': 27317, 'closed': datetime.datetime(2023, 10, 23, 16, 33, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 22, 22, 33, 36, tzinfo=datetime.timezone.utc), 'time_taken': 64812.0, 'time_delta': '18:00:12', 'additions': 58, 'deletions': 26, 'state': 'closed'}, {'id': 1568185593, 'number': 27315, 'closed': datetime.datetime(2023, 10, 22, 21, 56, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 22, 20, 7, 8, tzinfo=datetime.timezone.utc), 'time_taken': 6539.0, 'time_delta': '1:48:59', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 1546204882, 'number': 27105, 'closed': datetime.datetime(2023, 10, 9, 18, 13, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 7, 2, 53, 51, tzinfo=datetime.timezone.utc), 'time_taken': 228002.0, 'time_delta': '2 days, 15:20:02', 'additions': 32, 'deletions': 27, 'state': 'closed'}, {'id': 1544494319, 'number': 27075, 'closed': datetime.datetime(2023, 11, 21, 19, 20, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 5, 23, 5, 57, tzinfo=datetime.timezone.utc), 'time_taken': 4047256.0, 'time_delta': '46 days, 20:14:16', 'additions': 51, 'deletions': 25, 'state': 'closed'}, {'id': 1542372761, 'number': 27042, 'closed': datetime.datetime(2023, 10, 4, 19, 54, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 4, 19, 4, 57, tzinfo=datetime.timezone.utc), 'time_taken': 2979.0, 'time_delta': '0:49:39', 'additions': 0, 'deletions': 5, 'state': 'closed'}, {'id': 1539126030, 'number': 26991, 'closed': datetime.datetime(2023, 10, 6, 16, 22, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 3, 2, 6, 40, tzinfo=datetime.timezone.utc), 'time_taken': 310561.0, 'time_delta': '3 days, 14:16:01', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 1538297668, 'number': 26967, 'closed': datetime.datetime(2023, 10, 3, 0, 45, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 2, 16, 21, 55, tzinfo=datetime.timezone.utc), 'time_taken': 30212.0, 'time_delta': '8:23:32', 'additions': 28, 'deletions': 27, 'state': 'closed'}, {'id': 1531544176, 'number': 26879, 'closed': datetime.datetime(2023, 9, 27, 16, 43, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 27, 2, 0, 5, tzinfo=datetime.timezone.utc), 'time_taken': 53006.0, 'time_delta': '14:43:26', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1525882692, 'number': 26810, 'closed': datetime.datetime(2023, 9, 22, 16, 58, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 22, 3, 21, 24, tzinfo=datetime.timezone.utc), 'time_taken': 49000.0, 'time_delta': '13:36:40', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 1521583055, 'number': 26783, 'closed': datetime.datetime(2023, 11, 22, 5, 1, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 19, 15, 44, 56, tzinfo=datetime.timezone.utc), 'time_taken': 5490981.0, 'time_delta': '63 days, 13:16:21', 'additions': 1289, 'deletions': 76, 'state': 'closed'}, {'id': 1515827201, 'number': 26734, 'closed': datetime.datetime(2023, 9, 15, 0, 15, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 14, 14, 31, 26, tzinfo=datetime.timezone.utc), 'time_taken': 35054.0, 'time_delta': '9:44:14', 'additions': 23, 'deletions': 2, 'state': 'closed'}, {'id': 1514254585, 'number': 26728, 'closed': datetime.datetime(2023, 9, 13, 22, 9, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 13, 17, 6, 46, tzinfo=datetime.timezone.utc), 'time_taken': 18151.0, 'time_delta': '5:02:31', 'additions': 48, 'deletions': 10, 'state': 'closed'}, {'id': 1511099807, 'number': 26702, 'closed': datetime.datetime(2023, 10, 25, 19, 42, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 11, 22, 23, tzinfo=datetime.timezone.utc), 'time_taken': 3791974.0, 'time_delta': '43 days, 21:19:34', 'additions': 262, 'deletions': 4, 'state': 'closed'}, {'id': 1508708008, 'number': 26676, 'closed': datetime.datetime(2023, 9, 13, 19, 42, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 9, 5, 59, 40, tzinfo=datetime.timezone.utc), 'time_taken': 394975.0, 'time_delta': '4 days, 13:42:55', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 1503443993, 'number': 26643, 'closed': datetime.datetime(2023, 9, 8, 22, 39, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 5, 20, 41, 32, tzinfo=datetime.timezone.utc), 'time_taken': 266256.0, 'time_delta': '3 days, 1:57:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1330042015, 'number': 25306, 'closed': datetime.datetime(2023, 4, 27, 19, 45, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 27, 9, 25, 10, tzinfo=datetime.timezone.utc), 'time_taken': 37217.0, 'time_delta': '10:20:17', 'additions': 89, 'deletions': 33, 'state': 'closed'}, {'id': 1313053998, 'number': 25112, 'closed': datetime.datetime(2023, 4, 25, 23, 18, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 13, 19, 46, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1049515.0, 'time_delta': '12 days, 3:31:55', 'additions': 116, 'deletions': 19, 'state': 'closed'}, {'id': 1310863760, 'number': 25095, 'closed': datetime.datetime(2023, 4, 20, 22, 4, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 12, 13, 15, 45, tzinfo=datetime.timezone.utc), 'time_taken': 722922.0, 'time_delta': '8 days, 8:48:42', 'additions': 7, 'deletions': 9, 'state': 'closed'}, {'id': 1310834956, 'number': 25094, 'closed': datetime.datetime(2023, 9, 21, 17, 51, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 12, 12, 58, 10, tzinfo=datetime.timezone.utc), 'time_taken': 14014393.0, 'time_delta': '162 days, 4:53:13', 'additions': 34, 'deletions': 6, 'state': 'closed'}, {'id': 1307950568, 'number': 25063, 'closed': datetime.datetime(2023, 4, 11, 4, 54, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 10, 19, 49, 11, tzinfo=datetime.timezone.utc), 'time_taken': 32740.0, 'time_delta': '9:05:40', 'additions': 23, 'deletions': 6, 'state': 'closed'}, {'id': 1307776541, 'number': 25057, 'closed': datetime.datetime(2023, 4, 10, 19, 46, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 10, 17, 1, 55, tzinfo=datetime.timezone.utc), 'time_taken': 9889.0, 'time_delta': '2:44:49', 'additions': 11, 'deletions': 6, 'state': 'closed'}, {'id': 1303506609, 'number': 25002, 'closed': datetime.datetime(2023, 4, 11, 17, 40, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 5, 16, 47, 57, tzinfo=datetime.timezone.utc), 'time_taken': 521543.0, 'time_delta': '6 days, 0:52:23', 'additions': 18, 'deletions': 13, 'state': 'closed'}, {'id': 1300472224, 'number': 24973, 'closed': datetime.datetime(2023, 4, 3, 22, 7, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 3, 18, 4, 30, tzinfo=datetime.timezone.utc), 'time_taken': 14589.0, 'time_delta': '4:03:09', 'additions': 0, 'deletions': 5, 'state': 'closed'}, {'id': 1297865059, 'number': 24930, 'closed': datetime.datetime(2023, 4, 25, 0, 6, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 31, 14, 40, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2107603.0, 'time_delta': '24 days, 9:26:43', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 1297805929, 'number': 24929, 'closed': datetime.datetime(2023, 3, 31, 18, 8, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 31, 14, 3, 35, tzinfo=datetime.timezone.utc), 'time_taken': 14710.0, 'time_delta': '4:05:10', 'additions': 1, 'deletions': 5, 'state': 'closed'}, {'id': 1289447865, 'number': 24856, 'closed': datetime.datetime(2023, 3, 24, 19, 0, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 24, 18, 14, 31, tzinfo=datetime.timezone.utc), 'time_taken': 2787.0, 'time_delta': '0:46:27', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1285684280, 'number': 24812, 'closed': datetime.datetime(2023, 3, 22, 18, 43, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 22, 11, 19, 59, tzinfo=datetime.timezone.utc), 'time_taken': 26603.0, 'time_delta': '7:23:23', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 1267888801, 'number': 24621, 'closed': datetime.datetime(2023, 8, 16, 16, 58, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 8, 13, 38, 17, tzinfo=datetime.timezone.utc), 'time_taken': 13922428.0, 'time_delta': '161 days, 3:20:28', 'additions': 207, 'deletions': 27, 'state': 'closed'}, {'id': 1266798701, 'number': 24611, 'closed': datetime.datetime(2023, 3, 7, 23, 39, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 7, 19, 5, 21, tzinfo=datetime.timezone.utc), 'time_taken': 16456.0, 'time_delta': '4:34:16', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1266530125, 'number': 24608, 'closed': datetime.datetime(2024, 3, 22, 22, 20, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 7, 15, 55, 9, tzinfo=datetime.timezone.utc), 'time_taken': 32941531.0, 'time_delta': '381 days, 6:25:31', 'additions': 163, 'deletions': 19, 'state': 'closed'}, {'id': 1265152877, 'number': 24602, 'closed': datetime.datetime(2023, 3, 8, 19, 33, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 6, 20, 45, 30, tzinfo=datetime.timezone.utc), 'time_taken': 168503.0, 'time_delta': '1 day, 22:48:23', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1262212716, 'number': 24563, 'closed': datetime.datetime(2024, 1, 30, 1, 24, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 3, 14, 55, 7, tzinfo=datetime.timezone.utc), 'time_taken': 28722544.0, 'time_delta': '332 days, 10:29:04', 'additions': 143, 'deletions': 51, 'state': 'closed'}, {'id': 1230393743, 'number': 24303, 'closed': datetime.datetime(2023, 2, 8, 20, 51, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 6, 13, 0, 54, tzinfo=datetime.timezone.utc), 'time_taken': 201045.0, 'time_delta': '2 days, 7:50:45', 'additions': 14, 'deletions': 13, 'state': 'closed'}, {'id': 1228007167, 'number': 24283, 'closed': datetime.datetime(2023, 5, 2, 3, 32, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 3, 11, 28, 50, tzinfo=datetime.timezone.utc), 'time_taken': 7574649.0, 'time_delta': '87 days, 16:04:09', 'additions': 50, 'deletions': 26, 'state': 'closed'}, {'id': 1224709738, 'number': 24252, 'closed': datetime.datetime(2023, 2, 24, 1, 48, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 1, 11, 14, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1953259.0, 'time_delta': '22 days, 14:34:19', 'additions': 33, 'deletions': 0, 'state': 'closed'}, {'id': 1223274538, 'number': 24235, 'closed': datetime.datetime(2024, 4, 14, 4, 56, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 31, 13, 16, 26, tzinfo=datetime.timezone.utc), 'time_taken': 37899608.0, 'time_delta': '438 days, 15:40:08', 'additions': 494, 'deletions': 67, 'state': 'closed'}, {'id': 1220633976, 'number': 24220, 'closed': datetime.datetime(2023, 2, 2, 0, 4, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 29, 13, 39, 15, tzinfo=datetime.timezone.utc), 'time_taken': 296719.0, 'time_delta': '3 days, 10:25:19', 'additions': 8, 'deletions': 17, 'state': 'closed'}, {'id': 1218182575, 'number': 24187, 'closed': datetime.datetime(2023, 3, 27, 22, 31, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 26, 17, 13, 9, tzinfo=datetime.timezone.utc), 'time_taken': 5203116.0, 'time_delta': '60 days, 5:18:36', 'additions': 134, 'deletions': 40, 'state': 'closed'}, {'id': 1217623401, 'number': 24181, 'closed': datetime.datetime(2023, 1, 30, 22, 38, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 26, 9, 38, 44, tzinfo=datetime.timezone.utc), 'time_taken': 392381.0, 'time_delta': '4 days, 12:59:41', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 1211776758, 'number': 24126, 'closed': datetime.datetime(2023, 1, 31, 23, 57, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 20, 16, 16, 8, tzinfo=datetime.timezone.utc), 'time_taken': 978067.0, 'time_delta': '11 days, 7:41:07', 'additions': 27, 'deletions': 7, 'state': 'closed'}, {'id': 1200313398, 'number': 24092, 'closed': datetime.datetime(2023, 1, 18, 1, 10, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 17, 13, 56, 58, tzinfo=datetime.timezone.utc), 'time_taken': 40397.0, 'time_delta': '11:13:17', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 1199388931, 'number': 24087, 'closed': datetime.datetime(2023, 2, 7, 23, 38, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 16, 18, 58, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1917608.0, 'time_delta': '22 days, 4:40:08', 'additions': 15, 'deletions': 1, 'state': 'closed'}, {'id': 1197022773, 'number': 24072, 'closed': datetime.datetime(2023, 1, 20, 22, 41, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 13, 17, 4, 34, tzinfo=datetime.timezone.utc), 'time_taken': 625008.0, 'time_delta': '7 days, 5:36:48', 'additions': 47, 'deletions': 4, 'state': 'closed'}, {'id': 1193734639, 'number': 24036, 'closed': datetime.datetime(2023, 1, 18, 23, 50, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 11, 12, 24, 29, tzinfo=datetime.timezone.utc), 'time_taken': 645936.0, 'time_delta': '7 days, 11:25:36', 'additions': 29, 'deletions': 1, 'state': 'closed'}, {'id': 1192091636, 'number': 24026, 'closed': None, 'created': datetime.datetime(2023, 1, 10, 9, 46, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 29, 'deletions': 12, 'state': 'open'}, {'id': 1191033747, 'number': 24018, 'closed': datetime.datetime(2023, 1, 20, 20, 56, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 15, 57, 6, tzinfo=datetime.timezone.utc), 'time_taken': 968372.0, 'time_delta': '11 days, 4:59:32', 'additions': 27, 'deletions': 10, 'state': 'closed'}, {'id': 1190335176, 'number': 24017, 'closed': datetime.datetime(2023, 1, 30, 19, 32, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 7, 39, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1857181.0, 'time_delta': '21 days, 11:53:01', 'additions': 21, 'deletions': 11, 'state': 'closed'}, {'id': 1188281486, 'number': 24002, 'closed': datetime.datetime(2024, 7, 11, 23, 5, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 6, 15, 2, 10, tzinfo=datetime.timezone.utc), 'time_taken': 47721800.0, 'time_delta': '552 days, 8:03:20', 'additions': 29, 'deletions': 29, 'state': 'closed'}, {'id': 1186200756, 'number': 23991, 'closed': datetime.datetime(2023, 1, 5, 20, 59, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 5, 9, 35, 48, tzinfo=datetime.timezone.utc), 'time_taken': 41050.0, 'time_delta': '11:24:10', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 1182676108, 'number': 23944, 'closed': datetime.datetime(2023, 4, 11, 18, 35, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 2, 14, 44, 31, tzinfo=datetime.timezone.utc), 'time_taken': 8567466.0, 'time_delta': '99 days, 3:51:06', 'additions': 80, 'deletions': 3, 'state': 'closed'}, {'id': 1167212041, 'number': 23884, 'closed': datetime.datetime(2023, 1, 7, 0, 53, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 15, 18, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1923537.0, 'time_delta': '22 days, 6:18:57', 'additions': 72, 'deletions': 1, 'state': 'closed'}, {'id': 1164334108, 'number': 23870, 'closed': datetime.datetime(2022, 12, 14, 20, 40, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 14, 5, 25, 24, tzinfo=datetime.timezone.utc), 'time_taken': 54928.0, 'time_delta': '15:15:28', 'additions': 37, 'deletions': 24, 'state': 'closed'}, {'id': 1163541008, 'number': 23856, 'closed': datetime.datetime(2022, 12, 14, 0, 57, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 13, 17, 49, 40, tzinfo=datetime.timezone.utc), 'time_taken': 25684.0, 'time_delta': '7:08:04', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1157741035, 'number': 23816, 'closed': datetime.datetime(2022, 12, 13, 19, 54, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 10, 15, 13, 33, tzinfo=datetime.timezone.utc), 'time_taken': 276058.0, 'time_delta': '3 days, 4:40:58', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1045096591, 'number': 22852, 'closed': datetime.datetime(2023, 1, 30, 19, 51, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 2, 16, 25, 37, tzinfo=datetime.timezone.utc), 'time_taken': 12972357.0, 'time_delta': '150 days, 3:25:57', 'additions': 110, 'deletions': 17, 'state': 'closed'}, {'id': 1041298263, 'number': 22822, 'closed': None, 'created': datetime.datetime(2022, 8, 30, 17, 59, 15, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 60, 'deletions': 0, 'state': 'open'}, {'id': 1030034560, 'number': 22744, 'closed': datetime.datetime(2022, 8, 18, 18, 22, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 18, 13, 55, 33, tzinfo=datetime.timezone.utc), 'time_taken': 15996.0, 'time_delta': '4:26:36', 'additions': 16, 'deletions': 16, 'state': 'closed'}, {'id': 1029247001, 'number': 22739, 'closed': datetime.datetime(2023, 9, 21, 18, 24, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 17, 19, 52, 52, tzinfo=datetime.timezone.utc), 'time_taken': 34554681.0, 'time_delta': '399 days, 22:31:21', 'additions': 18, 'deletions': 13, 'state': 'closed'}, {'id': 1027305436, 'number': 22726, 'closed': datetime.datetime(2022, 8, 16, 20, 46, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 8, 25, 6, tzinfo=datetime.timezone.utc), 'time_taken': 44486.0, 'time_delta': '12:21:26', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1025341512, 'number': 22708, 'closed': datetime.datetime(2022, 8, 12, 23, 47, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 12, 20, 0, 10, tzinfo=datetime.timezone.utc), 'time_taken': 13638.0, 'time_delta': '3:47:18', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 1024178473, 'number': 22705, 'closed': datetime.datetime(2022, 8, 16, 21, 38, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 18, 16, 1, tzinfo=datetime.timezone.utc), 'time_taken': 444121.0, 'time_delta': '5 days, 3:22:01', 'additions': 21, 'deletions': 5, 'state': 'closed'}, {'id': 1004547224, 'number': 22551, 'closed': datetime.datetime(2023, 2, 7, 8, 14, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 21, 18, 36, 26, tzinfo=datetime.timezone.utc), 'time_taken': 17329095.0, 'time_delta': '200 days, 13:38:15', 'additions': 565, 'deletions': 73, 'state': 'closed'}, {'id': 993277445, 'number': 22445, 'closed': datetime.datetime(2023, 9, 28, 22, 5, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 11, 15, 51, 49, tzinfo=datetime.timezone.utc), 'time_taken': 38384025.0, 'time_delta': '444 days, 6:13:45', 'additions': 410, 'deletions': 51, 'state': 'closed'}, {'id': 992121940, 'number': 22428, 'closed': datetime.datetime(2022, 9, 11, 21, 11, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 9, 1, 24, 25, tzinfo=datetime.timezone.utc), 'time_taken': 5600797.0, 'time_delta': '64 days, 19:46:37', 'additions': 36, 'deletions': 16, 'state': 'closed'}, {'id': 989984890, 'number': 22409, 'closed': datetime.datetime(2022, 8, 16, 20, 55, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 10, 25, 4, tzinfo=datetime.timezone.utc), 'time_taken': 3493852.0, 'time_delta': '40 days, 10:30:52', 'additions': 37, 'deletions': 1, 'state': 'closed'}, {'id': 986133941, 'number': 22370, 'closed': datetime.datetime(2023, 9, 11, 22, 23, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 8, 4, 29, tzinfo=datetime.timezone.utc), 'time_taken': 37549166.0, 'time_delta': '434 days, 14:19:26', 'additions': 608, 'deletions': 139, 'state': 'closed'}, {'id': 978608823, 'number': 22307, 'closed': datetime.datetime(2022, 8, 16, 21, 23, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 18, 31, 31, tzinfo=datetime.timezone.utc), 'time_taken': 4589528.0, 'time_delta': '53 days, 2:52:08', 'additions': 390, 'deletions': 180, 'state': 'closed'}, {'id': 969129833, 'number': 22253, 'closed': datetime.datetime(2022, 8, 2, 22, 55, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 10, 2, 25, tzinfo=datetime.timezone.utc), 'time_taken': 4107196.0, 'time_delta': '47 days, 12:53:16', 'additions': 89, 'deletions': 8, 'state': 'closed'}, {'id': 950171316, 'number': 22150, 'closed': datetime.datetime(2022, 7, 8, 21, 28, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 29, 2, 36, 12, tzinfo=datetime.timezone.utc), 'time_taken': 3523961.0, 'time_delta': '40 days, 18:52:41', 'additions': 16, 'deletions': 20, 'state': 'closed'}, {'id': 909148132, 'number': 21786, 'closed': datetime.datetime(2022, 8, 7, 2, 29, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 13, 16, 48, 10, tzinfo=datetime.timezone.utc), 'time_taken': 9970890.0, 'time_delta': '115 days, 9:41:30', 'additions': 66, 'deletions': 16, 'state': 'closed'}, {'id': 872761336, 'number': 21334, 'closed': datetime.datetime(2022, 3, 18, 21, 59, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 7, 6, 48, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1005056.0, 'time_delta': '11 days, 15:10:56', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 859854785, 'number': 21209, 'closed': datetime.datetime(2022, 3, 22, 19, 58, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 21, 21, 25, 34, tzinfo=datetime.timezone.utc), 'time_taken': 2500405.0, 'time_delta': '28 days, 22:33:25', 'additions': 36, 'deletions': 7, 'state': 'closed'}, {'id': 841132719, 'number': 21052, 'closed': datetime.datetime(2022, 2, 16, 1, 26, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 6, 19, 0, 10, tzinfo=datetime.timezone.utc), 'time_taken': 800772.0, 'time_delta': '9 days, 6:26:12', 'additions': 34, 'deletions': 2, 'state': 'closed'}, {'id': 838030315, 'number': 21020, 'closed': datetime.datetime(2022, 2, 3, 1, 27, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 2, 7, 46, 9, tzinfo=datetime.timezone.utc), 'time_taken': 63660.0, 'time_delta': '17:41:00', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 833998995, 'number': 20953, 'closed': datetime.datetime(2022, 3, 8, 20, 24, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 28, 0, 38, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3440782.0, 'time_delta': '39 days, 19:46:22', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 833949658, 'number': 20952, 'closed': datetime.datetime(2022, 1, 28, 17, 15, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 27, 22, 55, 43, tzinfo=datetime.timezone.utc), 'time_taken': 65985.0, 'time_delta': '18:19:45', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 829711371, 'number': 20888, 'closed': datetime.datetime(2022, 1, 26, 2, 13, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 23, 9, 42, 6, tzinfo=datetime.timezone.utc), 'time_taken': 232255.0, 'time_delta': '2 days, 16:30:55', 'additions': 19, 'deletions': 2, 'state': 'closed'}, {'id': 829381614, 'number': 20885, 'closed': datetime.datetime(2022, 1, 25, 1, 14, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 10, 22, 32, tzinfo=datetime.timezone.utc), 'time_taken': 226336.0, 'time_delta': '2 days, 14:52:16', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 829313319, 'number': 20884, 'closed': datetime.datetime(2022, 1, 24, 19, 25, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 8, 48, 16, tzinfo=datetime.timezone.utc), 'time_taken': 211037.0, 'time_delta': '2 days, 10:37:17', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 817055874, 'number': 20734, 'closed': datetime.datetime(2022, 1, 18, 20, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 9, 15, 23, 55, tzinfo=datetime.timezone.utc), 'time_taken': 796985.0, 'time_delta': '9 days, 5:23:05', 'additions': 0, 'deletions': 1, 'state': 'closed'}]"
