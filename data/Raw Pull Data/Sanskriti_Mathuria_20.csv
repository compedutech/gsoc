pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1049012157,Single file download,"Jira Ticket: [PXP-xxxx](https://ctds-planx.atlassian.net/browse/PXP-xxxx)
- [ ] Remove this line if you've changed the title to (PXP-xxxx): <title>
<!--
Make sure to follow the DEV guidelines (https://gen3.org/resources/developer/dev-introduction/) before asking for review.

- Describe what this pull request does.
- Add short descriptive bullet points for each section if relevant. Keep in mind that they will be parsed automatically to generate official release notes.
- Test manually.
- Maintain or increase the test coverage (if relevant).
- Update the documentation, or justify if not needed.

-->
- 100% coverage of new code by new test cases

### New Features

- Add single file download function and CLI command



### Breaking Changes


### Bug Fixes


### Improvements


### Dependency updates


### Deployment changes
<!-- This section should only contain important things devops should know when updating service versions. -->
",True,155,https://api.github.com/repos/uc-cdis/gen3sdk-python/pulls/155,https://github.com/uc-cdis/gen3sdk-python/pull/155,closed,426,14,9,48,1,46,0,0,[],2022-09-07 16:54:54+00:00,2022-10-20 16:03:32+00:00,3712118.0,"42 days, 23:08:38","[{'comment_id': 966408645, 'comment_body': 'the bullet points in the PR description get parsed into release notes and shared with the Gen3 community ([example](https://cdis.slack.com/archives/CDDPLU1NU/p1660587058241499)). So ideally they should be pretty high-level, and there should be a single bullet point per ""new feature"".\r\nThe coverage is a nice thing to mention but it\'s not something we want to add to the release notes, so you can move it to above the ""New Features"" section', 'comment_created': datetime.datetime(2022, 9, 8, 20, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966410577, 'comment_body': 'was this file committed by mistake?', 'comment_created': datetime.datetime(2022, 9, 8, 20, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966412541, 'comment_body': 'were the newlines removed automatically by some linting tool? i would rather we keep them, they improve readability of the CLI help', 'comment_created': datetime.datetime(2022, 9, 8, 20, 55, 47, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966414926, 'comment_body': 'by convention, Python class names are in snake case, so here it should be `class ManifestDownloader`', 'comment_created': datetime.datetime(2022, 9, 8, 20, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966434365, 'comment_body': ""I'll suggest a code organization change; we have [this existing Gen3File class](https://github.com/uc-cdis/gen3sdk-python/blob/master/gen3/file.py) for interacting with files. The existing drs-tool is not integrated to the SDK this way, and that's probably where you got this structure from. But I think this new feature would be more consistent with the rest of the SDK if we make the changes below, especially since you use some `Gen3File` functions. An added bonus is that the documentation would be generated and added [here](https://uc-cdis.github.io/gen3sdk-python/_build/html/file.html) automatically ðŸ™‚ \r\n- we move the functions from the `manifest_downloader` class to the `Gen3File` class\r\n- we rename `async_download` to something like `download_manifest` so it's very clear what it does (because this function will be available to end users who import the SDK as a python library)\r\n- instead of this `gen3/cli/download.py` file, create a `gen3/cli/file.py` file that makes the functions from `Gen3File` available to the CLI (you don't need to make all the functions available, just yours is fine - `gen3 file download-manifest` and `gen3 file download-single`)"", 'comment_created': datetime.datetime(2022, 9, 8, 21, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966437969, 'comment_body': 'what happens if `download_path` contains slashes? i think you might need to add logic to create subdirectories as needed.', 'comment_created': datetime.datetime(2022, 9, 8, 21, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966439568, 'comment_body': 'this is a bit pedantic but `manifest_file_path` would be a more accurate name. `manifest_file` could mean that the variable contains the file contents', 'comment_created': datetime.datetime(2022, 9, 8, 21, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966441786, 'comment_body': ""sometimes you use the first import and sometimes the second one, let's remove one ðŸ™‚ "", 'comment_created': datetime.datetime(2022, 9, 8, 21, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966442275, 'comment_body': ""maybe not necessary? it's used in the tests but can be removed, and i didn't see it used in the code"", 'comment_created': datetime.datetime(2022, 9, 8, 21, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966444539, 'comment_body': ""the format of the manifest is not documented anywhere that i can see, we'll need to document it. if it's the same format as we use for `cdis-data-client` downloads, that's perfect"", 'comment_created': datetime.datetime(2022, 9, 8, 21, 41, 29, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966448223, 'comment_body': 'how did you come up with this list? i think we\'d want to retry at least for server errors, so maybe we could simplify to ""retry if code >= 500""?', 'comment_created': datetime.datetime(2022, 9, 8, 21, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966454788, 'comment_body': ""when retrying, it's good practice to wait a little bit to give the server a chance to recover before the next call.\r\nyou can use the `backoff` library which we already use in this SDK, for example [here](https://github.com/uc-cdis/gen3sdk-python/blob/00c765d467ed51b254da57bba01eca75f4e9347a/gen3/index.py#L67), or write something yourself ([example](https://github.com/uc-cdis/covid19-tools/blob/15d619a/covid19-etl/etl/base.py#L6-L26))"", 'comment_created': datetime.datetime(2022, 9, 8, 21, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966455571, 'comment_body': 'by convention variable names are lower case => `sem`', 'comment_created': datetime.datetime(2022, 9, 8, 21, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966456254, 'comment_body': ""`10` should probably be configurable, i'd say it should be a parameter to the function"", 'comment_created': datetime.datetime(2022, 9, 8, 21, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966457222, 'comment_body': 'instead of checking `if manifest_list` here after initializing a lot of other things, why not return a ""Nothing to download"" error to the user right after loading the manifest?', 'comment_created': datetime.datetime(2022, 9, 8, 22, 0, 51, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966458002, 'comment_body': '```suggestion\r\n        start_time = time.perf_counter()\r\n```\r\nfor readability', 'comment_created': datetime.datetime(2022, 9, 8, 22, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966463853, 'comment_body': ""Here you're initializing a class instance from within a class method. When you write a function that doesn't need to access class attributes and methods (no `self` parameter), it is good practice to take it out of the class.\r\nSo here, instead of:\r\n```\r\nclass ManifestDownloader:\r\n    def load_manifest(self):\r\n        [...]\r\n\r\n    async def async_download():\r\n        manifest = ManifestDownloader()\r\n        manifest_list = manifest.load_manifest()\r\n```\r\nyou would do:\r\n```\r\nclass ManifestDownloader:\r\n    def load_manifest(self):\r\n        [...]\r\n\r\nasync def async_download():\r\n    manifest_downloader = ManifestDownloader()\r\n    manifest_list = manifest_downloader.load_manifest()\r\n```\r\nBut if you move everything to the `Gen3File` class, i think you won't need to do this ðŸ™‚ "", 'comment_created': datetime.datetime(2022, 9, 8, 22, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966464015, 'comment_body': '```suggestion\r\n        logging.info(""Done loading manifest"")\r\n```', 'comment_created': datetime.datetime(2022, 9, 8, 22, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966468378, 'comment_body': 'what is the benefit of using `Namespace` over a dict here?', 'comment_created': datetime.datetime(2022, 9, 8, 22, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966469810, 'comment_body': ""since you do not validate the manifest, you may want to add checks in this function: right now every time you access `entry.X` i think the code could fail if the manifest is malformed and there is no `X`?\r\n\r\nMaybe you can return an error if there is no `object_id`, but be more flexible if there is no `file_name` (in Gen3, the convention is to default to the `object_id` when there is no file name, which i see you're doing at some point)"", 'comment_created': datetime.datetime(2022, 9, 8, 22, 19, 3, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966470985, 'comment_body': 'by convention, internal class methods that are not meant to be called outside of the class should start with `_` => `_load_manifest()` and `_download_using_url()`', 'comment_created': datetime.datetime(2022, 9, 8, 22, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966477201, 'comment_body': 'this will make for a great standalone function if you add documentation in the docstring and update it to take the `object_id` as parameter directly instead of an ""entry"". You can get the file name by hitting the indexd API', 'comment_created': datetime.datetime(2022, 9, 8, 22, 33, 27, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966478134, 'comment_body': ""i'm curious why 4096 instead of the default?"", 'comment_created': datetime.datetime(2022, 9, 8, 22, 35, 32, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966483208, 'comment_body': '`self.unsuccessful_downloads` might be cleaner as a class attribute instead of a global var', 'comment_created': datetime.datetime(2022, 9, 8, 22, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966485362, 'comment_body': ""Having many `return` statements and the duplication of the exit logic makes the code harder to read and maintain. I haven't looked in detail but do you think this could be refactored? Maybe we can store a `successful = True/False` variable and at the end of the function, if not successful, then append to `unsuccessful`, release the semaphore, and return false?\r\n\r\n(same for `download_single()`)"", 'comment_created': datetime.datetime(2022, 9, 8, 22, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 966491285, 'comment_body': ""here you're keeping track of `unsuccessful` but not logging it at the end of the function. i'm not sure it's needed when you download a single file?"", 'comment_created': datetime.datetime(2022, 9, 8, 23, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 967869648, 'comment_body': ""Thanks for your review, Pauline! All the comments were really helpful\r\nYes this file was committed by mistake, I'll remove it in the next commit. "", 'comment_created': datetime.datetime(2022, 9, 11, 18, 32, 39, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967869729, 'comment_body': ""Yes that makes sense, I'll make that change"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967869790, 'comment_body': ""Didn't realise that happened, my bad"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967869853, 'comment_body': ""Oh I was trying to follow what was done for other files, but yes I can see that it's not needed now, I'll remove it"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967870036, 'comment_body': ""Yes I confirmed it, it follows the same format as the cdis-data-client, I'll mention it in the function too "", 'comment_created': datetime.datetime(2022, 9, 11, 18, 36, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967870419, 'comment_body': ""I looked for a list of status codes which aren't resolved after retries also and hence got these values. Should I just say >=500 or should the code retry any error codes between 200 and 400 too? (Since 400 to 500 tend to be status codes in which retries don't help.)"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967870450, 'comment_body': ""Oh okay, I'll change that right away"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967870566, 'comment_body': ""Okay, I'll add it as an input field for the user"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967870677, 'comment_body': ""Oh yeah, that seems more efficient! I'll change it to that"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967870861, 'comment_body': ""Oh okay got it. I'll change it according to that naming convention."", 'comment_created': datetime.datetime(2022, 9, 11, 18, 42, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967871077, 'comment_body': 'I was trying to replicate the `requests(stream = True)` functionality for aiohttp, to download large files in chunks and I read somewhere that this was a possible solution to download the response in chunks and not as a whole. Is there any other way to go about it?', 'comment_created': datetime.datetime(2022, 9, 11, 18, 44, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967871204, 'comment_body': ""Oh yeah, that seems easier. I'll change it to this form"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967871267, 'comment_body': ""Yeah I didn't realise I copied it in the download-single function too, I shall remove that"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 967872040, 'comment_body': ""Yes I'll change that right away, didn't realise about the release notes. Please let me know if I can change anything else about the description of the PR"", 'comment_created': datetime.datetime(2022, 9, 11, 18, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 968444767, 'comment_body': ""Yeah, I don't know how that ended up happening. How can I revert it back to normal?"", 'comment_created': datetime.datetime(2022, 9, 12, 13, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sans-mathuria', 'type': 'User'}, {'comment_id': 968954384, 'comment_body': 'looks great!', 'comment_created': datetime.datetime(2022, 9, 12, 21, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 968954784, 'comment_body': ""sure - let me know when it's ready for review again (you can re-request a review on github)"", 'comment_created': datetime.datetime(2022, 9, 12, 21, 36, 40, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 968955134, 'comment_body': ""i'm not sure which tool did this, maybe your IDE? you can try adding the newlines back manually since it's only in this file ðŸ¤” "", 'comment_created': datetime.datetime(2022, 9, 12, 21, 37, 17, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}, {'comment_id': 968956143, 'comment_body': '\\>= 500 sounds fine to me', 'comment_created': datetime.datetime(2022, 9, 12, 21, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'paulineribeyre', 'type': 'User'}]","[{'commit_sha': 'd060b56689ec6b0c7070995f712e6eb575dc7d90', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7845b4315a16c60c9601f91adaf0f5cd0603e9', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccc8c2a98b99a445e472c1f8a7a6153211f33e8a', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29c10e9767a54016943abe82e36ae7b7e04a0c6e', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e22b3a3dfa7fb667cea3ffd1ef50db037bb5ae8e', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b49c7872b80bd50a1e5e0df7e1ddf9081d5b17c2', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '452efa4860ee23725ebab2c88af4ae8344915e34', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bed04a28a3ea139216b0be6a8fd118caa8616b5', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f616c9d480f7f31b877ec83e7eb4fdff237f99b', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02deea6843548f12428ea998afac4638643c4754', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b453b6cc7a4901d154ca57c80d9e6b7caae3656', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1800c73abcb35e50aeff0f4e7858602da241f8bc', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faeff2c5eb1ba7ec065d7a48e5c41881de9c240c', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba392075c622c7eba8cab22a54c00e9558bf48eb', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50c4927899efcc78b1c7188ace3c6380994df131', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e9097300b7ceaeb95ac8551460796b446216f0', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b711e21d2693a78304d182ab692cca25a48dfed', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '846ce93a428635e6532d2f73c63a1c578171a694', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02b71af816bb1b6a156e894278a44d7bc93a44b0', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc68ca96fc845de19cfe222d4c2b7961da7bb30b', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07d2341ffde637ef0155eb81e6ad29bdb344d656', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7793b159c1ebe658d0a7c3068546004adf02c6c8', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '450782d8c3ce7a0d972e38a517f6dcc0b5c40d69', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b33ce1f54700a533df472d7116539cfb4606a61', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64dc5c8fb936b7f9f343bb1a2cbced52ed13648a', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f54b43a0cfcc3f0e6477290d160eb0c710781b', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8ccd6262046d7524ff14bab26409d06ab10495e', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ae234b7ee4d30ce2562e6bedfad973964064948', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac5a5a6311d3ac1606a971d2bf6062cf3797bd3c', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3b4c167f098d31532561814e67f96335891db7e', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c10304a6b1c81f99464a0184d0ae9b5adb4a711', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f317c4f32aa077df40bc3f16ccc5c4aed2ab520', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f0d64878cd93dadbca18edb9e8f20300bbc6759', 'committer_username': 'paulineribeyre', 'committer_name': 'Pauline Ribeyre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 4, 22, 11, 31, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30fe7342f04c89d62cdd63242a133b0933f36aea', 'committer_username': 'paulineribeyre', 'committer_name': 'Pauline Ribeyre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 4, 22, 11, 31, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee3066690a0873bff4705729eec061c798ef70d5', 'committer_username': 'paulineribeyre', 'committer_name': 'Pauline Ribeyre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 4, 22, 11, 31, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51b7a6abc0ba6f28a8d000cc7b587e0afa2a61d2', 'committer_username': 'paulineribeyre', 'committer_name': 'Pauline Ribeyre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 4, 22, 11, 31, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0887cc5e21677a91d7f8887e5556bd1c920b3929', 'committer_username': 'paulineribeyre', 'committer_name': 'Pauline Ribeyre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 4, 22, 11, 31, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb724962e674169f59520d40a023393ea680e0bb', 'committer_username': 'paulineribeyre', 'committer_name': 'Pauline Ribeyre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 4, 22, 11, 31, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7b83f9efff769bc23188c57ef4c8894b5758a9e', 'committer_username': 'paulineribeyre', 'committer_name': 'Pauline Ribeyre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 4, 22, 11, 31, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7088ce68a379f74d383b0559fba9a669eb31798b', 'committer_username': 'paulineribeyre', 'committer_name': 'Pauline Ribeyre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 4, 22, 11, 31, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34b87cb9bec0650f8a11dae5b92d6abba34a1d59', 'committer_username': 'paulineribeyre', 'committer_name': 'Pauline Ribeyre', 'committer_email': None, 'commit_date': datetime.datetime(2013, 4, 22, 11, 31, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1ef37405f56e90c9ad03c65276d3aa13cb11e4f', 'committer_username': 'sans-mathuria', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 28, 11, 57, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e805e7ca186c9ed400fe8c225bfea41057161fa', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '102b67ad12acdf41935f681b116fdfc910075006', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a19566d333a1dc7cf6803be21aba04841a44127', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b48fb12043e7a7e108f606bdc0151a2193badac', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e98f3138979806a0e26884fcd545d602ff7bc16', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '743c1dc4b876c8ab6f0b9c3146e0fa6614fc1074', 'committer_username': 'MichaelLukowski', 'committer_name': 'Michael Lukowski', 'committer_email': 'lukowski9@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 18, 12, 18, tzinfo=datetime.timezone.utc)}]",,79791724,,User,,4,,1,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
146138414,gen3sdk-python,uc-cdis/gen3sdk-python,Python,21,12,22,39,959,20,44,17,"[{'id': 1049012157, 'number': 155, 'closed': datetime.datetime(2022, 10, 20, 16, 3, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 7, 16, 54, 54, tzinfo=datetime.timezone.utc), 'time_taken': 3712118.0, 'time_delta': '42 days, 23:08:38', 'additions': 426, 'deletions': 14, 'state': 'closed'}]"
