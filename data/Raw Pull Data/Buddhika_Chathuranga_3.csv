pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
455016452,YAML configuration support,"**Updates**
- Add sample-allOption.yml (There are few differences in config names compared to XML configuration to keep UX)
- Update time span values to parsing from strings. Now user can specify TimeSpan values in `5 sec` manner.
- Implement unimplemented properties in YamlConfiguration.cs
- Remove unnecessary properties from ServiceDescriptorYaml.cs",True,596,https://api.github.com/repos/winsw/winsw/pulls/596,https://github.com/winsw/winsw/pull/596,closed,719,154,10,12,2,30,0,0,[],2020-07-22 10:08:50+00:00,2020-07-29 12:00:40+00:00,611510.0,"7 days, 1:51:50","[{'comment_id': 458690477, 'comment_body': 'Code duplication from XML? I would suggest to move it to a separate utility class then', 'comment_created': datetime.datetime(2020, 7, 22, 10, 21, 22, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 458691096, 'comment_body': 'This one will not work as defined, right? We still need to support extensions somehow\r\n', 'comment_created': datetime.datetime(2020, 7, 22, 10, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 458693309, 'comment_body': 'Make sense. will update.', 'comment_created': datetime.datetime(2020, 7, 22, 10, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 458694070, 'comment_body': 'Yes. It is my next plan on YAML Support', 'comment_created': datetime.datetime(2020, 7, 22, 10, 28, 28, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 458698680, 'comment_body': 'There is no corresponding entry in XML.', 'comment_created': datetime.datetime(2020, 7, 22, 10, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 458699065, 'comment_body': ""I don't think `failureActions` is better than `onFailure`."", 'comment_created': datetime.datetime(2020, 7, 22, 10, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 458699310, 'comment_body': 'Use `true` in samples.', 'comment_created': datetime.datetime(2020, 7, 22, 10, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 458815613, 'comment_body': 'will change into `onFailure`', 'comment_created': datetime.datetime(2020, 7, 22, 14, 2, 13, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 458819132, 'comment_body': 'Its a mistake. Should be removed.', 'comment_created': datetime.datetime(2020, 7, 22, 14, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 458838288, 'comment_body': '- Shall we support a similar syntax for XML in v3?\n- Shall we support `name:` and `value:` pairs?', 'comment_created': datetime.datetime(2020, 7, 22, 14, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 458844802, 'comment_body': 'Sure. I am okay with that! I will update this.', 'comment_created': datetime.datetime(2020, 7, 22, 14, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 458846070, 'comment_body': '> * Shall we support a similar syntax for XML in v3\r\n\r\nSorry, I did not get this???', 'comment_created': datetime.datetime(2020, 7, 22, 14, 43, 15, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 458876617, 'comment_body': 'I believe @NextTurn asks whether we should change XML syntax in v3 so that YAML and XML are aligned', 'comment_created': datetime.datetime(2020, 7, 22, 15, 23, 56, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 458890860, 'comment_body': 'What would be good?? I am open for both. However I already change YAML config into XML syntax. I will push that. But still I can roll back to previous syntax if you wish.', 'comment_created': datetime.datetime(2020, 7, 22, 15, 43, 27, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 460473125, 'comment_body': ""Blank lines aren't required."", 'comment_created': datetime.datetime(2020, 7, 26, 3, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 460473230, 'comment_body': ""Don't throw `Exception`."", 'comment_created': datetime.datetime(2020, 7, 26, 3, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 460473428, 'comment_body': ""As per the discussion in Gitter we don't want abbreviations. Can you confirm @oleg-nenashev?"", 'comment_created': datetime.datetime(2020, 7, 26, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 460627904, 'comment_body': 'Which value should be bound to actionType for a invalid input?', 'comment_created': datetime.datetime(2020, 7, 27, 3, 27, 45, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 460628217, 'comment_body': 'Throw `InvalidDataException` ~~or `InvalidEnumArgumentException`~~ instead.', 'comment_created': datetime.datetime(2020, 7, 27, 3, 29, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 460633935, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2020, 7, 27, 3, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 461192799, 'comment_body': 'Is it really supported at the moment? I do not see it in code though I am looking from phone and might be missing it', 'comment_created': datetime.datetime(2020, 7, 27, 21, 54, 16, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 461193475, 'comment_body': 'There is a lot of duplication between this doc and XML. Maybe we should move detailed docs into a separate doc and link them.\n\nIt does not block this PR, can be done later. Docs need update for v3 anyway ', 'comment_created': datetime.datetime(2020, 7, 27, 21, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 461294641, 'comment_body': 'Indeed. I am also thinking its more user friendly. Anyway if we move into `winsw.github.io` then we can present that in much more user friendly way.', 'comment_created': datetime.datetime(2020, 7, 28, 3, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 461297364, 'comment_body': 'I guess we are talking about [this](https://github.com/buddhikac96/winsw/blob/9dd7fb4d93055a582628ce8d963b1016d9715c38/src/Core/WinSWCore/Configuration/YamlConfiguration.cs#L500)?? ', 'comment_created': datetime.datetime(2020, 7, 28, 3, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 461585316, 'comment_body': 'Nope. Syntax like `  <executable>%BASE%\\myExecutable.exe</executable>` in XML when the variable is actually used in other fields. This is what `Environment variable expansion` means', 'comment_created': datetime.datetime(2020, 7, 28, 13, 37, 7, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 461592420, 'comment_body': '```suggestion\r\nActual samples are also being published as a part of releases on GitHub and NuGet.\r\n```', 'comment_created': datetime.datetime(2020, 7, 28, 13, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 461594112, 'comment_body': '`Read more. . . ` looks weird.', 'comment_created': datetime.datetime(2020, 7, 28, 13, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 461605432, 'comment_body': '```suggestion\r\nActual samples are also being published as part of releases on GitHub and NuGet.\r\n```\r\n\r\n/cc @oleg-nenashev ', 'comment_created': datetime.datetime(2020, 7, 28, 14, 3, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 462051408, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2020, 7, 29, 5, 43, 41, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 462205789, 'comment_body': 'I am also not a native speaker :( \r\nI think we will be doing a major cleanup for v3 anyway', 'comment_created': datetime.datetime(2020, 7, 29, 10, 40, 46, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}]","[{'commit_sha': 'e236f90a2d979bed691e6aef306867cd425b0a4c', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeaa4f9ebbe1eb47b28655bcea58a451623d375b', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38a3799aa7b728963131530c8a13302974ff0895', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1558af0848e4011f08c2248e188232edebe67048', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319e437206ad13f5bbf8cb37f4d3149d247ccc3b', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15e8e719291d3d886aa0a837e47b1785363fa81a', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c7b6e649e6f91ec24ddf3792d02a777297e2dc9', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '447c29d392c9fdbf2e8e68a7a919688c289b5568', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dd7fb4d93055a582628ce8d963b1016d9715c38', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40ba08512e406c5095b99c02184e6770a4ba2130', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5451aa8b6df910b4638d9530a234ad1dcc7d5d6e', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef9cc7af8f9c20c33e9e6b5c7fb2520ed111feeb', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}]",Buddhika Chathuranga,28675970,vmbckscc456@gmail.com,User,,63,,54,52
464673262,YAML support for extension,"Windows Service Wrapper includes extensions. Those extensions are also should be configured externally. Currently, extension support for XML configuration. Under GSoC 2020, I am updating internal extensions for YAML support. This pull request contains the implementation for the YAML configurations support for Extensions.  

**Tasks List**

- [x] - Parse extension configuration from YAML
- [x] - Update extension interface to support both XML and YAML
- [x] - Documentation
- [x] - Unit Test


**Sample YAML Configuration file for extension configurations**

```YAML
extensions:
    - id: killOnStartup
      enabled: yes
      classname: WinSW.Plugins.RunawayProcessKiller.RunawayProcessKillerExtension
      settings:
            pidfile: '%BASE%\pid.txt'
            stopTimeOut: 5000
            StoprootFirst: false
    - id: mapNetworDirs
      enabled: yes
      classname: WinSW.Plugins.SharedDirectoryMapper.SharedDirectoryMapper
      settings:
            mapping:
                - enabled: false
                  label: N 
                  uncpath: \\UNC    
                - enabled: false
                  label: M
                  uncpath: \\UNC2
```

",True,638,https://api.github.com/repos/winsw/winsw/pulls/638,https://github.com/winsw/winsw/pull/638,closed,339,12,16,8,7,35,1,0,[{'name': 'enhancement'}],2020-08-07 15:41:53+00:00,2020-08-21 01:36:40+00:00,1158887.0,"13 days, 9:54:47","[{'comment_id': 467343640, 'comment_body': 'Remember to remove all `Console.WriteLine` when you finish this.', 'comment_created': datetime.datetime(2020, 8, 8, 1, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 467362795, 'comment_body': 'Thanks for reminding! ', 'comment_created': datetime.datetime(2020, 8, 8, 5, 1, 19, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 467793261, 'comment_body': '```suggestion\r\nname: Jenkins Agent\r\n```', 'comment_created': datetime.datetime(2020, 8, 10, 9, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 467793355, 'comment_body': '```suggestion\r\narguments: -Xrs  -jar \\""""%BASE%\\\\agent.jar\\"""" -jnlpUrl ...\r\n```', 'comment_created': datetime.datetime(2020, 8, 10, 9, 43, 6, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 467795943, 'comment_body': ""Don't use `new List<T>(0)` when you already know the count."", 'comment_created': datetime.datetime(2020, 8, 10, 9, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 467797440, 'comment_body': 'Check the index first.', 'comment_created': datetime.datetime(2020, 8, 10, 9, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 467798221, 'comment_body': 'Also remove the backslashes before quotes.', 'comment_created': datetime.datetime(2020, 8, 10, 9, 53, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 468585235, 'comment_body': 'Would it be possible to pass a real class instead of `object` here? It defeats type checks', 'comment_created': datetime.datetime(2020, 8, 11, 13, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 468585648, 'comment_body': ""Throw error about unsupported configuration mode by default? I'd guess the XML support is a bad pattern to follow here"", 'comment_created': datetime.datetime(2020, 8, 11, 13, 38, 35, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 468585967, 'comment_body': 'same as for class', 'comment_created': datetime.datetime(2020, 8, 11, 13, 39, 3, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 468586528, 'comment_body': 'Strong type check here?', 'comment_created': datetime.datetime(2020, 8, 11, 13, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 468587158, 'comment_body': 'Wrap into a WinSW exception type? ', 'comment_created': datetime.datetime(2020, 8, 11, 13, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 468587747, 'comment_body': 'Typo. Such checks are not needed if you enforce strong types on the API level', 'comment_created': datetime.datetime(2020, 8, 11, 13, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 468587847, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2020, 8, 11, 13, 41, 40, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 468588162, 'comment_body': 'Type check should be here IMHO', 'comment_created': datetime.datetime(2020, 8, 11, 13, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 471731050, 'comment_body': 'Reminder :)', 'comment_created': datetime.datetime(2020, 8, 17, 19, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 471731502, 'comment_body': 'Not very helpful. Would it make sense  to keep the number of extension in the list?', 'comment_created': datetime.datetime(2020, 8, 17, 19, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 471731679, 'comment_body': 'Add ID here for diagnosability?', 'comment_created': datetime.datetime(2020, 8, 17, 19, 36, 36, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 471731737, 'comment_body': 'Add ID here for diagnosability?', 'comment_created': datetime.datetime(2020, 8, 17, 19, 36, 43, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 471732418, 'comment_body': 'add check for ""1"" ?', 'comment_created': datetime.datetime(2020, 8, 17, 19, 38, 8, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 471882267, 'comment_body': 'As per [Boolean Language-Independent Type for YAML™ Version 1.1 ](https://yaml.org/type/bool.html):\r\n\r\n```\r\n y|Y|yes|Yes|YES|n|N|no|No|NO\r\n|true|True|TRUE|false|False|FALSE\r\n|on|On|ON|off|Off|OFF\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 2, 49, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 471882885, 'comment_body': 'One of `List<T>` constructors accepts the capacity.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 471907585, 'comment_body': ""sorry. it's not clear to me the use case of having a number of extension??"", 'comment_created': datetime.datetime(2020, 8, 18, 4, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 471931648, 'comment_body': 'why here need a capacity??\r\n', 'comment_created': datetime.datetime(2020, 8, 18, 5, 56, 43, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 471937435, 'comment_body': 'The default capacity is 16.', 'comment_created': datetime.datetime(2020, 8, 18, 6, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 471940002, 'comment_body': 'YAML service descriptor\r\n\r\nSuch comments are just worse than none.', 'comment_created': datetime.datetime(2020, 8, 18, 6, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 471966214, 'comment_body': 'why does it matter since we foreach through the list? I am really not getting this point :( ', 'comment_created': datetime.datetime(2020, 8, 18, 7, 20, 1, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 473191535, 'comment_body': 'This was not fully addressed. I am fine with leaving it as is and creating a GitHub issue for a follow-up improvement', 'comment_created': datetime.datetime(2020, 8, 19, 17, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 473193235, 'comment_body': 'It slightly increases the memory consumption, because it is unlikely that we have 16+ extensions defined in the config. Autoscaling will be also inefficient. At the same time, none of that causes real issues with performance, so it is rather about code housekeeping', 'comment_created': datetime.datetime(2020, 8, 19, 17, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 473193809, 'comment_body': '```suggestion\r\n                throw new InvalidDataException(""Cannot configure the extension: Input YAML object is not a dictionary"");\r\n```', 'comment_created': datetime.datetime(2020, 8, 19, 17, 11, 17, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 473193935, 'comment_body': '```suggestion\r\n                throw new InvalidDataException(""Cannot configure the extension: Input YAML object is not a dictionary"");\r\n```', 'comment_created': datetime.datetime(2020, 8, 19, 17, 11, 28, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 473581972, 'comment_body': 'The code is not throwing this anymore. I wrap the YAML object with a class?', 'comment_created': datetime.datetime(2020, 8, 20, 4, 31, 10, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 473584252, 'comment_body': 'Great! With that, I found this\r\n**Constructs a List. The list is initially empty and has a capacity of zero. Upon adding the first element to the list the capacity is increased to 16, and then increased in multiples of two as required.**\r\nIt is a new thing for me!!!! Thank you so much both of you!!!!!', 'comment_created': datetime.datetime(2020, 8, 20, 4, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 474395577, 'comment_body': 'I am not sure what is missing??', 'comment_created': datetime.datetime(2020, 8, 21, 4, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 475058030, 'comment_body': 'Right, all `true` options are supported', 'comment_created': datetime.datetime(2020, 8, 22, 7, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}]","[{'commit_sha': '8c4241369ce859a3dee22509a2b1e89d14a4b96b', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fc681af1413a7478f6bd5a611856d0bf753ef07', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcec99c26125a3ff64a363160b09509ec1fde607', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42df5eeff9c8a420e712b2b50aba5a024cb8a5bd', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8013ab3d9d24d734a34a4cdc49516fb1f1342e1c', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566fc7e1453ef7e852a269229fae12aab37071d5', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '362ea03104276c564934b861f7f17000ea316835', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f7047012abb6f6079d0a1ce7a0d252c02a37a59', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}]",Buddhika Chathuranga,28675970,vmbckscc456@gmail.com,User,,63,,54,52
468160558,YAML configuration support unit test coverage,This PR includes Unit Test coverage for YAML configuration parsing.,True,647,https://api.github.com/repos/winsw/winsw/pulls/647,https://github.com/winsw/winsw/pull/647,closed,445,99,2,4,7,11,1,0,[{'name': 'tests'}],2020-08-14 20:01:00+00:00,2020-08-21 00:05:20+00:00,533060.0,"6 days, 4:04:20","[{'comment_id': 471121344, 'comment_body': 'Without the analyzer installed in this repo these directives should not be committed.\r\n\r\nAlso, please remove those which has been merged into the code base.', 'comment_created': datetime.datetime(2020, 8, 16, 14, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 471121605, 'comment_body': 'Starting the string on the next line increases readability.', 'comment_created': datetime.datetime(2020, 8, 16, 14, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 471121671, 'comment_body': ""It doesn't make sense to include unrelated setting entries."", 'comment_created': datetime.datetime(2020, 8, 16, 14, 48, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 471227446, 'comment_body': 'Make sense. But when remove all #pragma warnings, build is failing. How to resolve this?', 'comment_created': datetime.datetime(2020, 8, 17, 4, 37, 15, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 471227629, 'comment_body': 'Tweak your own build environment.', 'comment_created': datetime.datetime(2020, 8, 17, 4, 38, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 471295462, 'comment_body': 'You added back all removed items when ""resolving conflicts"".', 'comment_created': datetime.datetime(2020, 8, 17, 7, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 471924356, 'comment_body': 'If we are talking about Visual Studio Community defaults, it is not unreasonable to respect its requirements. At the same time, #638 would not pass the build either due to lack of descriptor null reference checks', 'comment_created': datetime.datetime(2020, 8, 18, 5, 33, 36, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 472207051, 'comment_body': 'This is unrelated to Visual Studio or .NET SDK.', 'comment_created': datetime.datetime(2020, 8, 18, 13, 43, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 473188384, 'comment_body': '```suggestion\r\n//FIXME: Remove the build env specific warning suppression from the codebase\r\n#pragma warning disable S2372 // Exceptions should not be thrown from property getters\r\n```', 'comment_created': datetime.datetime(2020, 8, 19, 17, 3, 27, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 473469418, 'comment_body': '```\r\nSingle line comment should begin with a space.\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 0, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 474058589, 'comment_body': '```suggestion\r\n// FIXME: Remove the build env specific warning suppression from the codebase\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 15, 11, 9, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}]","[{'commit_sha': 'ab9f33d9885d8659a36980812e5f7e905d7a34f9', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c390ac5889757bbcfb5ccb33ef38698cfce774b7', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aff592702752cc518852da5eb5e3f40ccca2c8d', 'committer_username': 'oleg-nenashev', 'committer_name': 'Oleg Nenashev', 'committer_email': 'o.v.nenashev@gmail.com', 'commit_date': datetime.datetime(2012, 12, 9, 9, 37, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc2504d848846bce194ad1ff14000c0cb58b5ede', 'committer_username': 'oleg-nenashev', 'committer_name': 'Oleg Nenashev', 'committer_email': 'o.v.nenashev@gmail.com', 'commit_date': datetime.datetime(2012, 12, 9, 9, 37, 58, tzinfo=datetime.timezone.utc)}]",Buddhika Chathuranga,28675970,vmbckscc456@gmail.com,User,,63,,54,52
471965686,YAML extension support documentation,"This PR includes documentation for Yaml configuration extension support.

Fixes https://github.com/winsw/winsw/issues/654",True,655,https://api.github.com/repos/winsw/winsw/pulls/655,https://github.com/winsw/winsw/pull/655,closed,52,5,3,2,2,3,1,0,[{'name': 'documentation'}],2020-08-22 09:37:03+00:00,2020-08-22 10:51:15+00:00,4452.0,1:14:12,"[{'comment_id': 475073233, 'comment_body': 'yamlConfigFile.md', 'comment_created': datetime.datetime(2020, 8, 22, 9, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 475073677, 'comment_body': 'Configuration -> configuration', 'comment_created': datetime.datetime(2020, 8, 22, 9, 50, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 475073695, 'comment_body': 'Sample -> sample', 'comment_created': datetime.datetime(2020, 8, 22, 9, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}]","[{'commit_sha': '3a4eff33b832607b5de3ea7b37da3dbb06ad9feb', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ad6640b524152d06b3c378704b14d3a8c6a4d61', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}]",Buddhika Chathuranga,28675970,vmbckscc456@gmail.com,User,,63,,54,52
435201445,New CLI,"Windows Service Wrapper will update for YAML Configuration support as a part o GSoC 2020. So user need to to explicitly specify the configuration file on startup. Old CLI was in only commands manner and new CLI update to Commands and Options manner. User can specify config file, skip schema validation etc with WinSW commands such as install, start etc. 

- [x]  CLI arguments parsing with [commandline](https://github.com/commandlineparser/commandline)
- [ ] Unit Test",False,547,https://api.github.com/repos/winsw/winsw/pulls/547,https://github.com/winsw/winsw/pull/547,open,748,599,14,37,5,29,1,0,[{'name': 'gsoc'}],2020-06-16 13:06:58+00:00,,0.0,,"[{'comment_id': 440853195, 'comment_body': 'Should it be generalized in a base class? Many commands will need this parameter', 'comment_created': datetime.datetime(2020, 6, 16, 13, 33, 59, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 441769766, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2020, 6, 17, 19, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 445439595, 'comment_body': '💭 Is there no better way than using `switch`?', 'comment_created': datetime.datetime(2020, 6, 25, 9, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 451286847, 'comment_body': 'Something that I can guess is method overloading. But I think it will reduce the code readability?', 'comment_created': datetime.datetime(2020, 7, 8, 5, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 451287995, 'comment_body': 'Method overriding.', 'comment_created': datetime.datetime(2020, 7, 8, 5, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 451297971, 'comment_body': 'Take local functions of commands (`install`, `start` . . . ) into particular CLI utility class with a common name like `RunCommand` and call that method inside the `Run` method?', 'comment_created': datetime.datetime(2020, 7, 8, 5, 49, 47, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 451299385, 'comment_body': 'https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/polymorphism', 'comment_created': datetime.datetime(2020, 7, 8, 5, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 453041639, 'comment_body': 'This class contains not only an option, but also the execution implementation. I would recommend calling it `CLICommand`, and also renaming other classes in a similar way', 'comment_created': datetime.datetime(2020, 7, 10, 19, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 453042889, 'comment_body': 'There is a lot of duplication with the `StopOption`  Maybe one class could inherit another and slightly extend the method', 'comment_created': datetime.datetime(2020, 7, 10, 19, 39, 2, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 453043082, 'comment_body': 'Same, a lot of duplication', 'comment_created': datetime.datetime(2020, 7, 10, 19, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 453044827, 'comment_body': 'I am still waiting to see a prototype of how it resolves the .NET 4.0 support requirements in the binaries', 'comment_created': datetime.datetime(2020, 7, 10, 19, 43, 50, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 453161400, 'comment_body': ""This doesn't work if the path contains spaces."", 'comment_created': datetime.datetime(2020, 7, 11, 6, 7, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 453161470, 'comment_body': 'Duplicate package reference.', 'comment_created': datetime.datetime(2020, 7, 11, 6, 8, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 453161510, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2020, 7, 11, 6, 8, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 453161729, 'comment_body': 'Please revert BOM changes.', 'comment_created': datetime.datetime(2020, 7, 11, 6, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 453161780, 'comment_body': ':warning: Breaking change: `CommandLineParser` is not going to support forward slashes.', 'comment_created': datetime.datetime(2020, 7, 11, 6, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 453162083, 'comment_body': ':warning: Breaking change: `CommandLineParser` is not going to support forward slashes.', 'comment_created': datetime.datetime(2020, 7, 11, 6, 16, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 453271713, 'comment_body': ""what are the BOM changes? I don't know that :("", 'comment_created': datetime.datetime(2020, 7, 12, 5, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 453763201, 'comment_body': ""When overriding the method doesn't I have to implement whole method in again subclass? Is there any pattern on something I can follow to do that?"", 'comment_created': datetime.datetime(2020, 7, 13, 16, 8, 55, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 454216494, 'comment_body': 'As I know internally those arguments are not used. I doubt that which kind of argument array will be fit to this. At the moment this is the argument structure.\r\n`winsw install --configFile <filepath> --elevated true -s true`\r\n\r\nHow should the items be separated here. I found in the commandline library. There is no way to unprase the object back into arguments array. So I think I have to manually convert it?\r\n', 'comment_created': datetime.datetime(2020, 7, 14, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 454217142, 'comment_body': 'Updated this. Review will help!', 'comment_created': datetime.datetime(2020, 7, 14, 9, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 454218633, 'comment_body': '> internally those arguments are not used.\n\nOK. Then passing an empty array would be preferred.', 'comment_created': datetime.datetime(2020, 7, 14, 9, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 454218978, 'comment_body': 'Simply revert this line.', 'comment_created': datetime.datetime(2020, 7, 14, 9, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 454219807, 'comment_body': ""This argument has been deprecated. We don't need a new one for it."", 'comment_created': datetime.datetime(2020, 7, 14, 9, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 454221016, 'comment_body': 'Update in https://github.com/winsw/winsw/pull/547/commits/cfacc38720922d1068f4334cba1c81936c069d62. Review will help to proceed!', 'comment_created': datetime.datetime(2020, 7, 14, 9, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 454222018, 'comment_body': '@buddhikac96 We still support net40 in v2.', 'comment_created': datetime.datetime(2020, 7, 14, 9, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 454225534, 'comment_body': 'Make sense! I will do so.', 'comment_created': datetime.datetime(2020, 7, 14, 9, 27, 44, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 454289097, 'comment_body': ""I think this deprecating mean we just don't allowing users to elevate manually and still we elevate internally before execute the command? So is this update to Program class works?\r\n\r\nRemove elevate option from CLICommand should be included.\r\n\r\n```c#\r\n            if (Environment.OSVersion.Version.Major == 5)\r\n            {\r\n                // Windows XP\r\n                elevated = true;\r\n            }\r\n            else\r\n            {\r\n                elevated = IsProcessElevated();\r\n            }\r\n```"", 'comment_created': datetime.datetime(2020, 7, 14, 11, 29, 29, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 456766786, 'comment_body': ""I just took a look at the docs. Why don't you use the generic version of `WithParsed` in the first place?"", 'comment_created': datetime.datetime(2020, 7, 18, 8, 39, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}]","[{'commit_sha': 'c0806825c903b8523a863d530347ad7db85fb8b8', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af860f389020528918128a90e50961c8c0738a7d', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c29ace52d87bcf5f5cf77367504b0957afbc162', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19ce718d004417fee94591e7c0b575ff1541dcbc', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49a84123a265f21e8239b6b187ebda74a2a5b64a', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7f5928a1a8a448965420a7fb2c870c2388c3317', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '556b24f363edb341db7a07171ae47458740a1273', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98420494e10fc4bfc522b9991cedb467bb607cc2', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cd9746cc6b6d5a7d8dddc470fcda7df133f628e', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c78e6171352c0cc9000f6b2b5e0154133827075', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '554a52ffa350e8b54139c3dcb2e87fb23909f9fb', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c35e01b313dd8026254bf223e4aa229c2bee387e', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bad6e35e32cc8bb52a48aad8dc44ef1d3bfa0425', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c30482ce647d6f649cbb6dc0a9edd606030bcb61', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c43d0fea64e5de7f7d728043075adb88b9517c2', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a56e4510c000212674bc915298313ad7dcaf122', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4e7c4aea8e544a3192f8903719bdeeb84a7d44b', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3333aed03a29d3fc7c68e5b319e28accaf722ac0', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fad68e535fe20d70f463820f5e3244f1448e009e', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0126ad06279a3acaf066ba15c192ad1fa6e16314', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36106062ac45df140c6b51cd8f4a949409d293eb', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2b497d692c6eecf4f60bf12eeb7a121104c0457', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdbeee8dddbf06f9b58725062ca4f52aed9866f2', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37f08d77379811b0bcd1ffb5aa27aa61000bb1cc', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e79206b00045bb934924958e6e1da7330fe8d6cb', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe2698d0df4815afa627ac64ff65fb5abe819076', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfacc38720922d1068f4334cba1c81936c069d62', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d96d5bc70d13b0272279580c072fa36ff9dc8ad', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ec1c15550817483050b8feed6fcd45a9ec8fa81', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75c495f79dc57707ca86d160b8d963075575b264', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce2a2850067185d6bd2d59ca32482c69b0cfe22f', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dae211b5ff6651eebd8a91b8ded314b333e02c0', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4919d112139bf672f35400cf1b552ef6e9b2107e', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '785c7ce9fc6571c3f318b674e663ecd036747c3a', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3a8b51fe7e5a84141d958fd6515dd612ef52506', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d6a184a7391ef06775c13b604803bd0d7535ae5', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f664f0b5b333e0ba8f5440bb8c5f1f830de16a2', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}]",Buddhika Chathuranga,28675970,vmbckscc456@gmail.com,User,,63,,54,52
395293061,XML schema validation with XSD,"Added XML schema validation for config file. 
I used [this](https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xml-schema-xsd-validation-with-xmlschemaset) approach from .Net docs. 
But validation not working properly. Even though schema is not matched it doesn't throw any error.",False,460,https://api.github.com/repos/winsw/winsw/pulls/460,https://github.com/winsw/winsw/pull/460,open,457,4,5,46,6,51,1,0,[{'name': 'enhancement'}],2020-03-29 18:03:34+00:00,,0.0,,"[{'comment_id': 399964081, 'comment_body': '`XmlReader.Read` reads only the **next node** but not the entire document.', 'comment_created': datetime.datetime(2020, 3, 30, 6, 56, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 400184064, 'comment_body': 'Now we read the file twice: once here and once in the constructor. Try to reduce the number of reads to one.', 'comment_created': datetime.datetime(2020, 3, 30, 13, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 400333718, 'comment_body': 'Reading and validation combined', 'comment_created': datetime.datetime(2020, 3, 30, 16, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 403061912, 'comment_body': ""I'm wondering if we need to throw for warnings at all. A warning is typically issued when there is no schema to validate a particular element, e.g. after we add a new setting but do not update the XSD."", 'comment_created': datetime.datetime(2020, 4, 3, 14, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 403458685, 'comment_body': 'Yes. Its better to move on with just Errors.', 'comment_created': datetime.datetime(2020, 4, 4, 11, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 403651876, 'comment_body': ""We can't ship the XSD as a physical file. Have a look around [Assembly.GetManifestResourceStream](https://docs.microsoft.com/dotnet/api/system.reflection.assembly.getmanifestresourcestream)."", 'comment_created': datetime.datetime(2020, 4, 5, 5, 33, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 407318719, 'comment_body': '```suggestion\r\n\r\n```', 'comment_created': datetime.datetime(2020, 4, 13, 4, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 407319093, 'comment_body': '```suggestion\r\n<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"">\r\n```', 'comment_created': datetime.datetime(2020, 4, 13, 5, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 407319185, 'comment_body': '```suggestion\r\n<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"">\r\n```', 'comment_created': datetime.datetime(2020, 4, 13, 5, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 407319326, 'comment_body': 'Why rethrow?', 'comment_created': datetime.datetime(2020, 4, 13, 5, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 407319462, 'comment_body': 'Why rethrow?', 'comment_created': datetime.datetime(2020, 4, 13, 5, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 413501190, 'comment_body': ""`BasePath` is `null` in the test because it's not assigned in `ServiceDescriptor.FromXML` but this shouldn't be a blocker. `XmlReader` can be constructed from text as well."", 'comment_created': datetime.datetime(2020, 4, 23, 4, 32, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 414288046, 'comment_body': ""Now let's focus on the test. The validator's job is to detect invalid XML pieces and throw exceptions for them. In order to verify it works there needs to be a test to ensure that it does throw an exception.\n\nYou can write an assertion like `Assert.That(() => DoSomething(), Throws.TypeOf<XmlException>());`."", 'comment_created': datetime.datetime(2020, 4, 24, 4, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 414378325, 'comment_body': ""Thank you for the description. You are so helping. I'm truly grateful of your help. \r\nHere this part is not clear to me. I'm testing here, whether my function which is tested is thrown any **XmlException**. If this throws any Exception then my test will be passed, otherwise test will be failed. So I think I need to feed XML string as the test case, which fails the validation, then exception will be thrown and Test will pass. Am I correct?"", 'comment_created': datetime.datetime(2020, 4, 24, 8, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 414391044, 'comment_body': 'Right. You feed an invalid XML config string (valid XML but invalid WinSW config) and expect the validator to throw.', 'comment_created': datetime.datetime(2020, 4, 24, 8, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 414418736, 'comment_body': 'This is the XSD, I have provided.\r\n\r\n```\r\n<xs:element name=""service"">\r\n    <xs:complexType>\r\n      <xs:sequence>\r\n        <xs:element name=""id"" type=""xs:string""/>\r\n        <xs:element name=""name"" type=""xs:string""/>\r\n        <xs:element name=""description"" type=""xs:string""/>\r\n        <xs:element name=""executable"" type=""xs:string""/>\r\n      </xs:sequence>\r\n    </xs:complexType>\r\n  </xs:element>\r\n```\r\n\r\nBut still validation don\'t catch error in below XML.\r\n\r\n```\r\n<id>\r\n  <service>myapp</service>\r\n  <name>MyApp Service (powered by WinSW)</name>\r\n  <description>This service is a service created from a minimal configuration</description>\r\n</id>\r\n```\r\n\r\nSo how to what kind of a XML will fail in this condition. I think obviously this configuration xml is invalid. But XML validator not catching it.\r\n ', 'comment_created': datetime.datetime(2020, 4, 24, 9, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 414421744, 'comment_body': ""Hmm, it's definitely odd, right? Just a heads-up, the `XmlReaderSettings` you create won't automatically apply to newly constructed `XmlReader`s."", 'comment_created': datetime.datetime(2020, 4, 24, 9, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 414636081, 'comment_body': 'Ooh.. I have missed it.  I change method like this. I create a new reader with the reader from the argument and set the settings to that reader, then use that reader to read XML.\r\n\r\n```\r\npublic void ValidateAndLoadXmlSchema(XmlReader reader)\r\n        {\r\n            XmlReaderSettings settings =  new XmlReaderSettings();\r\n\r\n            settings.ValidationType = ValidationType.Schema;\r\n            settings.ValidationEventHandler += new ValidationEventHandler(XmlValidationEventHandler);\r\n\r\n            Assembly a = Assembly.GetExecutingAssembly();\r\n\r\n            using (Stream schemaStream = a.GetManifestResourceStream(""winsw.XMLSchema.xsd""))\r\n            {\r\n                using (XmlReader schemaReader = XmlReader.Create(schemaStream))\r\n                {\r\n                    settings.Schemas.Add(null, schemaReader);\r\n                }\r\n            }\r\n\r\n            var new_reader = XmlReader.Create(reader, settings);\r\n\r\n            dom.Load(new_reader);\r\n        }\r\n```\r\nBut still it fails to catch the validation error.', 'comment_created': datetime.datetime(2020, 4, 24, 14, 50, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 414972668, 'comment_body': '`dom` has been loaded in `ServiceDescriptor.FromXML` so it refuses to load again.', 'comment_created': datetime.datetime(2020, 4, 25, 4, 11, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 415012768, 'comment_body': ""I add another constructor to ServiceDescriptor and it works. But, since default ctor already there I create it with taking integer as a argument and I pass 0 into that in test and run XML validation method from ServiceDescriptor object created with that constructor. But I don't know whether it is a good practice. Shall I commit that ?\r\n"", 'comment_created': datetime.datetime(2020, 4, 25, 8, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 429771465, 'comment_body': 'No longer needed?', 'comment_created': datetime.datetime(2020, 5, 25, 7, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 429771767, 'comment_body': 'It would be great to add some documentation to the fields so that it can be displayed in the XML editor like VS Code', 'comment_created': datetime.datetime(2020, 5, 25, 7, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 429929936, 'comment_body': ""Could you please exclude this file from the PR? I've made some changes in #418."", 'comment_created': datetime.datetime(2020, 5, 25, 13, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 430152731, 'comment_body': '@oleg-nenashev  What sort of details should be added in `xmlConfigFile.md`? I think adding whole schema file will be an overkill. Will just specifying that we are using embedded XSD schema file to validate XML config file and user can follow that schema file be enough ?', 'comment_created': datetime.datetime(2020, 5, 26, 4, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 430175829, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 5, 26, 6, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 430889599, 'comment_body': '> @oleg-nenashev What sort of details should be added in xmlConfigFile.md? I think adding whole schema file will be an overkill. Will just specifying that we are using embedded XSD schema file to validate XML config file and user can follow that schema file be enough ?\r\n\r\n@buddhikac96 adding a reference to the schema and briefly explaining how to use it?', 'comment_created': datetime.datetime(2020, 5, 27, 6, 41, 33, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 430889854, 'comment_body': 'See another comment for the response. This comment stands, I am not sure why this additional XSD is needed', 'comment_created': datetime.datetime(2020, 5, 27, 6, 42, 8, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 430895170, 'comment_body': 'Would be great! I will.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 431230520, 'comment_body': ""The current *.gitignore* should have excluded almost everything unnecessary. It's safe to delete files that are not in the list."", 'comment_created': datetime.datetime(2020, 5, 27, 15, 26, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 431845511, 'comment_body': 'OK, will wait for it before merging', 'comment_created': datetime.datetime(2020, 5, 28, 13, 44, 44, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 431846900, 'comment_body': 'ping @buddhikac96 ', 'comment_created': datetime.datetime(2020, 5, 28, 13, 46, 27, tzinfo=datetime.timezone.utc), 'commenter': 'oleg-nenashev', 'type': 'User'}, {'comment_id': 432281367, 'comment_body': 'ping @buddhikac96 ', 'comment_created': datetime.datetime(2020, 5, 29, 6, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 432281997, 'comment_body': '```suggestion\r\n        public static XmlDocument XmlValidation(TextReader xml)\r\n\r\n```', 'comment_created': datetime.datetime(2020, 5, 29, 6, 33, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 432282632, 'comment_body': '`git checkout master -- src/winsw.sln` will do the work.', 'comment_created': datetime.datetime(2020, 5, 29, 6, 35, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 432282935, 'comment_body': '```suggestion\r\n## XML schema validation\r\n```', 'comment_created': datetime.datetime(2020, 5, 29, 6, 36, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 432283256, 'comment_body': '```suggestion\r\nWe are using embedded [XSD](../src/Core/WinSWCore/XMLSchema.xsd) file to validate XML configurations file schema. You can find sample XSD schema file [here.](../examples/windowsservice.xsd). You can follow this schema file when creating the XML configuration file.\r\n```', 'comment_created': datetime.datetime(2020, 5, 29, 6, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 432467931, 'comment_body': '> DO give methods names that are verbs or verb phrases.', 'comment_created': datetime.datetime(2020, 5, 29, 13, 3, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 433092484, 'comment_body': ""If it wasn't clear enough: could you please revert this file?"", 'comment_created': datetime.datetime(2020, 6, 1, 7, 54, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 433096387, 'comment_body': 'I prefer that. How could I do that?', 'comment_created': datetime.datetime(2020, 6, 1, 8, 4, 51, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 433097377, 'comment_body': '`git checkout master -- .gitignore`\r\n`git clean -d -n` (and then remove `-n`)', 'comment_created': datetime.datetime(2020, 6, 1, 8, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 433110448, 'comment_body': '`git clean -d -n`   \r\nThis command twice with -n and without -n ?', 'comment_created': datetime.datetime(2020, 6, 1, 8, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 433110638, 'comment_body': '```suggestion\r\nWe are using embedded [XSD](../src/Core/WinSWCore/XMLSchema.xsd) file to validate XML configurations file schema. You can find sample XSD schema file [here](../examples/windowsservice.xsd). You can follow this schema file when creating the XML configuration file.\r\n```', 'comment_created': datetime.datetime(2020, 6, 1, 8, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 433111595, 'comment_body': 'Up to you. `-n` is short for `--dry-run` and prevents you from accidentally removing files.', 'comment_created': datetime.datetime(2020, 6, 1, 8, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 433112156, 'comment_body': '```suggestion\r\nWe are using embedded [XSD](../src/Core/WinSWCore/XMLSchema.xsd) file to validate XML configurations file schema. You can follow this schema file when creating the XML configuration file.\r\n```\r\n\r\nThere is only one XSD file now.', 'comment_created': datetime.datetime(2020, 6, 1, 8, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 433114551, 'comment_body': ""> to validate XML configurations file schema\r\n\r\nI don't think this is correct. Are we validating the schema or using the schema to validate XML?"", 'comment_created': datetime.datetime(2020, 6, 1, 8, 47, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 433114825, 'comment_body': '```suggestion\r\n            Assert.That(() => ServiceDescriptor.ValidateXMLSchema(new StringReader(seedXml)), Throws.TypeOf<XmlException>());\r\n\r\n```', 'comment_created': datetime.datetime(2020, 6, 1, 8, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 433116291, 'comment_body': ""Sorry for bad English. Should be change. I'll update."", 'comment_created': datetime.datetime(2020, 6, 1, 8, 51, 16, tzinfo=datetime.timezone.utc), 'commenter': 'buddhikac96', 'type': 'User'}, {'comment_id': 433131329, 'comment_body': '```suggestion\r\nWe are using embedded [XSD schema file](../src/Core/WinSWCore/XMLSchema.xsd) to validate XML configuration files. You can follow this schema file when creating the XML configuration file.\r\n```', 'comment_created': datetime.datetime(2020, 6, 1, 9, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 433136310, 'comment_body': '```suggestion\r\n            Assert.That(() => ServiceDescriptor.FromXML(seedXml), Throws.TypeOf<XmlException>());\r\n```', 'comment_created': datetime.datetime(2020, 6, 1, 9, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 470969309, 'comment_body': 'Just a side note, this is misleading. #269', 'comment_created': datetime.datetime(2020, 8, 15, 11, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}, {'comment_id': 470969388, 'comment_body': ""I suggest removing `sleeptime` and `waithint` from docs as they don't need to be visible to users at all."", 'comment_created': datetime.datetime(2020, 8, 15, 11, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nxtn', 'type': 'User'}]","[{'commit_sha': 'b38a66412838bce1bdae12b5927c77386c54d73b', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d251e6d26393b2a01ece1380eebf203b5040e8e', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af42904281c5689f81989879c58140b180698aa4', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b96d32789a48fe1601b86d8c21cb5d2551712c13', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4c32a87780cd79aa315691da107330284e31576', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bc768e92ffb4d312f03da24efd6c0f8165fa15d', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5821bd9b921b8c5dcd66486bf915e1bd3dd37a4f', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6140e9fe56c4223d977e063a5faaafb73acdd935', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6abbf6ff2dc582e1339f67dd9a83f78bc687abe7', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17524cd391f53a684a9e718cce0ed443af5b67ac', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9b5c50a674c596ea121e5a0ce01007cfbb053af', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6496b97108c3c63dab8bb9081206f04e9d68dc66', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4597cfa8ceb561552abefcac64a11aa6e49336ad', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aca03f892415947dc9fc2a1c20a32aa885b92549', 'committer_username': 'nxtn', 'committer_name': 'Next Turn', 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 19, 2, 57, 27, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea74b8e5ab3b798ab14077840be1a9fef016de4b', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5caf6145bbf2a5a4450d8a89c22b30a3872514d4', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e7ddf4480aaf2d15edcf295fd54af6ac0e67e15', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2740d5eb9e36b4bb627e0666210150ca614fba2', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a56f2290e971de418fd684e0462683bb1f431d60', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd961fec4d4b4e7c5f126290decb70b91df7fab6', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bd5cfde5b29b0e01316229331989f22eb317188', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36fad25507dc16488baa581b912b90ca72443e6e', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af11c7602353a4e263df4bbf1d70b50ea150741f', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66dfe7b43cbd8da50eee94f81d7395e73a8e49b6', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2331f442e24790e017c674474351ef269db46b95', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6d6af308db5e7d10d05a8eb2acc8dc2376d71a7', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c78c5eed3223172221021f20669b060ec454bd0', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d51f8a75a5b0ac0609b04e4c0daf4af29d8bfa5', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ba4e36adc9c3f03a51717b64375343cf7cdbb7a', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '505b4679b70f023bec67b9283239d4993521a04d', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d1d561d42eb6f457bcd681e1e1c4faac332bd91', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c7658133da8bb9000e911e4829b83f88d317606', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8518e8b11d87fb47ce6f4173d7d35d61087a2be', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53e66038a1feba52ef7c95550208ece1abe715ac', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bf2c00ceaea5688e2762e5e0967c0861d6193a7', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f47d98937fda501d5291a1dfd4756d7956477872', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9a73eebb8a2a1da807bc2a86956c565d36f2645', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff829d27871cb083502fc89803034182a13b9f7e', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bc966fdff2a2713b82ea14dc1a5263589dc6cb3', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7720752747b97ab212d9c7631f9a0f6e4954afc', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01c6a54032c2b568c83eb1bb6eae729829774ece', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f978c30e5ae24a7bfc91d0fd6ba669bd4e4bf6d6', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdddc8de92bab3d5a07c9e5b96c5ac1a14a909cc', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7b5571040b446d1f353210c4ec044a5104fafa2', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '554b6fb2ce53ef70f192cad5afa2586db941c0ca', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd7c8a49848f54100de222751a631b97d3aa12e6', 'committer_username': 'buddhikac96', 'committer_name': 'Buddhika Chathuranga', 'committer_email': 'vmbckscc456@gmail.com', 'commit_date': datetime.datetime(2017, 5, 13, 17, 15, 59, tzinfo=datetime.timezone.utc)}]",Buddhika Chathuranga,28675970,vmbckscc456@gmail.com,User,,63,,54,52

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
500093,winsw,winsw/winsw,C#,1549,11830,243,59,809,222,12,28,"[{'id': 477551974, 'number': 678, 'closed': datetime.datetime(2020, 12, 28, 15, 39, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 2, 3, 56, 55, tzinfo=datetime.timezone.utc), 'time_taken': 10150970.0, 'time_delta': '117 days, 11:42:50', 'additions': 379, 'deletions': 732, 'state': 'closed'}, {'id': 477529283, 'number': 677, 'closed': datetime.datetime(2020, 12, 28, 12, 16, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 2, 2, 31, 53, tzinfo=datetime.timezone.utc), 'time_taken': 10143851.0, 'time_delta': '117 days, 9:44:11', 'additions': 330, 'deletions': 347, 'state': 'closed'}, {'id': 476474284, 'number': 675, 'closed': datetime.datetime(2020, 9, 15, 14, 19, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 18, 55, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1279399.0, 'time_delta': '14 days, 19:23:19', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 472077933, 'number': 656, 'closed': datetime.datetime(2020, 8, 27, 9, 50, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 23, 5, 34, 32, tzinfo=datetime.timezone.utc), 'time_taken': 360952.0, 'time_delta': '4 days, 4:15:52', 'additions': 376, 'deletions': 3, 'state': 'closed'}, {'id': 471965686, 'number': 655, 'closed': datetime.datetime(2020, 8, 22, 10, 51, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 22, 9, 37, 3, tzinfo=datetime.timezone.utc), 'time_taken': 4452.0, 'time_delta': '1:14:12', 'additions': 52, 'deletions': 5, 'state': 'closed'}, {'id': 468160558, 'number': 647, 'closed': datetime.datetime(2020, 8, 21, 0, 5, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 20, 1, tzinfo=datetime.timezone.utc), 'time_taken': 533060.0, 'time_delta': '6 days, 4:04:20', 'additions': 445, 'deletions': 99, 'state': 'closed'}, {'id': 465060025, 'number': 641, 'closed': datetime.datetime(2020, 8, 10, 11, 23, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 18, 21, 24, tzinfo=datetime.timezone.utc), 'time_taken': 147751.0, 'time_delta': '1 day, 17:02:31', 'additions': 27, 'deletions': 60, 'state': 'closed'}, {'id': 464673262, 'number': 638, 'closed': datetime.datetime(2020, 8, 21, 1, 36, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 7, 15, 41, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1158887.0, 'time_delta': '13 days, 9:54:47', 'additions': 339, 'deletions': 12, 'state': 'closed'}, {'id': 455016452, 'number': 596, 'closed': datetime.datetime(2020, 7, 29, 12, 0, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 10, 8, 50, tzinfo=datetime.timezone.utc), 'time_taken': 611510.0, 'time_delta': '7 days, 1:51:50', 'additions': 719, 'deletions': 154, 'state': 'closed'}, {'id': 447928351, 'number': 573, 'closed': datetime.datetime(2020, 7, 14, 4, 27, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 17, 13, 51, tzinfo=datetime.timezone.utc), 'time_taken': 126823.0, 'time_delta': '1 day, 11:13:43', 'additions': 51, 'deletions': 14, 'state': 'closed'}, {'id': 440951253, 'number': 565, 'closed': datetime.datetime(2020, 7, 7, 4, 7, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 27, 19, 18, 22, tzinfo=datetime.timezone.utc), 'time_taken': 809371.0, 'time_delta': '9 days, 8:49:31', 'additions': 1258, 'deletions': 222, 'state': 'closed'}, {'id': 435201445, 'number': 547, 'closed': None, 'created': datetime.datetime(2020, 6, 16, 13, 6, 58, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 748, 'deletions': 599, 'state': 'open'}, {'id': 426619996, 'number': 543, 'closed': datetime.datetime(2020, 7, 21, 16, 57, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 14, 23, 16, tzinfo=datetime.timezone.utc), 'time_taken': 4242852.0, 'time_delta': '49 days, 2:34:12', 'additions': 2213, 'deletions': 1230, 'state': 'closed'}, {'id': 419018496, 'number': 534, 'closed': datetime.datetime(2020, 5, 28, 13, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 16, 20, 23, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1012750.0, 'time_delta': '11 days, 17:19:10', 'additions': 49, 'deletions': 0, 'state': 'closed'}, {'id': 395312856, 'number': 461, 'closed': datetime.datetime(2020, 7, 7, 18, 37, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 29, 20, 13, 11, tzinfo=datetime.timezone.utc), 'time_taken': 8634265.0, 'time_delta': '99 days, 22:24:25', 'additions': 258, 'deletions': 74, 'state': 'closed'}, {'id': 395293061, 'number': 460, 'closed': None, 'created': datetime.datetime(2020, 3, 29, 18, 3, 34, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 457, 'deletions': 4, 'state': 'open'}, {'id': 365243555, 'number': 370, 'closed': datetime.datetime(2020, 6, 2, 8, 13, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 21, 11, 1, 27, tzinfo=datetime.timezone.utc), 'time_taken': 11481101.0, 'time_delta': '132 days, 21:11:41', 'additions': 0, 'deletions': 4, 'state': 'closed'}]"
