pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
665254599,Desktop: Expose prompt to plugins as a command,"<!--

Please prefix the title with the platform you are targetting:

Here are some examples of good titles:

- Desktop: Resolves #123: Added new setting to change font
- Mobile, Desktop: Fixes #456: Fixed config screen error
- All: Resolves #777: Made synchronisation faster

And here's an explanation of the title format:

- ""Desktop"" for the Windows/macOS/Linux app (Electron app)
- ""Mobile"" for the mobile app (or ""Android"" / ""iOS"" if the pull request only applies to one of the mobile platforms)
- ""CLI"" for the CLI app

If it's two platforms, separate them with commas - ""Desktop, Mobile"" or if it's for all platforms, prefix with ""All"".

If it's not related to any platform (such as a translation, change to the documentation, etc.), simply don't add a platform.

Then please append the issue that you've addressed or fixed. Use ""Resolves #123"" for new features or improvements and ""Fixes #123"" for bug fixes.

AND PLEASE READ THE GUIDE: https://github.com/laurent22/joplin/blob/dev/CONTRIBUTING.md

-->

Adds a command to show the prompt and get the user input so that it can be used by plugins.
",True,5058,https://api.github.com/repos/laurent22/joplin/pulls/5058,https://github.com/laurent22/joplin/pull/5058,closed,49,0,5,4,3,12,0,0,[],2021-06-08 20:11:12+00:00,2021-06-10 23:26:17+00:00,184505.0,"2 days, 3:15:05","[{'comment_id': 647846641, 'comment_body': 'Please remove this line - only literal strings can be wrapped in _(). It means the calling code will have to do their own translations.', 'comment_created': datetime.datetime(2021, 6, 8, 22, 48, 40, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 647847215, 'comment_body': ""I'd put that before `resolve` otherwise if the calling code changes something to the UI, for example going to a different screen, you might call setState on an unmounted component."", 'comment_created': datetime.datetime(2021, 6, 8, 22, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 647847802, 'comment_body': ""As the name says, these commands are those that show up in the menu, but this one shouldn't so you can remove this."", 'comment_created': datetime.datetime(2021, 6, 8, 22, 51, 31, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 647853040, 'comment_body': ""Would you mind defining an interface for the config? It's not too hard to do and it would make the command more usable. It would start like this:\r\n\r\n```typescript\r\ninterface PromptConfig {\r\n    label: string;\r\n    description?: string;\r\n    // etc.\r\n}\r\n```\r\n\r\nIf you search for `promptOptions:` in the codebase you'll find the possible properties."", 'comment_created': datetime.datetime(2021, 6, 8, 23, 4, 20, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 648639918, 'comment_body': 'Oh, ok. done', 'comment_created': datetime.datetime(2021, 6, 9, 19, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 648640141, 'comment_body': 'Got it. Done.', 'comment_created': datetime.datetime(2021, 6, 9, 19, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 648640393, 'comment_body': 'Right, done.', 'comment_created': datetime.datetime(2021, 6, 9, 19, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 648640481, 'comment_body': 'Sure, done.', 'comment_created': datetime.datetime(2021, 6, 9, 19, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 648649698, 'comment_body': ""Your code is correct, but TypeScript has various issues with fields defined as string options like this. So instead it's better to create an enum type that has all the possible values.\r\n\r\nSo `inputType?: PromptInputType`\r\n\r\nAnd then:\r\n\r\n```typescript\r\nenum PromptInputType {\r\n    Dropdown = 'dropdown',\r\n    // etc.\r\n}\r\n```"", 'comment_created': datetime.datetime(2021, 6, 9, 20, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 648678340, 'comment_body': 'Ah okay. Done.', 'comment_created': datetime.datetime(2021, 6, 9, 20, 55, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 648707944, 'comment_body': ""Use tabs. Could you make sure you have the commit hook installed as it's quite annoying having to ask for something like this. Or maybe you made changes directly on GitHub without testing which is even worse."", 'comment_created': datetime.datetime(2021, 6, 9, 21, 48, 18, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 648857822, 'comment_body': ""Done. That's weird, I don't know why this happened. Usually, the hook runs every time for me. I guess I committed while being in `packages/app-desktop` directory. Maybe that's why the hooks didn't run."", 'comment_created': datetime.datetime(2021, 6, 10, 5, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}]","[{'commit_sha': '807eee938094d9f32e2cbf906cf84add591a2531', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33d1a967e63b0f3440e6db4bae7367db43742fb1', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32832c8350390eb4256349cdc7ad000c52af613e', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a414664ac40ec68328d07d3e03c193f301c2fcb1', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849
676546971,Dekstop: Refactor: Remove templates feature,"<!--

Please prefix the title with the platform you are targetting:

Here are some examples of good titles:

- Desktop: Resolves #123: Added new setting to change font
- Mobile, Desktop: Fixes #456: Fixed config screen error
- All: Resolves #777: Made synchronisation faster

And here's an explanation of the title format:

- ""Desktop"" for the Windows/macOS/Linux app (Electron app)
- ""Mobile"" for the mobile app (or ""Android"" / ""iOS"" if the pull request only applies to one of the mobile platforms)
- ""CLI"" for the CLI app

If it's two platforms, separate them with commas - ""Desktop, Mobile"" or if it's for all platforms, prefix with ""All"".

If it's not related to any platform (such as a translation, change to the documentation, etc.), simply don't add a platform.

Then please append the issue that you've addressed or fixed. Use ""Resolves #123"" for new features or improvements and ""Fixes #123"" for bug fixes.

AND PLEASE READ THE GUIDE: https://github.com/laurent22/joplin/blob/dev/CONTRIBUTING.md

-->

This PR removes the templates feature from Joplin as a separate plugin for that is being developed here (https://github.com/joplin/plugin-templates).
",True,5115,https://api.github.com/repos/laurent22/joplin/pulls/5115,https://github.com/laurent22/joplin/pull/5115,closed,3,221,15,2,7,6,0,0,[],2021-06-23 19:10:08+00:00,2021-06-25 16:49:36+00:00,164368.0,"1 day, 21:39:28","[{'comment_id': 657434180, 'comment_body': 'Please remove anything related to templates from the code. That includes this variable and the signature of this function. Also make sure you update all code that calls ""newNote"", such as the ""newTodo"" command.', 'comment_created': datetime.datetime(2021, 6, 23, 20, 21, 16, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 657435763, 'comment_body': ""Did you test the app after having made your changes? Because if you remove this, there will be two successive two separators in the menu, so you need to remove one separator. Please test the code. Check all the parts where you've changed something."", 'comment_created': datetime.datetime(2021, 6, 23, 20, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 657436220, 'comment_body': 'Same here. Two separators.', 'comment_created': datetime.datetime(2021, 6, 23, 20, 24, 48, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 658262205, 'comment_body': 'Oh ok, missed it. Done.', 'comment_created': datetime.datetime(2021, 6, 24, 20, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 658262597, 'comment_body': ""Actually, I did test it and I couldn't see two separators in the UI. But anyways, removed it.\r\n![Screenshot_20210625_002635](https://user-images.githubusercontent.com/36989112/123328535-52081880-d559-11eb-9fee-6fa3f7971647.png)\r\n"", 'comment_created': datetime.datetime(2021, 6, 24, 20, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 658262661, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 24, 20, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}]","[{'commit_sha': '310b765fcf0e231be1d0fb7def3b4593c374e380', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bb1e6d38f8f65e2ab55bc7cb40f0ba28a7fc9a6', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849
677349175,Default templates feature,,True,2,https://api.github.com/repos/joplin/plugin-templates/pulls/2,https://github.com/joplin/plugin-templates/pull/2,closed,247,85,9,7,1,15,0,0,[],2021-06-24 18:39:53+00:00,2021-07-05 19:15:36+00:00,952543.0,"11 days, 0:35:43","[{'comment_id': 658575532, 'comment_body': 'The point of the new ""registerSettings"" call (as opposed to ""registerSetting"") was to limit the number of ipc calls between the plugin and the app, however if you make separate calls, each with only one property, we\'re back to square one :) So could you group the calls instead?\r\n\r\nThis should work:\r\n\r\n```typescript\r\nawait joplin.settings.registerSettings({\r\n\t""defaultTodoTemplateId"": {\r\n\t\tpublic: false,\r\n\t\ttype: SettingItemType.String,\r\n\t\tvalue: null,\r\n\t\tlabel: ""Default to-do template ID""\r\n\t},\r\n\t""defaultNoteTemplateId"": {\r\n\t\tpublic: false,\r\n\t\ttype: SettingItemType.String,\r\n\t\tvalue: null,\r\n\t\tlabel: ""Default note template ID""\r\n\t},\r\n});\r\n```', 'comment_created': datetime.datetime(2021, 6, 25, 8, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 659362520, 'comment_body': 'Ohk. Noted.', 'comment_created': datetime.datetime(2021, 6, 27, 18, 59, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 660066444, 'comment_body': 'You might want to consider combining this and the above command for code re-usability sake. You could create a function that takes the setting name, and a dialog box message and call it from here and the default template command.', 'comment_created': datetime.datetime(2021, 6, 28, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 660066631, 'comment_body': 'Same comment as above.', 'comment_created': datetime.datetime(2021, 6, 28, 19, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 660067095, 'comment_body': 'Consider fixing the typo in the function name\r\n```diff\r\n- getUserTempateSelection\r\n+ getUserTemplateSelection\r\n```', 'comment_created': datetime.datetime(2021, 6, 28, 19, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 660069526, 'comment_body': ""You should log the error here. You don't have to do anything with it, but it will help with troubleshooting later."", 'comment_created': datetime.datetime(2021, 6, 28, 19, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 662819586, 'comment_body': 'You need to escape this variable using HTML entities, for example using a lib like this: https://www.npmjs.com/package/html-entities', 'comment_created': datetime.datetime(2021, 7, 2, 8, 1, 59, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 662819767, 'comment_body': 'Same here, this variable needs to be escaped.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 663345464, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 3, 9, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 663345467, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 3, 9, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 663345499, 'comment_body': 'Nice catch! Done!', 'comment_created': datetime.datetime(2021, 7, 3, 9, 57, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 663345515, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 3, 9, 57, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 663350422, 'comment_body': ""I think we can do this later on. Because the code is repeated just two times and it's only 2 lines of code. Also, that would improve the complexity of the code, so I don't think it's worth doing right now."", 'comment_created': datetime.datetime(2021, 7, 3, 10, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 663350437, 'comment_body': 'Same comment as above.', 'comment_created': datetime.datetime(2021, 7, 3, 10, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 664096649, 'comment_body': ""Fair enough, you're the owner of this codebase so these calls are ultimately yours."", 'comment_created': datetime.datetime(2021, 7, 5, 19, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}]","[{'commit_sha': 'a8fa7b6e2f266c73bac6f0c417dc4098e1011bb2', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd826b858adc75c234316f9c86d394601db1150d6', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '310f3635335dcff0883ff45e19989859e8149cde', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b6487006cc64fe2a63faee400652c7c3f68ea7b', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '388e40e40c81efe6e719da3b0e560a473e5e5c2a', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db56a014b750caae68bfb4855eeb82f387625e3d', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56f9ebe887e29cd77c27648b81e666ac3e4fe27d', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849
677349175,Default templates feature,,True,2,https://api.github.com/repos/joplin/plugin-templates/pulls/2,https://github.com/joplin/plugin-templates/pull/2,closed,247,85,9,7,1,15,0,0,[],2021-06-24 18:39:53+00:00,2021-07-05 19:15:36+00:00,952543.0,"11 days, 0:35:43","[{'comment_id': 658575532, 'comment_body': 'The point of the new ""registerSettings"" call (as opposed to ""registerSetting"") was to limit the number of ipc calls between the plugin and the app, however if you make separate calls, each with only one property, we\'re back to square one :) So could you group the calls instead?\r\n\r\nThis should work:\r\n\r\n```typescript\r\nawait joplin.settings.registerSettings({\r\n\t""defaultTodoTemplateId"": {\r\n\t\tpublic: false,\r\n\t\ttype: SettingItemType.String,\r\n\t\tvalue: null,\r\n\t\tlabel: ""Default to-do template ID""\r\n\t},\r\n\t""defaultNoteTemplateId"": {\r\n\t\tpublic: false,\r\n\t\ttype: SettingItemType.String,\r\n\t\tvalue: null,\r\n\t\tlabel: ""Default note template ID""\r\n\t},\r\n});\r\n```', 'comment_created': datetime.datetime(2021, 6, 25, 8, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 659362520, 'comment_body': 'Ohk. Noted.', 'comment_created': datetime.datetime(2021, 6, 27, 18, 59, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 660066444, 'comment_body': 'You might want to consider combining this and the above command for code re-usability sake. You could create a function that takes the setting name, and a dialog box message and call it from here and the default template command.', 'comment_created': datetime.datetime(2021, 6, 28, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 660066631, 'comment_body': 'Same comment as above.', 'comment_created': datetime.datetime(2021, 6, 28, 19, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 660067095, 'comment_body': 'Consider fixing the typo in the function name\r\n```diff\r\n- getUserTempateSelection\r\n+ getUserTemplateSelection\r\n```', 'comment_created': datetime.datetime(2021, 6, 28, 19, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 660069526, 'comment_body': ""You should log the error here. You don't have to do anything with it, but it will help with troubleshooting later."", 'comment_created': datetime.datetime(2021, 6, 28, 19, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 662819586, 'comment_body': 'You need to escape this variable using HTML entities, for example using a lib like this: https://www.npmjs.com/package/html-entities', 'comment_created': datetime.datetime(2021, 7, 2, 8, 1, 59, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 662819767, 'comment_body': 'Same here, this variable needs to be escaped.', 'comment_created': datetime.datetime(2021, 7, 2, 8, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 663345464, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 3, 9, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 663345467, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 3, 9, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 663345499, 'comment_body': 'Nice catch! Done!', 'comment_created': datetime.datetime(2021, 7, 3, 9, 57, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 663345515, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 3, 9, 57, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 663350422, 'comment_body': ""I think we can do this later on. Because the code is repeated just two times and it's only 2 lines of code. Also, that would improve the complexity of the code, so I don't think it's worth doing right now."", 'comment_created': datetime.datetime(2021, 7, 3, 10, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 663350437, 'comment_body': 'Same comment as above.', 'comment_created': datetime.datetime(2021, 7, 3, 10, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 664096649, 'comment_body': ""Fair enough, you're the owner of this codebase so these calls are ultimately yours."", 'comment_created': datetime.datetime(2021, 7, 5, 19, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}]","[{'commit_sha': 'a8fa7b6e2f266c73bac6f0c417dc4098e1011bb2', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd826b858adc75c234316f9c86d394601db1150d6', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '310f3635335dcff0883ff45e19989859e8149cde', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b6487006cc64fe2a63faee400652c7c3f68ea7b', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '388e40e40c81efe6e719da3b0e560a473e5e5c2a', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db56a014b750caae68bfb4855eeb82f387625e3d', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56f9ebe887e29cd77c27648b81e666ac3e4fe27d', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849
687309342,Parser: Handlebars integration,"- Implement `parser` using handlebars.
- Made sure all the current templates are compatible with this plugin.
",True,3,https://api.github.com/repos/joplin/plugin-templates/pulls/3,https://github.com/joplin/plugin-templates/pull/3,closed,121,9,5,3,0,5,0,0,[],2021-07-11 10:13:20+00:00,2021-07-11 19:24:37+00:00,33077.0,9:11:17,"[{'comment_id': 667524313, 'comment_body': ""I'm going to miss the old parser. Simple, but it works."", 'comment_created': datetime.datetime(2021, 7, 11, 19, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 667527034, 'comment_body': ""By the way is there a reason why all the dependencies are under devDependencies? Doesn't it mean that the libs won't be packaged with the plugin when you publish?"", 'comment_created': datetime.datetime(2021, 7, 11, 19, 42, 20, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 667527572, 'comment_body': ""Won't webpack automatically include it in the bundled js? "", 'comment_created': datetime.datetime(2021, 7, 11, 19, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 667528057, 'comment_body': 'I don\'t know what webpack does, but devDependencies as the name says is for development - so for example the TypeScript package, eslint, etc. However packages you actually used in the plugin such as  handlebars or moment should be under the ""dependencies"" key.', 'comment_created': datetime.datetime(2021, 7, 11, 19, 53, 14, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 667528454, 'comment_body': ""Oh ok, I'll create a PR for correcting this."", 'comment_created': datetime.datetime(2021, 7, 11, 19, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}]","[{'commit_sha': '8053a5cf555f1aabc4de52611e2d813bce44f153', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd54db56835220bde9d623d8d79b5be40ee3f47f', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97545ffb0b2211f23947f75ead379e48a5dbbdd2', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849
685491225,Desktop: Add a banner asking users to install templates plugin,"<!--

Please prefix the title with the platform you are targetting:

Here are some examples of good titles:

- Desktop: Resolves #123: Added new setting to change font
- Mobile, Desktop: Fixes #456: Fixed config screen error
- All: Resolves #777: Made synchronisation faster

And here's an explanation of the title format:

- ""Desktop"" for the Windows/macOS/Linux app (Electron app)
- ""Mobile"" for the mobile app (or ""Android"" / ""iOS"" if the pull request only applies to one of the mobile platforms)
- ""CLI"" for the CLI app

If it's two platforms, separate them with commas - ""Desktop, Mobile"" or if it's for all platforms, prefix with ""All"".

If it's not related to any platform (such as a translation, change to the documentation, etc.), simply don't add a platform.

Then please append the issue that you've addressed or fixed. Use ""Resolves #123"" for new features or improvements and ""Fixes #123"" for bug fixes.

AND PLEASE READ THE GUIDE: https://github.com/laurent22/joplin/blob/dev/CONTRIBUTING.md

-->

 Add a banner asking users to install templates plugin. It checks for two things

- If the user has at least one template.
- User has not already installed the templates plugin.",True,5164,https://api.github.com/repos/laurent22/joplin/pulls/5164,https://github.com/laurent22/joplin/pull/5164,closed,47,1,3,4,2,10,0,0,[],2021-07-07 20:29:39+00:00,2021-07-09 09:46:05+00:00,134186.0,"1 day, 13:16:26","[{'comment_id': 665733972, 'comment_body': 'Could you move this code to a class method and call it from here?', 'comment_created': datetime.datetime(2021, 7, 7, 22, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 665734354, 'comment_body': 'onViewPluginScreen', 'comment_created': datetime.datetime(2021, 7, 7, 22, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 665735406, 'comment_body': '> The template feature has been moved to a plugin called ""Templates""\r\n\r\nPlease don\'t translate as it\'s temporary (remove the `_()`)', 'comment_created': datetime.datetime(2021, 7, 7, 22, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 665735489, 'comment_body': '""Install plugin"". And remove `_()`', 'comment_created': datetime.datetime(2021, 7, 7, 22, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 665736579, 'comment_body': ""Come on - look at the code around a bit. There's like a hundred variables in camel case here, and you set yours with underscores..."", 'comment_created': datetime.datetime(2021, 7, 7, 22, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 666524784, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 8, 21, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 666524826, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 8, 21, 18, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 666524869, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 8, 21, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 666524908, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 8, 21, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 666525040, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 8, 21, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}]","[{'commit_sha': 'e092e3e2727f633a0b1daec273bc241598b092f4', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ed1ba3266e5092cb3070785136490947a960d03', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '157282b8596321e7e7312877d27a9e31d772aeab', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62907162bf8de3eb7062a3964283f43581b0bb1a', 'committer_username': 'laurent22', 'committer_name': 'Laurent Cozic', 'committer_email': None, 'commit_date': datetime.datetime(2011, 12, 26, 4, 20, 45, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849
690176733,Add support for template variables,,True,5,https://api.github.com/repos/joplin/plugin-templates/pulls/5,https://github.com/joplin/plugin-templates/pull/5,closed,243,30,8,8,1,22,0,0,[],2021-07-14 19:45:06+00:00,2021-07-26 08:08:22+00:00,994996.0,"11 days, 12:23:16","[{'comment_id': 670149223, 'comment_body': 'Just remembered, I need to use encode from `html-entities` here too.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 41, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 671900867, 'comment_body': ""I said this before, but when you have identical code duplicated across 5 different places in the codebase, it's probably time to move it in to a function."", 'comment_created': datetime.datetime(2021, 7, 18, 21, 34, 48, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 672087396, 'comment_body': 'Yup, got it. Actually, at that time there were only 2 places of repetition, but now this definitely can be refactored. Thanks for pointing it out.', 'comment_created': datetime.datetime(2021, 7, 19, 8, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 673342039, 'comment_body': 'Missing `encode()`?', 'comment_created': datetime.datetime(2021, 7, 20, 17, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 673343750, 'comment_body': ""I don't think the `<br/>` are necessary? Since you are giving class names to your variable html, you could add the gap with CSS, which would make for cleaner HTML code."", 'comment_created': datetime.datetime(2021, 7, 20, 17, 37, 3, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 674332323, 'comment_body': 'Yes, thanks for pointing it out.', 'comment_created': datetime.datetime(2021, 7, 21, 20, 44, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 674332551, 'comment_body': 'Got it, will try without `<br/>`. ', 'comment_created': datetime.datetime(2021, 7, 21, 20, 44, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 675473634, 'comment_body': ""Is there any reason why the template should be null in this case and not just an empty string? If you just make it an empty string I guess the rest of you code should work, shouldn't it? And then you won't need to have null checks and `template: string | null` in all the function definitions."", 'comment_created': datetime.datetime(2021, 7, 23, 10, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 675481341, 'comment_body': '`template` could be null in a scenario where the user cancels the template selection dialog. That function supports getting different properties of the note like `id, body, title` etc., I am also planning to support getting complete note object using that function. So, returning an empty string there wrong to me.\r\n\r\nTalking about `string | null` type, If I replace all of these with `string`. The plugin would still build successfully. I just added `string | null` so that the developer would know that receiving a `null` value is possible.\r\n\r\nWhat do you think?\r\n', 'comment_created': datetime.datetime(2021, 7, 23, 10, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 675812968, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 23, 19, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 675813068, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 23, 19, 13, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 675813152, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 23, 19, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 676111508, 'comment_body': ""I'm talking about the current version of the function. If you plan to modify it later on, then you'll change the types, input and so on and that's a different topic. For now, as it is, I don't think the function is right.\r\n\r\nIn your code you are not doing any null check as far as I can see, so you're essentially treating the output of this function as `string`, not `string | null`, yet you return null. So again my question is: if you change it to return an empty string, would your code still work? I think it would, and that way you can get rid of the unnecessary `string | null`.\r\n\r\nIn general, you should avoid making special cases as it means you'll need to add conditionals to all the code that deal with the output of this function. So if you make it consistently return a string instead, the rest of the code is likely to be simpler too."", 'comment_created': datetime.datetime(2021, 7, 25, 8, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 676202379, 'comment_body': 'Oh okay, got it. I actually misunderstood earlier. Done!', 'comment_created': datetime.datetime(2021, 7, 25, 21, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 676280474, 'comment_body': 'I wonder if it makes more sense to use the yaml list syntax for this? I think this will affect how your parser works, but should be a lot better for users. For example\r\nThis\r\n```yaml\r\nfruit: enum(apple, orange, banana)\r\n```\r\n\r\nWould become this\r\n```yaml\r\nfruit:\r\n  - apple\r\n  - orange\r\n  - banana\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 4, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 676285599, 'comment_body': 'Try to make this something actionable for the user. For example\r\n```\r\n""There was an error parsing this template, please review it and try again.""\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 4, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 676285794, 'comment_body': ""This isn't a requirement for this pull request, but it's something you should think about and perhaps bring to the community."", 'comment_created': datetime.datetime(2021, 7, 26, 4, 39, 39, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 676373309, 'comment_body': ""Hmm, in terms of implementation I don't think it's hard to implement. But the way the feature is currently implemented it will create some inconsistency in case we want to add more type of variables in future.\r\n\r\nIn terms of UX, I want to understand the reason you said\r\n\r\n> but should be a lot better for users\r\n\r\nBecause according to me, the users will have to do an equal amount of work in both cases they will have to look to the plugin documentation to see how should they declare enum template variables since it's not a standard.\r\n\r\nBut, I agree on the fact that as it's something like a list it seems more semantically correct to declare the options in the list syntax.\r\n\r\nWhat do you think? "", 'comment_created': datetime.datetime(2021, 7, 26, 7, 53, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 676373926, 'comment_body': ""Actually, I have another idea. Let's create an issue to keep track of this. And in the future, we can support both these syntaxes."", 'comment_created': datetime.datetime(2021, 7, 26, 7, 54, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 676378089, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 26, 8, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 676383279, 'comment_body': ""> What do you think?\r\n\r\nMy worry is that most users have never heard of an enum, so it's nonsense to them. But a list will make sense to them.\r\n\r\nTracking this in a seperate issue is a good idea, I'm looking forward to hearing your ideas."", 'comment_created': datetime.datetime(2021, 7, 26, 8, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 676385238, 'comment_body': 'Ah, okay. Got it, I always forget that a large fraction of Joplin users are non-programmers and enum is kind of a technical word. Sure, will create an issue for this.', 'comment_created': datetime.datetime(2021, 7, 26, 8, 11, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}]","[{'commit_sha': 'dc835d2e76fbb597048b046c0612fc5cee52bad7', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99d10a202c5f477b1188696955b0b9344a9e8a29', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2bc1fbfb2e47eb46a0e380802c4d31a97150b9', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a56206a86bcc00dddc4e64900df34285cbe8e628', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a8e0f49f7c9bd6c610460cc15922264a7ad9c5b', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5612f3650de78ae0986d550bc35b58e39c287f40', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fa787c91f1adba2c5ae29a556ae4cd4fc2668b5', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56a109ee8d48f1b7893ee4bf34d4859d508c7fd0', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849
690176733,Add support for template variables,,True,5,https://api.github.com/repos/joplin/plugin-templates/pulls/5,https://github.com/joplin/plugin-templates/pull/5,closed,243,30,8,8,1,22,0,0,[],2021-07-14 19:45:06+00:00,2021-07-26 08:08:22+00:00,994996.0,"11 days, 12:23:16","[{'comment_id': 670149223, 'comment_body': 'Just remembered, I need to use encode from `html-entities` here too.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 41, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 671900867, 'comment_body': ""I said this before, but when you have identical code duplicated across 5 different places in the codebase, it's probably time to move it in to a function."", 'comment_created': datetime.datetime(2021, 7, 18, 21, 34, 48, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 672087396, 'comment_body': 'Yup, got it. Actually, at that time there were only 2 places of repetition, but now this definitely can be refactored. Thanks for pointing it out.', 'comment_created': datetime.datetime(2021, 7, 19, 8, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 673342039, 'comment_body': 'Missing `encode()`?', 'comment_created': datetime.datetime(2021, 7, 20, 17, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 673343750, 'comment_body': ""I don't think the `<br/>` are necessary? Since you are giving class names to your variable html, you could add the gap with CSS, which would make for cleaner HTML code."", 'comment_created': datetime.datetime(2021, 7, 20, 17, 37, 3, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 674332323, 'comment_body': 'Yes, thanks for pointing it out.', 'comment_created': datetime.datetime(2021, 7, 21, 20, 44, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 674332551, 'comment_body': 'Got it, will try without `<br/>`. ', 'comment_created': datetime.datetime(2021, 7, 21, 20, 44, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 675473634, 'comment_body': ""Is there any reason why the template should be null in this case and not just an empty string? If you just make it an empty string I guess the rest of you code should work, shouldn't it? And then you won't need to have null checks and `template: string | null` in all the function definitions."", 'comment_created': datetime.datetime(2021, 7, 23, 10, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 675481341, 'comment_body': '`template` could be null in a scenario where the user cancels the template selection dialog. That function supports getting different properties of the note like `id, body, title` etc., I am also planning to support getting complete note object using that function. So, returning an empty string there wrong to me.\r\n\r\nTalking about `string | null` type, If I replace all of these with `string`. The plugin would still build successfully. I just added `string | null` so that the developer would know that receiving a `null` value is possible.\r\n\r\nWhat do you think?\r\n', 'comment_created': datetime.datetime(2021, 7, 23, 10, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 675812968, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 23, 19, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 675813068, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 23, 19, 13, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 675813152, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 23, 19, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 676111508, 'comment_body': ""I'm talking about the current version of the function. If you plan to modify it later on, then you'll change the types, input and so on and that's a different topic. For now, as it is, I don't think the function is right.\r\n\r\nIn your code you are not doing any null check as far as I can see, so you're essentially treating the output of this function as `string`, not `string | null`, yet you return null. So again my question is: if you change it to return an empty string, would your code still work? I think it would, and that way you can get rid of the unnecessary `string | null`.\r\n\r\nIn general, you should avoid making special cases as it means you'll need to add conditionals to all the code that deal with the output of this function. So if you make it consistently return a string instead, the rest of the code is likely to be simpler too."", 'comment_created': datetime.datetime(2021, 7, 25, 8, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 676202379, 'comment_body': 'Oh okay, got it. I actually misunderstood earlier. Done!', 'comment_created': datetime.datetime(2021, 7, 25, 21, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 676280474, 'comment_body': 'I wonder if it makes more sense to use the yaml list syntax for this? I think this will affect how your parser works, but should be a lot better for users. For example\r\nThis\r\n```yaml\r\nfruit: enum(apple, orange, banana)\r\n```\r\n\r\nWould become this\r\n```yaml\r\nfruit:\r\n  - apple\r\n  - orange\r\n  - banana\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 4, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 676285599, 'comment_body': 'Try to make this something actionable for the user. For example\r\n```\r\n""There was an error parsing this template, please review it and try again.""\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 4, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 676285794, 'comment_body': ""This isn't a requirement for this pull request, but it's something you should think about and perhaps bring to the community."", 'comment_created': datetime.datetime(2021, 7, 26, 4, 39, 39, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 676373309, 'comment_body': ""Hmm, in terms of implementation I don't think it's hard to implement. But the way the feature is currently implemented it will create some inconsistency in case we want to add more type of variables in future.\r\n\r\nIn terms of UX, I want to understand the reason you said\r\n\r\n> but should be a lot better for users\r\n\r\nBecause according to me, the users will have to do an equal amount of work in both cases they will have to look to the plugin documentation to see how should they declare enum template variables since it's not a standard.\r\n\r\nBut, I agree on the fact that as it's something like a list it seems more semantically correct to declare the options in the list syntax.\r\n\r\nWhat do you think? "", 'comment_created': datetime.datetime(2021, 7, 26, 7, 53, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 676373926, 'comment_body': ""Actually, I have another idea. Let's create an issue to keep track of this. And in the future, we can support both these syntaxes."", 'comment_created': datetime.datetime(2021, 7, 26, 7, 54, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 676378089, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 26, 8, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 676383279, 'comment_body': ""> What do you think?\r\n\r\nMy worry is that most users have never heard of an enum, so it's nonsense to them. But a list will make sense to them.\r\n\r\nTracking this in a seperate issue is a good idea, I'm looking forward to hearing your ideas."", 'comment_created': datetime.datetime(2021, 7, 26, 8, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 676385238, 'comment_body': 'Ah, okay. Got it, I always forget that a large fraction of Joplin users are non-programmers and enum is kind of a technical word. Sure, will create an issue for this.', 'comment_created': datetime.datetime(2021, 7, 26, 8, 11, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}]","[{'commit_sha': 'dc835d2e76fbb597048b046c0612fc5cee52bad7', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99d10a202c5f477b1188696955b0b9344a9e8a29', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2bc1fbfb2e47eb46a0e380802c4d31a97150b9', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a56206a86bcc00dddc4e64900df34285cbe8e628', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a8e0f49f7c9bd6c610460cc15922264a7ad9c5b', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5612f3650de78ae0986d550bc35b58e39c287f40', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fa787c91f1adba2c5ae29a556ae4cd4fc2668b5', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56a109ee8d48f1b7893ee4bf34d4859d508c7fd0', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849
697293319,Support creating templates only using tags,"This PR does two things.

- Allow creating templates using a tag.
- Remove templates notebook functionality. 

Fixes #10, Fixes #12. ",True,11,https://api.github.com/repos/joplin/plugin-templates/pulls/11,https://github.com/joplin/plugin-templates/pull/11,closed,78,39,6,4,5,3,0,0,[],2021-07-26 19:28:22+00:00,2021-07-31 18:57:20+00:00,430138.0,"4 days, 23:28:58","[{'comment_id': 680396502, 'comment_body': 'Is this function (and module) needed anymore?', 'comment_created': datetime.datetime(2021, 7, 31, 18, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 680396717, 'comment_body': ""No, they're not thanks for pointing that out. If this is the only review comment, you can merge this pr, I'll remove these functions in the next pr. "", 'comment_created': datetime.datetime(2021, 7, 31, 18, 57, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}, {'comment_id': 680397286, 'comment_body': ""Good to see that we're on the same page. I'm looking forward to the next PR."", 'comment_created': datetime.datetime(2021, 7, 31, 19, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}]","[{'commit_sha': 'beb6d639c80c7afb1cbbd3e1f6fef8ef7a78028e', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5396a4a4ab6962d46caab5e9fd0ab8193f5bf2ea', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4a708161063b081dbf2333358a7a58f6bcd10b', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abd49e36631e32b22007e9ecf253a60f27e6d76c', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849
700843136,Automatically load previous templates,,True,13,https://api.github.com/repos/joplin/plugin-templates/pulls/13,https://github.com/joplin/plugin-templates/pull/13,closed,87,13,4,5,1,2,0,0,[],2021-08-01 06:56:40+00:00,2021-08-02 15:10:59+00:00,116059.0,"1 day, 8:14:19","[{'comment_id': 680561332, 'comment_body': ""Just some grammar changes, I also shortened the first section to simplify it.\r\n```\r\n    `**Templates successfully imported!**\r\n\r\n  Here are some quick tips for getting started with the templates plugin:\r\n  - You can rename this notebook if you want, or shift your templates to any other notebook.\r\n  - All notes or to-dos with the \\`template\\` tag are used as templates.\r\n  - You can delete this readme or notebook if you've shifted your templates to any other notebook.\r\n  - Your templates are still present in your templates directory but are renamed from \\`.md\\` to \\`.md.old\\`.\r\n    - These backups can be delete once you've confirmed that your templates have been safely imported\r\n  - For full documentation and features, please refer to the official [readme](https://github.com/joplin/plugin-templates#readme).`\r\n```"", 'comment_created': datetime.datetime(2021, 8, 1, 20, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'CalebJohn', 'type': 'User'}, {'comment_id': 680730898, 'comment_body': 'done!', 'comment_created': datetime.datetime(2021, 8, 2, 7, 45, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nishantwrp', 'type': 'User'}]","[{'commit_sha': '53e743e5b1825ae2c7c15fad07d1e396d683b6c9', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17869fe8ff8b0a18065bbd99245be4cadaf5602b', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21891f2b181d10090b6f2f8e40de5f36c3f9c1bc', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f15ddd995539170eaade59277cf94afdeed2f2e1', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b47f5375b0135ecfc6fdfd6695e1734f5960e612', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849
704910067,Documentation updates,Fixes #9.,True,14,https://api.github.com/repos/joplin/plugin-templates/pulls/14,https://github.com/joplin/plugin-templates/pull/14,closed,136,15,5,2,0,0,0,0,[],2021-08-05 17:54:26+00:00,2021-08-05 18:40:11+00:00,2745.0,0:45:45,[],"[{'commit_sha': 'b41a9640f00b9124d25a2afdfa89bd178c764673', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78fe7d4b61bc0b427cbb1f9371dc99f4279d50fd', 'committer_username': 'nishantwrp', 'committer_name': 'Nishant Mittal', 'committer_email': 'contact@nishantwrp.com', 'commit_date': datetime.datetime(2018, 3, 2, 11, 24, 44, tzinfo=datetime.timezone.utc)}]",Nishant Mittal,36989112,contact@nishantwrp.com,User,,40,,50,849

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
79162682,joplin,laurent22/joplin,TypeScript,4866,44814,483,642,11779,404,244,9,"[{'id': 685491225, 'number': 5164, 'closed': datetime.datetime(2021, 7, 9, 9, 46, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 20, 29, 39, tzinfo=datetime.timezone.utc), 'time_taken': 134186.0, 'time_delta': '1 day, 13:16:26', 'additions': 47, 'deletions': 1, 'state': 'closed'}, {'id': 676546971, 'number': 5115, 'closed': datetime.datetime(2021, 6, 25, 16, 49, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 19, 10, 8, tzinfo=datetime.timezone.utc), 'time_taken': 164368.0, 'time_delta': '1 day, 21:39:28', 'additions': 3, 'deletions': 221, 'state': 'closed'}, {'id': 665254599, 'number': 5058, 'closed': datetime.datetime(2021, 6, 10, 23, 26, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 20, 11, 12, tzinfo=datetime.timezone.utc), 'time_taken': 184505.0, 'time_delta': '2 days, 3:15:05', 'additions': 49, 'deletions': 0, 'state': 'closed'}, {'id': 617083682, 'number': 4852, 'closed': datetime.datetime(2021, 5, 3, 14, 13, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 16, 20, 1, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1447920.0, 'time_delta': '16 days, 18:12:00', 'additions': 61, 'deletions': 2, 'state': 'closed'}, {'id': 606027702, 'number': 4791, 'closed': datetime.datetime(2021, 4, 8, 9, 30, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 31, 17, 8, 11, tzinfo=datetime.timezone.utc), 'time_taken': 663722.0, 'time_delta': '7 days, 16:22:02', 'additions': 41, 'deletions': 27, 'state': 'closed'}, {'id': 598866820, 'number': 4724, 'closed': datetime.datetime(2021, 3, 29, 8, 40, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 13, 39, 53, tzinfo=datetime.timezone.utc), 'time_taken': 500458.0, 'time_delta': '5 days, 19:00:58', 'additions': 92, 'deletions': 0, 'state': 'closed'}, {'id': 594137363, 'number': 4688, 'closed': datetime.datetime(2021, 3, 24, 1, 22, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 16, 18, 17, 23, tzinfo=datetime.timezone.utc), 'time_taken': 630301.0, 'time_delta': '7 days, 7:05:01', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 591725219, 'number': 4660, 'closed': datetime.datetime(2021, 3, 14, 15, 28, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 12, 14, 29, 50, tzinfo=datetime.timezone.utc), 'time_taken': 176325.0, 'time_delta': '2 days, 0:58:45', 'additions': 24, 'deletions': 1, 'state': 'closed'}]"
371747652,plugin-templates,joplin/plugin-templates,TypeScript,23,163,10,9,136,25,5,2,"[{'id': 1577541238, 'number': 79, 'closed': datetime.datetime(2023, 11, 9, 11, 53, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 28, 12, 54, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1033154.0, 'time_delta': '11 days, 22:59:14', 'additions': 1078, 'deletions': 4, 'state': 'closed'}, {'id': 794051988, 'number': 52, 'closed': datetime.datetime(2021, 12, 3, 16, 46, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 2, 20, 35, 32, tzinfo=datetime.timezone.utc), 'time_taken': 72676.0, 'time_delta': '20:11:16', 'additions': 451, 'deletions': 3, 'state': 'closed'}, {'id': 719772627, 'number': 39, 'closed': datetime.datetime(2021, 8, 26, 18, 21, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 25, 15, 47, 58, tzinfo=datetime.timezone.utc), 'time_taken': 95597.0, 'time_delta': '1 day, 2:33:17', 'additions': 257, 'deletions': 110, 'state': 'closed'}, {'id': 719041235, 'number': 37, 'closed': datetime.datetime(2021, 8, 24, 20, 28, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 20, 27, 49, tzinfo=datetime.timezone.utc), 'time_taken': 18.0, 'time_delta': '0:00:18', 'additions': 16, 'deletions': 17, 'state': 'closed'}, {'id': 719032090, 'number': 36, 'closed': datetime.datetime(2021, 8, 24, 20, 14, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 20, 12, 30, tzinfo=datetime.timezone.utc), 'time_taken': 93.0, 'time_delta': '0:01:33', 'additions': 110, 'deletions': 1, 'state': 'closed'}, {'id': 717205461, 'number': 35, 'closed': datetime.datetime(2021, 8, 24, 20, 15, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 20, 30, 49, tzinfo=datetime.timezone.utc), 'time_taken': 258279.0, 'time_delta': '2 days, 23:44:39', 'additions': 195, 'deletions': 23, 'state': 'closed'}, {'id': 713612562, 'number': 34, 'closed': datetime.datetime(2021, 8, 16, 17, 45, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 17, 19, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1589.0, 'time_delta': '0:26:29', 'additions': 62, 'deletions': 1, 'state': 'closed'}, {'id': 712823985, 'number': 32, 'closed': datetime.datetime(2021, 8, 16, 16, 38, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 18, 53, 25, tzinfo=datetime.timezone.utc), 'time_taken': 164709.0, 'time_delta': '1 day, 21:45:09', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 712813766, 'number': 31, 'closed': datetime.datetime(2021, 8, 15, 6, 16, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 17, 23, 41, tzinfo=datetime.timezone.utc), 'time_taken': 46370.0, 'time_delta': '12:52:50', 'additions': 298, 'deletions': 1, 'state': 'closed'}, {'id': 711339873, 'number': 26, 'closed': datetime.datetime(2021, 8, 13, 5, 22, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 17, 55, 7, tzinfo=datetime.timezone.utc), 'time_taken': 41226.0, 'time_delta': '11:27:06', 'additions': 5582, 'deletions': 2568, 'state': 'closed'}, {'id': 709424239, 'number': 23, 'closed': datetime.datetime(2021, 8, 12, 6, 26, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 18, 42, 50, tzinfo=datetime.timezone.utc), 'time_taken': 42203.0, 'time_delta': '11:43:23', 'additions': 44, 'deletions': 6, 'state': 'closed'}, {'id': 707671879, 'number': 22, 'closed': datetime.datetime(2021, 8, 10, 20, 42, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 20, 25, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1016.0, 'time_delta': '0:16:56', 'additions': 54, 'deletions': 16, 'state': 'closed'}, {'id': 704910067, 'number': 14, 'closed': datetime.datetime(2021, 8, 5, 18, 40, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 17, 54, 26, tzinfo=datetime.timezone.utc), 'time_taken': 2745.0, 'time_delta': '0:45:45', 'additions': 136, 'deletions': 15, 'state': 'closed'}, {'id': 700843136, 'number': 13, 'closed': datetime.datetime(2021, 8, 2, 15, 10, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 6, 56, 40, tzinfo=datetime.timezone.utc), 'time_taken': 116059.0, 'time_delta': '1 day, 8:14:19', 'additions': 87, 'deletions': 13, 'state': 'closed'}, {'id': 697293319, 'number': 11, 'closed': datetime.datetime(2021, 7, 31, 18, 57, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 19, 28, 22, tzinfo=datetime.timezone.utc), 'time_taken': 430138.0, 'time_delta': '4 days, 23:28:58', 'additions': 78, 'deletions': 39, 'state': 'closed'}, {'id': 690176733, 'number': 5, 'closed': datetime.datetime(2021, 7, 26, 8, 8, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 19, 45, 6, tzinfo=datetime.timezone.utc), 'time_taken': 994996.0, 'time_delta': '11 days, 12:23:16', 'additions': 243, 'deletions': 30, 'state': 'closed'}, {'id': 687387523, 'number': 4, 'closed': datetime.datetime(2021, 7, 11, 20, 29, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 20, 0, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1732.0, 'time_delta': '0:28:52', 'additions': 11, 'deletions': 17, 'state': 'closed'}, {'id': 687309342, 'number': 3, 'closed': datetime.datetime(2021, 7, 11, 19, 24, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 10, 13, 20, tzinfo=datetime.timezone.utc), 'time_taken': 33077.0, 'time_delta': '9:11:17', 'additions': 121, 'deletions': 9, 'state': 'closed'}, {'id': 677349175, 'number': 2, 'closed': datetime.datetime(2021, 7, 5, 19, 15, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 18, 39, 53, tzinfo=datetime.timezone.utc), 'time_taken': 952543.0, 'time_delta': '11 days, 0:35:43', 'additions': 247, 'deletions': 85, 'state': 'closed'}]"
