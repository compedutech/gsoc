pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
913512326,[GSOC][TMVA][SOFIE]Adding a Leaky Relu ONNX Operator,"# This Pull request: This Pull request adds a new ONNX operator Leaky Relu.


",True,10415,https://api.github.com/repos/root-project/root/pulls/10415,https://github.com/root-project/root/pull/10415,closed,176,0,9,2,25,5,0,1,[],2022-04-19 20:32:15+00:00,2022-06-13 17:12:17+00:00,4740002.0,"54 days, 20:40:02","[{'comment_id': 860305735, 'comment_body': 'Can we parameterise the alpha value instead of fixing it to 0.01 here?\r\nI believe ONNX Operators standards expects an alpha attribute.\r\nhttps://github.com/onnx/onnx/blob/6a43e97e025422d50f9d38be71d49ddee667742b/docs/Operators.md#LeakyRelu', 'comment_created': datetime.datetime(2022, 4, 27, 23, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 883081255, 'comment_body': 'Hello, @sanjibansg and @lmoneta I have added the alpha attribute to this PR, Kindly review it and suggest any changes if needed. Thanks!', 'comment_created': datetime.datetime(2022, 5, 26, 21, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 888925508, 'comment_body': 'You need to define length here. You can use this function defined in SOFIE_common.hxx ,\r\n`convertShapeToLength(fShape)`\r\n', 'comment_created': datetime.datetime(2022, 6, 3, 13, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 888931026, 'comment_body': 'The warning before was in the generated code, you should check there why a length variable was defined and not used\r\n', 'comment_created': datetime.datetime(2022, 6, 3, 13, 12, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}]","[{'commit_sha': '570f6681238eb7b9fc6df068b01c07f64e76bf3f', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '580e0d9dff1ab6e5c22f974b40278f756c550167', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
887991242,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build,"# This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04
![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png)

The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422)

## Changes or fixes:
Bug-issue related to build

## Checklist:

- [x] tested changes locally
- [ ] updated the docs (if necessary)



",True,10223,https://api.github.com/repos/root-project/root/pulls/10223,https://github.com/root-project/root/pull/10223,closed,1,3,1,2,3,4,0,1,[],2022-03-24 06:36:36+00:00,2022-04-05 09:56:56+00:00,1048820.0,"12 days, 3:20:20","[{'comment_id': 836255701, 'comment_body': 'Should then remove this line 418 since output is not used anymore ?', 'comment_created': datetime.datetime(2022, 3, 28, 9, 58, 23, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 836276291, 'comment_body': 'It was deprecated in v1.10 (https://github.com/pytorch/pytorch/pull/62815) and was completely removed with this PR https://github.com/pytorch/pytorch/pull/67082 for v1.11, but I think it was a required argument in the earlier versions. ', 'comment_created': datetime.datetime(2022, 3, 28, 10, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 836288465, 'comment_body': 'Thanks Sanjibang. I will check the PR with an older PyTorch version', 'comment_created': datetime.datetime(2022, 3, 28, 10, 39, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 836307669, 'comment_body': 'I have removed the line 418 as suggested. Thankyou.', 'comment_created': datetime.datetime(2022, 3, 28, 11, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}]","[{'commit_sha': 'cb144c0f3939dd5a357fe9cba748d1d44ed395cd', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b79e4170f09270fdb9abe58bf98b52d3a8b248c0', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
915662008,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators,"This Pull request: fixes some error messages and spelling mistakes in operators 

## Checklist:

- [X] tested changes locally
- [ ] updated the docs (if necessary)


",True,10435,https://api.github.com/repos/root-project/root/pulls/10435,https://github.com/root-project/root/pull/10435,closed,183,183,6,2,16,2,2,1,"[{'name': 'in:Documentation'}, {'name': 'in:TMVA'}]",2022-04-21 18:20:53+00:00,2022-06-30 07:34:16+00:00,6009203.0,"69 days, 13:13:23","[{'comment_id': 886650042, 'comment_body': 'The indentation here should be only 3 spaces and no tabs. \r\nI think also above is not correct. Could you add this fix too, please ? ', 'comment_created': datetime.datetime(2022, 6, 1, 10, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 887931925, 'comment_body': 'Yes Done.', 'comment_created': datetime.datetime(2022, 6, 2, 13, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}]","[{'commit_sha': 'df27a8d2454fa31dced7154250795fcdfda8f459', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fe9750abaa723f281368b9c946e1fffa7414465', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
901610000,Fixed some Typos and Indentation issues in ROperator_Pool.hxx ,"# This Pull request: fixes some typing errors and indentation issues in ROperator_Pool.hxx

## Checklist:

- [x] tested changes locally
- [ ] updated the docs (if necessary)



",True,10342,https://api.github.com/repos/root-project/root/pulls/10342,https://github.com/root-project/root/pull/10342,closed,5,5,1,1,1,0,0,0,[],2022-04-06 14:53:25+00:00,2022-04-11 07:20:13+00:00,404808.0,"4 days, 16:26:48",[],"[{'commit_sha': 'd53e2a216ad74df17556e02828e754ff2114ec3e', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
913512326,[GSOC][TMVA][SOFIE]Adding a Leaky Relu ONNX Operator,"# This Pull request: This Pull request adds a new ONNX operator Leaky Relu.


",True,10415,https://api.github.com/repos/root-project/root/pulls/10415,https://github.com/root-project/root/pull/10415,closed,176,0,9,2,25,5,0,1,[],2022-04-19 20:32:15+00:00,2022-06-13 17:12:17+00:00,4740002.0,"54 days, 20:40:02","[{'comment_id': 860305735, 'comment_body': 'Can we parameterise the alpha value instead of fixing it to 0.01 here?\r\nI believe ONNX Operators standards expects an alpha attribute.\r\nhttps://github.com/onnx/onnx/blob/6a43e97e025422d50f9d38be71d49ddee667742b/docs/Operators.md#LeakyRelu', 'comment_created': datetime.datetime(2022, 4, 27, 23, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 883081255, 'comment_body': 'Hello, @sanjibansg and @lmoneta I have added the alpha attribute to this PR, Kindly review it and suggest any changes if needed. Thanks!', 'comment_created': datetime.datetime(2022, 5, 26, 21, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 888925508, 'comment_body': 'You need to define length here. You can use this function defined in SOFIE_common.hxx ,\r\n`convertShapeToLength(fShape)`\r\n', 'comment_created': datetime.datetime(2022, 6, 3, 13, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 888931026, 'comment_body': 'The warning before was in the generated code, you should check there why a length variable was defined and not used\r\n', 'comment_created': datetime.datetime(2022, 6, 3, 13, 12, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}]","[{'commit_sha': '570f6681238eb7b9fc6df068b01c07f64e76bf3f', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '580e0d9dff1ab6e5c22f974b40278f756c550167', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
968909135,[GSOC][TMVA][SOFIE] Fixed the implementation of MaxPool ONNX operator for 1d and 3d case ,"# This Pull request: Fixes the Implementation of Max Pool operator for 1d and 3d cases.
Earlier it was giving a runtime error for 1d and 3d cases of Max Pool operator. 
Error is described here.
![image](https://user-images.githubusercontent.com/84740927/174000876-7cd1e82c-86b8-4713-bf11-ef36f66912a1.png)
I have also added the unit test for Max Pool 1d and 3d Operator.

## Checklist:

- [X] tested changes locally
- [ ] updated the docs (if necessary)



",True,10768,https://api.github.com/repos/root-project/root/pulls/10768,https://github.com/root-project/root/pull/10768,closed,455,103,10,13,13,6,0,1,[],2022-06-16 05:53:53+00:00,2022-06-29 17:30:37+00:00,1165004.0,"13 days, 11:36:44","[{'comment_id': 909690257, 'comment_body': 'structure that contains Pool attribute', 'comment_created': datetime.datetime(2022, 6, 29, 14, 13, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 909692143, 'comment_body': 'support only input tensors with dim=3,4,5', 'comment_created': datetime.datetime(2022, 6, 29, 14, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 909699689, 'comment_body': 'it should be intermediate', 'comment_created': datetime.datetime(2022, 6, 29, 14, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 910193585, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 29, 16, 47, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 910194834, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 29, 16, 48, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 910195011, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 29, 16, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}]","[{'commit_sha': '315102d5828c7d529cf220c6fff592caa4720386', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eebdc002d05c5425e02c5dd5776466f55f31d5a7', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '651fe62363e781933512d7024084e8ffba721b68', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a84bd494b36853ae03834aacada0df113fff1141', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fec53700e14bbccd6426d28ffeb197cf98c7c3a4', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd37f1fab80dba138dc107f265a600710f8ed2a77', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b96b9d9e877acd143572d6c593a447076f0aeeb', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12a5b1b87757368a211a5fc7be19a63673a6e2de', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3936850274e8c6ce49fcb011bd9d2677c2a29840', 'committer_username': 'lmoneta', 'committer_name': 'Lorenzo Moneta', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 12, 12, 31, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8db1fc87066a0c09f309eb712966108512bb122c', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c42c4ac19a4e237341d7c96228a1ce9c2cf5dbd7', 'committer_username': 'lmoneta', 'committer_name': 'Lorenzo Moneta', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 12, 12, 31, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '062b3b0752a495bbb2292dde28ed8697d2190a6d', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ccdb288a7dd202b5162a874f9c2617d67d62c38', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
977943641,"[GSOC][TMVA][SOFIE]Added all 4 Basic Binary Operators:- Add,Sub,Mul and Div with the Unit Tests","# This Pull request: Adds all the Basic Binary ONNX operators to TMVA/SOFIE with the unit tests to validate the code.

1) Adds all the four Basic Binary Operators with the unit tests
- Add
- Sub
- Mul
- Div

2) Fix issue in parsing binary operators when one input is an initialized tensor
    
    In Add,Sub, Mul or Div one of the input can be an initialized tensor therefore we don't have its input type registered before parsing. We need to look if the tensor is in Initializer tensor list

3) Support for Multi-directional Broadcasting in SOFIE.

## Checklist:

- [X] tested changes locally
- [ ] updated the docs (if necessary)



",True,10822,https://api.github.com/repos/root-project/root/pulls/10822,https://github.com/root-project/root/pull/10822,closed,454,106,19,3,17,15,0,1,[],2022-06-24 06:19:05+00:00,2022-07-01 08:14:51+00:00,611746.0,"7 days, 1:55:46","[{'comment_id': 907255753, 'comment_body': 'You are missing to return the new shape from the function. \r\nYou should also remove to pass original_data that is not used. \r\nThis should fix the warnings !', 'comment_created': datetime.datetime(2022, 6, 27, 10, 59, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 907257971, 'comment_body': 'please change index i to j to fix the warning:\r\n```\r\nfor (int j=0; j < graphproto.initializer_size(); j++){\r\nif (input_name == graphproto.initializer(j).name())\r\n.....\r\n```\r\n..', 'comment_created': datetime.datetime(2022, 6, 27, 11, 2, 21, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 907345011, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2022, 6, 27, 12, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 907345199, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2022, 6, 27, 12, 43, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 907368556, 'comment_body': 'One more thing, better to pass input vector as const reference,\r\n```\r\nstd::vector<size_t> Multidirectional_broadcast(const std::vector<size_t>  & input1_shape, const std::vector<size_t> & input2_shape);\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2022, 6, 27, 13, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 907368953, 'comment_body': 'Thank you !', 'comment_created': datetime.datetime(2022, 6, 27, 13, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 911173792, 'comment_body': 'this commented code can be removed', 'comment_created': datetime.datetime(2022, 6, 30, 15, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 911174767, 'comment_body': 'comment is not correct', 'comment_created': datetime.datetime(2022, 6, 30, 15, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 911175695, 'comment_body': 'this code can also be removed', 'comment_created': datetime.datetime(2022, 6, 30, 15, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 911178071, 'comment_body': ""since we pass the input tensor by values, we change them inside the function adding 1's,  the `const` should be removed"", 'comment_created': datetime.datetime(2022, 6, 30, 15, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 911179112, 'comment_body': 'This commented code should be removed', 'comment_created': datetime.datetime(2022, 6, 30, 15, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 911208060, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 30, 16, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 911208196, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 30, 16, 5, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 911208459, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 30, 16, 6, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 911208620, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 6, 30, 16, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}]","[{'commit_sha': 'f799ed3455e570beb052c3104ae36b8c1b7f9ae4', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9489b335891f93b993a04c95d73e1e257654cb3e', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6df2e5eca6d2255712b7780a734ac1954037e798', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
989417146,[GSOC][TMVA][SOFIE] Tanh ONNX operator added with the corresponding unit tests,"

# This Pull request:  Adds the Tanh Activation function to SOFIE with the corresponding unit tests
1. Adds the Tanh ONNX operator, an activation function to SOFIE.
2. Adds the unit tests to validate the code.




## Checklist:

- [X] tested changes locally
- [ ] updated the docs (if necessary)



",True,10913,https://api.github.com/repos/root-project/root/pulls/10913,https://github.com/root-project/root/pull/10913,closed,153,1,8,3,11,4,0,1,[],2022-07-06 21:38:28+00:00,2022-07-22 12:07:53+00:00,1348165.0,"15 days, 14:29:25","[{'comment_id': 915614444, 'comment_body': 'Ahh sorry, I see this is here now. Will it be better to move this to the `Parse()` function where we add the libraries and routines for this cases, just to keep a standard format.', 'comment_created': datetime.datetime(2022, 7, 7, 8, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 915734352, 'comment_body': 'Thankyou @sanjibansg for the suggestion. I have made the required changes.', 'comment_created': datetime.datetime(2022, 7, 7, 10, 49, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 916558690, 'comment_body': ""you don't need to comment this out. Just remove this line of code if it isn't needed."", 'comment_created': datetime.datetime(2022, 7, 8, 7, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 916566447, 'comment_body': 'okay done.', 'comment_created': datetime.datetime(2022, 7, 8, 8, 3, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}]","[{'commit_sha': '7456f8da40944b7c1c627f19a35770eae7e16b92', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3a4780265497f49ec84b2b0b55e738684b2d502', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '589edf0b910bae4602e6b9a91c699f35d4a5b8b8', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
994050378,[GSOC][TMVA][SOFIE]Neg ONNX Operator implemented in SOFIE with the corresponding unit tests,"# This Pull request:  Adds the Neg ONNX Operator with the corresponding unit tests to validate the code.

## Checklist:

- [X] tested changes locally
- [ ] updated the docs (if necessary)



",True,10946,https://api.github.com/repos/root-project/root/pulls/10946,https://github.com/root-project/root/pull/10946,closed,159,0,8,2,5,3,1,1,[{'name': 'in:TMVA'}],2022-07-12 09:26:29+00:00,2022-07-22 12:15:21+00:00,874132.0,"10 days, 2:48:52","[{'comment_id': 918788868, 'comment_body': 'Transpose Neg?', 'comment_created': datetime.datetime(2022, 7, 12, 10, 5, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}, {'comment_id': 918802827, 'comment_body': 'Ohh sorry, i have replaced it by Neg Op now.', 'comment_created': datetime.datetime(2022, 7, 12, 10, 21, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 918981080, 'comment_body': ""Now that I see, in a lot of operators' `Generate()` function, we have similar repetitions,\r\nhttps://github.com/Neel-Shah-29/root-1/blob/Neel-Shah-Neg/tmva/sofie/inc/TMVA/ROperator_Relu.hxx#L50\r\nhttps://github.com/Neel-Shah-29/root-1/blob/Neel-Shah-Neg/tmva/sofie/inc/TMVA/ROperator_Selu.hxx#L50\r\nhttps://github.com/Neel-Shah-29/root-1/blob/Neel-Shah-Neg/tmva/sofie/inc/TMVA/ROperator_Sigmoid.hxx#L50\r\nhttps://github.com/Neel-Shah-29/root-1/blob/Neel-Shah-Neg/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx#L50\r\nhttps://github.com/Neel-Shah-29/root-1/blob/Neel-Shah-Neg/tmva/sofie/inc/TMVA/ROperator_LeakyRelu.hxx#L62\r\n\r\nShould we correct them all in this PR? or make a separate one for them.\r\ncc: @lmoneta "", 'comment_created': datetime.datetime(2022, 7, 12, 13, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sanjibansg', 'type': 'User'}]","[{'commit_sha': '2f57e410e266e65cf92e69ef1383582e4ef80ff5', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5f11115c82e9cfcf029aa58b40acd3fe0b14126', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
997941689,[GSOC][TMVA][SOFIE] Pow ONNX Operator added to SOFIE with the corresponding unit tests.,"# This Pull request: Pow ONNX Operator implemented  with the corresponding unit tests to validate the written code.

## Checklist:

- [X] tested changes locally


",True,10971,https://api.github.com/repos/root-project/root/pulls/10971,https://github.com/root-project/root/pull/10971,closed,116,8,8,3,22,1,1,1,[{'name': 'in:TMVA'}],2022-07-15 16:40:45+00:00,2022-08-22 10:47:57+00:00,3262032.0,"37 days, 18:07:12","[{'comment_id': 927599222, 'comment_body': 'I think there is a problem in the broadcasting case, when the two tensor shapes are not the same. We compute correctly the shape but we need also to have a new intermediate tensor which has the same shape as fNX1 and is the broadcasted result of fNX2 and we use that one for the pow function.', 'comment_created': datetime.datetime(2022, 7, 22, 12, 24, 1, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}]","[{'commit_sha': '7136cf9b2565d164616d3a61cc1ff2c7830ada24', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'febe9c5352ee752ae37b1d16b5c1535d365535fe', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fc66391a81385e43f64362af230d35580ca2832', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1006171895,[GSOC][TMVA][SOFIE] Cast ONNX Operator implemented with the corresponding unit tests,"# This Pull request: Adds the Cast ONNX Operator with the corresponding Unit tests to validate the written code.

## Checklist:

- [ ] tested changes locally
- [ ] updated the docs (if necessary)


",True,11033,https://api.github.com/repos/root-project/root/pulls/11033,https://github.com/root-project/root/pull/11033,closed,241,31,10,8,23,18,2,2,"[{'name': 'improvement'}, {'name': 'in:TMVA'}]",2022-07-22 21:36:46+00:00,2022-08-16 11:00:40+00:00,2121834.0,"24 days, 13:23:54","[{'comment_id': 934710767, 'comment_body': 'you should check the attribute of the Cast operator to determine the output type. The output type should be stored in the ROperstor_Cast class', 'comment_created': datetime.datetime(2022, 8, 1, 16, 25, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 934712058, 'comment_body': '- We should use `static_cast<Type>` for casting \r\n- We should support casting to different types depending on the attribute of the operator.\r\nThe input type is determined is defined by the template parameter T', 'comment_created': datetime.datetime(2022, 8, 1, 16, 27, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 934712711, 'comment_body': 'Here the output type is not equal to the input but you should use what is in the attribute of the operator', 'comment_created': datetime.datetime(2022, 8, 1, 16, 28, 20, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 934712881, 'comment_body': 'Need to add support for the other types', 'comment_created': datetime.datetime(2022, 8, 1, 16, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 935794598, 'comment_body': '`int` should be converted to INT32 ', 'comment_created': datetime.datetime(2022, 8, 2, 16, 24, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 935795673, 'comment_body': 'And above should not be `float` and not `Float` ?\r\n', 'comment_created': datetime.datetime(2022, 8, 2, 16, 25, 56, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 935910228, 'comment_body': 'Hello sir, regarding the second comment if i change `Float` to `float` it gives an error for the gemm operator, so i have not made any changes in that, other all comments are addressed . Now you can review the PR once and if any changes are required i will do that. Thanks for the review!\r\n![image](https://user-images.githubusercontent.com/84740927/182447847-d43ed68e-b324-467e-80b7-19a47b660d8a.png)\r\n\r\nThough we still have the error in the infer function as mentioned below. Can you suggest the solution to fix it.\r\n![image](https://user-images.githubusercontent.com/84740927/182448235-554c58e1-e00c-4012-a832-771db69b8af1.png)\r\n', 'comment_created': datetime.datetime(2022, 8, 2, 18, 39, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 936433003, 'comment_body': 'Here for  a int64 should return `ETensorType::INT64`', 'comment_created': datetime.datetime(2022, 8, 3, 9, 16, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 936433793, 'comment_body': 'I think in ONNX this is called float64. This is maybe the reason that it does not work yet.\r\nChange to : \r\n`else if (type == ""double"" || type == ""float64""){`', 'comment_created': datetime.datetime(2022, 8, 3, 9, 17, 48, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 936436224, 'comment_body': 'I would  add support here also for INT64 and the UINT32 and UNIT64', 'comment_created': datetime.datetime(2022, 8, 3, 9, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 936530032, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 3, 11, 2, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 936530201, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 3, 11, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 936530875, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 3, 11, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 939995520, 'comment_body': 'Here it should be: \r\n```\r\nelse if(f->second.type == ETensorType::INT32) {\r\n   fGC += ""std::vector<int32_t> "";\r\nelse if(f->second.type == ETensorType::INT64) {\r\n   fGC += ""std::vector<int64_t> "";\r\n}\r\n```\r\nand similar for the unsigned types', 'comment_created': datetime.datetime(2022, 8, 8, 8, 57, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 939996754, 'comment_body': 'This is fine! \r\nFor consistency with above, better to add also the unsigned int types (uint32_t and uint64_t)', 'comment_created': datetime.datetime(2022, 8, 8, 8, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 940015327, 'comment_body': ""We should check in the ONNX parser (when running with verbose=true) if the name is `int64` or something else. I don't think we need to use the `int` case. "", 'comment_created': datetime.datetime(2022, 8, 8, 9, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 940182400, 'comment_body': 'For the naming convention this should be called:\r\n`fAttrType` ', 'comment_created': datetime.datetime(2022, 8, 8, 12, 30, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 944608005, 'comment_body': 'Thank you for applying my patch. \r\nCan you just apply the small changes I requested on the name convention of the data member: rename `fattr_type` to `fAttrType` ? ', 'comment_created': datetime.datetime(2022, 8, 12, 16, 1, 19, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}]","[{'commit_sha': 'ae6d358045743a170af175e828dc0b5bd4951273', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95c32ba2ebd4c7a6b39393fd361ddc4709ff2193', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64499aec10d7c18eff742d19424bd97d8acdec41', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82538822bfae144130028969ae89044ba49734ea', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '461ad7543ded8a704e9c1d5fc5d24f0d60c7137f', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a4eae3b2ef8f28df9d1fb175abc95b7e47a10aa', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4010544c3955ad5d87371754741f3fdc9db802a', 'committer_username': 'lmoneta', 'committer_name': 'Lorenzo Moneta', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 12, 12, 31, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08438c15ec54f29271793f4c6ef907bd57dc7c72', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1014215298,[GSOC][TMVA][SOFIE] Shape ONNX Operator implemented with the corresponding unit tests,"# This Pull request: Adds the Shape ONNX Operator with the corresponding unit tests

## Checklist:

- [ ] tested changes locally
- [ ] updated the docs (if necessary)

This PR fixes # 

",True,11086,https://api.github.com/repos/root-project/root/pulls/11086,https://github.com/root-project/root/pull/11086,closed,161,1,8,11,21,14,0,1,[],2022-08-01 18:45:23+00:00,2022-09-07 14:46:37+00:00,3182474.0,"36 days, 20:01:14","[{'comment_id': 950047298, 'comment_body': 'The logic here is not correct. We can support input types FLOAT, DOUBLE and maybe also integer. \r\nThe input types can then be the template parameter of the ROperator_Shape.\r\nThe output type is fixed to be INT64 according to ONNX specifications', 'comment_created': datetime.datetime(2022, 8, 19, 10, 27, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 950048111, 'comment_body': 'Why we have this result string stored ? See comments below.\r\nOne should also follow coding conventions with data member starting with `f` and have capitalize second letter. ', 'comment_created': datetime.datetime(2022, 8, 19, 10, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 950049436, 'comment_body': 'This code here is not correct and it causes the problem. \r\nThe output shape is dim=1 and is equal to input_length.\r\nFor example if input is a tensor with shape {1,2} output is a tensor with shape  {2} containing 1 and 2 as values. ', 'comment_created': datetime.datetime(2022, 8, 19, 10, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 950050988, 'comment_body': 'So output_shape is: \r\n```\r\nsize_t length = ConvertShapeToLength(fShape);\r\nstd::vector<size_t> output_shape = { length};\r\n```', 'comment_created': datetime.datetime(2022, 8, 19, 10, 32, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 950051520, 'comment_body': 'Here the output type is fixed is not the input one!\r\n```\r\nmodel.AddIntermediateTensor(fNY, ETensorType::INT64, output_shape);\r\n```\r\n', 'comment_created': datetime.datetime(2022, 8, 19, 10, 33, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 950052873, 'comment_body': 'Here just use `fShape` instead of result.\r\nThe output is equal to the input shape, which is `fShape`.', 'comment_created': datetime.datetime(2022, 8, 19, 10, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 950701928, 'comment_body': 'Sir we cannot use `fShape` here as it throws the error, since fShape is `std::vector<size_t>` and we expect string here.', 'comment_created': datetime.datetime(2022, 8, 20, 14, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 951170405, 'comment_body': 'Yes, correct, but the code above will not work. I think we should implement it as following (lines 69-71):\r\n```\r\nfor (int id = 0; id <length; id++) { \r\nout << SP << ""tensor_"" << fNY << ""[""<< id << ""] = "" \r\n       << fShape[id] << "";\\n"";\r\n}\r\nreturn out.str();\r\n```\r\nwe then write explicitly by assigning each element of the output tensor in the generated code. This will avoid the need to allocate an intermediate vector with the shape and it will be faster. ', 'comment_created': datetime.datetime(2022, 8, 22, 8, 43, 57, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 951280670, 'comment_body': 'The output is a vector of int64_t, but you can simply do:\r\n`auto output = s.infer(input.data());`\r\n', 'comment_created': datetime.datetime(2022, 8, 22, 10, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 961359968, 'comment_body': 'Sorry, this is not correct here, it should be: \r\n```\r\nout << SP << ""tensor_"" << fNY << ""[""<< id << ""] = "" << fShape[fStart+id] << "";\\n"";\r\n```', 'comment_created': datetime.datetime(2022, 9, 2, 7, 14, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 962124394, 'comment_body': 'I think we can remove the template parameter here , since it is not used. The Shape operator works the same on all input types', 'comment_created': datetime.datetime(2022, 9, 3, 8, 37, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 962124594, 'comment_body': 'we remove the switch and also this error case. ', 'comment_created': datetime.datetime(2022, 9, 3, 8, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 962934836, 'comment_body': ""I would not remove this part checking if the input tensor is registered already. \r\nThis is needed to ensure the validity of the model and its consistency. We don't need instead the check later if the input type is equal to float and that is correct to remove"", 'comment_created': datetime.datetime(2022, 9, 5, 13, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 962941424, 'comment_body': 'You can remove instead line `1316`, \r\n```\r\ninput_type = it->second;\r\n```\r\nand just keep the error condition:\r\n```\r\nif (it == tensor_type.end()){\r\nthrow std::runtime_error(""TMVA::SOFIE ONNX Parser Shape op has input tensor"" + input_name + "" but its type is not yet registered"");\r\n}\r\n```\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 9, 5, 14, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}]","[{'commit_sha': 'b46b61fd08fb8d44ac9a05aad1edd6c22cef95a9', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e8fcd7f7b5ee3b04a81d21b4170bd0aebe69b12', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3385989efe8f0710ffe1804a50e4abe676fe03a1', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dda0efaf7a353ccfdeda336b46963c97a3640338', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '349638a7554b6b7538f8cf07a002fb01347b4d00', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1286a3a6c950e6167bbfd777d2a737111b158b24', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '256ba0aefacce96344fbe91fb8293d0051271bb5', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05fc820c536583eeace8dcd16989f9e735443ec7', 'committer_username': 'lmoneta', 'committer_name': 'Lorenzo Moneta', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 12, 12, 31, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '759f8f18d0b60103a89c1f43d4786a6dcdf9f87b', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8eb58927b9693afebe65e3758468cea8aefc05ff', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '498874f266aeceb43576499c983d341400cfd4d7', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1027993041,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests,"# This Pull request:
Adds the Max ONNX Operator and the corresponding unit tests to validate the code.

- [X] tested changes locally



",True,11198,https://api.github.com/repos/root-project/root/pulls/11198,https://github.com/root-project/root/pull/11198,closed,210,2,8,12,10,10,0,1,[],2022-08-16 19:23:49+00:00,2022-09-01 06:26:29+00:00,1335760.0,"15 days, 11:02:40","[{'comment_id': 947743032, 'comment_body': 'The MAX operator can have as input a list of tensors of arbitrary size. Here we are limited to 2, so it is like a binary operator. \r\nYou should have a `std::vector<std::string>` defining  the input tensor names', 'comment_created': datetime.datetime(2022, 8, 17, 10, 14, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 947743815, 'comment_body': 'I think we should support broadcasting for the different input shapes, which should be > 2. ', 'comment_created': datetime.datetime(2022, 8, 17, 10, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 947744717, 'comment_body': 'The code should take into account if number of inputs is a number different than 2', 'comment_created': datetime.datetime(2022, 8, 17, 10, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 947747989, 'comment_body': 'Here it should not be 2 but use \r\n`nodeproto.input_size()` to retrieve all the input names ', 'comment_created': datetime.datetime(2022, 8, 17, 10, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 947751261, 'comment_body': 'You should change the signature for constructor ROPerator_Max (see comment above)', 'comment_created': datetime.datetime(2022, 8, 17, 10, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 947752134, 'comment_body': 'The signature of the constructor for `ROperator_Max` should be \r\n`ROperator_Max( const std::vector<std::string> & inputNames, std::string nameY)`', 'comment_created': datetime.datetime(2022, 8, 17, 10, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 951293945, 'comment_body': 'It is better here two separate these 3 cases when generating the code: \r\n- fInputNames.size() == 1 :  `output[id] =  input[0][id]`\r\n- fInputNames.size() == 2 : `output[id] = std::max(input[0][id],input[1][id])`\r\n-  fInputNames.size() > 2 : code as it is now \r\n\r\nBy doing this the performances of Max will be optimised for the first two cases. \r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 22, 10, 53, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 951778027, 'comment_body': 'Done with the changes.', 'comment_created': datetime.datetime(2022, 8, 22, 18, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}, {'comment_id': 956062427, 'comment_body': 'Here we support only inputs to Max with the same shape. \r\nwe should support Broadcasting, at least to tensor with same length as we are doing for the Binary operators', 'comment_created': datetime.datetime(2022, 8, 26, 13, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 956203831, 'comment_body': 'Done with the changes and tested locally', 'comment_created': datetime.datetime(2022, 8, 26, 16, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}]","[{'commit_sha': '023b507f2802d454878251b826a6bf76fabe52d0', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7781e1d8fccc593ad8dcb1b664bcd140418a1c64', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2af39da82b8df9d0f88c71a71ae59df7b317df84', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '324bfe496c0ba9ad77f9c9eb7e0dbf0250bd4a9f', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94dd2994bfe6c959a45328ef363c4c0c0af3aff4', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81192edea318279ad7c45ff13138d87ab087a842', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7604f71713637a5fcf58539a23260669ce3f17b8', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b956715debba52871a8e20cfa9cf5f1386818c5e', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '458ccaf24459a5bb4c408498c134c3a801e2fe06', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ae6b90e700cd66abefe24bdbceb91172d74c4fa', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeebb1dcf815065e6154f2eba08fb2a51207a4d2', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a80b4dac0f9043c23de562b6a3383e9fcffc166', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1038264424,[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests,"# This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE

## Checklist:

- [X] tested changes locally

",True,11258,https://api.github.com/repos/root-project/root/pulls/11258,https://github.com/root-project/root/pull/11258,closed,281,1,10,8,14,4,0,1,[],2022-08-26 18:39:54+00:00,2022-08-31 09:47:28+00:00,400054.0,"4 days, 15:07:34","[{'comment_id': 958480259, 'comment_body': 'Here should be (to fix a warning) \r\n```\r\nfor (int n = dim-1; n >=0; n--)\r\n```', 'comment_created': datetime.datetime(2022, 8, 30, 13, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 958481320, 'comment_body': 'to avoid a possible warning: \r\n```\r\nif (n == int(dim-1))\r\n```', 'comment_created': datetime.datetime(2022, 8, 30, 13, 27, 13, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 958774449, 'comment_body': 'In case of the \'ReduceProd` operator we should have the initial sum equal to 1. \r\nDo:\r\n```\r\nif(fReduceOpMode == ReduceProd)\r\n  out << SP << SP << ""float sum = 1;\\n"";\r\nelse \r\n  out << SP << SP << ""float sum = 0;\\n"";\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 30, 17, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 958842908, 'comment_body': 'Done with the changes sir. All the tests pass and now PR is ready to be merged.', 'comment_created': datetime.datetime(2022, 8, 30, 19, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Neel-Shah-29', 'type': 'User'}]","[{'commit_sha': '6e856a1a8555dfcb440de748a5b76ef80c4daa41', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e10bccf36a4b37c99e5dd3b1ea40714efd13289', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e02561d0e8c5487393e286f904fbfef05b9f2c0', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8167d2d6980a7e086e86c8cc84d89a203946e4c', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21e8ee97f0ad62b2d5d981d2259e045e48d72b87', 'committer_username': 'lmoneta', 'committer_name': 'Lorenzo Moneta', 'committer_email': None, 'commit_date': datetime.datetime(2013, 8, 12, 12, 31, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d47d73b2e36bad751cd586077cfbb667668909', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2333e21d58a318f9d73a8e003903bbc816653e42', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '048506556fcade52bef51e37266639aa8e3e1780', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102
1046791107,[GSOC][TMVA][SOFIE] Extend Concat ONNX Operator to implement stack functionality as the ONNX  ConcatFromSequence operator ,"# This Pull request: Adds ConcatFromSequence ONNX Operator

## Checklist:

- [ ] tested changes locally
- [ ] updated the docs (if necessary)


",True,11317,https://api.github.com/repos/root-project/root/pulls/11317,https://github.com/root-project/root/pull/11317,closed,53,24,3,6,7,3,0,1,[],2022-09-05 19:09:46+00:00,2022-09-07 13:54:10+00:00,153864.0,"1 day, 18:44:24","[{'comment_id': 963653019, 'comment_body': 'I would keep as name `Concat` and not `ConcatFromSequence`', 'comment_created': datetime.datetime(2022, 9, 6, 12, 37, 12, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 963653892, 'comment_body': 'The indentation here is not correct, keep it as it was before', 'comment_created': datetime.datetime(2022, 9, 6, 12, 38, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}, {'comment_id': 963655629, 'comment_body': 'Also here keep Concat', 'comment_created': datetime.datetime(2022, 9, 6, 12, 39, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lmoneta', 'type': 'User'}]","[{'commit_sha': '4297114c19413318d839b7a005e5684667f8479f', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0d071f303945907561ebd80cf0e0e199e17d5b2', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e796971e0820f7fd3d054ea43f7087156e21804', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c45769279b3feb6e37b926ef74226e59115d2d26', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c05d4aff1768ec823cfbc68ed6db4e47170b9749', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e83aa2e84e2f71c04b85a306c768d494aa2eaad', 'committer_username': 'Neel-Shah-29', 'committer_name': 'Neel Shah', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 19, 19, 44, tzinfo=datetime.timezone.utc)}]",Neel Shah,84740927,,User,,45,,85,102

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
10994345,root,root-project/root,C++,1247,2609,123,533,82429,802,17,272,"[{'id': 1655613219, 'number': 14297, 'closed': datetime.datetime(2024, 1, 17, 14, 8, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 22, 20, 24, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2223872.0, 'time_delta': '25 days, 17:44:32', 'additions': 183, 'deletions': 0, 'state': 'closed'}, {'id': 1489849138, 'number': 13544, 'closed': datetime.datetime(2023, 12, 11, 11, 24, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 14, 37, 8, tzinfo=datetime.timezone.utc), 'time_taken': 9319636.0, 'time_delta': '107 days, 20:47:16', 'additions': 166, 'deletions': 0, 'state': 'closed'}, {'id': 1419422077, 'number': 13171, 'closed': datetime.datetime(2023, 12, 11, 10, 55, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 4, 10, 37, 21, tzinfo=datetime.timezone.utc), 'time_taken': 13825110.0, 'time_delta': '160 days, 0:18:30', 'additions': 537, 'deletions': 0, 'state': 'closed'}, {'id': 1408674184, 'number': 13104, 'closed': datetime.datetime(2023, 7, 12, 12, 43, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 20, 43, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1353617.0, 'time_delta': '15 days, 16:00:17', 'additions': 160, 'deletions': 0, 'state': 'closed'}, {'id': 1406665454, 'number': 13093, 'closed': None, 'created': datetime.datetime(2023, 6, 25, 13, 14, 17, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 207, 'deletions': 2, 'state': 'open'}, {'id': 1402328004, 'number': 13066, 'closed': datetime.datetime(2023, 8, 23, 9, 10, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 21, 19, 35, 13, tzinfo=datetime.timezone.utc), 'time_taken': 5405697.0, 'time_delta': '62 days, 13:34:57', 'additions': 188, 'deletions': 46, 'state': 'closed'}, {'id': 1378284853, 'number': 12945, 'closed': datetime.datetime(2023, 9, 5, 15, 51, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 5, 14, 10, tzinfo=datetime.timezone.utc), 'time_taken': 7987034.0, 'time_delta': '92 days, 10:37:14', 'additions': 58, 'deletions': 1, 'state': 'closed'}, {'id': 1377690947, 'number': 12942, 'closed': None, 'created': datetime.datetime(2023, 6, 4, 10, 56, 45, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 239, 'deletions': 0, 'state': 'open'}, {'id': 1377321111, 'number': 12941, 'closed': None, 'created': datetime.datetime(2023, 6, 3, 20, 45, 3, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 162, 'deletions': 0, 'state': 'open'}, {'id': 1372083798, 'number': 12918, 'closed': datetime.datetime(2023, 6, 12, 13, 37, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 12, 12, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1041913.0, 'time_delta': '12 days, 1:25:13', 'additions': 161, 'deletions': 2, 'state': 'closed'}, {'id': 1367143395, 'number': 12894, 'closed': datetime.datetime(2023, 6, 14, 13, 24, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 27, 7, 54, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1574982.0, 'time_delta': '18 days, 5:29:42', 'additions': 55, 'deletions': 0, 'state': 'closed'}, {'id': 1091933487, 'number': 11608, 'closed': datetime.datetime(2022, 11, 17, 15, 41, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 19, 8, 9, 10, tzinfo=datetime.timezone.utc), 'time_taken': 2532715.0, 'time_delta': '29 days, 7:31:55', 'additions': 251, 'deletions': 11, 'state': 'closed'}, {'id': 1046791107, 'number': 11317, 'closed': datetime.datetime(2022, 9, 7, 13, 54, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 5, 19, 9, 46, tzinfo=datetime.timezone.utc), 'time_taken': 153864.0, 'time_delta': '1 day, 18:44:24', 'additions': 53, 'deletions': 24, 'state': 'closed'}, {'id': 1038264424, 'number': 11258, 'closed': datetime.datetime(2022, 8, 31, 9, 47, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 26, 18, 39, 54, tzinfo=datetime.timezone.utc), 'time_taken': 400054.0, 'time_delta': '4 days, 15:07:34', 'additions': 281, 'deletions': 1, 'state': 'closed'}, {'id': 1027993041, 'number': 11198, 'closed': datetime.datetime(2022, 9, 1, 6, 26, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 19, 23, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1335760.0, 'time_delta': '15 days, 11:02:40', 'additions': 210, 'deletions': 2, 'state': 'closed'}, {'id': 1014215298, 'number': 11086, 'closed': datetime.datetime(2022, 9, 7, 14, 46, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 1, 18, 45, 23, tzinfo=datetime.timezone.utc), 'time_taken': 3182474.0, 'time_delta': '36 days, 20:01:14', 'additions': 161, 'deletions': 1, 'state': 'closed'}, {'id': 1006171895, 'number': 11033, 'closed': datetime.datetime(2022, 8, 16, 11, 0, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 21, 36, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2121834.0, 'time_delta': '24 days, 13:23:54', 'additions': 241, 'deletions': 31, 'state': 'closed'}, {'id': 997941689, 'number': 10971, 'closed': datetime.datetime(2022, 8, 22, 10, 47, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 16, 40, 45, tzinfo=datetime.timezone.utc), 'time_taken': 3262032.0, 'time_delta': '37 days, 18:07:12', 'additions': 116, 'deletions': 8, 'state': 'closed'}, {'id': 994050378, 'number': 10946, 'closed': datetime.datetime(2022, 7, 22, 12, 15, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 12, 9, 26, 29, tzinfo=datetime.timezone.utc), 'time_taken': 874132.0, 'time_delta': '10 days, 2:48:52', 'additions': 159, 'deletions': 0, 'state': 'closed'}, {'id': 989417146, 'number': 10913, 'closed': datetime.datetime(2022, 7, 22, 12, 7, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 21, 38, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1348165.0, 'time_delta': '15 days, 14:29:25', 'additions': 153, 'deletions': 1, 'state': 'closed'}, {'id': 977943641, 'number': 10822, 'closed': datetime.datetime(2022, 7, 1, 8, 14, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 24, 6, 19, 5, tzinfo=datetime.timezone.utc), 'time_taken': 611746.0, 'time_delta': '7 days, 1:55:46', 'additions': 454, 'deletions': 106, 'state': 'closed'}, {'id': 968909135, 'number': 10768, 'closed': datetime.datetime(2022, 6, 29, 17, 30, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 5, 53, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1165004.0, 'time_delta': '13 days, 11:36:44', 'additions': 455, 'deletions': 103, 'state': 'closed'}, {'id': 916818746, 'number': 10442, 'closed': None, 'created': datetime.datetime(2022, 4, 22, 21, 9, 38, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 981, 'deletions': 0, 'state': 'open'}, {'id': 915662008, 'number': 10435, 'closed': datetime.datetime(2022, 6, 30, 7, 34, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 21, 18, 20, 53, tzinfo=datetime.timezone.utc), 'time_taken': 6009203.0, 'time_delta': '69 days, 13:13:23', 'additions': 183, 'deletions': 183, 'state': 'closed'}, {'id': 913512326, 'number': 10415, 'closed': datetime.datetime(2022, 6, 13, 17, 12, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 19, 20, 32, 15, tzinfo=datetime.timezone.utc), 'time_taken': 4740002.0, 'time_delta': '54 days, 20:40:02', 'additions': 176, 'deletions': 0, 'state': 'closed'}, {'id': 901610000, 'number': 10342, 'closed': datetime.datetime(2022, 4, 11, 7, 20, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 6, 14, 53, 25, tzinfo=datetime.timezone.utc), 'time_taken': 404808.0, 'time_delta': '4 days, 16:26:48', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 901334506, 'number': 10337, 'closed': datetime.datetime(2022, 4, 6, 14, 44, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 6, 10, 35, 45, tzinfo=datetime.timezone.utc), 'time_taken': 14924.0, 'time_delta': '4:08:44', 'additions': 234121, 'deletions': 80337, 'state': 'closed'}, {'id': 887991242, 'number': 10223, 'closed': datetime.datetime(2022, 4, 5, 9, 56, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 24, 6, 36, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1048820.0, 'time_delta': '12 days, 3:20:20', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 819404777, 'number': 9546, 'closed': datetime.datetime(2022, 1, 12, 10, 14, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 12, 7, 56, 51, tzinfo=datetime.timezone.utc), 'time_taken': 8259.0, 'time_delta': '2:17:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
