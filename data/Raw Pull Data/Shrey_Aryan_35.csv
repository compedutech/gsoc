pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
473045882,[GSoC-2020] Generalized and Multithreaded File Reader,"# [GSoC-2020] General File Reader and Multithreaded Mol Supplier

## Overview
The General File Reader, as the name suggests, provides the user with the appropriate `MolSupplier` object to parse a file of a given format. Thus for instance earlier if one wanted to parse a file of smiles, say `input.smi`, then one would need to explicitly construct an object `SmilesMolSupplier`. However, with the implementation provided in the GeneralFileReader, one can easily pass the file name along with supplier options to obtain the appropriate `MolSupplier` object determined by the file format. Furthermore, the General File Reader also provides an interface with the `MultithreadedMolSupplier` objects for Smiles and SDF file formats. Besides the implementation, test cases are also included to demonstrate the utility of the General File Reader.

The Multithreaded Mol Supplier provides a concurrent implementation of the usual base class `MolSupplier`. Due to time constraints, multithreaded versions of only Smiles, and SD Mol Suppliers were implemented. The motivation for this part stemmed from parsing large Smiles or SDF files. With the current implementation the user, for instance, can construct the object `MultithreadedSmilesMolSupplier` to parse a smiles file with a large number of records. Besides the implementation, test cases are also included to demonstrate the correctness and performance of the `MultithreadedMolSupplier`. Here is a brief summary of the performance result obtained by running the function `testPerformance` on @greglandrum's machine:

```
Duration for SmilesMolSupplier: 6256 (milliseconds)
Maximum Duration for MultithreadedSmilesMolSupplier: 6972 (milliseconds) with 1 writer thread
Minimum Duration for MultithreadedSmilesMolSupplier: 855 (milliseconds) with 15 writer threads

Duration for SDMolSupplier: 2584 (milliseconds) 
Maximum Duration for MultithreadedSDMolSupplier: 2784 (milliseconds) with 1 writer thread
Minimum Duration for MultithreadedSDMolSupplier: 729 (milliseconds) with 7 writer threads
```

## Implementation
Implementation of the General File Reader is quite concise and makes use of only two methods `determineFormat` and `getSupplier`. The former determines the file and the compression format given pathname, while the latter returns a pointer to `MolSupplier` object given pathname and `SupplierOptions`.

Regarding the implementation of the `MultithreadedMolSupplier`, the first step was to implement a thread-safe blocking queue of fixed capacity. This would allow us to extract and process records from the file concurrently. The concurrent queue was implemented with a single lock and two condition variables to signal whether the queue was empty or full. Test cases checking the correctness of the `ConcurrentQueue` are also included in the project.

The next step required the implementation of the base class `MultithreadedMolSupplier` which would manage the input and output queue. The input queue would be populated by the method `extractNextRecord` that would read a record from a given file/stream, whereas the output queue would be populated by the method `processMoleculeRecord` that would first pop a record from the input queue and then process it into an object of type `ROMol *`. The reader thread would thus call `extractNextRecord` until no record can be read, while the writer thread(s) would call the method `processMoleculeRecord` until the output queue is done and empty. The child classes `MultithreadedSmilesMolSupplier` and `MultithreadedSDMolSupplier` primarily provide implementations of the methods, `extractNextRecord` and `processMoleculeRecord`. Both suppliers were tested on various files with different parameter values for input queue size, output queue size, and the number of writer threads. 

## Further Work
Due to time constraints and the difficulty involved in debugging concurrent code, there were a few things that could not be completed.
1. In cases where the file format is less defined, it might be useful to parse the file content to discover the file format and possible Supplier options. The current implementation does not support this and only uses the pathname to determine the appropriate Supplier.
2. Wrappers for the Multithreaded Smiles and SD Suppliers in other languages such as Java were not implemented in this project.

## Changes made for the General File Reader and Multithreaded Mol Supplier:

List of important files added:

- [GeneralFileReader.h](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/FileParsers/GeneralFileReader.h) and [testGeneralFileReader.cpp](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/FileParsers/testGeneralFileReader.cpp)
- [ConcurrentQueue.h](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/RDGeneral/ConcurrentQueue.h) and [testConcurrentQueue.cpp](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/RDGeneral/testConcurrentQueue.cpp)
- [MultithreadedMolSupplier.h](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/FileParsers/MultithreadedMolSupplier.h) and [MultithreadedMolSupplier.cpp](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/FileParsers/MultithreadedMolSupplier.cpp)
- [MultithreadedSmilesMolSupplier.h](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/FileParsers/MultithreadedSmilesMolSupplier.h), [MultithreadedSmilesMolSupplier.cpp](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/FileParsers/MultithreadedSmilesMolSupplier.cpp) and its [Python wrapper](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/Wrap/MultithreadedSmilesMolSupplier.cpp)
- [MultithreadedSDMolSupplier.h](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/FileParsers/MultithreadedSDMolSupplier.h), [MultithreadedSDMolSupplier.cpp](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/FileParsers/MultithreadedSDMolSupplier.cpp) and its [Python wrapper](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/Wrap/MultithreadedSDMolSupplier.cpp).
- [testMultithreadedMolSupplier.cpp](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/FileParsers/testMultithreadedMolSupplier.cpp) and [testMultithreadedMolSupplier.py](https://github.com/shrey183/rdkit/blob/GSOC-2020/Code/GraphMol/Wrap/testMultithreadedMolSupplier.py) for testing Python wrappers.

",True,3363,https://api.github.com/repos/rdkit/rdkit/pulls/3363,https://github.com/rdkit/rdkit/pull/3363,closed,2496,3,23,135,10,28,1,0,[{'name': 'enhancement'}],2020-08-25 08:52:49+00:00,2020-10-09 02:31:06+00:00,3865097.0,"44 days, 17:38:17","[{'comment_id': 494297861, 'comment_body': 'Was there a reason not to use boost:lockfree:queue here?\r\n\r\nDoes the mutex guarantee same-ordering of output as input for instance?', 'comment_created': datetime.datetime(2020, 9, 24, 13, 1, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bp-kelley', 'type': 'User'}, {'comment_id': 494341543, 'comment_body': ""You have a dead lock here.  If we push an item, we lock the queue and THEN wait on for the queue to be emptied, which can't happen since we hold the lock.\r\n\r\nA small change to testProducerConsumer shows this where we call thread::join before launching the consumers.\r\n\r\n**_n.b. this test is in error, the join is blocking_**\r\n\r\n```\r\n  //! start producer threads\r\n  for (int i = 0; i < numProducerThreads; i++) {\r\n    producers[i] = std::thread(produce, std::ref(q), numToProduce);\r\n  }\r\n\r\n  std::for_each(producers.begin(), producers.end(),\r\n                std::mem_fn(&std::thread::join));\r\n\r\n\r\n  //! start consumer threads\r\n  for (int i = 0; i < numConsumerThreads; i++) {\r\n    consumers[i] = std::thread(consume, std::ref(q), std::ref(results[i]));\r\n  }\r\n\r\n  //! the producer is done producing\r\n  q.setDone();\r\n\r\n  std::for_each(consumers.begin(), consumers.end(),\r\n                std::mem_fn(&std::thread::join));\r\n  TEST_ASSERT(q.isEmpty());\r\n```"", 'comment_created': datetime.datetime(2020, 9, 24, 13, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'bp-kelley', 'type': 'User'}, {'comment_id': 494347604, 'comment_body': ""It looks like we are using determineFormat to throw the exception here when we have a format we don't understand.  This is causing the compiler to think we have a control path with no return value (which is true).\r\n\r\nPerhaps we should have determineFormat return true/false and deal with exceptions in the main body.\r\n\r\nAlso I would throw BadFileException as opposed to invalid_argument"", 'comment_created': datetime.datetime(2020, 9, 24, 14, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'bp-kelley', 'type': 'User'}, {'comment_id': 494347936, 'comment_body': 'These should be const', 'comment_created': datetime.datetime(2020, 9, 24, 14, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'bp-kelley', 'type': 'User'}, {'comment_id': 494350361, 'comment_body': 'One cannot insert items that do not have a trivial assignment and destructor in the boost::lockfree::queue. ', 'comment_created': datetime.datetime(2020, 9, 24, 14, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shrey183', 'type': 'User'}, {'comment_id': 494359389, 'comment_body': 'You could also have used an SDMolSupplier on the stream (or raw text) and also get the properties.  This would have reduced some code.', 'comment_created': datetime.datetime(2020, 9, 24, 14, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bp-kelley', 'type': 'User'}, {'comment_id': 494385258, 'comment_body': ""Ah yes, good old std::string and it's non trivial constructor."", 'comment_created': datetime.datetime(2020, 9, 24, 14, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bp-kelley', 'type': 'User'}, {'comment_id': 494770206, 'comment_body': ""@bp-kelley We've also seen a few posts indicating that the performance of `boost::lockfree::queue` isn't great.\r\nIn this case spending a lot of time waiting to add/remove things from the queue actually will make a difference."", 'comment_created': datetime.datetime(2020, 9, 25, 6, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'greglandrum', 'type': 'User'}, {'comment_id': 494772467, 'comment_body': ""@bp-kelley, assuming I understand your comment correctly:\r\nThe use of the condition_variable `d_notFull` ensures that we don't get a deadlock here. We no longer hold the lock while `d_notFull.wait()` is executing."", 'comment_created': datetime.datetime(2020, 9, 25, 6, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'greglandrum', 'type': 'User'}, {'comment_id': 494773168, 'comment_body': ""@bp-kelley : I think I looked at that and determined that it wouldn't work because we want to have an accurate `lineNum` available. I agree that we should refactor this at some point, but I think that approach doesn't work at the moment."", 'comment_created': datetime.datetime(2020, 9, 25, 6, 26, 51, tzinfo=datetime.timezone.utc), 'commenter': 'greglandrum', 'type': 'User'}, {'comment_id': 494983375, 'comment_body': ""The above test was wrong as the join was blocking.  I added a sleep in between the producers and consumers and it looks ok now, although I did fail the assert once (q.isempty) I'm assuming that was a mistake on my part for now."", 'comment_created': datetime.datetime(2020, 9, 25, 13, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bp-kelley', 'type': 'User'}, {'comment_id': 495164276, 'comment_body': ""I've totally seen `.sdfgz` files before (meaning gzipped .sdf). Also - RDKit has a PDBMolSupplier - did you consider including that?"", 'comment_created': datetime.datetime(2020, 9, 25, 18, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'd-b-w', 'type': 'User'}, {'comment_id': 495165313, 'comment_body': 'It would be useful to include at least the extension, and maybe the full file name here (and in the other exception in this function)', 'comment_created': datetime.datetime(2020, 9, 25, 18, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'd-b-w', 'type': 'User'}, {'comment_id': 495166266, 'comment_body': 'I think people usually say in the RDKit codebase:\r\n\r\n    //! returns a new MolSupplier object...\r\n\r\nwhere ""new"" helps readers discern that they own the MolSupplier.', 'comment_created': datetime.datetime(2020, 9, 25, 18, 37, 55, tzinfo=datetime.timezone.utc), 'commenter': 'd-b-w', 'type': 'User'}, {'comment_id': 495167035, 'comment_body': ""I would have considered encoding the ownership in the structure of the language. AKA - it might make sense to return either a std::unique_ptr<MolSupplier> or a shared_ptr<MolSupplier>. It's possible that you'll want the latter for best interoperability with boost::python."", 'comment_created': datetime.datetime(2020, 9, 25, 18, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'd-b-w', 'type': 'User'}, {'comment_id': 495167967, 'comment_body': 'prefer spaces to tabs. Or even better - run the clang-format using the .clang-format file in the repo.', 'comment_created': datetime.datetime(2020, 9, 25, 18, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'd-b-w', 'type': 'User'}, {'comment_id': 495169400, 'comment_body': 'I think it would be more robust to make this return enum class objects. Relying on string comparison leaves you vulnerable to coding errors via typos that would only be caught at runtime. Enum class comparisons would be caught at compile time! Also, `getSupplier()` could then use a switch statement.\r\n\r\n    std::pair<FileFormat, CompressionFormat> guessFormat(const& std::string path);\r\n\r\nUse like (C++17 only):\r\n\r\n    auto [format, compression] = guessFormat(path);\r\n', 'comment_created': datetime.datetime(2020, 9, 25, 18, 44, 19, tzinfo=datetime.timezone.utc), 'commenter': 'd-b-w', 'type': 'User'}, {'comment_id': 495403907, 'comment_body': ""hmmm, I'd never seen `.sdfgz`, so I didn't suggest that. We can always add that and PDB support later. "", 'comment_created': datetime.datetime(2020, 9, 26, 3, 7, 29, tzinfo=datetime.timezone.utc), 'commenter': 'greglandrum', 'type': 'User'}, {'comment_id': 495404930, 'comment_body': 'I agree that using an `std::unique_ptr` here makes sense.\r\n', 'comment_created': datetime.datetime(2020, 9, 26, 3, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'greglandrum', 'type': 'User'}, {'comment_id': 495405304, 'comment_body': ""We have a collection of code that hasn't been through clang-format (or which has been run with an older version). I'm going to run the whole codebase through once we do the next release."", 'comment_created': datetime.datetime(2020, 9, 26, 3, 10, 48, tzinfo=datetime.timezone.utc), 'commenter': 'greglandrum', 'type': 'User'}, {'comment_id': 495405585, 'comment_body': 'Worth considering for a future enhancement.', 'comment_created': datetime.datetime(2020, 9, 26, 3, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'greglandrum', 'type': 'User'}, {'comment_id': 499133697, 'comment_body': 'Done! ', 'comment_created': datetime.datetime(2020, 10, 3, 9, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'shrey183', 'type': 'User'}, {'comment_id': 499134205, 'comment_body': 'I included the filename for all error messages. When all the above cases fail then no compression format would have been computed. So it would be an empty string, however, I agree that it would be useful to log out the file name. ', 'comment_created': datetime.datetime(2020, 10, 3, 9, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'shrey183', 'type': 'User'}, {'comment_id': 499134267, 'comment_body': 'I have added `.sdfgz` as a special format similar to `.maegz`, in case it is useful to someone. ', 'comment_created': datetime.datetime(2020, 10, 3, 9, 57, 16, tzinfo=datetime.timezone.utc), 'commenter': 'shrey183', 'type': 'User'}, {'comment_id': 499134447, 'comment_body': 'Done! ', 'comment_created': datetime.datetime(2020, 10, 3, 10, 0, 7, tzinfo=datetime.timezone.utc), 'commenter': 'shrey183', 'type': 'User'}, {'comment_id': 499135147, 'comment_body': ""I modified the code to throw `BadFileException` instead of `std::invalid_argument`. However, I don't think it would be better to do error handling in the main body since we might not be able to get helpful error messages. The way `determineFormat` is written now, it terminates exactly when the file or compression format is invalid. Furthermore, we also know in which case it failed and therefore we are able to log out the precise reason (at least in the case when the compression formats are `.zst`, `.bz2` and `.7z`)."", 'comment_created': datetime.datetime(2020, 10, 3, 10, 10, 20, tzinfo=datetime.timezone.utc), 'commenter': 'shrey183', 'type': 'User'}, {'comment_id': 499136525, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 10, 3, 10, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'shrey183', 'type': 'User'}, {'comment_id': 499157744, 'comment_body': 'Great.  We can make a feature request to seed sdmolsupplier with a line number in the future.', 'comment_created': datetime.datetime(2020, 10, 3, 15, 35, 31, tzinfo=datetime.timezone.utc), 'commenter': 'bp-kelley', 'type': 'User'}]","[{'commit_sha': '599e4509ebbc81500f8a0619af61cf684149b52e', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c9464196ed7bb80488864bfa66135b13671ddd0', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '096691d71a50c05b085e3b4530615c6806e6a8d6', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fdbf232b46a09fde82ca0343f9dc590a37d9e07', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10f6ccf3e717aac0f5af74c04cf60e7794f63b6e', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9219d726d8168940e9d70584c7cff3fe2749ec27', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0d034ade503eab185987545cb921d588ce3c89b', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ea1043aa043168ca8e4cfc073f1ef2664135d48', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2656a07b5e18bd82081125cced7f8ef55419ebc', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb2e2a5c7b15ff748a0cc87cda42044e5dbaad06', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd82e0632d905fa61c9fb2df4cad289ac4d1edc1f', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9f310a3b195a3833c2d189aa17b7cc4a701efe3', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9138a947c4fce5d3ceb1e7c726a43a872e5b95e', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9455741d56e46c999f85c805e6cef3b09e1c2029', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddbff273cafad57c577d6b441eacff708b80b6af', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fa4561d78300f1d9f824b3746146e8899ee62a0', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cc0eb650178e14d2de15ebba85f7a8a0e3087f4', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2a3a333df337246c7ccd5c82b48d7e6e3523272', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07f6d7d8a847fface2bde33b9cebdd9469e46b02', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f12a1fb538fd169d1b865495a3d5852c4dbe706c', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db62b935dabdc75ec4c2c4d952417d2c658a1cdd', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c685c2a4419a33304d03a46d450a32633d2a1515', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a3ffda4b324ab58c8c7a8dd4e2c3a5a2a2849f7', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb8e2cb888ba5b54d1921e6b10df47aa84440563', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2edc468b8285ec15192fdad0dd30d09192c86ecc', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9703f8d74122ac3c0333312f5a1067b516fca00', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3d133ab0e0c30987c82f04b4752c229cb35cd59', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b94151a7973cf097327d49c69550f3761a7843e', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fcaae34de8139ba162ab26dab996c17b4f183ae', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5393c681687a4e6987e177eca5a740fca7fae77b', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fb6a7bcd87509b9d538dfe5dcebf6269ce30ab5', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dbd69b3170ed39da2f5eaabe215638d5c358ef8', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd6a9b4c81c6a8954424e91ea3c9785e702c264c', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e27736c3d6e652ff92b7fb6556283da7e86ac5d0', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd424e411f15c77247deef985b921a57bc396c765', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa28f06a0beae4de2ac32337fb040ec0323aa0b6', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8d1c4636de2231fe2c92aecf270a60ca07e0756', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a122886aba891049f32ffa1b76421a27366e9591', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4128dff1ba438bbe91b3c7014e8c3c105effb7a0', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63d415e3582a6995d4e50e052b1a9c082a9eb9ed', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c04ba64b37f52fe6a08918e15195276d49a54550', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1528ec7c70e27fe9379b1f95b0556f8cf191c385', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c00ec97200f138d5671a6ea51b3987e53e7f0cd', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '020218cd99a87e055e1431213eaad512a97506ab', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f238bf044a863eb76a2f4eedc7ac4912128992', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3209dd70f8e2cb1a409134585662a6e6c622eeb2', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '873a546132a6bd394d511c6eb78da85775b42569', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49fff0610cd24db2838dec60cbdca31929fdfa6a', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad8fa0db4cb234240216d5f1b01d6608ae2d3893', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b8c699cb96e6c8829cf0ec7001595d29e881632', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f5dcf3584ef07f2a8237fd5c08157574daba4c', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44783153471062cfd1519e316e1847aced3a5950', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8934a37fa6cb4175524114bd5d92bf62ea7e84f7', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7d0f0d17acc6ad0c81dccf801101a6afa89ec8f', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eef1edcdbc0cf02ade20d754ed2c88396ca2b9f', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a727515e791e2bc61db4b4dad40a5a82f712691', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aeef5a74d370a5a60e75679e178dfc9039bf309', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f52f4e5b6815caf4b9da301fca6aa5c9dfdf3997', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '514ae750d9c15a0b09a50b79186fd9a9bc5702c9', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '803e01e3d2b1768703d677cd467a4bc992b4098e', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864c9ece6a019ca4630a4522a1708c19e2083f68', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d0c7efc52ec6c70e820431eadcd735390232b57', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5379919550ea383641a9af311e50cb70ffcd941', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abbe0a47817030f675f7d8f394d15e99c7ee8b67', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3230653741d17fafe572f2a70f9288d215e2dfdd', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '538b777b1a7f56719599a53be13af6e69c837705', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c79828361e5d1cc2948a8c4cfbdc3b1bb5f1e55c', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e47b2b94bf8508e594ab1dc50b84e499fbfc3787', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60342c3f647da993603a276f01810eb3809df126', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2506ebdfe015fa9951bc2a3ba2e0a868ccce7d6', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e10b4661764c92cac1e6e31e5460b34476a2cce', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7644f15eba304cb208089506eb31c6053724ff0', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a427da3c321020726192c6db68e90f792c5df600', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a656a5fe700e21d3d71031b3eec372c2c403b080', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'caad009582afe8a4cb066c63c1c7fdbf0c6f8377', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1de8da4e147b2bd050c55c83068fe762a3dda270', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c3814bba07f6d79f5b55429e750c3a716504333', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69f728f6e66247ecae938f274d018f08ec138583', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a8d8e07e86ea568574048ede0bc3b0663f73c23', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '007e9049ed7b347d5dd5e53774a099b7778fea92', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df4088c8320acc683ca5a4f0954ecec2678a6814', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0da2346d63fc6bff91728d2854818fd52105b45f', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e9e496c590a24da948d1a53af02b2c5ae1548b2', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8894e0a089d2d5af9f26a047b9ba721fc2e8af4f', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edfbfede7309031485cbb2f5a725cf056e3cf6b1', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9360cf24dabe9712d7b61584fd88497264d5071', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '459ee8e69aefb6d273d1ef2adc7be06f549fc1a5', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08efdfae6dc0859dc3f608e6532dbe156991e5a8', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f8d4e3dc66de5c74b7b484627a06e1627e9be41', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f366f9f835bf0222007ba507e74a7bbbf6a35155', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a0dbe817228c2ace93dac822469f3eb12d77244', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64e71efed39e1265dae66f302e9c1653071a0109', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51d853318f10a676df5d27474efb14ba183aac56', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89ebc5a06a06d319e261fdf740bc7548e42db377', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '687e1a4242747ef6bacaa3d9669b7708935b5d64', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55cde11978537c0080fa14f07ee21ff5f3e2dc9b', 'committer_username': 'greglandrum', 'committer_name': 'Greg Landrum', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 29, 16, 41, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cedccdbb796304b7d24c240772cb400b78ab02da', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68ae25fff016e826cf68e15b68c9febeaba7c288', 'committer_username': 'greglandrum', 'committer_name': 'Greg Landrum', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 29, 16, 41, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '809e4d2258db94e7d43ec1d08d530ea770bfc4bb', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae6623c29f0759a26793457066ecfad66f70cb7c', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1866f676f231711a7f39b57e110658e18f90f9fb', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa3ce0f27eaa27d7a4ba2818d0395e9892937da4', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cca744db7fd7e078b7ab3f6bd0ceedd054232a77', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e85caa9544812f67fa686eea776812a58667e348', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39d022d40e90d6619259c820971991ee69c4a8cd', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c11b913447348b0da017fdb73f91b7d79f50e82b', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae151ebb07633fd5faf891f3dd9f26d6e82ab890', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc4e056dd3874cb33e414a5e8475ae71297f8556', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04466e913f7f5e3f19ade647f8282d2de61b1c33', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aabd9789248ea6d405c62c70c12c90aa15e984b', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1a859c5736a12d73a2d6144ac0506ee42ba9218', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '273e9191a7af3f53c32017b27229f96672983667', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4ba81b9451d5efa13eb8d2815767fbdba0da62b', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca9ee7735a32364c731243e99504d18119b1a355', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c8691fe92ed14eddf334d31b002e81c03c6f627', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39ded7897c4251d2d85a301b25294508cf70b3bd', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7f4ed85a6f0739fb78d2cf10017a1b61af617b8', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f383feabb8f6c903d75a9e3dce15469becd2a8', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a7582b3b3c8003eb87521a140ad72dc0f682e50', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a08775fa70ec45d5557d9b3ae4e9b4d639f43b7', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '127dd33b9d7882d7be2a5e5bbf8789f03cbf6c5d', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b011f49f2689e4d4521bc31f92661dd11f60d867', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '690c8bfb4436a72d8496f409c2e6de656856cdd9', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd99d46b27d169af0df3ce51f2caf07bcb7b6befc', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2730d0d05c7905967d22a757a56b1e579e4e1178', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b88f4c650d40fa024c9b0b2500ecca33e9286bec', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fe6b3663270644c8a9c47edf80c5fb966de63e3', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2fba96c5d93134cd21a473455719935eef1b712', 'committer_username': 'greglandrum', 'committer_name': 'Greg Landrum', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 29, 16, 41, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6772ae854c7a0d4e0c3f8c44141613143623cde4', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a9bcd64e1d97a7b52c838e8ebb63ea88bd79b08', 'committer_username': 'greglandrum', 'committer_name': 'Greg Landrum', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 29, 16, 41, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6de78219da02c3cac33261b7531a60630c67c1', 'committer_username': 'greglandrum', 'committer_name': 'Greg Landrum', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 29, 16, 41, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c523d783f6e68163a8e7dfa0e665aeed857817dc', 'committer_username': 'greglandrum', 'committer_name': 'Greg Landrum', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 29, 16, 41, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '355a1912a5f989d373fc2966e606efcc9148a19b', 'committer_username': 'greglandrum', 'committer_name': 'Greg Landrum', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 29, 16, 41, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ae6d93488e2879cf807fc6f150d4824e1261630', 'committer_username': 'greglandrum', 'committer_name': 'Greg Landrum', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 29, 16, 41, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a2960b98d48d51694ce6ba6a27e58ec143bc45c', 'committer_username': 'shrey183', 'committer_name': 'Shrey Aryan', 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 29, 15, 42, 36, tzinfo=datetime.timezone.utc)}]",Shrey Aryan,28196797,,User,,41,,4,6

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
10009991,rdkit,rdkit/rdkit,HTML,857,2568,82,228,7818,994,35,65,"[{'id': 473045882, 'number': 3363, 'closed': datetime.datetime(2020, 10, 9, 2, 31, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 25, 8, 52, 49, tzinfo=datetime.timezone.utc), 'time_taken': 3865097.0, 'time_delta': '44 days, 17:38:17', 'additions': 2496, 'deletions': 3, 'state': 'closed'}, {'id': 386698248, 'number': 3001, 'closed': datetime.datetime(2020, 3, 14, 13, 28, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 11, 13, 44, 46, tzinfo=datetime.timezone.utc), 'time_taken': 258212.0, 'time_delta': '2 days, 23:43:32', 'additions': 17, 'deletions': 2, 'state': 'closed'}]"
