pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
412209326,WIP: Dataflow based Preprocessing source,#584 ,True,604,https://api.github.com/repos/intel/dffml/pulls/604,https://github.com/intel/dffml/pull/604,closed,360,2,8,3,3,7,0,0,[],2020-05-01 16:54:39+00:00,2020-05-15 01:59:10+00:00,1155871.0,"13 days, 9:04:31","[{'comment_id': 418633758, 'comment_body': '```suggestion\r\n            ""df = dffml.source.df:DataFlowSource"",\r\n```', 'comment_created': datetime.datetime(2020, 5, 1, 17, 1, 3, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 418633813, 'comment_body': '```suggestion\r\n@entrypoint(""df"")\r\n```', 'comment_created': datetime.datetime(2020, 5, 1, 17, 1, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 418634878, 'comment_body': 'Probably want to use MemorySource for testing purposes', 'comment_created': datetime.datetime(2020, 5, 1, 17, 3, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 420231398, 'comment_body': '```suggestion\r\n@op(\r\n```', 'comment_created': datetime.datetime(2020, 5, 5, 16, 12, 27, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 420231535, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 5, 5, 16, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 420231635, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 5, 5, 16, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 422265300, 'comment_body': '```suggestion\r\n        value=[feature.NAME, edit_feature.op.outputs[""output""].name],\r\n```', 'comment_created': datetime.datetime(2020, 5, 8, 17, 17, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': '22bcf2234f903d039c15244c7d5eee30a0c2a821', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a44a54714ee13d06135e27e8c2272308aa5fab85', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '289921420a1edf08c4b9bc256d5cd3673c241fbd', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
460650076,source: df: Added docstring and doctestable example,"Closes: #671

Signed-off-by: sakshamarora1 <sakshamarora1001@gmail.com>",True,824,https://api.github.com/repos/intel/dffml/pulls/824,https://github.com/intel/dffml/pull/824,closed,62,0,2,3,0,1,0,0,[],2020-08-01 00:37:23+00:00,2020-08-04 17:52:38+00:00,321315.0,"3 days, 17:15:15","[{'comment_id': 465200114, 'comment_body': '```suggestion\r\n    >>> dataflow = DataFlow(multiply, AssociateDefinition)\r\n```', 'comment_created': datetime.datetime(2020, 8, 4, 17, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': '44046e095b170909afe9230e4933894fc5dc9e60', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a6bcd8e48f23e33b4069a40f6528ba4712dee2e', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1cc1c28c0048269448fb3916a464ad982290076', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
419176848,cli: edit: Edit records using DataFlowSource,"#635 Splitted `edit` into `edit record` and `edit all`.
#636 Added `dffml edit all` command that edits all the records in any source using DataFlowSource.

Note: I added `edit_feature` operation to `dffml/operation/preprocess.py`.",True,644,https://api.github.com/repos/intel/dffml/pulls/644,https://github.com/intel/dffml/pull/644,closed,292,12,7,6,0,19,0,0,[],2020-05-17 21:29:02+00:00,2020-05-19 23:20:25+00:00,179483.0,"2 days, 1:51:23","[{'comment_id': 426307709, 'comment_body': 'This way the whole block can be copy and pasted\r\n\r\n```suggestion\r\n    Expertise,Salary,Trust,Years\r\n```', 'comment_created': datetime.datetime(2020, 5, 17, 21, 38, 35, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426308536, 'comment_body': '```suggestion\r\n    1,10,0.1,0\r\n```', 'comment_created': datetime.datetime(2020, 5, 17, 21, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426308552, 'comment_body': '```suggestion\r\n    3,20,0.2,1\r\n```', 'comment_created': datetime.datetime(2020, 5, 17, 21, 48, 4, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426308572, 'comment_body': '```suggestion\r\n    5,30,0.3,2\r\n```', 'comment_created': datetime.datetime(2020, 5, 17, 21, 48, 18, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426308594, 'comment_body': '```suggestion\r\n    7,40,0.4,3\r\n```', 'comment_created': datetime.datetime(2020, 5, 17, 21, 48, 32, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426308622, 'comment_body': '```suggestion\r\n    EOF\r\n```', 'comment_created': datetime.datetime(2020, 5, 17, 21, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426354710, 'comment_body': ""Let's move this to `dffml/operation/math.py`, let's add another input which is the number to multiply by. We should call it something like\r\n\r\n```suggestion\r\nasync def multiply(multiplicand, multiplier):\r\n```\r\n\r\nWhere `multiplicand` is the feature to be multiplied, and `multiplier` will be `10` as given from a `seed` input.\r\n\r\nIt also needs a docstring with an example"", 'comment_created': datetime.datetime(2020, 5, 18, 3, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426354768, 'comment_body': 'This will need updating', 'comment_created': datetime.datetime(2020, 5, 18, 3, 41, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426354843, 'comment_body': ""We'll want to add the number 10 to the seed to have it be the number to multiply by"", 'comment_created': datetime.datetime(2020, 5, 18, 3, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426354889, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 5, 18, 3, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426354921, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 5, 18, 3, 42, 33, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426358171, 'comment_body': 'It would be best if we could edit individual records as well.\r\n\r\nTake another look at\r\n\r\nhttps://github.com/intel/dffml/blob/b003694e0f0b78dcb4efbd9a65f86bdbc72a291e/dffml/cli/ml.py#L8-L59\r\n\r\nand check out how we can subclass from the same base class which handles setting up of common config situations.\r\n\r\nFor this, we\'ll want to move the args and the dataflow loading code into a parent class, we can just replace `self.sources` with the DataFlowSource that\'s wrapping the original and it\'ll pull all the repos and update them transparently (trace through the source code if this doesn\'t make sense, aka flow the calls step by step and check to see what the next function will be when we call update, you should see `df.update -> sources.update -> [every source].update`).\r\n\r\n```python\r\nclass BaseEditCMD:\r\n    ... arg_\'s ...\r\n\r\n    async def __aenter__(self):\r\n        await super().__aenter__()\r\n        dataflow_path = pathlib.Path(self.dataflow)\r\n        config_cls = self.config\r\n        if config_cls is None:\r\n            config_type = dataflow_path.suffix.replace(""."", """")\r\n            config_cls = BaseConfigLoader.load(config_type)\r\n        async with config_cls.withconfig(self.extra_config) as configloader:\r\n            async with configloader() as loader:\r\n                exported = await loader.loadb(dataflow_path.read_bytes())\r\n                dataflow = DataFlow._fromdict(**exported)\r\n\r\n        self.sources = DataFlowSource(\r\n            DataFlowSourceConfig(\r\n                source=self.sources, dataflow=dataflow, features=self.features,\r\n            )\r\n        )\r\n\r\nclass EditAllRecords(BaseEditCMD):\r\n    async def run(self):\r\n        async with self.sources as src:\r\n            async with src() as sctx:\r\n                async for record in sctx.records():\r\n                    await sctx.update(record)\r\n```\r\n\r\nUse `SubsetSources` in the `record` command to edit only single records. If a dataflow is given, don\'t call `pdb.set_trace()`\r\n', 'comment_created': datetime.datetime(2020, 5, 18, 3, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426358401, 'comment_body': 'Looking forward to the mnist example, we should make it so that if `multiplicand`  is an array, it multiplies every element of the array by the `multiplier` (so that you can do normalization) include an example of this in the docstring example', 'comment_created': datetime.datetime(2020, 5, 18, 4, 1, 3, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426495685, 'comment_body': ""Oh, I didn't notice that!"", 'comment_created': datetime.datetime(2020, 5, 18, 9, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sakshamarora1', 'type': 'User'}, {'comment_id': 426497580, 'comment_body': 'I was thinking that the operation can be modified in the following way to accommodate other mathematical operations :\r\n\r\n```python\r\nedit_feature_def = Definition(name=""feature_data"", primitive=""generic"")\r\noperator_def = Definition(name=""operator_sign"", primitive=""str"")\r\nfactor_def = Definition(name=""factor_def"", primitive=""generic"")\r\n\r\n@op(\r\n   name=""edit_feature"",\r\n   inputs={""features"": edit_feature_def, ""operator"": operator_def, ""factor"": factor_def},\r\n   outputs={""updated_features"": edit_feature_def},\r\n)\r\nasync def edit_feature(features, operator, factor):\r\n   operators = {\r\n      ""+"": features + factor,\r\n      ""-"": features - factor,\r\n      ""*"": features * factor,\r\n      ""/"": features / factor,\r\n   }\r\n\r\n   value = operators[operator]\r\n   return {""updated_features"": value}\r\n```', 'comment_created': datetime.datetime(2020, 5, 18, 9, 39, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sakshamarora1', 'type': 'User'}, {'comment_id': 426499559, 'comment_body': 'Alright!', 'comment_created': datetime.datetime(2020, 5, 18, 9, 42, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sakshamarora1', 'type': 'User'}, {'comment_id': 426906310, 'comment_body': ""The issue I have with this is that operations aren't necessarily tied to feature modification. Naming one `edit_feature` doesn't keep with the generic nature of things, since we might want to multiply something that's not related to ML or features in some dataflow."", 'comment_created': datetime.datetime(2020, 5, 18, 21, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 426906631, 'comment_body': 'Also, the above code computes three unused results', 'comment_created': datetime.datetime(2020, 5, 18, 21, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 427652332, 'comment_body': '```suggestion\r\n- `edit all` command to edit records in bulk\r\n```', 'comment_created': datetime.datetime(2020, 5, 19, 23, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': 'f8ae9e5132db4bee1d7b634a91b05687ec7207c6', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5f11921c900668ffbd5be53a76c9b15f30def96', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56521bc962fe45d5ac04c3c872d2ffe56563eada', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '547f7feeb64f0b0282441701c31c774110eb1781', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd46f8a6778fe9d382c652e07f64e042eb42b96a', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dff47e32775956cdc1e782053dc7c8fada6e32e', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
437001451,source: dir: New Directory Source,"Example cli:
```console
dffml list records -sources f=dir \
    -source-foldername dataset/train \
    -source-feature image \
    -source-labels airplane bird frog \
    -log debug
```

Labels image arrays with names of their respective folders the images are present in.

| -- dataset
| -- | -- train
| -- | -- | -- label_1
| -- | -- | -- | -- image_1.png
| -- | -- | -- | -- image_2.png
| -- | -- | -- | -- .....
| -- | -- | -- label_2
| -- | -- | -- | -- image_1.png
| -- | -- | -- | -- image_2.png
| -- | -- | -- | -- .....

TODO :-
- [x] Method to save extracted feature vectors in a different file
- [x] Add support for unlabelled images 

Signed-off-by: sakshamarora1 sakshamarora1001@gmail.com",True,718,https://api.github.com/repos/intel/dffml/pulls/718,https://github.com/intel/dffml/pull/718,closed,227,1,4,11,3,2,0,0,[],2020-06-19 09:45:38+00:00,2020-06-24 20:56:31+00:00,472253.0,"5 days, 11:10:53","[{'comment_id': 442964110, 'comment_body': 'Let do what we talked about and add PIL and numpy to tests_require and use Image.new here', 'comment_created': datetime.datetime(2020, 6, 19, 17, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 442964793, 'comment_body': '```suggestion\r\nfrom .source import BaseSource, BaseSourceContext\r\n```', 'comment_created': datetime.datetime(2020, 6, 19, 17, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': 'ec89445f5769175fdd00c89120deb25e59ad21f6', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83532c186d9aa3d0e3aef61606e5e2064d3b7d9c', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c579d867918b3f6081146d95a26fa6e43d925bc', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '584eac3c064987b11d71df867c116fd1ae1b766e', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22c96759dccea8b340dd00749165b39d6b538a47', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c0165eea175dd802b33bd3a25df7334721accac', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58df953aae7f8f79bda423fd6904e99ef93063a4', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32274d977d624290951c4313ad7d697af7cde482', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ee1b2599e858dcba19923dee8d749f982bac2c6', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7d45df05bd68533cb28d34ea7ea3bfae3b780fb', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b180d1defa358d051cd3b7d76212fe2f50820172', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
434061589,operations: image: Add new image preprocessing operations plugin,Also Fixes: #638 ,True,709,https://api.github.com/repos/intel/dffml/pulls/709,https://github.com/intel/dffml/pull/709,closed,445,39,32,3,1,18,0,0,[],2020-06-13 21:40:00+00:00,2020-06-19 21:06:48+00:00,516408.0,"5 days, 23:26:48","[{'comment_id': 440965935, 'comment_body': 'We should really make this a separate file. Due to what yash talked about here: https://gitter.im/dffml/community?at=5ee5fd4f7b6da9126a942995', 'comment_created': datetime.datetime(2020, 6, 16, 16, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441026354, 'comment_body': '```suggestion\r\n    dffml_operations_image\r\n```', 'comment_created': datetime.datetime(2020, 6, 16, 17, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441075931, 'comment_body': '```suggestion\r\nCopyright (c) 2020 Intel, Saksham\r\n```', 'comment_created': datetime.datetime(2020, 6, 16, 18, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441076960, 'comment_body': 'Can we add a comment saying that effect this will have, or better yet write a description in the docstring', 'comment_created': datetime.datetime(2020, 6, 16, 19, 1, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441077562, 'comment_body': ""Let's talk about how this works in the description too."", 'comment_created': datetime.datetime(2020, 6, 16, 19, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441091225, 'comment_body': 'We can probably use the auto definition creation here\r\n\r\n```suggestion\r\nasync def resize(data: List[int], old_dim: List[int], new_dim: List[int]) -> Tuple[int]:\r\n```', 'comment_created': datetime.datetime(2020, 6, 16, 19, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441627290, 'comment_body': 'Here, I am thinking to modify the configloader to return a numpy array after .flatten() and not change it to tuple or list. Please refer to the second paragraph in this comment https://github.com/intel/dffml/pull/708#issuecomment-643649296\r\n\r\nWhat do you think?', 'comment_created': datetime.datetime(2020, 6, 17, 15, 17, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sakshamarora1', 'type': 'User'}, {'comment_id': 441627709, 'comment_body': 'Okay!', 'comment_created': datetime.datetime(2020, 6, 17, 15, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sakshamarora1', 'type': 'User'}, {'comment_id': 441912623, 'comment_body': ""It's okay if feature data in a Record is a numpy type. I made this sepcific comment because you immediately change `data` into a `np.array`.\r\n\r\n```python\r\nnp.array(data).reshape(old_dim)\r\n```"", 'comment_created': datetime.datetime(2020, 6, 18, 1, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441961462, 'comment_body': 'We still need to do this', 'comment_created': datetime.datetime(2020, 6, 18, 4, 27, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441961520, 'comment_body': 'We still need to do this too', 'comment_created': datetime.datetime(2020, 6, 18, 4, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441961900, 'comment_body': ""Unless there's a compelling reason to not use the `op` auto definition stuff, we should probably use it here to decrease number of lines."", 'comment_created': datetime.datetime(2020, 6, 18, 4, 29, 56, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 442952164, 'comment_body': '```suggestion\r\n    -flow \\\r\n      \'[{""seed"": [""image""]}]\'=resize.inputs.data \\\r\n      \'[{""resize"": ""result""}]\'=multiply.inputs.multiplicand |\r\n```', 'comment_created': datetime.datetime(2020, 6, 19, 17, 2, 24, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 442952443, 'comment_body': ""```suggestion\r\n    -seed \\\r\n      '[280,280,3]'=dffml_operations_image.operations.resize.inputs.old_dim \\\r\n```"", 'comment_created': datetime.datetime(2020, 6, 19, 17, 3, 2, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 442952515, 'comment_body': ""```suggestion\r\n      '[28,28]'=dffml_operations_image.operations.resize.inputs.new_dim \\\r\n```"", 'comment_created': datetime.datetime(2020, 6, 19, 17, 3, 11, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 442952580, 'comment_body': '```suggestion\r\n      \'{""image"": ""product""}\'=associate_spec 0.00392156862=multiplier_def \\\r\n```', 'comment_created': datetime.datetime(2020, 6, 19, 17, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 442953097, 'comment_body': '```suggestion\r\n    - If the new dimensions are in 2D, the image is converted to grayscale.\r\n\r\n```', 'comment_created': datetime.datetime(2020, 6, 19, 17, 4, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 442953162, 'comment_body': '```suggestion\r\n        it will resize the image with INTER_CUBIC interpolation.\r\n\r\n```', 'comment_created': datetime.datetime(2020, 6, 19, 17, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': '1bca6de9a23bb7356e7a8d5c613075bf9cd9f238', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b086bcf24d502bd65658e9b2c0fe7794d545f30', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5378d2879bb497c33dc3465602189f8c2a8125b4', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
438651855,WIP: operations: image: Add new image processing operations,,True,731,https://api.github.com/repos/intel/dffml/pulls/731,https://github.com/intel/dffml/pull/731,closed,544,384,21,7,2,4,0,0,[],2020-06-23 15:33:47+00:00,2020-07-02 00:34:49+00:00,723662.0,"8 days, 9:01:02","[{'comment_id': 445211757, 'comment_body': ""Let's copy the way that the python standard library commonly does this (i.e. [`dataclasses._MISSING`](https://github.com/python/cpython/blob/3.7/Lib/dataclasses.py#L165-L169))\r\n\r\nAdd this above `Definition`\r\n\r\n```python\r\n# A sentinel object to detect if a definition has a default value or not\r\nclass _NO_DEFAULT:\r\n    pass\r\nNO_DEFAULT = _NO_DEFAULT()\r\n```\r\n\r\n```suggestion\r\n    default: Any = NO_DEFAULT\r\n```"", 'comment_created': datetime.datetime(2020, 6, 24, 22, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 445211821, 'comment_body': '```suggestion\r\n        if self.default is NO_DEFAULT:\r\n```', 'comment_created': datetime.datetime(2020, 6, 24, 22, 43, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446571714, 'comment_body': 'Do we even need these files anymore?', 'comment_created': datetime.datetime(2020, 6, 27, 22, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 446625165, 'comment_body': ""Oh! Since we are using diagrams now, we don't need them. I'll remove them!\r\n"", 'comment_created': datetime.datetime(2020, 6, 28, 9, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sakshamarora1', 'type': 'User'}]","[{'commit_sha': '968b48c99cc2ba9634f3e5564c56636eaedbdcbe', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e40d28d6cef12fc7075a26b687b729c43a7d2043', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b403870a32a0b84bfd329b2015de5867617c386', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49092d5503ffabfc62c1d2ad2378540441558878', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc1a5eb48ddcceee25a4f932768621862ef46078', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '784450e8b240b36291393db4fd68c4e32b6990ac', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bee8d482bb5416c1203381c0d13848dd9d83585', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
450897212,model: pytorch: Add PyTorch based pre-trained ConvNet models,"Closes: #765 

Signed-off-by: sakshamarora1 <sakshamarora1001@gmail.com>",True,784,https://api.github.com/repos/intel/dffml/pulls/784,https://github.com/intel/dffml/pull/784,closed,1086,2,24,12,4,9,0,0,[],2020-07-17 08:12:07+00:00,2020-07-30 18:14:11+00:00,1159324.0,"13 days, 10:02:04","[{'comment_id': 460115803, 'comment_body': '```suggestion\r\n                results = await CLI.cli(*predict_command[1:-1])\r\n```', 'comment_created': datetime.datetime(2020, 7, 24, 15, 12, 32, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 460117520, 'comment_body': 'IntegrationCLITestCase already puts us into a tempdir for each `test_`\r\n\r\nLet\'s decorate this function with [`cached_download_unpack_archive`](https://intel.github.io/dffml/master/api/util/net.html#dffml.util.net.cached_download_unpack_archive), and have the first code in the function be\r\n\r\n```python\r\n            os.unlink(os.path.join(""hymenoptera_data"", ""train"", ""ants"", ""imageNotFound.gif""]))\r\n            subprocess.check_output(\r\n                [""bash"", sh_filepath(""resnet18"", ""unknown_data.sh"")]\r\n            )\r\n```', 'comment_created': datetime.datetime(2020, 7, 24, 15, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 460117727, 'comment_body': 'We can then get rid of the stdout redirection', 'comment_created': datetime.datetime(2020, 7, 24, 15, 15, 38, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 460166663, 'comment_body': ""We'll follow #806 guide once it's complete to make these customizable"", 'comment_created': datetime.datetime(2020, 7, 24, 16, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 460318759, 'comment_body': ""Remember we're not doing this anymore. Instead save using the model name"", 'comment_created': datetime.datetime(2020, 7, 24, 22, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 461738131, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 28, 17, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 461738194, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 28, 17, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 461744229, 'comment_body': ""Let's do some general cleanup"", 'comment_created': datetime.datetime(2020, 7, 28, 17, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 463126969, 'comment_body': '```suggestion\r\nCopyright (c) 2020 Intel, Saksham\r\n```', 'comment_created': datetime.datetime(2020, 7, 30, 16, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': '9a906940a6c0e8a16c23a52234e0c428d2687121', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a6100b950f028934029b061d1034877509f336f', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffe195a6c03a3511c98db31650adabe6522f180a', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '633e5262ef373fd7732df1de6c59c0b010e9f8c5', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f341d5eaa917fc1c022ded3047e4af0f1abfba4f', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49e0a6ccb9528f495a9c64c5b973e72ea5275ead', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9ea956009d24e9621f2cd425f7aa66af8d5536d', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6895e79150544213a73744b322edab0a3186027b', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3842d338788caee50aed78c719a29a4dfce81132', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaee4a2bedf2c3cbea84980f880c634d0c32c8f0', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a28729e77d93b8d671e9836cb2d17d25576a1d', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8acc4f9ea5e3b6d21c8adedd99e517c5f83ff64', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
447835764,docs: usage: Add example usage for new image operations,,True,777,https://api.github.com/repos/intel/dffml/pulls/777,https://github.com/intel/dffml/pull/777,closed,1211,1,25,17,4,23,0,0,[],2020-07-12 00:57:11+00:00,2020-08-26 20:53:20+00:00,3959769.0,"45 days, 19:56:09","[{'comment_id': 456558401, 'comment_body': '```suggestion\r\ncurl -LO http://www.robots.ox.ac.uk/~vgg/data/flowers/17/17flowers.tgz\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 16, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456558947, 'comment_body': '```suggestion\r\nsha384um -c - << EOF\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 16, 51, 56, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456562734, 'comment_body': ""Let's move this in between the literalinclude and the code-block"", 'comment_created': datetime.datetime(2020, 7, 17, 16, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456562964, 'comment_body': '```suggestion\r\n    shutil.copy(os.path.join(directory, filename), os.path.join(label_dir, filename))\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 16, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456563050, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 17, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456565918, 'comment_body': ""We need `dffml-config-yaml` too if we're going to use it"", 'comment_created': datetime.datetime(2020, 7, 17, 17, 5, 58, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456567527, 'comment_body': 'After this paragraph explain what preprocessing needs to be done, and why. Link to the image operations. In another PR, make sure we have docstrings for all of them explaining what they do. Finally link to the image operations using\r\n\r\n```rst\r\n:ref:`plugin_operation_dffml_operations_image`\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 17, 9, 19, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456570497, 'comment_body': 'Also add to `scripts/docs/care`', 'comment_created': datetime.datetime(2020, 7, 17, 17, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456570701, 'comment_body': ""Let's move the visualization before the create command"", 'comment_created': datetime.datetime(2020, 7, 17, 17, 15, 31, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456668450, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 20, 51, 20, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456668531, 'comment_body': 'Leading spacing here is inconsistent', 'comment_created': datetime.datetime(2020, 7, 17, 20, 51, 32, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456710606, 'comment_body': '```suggestion\r\n  -log critical \\\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 23, 14, 13, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456710659, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 23, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456710706, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 23, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 472296563, 'comment_body': '```suggestion\r\neach directory containing sub-directories corresponding to the 17 flower classes using\r\n**split.py**. This splitting code is documented `here <link to where they tell you to do it this way>`_\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 15, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 472297059, 'comment_body': 'Whenever we have a distinct file we should call it out like so before the literalinclude\r\n\r\n```suggestion\r\n**split.py**\r\n\r\n.. literalinclude:: /../examples/flower17/split.py\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 15, 45, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 472297387, 'comment_body': '```suggestion\r\nWe split these images into flower_dataset/train and flower_dataset/test directories,\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 15, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 472302005, 'comment_body': 'Why are we only flattening normalized calcHist output?', 'comment_created': datetime.datetime(2020, 8, 18, 15, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 472307628, 'comment_body': 'We should end by linking to the CNN tutorial and saying that that will vastly improve accuracy', 'comment_created': datetime.datetime(2020, 8, 18, 16, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 472316577, 'comment_body': ""The other 2 feature extractors are 1 dimensional so they don't need to be flattened."", 'comment_created': datetime.datetime(2020, 8, 18, 16, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sakshamarora1', 'type': 'User'}, {'comment_id': 472316740, 'comment_body': 'Sounds good!', 'comment_created': datetime.datetime(2020, 8, 18, 16, 15, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sakshamarora1', 'type': 'User'}, {'comment_id': 472317666, 'comment_body': ""Actually I wrote the splitting code myself, it's not documented anywhere."", 'comment_created': datetime.datetime(2020, 8, 18, 16, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sakshamarora1', 'type': 'User'}, {'comment_id': 477514457, 'comment_body': '```suggestion\r\nvia DFFML. We can install it with ``pip``. We will also be using image loading from\r\n``dffml-config-image``.\r\n\r\n.. code-block:: console\r\n\r\n    $ pip install -U dffml-model-pytorch dffml-config-image\r\n```', 'comment_created': datetime.datetime(2020, 8, 26, 18, 50, 19, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': 'f6b435cbf99198b33169a18675808e04cfbac29d', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1c7a3823aa434b6edae0d152592dd2ad376bf6c', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '180af8c11f54617a813151d3c6d052d1e8431307', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d9f55efd830c9755cdf1cf3d3d5e41d5eacf195', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50cb81cdb0e721bd3536eb54903fff383b25fdca', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70237f2a6d19cbb46782999303c95fdd90f75d0d', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25585bdc0ea6c0dde2a4877a6fa0ea915f4c8c57', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bf4ea7d8910b9fe27c33b4e96e8710edc26253d', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5e634508b7922920b68c428ab9747a026c8b0a8', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffb0f73bf8f194dd5aa4a6d4c5b519f87ba4583d', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c187f5d30390ffe1193baacec42ca688f32e211', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b6b1c3bfbf24e1e2fcedfcd06c7c89067736f9e', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65fc89f56b30f35451772cce292982da08dbcbbc', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b0b59d1a3db0b33262db212477c0bb2f8d5e530', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bc47fdb0430ae14b08ac61f93044afb998abbac', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aae1c689adf507aabfbb8a896950ca5664e111e', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a79a522ffc1c69f5c628b5412c17bcb2cd1361d', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
472160316,model: pytorch: Add custom Neural Network & layer support and loss function entrypoints,"Fixes: #794 

TODOs:
- [x] Merge master after #838 gets merged
- [x] Add tests for all new changes
- [x] Add documentation and example
- [x] Add last layer addition support in `model/pytorch/dffml_model_pytorch/pytorch_pretrained.py`
- [x] Update flower classification example after merging master
- [x] Make changes in `model.pytorch/dffml_model_pytorch/pytorch_base.py` to support non classification/image processing tasks
- [ ] Add entrypoint support for optimizers and learning rate schedulers in pytorch after their annotations are added in the `PyTorch` source code (probably in their next release as they are working on it right now)

The last 2 points in the list will be their own separate pull requests

I also want to try and find if there's a non-confusing way to connect pre-trained model architectures and custom neural nets after all of the above has been done!

Signed-off-by: sakshamarora1 sakshamarora1001@gmail.com",True,839,https://api.github.com/repos/intel/dffml/pulls/839,https://github.com/intel/dffml/pull/839,closed,1205,143,29,28,2,4,0,0,[],2020-08-23 18:26:53+00:00,2020-09-01 16:16:50+00:00,769797.0,"8 days, 21:49:57","[{'comment_id': 476593496, 'comment_body': '```suggestion\r\n                    return getattr(sys.modules[__name__], name + ""Function"")\r\n```', 'comment_created': datetime.datetime(2020, 8, 25, 16, 50, 35, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 476596030, 'comment_body': ""Let's add a comment talking about it"", 'comment_created': datetime.datetime(2020, 8, 25, 16, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 476597277, 'comment_body': ""Let's use `inspect(layer, dict)` or `inspect(layer, str)` instead of `try/except`"", 'comment_created': datetime.datetime(2020, 8, 25, 16, 56, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 476603982, 'comment_body': ""Let's add List[float] options for the mean and std parameters to [Normalize](https://pytorch.org/docs/stable/torchvision/transforms.html#torchvision.transforms.Normalize) within `PyTorchModelConfig` do not append Normalize to the list passed to Compose if either mean or std is None."", 'comment_created': datetime.datetime(2020, 8, 25, 17, 8, 7, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': 'e16e39c275d0bc0c9a3b9f476707eef9c148fbfa', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9792e5f8213c4ba172389626a9f5c0bae179ee6e', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b16884018854b6751417b8971b6bee5475bf74b', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50c14484c217b4466f8393ea6ba11befd2ca7ca5', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f7b222f61536124fc6fd34b7bdbe2346dc7332c', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '654d24a54b206faadf681f2e29fb3ce29b15c81e', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e51570ddcf0f81eb30e133aecc8c913561f1587', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df0af6644a5116e74bbb8881d2eec47c13d9dce8', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '094afe97f22aaa6d4622d590fc5a3c44a566b769', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3951e436ff4493e8f3f29214500112022392fe77', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9be8e433c5dba09f781f2a043c23cfffb7b87aa0', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af83a4a48c9d90b55058653bee1827b5cd3bb326', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cef97f667e825580c6af7320dbdd9ef06e63a3e', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc7c90e87a3bdb67f105e457486e90326c5a6de2', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b5cb89d06150fd37d037f9d5289da2d0e409bdb', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'affb5fa5703208f156b00d1fb1553bd1c60c7375', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1fea5187be790214869b573d601034521f21afc', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7bce9a41e16faeb476ff8fb8f735936e2f73e46', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0dd83de591f5f7fefc85d206ba6503aea5c2f0c', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03c94d20f4a77e2d06caf32773ab134e75c6b093', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a363b79a1ee5a18c707b334c4287a3584013f2a', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b33fb294b95e1b30c1fdfeb094e27c2a930d5f4', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb87add519d716aa39e480d9245adfb41dcd2a91', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '793bab7d432c6b94272fd987bf2ab7b29e646908', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68eafba98e01efbd7597057641c2ed84ec78d12d', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9135b7764cd3fe9594e9ddee00572dd64c492b7', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7bfbf8e44b200837f6c8a85eace7dbfa482cd71', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5969e40c9a39f085d958247704980395e9429d05', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
433888703,record: Improve string representation,"Fixes: #612 
Fixes: #335 

```console
dffml predict all \
    -model tfdnnc \
    -model-batchsize 1000 \
    -model-hidden 30 50 25 \
    -model-clstype int \
    -model-predict label:int:1 \
    -model-classifications $(seq 0 9) \
    -model-features image:int:$((28 * 28)) \
    -sources images=csv \
    -source-filename image.csv  \
    -source-loadfiles image  \
    -pretty
    -log debug
```
Example output of 1 of the records:
```console
	Key:	four
                                                               Record Features
+----------------------------------------------------------------------------------------------------------------------------------------------+
|               image               |                 0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,... (length:784)                 |
+----------------------------------------------------------------------------------------------------------------------------------------------+

                                                                  Prediction
+----------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                    label                                                                     |
+----------------------------------------------------------------------------------------------------------------------------------------------+
|             Value:  3             |                                    Confidence:   0.13614192605018616                                     |
+----------------------------------------------------------------------------------------------------------------------------------------------+

```

For list records:
```console
dffml list records -sources f=csv -source-filename test.csv -pretty

	Key:	0
                                                               Record Features
+----------------------------------------------------------------------------------------------------------------------------------------------+
|             Expertise             |                                                    9                                                     |
+----------------------------------------------------------------------------------------------------------------------------------------------+
|               Salary              |                                                    50                                                    |
+----------------------------------------------------------------------------------------------------------------------------------------------+
|               Trust               |                                                   0.5                                                    |
+----------------------------------------------------------------------------------------------------------------------------------------------+
|               Years               |                                                    4                                                     |
+----------------------------------------------------------------------------------------------------------------------------------------------+
                                                                                                                   Prediction:    Undetermined

```

Signed-off-by: sakshamarora1 <sakshamarora1001@gmail.com>",True,708,https://api.github.com/repos/intel/dffml/pulls/708,https://github.com/intel/dffml/pull/708,closed,79,19,6,4,2,7,0,0,[],2020-06-12 21:18:43+00:00,2020-06-18 03:48:37+00:00,455394.0,"5 days, 6:29:54","[{'comment_id': 439765016, 'comment_body': '```suggestion\r\n                for feature, results in map(lambda k, v: k, export(v), self.features().items())\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 19, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 440362533, 'comment_body': 'Yes you were correct, we want to keep the top level package free of dependencies\r\n\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 6, 15, 18, 22, 25, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 440363161, 'comment_body': '```suggestion\r\n                    if isinstance(results, (list, tuple,))\r\n```', 'comment_created': datetime.datetime(2020, 6, 15, 18, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 440368753, 'comment_body': ""If this suggestion results in an error then you'll want to go modify `export_value` in `dffml.util.data`"", 'comment_created': datetime.datetime(2020, 6, 15, 18, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 440369952, 'comment_body': 'This ""building a table from a dict"" should be it\'s own function. Maybe it should go somewhere like `dffml.util.display`? `display` may not be the best word choice, if you think of something else go for it.', 'comment_created': datetime.datetime(2020, 6, 15, 18, 35, 56, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441274527, 'comment_body': 'We should also check that the `flatten` method exists and can be called to be safe\r\n\r\n```suggestion\r\n    elif getattr(type(value), ""__module__"", None) == ""numpy"" and inspect.ismethod(getattr(value, ""flatten"", None)):\r\n```', 'comment_created': datetime.datetime(2020, 6, 17, 4, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 441605961, 'comment_body': 'Alright!', 'comment_created': datetime.datetime(2020, 6, 17, 14, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sakshamarora1', 'type': 'User'}]","[{'commit_sha': 'c40e07fb3d31b1c227b6ada088fa69273f9d9bfb', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cdf5cf42af9e256adbef4506babde6f468c1f90', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e5f243ae59d4f66cf260c17886ff8b95cded5ae', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35cf78401978e1fe11c5c72953c6e78a2ed97bf2', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
445694937,configloader: png: Rename from png to image,"Fixes: #726 

Signed-off-by: sakshamarora1 <sakshamarora1001@gmail.com>",True,768,https://api.github.com/repos/intel/dffml/pulls/768,https://github.com/intel/dffml/pull/768,closed,45,23,18,1,1,0,0,0,[],2020-07-07 21:27:59+00:00,2020-07-09 17:54:13+00:00,159974.0,"1 day, 20:26:14",[],"[{'commit_sha': '140a7eba5ce8c6f26bd51f851cdf15de30e02a9d', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
446969906,cli: dataflow: create: Add ability to specify instance names of operations,"Fixes: #764 
Fixes: #756 
",True,771,https://api.github.com/repos/intel/dffml/pulls/771,https://github.com/intel/dffml/pull/771,closed,45,20,7,2,2,0,0,0,[],2020-07-09 16:32:53+00:00,2020-07-09 18:57:23+00:00,8670.0,2:24:30,[],"[{'commit_sha': '49567e7154147d8b40827d7e31f82d5df11cc0f6', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a1fef5c39245c0972e4207fd5f476d1a9bd52f8', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21
471803439,util: cli: arg: Add configloading ability to parse_unknown,"base: Update config classmethod in BaseConfigurable class

Signed-off-by: sakshamarora1 <sakshamarora1001@gmail.com>",True,838,https://api.github.com/repos/intel/dffml/pulls/838,https://github.com/intel/dffml/pull/838,closed,95,49,13,2,0,0,0,0,[],2020-08-21 18:50:49+00:00,2020-08-26 16:19:13+00:00,422904.0,"4 days, 21:28:24",[],"[{'commit_sha': 'b054550a4a75f79a61af64ac5a6ac29d7fc563ad', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d477a8af5b0c159d6a39568e01f61e79e55623c', 'committer_username': 'sakshamarora1', 'committer_name': 'Saksham Arora', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 21, 12, 6, 25, tzinfo=datetime.timezone.utc)}]",Saksham Arora,50872172,,User,,46,,30,21

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
149512216,dffml,intel/dffml,Python,138,250,18,64,4168,412,39,27,"[{'id': 575008581, 'number': 998, 'closed': datetime.datetime(2021, 2, 17, 20, 30, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 17, 15, 36, 47, tzinfo=datetime.timezone.utc), 'time_taken': 17602.0, 'time_delta': '4:53:22', 'additions': 43, 'deletions': 8, 'state': 'closed'}, {'id': 533208347, 'number': 921, 'closed': datetime.datetime(2020, 12, 9, 5, 34, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 6, 14, 48, 37, tzinfo=datetime.timezone.utc), 'time_taken': 225948.0, 'time_delta': '2 days, 14:45:48', 'additions': 70, 'deletions': 14, 'state': 'closed'}, {'id': 533207016, 'number': 920, 'closed': datetime.datetime(2020, 12, 29, 16, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 6, 14, 39, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1995400.0, 'time_delta': '23 days, 2:16:40', 'additions': 96, 'deletions': 18, 'state': 'closed'}, {'id': 472160316, 'number': 839, 'closed': datetime.datetime(2020, 9, 1, 16, 16, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 23, 18, 26, 53, tzinfo=datetime.timezone.utc), 'time_taken': 769797.0, 'time_delta': '8 days, 21:49:57', 'additions': 1205, 'deletions': 143, 'state': 'closed'}, {'id': 471803439, 'number': 838, 'closed': datetime.datetime(2020, 8, 26, 16, 19, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 18, 50, 49, tzinfo=datetime.timezone.utc), 'time_taken': 422904.0, 'time_delta': '4 days, 21:28:24', 'additions': 95, 'deletions': 49, 'state': 'closed'}, {'id': 460650076, 'number': 824, 'closed': datetime.datetime(2020, 8, 4, 17, 52, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 1, 0, 37, 23, tzinfo=datetime.timezone.utc), 'time_taken': 321315.0, 'time_delta': '3 days, 17:15:15', 'additions': 62, 'deletions': 0, 'state': 'closed'}, {'id': 460649866, 'number': 823, 'closed': datetime.datetime(2020, 8, 4, 16, 52, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 1, 0, 36, 58, tzinfo=datetime.timezone.utc), 'time_taken': 317754.0, 'time_delta': '3 days, 16:15:54', 'additions': 13, 'deletions': 8, 'state': 'closed'}, {'id': 453289601, 'number': 791, 'closed': datetime.datetime(2020, 7, 28, 16, 19, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 10, 14, 9, tzinfo=datetime.timezone.utc), 'time_taken': 713113.0, 'time_delta': '8 days, 6:05:13', 'additions': 21, 'deletions': 2, 'state': 'closed'}, {'id': 450897212, 'number': 784, 'closed': datetime.datetime(2020, 7, 30, 18, 14, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 8, 12, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1159324.0, 'time_delta': '13 days, 10:02:04', 'additions': 1086, 'deletions': 2, 'state': 'closed'}, {'id': 447835764, 'number': 777, 'closed': datetime.datetime(2020, 8, 26, 20, 53, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 0, 57, 11, tzinfo=datetime.timezone.utc), 'time_taken': 3959769.0, 'time_delta': '45 days, 19:56:09', 'additions': 1211, 'deletions': 1, 'state': 'closed'}, {'id': 446969906, 'number': 771, 'closed': datetime.datetime(2020, 7, 9, 18, 57, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 9, 16, 32, 53, tzinfo=datetime.timezone.utc), 'time_taken': 8670.0, 'time_delta': '2:24:30', 'additions': 45, 'deletions': 20, 'state': 'closed'}, {'id': 445694937, 'number': 768, 'closed': datetime.datetime(2020, 7, 9, 17, 54, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 7, 21, 27, 59, tzinfo=datetime.timezone.utc), 'time_taken': 159974.0, 'time_delta': '1 day, 20:26:14', 'additions': 45, 'deletions': 23, 'state': 'closed'}, {'id': 438651855, 'number': 731, 'closed': datetime.datetime(2020, 7, 2, 0, 34, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 15, 33, 47, tzinfo=datetime.timezone.utc), 'time_taken': 723662.0, 'time_delta': '8 days, 9:01:02', 'additions': 544, 'deletions': 384, 'state': 'closed'}, {'id': 437001451, 'number': 718, 'closed': datetime.datetime(2020, 6, 24, 20, 56, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 9, 45, 38, tzinfo=datetime.timezone.utc), 'time_taken': 472253.0, 'time_delta': '5 days, 11:10:53', 'additions': 227, 'deletions': 1, 'state': 'closed'}, {'id': 436606634, 'number': 717, 'closed': datetime.datetime(2020, 6, 19, 21, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 18, 16, 30, 43, tzinfo=datetime.timezone.utc), 'time_taken': 102677.0, 'time_delta': '1 day, 4:31:17', 'additions': 11, 'deletions': 7, 'state': 'closed'}, {'id': 434061589, 'number': 709, 'closed': datetime.datetime(2020, 6, 19, 21, 6, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 21, 40, tzinfo=datetime.timezone.utc), 'time_taken': 516408.0, 'time_delta': '5 days, 23:26:48', 'additions': 445, 'deletions': 39, 'state': 'closed'}, {'id': 433888703, 'number': 708, 'closed': datetime.datetime(2020, 6, 18, 3, 48, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 21, 18, 43, tzinfo=datetime.timezone.utc), 'time_taken': 455394.0, 'time_delta': '5 days, 6:29:54', 'additions': 79, 'deletions': 19, 'state': 'closed'}, {'id': 425446775, 'number': 686, 'closed': datetime.datetime(2020, 6, 4, 15, 51, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 30, 10, 27, 39, tzinfo=datetime.timezone.utc), 'time_taken': 451407.0, 'time_delta': '5 days, 5:23:27', 'additions': 134, 'deletions': 32, 'state': 'closed'}, {'id': 419176848, 'number': 644, 'closed': datetime.datetime(2020, 5, 19, 23, 20, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 17, 21, 29, 2, tzinfo=datetime.timezone.utc), 'time_taken': 179483.0, 'time_delta': '2 days, 1:51:23', 'additions': 292, 'deletions': 12, 'state': 'closed'}, {'id': 412209326, 'number': 604, 'closed': datetime.datetime(2020, 5, 15, 1, 59, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 1, 16, 54, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1155871.0, 'time_delta': '13 days, 9:04:31', 'additions': 360, 'deletions': 2, 'state': 'closed'}, {'id': 404263412, 'number': 569, 'closed': datetime.datetime(2020, 5, 29, 17, 42, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 10, 24, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3741486.0, 'time_delta': '43 days, 7:18:06', 'additions': 654, 'deletions': 493, 'state': 'closed'}, {'id': 397708805, 'number': 521, 'closed': datetime.datetime(2020, 4, 5, 18, 56, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 2, 17, 15, 22, tzinfo=datetime.timezone.utc), 'time_taken': 265239.0, 'time_delta': '3 days, 1:40:39', 'additions': 90, 'deletions': 76, 'state': 'closed'}, {'id': 396450456, 'number': 511, 'closed': datetime.datetime(2020, 3, 31, 18, 10, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 31, 16, 30, 42, tzinfo=datetime.timezone.utc), 'time_taken': 6009.0, 'time_delta': '1:40:09', 'additions': 4, 'deletions': 36, 'state': 'closed'}, {'id': 378267827, 'number': 399, 'closed': datetime.datetime(2020, 3, 24, 21, 28, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 21, 12, 51, 28, tzinfo=datetime.timezone.utc), 'time_taken': 2795825.0, 'time_delta': '32 days, 8:37:05', 'additions': 494, 'deletions': 38, 'state': 'closed'}, {'id': 360107432, 'number': 294, 'closed': datetime.datetime(2020, 1, 31, 1, 38, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 7, 18, 5, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2014395.0, 'time_delta': '23 days, 7:33:15', 'additions': 451, 'deletions': 41, 'state': 'closed'}, {'id': 358089867, 'number': 276, 'closed': datetime.datetime(2019, 12, 30, 20, 6, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 30, 11, 48, 30, tzinfo=datetime.timezone.utc), 'time_taken': 29885.0, 'time_delta': '8:18:05', 'additions': 206, 'deletions': 7, 'state': 'closed'}, {'id': 353172680, 'number': 266, 'closed': datetime.datetime(2019, 12, 18, 0, 19, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 14, 12, 47, 5, tzinfo=datetime.timezone.utc), 'time_taken': 300755.0, 'time_delta': '3 days, 11:32:35', 'additions': 14, 'deletions': 1, 'state': 'closed'}, {'id': 346132437, 'number': 251, 'closed': datetime.datetime(2019, 11, 27, 17, 17, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 27, 9, 17, 30, tzinfo=datetime.timezone.utc), 'time_taken': 28804.0, 'time_delta': '8:00:04', 'additions': 25, 'deletions': 25, 'state': 'closed'}, {'id': 341383613, 'number': 243, 'closed': datetime.datetime(2019, 11, 20, 6, 44, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 15, 9, 50, 38, tzinfo=datetime.timezone.utc), 'time_taken': 420854.0, 'time_delta': '4 days, 20:54:14', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 306070319, 'number': 161, 'closed': datetime.datetime(2019, 8, 10, 21, 2, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 9, 17, 11, 15, tzinfo=datetime.timezone.utc), 'time_taken': 100282.0, 'time_delta': '1 day, 3:51:22', 'additions': 8, 'deletions': 0, 'state': 'closed'}]"
