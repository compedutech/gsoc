pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1454450102,Added coverage highlighting in DrTest,"Added coverage highlighting in the coverage plugin of DrTest. It shows covered lines, uncovered lines and partially covered lines highlighted with green, red and yellow colors.

![highlightingCoveragePluguin](https://github.com/pharo-project/pharo/assets/74866367/17a29589-eb6f-4600-9eca-59d0e3897f5f)

About the implementation it is a little long but in summarize: I created 2 subClases of the Coverage Package (of coverageCollector and CoverageResult ) to return the list of partially covered method and not to erase the atribute of ""executed"". 

The hard part is in the subClass DTCoveragePluginPresenter. Where I added the panel that displays the lines covered by colors. And I left an short description of its function of the new methods created in the comment section.",True,14379,https://api.github.com/repos/pharo-project/pharo/pulls/14379,https://github.com/pharo-project/pharo/pull/14379,closed,398,9,11,8,10,0,0,0,[],2023-07-28 21:41:59+00:00,2023-07-30 22:07:17+00:00,174318.0,"2 days, 0:25:18",[],"[{'commit_sha': '9b83d4c1cf2f23ee7b8e388e2fda780281e45323', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aecea553e4979edd2c81d21a23f616d70a53c384', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30ac0ed8b6854acda818b470be8d80d279eac093', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ba884b6c7e6d9c5fc6daba1c1a1fc38f15472db', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8d096af74addbe58c948af3765479ef56dea073', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0015a6da5ac9b68f45cd0dd0b20e445b7d585b6', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32f419df072009ccdc114d9a1c82d52ff2df5619', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59b0c256912c9438179eca2228495b414c1ba65d', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}]",,74866367,,User,,40,,0,0
1463013206,Class grouping,,False,2,https://api.github.com/repos/Gabriel-Darbord/pharo/pulls/2,https://github.com/Gabriel-Darbord/pharo/pull/2,open,89,10,7,4,0,5,0,0,[],2023-08-04 14:19:38+00:00,,0.0,,"[{'comment_id': 1284855622, 'comment_body': 'Rather than having two selects, it is faster to iterate only once (twice as fast, as we could expect).\r\n```st\r\n\t| res partiallyCoveredMethods coveredMethods |\r\n\tres := DTCoverageResult new.\r\n\tres collector: self.\r\n\tres methods: (methods select: [ :m | m ast hasBeenExecuted ]).\r\n\tres nodes: IdentitySet new.\r\n\tnodes do: [ :node |\r\n\t\tnode hasBeenExecuted ifTrue: [ res nodes add: node ] ].\r\n\tpartiallyCoveredMethods := OrderedCollection new.\r\n\tcoveredMethods := OrderedCollection new.\r\n\tmethods do: [ :meth |\r\n\t\tmeth ast hasBeenExecuted ifTrue: [\r\n\t\t\t(self hasAllNodesCovered: meth)\r\n\t\t\t\tifTrue: [ coveredMethods add: meth ]\r\n\t\t\t\tifFalse: [ partiallyCoveredMethods add: meth ] ] ].\r\n\tres partiallyCoveredMethods: partiallyCoveredMethods asArray.\r\n\tres coveredMethods: coveredMethods asArray.\r\n\t^ res\r\n```', 'comment_created': datetime.datetime(2023, 8, 4, 21, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Gabriel-Darbord', 'type': 'User'}, {'comment_id': 1285095347, 'comment_body': ""While I agree only using the method selectors looks better, I'm conflicted about this feature needing a subclass for this.\r\nIt would be good to have the grouping of coverage results be optional, in the same way it is done in the 'Test Runner' plugin, where there are three grouping options:\r\n- 'Grouped by type of result' using `DTTestsRunnerResult>>#buildTreeForUI`\r\n- 'Grouped by type of result and classes' using `DTTestsRunnerResult>>#buildTreeForUIByClasses`\r\n- 'Grouped by type of result, classes, and protocol' using `DTTestsRunnerResult>>#buildTreeForUIByClassesAndProtocol`\r\n\r\nAlso I realize this will complicate things, but rather than always calling the `drTestsName` method, it could display the full method link when there is no grouping (`class >> #method`), and only the selector when there is grouping. This feature would be nice to have on all DrTests plugins.\r\nThe complication is that currently the use of the `drTestsName` method is defined in the `initializeResultsTreeAndLabel` method (both in `DTDefaultPluginPresenter` and `DTCoveragePluginPresenter`):\r\n```st\r\n\tresultsList := self newTree.\r\n\tresultsList\r\n\t\tdisplay: [ :node | node drTestsName ]\r\n```\r\nA way to change this would be to redefine the `display` block when the grouping option is changed by the user."", 'comment_created': datetime.datetime(2023, 8, 5, 17, 48, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Gabriel-Darbord', 'type': 'User'}, {'comment_id': 1285095981, 'comment_body': 'There is already an existing method to group collection elements called `groupedBy:`.\r\nIt is more efficient to create an OrderedCollection, add elements to it then finally convert it into an array, rather than creating new arrays repeatedly (which `,` does).\r\n```suggestion\r\n\t| subResultsTree |\r\n\tsubResultsTree := OrderedCollection new.\r\n\t(aMethodList groupedBy: #methodClass) keysAndValuesDo: [ :key :value |\r\n\t\tsubResultsTree add: (DTTreeNode new\r\n\t\t\t\t name: key asString;\r\n\t\t\t\t subResults:\r\n\t\t\t\t\t (value collect: [ :each | DTTestCoverageLeafNode content: each ])) ].\r\n\t^ subResultsTree asArray\r\n```', 'comment_created': datetime.datetime(2023, 8, 5, 17, 50, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Gabriel-Darbord', 'type': 'User'}, {'comment_id': 1285096013, 'comment_body': 'This method is unnecessary because `Collection>>#groupedBy:` already exists.\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 5, 17, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Gabriel-Darbord', 'type': 'User'}, {'comment_id': 1285096367, 'comment_body': 'Because this is only called in one place so far (`DTTestCoverageResult>>#buildTreeByClass:`), I think this method is not yet necessary.\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 5, 17, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Gabriel-Darbord', 'type': 'User'}]","[{'commit_sha': 'c33783f819453bdf1513c63a9f69a9311fbc09eb', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f49e99ce7a8536026c7f64ecdc3d05c97088260', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bee653ac3c257ec5f0a9ab2b82f00c05885f2f6', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8169b355451825ca3227d7cb7e8d360e8d0e776e', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}]",Gabriel,78592838,,User,,20,,5,5
1366848803,Run coverage button is enabled with unselected packages ( Dr Tests ),"#13806
This PR contains a modification to prevent the exception of ""collect was sent to nil""",True,13836,https://api.github.com/repos/pharo-project/pharo/pulls/13836,https://github.com/pharo-project/pharo/pull/13836,closed,16,9,1,1,4,0,0,0,[],2023-05-26 20:07:25+00:00,2023-05-27 08:41:38+00:00,45253.0,12:34:13,[],"[{'commit_sha': '441c5c97f4e7c1f837ff6fa6212e5e94b1e26e98', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}]",,74866367,,User,,40,,0,0
1512646647,Added new subclass with unified view based on SpDiffPresenter,"SpDiffPresenter displays a **split view**. So I added a sub-class that displays a **unified view** called SpDiffUnifiedPresenter

![image](https://github.com/pharo-spec/Spec/assets/74866367/faabced3-a49b-478d-877f-fc35b0e90961)
",True,1452,https://api.github.com/repos/pharo-spec/Spec/pulls/1452,https://github.com/pharo-spec/Spec/pull/1452,closed,36,0,2,1,7,0,0,1,[],2023-09-12 19:05:26+00:00,2024-06-13 07:34:26+00:00,23718540.0,"274 days, 12:29:00",[],"[{'commit_sha': '5a9ced25610439d12f7b9ee849853933d528bf50', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}]",,74866367,,User,,40,,0,0
1525629865,Added non-strict-mode that allows runs even with failing tests,"This is my contribution to the issue #28

This implementation added an attribute  

>  beStrictMode

 Which by default is ´true´ but when set to ´false´ , it will display the information message. 
"" Your have {#} test(s) that have Errors or Failures. But in Non-Strict-Mode I will filter them ""

And run taking in account only the passed tests.",False,29,https://api.github.com/repos/pharo-contributions/mutalk/pulls/29,https://github.com/pharo-contributions/mutalk/pull/29,closed,34,3,1,1,3,0,0,0,[],2023-09-21 21:54:11+00:00,2024-02-01 09:33:43+00:00,11446772.0,"132 days, 11:39:32",[],"[{'commit_sha': 'b359f52ae903d6aed47cd01cd955390bf3a88331', 'committer_username': 'CarolinaMelendez', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 22, 14, 33, 25, tzinfo=datetime.timezone.utc)}]",,74866367,,User,,40,,0,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
64123480,pharo,pharo-project/pharo,Smalltalk,352,1181,41,256,29507,1308,8,66,"[{'id': 1454450102, 'number': 14379, 'closed': datetime.datetime(2023, 7, 30, 22, 7, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 28, 21, 41, 59, tzinfo=datetime.timezone.utc), 'time_taken': 174318.0, 'time_delta': '2 days, 0:25:18', 'additions': 398, 'deletions': 9, 'state': 'closed'}, {'id': 1366848803, 'number': 13836, 'closed': datetime.datetime(2023, 5, 27, 8, 41, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 20, 7, 25, tzinfo=datetime.timezone.utc), 'time_taken': 45253.0, 'time_delta': '12:34:13', 'additions': 16, 'deletions': 9, 'state': 'closed'}]"
641928668,pharo,Gabriel-Darbord/pharo,Smalltalk,0,0,0,240,26752,1,6,1,[]
151080428,Spec,pharo-spec/Spec,Smalltalk,63,61,12,52,4106,265,43,3,"[{'id': 1512646647, 'number': 1452, 'closed': datetime.datetime(2024, 6, 13, 7, 34, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 19, 5, 26, tzinfo=datetime.timezone.utc), 'time_taken': 23718540.0, 'time_delta': '274 days, 12:29:00', 'additions': 36, 'deletions': 0, 'state': 'closed'}]"
92093362,mutalk,pharo-contributions/mutalk,Smalltalk,14,20,7,9,561,7,1,0,"[{'id': 1525629865, 'number': 29, 'closed': datetime.datetime(2024, 2, 1, 9, 33, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 21, 21, 54, 11, tzinfo=datetime.timezone.utc), 'time_taken': 11446772.0, 'time_delta': '132 days, 11:39:32', 'additions': 34, 'deletions': 3, 'state': 'closed'}]"
