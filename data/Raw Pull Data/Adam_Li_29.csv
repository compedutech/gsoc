pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
2018005546,unpin pytest,"cf. https://github.com/mne-tools/mne-python/issues/12789

Locally for me all tests pass except for 3 symmetric_orth runs (2-False, 3-False, and 3-True). **They pass on pytest 7.4.4** so this needs digging into",True,227,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/227,https://github.com/mne-tools/mne-connectivity/pull/227,closed,3,2,2,3,1,0,0,0,[],2024-08-13 21:36:46+00:00,2024-08-13 22:06:06+00:00,1760.0,0:29:20,[],"[{'commit_sha': 'e290c5a8c64eaa735cbab718223c014b677c86d0', 'committer_username': 'drammock', 'committer_name': 'Daniel McCloy', 'committer_email': None, 'commit_date': datetime.datetime(2012, 6, 2, 19, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7742d77750530475e04a453dbf2674d6d518fa9c', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab3dea9c2670300f9374e81055626067210034a9', 'committer_username': 'drammock', 'committer_name': 'Daniel McCloy', 'committer_email': None, 'commit_date': datetime.datetime(2012, 6, 2, 19, 15, 18, tzinfo=datetime.timezone.utc)}]",Daniel McCloy,1810515,,User,,94,,9,149
1982107010,[pre-commit.ci] pre-commit autoupdate,"<!--pre-commit.ci start-->
updates:
- [github.com/astral-sh/ruff-pre-commit: v0.5.2 → v0.5.4](https://github.com/astral-sh/ruff-pre-commit/compare/v0.5.2...v0.5.4)
- [github.com/astral-sh/ruff-pre-commit: v0.5.2 → v0.5.4](https://github.com/astral-sh/ruff-pre-commit/compare/v0.5.2...v0.5.4)
<!--pre-commit.ci end-->",True,216,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/216,https://github.com/mne-tools/mne-connectivity/pull/216,closed,7,10,4,2,0,0,0,0,[],2024-07-22 21:43:55+00:00,2024-07-22 22:56:39+00:00,4364.0,1:12:44,[],"[{'commit_sha': 'e9a0b7dae30687fce24d44bfbcdac87070bf2bf4', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9c00b533058e23b0e24d8e54df2d828e8f26b38', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",,66853113,,Bot,,0,,0,0
1712104149,Fix failing unit tests,"Codestyle checks are failing due to `benchmarks/bench_var.py` and `benchmarks/single_epoch_conn.py` not being properly formatted. See e.g. #163, #171 for failing checks.

Have now run black on these files to hopefully fix things.
",True,172,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/172,https://github.com/mne-tools/mne-connectivity/pull/172,closed,5,3,4,5,4,0,0,0,[],2024-02-05 16:59:23+00:00,2024-02-05 19:00:11+00:00,7248.0,2:00:48,[],"[{'commit_sha': 'ee9008dac05d1dd08681ee79b758fd8aa7a40d7c', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d3f56aa9d447f90b8809de1dffad01e655e76fe', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a71528436bda45c6d835a1b1a431afa3a852e7ab', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87abef37c94c07bb0c8cef8f4a4f5b55947b9491', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a81f1eb09d14dd658d16dd36ba21366eb4685f7f', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",Thomas S. Binns,56922019,t.s.binns@outlook.com,User,,21,,20,18
1987391645,[DOC] Switch Granger causality to expected failing example,"PR Description
--------------

Something that was discussed a while ago with @larsoner when the Granger causality example was first written but had to be postponed until new config options were added to sphinx-gallery:
- The GC example ends with a `try except` statement that is expected to fail
- It was suggested to remove the `try except` and just allow the error to be raised as long as the example is marked in sphinx as an expected failing example
- The problem was that expected failing examples automatically get a thumbnail with the word ""BROKEN"" which could not be overridden, and I felt this gave the wrong impression that there was a problem with the whole example
- In the new sphinx-gallery v0.17, support was added allowing this behaviour to be changed such that we can allow the GC example to fail while still giving it a proper thumbnail

Also a very small change to the decomposition docstring I overlooked before where a `None` wasn't being picked up as a type for intersphinx to link to.",True,218,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/218,https://github.com/mne-tools/mne-connectivity/pull/218,closed,14,16,4,1,1,0,0,0,[],2024-07-25 12:17:57+00:00,2024-07-25 16:56:00+00:00,16683.0,4:38:03,[],"[{'commit_sha': '3e873e567cad8757958453525412e3f83538d053', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}]",Thomas S. Binns,56922019,t.s.binns@outlook.com,User,,21,,20,18
2018005546,unpin pytest,"cf. https://github.com/mne-tools/mne-python/issues/12789

Locally for me all tests pass except for 3 symmetric_orth runs (2-False, 3-False, and 3-True). **They pass on pytest 7.4.4** so this needs digging into",True,227,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/227,https://github.com/mne-tools/mne-connectivity/pull/227,closed,3,2,2,3,1,0,0,0,[],2024-08-13 21:36:46+00:00,2024-08-13 22:06:06+00:00,1760.0,0:29:20,[],"[{'commit_sha': 'e290c5a8c64eaa735cbab718223c014b677c86d0', 'committer_username': 'drammock', 'committer_name': 'Daniel McCloy', 'committer_email': None, 'commit_date': datetime.datetime(2012, 6, 2, 19, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7742d77750530475e04a453dbf2674d6d518fa9c', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab3dea9c2670300f9374e81055626067210034a9', 'committer_username': 'drammock', 'committer_name': 'Daniel McCloy', 'committer_email': None, 'commit_date': datetime.datetime(2012, 6, 2, 19, 15, 18, tzinfo=datetime.timezone.utc)}]",Daniel McCloy,1810515,,User,,94,,9,149
1916840496,MAINT: Switch to setuptools_scm for version,"1. Remove old release file (didn't work, tried to install Python 3.1)
2. Hopefully fix permissions with new release method (it failed even after I enabled it on PyPI, I suspect we needed these two lines) -- @tsbinns wherever you based your code off of we should maybe fix theirs, too
3. Switch to `setuptools_scm` rather than bumping version numbers manually",True,200,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/200,https://github.com/mne-tools/mne-connectivity/pull/200,closed,19,42,8,2,3,0,0,0,[],2024-06-12 15:21:28+00:00,2024-06-12 16:00:43+00:00,2355.0,0:39:15,[],"[{'commit_sha': '6544140751b91d504c47593f4a951ef93a2bb856', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1780b7e7f62c6c8eec52ad85780ca6a767ba59f7', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",Eric Larson,2365790,larson.eric.d@gmail.com,User,,237,,1,242
1916840496,MAINT: Switch to setuptools_scm for version,"1. Remove old release file (didn't work, tried to install Python 3.1)
2. Hopefully fix permissions with new release method (it failed even after I enabled it on PyPI, I suspect we needed these two lines) -- @tsbinns wherever you based your code off of we should maybe fix theirs, too
3. Switch to `setuptools_scm` rather than bumping version numbers manually",True,200,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/200,https://github.com/mne-tools/mne-connectivity/pull/200,closed,19,42,8,2,3,0,0,0,[],2024-06-12 15:21:28+00:00,2024-06-12 16:00:43+00:00,2355.0,0:39:15,[],"[{'commit_sha': '6544140751b91d504c47593f4a951ef93a2bb856', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1780b7e7f62c6c8eec52ad85780ca6a767ba59f7', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",Eric Larson,2365790,larson.eric.d@gmail.com,User,,237,,1,242
1575831936,MAINT: Update CIs,I looked quickly at the failures in https://github.com/mne-tools/mne-connectivity/pull/142 and it looks like there is room for updating/optimizing CIs. Will mark for merge when green because these are seemingly straightforward version and action updates that we've taken and used in MNE-Python for some months now.,True,154,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/154,https://github.com/mne-tools/mne-connectivity/pull/154,closed,73,117,7,8,0,0,0,0,[],2023-10-27 02:28:42+00:00,2023-10-27 03:51:51+00:00,4989.0,1:23:09,[],"[{'commit_sha': '0f2e0b6b5b062cf67b9481dfd967b927d23ad70d', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac859f5b0bb9ec1e03b40b67822991ea8c5e66ce', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5259c28cf758fbe79e8ff81b239e7b4d091f60b4', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af75ace6a6920c04aa4e8ee92313a67b8c804597', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8e6c6b777aeeb50ecef66f545a3b3920de486e7', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4ca929d6d7e4717155ec3cde55cc37bcde5aca', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da63951a9335ba79f3efa758a9861114b299a62', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53f2a074f09d7cdef65d512047b47f2c19a1e48d', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",Eric Larson,2365790,larson.eric.d@gmail.com,User,,237,,1,242
1993151620,[pre-commit.ci] pre-commit autoupdate,"<!--pre-commit.ci start-->
updates:
- [github.com/astral-sh/ruff-pre-commit: v0.5.4 → v0.5.5](https://github.com/astral-sh/ruff-pre-commit/compare/v0.5.4...v0.5.5)
- [github.com/astral-sh/ruff-pre-commit: v0.5.4 → v0.5.5](https://github.com/astral-sh/ruff-pre-commit/compare/v0.5.4...v0.5.5)
<!--pre-commit.ci end-->",True,219,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/219,https://github.com/mne-tools/mne-connectivity/pull/219,closed,2,2,1,1,0,0,0,0,[],2024-07-29 21:39:22+00:00,2024-07-29 23:32:40+00:00,6798.0,1:53:18,[],"[{'commit_sha': '416559ba43a20f0b1f38093ca88e3ff04186742c', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}]",,66853113,,Bot,,0,,0,0
1903319641,[MAINT] Add release workflow,"@larsoner suggested in #181 to modernise publishing to PyPI with trusted artefact publishing on release.

Was suggested to use the MNE-BIDS-Pipeline workflow as a template and removing the username/password stuff: https://github.com/mne-tools/mne-bids-pipeline/blob/main/.github/workflows/release.yml

Haven't touched the existing `publish_release.yml` workflow. Very minor but wasn't sure if we should use this name, rename to `release.yml`, ygm.

Also had to add a new rule to the `.yamllint.yml` config for pre-commit yamllint check to pass on my windows machine due to unix vs. dos line endings.",True,198,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/198,https://github.com/mne-tools/mne-connectivity/pull/198,closed,53,0,2,1,0,0,0,0,[],2024-06-04 16:03:31+00:00,2024-06-04 19:31:10+00:00,12459.0,3:27:39,[],"[{'commit_sha': '1b0b173796fdde7b6cf6c960d382c080f814894e', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}]",Thomas S. Binns,56922019,t.s.binns@outlook.com,User,,21,,20,18
1633241440,[RELEASE] V0.6,"Thanks for contributing. If this is your first time,
make sure to read [contributing.md](https://github.com/mne-tools/mne-connectivity/blob/main/CONTRIBUTING.md)

PR Description
--------------

Describe your PR here

Merge checklist
---------------

Maintainer, please confirm the following before merging:

- [ ] All comments resolved
- [ ] This is not your own PR
- [ ] All CIs are happy
- [ ] PR title starts with [MRG]
- [ ] [whats_new.rst](https://github.com/mne-tools/mne-connectivity/blob/main/doc/whats_new.rst) is updated
- [ ] PR description includes phrase ""closes <#issue-number>""
",True,162,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/162,https://github.com/mne-tools/mne-connectivity/pull/162,closed,38,24,5,2,0,0,0,0,[],2023-12-06 20:58:51+00:00,2023-12-06 21:00:33+00:00,102.0,0:01:42,[],"[{'commit_sha': '282a303399e6aec59f828f9228c4f4a2c58d4a20', 'committer_username': 'adam2392', 'committer_name': 'Adam Li', 'committer_email': None, 'commit_date': datetime.datetime(2013, 2, 3, 0, 44, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c24f9389d384339e188feb3446cf9dcb3c0bd79e', 'committer_username': 'adam2392', 'committer_name': 'Adam Li', 'committer_email': None, 'commit_date': datetime.datetime(2013, 2, 3, 0, 44, 49, tzinfo=datetime.timezone.utc)}]",Adam Li,3460267,,User,,119,,30,92
1324446391,"[ENH, WIP] Add multivariate connectivity methods","@adam2392 Sorry for the delay, but I finally have something I think we can move forward with.

### **What I have implemented?**
- **Added multivariate measures of the imaginary part of coherency** (maximised imaginary coherence, MIC, and multivariate interaction measure, MIM; this includes spatial patterns of connectivity for MIC).
- **Added multivariate spectral Granger causality (GC).** Also made a slight change to the implementation which keeps the final results the same, but significantly cleans up the code.
- **These methods have been implemented in the existing `spectral_connectivity_epochs` function**, with the original structure of e.g. the `indices` parameter (i.e. no support for ragged indices added yet, as we discussed).
- **Updated the documentation of `spectral_connectivity_epochs` to reflect these new measures.**
- **Added new attributes to the connectivity classes.** These are used to store information associated with the multivariate measures (`rank`, `n_lags`, and `patterns`).
- **Support for parallelisation of these methods using the MNE wrapper for joblib is present.**
- **Added a (basic) set of unit tests for the new measures.**
- **Extensive examples for the newly-added measures.** These include background information/explanations of the methods, demonstrations of how to use the various settings in the implementations, how to interpret the results, what the limitations of these methods are, etc...

### **What are the limitations?**
- **Only bivariate **or** multivariate methods can be requested at any one time.** This relates to the existing `spectral_connectivity_epochs` function making assumptions about the number of signals in the seeds/targets matching the number of connections, which is not the case for the multivariate methods at this time. It is quite easy (and clean) to adapt the functions to handle this differently when only multivariate methods are called, however things become much trickier when trying to work with bivariate and multivariate methods simultaneously. If you would like the ability to compute bivariate and multivariate methods simultaneously to be included, perhaps we can adapt some of the functions to make this easier, otherwise we could stick with the current limitation I have imposed.
- **Only one multivariate connection can be computed at any one time.** This is not possible without changing the stucture of `indices`.
- **When computing multivariate connectivity, the number of seeds and targets for this single connection must be identical.** Again, this is not possible without allowing `indices` be ragged.
- **Support for computing GC on frequency bands is not yet possible.** This relates to the cross-frequency nature of GC measures. I had a solution which I had implemented in the code for my previous PR, however I think it would be good to discuss this particular issue before proceeding.

### **What have I not added?**
- **No unit tests for checking whether the methods are ""correct"".** I remember we discussed this in terms of adding some simulated data with a known connectivity distribution and testing the methods using this data. This is still on my to-do list; I just need to figure out how I could best do this with the smallest amount of data possible (so as not to bloat the package).
- **No version of the methods in `spectral_connectivity_time`.** Again, this is still on my to-do list. I have structured the MIC/MIM and GC computation code in a way that we could very easily re-use the code I have added here and just switch out the time dimension (used in case of time-frequency modes) to store epoch information, so I do not consider this a major hurdle.

**There is, however, a bigger issue:** the assertion of the connectivity object in `test_spectral_connectivity_parallel` matching that which has been saved and then reloaded now fails, because there is ~1 kB size difference in the objects. As far as I can tell, all of the critical information in the objects are identical (e.g. the results are the same, all entries in `attrs` are the same). Interestingly, this only occurs for the multitaper and fourier modes. I checked in the original test, and the size of the saved and reloaded connectivity object is also not a perfect match, however it seems to be rounded to the same ""~XX kB"". My hunch would be that the attrs I added to the connectivity classes (`rank`, `n_lags`, and `patterns`), even when unfilled, are pushing the estimated size in the repr to be rounded up when combined with the pre-existing small difference in size that occurs when saving and reloading a connectivity object. Even though I think everything is in order, I am clearly not happy with this test suddenly failing, so if you have any ideas as to why this is happening, I would really appreciate it!

**The test in question:**
https://github.com/tsbinns/mne-connectivity/blob/100e235c8520664510401d73394df1c953a6721f/mne_connectivity/spectral/tests/test_spectral.py#L134-L145

**An example of the reprs from the test with the multitaper mode:**
![image](https://user-images.githubusercontent.com/56922019/233856258-3d371473-5272-41f4-8e09-fe51cff048d8.png)

### **What are the next steps?**
Adding further unit tests, as well as implementing these measures in `spectral_connectivity_time` are my two biggest targets. Once I have your input, I am happy to also start addressing the limitations I listed (e.g. by adding support for ragged indices). Making sure all tests are passing would also be nice!

One again, I am very sorry for the delay (a lot of other work got in the way), but I am still very excited to move forward with this! If there is anything you think would be best discussed over a call, I am very happy to do that again. I will also answer anything here as soon as I can.

Cheers,
Thomas",True,138,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/138,https://github.com/mne-tools/mne-connectivity/pull/138,closed,2929,322,13,67,11,55,0,0,[],2023-04-23 18:16:47+00:00,2023-07-18 12:41:37+00:00,7410290.0,"85 days, 18:24:50","[{'comment_id': 1174641043, 'comment_body': ""For these additional properties + `patterns`, I would be inclined to put these altogether into a new class for `MultivariateMixin`.\r\n\r\nSlash, do we necessarily need these? That is we don't need to expose all `attrs`. Rn it exposes the core ones, but presumably a user can store arbitrary data fields in there."", 'comment_created': datetime.datetime(2023, 4, 23, 20, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1174641269, 'comment_body': 'What is `patterns`?', 'comment_created': datetime.datetime(2023, 4, 23, 20, 44, 27, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1174641411, 'comment_body': ""We generally don't want `assert` messages as these do not get run if the Python package binary is distributed."", 'comment_created': datetime.datetime(2023, 4, 23, 20, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1174641543, 'comment_body': 'Is this mainly a test to catch errors that should be raised? If so, can we name the test and add a note in the docstring accordingly? ', 'comment_created': datetime.datetime(2023, 4, 23, 20, 46, 27, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1177773558, 'comment_body': 'I only included them here so that they would be included in the docs for the connectivity classes.\r\nSomething like `patterns` I would be more inclined to expose, since these are relevant results of the class, however I see no issue not exposing `rank` and `n_lags`.\r\nPerhaps I could write a `MultivariateMixin` for `patterns`, or do you think it would be a bit overkill to only expose one attribute?\r\n', 'comment_created': datetime.datetime(2023, 4, 26, 12, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1177776417, 'comment_body': '**DONE** At the moment, yes, this is really just catching errors (since much of the behaviour is already being tested in `test_spectral_connectivity`). I will update the name and description.', 'comment_created': datetime.datetime(2023, 4, 26, 12, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1177784211, 'comment_body': 'What are patterns exactly? ', 'comment_created': datetime.datetime(2023, 4, 26, 12, 12, 41, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1177786063, 'comment_body': 'So before I used the term ""spatial topographies"", however I decided to switch to `patterns` because this terminology is more consistent with other parts of MNE such as [mne.decoding.SSD](https://mne.tools/dev/generated/mne.decoding.SSD.html). In SSD, the results have the `patterns_` attribute, which serves the same function as the topographies do here. As far as the literature is concerned, the names are pretty interchangeable.\r\n\r\nSimilarly, I have previously used the term `n_components` instead of `rank`, but again, to keep things consistent with other parts of MNE, I decided to switch to `rank`, since it serves the same purpose as e.g. in [mne.decoding.SSD](https://mne.tools/dev/generated/mne.decoding.SSD.html) (plus `n_components` is also used here and serves a different purpose).', 'comment_created': datetime.datetime(2023, 4, 26, 12, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1177788795, 'comment_body': '`patterns` are the spatial topographies I mentioned in the previous PR (generated from the spatial filters used to compute MIC). They can also be called spatial patterns, and this ""patterns"" terminology is more consistent with other parts of MNE, e.g. [mne.decoding.SSD](https://mne.tools/dev/generated/mne.decoding.SSD.html). ', 'comment_created': datetime.datetime(2023, 4, 26, 12, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1177801046, 'comment_body': '**FIXED**', 'comment_created': datetime.datetime(2023, 4, 26, 12, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1182829472, 'comment_body': 'I see, so this is generally only used for EEG and MEG right? But it is not necessary for one to run granger/mic and run spatial pattern analysis in the algorithm right?\r\n\r\nI wonder if there is a way to say decompose your data first into spatial patterns at the user level and then your connectivity is over the spatial patterns? If this is the case, I would prefer that this behavior is shown in the example instead, so someone can literally copy/paste your snippet of code running ""`new_eeg = ssd.fit(eeg); new_eeg_conn = granger_connectivity(new_eeg)`"". Perhaps I am misunderstanding. Lmk.\r\n\r\nI am leaning towards not including it explicitly because it just makes the documentation and class confusing if someone doesn\'t want to use SSD patterns and then all of a sudden there is a `patterns` attribute, which is computed regardless. Then we end up having to maintain it more.\r\n', 'comment_created': datetime.datetime(2023, 5, 2, 17, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1183095817, 'comment_body': ""The patterns are specifically related to MIC, there are no patterns for MIM or GC. The patterns are derived from a set of filters which you **must** to compute to get the MIC scores (i.e. this is not an optional step), and they are different from the filters and patterns you would get for SSD. It is also not necessarily a replacement for some optional source reconstruction depending on your data modality (which I think is what you were getting at??).\r\n\r\nIt's not computationally expensive to get the patterns once you have the filters (just some matrix multiplication), so `patterns` is automatically computed for MIC as part of this implementation.\r\n\r\nThe patterns are relevant for visualising the spatial distribution of the connectivity in **any** multi-channel setup, e.g. I use them with ECoG and LFP data, so it isn't just something useful for EEG or MEG where you would typically be interested in some sort of inverse modelling (again, I think this is what you were suggesting??).\r\n\r\nThis means that `patterns` would only be computed for MIC, and only filled with information in the object containing the MIC results, otherwise it would just be left as `None`.\r\n\r\nIf you still lean towards including `patterns` only in the `attrs` object rather than exposing it explicitly to keep things cleaner, just let me know and I'll change it!"", 'comment_created': datetime.datetime(2023, 5, 2, 22, 11, 27, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1183178854, 'comment_body': 'Ah I see.\r\n\r\nIf they are only used for `MIC`, then I would just document the `MIC` function stating that `patterns` is available in the `attrs` object. Perhaps even explicitly showing this in the example should suffice too. Otherwise it would be weird to have a property always be set to `None` unless MIC is used.', 'comment_created': datetime.datetime(2023, 5, 3, 1, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263886645, 'comment_body': ""Why can't multivariate connectivity data be returned in dense form?\r\n\r\nIs it because it's ragged? Do you mind adding an in-line comment on why/why-not?"", 'comment_created': datetime.datetime(2023, 7, 14, 15, 51, 31, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263887463, 'comment_body': 'How are these files generated / where did they come from?\r\n\r\nPerhaps you can add a short `README.md` file in `spectral/tests/data/` to document this?', 'comment_created': datetime.datetime(2023, 7, 14, 15, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263920398, 'comment_body': '```suggestion\r\n# The degree to which :math:`\\boldsymbol{x}` and :math:`\\boldsymbol{y}` can be\r\n# used to predict one another in a linear model can be quantified using vector autoregressive\r\n# (VAR) models. Considering the simpler case of time domain connectivity, the\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 16, 27, 36, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263921859, 'comment_body': '```suggestion\r\n# used; :math:`\\boldsymbol{A}` is the array (e.g. a 2D matrix) of coefficients we want to estimate;:math:`\\boldsymbol{Z} := \\begin{bmatrix} \\boldsymbol{x} \\\\\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 16, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263923138, 'comment_body': '```suggestion\r\n# can therefore estimate how much :math:`\\boldsymbol{x}` Granger-causes\r\n# :math:`\\boldsymbol{y}` by comparing the variance of the residuals of ``y`` vs conditioned on ``x``:\r\n```\r\n\r\nIs this right?', 'comment_created': datetime.datetime(2023, 7, 14, 16, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263924857, 'comment_body': 'Can you write a note here explaining the intuition of `rank` and `gc_n_lags`? I know they are in the docstring, but perhaps for a user that is used to the original API of `spectral_connectivity_epochs`, a short note here might help them understand how to set the values as well.', 'comment_created': datetime.datetime(2023, 7, 14, 16, 32, 59, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263925066, 'comment_body': 'And perhaps the same in the `mic_mim.py` example', 'comment_created': datetime.datetime(2023, 7, 14, 16, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263925499, 'comment_body': 'Can you add a unit-test for this case?', 'comment_created': datetime.datetime(2023, 7, 14, 16, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263925574, 'comment_body': 'Can you add a unit-test for this case?', 'comment_created': datetime.datetime(2023, 7, 14, 16, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263928198, 'comment_body': ""Sorry I'm not familiar. Can you elaborate what each element represents here?\r\n\r\nFrom https://mne.tools/dev/generated/mne.decoding.SSD.html, I get `The patterns for reconstructing the signal from the filtered data.`, but I presume that's not exactly what it is here? \r\n\r\nJust want to make sure it's crystal clear :p."", 'comment_created': datetime.datetime(2023, 7, 14, 16, 37, 1, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263928570, 'comment_body': 'Can you add a unit-test for this case?', 'comment_created': datetime.datetime(2023, 7, 14, 16, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263928750, 'comment_body': 'Can you add a unit-test for this case?', 'comment_created': datetime.datetime(2023, 7, 14, 16, 37, 42, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263928893, 'comment_body': 'Can you add a unit-test for this case?', 'comment_created': datetime.datetime(2023, 7, 14, 16, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263929000, 'comment_body': 'Can you add a unit-test for this case?', 'comment_created': datetime.datetime(2023, 7, 14, 16, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263929133, 'comment_body': 'Can you add a unit-test for this case?', 'comment_created': datetime.datetime(2023, 7, 14, 16, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263929163, 'comment_body': 'Can you add a unit-test for this case?', 'comment_created': datetime.datetime(2023, 7, 14, 16, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1263929217, 'comment_body': 'Can you add a unit-test for this case?', 'comment_created': datetime.datetime(2023, 7, 14, 16, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1265092997, 'comment_body': 'Sort of. It would be more the variance of the residuals of the (reduced) model based on the information in y alone vs. the variance of the residuals of the (full) model based on the information in both y and x. I have re-written this part to try and make it clearer:\r\nhttps://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/examples/granger_causality.py#L74-83', 'comment_created': datetime.datetime(2023, 7, 17, 9, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265104341, 'comment_body': 'For `gc_n_lags`, I explain this in the section below (applies only to GC, not to MIC/MIM): https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/examples/granger_causality.py#L310\r\n\r\nAs for `rank`, this applies to GC and MIC/MIM, so I explain this in the section below for the GC example: https://github.com/tsbinns/mne-connectivity/blob/dae09a5ff3a1bd5caf848d8ab711d1f3887280ad/examples/granger_causality.py#L343\r\n... and for the MIC/MIM example: https://github.com/tsbinns/mne-connectivity/blob/dae09a5ff3a1bd5caf848d8ab711d1f3887280ad/examples/mic_mim.py#L294', 'comment_created': datetime.datetime(2023, 7, 17, 9, 34, 6, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265165611, 'comment_body': ""So at the moment it's because the results for a single connection would correspond to multiple entries in the matrix (for the various channels involved), and if we extend the functionality to compute multiple connections in a single function call, we could end up with a case where the results for multiple connections correspond to the same matrix entries (i.e. results for 0 -> 1 would overlap with results for 0 -> [1, 2]). I have added a comment stating this:\r\nhttps://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/base.py#L689-696"", 'comment_created': datetime.datetime(2023, 7, 17, 10, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265438205, 'comment_body': 'Done! https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/tests/data/README.md', 'comment_created': datetime.datetime(2023, 7, 17, 14, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265449473, 'comment_body': ""So it's very similar, but instead of reconstructing the signal we're reconstructing the largest connectivity component of the signal. I have updated to try and make it clearer:\r\nhttps://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/time.py#L613-L619"", 'comment_created': datetime.datetime(2023, 7, 17, 14, 25, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265452811, 'comment_body': 'Done! https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/tests/test_spectral.py#L1050-L1088', 'comment_created': datetime.datetime(2023, 7, 17, 14, 28, 14, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265453138, 'comment_body': 'Done! https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/tests/test_spectral.py#L1050-L1088', 'comment_created': datetime.datetime(2023, 7, 17, 14, 28, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265455427, 'comment_body': 'Done! https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/tests/test_spectral.py#L1103-L1108', 'comment_created': datetime.datetime(2023, 7, 17, 14, 30, 12, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265456148, 'comment_body': 'Done! https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/tests/test_spectral.py#L1137-L1142', 'comment_created': datetime.datetime(2023, 7, 17, 14, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265457247, 'comment_body': 'Done! https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/tests/test_spectral.py#L1144-L1149', 'comment_created': datetime.datetime(2023, 7, 17, 14, 31, 23, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265457831, 'comment_body': 'Done! https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/tests/test_spectral.py#L1110-L1115', 'comment_created': datetime.datetime(2023, 7, 17, 14, 31, 48, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265461206, 'comment_body': 'Done! https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/tests/test_spectral.py#L1132-L1135', 'comment_created': datetime.datetime(2023, 7, 17, 14, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265462140, 'comment_body': 'Done! https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/tests/test_spectral.py#L593-L599', 'comment_created': datetime.datetime(2023, 7, 17, 14, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1265470231, 'comment_body': 'Done! https://github.com/tsbinns/mne-connectivity/blob/894c42e59cef9f97aa07a7a4f71cef756512c50c/mne_connectivity/spectral/tests/test_spectral.py#L493-L498\r\n\r\nSame thing was missing for `spectral_connectivity_time`, so I have added that here: https://github.com/tsbinns/mne-connectivity/blob/6f57c80dc69a284efb81396e136bb04dc3ef1c2b/mne_connectivity/spectral/tests/test_spectral.py#L1131-L1136', 'comment_created': datetime.datetime(2023, 7, 17, 14, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1266050288, 'comment_body': '```suggestion\r\n# XXX: Currently ragged indices are not supported, so we only consider a single list of indices\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 0, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1266050332, 'comment_body': 'Is this right?', 'comment_created': datetime.datetime(2023, 7, 18, 0, 46, 50, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1266050920, 'comment_body': '```suggestion\r\n# orientation of the underlying dipole sources. Note the spatial patterns are **not**\r\n# bound between :math:`[-1, 1]`.\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 0, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1266051525, 'comment_body': 'What does ""not bound below 1"" mean?', 'comment_created': datetime.datetime(2023, 7, 18, 0, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1266051798, 'comment_body': 'Perhaps we can add a few LOC showing what a normalization would look like of `mim`?', 'comment_created': datetime.datetime(2023, 7, 18, 0, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1266053617, 'comment_body': '```suggestion\r\n# lags. In the above examples we used 20 lags, which we will compare to\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 0, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1266053892, 'comment_body': '```suggestion\r\n# XXX: Currently ragged indices are not supported, so we only consider a single list of indices\r\n```', 'comment_created': datetime.datetime(2023, 7, 18, 0, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'adam2392', 'type': 'User'}, {'comment_id': 1266408660, 'comment_body': 'MIM can be > 1. Rewritten here and also for GIM:\r\nhttps://github.com/mne-tools/mne-connectivity/blob/49dd83c04c50c5dc7133e8b8ee9ccb0ff716d1a0/examples/mic_mim.py#L240-L241\r\nhttps://github.com/mne-tools/mne-connectivity/blob/49dd83c04c50c5dc7133e8b8ee9ccb0ff716d1a0/examples/mic_mim.py#L283-L284', 'comment_created': datetime.datetime(2023, 7, 18, 8, 19, 56, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1266553847, 'comment_body': ""That's right, I just reworded slightly for clarity: https://github.com/mne-tools/mne-connectivity/blob/49dd83c04c50c5dc7133e8b8ee9ccb0ff716d1a0/examples/mic_mim.py#L84-L85"", 'comment_created': datetime.datetime(2023, 7, 18, 10, 9, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1266560145, 'comment_body': ""How's this? https://github.com/mne-tools/mne-connectivity/blob/49dd83c04c50c5dc7133e8b8ee9ccb0ff716d1a0/examples/mic_mim.py#L271-L273\r\n\r\nI also added some info. to make the interpretation of the normalised metrics clearer, e.g.:\r\nhttps://github.com/mne-tools/mne-connectivity/blob/49dd83c04c50c5dc7133e8b8ee9ccb0ff716d1a0/examples/mic_mim.py#L244-L249\r\nhttps://github.com/mne-tools/mne-connectivity/blob/49dd83c04c50c5dc7133e8b8ee9ccb0ff716d1a0/examples/mic_mim.py#L259-L261"", 'comment_created': datetime.datetime(2023, 7, 18, 10, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}, {'comment_id': 1266562363, 'comment_body': 'Same rewording as above: https://github.com/mne-tools/mne-connectivity/blob/49dd83c04c50c5dc7133e8b8ee9ccb0ff716d1a0/examples/granger_causality.py#L160-L161', 'comment_created': datetime.datetime(2023, 7, 18, 10, 14, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tsbinns', 'type': 'User'}]","[{'commit_sha': '446c7fe6e766eb062eaff2ff227da0032d0e535e', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73791c08cabb4feb9780a51595d3dbe7901fa4b1', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe0ab9b5856963f30181beaa67d6cda1fdd8b164', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a25bda71a4edfdf54d4ddcf4a4c4ef59092ab04d', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '953ecff43b480f6d921bd7d9d472aece5c6ed29c', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63ed328c7b00e9378eee7c33303f4bbf23a352fc', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d3f318b582fcfdfa90b21dc882df6356b521dab', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e381b6505a057b6fd75fc98724250dfb9d4598ee', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d0c5f76f2833d98d79f4b26d4d1c3aeac853445', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab926ba6b1820960d26634fe524aa7d988c80d97', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1f7434f1d972e9ce64a1b63387dc3b099c4505a', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '558291ac271af4d4d25f8f848896988c76592044', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd22d61a9d00f1564db9401279e874447037d8c0', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d24541bdba07399969744271e2933103bb49b65', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71297fc82264a9f500eb96239a3770a84583a5bc', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13604dfee51867562312746708067d964c0a7b0d', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b1cb2c22f8296ea885c84c2b86a8a436099f241', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7ff63f6006258df9d9e30929ad5dfdd476d17c0', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '391aa09e5e1aa9fb783676432e04fab30e2746c4', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa8d6a32acc197948fc4090d9600b493f61e1414', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb675e2a3852434a9044c975b29b99f28c5cf203', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60cbaf38152aec84f124f836476cb059dbf12637', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '341eceb1ecb69800e334159a03159dfb4492baf8', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '900d71897a34b22b3fa70cb1253cb92cee6126c1', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c14187d086574d94b949011d7cd19b418e48baf3', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '754aa704887628dc24ba59d1597470cdafe11cb8', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70cc40de972669afab07115ba8526e2bf8667e9d', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b139cdf5897edb28ef72f6889dbc95bcbc5feb', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c480c75af1805369f3916559d2dbff39d2ce435', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe1e5a5f4cd5dabf43c0c18b4acbec155efd781', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f85e2d7142f9a1e20b9d35b382d78617306505ce', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bec012f495413b233f815324cc3f76b415675ecc', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea21a3ece63e7afa5951fef908b064247c53d770', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a349121166337cbe5d4833c5acb01b4f935ee21a', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2385404fd63c1b287178473c4e88f38969e15136', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21c0a4c416818d984c75c05009534d43e0d2bf64', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79ef7f0181b4f3464da9d441060f9421ab01b429', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ee43e973f027ec748963e0fc3789a1f729284d4', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba60ef3faf5d38dedfac74f00038f4a4c1765cbc', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1f073c402a8022cd443c1a135cd3371efa2960a', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51da1691531f0bda1ae5768779f9fd71e6c1dbd9', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfb4bb3c29c4cc8fa868e35673536c4923a22d4f', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f5a47363473e3606bbd0b1df175c40c4fa3832c', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c5ebbeb0e49d367a36c9c72fe5bc44fb27a1868', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02eaab30713d1708b87db79b2c97108bf2e8f98', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59a534d4a1bce3d44799f5ab6505ad1f49acb7c4', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec85e9a576e7b569e9a6c9c703ee2e4742e3af09', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '100e235c8520664510401d73394df1c953a6721f', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72ae59b880e910e9e74f724c60afcbba28a85fea', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c4eb273cdc08fff5f72c5f2a380eb9df700b7c4', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '301ad6857835913d10183c1b61d47f178ac1c3a6', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a28e53e54a9c94bd7e5348611dcab7c12b11062', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a3183a458817a3451a23322481c18fb59d4af56', 'committer_username': 'adam2392', 'committer_name': 'Adam Li', 'committer_email': None, 'commit_date': datetime.datetime(2013, 2, 3, 0, 44, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaaed175b7a008614cafb9c31a330eb4533e5f17', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '658f9cf5b75a5d436fd851aa9bf6c31ed4b42277', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1dae8bdf8fb7e7c4eb7c5946cce8950d024461d', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96f77bcbb2ee0bd6102ff68985d2c3884995d780', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c5298c41204315add818190d7c6952c5a510f8f', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '043438abd20d040d6b749573f7ad28fbac6ccb33', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72dea53244ad9b74f6d2e1c534541393af048039', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dae09a5ff3a1bd5caf848d8ab711d1f3887280ad', 'committer_username': 'adam2392', 'committer_name': 'Adam Li', 'committer_email': None, 'commit_date': datetime.datetime(2013, 2, 3, 0, 44, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '894c42e59cef9f97aa07a7a4f71cef756512c50c', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f57c80dc69a284efb81396e136bb04dc3ef1c2b', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5608e827e76b09c2b4c36873119f494e1cc4847d', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7fea918d93baa27025026e0b24aeaecb642eeaf', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49dd83c04c50c5dc7133e8b8ee9ccb0ff716d1a0', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c9548ca6cfb3f1d8f7a2b70ef30631f2daeda78', 'committer_username': 'tsbinns', 'committer_name': 'Thomas S. Binns', 'committer_email': 't.s.binns@outlook.com', 'commit_date': datetime.datetime(2019, 10, 23, 12, 26, 7, tzinfo=datetime.timezone.utc)}]",Thomas S. Binns,56922019,t.s.binns@outlook.com,User,,21,,20,18
1887071482,MAINT: Test on macOS arm64,`macos-latest` now means `macos-14` which is arm64. There is some issue with `np.linalg.det` it seems. This PR should fix them.,True,187,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/187,https://github.com/mne-tools/mne-connectivity/pull/187,closed,152,210,36,3,2,0,0,0,[],2024-05-24 15:11:15+00:00,2024-05-24 15:52:54+00:00,2499.0,0:41:39,[],"[{'commit_sha': 'fa9a3e0e3cb74068048068bc8b1d081b654b923e', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcf4317692b12fce96db48d12014a25ec9d8656b', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b86e86cacf08824d127e29fb467f6cd81735724', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",Eric Larson,2365790,larson.eric.d@gmail.com,User,,237,,1,242
1575831936,MAINT: Update CIs,I looked quickly at the failures in https://github.com/mne-tools/mne-connectivity/pull/142 and it looks like there is room for updating/optimizing CIs. Will mark for merge when green because these are seemingly straightforward version and action updates that we've taken and used in MNE-Python for some months now.,True,154,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/154,https://github.com/mne-tools/mne-connectivity/pull/154,closed,73,117,7,8,0,0,0,0,[],2023-10-27 02:28:42+00:00,2023-10-27 03:51:51+00:00,4989.0,1:23:09,[],"[{'commit_sha': '0f2e0b6b5b062cf67b9481dfd967b927d23ad70d', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac859f5b0bb9ec1e03b40b67822991ea8c5e66ce', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5259c28cf758fbe79e8ff81b239e7b4d091f60b4', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af75ace6a6920c04aa4e8ee92313a67b8c804597', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8e6c6b777aeeb50ecef66f545a3b3920de486e7', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4ca929d6d7e4717155ec3cde55cc37bcde5aca', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da63951a9335ba79f3efa758a9861114b299a62', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53f2a074f09d7cdef65d512047b47f2c19a1e48d', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",Eric Larson,2365790,larson.eric.d@gmail.com,User,,237,,1,242
1982107010,[pre-commit.ci] pre-commit autoupdate,"<!--pre-commit.ci start-->
updates:
- [github.com/astral-sh/ruff-pre-commit: v0.5.2 → v0.5.4](https://github.com/astral-sh/ruff-pre-commit/compare/v0.5.2...v0.5.4)
- [github.com/astral-sh/ruff-pre-commit: v0.5.2 → v0.5.4](https://github.com/astral-sh/ruff-pre-commit/compare/v0.5.2...v0.5.4)
<!--pre-commit.ci end-->",True,216,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/216,https://github.com/mne-tools/mne-connectivity/pull/216,closed,7,10,4,2,0,0,0,0,[],2024-07-22 21:43:55+00:00,2024-07-22 22:56:39+00:00,4364.0,1:12:44,[],"[{'commit_sha': 'e9a0b7dae30687fce24d44bfbcdac87070bf2bf4', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9c00b533058e23b0e24d8e54df2d828e8f26b38', 'committer_username': 'larsoner', 'committer_name': 'Eric Larson', 'committer_email': 'larson.eric.d@gmail.com', 'commit_date': datetime.datetime(2012, 9, 17, 22, 6, 38, tzinfo=datetime.timezone.utc)}]",,66853113,,Bot,,0,,0,0
2018005546,unpin pytest,"cf. https://github.com/mne-tools/mne-python/issues/12789

Locally for me all tests pass except for 3 symmetric_orth runs (2-False, 3-False, and 3-True). **They pass on pytest 7.4.4** so this needs digging into",True,227,https://api.github.com/repos/mne-tools/mne-connectivity/pulls/227,https://github.com/mne-tools/mne-connectivity/pull/227,closed,3,2,2,3,1,0,0,0,[],2024-08-13 21:36:46+00:00,2024-08-13 22:06:06+00:00,1760.0,0:29:20,[],"[{'commit_sha': 'e290c5a8c64eaa735cbab718223c014b677c86d0', 'committer_username': 'drammock', 'committer_name': 'Daniel McCloy', 'committer_email': None, 'commit_date': datetime.datetime(2012, 6, 2, 19, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7742d77750530475e04a453dbf2674d6d518fa9c', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab3dea9c2670300f9374e81055626067210034a9', 'committer_username': 'drammock', 'committer_name': 'Daniel McCloy', 'committer_email': None, 'commit_date': datetime.datetime(2012, 6, 2, 19, 15, 18, tzinfo=datetime.timezone.utc)}]",Daniel McCloy,1810515,,User,,94,,9,149

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
369628653,mne-connectivity,mne-tools/mne-connectivity,Python,34,67,12,21,232,49,7,8,"[{'id': 2018005546, 'number': 227, 'closed': datetime.datetime(2024, 8, 13, 22, 6, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 13, 21, 36, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1760.0, 'time_delta': '0:29:20', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1790378038, 'number': 179, 'closed': datetime.datetime(2024, 3, 26, 13, 23, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 25, 22, 14, 48, tzinfo=datetime.timezone.utc), 'time_taken': 54542.0, 'time_delta': '15:09:02', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1691980570, 'number': 167, 'closed': datetime.datetime(2024, 1, 23, 15, 57, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 23, 15, 24, 3, tzinfo=datetime.timezone.utc), 'time_taken': 2034.0, 'time_delta': '0:33:54', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 1448717463, 'number': 144, 'closed': datetime.datetime(2023, 7, 25, 17, 59, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 15, 57, 20, tzinfo=datetime.timezone.utc), 'time_taken': 7315.0, 'time_delta': '2:01:55', 'additions': 82, 'deletions': 152, 'state': 'closed'}, {'id': 1435446610, 'number': 141, 'closed': datetime.datetime(2023, 7, 15, 23, 32, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 14, 21, 30, 58, tzinfo=datetime.timezone.utc), 'time_taken': 93674.0, 'time_delta': '1 day, 2:01:14', 'additions': 28, 'deletions': 6, 'state': 'closed'}, {'id': 1115050252, 'number': 110, 'closed': datetime.datetime(2022, 11, 25, 18, 10, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 8, 21, 24, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1457162.0, 'time_delta': '16 days, 20:46:02', 'additions': 15, 'deletions': 8, 'state': 'closed'}, {'id': 781869864, 'number': 56, 'closed': datetime.datetime(2021, 11, 16, 22, 10, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 16, 16, 42, 14, tzinfo=datetime.timezone.utc), 'time_taken': 19678.0, 'time_delta': '5:27:58', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 681259604, 'number': 15, 'closed': datetime.datetime(2021, 7, 1, 2, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 21, 54, 28, tzinfo=datetime.timezone.utc), 'time_taken': 17732.0, 'time_delta': '4:55:32', 'additions': 3, 'deletions': 4, 'state': 'closed'}]"
