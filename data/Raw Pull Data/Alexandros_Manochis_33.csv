pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
438168397,Accelerated billiard walk,This PR implements accelerated billiard walk for H-polytopes. ,True,92,https://api.github.com/repos/GeomScale/volesti/pulls/92,https://github.com/GeomScale/volesti/pull/92,closed,920,180,17,21,0,44,1,0,[{'name': 'optimization'}],2020-06-22 20:45:17+00:00,2020-07-17 09:08:48+00:00,2118211.0,"24 days, 12:23:31","[{'comment_id': 448265467, 'comment_body': 'why not using another enum `accelerated_billiard` and not use `type` variable at all?', 'comment_created': datetime.datetime(2020, 7, 1, 10, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448266430, 'comment_body': 'type is (another) bool actually, please create an enum or int here to compress all bool variables related to walks', 'comment_created': datetime.datetime(2020, 7, 1, 10, 21, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448267036, 'comment_body': 'ok now CB is always the default, do we need to update the README, doc etc ?', 'comment_created': datetime.datetime(2020, 7, 1, 10, 23, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448268104, 'comment_body': 'accelerated billiard', 'comment_created': datetime.datetime(2020, 7, 1, 10, 25, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448269882, 'comment_body': '```\r\nstd::pair <NT, int> ball_lambda = B.line_positive_intersect(r, v);\r\nint facet = P.num_of_hyperplanes();\r\nparams.facet_prev = polypair.second;\r\n\r\nif (polypair.first < ball_lambda.first ) {\r\n            facet = polypair.second;\r\n            params.hit_ball = false;\r\n} else {\r\n            params.hit_ball = true;\r\n}\r\n\r\nreturn std::pair<NT, int>(std::min(polypair.first, ball_lambda.first), facet);\r\n``` \r\nis common to all 3 functions. It could be another function to improve readability/error-proneness of code.', 'comment_created': datetime.datetime(2020, 7, 1, 10, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448271299, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 1, 10, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448271429, 'comment_body': 'remove comments if not needed', 'comment_created': datetime.datetime(2020, 7, 1, 10, 31, 48, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448276836, 'comment_body': 'RANDOM_WALKS_UNIFORM_ACCELERATED_BILLIARD_WALK_HPP', 'comment_created': datetime.datetime(2020, 7, 1, 10, 43, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448277371, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 1, 10, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448279323, 'comment_body': 'style comment \r\n`update_parameters& params`', 'comment_created': datetime.datetime(2020, 7, 1, 10, 48, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448282380, 'comment_body': 'why are you computing this every time you create a walk object? AFAIU this result is the same as long as the polytope does not change (e.g. in rounding or rotating operations). So it makes sense to store it in Polytope. Moreover, you copy it here to `_AA` and then pass it again to a method of the polytope  `P.line_positive_intersect(_p, _v, _lambdas, _Av, _lambda_prev, _AA, _update_params);` which can be avoided.', 'comment_created': datetime.datetime(2020, 7, 1, 10, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 448283699, 'comment_body': 'why not naming `_update_parameters`', 'comment_created': datetime.datetime(2020, 7, 1, 10, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 453856592, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 13, 18, 44, 50, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 453856780, 'comment_body': 'yes I changed roxygen comments', 'comment_created': datetime.datetime(2020, 7, 13, 18, 45, 8, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 453857264, 'comment_body': 'please explain', 'comment_created': datetime.datetime(2020, 7, 13, 18, 45, 55, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 453859102, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 13, 18, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 453861070, 'comment_body': ""This is implemented in this branch https://github.com/AlexManochis/volume_approximation/tree/ellipsoid_uniform .\r\nHowever I didn't merge it into this branch because it is not clear which PR is going to be merged first."", 'comment_created': datetime.datetime(2020, 7, 13, 18, 52, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 453862721, 'comment_body': ""That's true. However, AA is needed only for this walk, so it will be unnecessary for the other walks."", 'comment_created': datetime.datetime(2020, 7, 13, 18, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 453864116, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 13, 18, 57, 58, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 453866650, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 13, 19, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 453882462, 'comment_body': 'Should the user will be able to distinguish the two cases (accelerated or not BiW)?', 'comment_created': datetime.datetime(2020, 7, 13, 19, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 453882732, 'comment_body': 'Please check now', 'comment_created': datetime.datetime(2020, 7, 13, 19, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 454179077, 'comment_body': 'it seems that the current is more mature, and probably will be merged first. If you want you can merge that branch  https://github.com/AlexManochis/volume_approximation/tree/ellipsoid_uniform here.', 'comment_created': datetime.datetime(2020, 7, 14, 8, 6, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 454327719, 'comment_body': 'I think it would be a useful feature', 'comment_created': datetime.datetime(2020, 7, 14, 12, 43, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 454329194, 'comment_body': 'Better now. Instead of \r\n```\r\nint facet = P.num_of_hyperplanes();\r\n\r\n        if (polypair.first < ball_lambda.first ) facet = polypair.second;\r\n```\r\nwhy not just \r\n`int facet = polypair.first < ball_lambda.first ?  polypair.second : P.num_of_hyperplanes();`\r\n', 'comment_created': datetime.datetime(2020, 7, 14, 12, 45, 38, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 454330585, 'comment_body': 'you are missing a space before `_L`', 'comment_created': datetime.datetime(2020, 7, 14, 12, 48, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 455347906, 'comment_body': 'thanks, done', 'comment_created': datetime.datetime(2020, 7, 15, 21, 9, 19, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 455385649, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 15, 21, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 455386500, 'comment_body': 'I didnt merge it but I created an enum to declare a random walk', 'comment_created': datetime.datetime(2020, 7, 15, 21, 54, 24, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 455614574, 'comment_body': 'ok similarly `get_AA` is only needed for acc. billiard and has to be removed from polytopes. I am on with leaving AA in the walk and removing get_AA(), you can use get_A ', 'comment_created': datetime.datetime(2020, 7, 16, 8, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 455688303, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 16, 10, 31, 44, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 455704565, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 16, 11, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456255975, 'comment_body': 'it is unnecessary to do both checks. \r\nwhat if\r\n```\r\nparams.hit_ball = (polypair.first < ball_lambda.first) ? false : true;\r\nint facet = params.hit_ball ? P.num_of_hyperplanes() : polypair.second;\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 7, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 456256236, 'comment_body': 'same as above', 'comment_created': datetime.datetime(2020, 7, 17, 7, 0, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 456256325, 'comment_body': 'if not needed please remove', 'comment_created': datetime.datetime(2020, 7, 17, 7, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 456257229, 'comment_body': 'same as above', 'comment_created': datetime.datetime(2020, 7, 17, 7, 3, 37, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 456257685, 'comment_body': 'remove comments if not needed', 'comment_created': datetime.datetime(2020, 7, 17, 7, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 456264534, 'comment_body': 'comments, needed?', 'comment_created': datetime.datetime(2020, 7, 17, 7, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 456283537, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 8, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456283649, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 8, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456283740, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 8, 0, 59, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456283809, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 8, 1, 7, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456284869, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 8, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456284915, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 8, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}]","[{'commit_sha': '0a1a9fff9b8d0ed4d4631fe57bfcc07f5c422ccb', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11f9ec5576d8227f730e4d9ababaeeef04bc85f1', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ec8bb745bb1c5da719ea4c96a9a9918b6eb8db2', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e87d41afb5c20745e9bf229cf418a15858f45ed5', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16759c758d67f81879fcf88ef8a90ff0d7add03b', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd63f1f836046dbdd1007bcd13dd3f8bfde972e5', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6878cb38e33bc26f6956588d53b9cd8f63021d75', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9210a7595e3b79e211abf4ec788ee40ad0676daa', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '182087ea49427a2379ab07e508708f50194b4a48', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b56e62d34118977d3809bb881fafe55c83340834', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f41540ce2e980bba99c2b316cb7140e10dcdb64', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b86166364e0d811bba0ad73dd99d1ee07436e3', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a475e5e1b2c95b45f7b09f49853d9ae9120c4c2', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c727c419bb32b8ea97bb329fae0cefe160cb7c8c', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6e26e64ad0918de754b9aecf7cc8832c2aff22a', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fda8f9fbedb7ff0a0ab99a80e62eaca2a96e2ab', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f9e758d0ff51aebc8ea7db9ab3fdcfcc0686f8b', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c6909a6531427a8fbfe7a45fa8f9e067fcc54fb', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13b70d482027079e7e0aa0f8a5ad88cdbaa6ca36', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3731febbaea7d66bd19b793909226b76dc5443c', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b86c2ee5a67cfc700b3f497d633e214080fefbe2', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}]",,62110146,,User,,6,,1,2
435438788,"Dikin, Vaidya, John walk","This PR includes c++ and R wrappers for the three c++ implementations of vaidya walk, dikin walk and john walk in https://github.com/rzrsk/vaidya-walk.

1) I have modified the original c++ code to avoid the use of virtual classes. 
2) I have used the volesti c++ code structure to use the code from (1).
3) I have implemented R wrappers in `sample_points.cpp` in `R-proj/src` folder.
4) I have updated Rd files.",True,88,https://api.github.com/repos/GeomScale/volesti/pulls/88,https://github.com/GeomScale/volesti/pull/88,closed,1005,25,19,25,0,12,1,0,[{'name': 'enhancement'}],2020-06-16 20:04:23+00:00,2020-09-18 14:21:44+00:00,8101041.0,"93 days, 18:17:21","[{'comment_id': 442256075, 'comment_body': 'please use at least an `enum` this list of `bool`s is becoming too long', 'comment_created': datetime.datetime(2020, 6, 18, 14, 10, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 442265388, 'comment_body': 'why not at construction time ?', 'comment_created': datetime.datetime(2020, 6, 18, 14, 23, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 442265853, 'comment_body': 'similar as above', 'comment_created': datetime.datetime(2020, 6, 18, 14, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 442266239, 'comment_body': 'if not used remove it', 'comment_created': datetime.datetime(2020, 6, 18, 14, 24, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 442266475, 'comment_body': 'too long line', 'comment_created': datetime.datetime(2020, 6, 18, 14, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 442266847, 'comment_body': 'please wrap long lines', 'comment_created': datetime.datetime(2020, 6, 18, 14, 25, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 443207311, 'comment_body': 'Thanks. I wrapped all long lines.', 'comment_created': datetime.datetime(2020, 6, 21, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 443207342, 'comment_body': 'I wrapped it among others.', 'comment_created': datetime.datetime(2020, 6, 21, 10, 55, 14, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 443207362, 'comment_body': 'Thanks. I have removed all unused comments', 'comment_created': datetime.datetime(2020, 6, 21, 10, 55, 33, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 443207407, 'comment_body': 'Thanks. I have implemented it.', 'comment_created': datetime.datetime(2020, 6, 21, 10, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 443223604, 'comment_body': 'Thanks. I have removed the init function.', 'comment_created': datetime.datetime(2020, 6, 21, 14, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 443223627, 'comment_body': 'done as above', 'comment_created': datetime.datetime(2020, 6, 21, 14, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}]","[{'commit_sha': '12fe8fa599a2e4c3be0458b170b2b7f3361af0b4', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1cc248d47dcf2071a19600346ca239cd31deb00', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066272154c988e725dc15d61afd56afa6b162098', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '556fe5aaa252d5e4d62c1a41a341989367894406', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf23eb63a4cea57485dd675e41a6215a67df132f', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37bf4b4ddc0a11ba09c92a36a8abb42fb508d426', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cef390ebfeeb77f0f4032dc3253aafb598d75f7', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '538a4d5e9e2d103d44bdf2f8c8278583f5bb8627', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0cb0352b75092e1dbda3a35d49d44ece3a65d7d', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bbc0c5b764c491a2c7902708e4ceda44c517f0b', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30af4ecd2701a68674273125d75aa5b43d997432', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57208bcd6144efc0b2815224c30ddab8c21eea28', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b535ecd8d8b3e7c8640386e1e7f9fe2c3d91423e', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc343dc1e333d6bfe5f3cfaa46506f8bb2daea46', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2d9a087941192dbdf8f8ba94e913695872adb06', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6764a9e296939a49fadbc981e38ea337897a667e', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '244c9fa7944aa2251276b611d7aa29f2329de3c8', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aba1702261a30b097ba85c85cb7bd8f6e3ff47a6', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc2cf9a14b57aba082cca649457232bd6475b9e', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22646568dde4d96735da64a801155ea714881ade', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '041c4b5748ebd5d63bc553882f593ba06dd6e73d', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b238019f83320b7bb8996341f4eb2a953b2fc9aa', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6209ca23afbe12b599687ae8a906c8a7d1c7f3c7', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df7391b4a54c1ab336f645ba9cb2dc0e3338af08', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b04dc6e12b0f7f7b75c955f9a5ad79c4b83dee9a', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}]",,62110146,,User,,6,,1,2
450383651,Adding two rounding methods,"This PR provides:

1) A rounding method based on the computation of maximum volume enclosed ellipsoid only for H-polytopes.
2) A rounding method based on svd decomposition of a uniformly distributed sample in P (for all the representations).
3) An interior point method to solve the linear program that computes the Chebychev ball of an H-polytope.
4) Given a low dimensional polytope computes the full dimensional polytope.
5) R interfaces for all the above.

The code is included in the folder `/root/include/preprocess/`. ",True,96,https://api.github.com/repos/GeomScale/volesti/pulls/96,https://github.com/GeomScale/volesti/pull/96,closed,1223,436,41,63,0,86,0,0,[],2020-07-16 17:50:25+00:00,2020-07-30 09:53:27+00:00,1180982.0,"13 days, 16:03:02","[{'comment_id': 456351335, 'comment_body': 'Plese update roxygen comments', 'comment_created': datetime.datetime(2020, 7, 17, 10, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 456352480, 'comment_body': 'Do you need here the computations of Eigen::ComputeThinU | Eigen::ComputeThinV ?', 'comment_created': datetime.datetime(2020, 7, 17, 10, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 456352878, 'comment_body': 'please remove unused comments', 'comment_created': datetime.datetime(2020, 7, 17, 10, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 456353023, 'comment_body': 'plz remove', 'comment_created': datetime.datetime(2020, 7, 17, 10, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 456353124, 'comment_body': 'plz remove', 'comment_created': datetime.datetime(2020, 7, 17, 10, 15, 5, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 456353199, 'comment_body': 'plz remove', 'comment_created': datetime.datetime(2020, 7, 17, 10, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 456353430, 'comment_body': 'plz remove', 'comment_created': datetime.datetime(2020, 7, 17, 10, 15, 43, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 456353501, 'comment_body': 'plz remove', 'comment_created': datetime.datetime(2020, 7, 17, 10, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 456353632, 'comment_body': 'plz remove ', 'comment_created': datetime.datetime(2020, 7, 17, 10, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 456658645, 'comment_body': 'Thanks, done.', 'comment_created': datetime.datetime(2020, 7, 17, 20, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456659297, 'comment_body': 'The computation of U is not needed. I removed it.', 'comment_created': datetime.datetime(2020, 7, 17, 20, 28, 25, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456661568, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 20, 34, 6, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456661613, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 20, 34, 13, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456661656, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 20, 34, 19, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456661717, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 20, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456661785, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 20, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456661822, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 20, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 456661862, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 17, 20, 34, 48, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 457966253, 'comment_body': 'please wrap this line, if possible', 'comment_created': datetime.datetime(2020, 7, 21, 9, 34, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 457970848, 'comment_body': 'indentation: one space less\r\n', 'comment_created': datetime.datetime(2020, 7, 21, 9, 43, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 457975048, 'comment_body': 'what indentation are you using here? if you follow the above lines then you are missing a few spaces here', 'comment_created': datetime.datetime(2020, 7, 21, 9, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 457975533, 'comment_body': 'too long line', 'comment_created': datetime.datetime(2020, 7, 21, 9, 51, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 457978465, 'comment_body': 'maybe a more readable name than `mthd` ? `method_rcpp` ? Could be also a good idea to use the same pattern for variables transformed from R to Rcpp e.g. `r_variable` becomes `r_variable_rcpp`', 'comment_created': datetime.datetime(2020, 7, 21, 9, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 457979310, 'comment_body': 'BTW is `walkL` undefined for other types of polytopes than 1 and 2?', 'comment_created': datetime.datetime(2020, 7, 21, 9, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 457981671, 'comment_body': 'can this bunch of code be a function that takes either a `HP` or `VP` or `ZP` and avoid writing the same code 3 times ?', 'comment_created': datetime.datetime(2020, 7, 21, 10, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458017451, 'comment_body': 'Is it possible to avoid the `init()` function and initialize by contructor?', 'comment_created': datetime.datetime(2020, 7, 21, 11, 10, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458017916, 'comment_body': 'indentation: a few more spaces are missing', 'comment_created': datetime.datetime(2020, 7, 21, 11, 11, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458018874, 'comment_body': 'is it possible to use iterators instead of pointers?', 'comment_created': datetime.datetime(2020, 7, 21, 11, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458019541, 'comment_body': 'could you provide the reference of the algorithm implemented here?', 'comment_created': datetime.datetime(2020, 7, 21, 11, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458021317, 'comment_body': 'this is difficult to read, maybe a different indentation?\r\nI think this is more readable\r\n```\r\nif (total_err < tol || ( t > 0 && ( (std::abs(t - t_prev) <= tol * t && std::abs(t - t_prev) <= tol * t_prev) \r\n                    || (t_prev >= (1.0 - tol) * t && i > 0) \r\n                    || (t <= (1.0 - tol) * t_prev && i > 0) ) ) ) {\r\n```\r\nwhat do you think?', 'comment_created': datetime.datetime(2020, 7, 21, 11, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458022044, 'comment_body': 'also instead of using 1,2,3,4,5 to identify the iterators why not use the name of the vectors?', 'comment_created': datetime.datetime(2020, 7, 21, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458023162, 'comment_body': 'indentation also missing here.\r\nThis is a very long list of variables with very short names, so it is difficult to understand for what is used for (unless if you have a reference publication) some of them are initialized and some of them not (why? if this is the case that they are used later, then define them later). Also I find declaring all variables in one line difficult to read.', 'comment_created': datetime.datetime(2020, 7, 21, 11, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458037871, 'comment_body': 'wrong indentation', 'comment_created': datetime.datetime(2020, 7, 21, 11, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458038571, 'comment_body': 'is it really needed to return such a complicated nested type? If all the elements are needed then why not an `std::tuple` ?', 'comment_created': datetime.datetime(2020, 7, 21, 11, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458039079, 'comment_body': 'if we follow the rest of the code in the library this should be \r\n```\r\ntemplate \r\n<\r\n    typename WalkTypePolicy,\r\n    typename MT,\r\n    typename VT,\r\n    typename Polytope,\r\n    typename Point,\r\n    typename NT,\r\n    typename RandomNumberGenerator\r\n>\r\n```', 'comment_created': datetime.datetime(2020, 7, 21, 11, 54, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458039340, 'comment_body': 'indentation: a few more spaces', 'comment_created': datetime.datetime(2020, 7, 21, 11, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458039583, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 21, 11, 55, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458040132, 'comment_body': 'similar comment here with names, initialization and reference.', 'comment_created': datetime.datetime(2020, 7, 21, 11, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458040418, 'comment_body': 'indentation mismatch', 'comment_created': datetime.datetime(2020, 7, 21, 11, 56, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458041421, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 21, 11, 58, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458041472, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 21, 11, 58, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458041620, 'comment_body': 'indentation as above', 'comment_created': datetime.datetime(2020, 7, 21, 11, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458042114, 'comment_body': 'you are using a different style here. It is better to use the style of indentation as commented above', 'comment_created': datetime.datetime(2020, 7, 21, 11, 59, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458042625, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 21, 12, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458042830, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 21, 12, 0, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458042944, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 21, 12, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458043473, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 21, 12, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458043584, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 21, 12, 2, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458044021, 'comment_body': 'do the volume algorithms actually need the rounding algorithms?', 'comment_created': datetime.datetime(2020, 7, 21, 12, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 458044087, 'comment_body': 'same here', 'comment_created': datetime.datetime(2020, 7, 21, 12, 3, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 460224973, 'comment_body': 'no, only in `volume_sequence_of_hpoly.hpp`', 'comment_created': datetime.datetime(2020, 7, 24, 18, 39, 23, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 460225132, 'comment_body': 'no, only in `volume_sequence_of_hpoly.hpp`', 'comment_created': datetime.datetime(2020, 7, 24, 18, 39, 41, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 460225187, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2020, 7, 24, 18, 39, 49, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 460225254, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2020, 7, 24, 18, 39, 59, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 460225339, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2020, 7, 24, 18, 40, 8, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 460225416, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 24, 18, 40, 18, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 460225473, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2020, 7, 24, 18, 40, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 460225556, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2020, 7, 24, 18, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 460225644, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2020, 7, 24, 18, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 460226082, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 24, 18, 41, 44, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 460728661, 'comment_body': 'ok so those includes are not needed', 'comment_created': datetime.datetime(2020, 7, 27, 8, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 460728747, 'comment_body': 'ok so those includes are not needed', 'comment_created': datetime.datetime(2020, 7, 27, 8, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 461053312, 'comment_body': 'Yes of course, removed.', 'comment_created': datetime.datetime(2020, 7, 27, 17, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461053385, 'comment_body': 'Yes of course, removed.', 'comment_created': datetime.datetime(2020, 7, 27, 17, 30, 33, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461055057, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 17, 33, 22, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461056304, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 17, 35, 31, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461057578, 'comment_body': 'can we implement it in next PR, because I think It requires quite a few changes', 'comment_created': datetime.datetime(2020, 7, 27, 17, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461083588, 'comment_body': 'only billiard walk is used now. Thus, I set walkL = 2 for all the representations', 'comment_created': datetime.datetime(2020, 7, 27, 18, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461083832, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461085657, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 27, 30, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461086598, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461086764, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 29, 35, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461086891, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461087357, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461087781, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461088001, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 31, 54, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461088300, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 32, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461088969, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461089153, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 7, 27, 18, 34, 4, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461098016, 'comment_body': 'yes nice, thanks.', 'comment_created': datetime.datetime(2020, 7, 27, 18, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461114156, 'comment_body': 'ok please add a comment ', 'comment_created': datetime.datetime(2020, 7, 27, 19, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 461114294, 'comment_body': 'sure', 'comment_created': datetime.datetime(2020, 7, 27, 19, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 461115820, 'comment_body': 'Please check now', 'comment_created': datetime.datetime(2020, 7, 27, 19, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461127255, 'comment_body': 'pointers also used in Hpolytope boundary oracles, that is why I use them here.\r\nI think iterators can be used, https://eigen.tuxfamily.org/dox-devel/group__TutorialSTL.html  ', 'comment_created': datetime.datetime(2020, 7, 27, 19, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 461160230, 'comment_body': 'please check now', 'comment_created': datetime.datetime(2020, 7, 27, 20, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 462777998, 'comment_body': 'ok please open an issue to keep track on it, to switch to iterators at some point', 'comment_created': datetime.datetime(2020, 7, 30, 6, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}]","[{'commit_sha': '0a1a9fff9b8d0ed4d4631fe57bfcc07f5c422ccb', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11f9ec5576d8227f730e4d9ababaeeef04bc85f1', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ec8bb745bb1c5da719ea4c96a9a9918b6eb8db2', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e87d41afb5c20745e9bf229cf418a15858f45ed5', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16759c758d67f81879fcf88ef8a90ff0d7add03b', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd63f1f836046dbdd1007bcd13dd3f8bfde972e5', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6878cb38e33bc26f6956588d53b9cd8f63021d75', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9210a7595e3b79e211abf4ec788ee40ad0676daa', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '182087ea49427a2379ab07e508708f50194b4a48', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b56e62d34118977d3809bb881fafe55c83340834', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '384dcfe53f9491e03b420ab1095bea68d2088164', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04768b5071b1d5b77a970ccf3aa35680e590ffe9', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a707435e4b1bf447ab4a7c5e04adb5bdf585921d', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37e59a92702fc5d1bdfc4abda34fde0c48cf75a9', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a315635d9a624e04af28f3ba8628ff032943cb11', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88c1d8e1b193d2eea2c0996a10ae5a82d61d3298', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edcfcdaf0c6eb233223cb558606b1f2b500e961d', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbee546215033c6f2b3a03ecbab6713d560cd588', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f41540ce2e980bba99c2b316cb7140e10dcdb64', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b86166364e0d811bba0ad73dd99d1ee07436e3', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d07e43f8ba3798cd57d42f13fc2c1e797ee01a7', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e79c9af903929d3a3714caa64ac0ee6817fbc7a', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b54a323e2df60f239b42ea0380406c5534aadff', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd42e403a7517719952de15c8addda8371cdd041d', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a475e5e1b2c95b45f7b09f49853d9ae9120c4c2', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c727c419bb32b8ea97bb329fae0cefe160cb7c8c', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25213a733dc6fc289edaba1cac8c3ccbe0ed173b', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7022d48cb37aadde606c4765b1333e4557152e2a', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96cc3f863140efa969d1a9858a1c5a7d4db31bdd', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35f68a86463e909bdd3548b6a7ed8baf61969f32', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cc02137f1a65d5011b80aafa9aafdd59ecba0a0', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ca58a744c2d22fd5b3cc07ec6ca55cfd3992789', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa828e7a6f52a15e4fa287a451b33d5ef2153b1a', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '264c23cb8a5d9cdb6e7fc51ac86ee203b8e1e6ee', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d9dad57446f1f7c228a348b4896f87c3b9365d1', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6e26e64ad0918de754b9aecf7cc8832c2aff22a', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fda8f9fbedb7ff0a0ab99a80e62eaca2a96e2ab', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0b911e127e2fb6fea4f4fc9c6411f7f65a32eed', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f9e758d0ff51aebc8ea7db9ab3fdcfcc0686f8b', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d1b07f66b97184eed12d31b127620fdcb4cace0', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c6909a6531427a8fbfe7a45fa8f9e067fcc54fb', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13b70d482027079e7e0aa0f8a5ad88cdbaa6ca36', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95749928b34bde2dcd63b91d2d78b2c9a7928a9b', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c4e650cda000309c8b09ad486fa9cc29304ce22', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bfdc796fd5b63c1deb3cf6976459b6f5dcde2ab', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee947458a7d22f1d8f9e990cdf55f0edc2cef604', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4af1013d36e2bbdf18da90a3e0868fd2711e5555', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3731febbaea7d66bd19b793909226b76dc5443c', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '878923b7f065f86c7b6c5787bbd3b63b4ed7f53a', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1686d14e7b7909ebde16855ec5445c3404d6ed03', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e45daa119ab6e42fd24b097ac4fff429d8ec6352', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ce07c9ec96ffec5bbded4062d58f74aa408bb4b', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3769e0f85f186d88ad312cdf8ac406ae301371', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9954d4f1aed72b24125a8b07599a120cd895d41', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2162b356745a1b7836aa6986624475887c968415', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05b82f11ec1cccb7a6d98ff036d3e23ee48f85d1', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b30200fd012d329e3206364fb68b9655b7abb79', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05babe16cf8146a05c1c561a3705ef979ed28e6d', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6963cd3ab9fcb9b1efdecaa5d8772549a01c6c7f', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c5f27a7473a21fa0222a6904b67d44e4b807e0c', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a23a14da212a312c1547b12a54e717526a2cebf2', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fd353a793a2048936e0a27ce28f185583888f40', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba1b31537a774d14dc54f84df92a71154f1f6cb5', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}]",,62110146,,User,,6,,1,2
459213584,MCMC diagnostics,"This PR implements in C++:

1. Geweke MCMC diagnostic test
2. Gelman-Rubin Potential Scale Reduction Factor (PSRF)
3. Raftery & Lewis MCMC diagnostic test

- Geweke is implemented as Hotelling's Two Sample test, which is a multivariate extension of the common 
two sample Student's t-test.   
- Gelman-Rubin multivariate case given in https://www.tandfonline.com/doi/pdf/10.1080/10618600.1998.10474787?needAccess=true is implemented.  
- Implementation of Raftery diagnostic is based on Matlab version of coda package in http://www.spatial-econometrics.com/gibbs/  

It provides also Rcpp functions to export those implementations in R.",True,106,https://api.github.com/repos/GeomScale/volesti/pulls/106,https://github.com/GeomScale/volesti/pull/106,closed,942,7,21,27,0,7,1,0,[{'name': 'enhancement'}],2020-07-30 14:05:04+00:00,2020-08-05 14:55:06+00:00,521402.0,"6 days, 0:50:02","[{'comment_id': 463036880, 'comment_body': 'please provide some reference of the method (as you did for the R interface) and a comment on what is `frac1`, `frac2`.\r\nShould `frac1`, `frac2` have default values? Also is there any other better name, e.g. `frac_first`, `frac_last` ?', 'comment_created': datetime.datetime(2020, 7, 30, 14, 27, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 463037832, 'comment_body': 'What is this function doing exactly? What is the meaning of the returned bool ?', 'comment_created': datetime.datetime(2020, 7, 30, 14, 28, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 463039425, 'comment_body': 'here there are not frac1, frac2 and the return type is NT compared to bool above', 'comment_created': datetime.datetime(2020, 7, 30, 14, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 463040207, 'comment_body': 'another different interface: returns a pair and there are some q,r,s parameters that is unclear to understand', 'comment_created': datetime.datetime(2020, 7, 30, 14, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 465377400, 'comment_body': 'I have added comments to provide information about geweke diagnostic', 'comment_created': datetime.datetime(2020, 8, 4, 23, 2, 34, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 465377539, 'comment_body': 'I have added comments to provide information about psrf diagnostic', 'comment_created': datetime.datetime(2020, 8, 4, 23, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 465377600, 'comment_body': 'I have added comments to provide information about raftery diagnostic', 'comment_created': datetime.datetime(2020, 8, 4, 23, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}]","[{'commit_sha': '6f053e30fa6b41903e2ede0575642b7810c953c8', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9254c29d1605338127cbac14fcd8cdf3a9c079d9', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98b3a3d181205e878bd8b8df036e963654e06bda', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48646bfd9bd2cc2e15fba95f58ed5e62a10c4337', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f938d0049e2ac25f63a7b683f6dbc16f709970f', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f5b2317af40b02f8bcfb90110948c5e38dc1a3f', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17a0cddc12e41c71a9fa61d4eb1c4b1e57b46895', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a010eccd14a04ed6d29c22eda4300628d369b81', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c68fa835b0324311506058c6844340c574d888f1', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da2126d5aaba2b0e603441581a470d50e6257e38', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f31d45c52db4fefe01f7b224d057d537703ec23c', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ef3d9e95b11144a3e04b586bbd8424de2b73198', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75e6ea2d9be9202107e03f5e71d74ecd2f68063d', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97505412473f5426d52d4d298b15545efefa252d', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f922a5ee7a785e64dec3e014d767ac31699af858', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18693b67cb0266c5929ae02525387cf3ba9e3928', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeaeaea0b980add6a381201a9cd5aa96793b7bcc', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f7a6d6c350f8441800f5e157d1248dfb67e464f', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceb605d5b37474c9a1cb05464bac80632afe504c', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9043f904757905c1a645c3be637e652cb525ebfb', 'committer_username': 'TolisChal', 'committer_name': 'Apostolos Chalkis', 'committer_email': 'tolis.chal@gmail.com', 'commit_date': datetime.datetime(2017, 7, 4, 10, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd97fa97b40b37877025521cf1a6b37eeb0f62c2', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '691566f992af8fa82095ff89dea0c3829ce5e9a8', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f3340213db094535762ef52f8127ec6b89587c2', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c16b2dba90010885a12be8855f634dff40b9cd7e', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4dea52c9d1882394b1691b39f901db2ed1cec09', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5165582c5d3c7e2ba8cb42dfd516bd07ad32f189', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efe3886ef40443b621a190e0d97aedfd033949ee', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}]",,62110146,,User,,6,,1,2
465059948,Marginal diagnostics and optimizations,"This PR contains:

1. two new psrf for 1-dim distribution sampling
2. Optimizations in rounding methods and inner ball computation
3. Birkhoff polytope generator",True,108,https://api.github.com/repos/GeomScale/volesti/pulls/108,https://github.com/GeomScale/volesti/pull/108,closed,617,813,57,22,0,11,1,0,[{'name': 'enhancement'}],2020-08-08 18:20:32+00:00,2020-09-18 10:53:30+00:00,3515578.0,"40 days, 16:32:58","[{'comment_id': 482914946, 'comment_body': 'please add an empty line', 'comment_created': datetime.datetime(2020, 9, 3, 11, 44, 37, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 482915731, 'comment_body': 'Why InnerBall as input? The mentod needs an interior point', 'comment_created': datetime.datetime(2020, 9, 3, 11, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 482916552, 'comment_body': 'remove if it is not needed', 'comment_created': datetime.datetime(2020, 9, 3, 11, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 482916740, 'comment_body': 'remove it', 'comment_created': datetime.datetime(2020, 9, 3, 11, 47, 58, tzinfo=datetime.timezone.utc), 'commenter': 'TolisChal', 'type': 'User'}, {'comment_id': 482960246, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 9, 3, 13, 2, 56, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 482961586, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 9, 3, 13, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 482962117, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 9, 3, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 482962424, 'comment_body': 'Yes I have changed it. Thanks.', 'comment_created': datetime.datetime(2020, 9, 3, 13, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}, {'comment_id': 483188892, 'comment_body': 'is this working for any value of n? If not comment on it.', 'comment_created': datetime.datetime(2020, 9, 3, 18, 53, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 483189952, 'comment_body': 'indentation is wrong', 'comment_created': datetime.datetime(2020, 9, 3, 18, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vissarion', 'type': 'User'}, {'comment_id': 483676540, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 9, 4, 15, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'AlexManochis', 'type': 'User'}]","[{'commit_sha': '57208bcd6144efc0b2815224c30ddab8c21eea28', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b535ecd8d8b3e7c8640386e1e7f9fe2c3d91423e', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc343dc1e333d6bfe5f3cfaa46506f8bb2daea46', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2d9a087941192dbdf8f8ba94e913695872adb06', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6764a9e296939a49fadbc981e38ea337897a667e', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '244c9fa7944aa2251276b611d7aa29f2329de3c8', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aba1702261a30b097ba85c85cb7bd8f6e3ff47a6', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abc2cf9a14b57aba082cca649457232bd6475b9e', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22646568dde4d96735da64a801155ea714881ade', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '041c4b5748ebd5d63bc553882f593ba06dd6e73d', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b238019f83320b7bb8996341f4eb2a953b2fc9aa', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f23280aab3c8926d7d95e8e58d83a6eabab8dc0a', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdad002e5272cb08891af172dc521c07b35d001b', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd795bfa3281793739c430f30a5c7fbb85f5ae9af', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf0d82cfbbc3eae236d04cc1a55f45429c9ab917', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5600d0b35ca72e0e979ee5e55c7b152eb02de6ed', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2cef16dc019f46e7f784db9332210c8aab7eff6', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f21e5dd64a77c5a3d8f4ba531a3284ed414d1d99', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c5648f292c96c6f726076efe262ac3b242f1168', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a95092c38e7731a64d642ea5a06f4ca3e3af65dc', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '866c63b277323732b23567d90b121e59180ce991', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c070fcb0d3ab8fcd7c4927116dc9d39a187145ca', 'committer_username': 'AlexManochis', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 12, 15, 40, tzinfo=datetime.timezone.utc)}]",,62110146,,User,,6,,1,2

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
55501902,volesti,GeomScale/volesti,C++,113,143,12,31,780,19,12,3,"[{'id': 1126381253, 'number': 253, 'closed': datetime.datetime(2022, 11, 18, 9, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 17, 18, 14, 40, tzinfo=datetime.timezone.utc), 'time_taken': 55100.0, 'time_delta': '15:18:20', 'additions': 246, 'deletions': 122, 'state': 'closed'}, {'id': 716986758, 'number': 173, 'closed': datetime.datetime(2022, 2, 21, 20, 19, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 20, 40, 5, tzinfo=datetime.timezone.utc), 'time_taken': 15982750.0, 'time_delta': '184 days, 23:39:10', 'additions': 881, 'deletions': 132, 'state': 'closed'}, {'id': 465059948, 'number': 108, 'closed': datetime.datetime(2020, 9, 18, 10, 53, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 18, 20, 32, tzinfo=datetime.timezone.utc), 'time_taken': 3515578.0, 'time_delta': '40 days, 16:32:58', 'additions': 617, 'deletions': 813, 'state': 'closed'}, {'id': 459213584, 'number': 106, 'closed': datetime.datetime(2020, 8, 5, 14, 55, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 14, 5, 4, tzinfo=datetime.timezone.utc), 'time_taken': 521402.0, 'time_delta': '6 days, 0:50:02', 'additions': 942, 'deletions': 7, 'state': 'closed'}, {'id': 450383651, 'number': 96, 'closed': datetime.datetime(2020, 7, 30, 9, 53, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 17, 50, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1180982.0, 'time_delta': '13 days, 16:03:02', 'additions': 1223, 'deletions': 436, 'state': 'closed'}, {'id': 438168397, 'number': 92, 'closed': datetime.datetime(2020, 7, 17, 9, 8, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 20, 45, 17, tzinfo=datetime.timezone.utc), 'time_taken': 2118211.0, 'time_delta': '24 days, 12:23:31', 'additions': 920, 'deletions': 180, 'state': 'closed'}, {'id': 435438788, 'number': 88, 'closed': datetime.datetime(2020, 9, 18, 14, 21, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 20, 4, 23, tzinfo=datetime.timezone.utc), 'time_taken': 8101041.0, 'time_delta': '93 days, 18:17:21', 'additions': 1005, 'deletions': 25, 'state': 'closed'}]"
