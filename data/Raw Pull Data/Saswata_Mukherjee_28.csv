pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1752151742,Bump github.com/prometheus/client_golang from 1.17.0 to 1.19.0,"Bumps [github.com/prometheus/client_golang](https://github.com/prometheus/client_golang) from 1.17.0 to 1.19.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/prometheus/client_golang/releases"">github.com/prometheus/client_golang's releases</a>.</em></p>
<blockquote>
<h2>v1.19.0</h2>
<h2>What's Changed</h2>
<p>The module <code>prometheus/common v0.48.0</code> introduced a bug when used together with client_golang. If your project uses client_golang and you want to use <code>prometheus/common v0.48.0</code> or higher, please update client_golang to v1.19.0.</p>
<ul>
<li>[CHANGE] Minimum required go version is now 1.20 (we also test client_golang against new 1.22 version). <a href=""https://redirect.github.com/prometheus/client_golang/issues/1445"">#1445</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1449"">#1449</a></li>
<li>[FEATURE] collectors: Add version collector. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1422"">#1422</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1427"">#1427</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/michurin""><code>@​michurin</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1423"">prometheus/client_golang#1423</a></li>
<li><a href=""https://github.com/kavu""><code>@​kavu</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1445"">prometheus/client_golang#1445</a></li>
<li><a href=""https://github.com/ywwg""><code>@​ywwg</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1448"">prometheus/client_golang#1448</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/prometheus/client_golang/compare/v1.18.0...v1.19.0"">https://github.com/prometheus/client_golang/compare/v1.18.0...v1.19.0</a></p>
<h2>v1.18.0</h2>
<h2>What's Changed</h2>
<ul>
<li>[FEATURE] promlint: Allow creation of custom metric validations. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1311"">#1311</a></li>
<li>[FEATURE] Go programs using client_golang can be built in wasip1 OS. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1350"">#1350</a></li>
<li>[BUGFIX] histograms: Add timer to reset ASAP after bucket limiting has happened. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1367"">#1367</a></li>
<li>[BUGFIX] testutil: Fix comparison of metrics with empty Help strings. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1378"">#1378</a></li>
<li>[ENHANCEMENT] Improved performance of <code>MetricVec.WithLabelValues(...)</code>. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1360"">#1360</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/srenatus""><code>@​srenatus</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1350"">prometheus/client_golang#1350</a></li>
<li><a href=""https://github.com/jadolg""><code>@​jadolg</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1342"">prometheus/client_golang#1342</a></li>
<li><a href=""https://github.com/manas-rust""><code>@​manas-rust</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1383"">prometheus/client_golang#1383</a></li>
<li><a href=""https://github.com/bluekeyes""><code>@​bluekeyes</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1378"">prometheus/client_golang#1378</a></li>
<li><a href=""https://github.com/tsipo""><code>@​tsipo</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1387"">prometheus/client_golang#1387</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/prometheus/client_golang/compare/v1.17.0...v1.18.0"">https://github.com/prometheus/client_golang/compare/v1.17.0...v1.18.0</a></p>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/prometheus/client_golang/blob/v1.19.0/CHANGELOG.md"">github.com/prometheus/client_golang's changelog</a>.</em></p>
<blockquote>
<h2>1.19.0 / 2023-02-27</h2>
<p>The module <code>prometheus/common v0.48.0</code> introduced a bug when used together with client_golang. If your project uses client_golang and you want to use <code>prometheus/common v0.48.0</code> or higher, please update client_golang to v1.19.0.</p>
<ul>
<li>[CHANGE] Minimum required go version is now 1.20 (we also test client_golang against new 1.22 version). <a href=""https://redirect.github.com/prometheus/client_golang/issues/1445"">#1445</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1449"">#1449</a></li>
<li>[FEATURE] collectors: Add version collector. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1422"">#1422</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1427"">#1427</a></li>
</ul>
<h2>1.18.0 / 2023-12-22</h2>
<ul>
<li>[FEATURE] promlint: Allow creation of custom metric validations. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1311"">#1311</a></li>
<li>[FEATURE] Go programs using client_golang can be built in wasip1 OS. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1350"">#1350</a></li>
<li>[BUGFIX] histograms: Add timer to reset ASAP after bucket limiting has happened. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1367"">#1367</a></li>
<li>[BUGFIX] testutil: Fix comparison of metrics with empty Help strings. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1378"">#1378</a></li>
<li>[ENHANCEMENT] Improved performance of <code>MetricVec.WithLabelValues(...)</code>. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1360"">#1360</a></li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/prometheus/client_golang/commit/77d4003c72f054ac435df1223deac17b1f8858ea""><code>77d4003</code></a> Add 1.19.0 changelog (<a href=""https://redirect.github.com/prometheus/client_golang/issues/1451"">#1451</a>)</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/14259fa70cfb69f1262f69fdfe58ed5e6318d441""><code>14259fa</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1448"">#1448</a> from ywwg/owilliams/content-negotiation</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/6d039205b8decc22868f43b0bd0da01b376a36aa""><code>6d03920</code></a> deps: bump prometheus/common version</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/353395b3b67b2bee0a219950bf5570779d74a392""><code>353395b</code></a> Remove support for go 1.19 (<a href=""https://redirect.github.com/prometheus/client_golang/issues/1449"">#1449</a>)</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/9dd5d2a64af1e9bd0cbff0516ded6e51d25209bf""><code>9dd5d2a</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1445"">#1445</a> from kavu/add_go122_metrics_test</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/c906a5e91a4604bd55fb8e26a54b5ba64a81c678""><code>c906a5e</code></a> Add support for Go 1.22</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/7ac90362b02729a65109b33d172bafb65d7dab50""><code>7ac9036</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1440"">#1440</a> from prometheus/dependabot/github_actions/github-act...</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/8c7e30ff0dae76cb87061a37bbccc6c8789196fa""><code>8c7e30f</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1441"">#1441</a> from prometheus/dependabot/go_modules/tutorial/whats...</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/08769f8257358282749a5180c9dc845f6e065640""><code>08769f8</code></a> Bump github.com/prometheus/common in /tutorial/whatsup</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/83d5940383d55377072d10a70316a7e24c5bb47c""><code>83d5940</code></a> Bump the github-actions group with 2 updates</li>
<li>Additional commits viewable in <a href=""https://github.com/prometheus/client_golang/compare/v1.17.0...v1.19.0"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github.com/prometheus/client_golang&package-manager=go_modules&previous-version=1.17.0&new-version=1.19.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>",True,152,https://api.github.com/repos/bwplotka/mdox/pulls/152,https://github.com/bwplotka/mdox/pull/152,closed,24,27,2,1,0,0,1,0,[{'name': 'dependencies'}],2024-03-01 17:51:00+00:00,2024-07-03 11:28:57+00:00,10690677.0,"123 days, 17:37:57",[],"[{'commit_sha': '38fdfececd926e2e4d74f5da380fed7de0dc89a9', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}]",,49699333,,Bot,,0,,0,0
1341595068,Update goimports,Update bingo tool goimports.,True,114,https://api.github.com/repos/bwplotka/mdox/pulls/114,https://github.com/bwplotka/mdox/pull/114,closed,37,5,4,1,0,0,0,0,[],2023-05-08 06:10:05+00:00,2023-05-08 06:20:29+00:00,624.0,0:10:24,[],"[{'commit_sha': '271982f66e4c8b3b3e8f217738ad61a93dfa310c', 'committer_username': 'SuperQ', 'committer_name': 'Ben Kochie', 'committer_email': 'superq@gmail.com', 'commit_date': datetime.datetime(2012, 1, 11, 5, 18, 28, tzinfo=datetime.timezone.utc)}]",Ben Kochie,1320667,superq@gmail.com,User,,169,,9,413
1341041512,Update build,"* Enable dependabot.
* Update Go to 1.20.
* Update bingo.
* Update golangci-lint.
* Remove misspell (handled by golangci-lint).",True,108,https://api.github.com/repos/bwplotka/mdox/pulls/108,https://github.com/bwplotka/mdox/pull/108,closed,494,140,27,5,3,3,0,0,[],2023-05-07 08:22:40+00:00,2023-05-08 05:35:56+00:00,76396.0,21:13:16,"[{'comment_id': 1187028314, 'comment_body': 'Thanks! This test is meant to check if we are including filename, line number and the faulty link in the error, so maybe we can do something like this? 🙂  \r\n```suggestion\r\n\t\ttestutil.Assert(t, strings.Contains(err.Error(), fmt.Sprintf(""%v:1: \\""https://docs.gfoogle.com/drawings/d/e/2PACX-1vTBFK_cGMbxFpYcv/pub?w=960&h=720\\"" not accessible even after retry; status code 0"",relDirPath+filePath)))\r\n\t\ttestutil.Assert(t, strings.Contains(err.Error(), fmt.Sprintf(""%v:1: \\""https://bwplotka.dev/does-not-exists\\"" not accessible; status code 404: Not Found"", relDirPath+filePath)))\r\n\t\t\r\n```', 'comment_created': datetime.datetime(2023, 5, 8, 5, 9, 19, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 1187030619, 'comment_body': ""I'll commit this and merge!"", 'comment_created': datetime.datetime(2023, 5, 8, 5, 14, 59, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 1187056880, 'comment_body': 'Ahh, thanks, I thought the test was just for the 404 as the name suggested.', 'comment_created': datetime.datetime(2023, 5, 8, 6, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SuperQ', 'type': 'User'}]","[{'commit_sha': 'be474a2b2a85c38928604f11891ae890428a9e0d', 'committer_username': 'SuperQ', 'committer_name': 'Ben Kochie', 'committer_email': 'superq@gmail.com', 'commit_date': datetime.datetime(2012, 1, 11, 5, 18, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '966a2bafefbd55c8e53177ba513e2cc2c08845ee', 'committer_username': 'SuperQ', 'committer_name': 'Ben Kochie', 'committer_email': 'superq@gmail.com', 'commit_date': datetime.datetime(2012, 1, 11, 5, 18, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '976a886519e8e5508593415e4917da3f8836906b', 'committer_username': 'SuperQ', 'committer_name': 'Ben Kochie', 'committer_email': 'superq@gmail.com', 'commit_date': datetime.datetime(2012, 1, 11, 5, 18, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a3d9dc0a3950049c3dc95baf4a58b0177ab8c3e', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef7be757bf62f9bffd38a0799cba82ff88f99745', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}]",Ben Kochie,1320667,superq@gmail.com,User,,169,,9,413
993293880,Try to avoid intermittent errors when checking links,"Related to #22. 

- Stop relying on the `http.DefaultHTTPTransport`: it's effectively global state. It can be 
  modified by any other package. It has different default configuration depending on the 
  Go compiler version and we cannot trust that these defaults are good for us.

- Considering this is a tool often ran in resource constrained
  environments, like Github Actions, the HTTP client timeout was bumped
  to 30 seconds.

- Colly was configured with a depth of 1, to avoid crawling too much
  information from the websites

- The parallelism configuration of `colly` has been brought down from 100
  to 10. This setting means that at most 10 requests will be sent in
  parallel for the matching domains, instead of 100. This way we are 
  more friendly to the servers and hopefully they will be happier with us too, 
  returning more responses with 200 status code faster.

- Added a random delay of up to 1 second to create new requests to
  matching domains, again to be more friendly with the servers, etc,  etc.

## How did I test this?

I compiled a binary and ran the `make check-docs` target of the https://github.com/thanos-io/thanos project a couple of times without my changes and with them.

Without the changes it's easy to reproduce the failures indicated by #22. 

With the changes, I couldn't reproduce them.  

## How does it affect run time?

Locals runs were taking:

* Without changes: Failed local runs that failed were taking 2m48s. Successful local runs could be as fast as 1m31s.
* With changes
  * With 1s random delay: 3m20s.
  * Without random delay: 1m30s.

There are a lot of variables involved though, it isn't a reliable measurement. 

I think I could be able to get rid of the random delay to make this faster while still avoiding the intermittent failures, if that's desirable. WDYT, @bwplotka? ",True,86,https://api.github.com/repos/bwplotka/mdox/pulls/86,https://github.com/bwplotka/mdox/pull/86,closed,80,25,4,10,1,15,0,0,[],2022-07-11 16:09:02+00:00,2022-07-12 15:30:32+00:00,84090.0,23:21:30,"[{'comment_id': 918881464, 'comment_body': '> The parallelism configuration of colly has been brought down from 100\r\nto 10. This setting means that at most 10 requests will be sent in\r\nparallel for the matching domains, instead of 100. This way we are\r\nmore friendly to the servers and hopefully they will be happier with us too,\r\nreturning more responses with 200 status code faster.\r\n\r\nHope based development 🙈 \r\n\r\nI think this makes sense generally, but I wonder if it makes sense to perhaps expose those options so we can tune it to every environment. Right now we are bit guessing with programmatic change that takes time to modify and release.\r\n\r\n', 'comment_created': datetime.datetime(2022, 7, 12, 11, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 918882114, 'comment_body': 'It might take forever to validate things 🤔 Again, useful to expose an option?', 'comment_created': datetime.datetime(2022, 7, 12, 11, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 918882821, 'comment_body': ""This is great, but also before tuning we should probably expose the options we want to tune to outside of binary. The problem is that running it locally almost never reproduces what's will happen on GH actions."", 'comment_created': datetime.datetime(2022, 7, 12, 11, 58, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 918891155, 'comment_body': 'So setting `colly.MaxDepth` as 1 here has no effect for mdox. colly has the ability to scrape links from websites recursively, but mdox only uses the colly Collector.Visit [method](https://github.com/bwplotka/mdox/blob/main/pkg/mdformatter/linktransformer/validator.go#L55), which by [default always has a depth of 1](https://github.com/gocolly/colly/blob/master/colly.go#L493). ', 'comment_created': datetime.datetime(2022, 7, 12, 12, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 918898033, 'comment_body': 'mdox already has a [parameter](https://github.com/bwplotka/mdox/blob/main/pkg/mdformatter/linktransformer/link.go#L240) in config which allows users to customize this, as different users will likely have different types of docs (how many links/type of links). 🙂 \r\n\r\nWe use this [parameter](https://github.com/prometheus-operator/prometheus-operator/blob/main/.mdox.validate.yaml#L2) in prometheus-operator too.', 'comment_created': datetime.datetime(2022, 7, 12, 12, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 918983937, 'comment_body': ""We can only hope when it comes to checking third-party links (on remote servers we don't own) from third-party servers (Github Actions runners), sending many concurrent requests . 😂 \r\n\r\nI'll try to make some important parameters configurable via the command line 👍 "", 'comment_created': datetime.datetime(2022, 7, 12, 13, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 918987117, 'comment_body': ""It doesn't always take forever to validate things. The delays are a random number between 0 and 1s, not always 1s. I have some runs that are just 1 minute slower than without the random delay, but again, it's hard to measure and say with confidence why a run was slow (was my network slower this time? was somebody else's server slower? which one? how slow?)."", 'comment_created': datetime.datetime(2022, 7, 12, 13, 41, 41, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 918992761, 'comment_body': ""@saswatamcode if the user doesn't provide a timeout, we would end up relying on the default timeout of Colly: 10 seconds. Are we fine with that? Or do we prefer to have a higher default timeout? "", 'comment_created': datetime.datetime(2022, 7, 12, 13, 46, 29, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 918997590, 'comment_body': 'Which configuration from the transport do you think would be valuable to expose as configuration, @bwplotka? I think the `MaxIdleConns` could be useful. But the other ones all seem like too much/too deep.', 'comment_created': datetime.datetime(2022, 7, 12, 13, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 919012978, 'comment_body': ""Actually I don't think tuning `MaxIdleConns` to different values will be useful. But I found out `MaxConnsPerHost` (by default 2), which can be useful. For example, Colly might be trying to concurrently send 10 requests to Github, but the transport will only hold 2 connections to Github."", 'comment_created': datetime.datetime(2022, 7, 12, 14, 2, 43, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 919029250, 'comment_body': 'Better, I am moving them to the config file, like the timeout.', 'comment_created': datetime.datetime(2022, 7, 12, 14, 16, 48, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 919067385, 'comment_body': 'Fixed in https://github.com/bwplotka/mdox/pull/86/commits/a02848d8d61d5cacc7455c3960df4a90387aa628', 'comment_created': datetime.datetime(2022, 7, 12, 14, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 919067478, 'comment_body': 'Fixed in https://github.com/bwplotka/mdox/pull/86/commits/a02848d8d61d5cacc7455c3960df4a90387aa628', 'comment_created': datetime.datetime(2022, 7, 12, 14, 49, 4, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 919068004, 'comment_body': 'Fixed in https://github.com/bwplotka/mdox/pull/86/commits/23f1deca397085457bb4616ab93120a1175d6125.', 'comment_created': datetime.datetime(2022, 7, 12, 14, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 919068283, 'comment_body': 'Added some parameters in the config file via https://github.com/bwplotka/mdox/pull/86/commits/23f1deca397085457bb4616ab93120a1175d6125.', 'comment_created': datetime.datetime(2022, 7, 12, 14, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}]","[{'commit_sha': '1082ee46aa33fea121cd1ab4245ab10c64c7dcf9', 'committer_username': 'douglascamata', 'committer_name': 'Douglas Camata', 'committer_email': None, 'commit_date': datetime.datetime(2009, 11, 28, 3, 2, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd30a7d306afb29503e0efeac1ca7be3b93770900', 'committer_username': 'douglascamata', 'committer_name': 'Douglas Camata', 'committer_email': None, 'commit_date': datetime.datetime(2009, 11, 28, 3, 2, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ec34fc8ef4c948b1f6649aba4371928d1c54c23', 'committer_username': 'douglascamata', 'committer_name': 'Douglas Camata', 'committer_email': None, 'commit_date': datetime.datetime(2009, 11, 28, 3, 2, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a02848d8d61d5cacc7455c3960df4a90387aa628', 'committer_username': 'douglascamata', 'committer_name': 'Douglas Camata', 'committer_email': None, 'commit_date': datetime.datetime(2009, 11, 28, 3, 2, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23f1deca397085457bb4616ab93120a1175d6125', 'committer_username': 'douglascamata', 'committer_name': 'Douglas Camata', 'committer_email': None, 'commit_date': datetime.datetime(2009, 11, 28, 3, 2, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cf8facf7233c91374acdf52711f10f56eab2e59', 'committer_username': 'douglascamata', 'committer_name': 'Douglas Camata', 'committer_email': None, 'commit_date': datetime.datetime(2009, 11, 28, 3, 2, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e2940e93feeec58dbb24512ccfcad824a3c8a3b', 'committer_username': 'douglascamata', 'committer_name': 'Douglas Camata', 'committer_email': None, 'commit_date': datetime.datetime(2009, 11, 28, 3, 2, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b4b3c81af604e688ad1f6f4b23ab60e449383e3', 'committer_username': 'douglascamata', 'committer_name': 'Douglas Camata', 'committer_email': None, 'commit_date': datetime.datetime(2009, 11, 28, 3, 2, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd58f181738a6de757e43ecbaa9fa50b5a1c6b3f5', 'committer_username': 'douglascamata', 'committer_name': 'Douglas Camata', 'committer_email': None, 'commit_date': datetime.datetime(2009, 11, 28, 3, 2, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2f9cf3cc9a0c1d5107dfdb35d7e7fbe8620abec', 'committer_username': 'douglascamata', 'committer_name': 'Douglas Camata', 'committer_email': None, 'commit_date': datetime.datetime(2009, 11, 28, 3, 2, 49, tzinfo=datetime.timezone.utc)}]",Douglas Camata,159076,,User,,95,,228,210
1800762291,fix typos,"I started looking at your code and I noticed a few typos.

I was about to open a simple PR, then I found acronyms incorrectly used, so I fixed them.",True,158,https://api.github.com/repos/bwplotka/mdox/pulls/158,https://github.com/bwplotka/mdox/pull/158,closed,14,14,7,2,0,2,0,0,[],2024-04-01 16:04:43+00:00,2024-07-03 11:28:07+00:00,8018604.0,"92 days, 19:23:24","[{'comment_id': 1664037495, 'comment_body': ""```suggestion\r\n\t// '\\p{L}\\p{N}\\p{M}' is the unicode equivalent of '\\w', https://www.regular-expressions.info/unicode.html.\r\n```\r\n\r\nThis one is correct honeslty"", 'comment_created': datetime.datetime(2024, 7, 3, 11, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 1664037925, 'comment_body': 'but not a big deal', 'comment_created': datetime.datetime(2024, 7, 3, 11, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}]","[{'commit_sha': '2b63b4bf464dba4dac95875aa0acd18e36d34c0e', 'committer_username': 'ccoVeille', 'committer_name': 'ccoVeille', 'committer_email': None, 'commit_date': datetime.datetime(2013, 3, 15, 14, 59, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa8885094237b985b3d1e9a28a9e1252eb85351', 'committer_username': 'ccoVeille', 'committer_name': 'ccoVeille', 'committer_email': None, 'commit_date': datetime.datetime(2013, 3, 15, 14, 59, 49, tzinfo=datetime.timezone.utc)}]",ccoVeille,3875889,,User,,102,,102,51
1800762291,fix typos,"I started looking at your code and I noticed a few typos.

I was about to open a simple PR, then I found acronyms incorrectly used, so I fixed them.",True,158,https://api.github.com/repos/bwplotka/mdox/pulls/158,https://github.com/bwplotka/mdox/pull/158,closed,14,14,7,2,0,2,0,0,[],2024-04-01 16:04:43+00:00,2024-07-03 11:28:07+00:00,8018604.0,"92 days, 19:23:24","[{'comment_id': 1664037495, 'comment_body': ""```suggestion\r\n\t// '\\p{L}\\p{N}\\p{M}' is the unicode equivalent of '\\w', https://www.regular-expressions.info/unicode.html.\r\n```\r\n\r\nThis one is correct honeslty"", 'comment_created': datetime.datetime(2024, 7, 3, 11, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 1664037925, 'comment_body': 'but not a big deal', 'comment_created': datetime.datetime(2024, 7, 3, 11, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}]","[{'commit_sha': '2b63b4bf464dba4dac95875aa0acd18e36d34c0e', 'committer_username': 'ccoVeille', 'committer_name': 'ccoVeille', 'committer_email': None, 'commit_date': datetime.datetime(2013, 3, 15, 14, 59, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa8885094237b985b3d1e9a28a9e1252eb85351', 'committer_username': 'ccoVeille', 'committer_name': 'ccoVeille', 'committer_email': None, 'commit_date': datetime.datetime(2013, 3, 15, 14, 59, 49, tzinfo=datetime.timezone.utc)}]",ccoVeille,3875889,,User,,102,,102,51
678498681,Add link caching using SQLite,"This PR adds link caching using a local SQLite file, `.mdoxcache` which is suitable for GitHub Actions. It introduces the following:

Adds following fields to `links.validate.config`:
- `cacheType`:  Specifies type of cache. Can be set to 'SQLite' or 'None'. 'SQLite' creates a database in `.mdoxcache`. 'None' or setting it to empty will ensure no `.mdoxcache` file is created. Will throw error if set to anything else.
- `cacheValidity` which specifies duration till which link in the cache database is valid. Default is `120h` or 5 days.

Also adds following flag in case cache needs to be cleared but there is no filesystem access:
- `--cache.clear` which instructs mdox to drop the entire cache database and start afresh.
",True,54,https://api.github.com/repos/bwplotka/mdox/pulls/54,https://github.com/bwplotka/mdox/pull/54,closed,364,33,11,11,9,62,0,1,[],2021-06-27 11:19:31+00:00,2022-07-13 11:03:58+00:00,32917467.0,"380 days, 23:44:27","[{'comment_id': 659680735, 'comment_body': 'I think this is link feature, so why not putting those options inside `links.validate.config`? (: ', 'comment_created': datetime.datetime(2021, 6, 28, 10, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659681173, 'comment_body': 'No need -> we can just remove file, right? ', 'comment_created': datetime.datetime(2021, 6, 28, 10, 51, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659682323, 'comment_body': '```suggestion\r\n\t\tif err = database.Ping(); err != nil \r\n```', 'comment_created': datetime.datetime(2021, 6, 28, 10, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659682824, 'comment_body': 'wow I did not see SQL for long time... ❤️ ', 'comment_created': datetime.datetime(2021, 6, 28, 10, 53, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659684285, 'comment_body': 'Accept me, I HAVE to endorse you for SQL now XD\r\n\r\n![image](https://user-images.githubusercontent.com/6950331/123625611-35493a80-d810-11eb-871a-35b257b179b6.png)\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 10, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659684594, 'comment_body': 'do you really neeed `err` variable?', 'comment_created': datetime.datetime(2021, 6, 28, 10, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659684742, 'comment_body': '```suggestion\r\n\tif err := s.DeleteRequest(requestID); err != nil {\r\n\t\treturn err\r\n\t}\r\n```', 'comment_created': datetime.datetime(2021, 6, 28, 10, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659685383, 'comment_body': '```suggestion\r\n\tif err = row.Scan(&timestamp); err != nil {\r\n```', 'comment_created': datetime.datetime(2021, 6, 28, 10, 57, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659685863, 'comment_body': ""I don't understand why we operate on requests IDs not on... links? Is it some hashing method?"", 'comment_created': datetime.datetime(2021, 6, 28, 10, 58, 47, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659687832, 'comment_body': 'I would not assume the usage. Focus on Storage API. What would you expect from `Visited`. I would only expect... No idea, `visited` is the wrong name even as it suggests a bool return if something was visited. If that means just to `visit` something then we should probably bump the timestamp, nothing else, no?', 'comment_created': datetime.datetime(2021, 6, 28, 11, 1, 54, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659688432, 'comment_body': '```suggestion\r\n\treturn (!timestamp.IsZero() && ime.Now().UTC().Sub(timestamp) <= s.Validity), nil\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 6, 28, 11, 2, 43, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659689705, 'comment_body': 'OMG this is quite annoying, can we add an issue on Colly to propose a different API?\r\n', 'comment_created': datetime.datetime(2021, 6, 28, 11, 4, 54, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659690171, 'comment_body': ""Let's add that to separate method, ideally on storage side? (hashing request).\r\n\r\nAre you sure it's the same as colly hash. What if they change that next version (quite prone to errro code)"", 'comment_created': datetime.datetime(2021, 6, 28, 11, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659690819, 'comment_body': ""I wonder if it makes sense to use their interface if we have to do all those things manually.. Wouldn't be better to enhance our storage with API like error and store the status code etc too? Knowing fast that something is 404 is also coachable, no? (with maybe different validity)"", 'comment_created': datetime.datetime(2021, 6, 28, 11, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 659701480, 'comment_body': 'Sure this can be done! 🙂', 'comment_created': datetime.datetime(2021, 6, 28, 11, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 659702381, 'comment_body': 'Yes locally, but I guess we cannot clear GitHub Actions cache yet since this is open: https://github.com/actions/cache/issues/2. So flag might be useful if we want to delete cache immediately from GH action and not wait till GitHub refreshes on its own. 🙂', 'comment_created': datetime.datetime(2021, 6, 28, 11, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 659702534, 'comment_body': 'I guess we can remove!', 'comment_created': datetime.datetime(2021, 6, 28, 11, 26, 49, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 659703609, 'comment_body': 'This is how colly does it (by hashing URLs for get requests). Seems weird to me too but cannot change as we need to conform to [Storage interface](https://github.com/gocolly/colly/blob/master/storage/storage.go#L30). They hash it [here](https://github.com/gocolly/colly/blob/master/colly.go#L735). 🙂 ', 'comment_created': datetime.datetime(2021, 6, 28, 11, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 659704106, 'comment_body': 'Yes, `Visited` seems like the wrong name for this but I checked this [here](https://github.com/gocolly/colly/blob/master/colly.go#L755) and [here](https://github.com/velebak/colly-sqlite3-storage/blob/master/colly/sqlite3/sqlite3.go#L111), so seems like it actually inserts it into storage. So had to do it this way.', 'comment_created': datetime.datetime(2021, 6, 28, 11, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 659704235, 'comment_body': 'Yes, I plan to add a few issues. 🙂', 'comment_created': datetime.datetime(2021, 6, 28, 11, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 659704406, 'comment_body': 'I wanted to do it on storage side too, but have to conform colly storage interface so that we can pass that in.', 'comment_created': datetime.datetime(2021, 6, 28, 11, 29, 56, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 659704485, 'comment_body': 'Yup. Was kind of thinking about the same thing, maybe would be better to just do this on our own and not pass any special storage to Colly. 🙂', 'comment_created': datetime.datetime(2021, 6, 28, 11, 30, 4, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 660649459, 'comment_body': 'Done \r\n![image](https://user-images.githubusercontent.com/6950331/123811306-0b187b00-d8eb-11eb-90f4-ff0d2278fd7e.png)\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 29, 14, 2, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 660702613, 'comment_body': 'Thank you!! ❤️', 'comment_created': datetime.datetime(2021, 6, 29, 14, 57, 28, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 669359708, 'comment_body': ""It would be amazing to get some feedback to their project (just mention, don't expect anything)."", 'comment_created': datetime.datetime(2021, 7, 14, 7, 26, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 685908863, 'comment_body': 'Makes sense nice! Do you mind adding this argument to the flag description?', 'comment_created': datetime.datetime(2021, 8, 10, 10, 52, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 718663897, 'comment_body': '```suggestion\r\n.mdoxcache\r\n```', 'comment_created': datetime.datetime(2021, 9, 29, 15, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 718684803, 'comment_body': ""Again, let's avoid boolean flags. What if we have another cache soon with different type? I believe there should be `cacheType` or something (: e.g `SQlite` and `None`"", 'comment_created': datetime.datetime(2021, 9, 29, 16, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 718697832, 'comment_body': 'Sure!', 'comment_created': datetime.datetime(2021, 9, 29, 16, 36, 10, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 718697913, 'comment_body': 'Sure! Will implement this. 🙂', 'comment_created': datetime.datetime(2021, 9, 29, 16, 36, 16, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 718698330, 'comment_body': 'Sure!', 'comment_created': datetime.datetime(2021, 9, 29, 16, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 781237436, 'comment_body': 'Why not directly create a `const` with default `time.Duration`? It would save us from extra parsing here :blush: ', 'comment_created': datetime.datetime(2022, 1, 10, 14, 26, 47, tzinfo=datetime.timezone.utc), 'commenter': 'matej-g', 'type': 'User'}, {'comment_id': 781248307, 'comment_body': ""Do we need the cache type check? :thinking: As long as `storage` is not `nil`, it should not matter what type we're initializing, right?"", 'comment_created': datetime.datetime(2022, 1, 10, 14, 39, 12, tzinfo=datetime.timezone.utc), 'commenter': 'matej-g', 'type': 'User'}, {'comment_id': 781255672, 'comment_body': ""I'm wondering, if the database exists, do we need to go through the other steps below? Could we simply check if the database and table exists (optionally, truncate the table if `s.ClearCache` true) and if yes, exist, otherwise create new table? Would that flow make sense?"", 'comment_created': datetime.datetime(2022, 1, 10, 14, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'matej-g', 'type': 'User'}, {'comment_id': 781322414, 'comment_body': 'Will do that! ', 'comment_created': datetime.datetime(2022, 1, 10, 16, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 781322507, 'comment_body': 'Yes, we do here! We basically initialize `storage` in [main.go](https://github.com/saswatamcode/mdox/blob/cache/main.go#L256) due to the clearCache flag. But we check the type and init only if it is of type `SQLite`. Removing it would mean that database gets created here regardless and the [`check valid link with no cache`](https://github.com/saswatamcode/mdox/blob/cache/pkg/mdformatter/linktransformer/link_test.go#L397) test will fail! 🙂\r\n\r\nBut I wonder if we need to check if `storage` is nil? 🤔', 'comment_created': datetime.datetime(2022, 1, 10, 16, 0, 10, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 781322622, 'comment_body': 'Let me try that out and get back! 🙂', 'comment_created': datetime.datetime(2022, 1, 10, 16, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 782277069, 'comment_body': ""Hm then I would maybe expect `storage` to still be `nil`, after all if we do not want to initialize storage why would it not be `nil`? I think it's detail, it just feels like it could be simplified a bit, but it's more of a nit."", 'comment_created': datetime.datetime(2022, 1, 11, 15, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'matej-g', 'type': 'User'}, {'comment_id': 811865064, 'comment_body': ""I don't know from this flag desription if mdox will rebuild cache in the same run or will stop?"", 'comment_created': datetime.datetime(2022, 2, 22, 11, 52, 56, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 811867753, 'comment_body': ""Why someone would write init with `dbHandle` populated already? Shouldn't we error with some programmatic error?"", 'comment_created': datetime.datetime(2022, 2, 22, 11, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 811870455, 'comment_body': '```suggestion\r\n\t// CacheURL method will only be called if validity expires for a URL or in case of a new URL.\r\n```', 'comment_created': datetime.datetime(2022, 2, 22, 11, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 811872239, 'comment_body': 'still not done?', 'comment_created': datetime.datetime(2022, 2, 22, 12, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 811872653, 'comment_body': 'still to be done?', 'comment_created': datetime.datetime(2022, 2, 22, 12, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 811874298, 'comment_body': 'This looks like a code smell.\r\n\r\nWe pass storage here for some composability, but we kind of  use it like struct (setting Field directly) despite doing  `Init`  below. Can we add `Validity` parameter to `Init` then?', 'comment_created': datetime.datetime(2022, 2, 22, 12, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 811874563, 'comment_body': '```suggestion\r\n\t\t\tif err := v.storage.CacheURL(response.Ctx.Get(originalURLKey)); err != nil {\r\n```', 'comment_created': datetime.datetime(2022, 2, 22, 12, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 811875496, 'comment_body': 'I would add some jitter to it (and jitter might be parameter). The reason is that we will have timeouts still if we will expire all items in one go.', 'comment_created': datetime.datetime(2022, 2, 22, 12, 6, 23, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 811885293, 'comment_body': 'Yes, needs to be done!', 'comment_created': datetime.datetime(2022, 2, 22, 12, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 811885349, 'comment_body': 'We can iterate on this in separate PR!', 'comment_created': datetime.datetime(2022, 2, 22, 12, 18, 46, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 811885415, 'comment_body': 'Will update!', 'comment_created': datetime.datetime(2022, 2, 22, 12, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 811885692, 'comment_body': 'Will try to restructure this!', 'comment_created': datetime.datetime(2022, 2, 22, 12, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 811885740, 'comment_body': 'Will do!', 'comment_created': datetime.datetime(2022, 2, 22, 12, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'saswatamcode', 'type': 'User'}, {'comment_id': 918857398, 'comment_body': 'Sqlite3Storage', 'comment_created': datetime.datetime(2022, 7, 12, 11, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 918860215, 'comment_body': ""If we want jitter, let's randomize it from [0 -> Validity] (: "", 'comment_created': datetime.datetime(2022, 7, 12, 11, 30, 15, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 918860935, 'comment_body': 'Potentially deserves a struct?', 'comment_created': datetime.datetime(2022, 7, 12, 11, 31, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 919866488, 'comment_body': ""Could this be broken up into a few variables to make it easier to understand? There's too many things happening in a single line of code. 😅 "", 'comment_created': datetime.datetime(2022, 7, 13, 9, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 919868394, 'comment_body': 'Better to convert this duration into something more readable: \r\n```suggestion\r\n\tdefaultValidity = 120 * time.Hour\r\n```', 'comment_created': datetime.datetime(2022, 7, 13, 9, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 919873351, 'comment_body': 'Another tip, `time.Now().UTC().Sub(timestamp)` is the same as `time.Since(timestamp)`.\r\n\r\nSee https://goplay.tools/snippet/FPhJ3s8aeZf', 'comment_created': datetime.datetime(2022, 7, 13, 9, 44, 36, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 919878890, 'comment_body': ""Could even create a separate constant for the duration of a day (there's no `time.Day`) to make it better."", 'comment_created': datetime.datetime(2022, 7, 13, 9, 50, 21, tzinfo=datetime.timezone.utc), 'commenter': 'douglascamata', 'type': 'User'}, {'comment_id': 919897571, 'comment_body': '👍🏽 \r\n', 'comment_created': datetime.datetime(2022, 7, 13, 10, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 919898267, 'comment_body': 'This should be done in the init of struct and ideally on non-global rand if possible (: ', 'comment_created': datetime.datetime(2022, 7, 13, 10, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 919899678, 'comment_body': 'Plus I think it might make sense to just have one comparison with `jitterValue` being 0 for jitter equal 0 and value rand[0-jitter] otherwise (: ', 'comment_created': datetime.datetime(2022, 7, 13, 10, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 919948064, 'comment_body': '```suggestion\r\n\tvar jitterValue time.Duration\r\n```', 'comment_created': datetime.datetime(2022, 7, 13, 11, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}]","[{'commit_sha': 'b1d7be2054be39e4e38a0d77cc3563beac96bbad', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4ee0c969d9b7bb06ddc5ea245ec195107f17ee0', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b72ad7de76d3c307cc142d7f795550c23e8c5fb3', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfaa52411924629c90b2f9f182bcb9d766339012', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7237b898070b93a5d848dfb7c8c6d44338360e1a', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb716ae1e711d31c7a7c53d78ffa713fddc49d0e', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae79841bed944865645f62c27e43093710a13c7', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9178399bbb3a2b39c5d848b6af0cfc6d1da5ea1e', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '278c48e9c71554abdcebf1dd0423c4b2599890ba', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1dfe26ee37d399c4b855d4e4d6d1855ad741fa1e', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b323e123f9988c8354d34538c87e86a35fd62bdb', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}]",Saswata Mukherjee,51132453,saswataminsta@yahoo.com,User,,110,,53,148
1341600999,Update go-kit logging,"The library `github.com/go-kit/kit/log` has been replaced by `github.com/go-kit/log`.
* Use inline errorcheck excludes.",True,115,https://api.github.com/repos/bwplotka/mdox/pulls/115,https://github.com/bwplotka/mdox/pull/115,closed,25,227,14,1,0,0,0,0,[],2023-05-08 06:15:23+00:00,2023-05-08 06:21:40+00:00,377.0,0:06:17,[],"[{'commit_sha': '5acf61a188585c5877615491a141a30bd8ddff77', 'committer_username': 'SuperQ', 'committer_name': 'Ben Kochie', 'committer_email': 'superq@gmail.com', 'commit_date': datetime.datetime(2012, 1, 11, 5, 18, 28, tzinfo=datetime.timezone.utc)}]",Ben Kochie,1320667,superq@gmail.com,User,,169,,9,413
705988383,Update CHANGELOG.md,This PR updates CHANGELOG with all the latest merged changes. Also adds `.mdox.validate.yaml` to ensure fast link checks.,True,72,https://api.github.com/repos/bwplotka/mdox/pulls/72,https://github.com/bwplotka/mdox/pull/72,closed,47,3,3,1,0,0,0,1,[],2021-08-08 05:55:06+00:00,2021-08-10 10:43:22+00:00,190096.0,"2 days, 4:48:16",[],"[{'commit_sha': 'db23315a3efb5edc85370ea99c95e31eb6b1e267', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}]",Saswata Mukherjee,51132453,saswataminsta@yahoo.com,User,,110,,53,148
1800762291,fix typos,"I started looking at your code and I noticed a few typos.

I was about to open a simple PR, then I found acronyms incorrectly used, so I fixed them.",True,158,https://api.github.com/repos/bwplotka/mdox/pulls/158,https://github.com/bwplotka/mdox/pull/158,closed,14,14,7,2,0,2,0,0,[],2024-04-01 16:04:43+00:00,2024-07-03 11:28:07+00:00,8018604.0,"92 days, 19:23:24","[{'comment_id': 1664037495, 'comment_body': ""```suggestion\r\n\t// '\\p{L}\\p{N}\\p{M}' is the unicode equivalent of '\\w', https://www.regular-expressions.info/unicode.html.\r\n```\r\n\r\nThis one is correct honeslty"", 'comment_created': datetime.datetime(2024, 7, 3, 11, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 1664037925, 'comment_body': 'but not a big deal', 'comment_created': datetime.datetime(2024, 7, 3, 11, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}]","[{'commit_sha': '2b63b4bf464dba4dac95875aa0acd18e36d34c0e', 'committer_username': 'ccoVeille', 'committer_name': 'ccoVeille', 'committer_email': None, 'commit_date': datetime.datetime(2013, 3, 15, 14, 59, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa8885094237b985b3d1e9a28a9e1252eb85351', 'committer_username': 'ccoVeille', 'committer_name': 'ccoVeille', 'committer_email': None, 'commit_date': datetime.datetime(2013, 3, 15, 14, 59, 49, tzinfo=datetime.timezone.utc)}]",ccoVeille,3875889,,User,,102,,102,51
706419632,Update README.md with examples,"This PR updates `README.md` with current features that mdox supports now, along with sample configs for transform and link validators. Preview how it looks [here](https://github.com/saswatamcode/mdox/tree/add-docs).",True,73,https://api.github.com/repos/bwplotka/mdox/pulls/73,https://github.com/bwplotka/mdox/pull/73,closed,199,11,4,1,0,1,0,1,[],2021-08-09 11:02:21+00:00,2021-08-17 10:27:22+00:00,689101.0,"7 days, 23:25:01","[{'comment_id': 685904423, 'comment_body': ""Let's explain that too, (and ensure it works on Thanos side 🙈 )"", 'comment_created': datetime.datetime(2021, 8, 10, 10, 45, 17, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}]","[{'commit_sha': 'cfc78e9db116cb6b98fbd50e4e34c3c2b6c504ae', 'committer_username': 'saswatamcode', 'committer_name': 'Saswata Mukherjee', 'committer_email': 'saswataminsta@yahoo.com', 'commit_date': datetime.datetime(2019, 5, 28, 17, 41, 8, tzinfo=datetime.timezone.utc)}]",Saswata Mukherjee,51132453,saswataminsta@yahoo.com,User,,110,,53,148
1800762291,fix typos,"I started looking at your code and I noticed a few typos.

I was about to open a simple PR, then I found acronyms incorrectly used, so I fixed them.",True,158,https://api.github.com/repos/bwplotka/mdox/pulls/158,https://github.com/bwplotka/mdox/pull/158,closed,14,14,7,2,0,2,0,0,[],2024-04-01 16:04:43+00:00,2024-07-03 11:28:07+00:00,8018604.0,"92 days, 19:23:24","[{'comment_id': 1664037495, 'comment_body': ""```suggestion\r\n\t// '\\p{L}\\p{N}\\p{M}' is the unicode equivalent of '\\w', https://www.regular-expressions.info/unicode.html.\r\n```\r\n\r\nThis one is correct honeslty"", 'comment_created': datetime.datetime(2024, 7, 3, 11, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 1664037925, 'comment_body': 'but not a big deal', 'comment_created': datetime.datetime(2024, 7, 3, 11, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}]","[{'commit_sha': '2b63b4bf464dba4dac95875aa0acd18e36d34c0e', 'committer_username': 'ccoVeille', 'committer_name': 'ccoVeille', 'committer_email': None, 'commit_date': datetime.datetime(2013, 3, 15, 14, 59, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa8885094237b985b3d1e9a28a9e1252eb85351', 'committer_username': 'ccoVeille', 'committer_name': 'ccoVeille', 'committer_email': None, 'commit_date': datetime.datetime(2013, 3, 15, 14, 59, 49, tzinfo=datetime.timezone.utc)}]",ccoVeille,3875889,,User,,102,,102,51
1752151742,Bump github.com/prometheus/client_golang from 1.17.0 to 1.19.0,"Bumps [github.com/prometheus/client_golang](https://github.com/prometheus/client_golang) from 1.17.0 to 1.19.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/prometheus/client_golang/releases"">github.com/prometheus/client_golang's releases</a>.</em></p>
<blockquote>
<h2>v1.19.0</h2>
<h2>What's Changed</h2>
<p>The module <code>prometheus/common v0.48.0</code> introduced a bug when used together with client_golang. If your project uses client_golang and you want to use <code>prometheus/common v0.48.0</code> or higher, please update client_golang to v1.19.0.</p>
<ul>
<li>[CHANGE] Minimum required go version is now 1.20 (we also test client_golang against new 1.22 version). <a href=""https://redirect.github.com/prometheus/client_golang/issues/1445"">#1445</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1449"">#1449</a></li>
<li>[FEATURE] collectors: Add version collector. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1422"">#1422</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1427"">#1427</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/michurin""><code>@​michurin</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1423"">prometheus/client_golang#1423</a></li>
<li><a href=""https://github.com/kavu""><code>@​kavu</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1445"">prometheus/client_golang#1445</a></li>
<li><a href=""https://github.com/ywwg""><code>@​ywwg</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1448"">prometheus/client_golang#1448</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/prometheus/client_golang/compare/v1.18.0...v1.19.0"">https://github.com/prometheus/client_golang/compare/v1.18.0...v1.19.0</a></p>
<h2>v1.18.0</h2>
<h2>What's Changed</h2>
<ul>
<li>[FEATURE] promlint: Allow creation of custom metric validations. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1311"">#1311</a></li>
<li>[FEATURE] Go programs using client_golang can be built in wasip1 OS. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1350"">#1350</a></li>
<li>[BUGFIX] histograms: Add timer to reset ASAP after bucket limiting has happened. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1367"">#1367</a></li>
<li>[BUGFIX] testutil: Fix comparison of metrics with empty Help strings. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1378"">#1378</a></li>
<li>[ENHANCEMENT] Improved performance of <code>MetricVec.WithLabelValues(...)</code>. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1360"">#1360</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/srenatus""><code>@​srenatus</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1350"">prometheus/client_golang#1350</a></li>
<li><a href=""https://github.com/jadolg""><code>@​jadolg</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1342"">prometheus/client_golang#1342</a></li>
<li><a href=""https://github.com/manas-rust""><code>@​manas-rust</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1383"">prometheus/client_golang#1383</a></li>
<li><a href=""https://github.com/bluekeyes""><code>@​bluekeyes</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1378"">prometheus/client_golang#1378</a></li>
<li><a href=""https://github.com/tsipo""><code>@​tsipo</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1387"">prometheus/client_golang#1387</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/prometheus/client_golang/compare/v1.17.0...v1.18.0"">https://github.com/prometheus/client_golang/compare/v1.17.0...v1.18.0</a></p>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/prometheus/client_golang/blob/v1.19.0/CHANGELOG.md"">github.com/prometheus/client_golang's changelog</a>.</em></p>
<blockquote>
<h2>1.19.0 / 2023-02-27</h2>
<p>The module <code>prometheus/common v0.48.0</code> introduced a bug when used together with client_golang. If your project uses client_golang and you want to use <code>prometheus/common v0.48.0</code> or higher, please update client_golang to v1.19.0.</p>
<ul>
<li>[CHANGE] Minimum required go version is now 1.20 (we also test client_golang against new 1.22 version). <a href=""https://redirect.github.com/prometheus/client_golang/issues/1445"">#1445</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1449"">#1449</a></li>
<li>[FEATURE] collectors: Add version collector. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1422"">#1422</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1427"">#1427</a></li>
</ul>
<h2>1.18.0 / 2023-12-22</h2>
<ul>
<li>[FEATURE] promlint: Allow creation of custom metric validations. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1311"">#1311</a></li>
<li>[FEATURE] Go programs using client_golang can be built in wasip1 OS. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1350"">#1350</a></li>
<li>[BUGFIX] histograms: Add timer to reset ASAP after bucket limiting has happened. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1367"">#1367</a></li>
<li>[BUGFIX] testutil: Fix comparison of metrics with empty Help strings. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1378"">#1378</a></li>
<li>[ENHANCEMENT] Improved performance of <code>MetricVec.WithLabelValues(...)</code>. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1360"">#1360</a></li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/prometheus/client_golang/commit/77d4003c72f054ac435df1223deac17b1f8858ea""><code>77d4003</code></a> Add 1.19.0 changelog (<a href=""https://redirect.github.com/prometheus/client_golang/issues/1451"">#1451</a>)</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/14259fa70cfb69f1262f69fdfe58ed5e6318d441""><code>14259fa</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1448"">#1448</a> from ywwg/owilliams/content-negotiation</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/6d039205b8decc22868f43b0bd0da01b376a36aa""><code>6d03920</code></a> deps: bump prometheus/common version</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/353395b3b67b2bee0a219950bf5570779d74a392""><code>353395b</code></a> Remove support for go 1.19 (<a href=""https://redirect.github.com/prometheus/client_golang/issues/1449"">#1449</a>)</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/9dd5d2a64af1e9bd0cbff0516ded6e51d25209bf""><code>9dd5d2a</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1445"">#1445</a> from kavu/add_go122_metrics_test</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/c906a5e91a4604bd55fb8e26a54b5ba64a81c678""><code>c906a5e</code></a> Add support for Go 1.22</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/7ac90362b02729a65109b33d172bafb65d7dab50""><code>7ac9036</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1440"">#1440</a> from prometheus/dependabot/github_actions/github-act...</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/8c7e30ff0dae76cb87061a37bbccc6c8789196fa""><code>8c7e30f</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1441"">#1441</a> from prometheus/dependabot/go_modules/tutorial/whats...</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/08769f8257358282749a5180c9dc845f6e065640""><code>08769f8</code></a> Bump github.com/prometheus/common in /tutorial/whatsup</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/83d5940383d55377072d10a70316a7e24c5bb47c""><code>83d5940</code></a> Bump the github-actions group with 2 updates</li>
<li>Additional commits viewable in <a href=""https://github.com/prometheus/client_golang/compare/v1.17.0...v1.19.0"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github.com/prometheus/client_golang&package-manager=go_modules&previous-version=1.17.0&new-version=1.19.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>",True,152,https://api.github.com/repos/bwplotka/mdox/pulls/152,https://github.com/bwplotka/mdox/pull/152,closed,24,27,2,1,0,0,1,0,[{'name': 'dependencies'}],2024-03-01 17:51:00+00:00,2024-07-03 11:28:57+00:00,10690677.0,"123 days, 17:37:57",[],"[{'commit_sha': '38fdfececd926e2e4d74f5da380fed7de0dc89a9', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}]",,49699333,,Bot,,0,,0,0
1752151742,Bump github.com/prometheus/client_golang from 1.17.0 to 1.19.0,"Bumps [github.com/prometheus/client_golang](https://github.com/prometheus/client_golang) from 1.17.0 to 1.19.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/prometheus/client_golang/releases"">github.com/prometheus/client_golang's releases</a>.</em></p>
<blockquote>
<h2>v1.19.0</h2>
<h2>What's Changed</h2>
<p>The module <code>prometheus/common v0.48.0</code> introduced a bug when used together with client_golang. If your project uses client_golang and you want to use <code>prometheus/common v0.48.0</code> or higher, please update client_golang to v1.19.0.</p>
<ul>
<li>[CHANGE] Minimum required go version is now 1.20 (we also test client_golang against new 1.22 version). <a href=""https://redirect.github.com/prometheus/client_golang/issues/1445"">#1445</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1449"">#1449</a></li>
<li>[FEATURE] collectors: Add version collector. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1422"">#1422</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1427"">#1427</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/michurin""><code>@​michurin</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1423"">prometheus/client_golang#1423</a></li>
<li><a href=""https://github.com/kavu""><code>@​kavu</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1445"">prometheus/client_golang#1445</a></li>
<li><a href=""https://github.com/ywwg""><code>@​ywwg</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1448"">prometheus/client_golang#1448</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/prometheus/client_golang/compare/v1.18.0...v1.19.0"">https://github.com/prometheus/client_golang/compare/v1.18.0...v1.19.0</a></p>
<h2>v1.18.0</h2>
<h2>What's Changed</h2>
<ul>
<li>[FEATURE] promlint: Allow creation of custom metric validations. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1311"">#1311</a></li>
<li>[FEATURE] Go programs using client_golang can be built in wasip1 OS. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1350"">#1350</a></li>
<li>[BUGFIX] histograms: Add timer to reset ASAP after bucket limiting has happened. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1367"">#1367</a></li>
<li>[BUGFIX] testutil: Fix comparison of metrics with empty Help strings. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1378"">#1378</a></li>
<li>[ENHANCEMENT] Improved performance of <code>MetricVec.WithLabelValues(...)</code>. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1360"">#1360</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/srenatus""><code>@​srenatus</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1350"">prometheus/client_golang#1350</a></li>
<li><a href=""https://github.com/jadolg""><code>@​jadolg</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1342"">prometheus/client_golang#1342</a></li>
<li><a href=""https://github.com/manas-rust""><code>@​manas-rust</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1383"">prometheus/client_golang#1383</a></li>
<li><a href=""https://github.com/bluekeyes""><code>@​bluekeyes</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1378"">prometheus/client_golang#1378</a></li>
<li><a href=""https://github.com/tsipo""><code>@​tsipo</code></a> made their first contribution in <a href=""https://redirect.github.com/prometheus/client_golang/pull/1387"">prometheus/client_golang#1387</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/prometheus/client_golang/compare/v1.17.0...v1.18.0"">https://github.com/prometheus/client_golang/compare/v1.17.0...v1.18.0</a></p>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/prometheus/client_golang/blob/v1.19.0/CHANGELOG.md"">github.com/prometheus/client_golang's changelog</a>.</em></p>
<blockquote>
<h2>1.19.0 / 2023-02-27</h2>
<p>The module <code>prometheus/common v0.48.0</code> introduced a bug when used together with client_golang. If your project uses client_golang and you want to use <code>prometheus/common v0.48.0</code> or higher, please update client_golang to v1.19.0.</p>
<ul>
<li>[CHANGE] Minimum required go version is now 1.20 (we also test client_golang against new 1.22 version). <a href=""https://redirect.github.com/prometheus/client_golang/issues/1445"">#1445</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1449"">#1449</a></li>
<li>[FEATURE] collectors: Add version collector. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1422"">#1422</a> <a href=""https://redirect.github.com/prometheus/client_golang/issues/1427"">#1427</a></li>
</ul>
<h2>1.18.0 / 2023-12-22</h2>
<ul>
<li>[FEATURE] promlint: Allow creation of custom metric validations. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1311"">#1311</a></li>
<li>[FEATURE] Go programs using client_golang can be built in wasip1 OS. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1350"">#1350</a></li>
<li>[BUGFIX] histograms: Add timer to reset ASAP after bucket limiting has happened. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1367"">#1367</a></li>
<li>[BUGFIX] testutil: Fix comparison of metrics with empty Help strings. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1378"">#1378</a></li>
<li>[ENHANCEMENT] Improved performance of <code>MetricVec.WithLabelValues(...)</code>. <a href=""https://redirect.github.com/prometheus/client_golang/issues/1360"">#1360</a></li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/prometheus/client_golang/commit/77d4003c72f054ac435df1223deac17b1f8858ea""><code>77d4003</code></a> Add 1.19.0 changelog (<a href=""https://redirect.github.com/prometheus/client_golang/issues/1451"">#1451</a>)</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/14259fa70cfb69f1262f69fdfe58ed5e6318d441""><code>14259fa</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1448"">#1448</a> from ywwg/owilliams/content-negotiation</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/6d039205b8decc22868f43b0bd0da01b376a36aa""><code>6d03920</code></a> deps: bump prometheus/common version</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/353395b3b67b2bee0a219950bf5570779d74a392""><code>353395b</code></a> Remove support for go 1.19 (<a href=""https://redirect.github.com/prometheus/client_golang/issues/1449"">#1449</a>)</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/9dd5d2a64af1e9bd0cbff0516ded6e51d25209bf""><code>9dd5d2a</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1445"">#1445</a> from kavu/add_go122_metrics_test</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/c906a5e91a4604bd55fb8e26a54b5ba64a81c678""><code>c906a5e</code></a> Add support for Go 1.22</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/7ac90362b02729a65109b33d172bafb65d7dab50""><code>7ac9036</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1440"">#1440</a> from prometheus/dependabot/github_actions/github-act...</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/8c7e30ff0dae76cb87061a37bbccc6c8789196fa""><code>8c7e30f</code></a> Merge pull request <a href=""https://redirect.github.com/prometheus/client_golang/issues/1441"">#1441</a> from prometheus/dependabot/go_modules/tutorial/whats...</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/08769f8257358282749a5180c9dc845f6e065640""><code>08769f8</code></a> Bump github.com/prometheus/common in /tutorial/whatsup</li>
<li><a href=""https://github.com/prometheus/client_golang/commit/83d5940383d55377072d10a70316a7e24c5bb47c""><code>83d5940</code></a> Bump the github-actions group with 2 updates</li>
<li>Additional commits viewable in <a href=""https://github.com/prometheus/client_golang/compare/v1.17.0...v1.19.0"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github.com/prometheus/client_golang&package-manager=go_modules&previous-version=1.17.0&new-version=1.19.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>",True,152,https://api.github.com/repos/bwplotka/mdox/pulls/152,https://github.com/bwplotka/mdox/pull/152,closed,24,27,2,1,0,0,1,0,[{'name': 'dependencies'}],2024-03-01 17:51:00+00:00,2024-07-03 11:28:57+00:00,10690677.0,"123 days, 17:37:57",[],"[{'commit_sha': '38fdfececd926e2e4d74f5da380fed7de0dc89a9', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}]",,49699333,,Bot,,0,,0,0
1800762291,fix typos,"I started looking at your code and I noticed a few typos.

I was about to open a simple PR, then I found acronyms incorrectly used, so I fixed them.",True,158,https://api.github.com/repos/bwplotka/mdox/pulls/158,https://github.com/bwplotka/mdox/pull/158,closed,14,14,7,2,0,2,0,0,[],2024-04-01 16:04:43+00:00,2024-07-03 11:28:07+00:00,8018604.0,"92 days, 19:23:24","[{'comment_id': 1664037495, 'comment_body': ""```suggestion\r\n\t// '\\p{L}\\p{N}\\p{M}' is the unicode equivalent of '\\w', https://www.regular-expressions.info/unicode.html.\r\n```\r\n\r\nThis one is correct honeslty"", 'comment_created': datetime.datetime(2024, 7, 3, 11, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}, {'comment_id': 1664037925, 'comment_body': 'but not a big deal', 'comment_created': datetime.datetime(2024, 7, 3, 11, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bwplotka', 'type': 'User'}]","[{'commit_sha': '2b63b4bf464dba4dac95875aa0acd18e36d34c0e', 'committer_username': 'ccoVeille', 'committer_name': 'ccoVeille', 'committer_email': None, 'commit_date': datetime.datetime(2013, 3, 15, 14, 59, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa8885094237b985b3d1e9a28a9e1252eb85351', 'committer_username': 'ccoVeille', 'committer_name': 'ccoVeille', 'committer_email': None, 'commit_date': datetime.datetime(2013, 3, 15, 14, 59, 49, tzinfo=datetime.timezone.utc)}]",ccoVeille,3875889,,User,,102,,102,51
1202055515,Migrate github.com/efficientgo/tools to github.com/efficientgo/core,"- Migrate `github.com/efficientgo/tools` to `github.com/efficientgo/core`
- Update `github.com/efficientgo/tools/extkingpin
`",True,102,https://api.github.com/repos/bwplotka/mdox/pulls/102,https://github.com/bwplotka/mdox/pull/102,closed,26,35,17,1,0,0,0,0,[],2023-01-18 17:54:44+00:00,2023-01-20 03:53:36+00:00,122332.0,"1 day, 9:58:52",[],"[{'commit_sha': '681719c9023041aba31198cce26aa4c6cce78646', 'committer_username': 'olivierlemasle', 'committer_name': 'Olivier Lemasle', 'committer_email': None, 'commit_date': datetime.datetime(2011, 2, 20, 10, 25, tzinfo=datetime.timezone.utc)}]",Olivier Lemasle,628140,,User,,173,,13,18

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
291308731,mdox,bwplotka/mdox,Go,11,67,8,10,104,36,11,9,"[{'id': 1999028394, 'number': 165, 'closed': None, 'created': datetime.datetime(2024, 8, 1, 17, 43, 28, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 9, 'deletions': 9, 'state': 'open'}, {'id': 1999028287, 'number': 164, 'closed': None, 'created': datetime.datetime(2024, 8, 1, 17, 43, 23, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 28, 'deletions': 25, 'state': 'open'}, {'id': 1999028136, 'number': 163, 'closed': None, 'created': datetime.datetime(2024, 8, 1, 17, 43, 18, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 9, 'deletions': 9, 'state': 'open'}, {'id': 1999026870, 'number': 162, 'closed': None, 'created': datetime.datetime(2024, 8, 1, 17, 42, 30, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 21, 'deletions': 8, 'state': 'open'}, {'id': 1999026729, 'number': 161, 'closed': None, 'created': datetime.datetime(2024, 8, 1, 17, 42, 25, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 18, 'deletions': 21, 'state': 'open'}, {'id': 1752151956, 'number': 153, 'closed': datetime.datetime(2024, 7, 3, 11, 29, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 1, 17, 51, 6, tzinfo=datetime.timezone.utc), 'time_taken': 10690709.0, 'time_delta': '123 days, 17:38:29', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1752151742, 'number': 152, 'closed': datetime.datetime(2024, 7, 3, 11, 28, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 1, 17, 51, tzinfo=datetime.timezone.utc), 'time_taken': 10690677.0, 'time_delta': '123 days, 17:37:57', 'additions': 24, 'deletions': 27, 'state': 'closed'}, {'id': 1752151079, 'number': 151, 'closed': datetime.datetime(2024, 7, 3, 11, 29, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 1, 17, 50, 42, tzinfo=datetime.timezone.utc), 'time_taken': 10690709.0, 'time_delta': '123 days, 17:38:29', 'additions': 94, 'deletions': 362, 'state': 'closed'}, {'id': 1706799306, 'number': 150, 'closed': datetime.datetime(2024, 3, 1, 17, 50, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 18, 1, 23, tzinfo=datetime.timezone.utc), 'time_taken': 2504961.0, 'time_delta': '28 days, 23:49:21', 'additions': 29, 'deletions': 363, 'state': 'closed'}, {'id': 1706796643, 'number': 149, 'closed': datetime.datetime(2024, 3, 1, 17, 51, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 18, 0, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2505067.0, 'time_delta': '28 days, 23:51:07', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1661181971, 'number': 148, 'closed': datetime.datetime(2024, 2, 1, 18, 0, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 1, 17, 22, 3, tzinfo=datetime.timezone.utc), 'time_taken': 2680680.0, 'time_delta': '31 days, 0:38:00', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1661181839, 'number': 147, 'closed': datetime.datetime(2024, 3, 1, 17, 51, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 1, 17, 21, 47, tzinfo=datetime.timezone.utc), 'time_taken': 5185755.0, 'time_delta': '60 days, 0:29:15', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1661181751, 'number': 146, 'closed': datetime.datetime(2024, 7, 3, 11, 29, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 1, 17, 21, 33, tzinfo=datetime.timezone.utc), 'time_taken': 15876460.0, 'time_delta': '183 days, 18:07:40', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1661181639, 'number': 145, 'closed': datetime.datetime(2024, 2, 1, 18, 1, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 1, 17, 21, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2680810.0, 'time_delta': '31 days, 0:40:10', 'additions': 17, 'deletions': 353, 'state': 'closed'}, {'id': 1626099009, 'number': 144, 'closed': datetime.datetime(2024, 1, 1, 12, 57, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 1, 17, 47, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2660997.0, 'time_delta': '30 days, 19:09:57', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1626098398, 'number': 143, 'closed': datetime.datetime(2024, 1, 1, 12, 58, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 1, 17, 47, 11, tzinfo=datetime.timezone.utc), 'time_taken': 2661077.0, 'time_delta': '30 days, 19:11:17', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1626098289, 'number': 142, 'closed': datetime.datetime(2024, 1, 1, 12, 58, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 1, 17, 47, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2661103.0, 'time_delta': '30 days, 19:11:43', 'additions': 15, 'deletions': 15, 'state': 'closed'}, {'id': 1583688457, 'number': 141, 'closed': datetime.datetime(2023, 11, 2, 15, 6, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 2, 5, 23, 59, tzinfo=datetime.timezone.utc), 'time_taken': 34976.0, 'time_delta': '9:42:56', 'additions': 24, 'deletions': 24, 'state': 'closed'}, {'id': 1583029671, 'number': 140, 'closed': datetime.datetime(2023, 11, 2, 5, 22, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 1, 17, 20, 29, tzinfo=datetime.timezone.utc), 'time_taken': 43334.0, 'time_delta': '12:02:14', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1583029571, 'number': 139, 'closed': datetime.datetime(2023, 11, 2, 5, 24, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 1, 17, 20, 25, tzinfo=datetime.timezone.utc), 'time_taken': 43416.0, 'time_delta': '12:03:36', 'additions': 33, 'deletions': 33, 'state': 'closed'}, {'id': 1583028013, 'number': 138, 'closed': datetime.datetime(2023, 11, 2, 15, 8, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 1, 17, 19, 16, tzinfo=datetime.timezone.utc), 'time_taken': 78528.0, 'time_delta': '21:48:48', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1537111942, 'number': 137, 'closed': datetime.datetime(2024, 1, 1, 17, 21, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 1, 17, 20, 49, tzinfo=datetime.timezone.utc), 'time_taken': 7948860.0, 'time_delta': '92 days, 0:01:00', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1537111894, 'number': 136, 'closed': datetime.datetime(2023, 11, 1, 17, 20, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 1, 17, 20, 41, tzinfo=datetime.timezone.utc), 'time_taken': 2678391.0, 'time_delta': '30 days, 23:59:51', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1537111836, 'number': 135, 'closed': datetime.datetime(2023, 11, 1, 17, 20, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 1, 17, 20, 32, tzinfo=datetime.timezone.utc), 'time_taken': 2678396.0, 'time_delta': '30 days, 23:59:56', 'additions': 12, 'deletions': 12, 'state': 'closed'}, {'id': 1499188131, 'number': 134, 'closed': datetime.datetime(2023, 9, 4, 7, 23, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 17, 19, 23, tzinfo=datetime.timezone.utc), 'time_taken': 223452.0, 'time_delta': '2 days, 14:04:12', 'additions': 18, 'deletions': 18, 'state': 'closed'}, {'id': 1499187196, 'number': 133, 'closed': datetime.datetime(2023, 9, 4, 7, 13, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 17, 18, 24, tzinfo=datetime.timezone.utc), 'time_taken': 222889.0, 'time_delta': '2 days, 13:54:49', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1499187085, 'number': 132, 'closed': datetime.datetime(2023, 9, 4, 7, 22, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 1, 17, 18, 17, tzinfo=datetime.timezone.utc), 'time_taken': 223433.0, 'time_delta': '2 days, 14:03:53', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1462378890, 'number': 131, 'closed': datetime.datetime(2023, 8, 4, 6, 16, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 4, 5, 59, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1019.0, 'time_delta': '0:16:59', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1458544439, 'number': 130, 'closed': datetime.datetime(2023, 8, 4, 5, 58, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 18, 1, 15, tzinfo=datetime.timezone.utc), 'time_taken': 215848.0, 'time_delta': '2 days, 11:57:28', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1458544331, 'number': 129, 'closed': datetime.datetime(2023, 8, 4, 6, 17, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 18, 1, 9, tzinfo=datetime.timezone.utc), 'time_taken': 216954.0, 'time_delta': '2 days, 12:15:54', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1458544207, 'number': 128, 'closed': datetime.datetime(2023, 8, 4, 5, 59, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 18, 1, 3, tzinfo=datetime.timezone.utc), 'time_taken': 215919.0, 'time_delta': '2 days, 11:58:39', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1458544085, 'number': 127, 'closed': datetime.datetime(2023, 8, 4, 6, 27, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 18, 0, 56, tzinfo=datetime.timezone.utc), 'time_taken': 217580.0, 'time_delta': '2 days, 12:26:20', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1416278841, 'number': 126, 'closed': datetime.datetime(2023, 7, 3, 9, 24, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 1, 17, 47, 55, tzinfo=datetime.timezone.utc), 'time_taken': 142567.0, 'time_delta': '1 day, 15:36:07', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1416278812, 'number': 125, 'closed': datetime.datetime(2023, 7, 3, 9, 50, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 1, 17, 47, 47, tzinfo=datetime.timezone.utc), 'time_taken': 144190.0, 'time_delta': '1 day, 16:03:10', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 1416278775, 'number': 124, 'closed': datetime.datetime(2023, 7, 3, 9, 24, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 1, 17, 47, 37, tzinfo=datetime.timezone.utc), 'time_taken': 142627.0, 'time_delta': '1 day, 15:37:07', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1416278707, 'number': 123, 'closed': datetime.datetime(2023, 7, 3, 10, 14, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 1, 17, 47, 22, tzinfo=datetime.timezone.utc), 'time_taken': 145600.0, 'time_delta': '1 day, 16:26:40', 'additions': 67, 'deletions': 62, 'state': 'closed'}, {'id': 1374539630, 'number': 122, 'closed': datetime.datetime(2024, 7, 3, 11, 29, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 18, 1, 35, tzinfo=datetime.timezone.utc), 'time_taken': 34363668.0, 'time_delta': '397 days, 17:27:48', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 1374539313, 'number': 121, 'closed': datetime.datetime(2023, 6, 2, 6, 30, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 18, 1, 23, tzinfo=datetime.timezone.utc), 'time_taken': 44972.0, 'time_delta': '12:29:32', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1374538969, 'number': 120, 'closed': datetime.datetime(2023, 6, 2, 6, 31, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 18, 1, 10, tzinfo=datetime.timezone.utc), 'time_taken': 45021.0, 'time_delta': '12:30:21', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1374538609, 'number': 119, 'closed': datetime.datetime(2023, 6, 2, 6, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 18, 0, 57, tzinfo=datetime.timezone.utc), 'time_taken': 45063.0, 'time_delta': '12:31:03', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1374538172, 'number': 118, 'closed': datetime.datetime(2023, 6, 2, 6, 37, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 18, 0, 42, tzinfo=datetime.timezone.utc), 'time_taken': 45390.0, 'time_delta': '12:36:30', 'additions': 26, 'deletions': 25, 'state': 'closed'}, {'id': 1341563267, 'number': 113, 'closed': datetime.datetime(2023, 5, 8, 6, 23, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 8, 5, 36, 36, tzinfo=datetime.timezone.utc), 'time_taken': 2808.0, 'time_delta': '0:46:48', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1341563219, 'number': 112, 'closed': datetime.datetime(2023, 5, 8, 6, 22, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 8, 5, 36, 33, tzinfo=datetime.timezone.utc), 'time_taken': 2740.0, 'time_delta': '0:45:40', 'additions': 16, 'deletions': 214, 'state': 'closed'}, {'id': 1341563212, 'number': 111, 'closed': datetime.datetime(2023, 5, 8, 6, 26, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 8, 5, 36, 32, tzinfo=datetime.timezone.utc), 'time_taken': 3009.0, 'time_delta': '0:50:09', 'additions': 11, 'deletions': 7, 'state': 'closed'}, {'id': 1341563155, 'number': 110, 'closed': datetime.datetime(2023, 5, 8, 6, 27, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 8, 5, 36, 29, tzinfo=datetime.timezone.utc), 'time_taken': 3060.0, 'time_delta': '0:51:00', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1341563100, 'number': 109, 'closed': datetime.datetime(2023, 5, 8, 6, 26, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 8, 5, 36, 24, tzinfo=datetime.timezone.utc), 'time_taken': 2995.0, 'time_delta': '0:49:55', 'additions': 9, 'deletions': 9, 'state': 'closed'}]"
