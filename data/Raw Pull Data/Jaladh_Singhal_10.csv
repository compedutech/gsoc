pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
417583668,Shell Info Widget demo for new TARDIS GUI,"This PR demonstrates the prototype for new GUI for TARDIS using Jupyter Widgets.

> Note: Don't merge this PR, it is only for demonstration purpose. The code produced here will be integrated in tardis codebase only after the prototypes become complete and a proper structure for new GUI subpackage is decided.

<!---# Interfaces to implement
## Shell Info
- [x] Interconnected tables (shells and abundances)
- [x] Model parameters in a new tab
- [ ] Name elements & Ion species
- [ ] Shell vs Density plot
- [ ] Shell vs Rad. Temp plot
- [ ] Make iterations visible
- [ ] Spaghetti plot for shell abundances

## Others
- [ ] Line Info
- [ ] New interfaces-->

More (future) features to be added can be tracked in [this project board](https://github.com/tardis-sn/tardis/projects/5).",False,1146,https://api.github.com/repos/tardis-sn/tardis/pulls/1146,https://github.com/tardis-sn/tardis/pull/1146,closed,1921,0,2,5,5,0,0,2,[],2020-05-13 20:05:05+00:00,2020-06-22 15:47:49+00:00,3440564.0,"39 days, 19:42:44",[],"[{'commit_sha': 'c1003b12936dbc77453f07cca2a238dbc81edbbf', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41aed40b6adceaba4a98b72c583d42fd9ab58b4d', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a12d0eb3e4b2f00be3be9724cd9e596b2b16af8', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cce6129ac0c1bd9ed59820dfec8b00c2c1d9314', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3d489b9f26d7e17c9269ac19bc3b04bf1cf3e81', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
423881316,Create a new subpackage for jupyter-widgets and add shell info widgets,"This PR primarily aims to make shell info jupter-widgets accessible via `widgets` subpackage. The code is put together in a class in submodule `base.py` (as of now) along with relevant tests and documentation.

### Things to do:
- [x] Put entire shell info widget's code in a working OOP structure
- [x] Make the shell info widget generate by a single function call, passing simulation object as only argument
- [x] Add relevant docstrings to improve code documentation
- [x] Also implement different way of accessing simulation data like from HDF
- [x] Create an example notebook demonstrating its use in tardis docs
- [x] Create basic unit tests
- [ ] Create an issue for known bugs after merging",True,1166,https://api.github.com/repos/tardis-sn/tardis/pulls/1166,https://github.com/tardis-sn/tardis/pull/1166,closed,7469,0,8,25,1,21,0,3,[],2020-05-27 14:14:07+00:00,2020-06-23 23:18:30+00:00,2365463.0,"27 days, 9:04:23","[{'comment_id': 433908504, 'comment_body': 'documentation is missing', 'comment_created': datetime.datetime(2020, 6, 2, 14, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 433909731, 'comment_body': 'class-method - or we do it as above ', 'comment_created': datetime.datetime(2020, 6, 2, 14, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 433910179, 'comment_body': '`ShellInfoWidget.from_hdf` or `ShellInfoWidget.from_simulation`', 'comment_created': datetime.datetime(2020, 6, 2, 14, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 433911962, 'comment_body': '```\r\nclass ShellInfoWidget(object):\r\n    @classmethod\r\n     def from_hdf(cls, hdf_fname):\r\n          return cls(HDFShellInfo(hdf_fname))\r\n\r\n    def __init__(self, shell_info):\r\n          pass\r\n    def method(self, number):\r\n        # do something\r\n```', 'comment_created': datetime.datetime(2020, 6, 2, 14, 16, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 433915656, 'comment_body': 'PEP8', 'comment_created': datetime.datetime(2020, 6, 2, 14, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 434648762, 'comment_body': '```suggestion\r\n    def __init__(self, shell_info):\r\n```', 'comment_created': datetime.datetime(2020, 6, 3, 15, 19, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 434649735, 'comment_body': '```suggestion\r\n       self.data = shell_info\r\n```', 'comment_created': datetime.datetime(2020, 6, 3, 15, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 434653953, 'comment_body': '```suggestion\r\ndef shell_info_widget_from_hdf(fpath):\r\n    shell_info = HDFShellInfo(fpath)\r\n    return ShellInfoWidget(shell_info)\r\n```', 'comment_created': datetime.datetime(2020, 6, 3, 15, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 434656245, 'comment_body': ""```python\r\nfrom tardis import widget\r\nwidget.<tab>\r\nsi = widget.shell_info_widget_from_hdf('dsfdsfdsf.h5')\r\n```"", 'comment_created': datetime.datetime(2020, 6, 3, 15, 29, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 439646236, 'comment_body': 'I think the return is wrong in the doc strings', 'comment_created': datetime.datetime(2020, 6, 12, 21, 17, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 439646314, 'comment_body': 'there is a way to style dataframes - that might be better', 'comment_created': datetime.datetime(2020, 6, 12, 21, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 439646556, 'comment_body': 'nice!', 'comment_created': datetime.datetime(2020, 6, 12, 21, 19, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 440337965, 'comment_body': 'According to [numpydoc](https://numpydoc.readthedocs.io/en/latest/format.html#sections) (see section 5), it is valid. And in my experience, almost docs like pandas, scikit-learn, etc. have it.', 'comment_created': datetime.datetime(2020, 6, 15, 17, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 440339279, 'comment_body': ""Thanks - but for some reason, when building docs, it isn't appearing even though it is valid as per numpydoc - I'll check it out, might has to do something with sphinx configuration!"", 'comment_created': datetime.datetime(2020, 6, 15, 17, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 440343575, 'comment_body': ""Yes I know that, but it doesn't make sense to qgrid widget because they fetch the data from dataframe and show it in the format of slickgrid (JS library they use underneath). I know it is not elegant way but more like a workaround but they have no native way to show numbers in scientific notation - I've also opened an [issue](https://github.com/quantopian/qgrid/issues/320) for it."", 'comment_created': datetime.datetime(2020, 6, 15, 17, 47, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 440524004, 'comment_body': ""Not every model will have 20 shells. Let's generalize 21 to len(self.sim_model.model.t_rad)+1"", 'comment_created': datetime.datetime(2020, 6, 16, 0, 48, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ycamacho', 'type': 'User'}, {'comment_id': 442248031, 'comment_body': 'I agree with you and I already changed it week ago. \r\n\r\nAs your review comment says ""outdated"", I guess there might be a confusion, something like you reviewed this PR at an earlier commit.', 'comment_created': datetime.datetime(2020, 6, 18, 13, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 442496508, 'comment_body': 'good catch', 'comment_created': datetime.datetime(2020, 6, 18, 20, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 442813152, 'comment_body': 'It works now as I fixed some mistakes in docstrings.', 'comment_created': datetime.datetime(2020, 6, 19, 12, 32, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 442843119, 'comment_body': 'PEP 8 ðŸ˜‰ ', 'comment_created': datetime.datetime(2020, 6, 19, 13, 33, 36, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 442889667, 'comment_body': ""I don't get it - where?"", 'comment_created': datetime.datetime(2020, 6, 19, 14, 59, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}]","[{'commit_sha': 'ec3bc00b012bebd201ddacf1b109af8db3abc6a9', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1539ad9a92107f771c26be1760ecc20f284f9549', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8a8d1eb590f7f4b4f778ca3379bc33dc2208d87', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20a5d555ebd6c5a6e83dc47ff5480c282c3f0bc3', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c73269fb39423f6c927d7fd99dc6edefcb6bac4', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a8ca090e1385c432f20606a3377871d430e16cc', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '812a90d6af4402973e7f4886f385acd6bbdae263', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae17ab71fdc37030d58483f1843c78d5d8de1d8b', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba731f60ab9c384513805cb13fdef5a99a5de62d', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0592a0e0d6ff3a1a4936278d67746fe05c68ed08', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68e0d616839278dceba6d35b17ed802d52ec59d8', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fd3ef3c31cb5abe370df363b26074d5d06a707d', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84aa842e29e57b491e90d15310b0ca3179958fa7', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07d7899b30938c597340c3584c3d185e06df9d14', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9335d4b2bb09bab1000db00ebeb558f6a872b8eb', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '932698ca90bbce9d7072b48c0577138c4629c05b', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f808dbd332e76a389df8b02406686f5f222551b', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11ca62c27b871bc85c13332d37061893c8d76f0', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df4cbb746ff6056f99a7120db7ea8d459d0ada9d', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72de327e652dea1086f7be930a5e0af775d288c7', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19fad5030db442b5b7a2219b16cbb0fd3e2ecad2', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2ed5c39bcd1f0527e8f7b0b04c3b53b3537186a', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbb1200694f74558e714c4a7d977239b03d61412', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6e85bf80ff5603f3ad3f64afca9149ffe5797cf', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff70c2baf5a3ae55e07867c0aad668dcd5143199', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
434713803,Add line info widget to TARDIS: demo notebook,"This PR aims to share a notebook for experimentation and code that will be used to create line info widgets.

> NOTE: This is not intended for merging.

## Motivation and Context
This a part of GUI project to create line info widget for TARDIS.

## How Has This Been Tested?
All the code in notebook works fine by executing cells.

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
",False,1187,https://api.github.com/repos/tardis-sn/tardis/pulls/1187,https://github.com/tardis-sn/tardis/pull/1187,closed,43662,0,1,9,4,0,1,3,[{'name': 'gui'}],2020-06-15 18:53:59+00:00,2020-10-29 14:43:16+00:00,11735357.0,"135 days, 19:49:17",[],"[{'commit_sha': '7ab7ca241a57f5f0fa9ce42d3c8937275f571746', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5ecaeba6f52c3f58ea509c7ed7da8eabe9ac566', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e141f0f8d96b148d2801d903d3dab7371f6bf4d5', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beb8b4f2c15ce95758afa159298b1326b87d5ca2', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7482f1728f211206918dcc887fb3e8ab92e7105', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4478cefb9f485741153983584071b0ad58fb7954', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0b17c6f86384c384b0de67ce5e8d735d8cc565c', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7203d0a0725061cafc6588dad9e325c168a1dac0', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a85172c6850ada098d1ed1d345c8f6f2ccd06be', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
451473010,Add modified Kromer plot to work with widgets,"This PR adds Kromer plot from [tardisanalysis](https://github.com/tardis-sn/tardisanalysis/blob/master/tardis_kromer_plot.py) in simplified structure so that it can work with widgets being developed. The main changes made are:
- It doesn't depend on [minimal_model](https://github.com/tardis-sn/tardisanalysis/blob/master/tardis_minimal_model.py), can be created directly from a Simulation or HDF
- Same object contains data of both real & virtual mode
- Produces interactive plots (using plotly) besides static matplotlib plots
- Incorporates the structure of KromerPlotter which is highly simplified and more readable by using @marxwillia's work at tardis-sn/tardisanalysis#35

## To-dos
- [x] Construct object independent of minimal_model
- [x] Make same object store data of both real & virtual mode
- [x] Create classmethod that can create from a Simulation object
- [x] Create classmethod that can create from a HDF
- [x] Add proper & relevant documentation/docstrings to lots of properties
- [x] Optimize the matplotlib implementation of plot
- [x] Create interactive version of matplotlib in plotly

### Note
Since this PR is already pretty bulky, documentation notebook and unit tests will be added in separate PR
",True,1241,https://api.github.com/repos/tardis-sn/tardis/pulls/1241,https://github.com/tardis-sn/tardis/pull/1241,closed,1224,6,6,24,1,12,1,0,[{'name': 'gui'}],2020-07-17 21:25:02+00:00,2020-12-21 15:22:04+00:00,13543022.0,"156 days, 17:57:02","[{'comment_id': 543446335, 'comment_body': ""Since we're saving `delta_frequency` in hdf, this test was failing because it wasn't written in a way to handle scalars - now it's fixed!"", 'comment_created': datetime.datetime(2020, 12, 15, 15, 30, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 545861876, 'comment_body': 'put new lines at end of file.', 'comment_created': datetime.datetime(2020, 12, 18, 14, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'marxwillia', 'type': 'User'}, {'comment_id': 545862193, 'comment_body': 'new line at end of file.', 'comment_created': datetime.datetime(2020, 12, 18, 14, 24, 22, tzinfo=datetime.timezone.utc), 'commenter': 'marxwillia', 'type': 'User'}, {'comment_id': 545866161, 'comment_body': 'Add something like: ""This is a data preprocessing class for the KromerPlotter""', 'comment_created': datetime.datetime(2020, 12, 18, 14, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'marxwillia', 'type': 'User'}, {'comment_id': 545867244, 'comment_body': 'Make a comment that & operator is faster.', 'comment_created': datetime.datetime(2020, 12, 18, 14, 32, 19, tzinfo=datetime.timezone.utc), 'commenter': 'marxwillia', 'type': 'User'}, {'comment_id': 545871142, 'comment_body': '@marxwillia test that the distance actually works.', 'comment_created': datetime.datetime(2020, 12, 18, 14, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'marxwillia', 'type': 'User'}, {'comment_id': 545872282, 'comment_body': 'Plan is to merge, make a separate issue, fix any colormap bugs in separate PR.', 'comment_created': datetime.datetime(2020, 12, 18, 14, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'marxwillia', 'type': 'User'}, {'comment_id': 545873517, 'comment_body': 'remove comment.', 'comment_created': datetime.datetime(2020, 12, 18, 14, 42, 48, tzinfo=datetime.timezone.utc), 'commenter': 'marxwillia', 'type': 'User'}, {'comment_id': 545875139, 'comment_body': 'Hard coded numbers fine for now, but will be changed in the future.', 'comment_created': datetime.datetime(2020, 12, 18, 14, 44, 33, tzinfo=datetime.timezone.utc), 'commenter': 'marxwillia', 'type': 'User'}, {'comment_id': 545883306, 'comment_body': 'Delete comment.', 'comment_created': datetime.datetime(2020, 12, 18, 14, 52, 38, tzinfo=datetime.timezone.utc), 'commenter': 'marxwillia', 'type': 'User'}, {'comment_id': 545887673, 'comment_body': 'Delete comment.', 'comment_created': datetime.datetime(2020, 12, 18, 14, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'marxwillia', 'type': 'User'}, {'comment_id': 546003058, 'comment_body': 'Created an issue #1396 ', 'comment_created': datetime.datetime(2020, 12, 18, 18, 11, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}]","[{'commit_sha': '6ec4b8f7cf06961d1487cd8fbc30355e937476ba', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b6a635e74944cb89ea6d810d6a65f0d2b357e1f', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7503ee14b27874552b415f05433244d10bbeea2', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02f9500e4aa38b57d9639f00237a01945d3a1c98', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8957afea0deb569a76dfe689ea75638995613367', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd7c2d663ba3612ab3e02ea5fc701b9a6d9fb2ff', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48ac765b44f4f5cf7b96c4e0e529962f5fc8eb14', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce88c67ccb54d0ad7f7919d710de2a0f8546df3a', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '415e3607d249e56716d15535013a11d93ac2ec07', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ee0535ad6dcb27c1ca42a4cdffd422114f16c4c', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25ae720d364959186405001817c9272e8cd4ee95', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd53b0805f37ee8d953356dcb8d62359d7e14782f', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a26d49a35c7da8a4ddae2a28a3a7cdc46bbdcea4', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc948e8adfbd56a444173e0c3dc68d14c430fbe1', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ee827e319b563d224f24126b314f0889b4c2e76', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59e9a65ff3dbc61903c7518885e4f6dbb68c9ec0', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41a3cb5e04ec6afaedcc28a2f0a5ba79c8d9a704', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1714e130256dfe68727a568f3b5fa08afe70c9b8', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2584ed4d95032de8ac0c3911253ae48b55b740a9', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02fff169bc48d18a4fc2986265a304387934a853', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecd709a98148e7c6e716cbac5d5820aa1ebe9f58', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a58869f24af8d15544f19f398149a21465cc8d36', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af4380a53ea160992f9a68543b938326a3816861', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bc3afb7470b305f99a2c922e1b3dbeb52ae64c4', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
463391059,Add line info widget to widgets subpackage,"<!--- Provide a general summary of your changes in the Title above -->
This PR aims to put line info widget which was being prepared in a notebook (#1187) as a module within the widgets subpackage so that it can be generated easily by constructing the widget object.

The main changes made are:
- Edited `analysis.py` to make it work with line inf widget:
  - Classmethod `from_model` did not take `packet_filter_mode` as argument but it is required for initializing LastLineInteraction (as `__init__()` takes it), so added it
  - Added filter mode `packet_in_nu` and renamed `packet_nu` to `packet_out_nu` since it only concerned with `output_nu`
  - output_nu and last_interaction_in_nu didn't always had ""Hz"" unit, so made sure that they are converted to Quantity 1st

- Added `line_info.py` module with the class to create line info widget
- Renamed `base.py` which contained only shell info widget code to `shell_info.py` and similarly done this renaming in tests and `__init__.py`
- Added `util.py` as a helper functions module to current widgets modules
  - `create_table_widget` was common in both `line_info.py` and `shell_info.py`, so removed it from `shell_info.py` and moved it there
  - Added a `TableSummaryLabel` class for creating summary label targetting a table widget (required for handling creation/updation of Total Packets label in last line counts table)
- Added `test_line_info.py` for testing line info module. Note, there's no test file for util.py because it doesn't have any back-end logic but only front-end logic (of creating widgets) and since line_info module uses it so it's already covered.

## To-Dos
- [x] Improvement in line info widget as [described here](https://github.com/tardis-sn/tardis/projects/5#card-42841884)
- [x] Add all the functions from notebook and make the OO interface work
- [x] Add docstrings in module
- [x] Create unit-tests
- [x] Add documentation (implemented in #1280 since it makes changes to entire widgets docs not only line info)

",True,1264,https://api.github.com/repos/tardis-sn/tardis/pulls/1264,https://github.com/tardis-sn/tardis/pull/1264,closed,1405,104,8,25,5,15,1,0,[{'name': 'gui'}],2020-08-05 13:39:24+00:00,2020-09-21 17:57:17+00:00,4076273.0,"47 days, 4:17:53","[{'comment_id': 485679481, 'comment_body': 'It might be better to rename output_nu and last_interaction_in_nu so that they are consistent. \r\ne.g. output_nu and input_nu', 'comment_created': datetime.datetime(2020, 9, 9, 14, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 485698015, 'comment_body': 'Might be good to say what the line info widget is', 'comment_created': datetime.datetime(2020, 9, 9, 15, 21, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 485698619, 'comment_body': '...users can specify...', 'comment_created': datetime.datetime(2020, 9, 9, 15, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 485701537, 'comment_body': ""I think we discussed before, but the units should probably be written as 'erg / s' rather than 'Hz erg'"", 'comment_created': datetime.datetime(2020, 9, 9, 15, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 485717001, 'comment_body': 'Should probably specify here what FILTER_MODES[0] actually is', 'comment_created': datetime.datetime(2020, 9, 9, 15, 47, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 485722468, 'comment_body': ""here's the unit thing Mark mentioned above again - erg/s/Angstrom"", 'comment_created': datetime.datetime(2020, 9, 9, 15, 55, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jamesgillanders', 'type': 'User'}, {'comment_id': 486385105, 'comment_body': 'Can we add a description of exactly what this test is looking for and what constitutes a fail?', 'comment_created': datetime.datetime(2020, 9, 10, 14, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 486718535, 'comment_body': 'Use (erg / s / Angstrom)', 'comment_created': datetime.datetime(2020, 9, 11, 1, 20, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ycamacho', 'type': 'User'}, {'comment_id': 486722319, 'comment_body': 'I think this is ok since FILTER_MODES are defined in line 30 which specify that FILTER_MODES[0] are packet_out_nu/emitted packets.', 'comment_created': datetime.datetime(2020, 9, 11, 1, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ycamacho', 'type': 'User'}, {'comment_id': 486724194, 'comment_body': 'erg / s / Angstrom', 'comment_created': datetime.datetime(2020, 9, 11, 1, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ycamacho', 'type': 'User'}, {'comment_id': 486730368, 'comment_body': 'I am assuming that this line is for the plot slider under the spectrum plot. If so, it seems like you do not chose the wavelength range of this plot. Is this correct?\r\n<img width=""688"" alt=""Screen Shot 2020-09-10 at 9 53 45 PM"" src=""https://user-images.githubusercontent.com/4721877/92842407-85562e00-f3b1-11ea-9453-7076a20498d0.png"">\r\n\r\nThe reason I ask is because the current plot has a wavelength range that extends past the spectrum (the red circle in the picture). There is a range key in rangeslider that might fix this (https://plotly.com/python/reference/layout/xaxis/#layout-xaxis-rangeslider-range). If this isn\'t an easy fix please don\'t worry - it\'s a minor issue.', 'comment_created': datetime.datetime(2020, 9, 11, 2, 4, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ycamacho', 'type': 'User'}, {'comment_id': 488186735, 'comment_body': ""It's right next in following line (see line 21)"", 'comment_created': datetime.datetime(2020, 9, 14, 20, 0, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 488188275, 'comment_body': 'Yes I agree with @ycamacho and in built api docs, the class properties are also enlisted so it will be clear for readers!', 'comment_created': datetime.datetime(2020, 9, 14, 20, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 488188758, 'comment_body': 'Yes this was written way earlier before I changed the units, good catch - fixed it now!', 'comment_created': datetime.datetime(2020, 9, 14, 20, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 488243176, 'comment_body': ""Yes I didn't chose the range. The problem is actually not with rangeslider but because the hidden scatter point which bring box selection lies on rightes edge of plot due to using wavelength[0] and luminosity[0]. Plotly tends to add padding (extra space) around it, hence it looks odd as if it's due to extended range of spectrum. There's an already [open issue](https://github.com/plotly/plotly.js/issues/1775) for it and it's not yet have been worked upon.\r\n\r\nThough I've managed to fix it by a workaround i.e. calculating an index which brings this single hidden scatter point in exact middle so that extra padding around has no effect. \r\n\r\n![Screenshot from 2020-09-15 03-32-41](https://user-images.githubusercontent.com/36361463/93142708-320f1300-f704-11ea-958a-62d82faabc17.png)\r\n"", 'comment_created': datetime.datetime(2020, 9, 14, 21, 56, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}]","[{'commit_sha': 'bf48350ea45cff436467f34e7ddc1377cfb11884', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b8705cb31f2233b19606a3194b4cbd10fa373ff', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01e01dd749073c9918fc019267db29b6be616669', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '943be36b1053576c6988616773b62968fdb7725b', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ccb827f7d2e2bf0b81ebaf3eca42c1a6eb68bff', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc791b4cc03fd435c987298affc778405873a112', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f87d92256b720d700b5b6150839fb2e6b3fca564', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd940af7c1d511389afe360d34ea546c0a4e8ab5e', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd28eb2be0ea267af8d391e69fb2a0da6b7f1a029', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6f5a6ff0b3cca84c3908146e46f3cc1fb8ec942', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70fe47b755968f6d58663243cb75f7c9320255ed', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc7b2ab8521cc022864e3e2388a663a750f8dbe2', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a36e6fd1af0570998e9c4f264020d7474bc3ee5', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55597752ab8bf3e2c49047da6d24880e9270d5b8', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b71fe696e6ac3b1881d49bf0fade77e1b3e19230', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e67efd85431be3c5c15fd433d7d760583fcbf590', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29e59bbc88a75ec8106b2a1b7f7983cf845cec41', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da8819bccaad93d4ccfc6aaa591ceee16a14368', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64655298f287275faef55f05d8ec84a78d62c154', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57274e4b425bb1268d8cfff92a36fd69191a8572', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eb72395733abd984a7654396aa70ddeb475c531', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '208573d4699c21e1e557fd776ba5593b248adc90', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6bd47dbfabf26ad5cc2ac1c2ada7c399ff14acd', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c01462e7bdc83a2cddc5fba1e8e6448b346203e', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b54358bdc130b3df4b0aaebb6c6b143a692a55ad', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
470207791,Add widgets documentation to tardis docs,"It adds documentation of widgets to tardis docs by creating a directory `tardis_widgets` having:
- `using_widgets.rst` - For description about how to use widgets and their features
- `generating_widgets.ipynb` - Demo notebook to generate widgets

> Note: This PR is branched on PR#1264, so should only be merged after #1264 gets merged",True,1280,https://api.github.com/repos/tardis-sn/tardis/pulls/1280,https://github.com/tardis-sn/tardis/pull/1280,closed,10949,6711,11,11,2,22,0,0,[],2020-08-19 14:35:08+00:00,2020-09-29 15:11:41+00:00,3544593.0,"41 days, 0:36:33","[{'comment_id': 473118258, 'comment_body': '""of the model supernova ejecta""', 'comment_created': datetime.datetime(2020, 8, 19, 15, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 473118862, 'comment_body': '""tables to the right of it""\r\n\r\n""Each table has the following information""', 'comment_created': datetime.datetime(2020, 8, 19, 15, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 473123258, 'comment_body': '""for each cell...of the model supernova ejecta""\r\n\r\n""Shell numbers are given in ascending order, from the innermost shell to the outermost."" ', 'comment_created': datetime.datetime(2020, 8, 19, 15, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 473127427, 'comment_body': '""explore the atomic lines responsible for producing features in the simulated spectrum""', 'comment_created': datetime.datetime(2020, 8, 19, 15, 43, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 473127534, 'comment_body': 'Fractional (mass) abundance', 'comment_created': datetime.datetime(2020, 8, 19, 15, 43, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ycamacho', 'type': 'User'}, {'comment_id': 473129318, 'comment_body': '""display a table giving the fraction of packets that experienced their last interaction with each element.""', 'comment_created': datetime.datetime(2020, 8, 19, 15, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 473129547, 'comment_body': '""by the emitted...""', 'comment_created': datetime.datetime(2020, 8, 19, 15, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 473129801, 'comment_body': 'Fractional (mass) abundance', 'comment_created': datetime.datetime(2020, 8, 19, 15, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ycamacho', 'type': 'User'}, {'comment_id': 473130225, 'comment_body': 'Clicking on a row in ""species abundance"" table reveals packet counts for each last line interaction. These packet counts can be grouped by excitation lines, de-excitation lines or both, using the dropdown (arrow?, menu?).', 'comment_created': datetime.datetime(2020, 8, 19, 15, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ebjordi', 'type': 'User'}, {'comment_id': 473130455, 'comment_body': 'Fractional (mass) abundance', 'comment_created': datetime.datetime(2020, 8, 19, 15, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ycamacho', 'type': 'User'}, {'comment_id': 473132138, 'comment_body': '... specify range on the wavelength axis', 'comment_created': datetime.datetime(2020, 8, 19, 15, 49, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ebjordi', 'type': 'User'}, {'comment_id': 473132649, 'comment_body': '""drag on the figure and a pink""\r\n\r\nI would remove the next sentence and just put: ""Make a selection across the wavelength range you\'re interested in and the line info table will update to show only packets from this region""', 'comment_created': datetime.datetime(2020, 8, 19, 15, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 473133163, 'comment_body': 'Use either ""since"" or ""so"" using both is redundant.', 'comment_created': datetime.datetime(2020, 8, 19, 15, 51, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ebjordi', 'type': 'User'}, {'comment_id': 473133628, 'comment_body': 'I would change this paragraph to ""The rangeslider is a long bar below the figure that allows you to zoom into particular wavelength regions.""', 'comment_created': datetime.datetime(2020, 8, 19, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 473134249, 'comment_body': 'feature in *the* spectrum', 'comment_created': datetime.datetime(2020, 8, 19, 15, 53, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ebjordi', 'type': 'User'}, {'comment_id': 473141487, 'comment_body': '<p>""TARDIS widgets that allows...""</p><p> </p><p>""This notebook represents a quick-start tutorial, but more detail on each widget (and its features) is giving in the Using TARDIS Widgets section of the documentation""</p>\n<br/>\n\n _Reply via <a href=\'https://app.reviewnb.com/tardis-sn/tardis/pull/1280/discussion/\'>ReviewNB</a>_ <div id=\'ReviewNBCommentContext-DoNotDelete\' style=\'display:none\' data-state=\'RESOLVED\' data-cellIndex=\'0\'/>', 'comment_created': datetime.datetime(2020, 8, 19, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 473141489, 'comment_body': '<p>TARDIS, for consistency</p><p> </p><p>""as an HDF""</p>\n<br/>\n\n _Reply via <a href=\'https://app.reviewnb.com/tardis-sn/tardis/pull/1280/discussion/\'>ReviewNB</a>_ <div id=\'ReviewNBCommentContext-DoNotDelete\' style=\'display:none\' data-state=\'RESOLVED\' data-cellIndex=\'9\'/>', 'comment_created': datetime.datetime(2020, 8, 19, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 473141491, 'comment_body': ""<p>By selecting a wavelength range on the spectrum plot, you can see the species responsible for producing the features within that range. This is determined by counting the number of escaping packets that experienced their last interaction with each ion. Packets can be filtered by the wavelength at which they were absorbed or emitted. You can then click on each species to see the packets counts for specific lines. These can be grouped in several ways. </p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/tardis-sn/tardis/pull/1280/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='RESOLVED' data-cellIndex='11'/>"", 'comment_created': datetime.datetime(2020, 8, 19, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}, {'comment_id': 485681182, 'comment_body': '...to zoom in on a...', 'comment_created': datetime.datetime(2020, 9, 9, 14, 59, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jamesgillanders', 'type': 'User'}, {'comment_id': 485681812, 'comment_body': '... a rectangular zoom...', 'comment_created': datetime.datetime(2020, 9, 9, 14, 59, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jamesgillanders', 'type': 'User'}, {'comment_id': 485682029, 'comment_body': 'which may be helpful', 'comment_created': datetime.datetime(2020, 9, 9, 15, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jamesgillanders', 'type': 'User'}, {'comment_id': 494313451, 'comment_body': '...table(s) to the right of it.', 'comment_created': datetime.datetime(2020, 9, 24, 13, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MarkMageeAstro', 'type': 'User'}]","[{'commit_sha': '4fed5af3919a63653c59d63f54cf571719bd9fa8', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edb4fad1c3cfbd1b4d51882b80a16f4e8ab65a29', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c22464721d31ada32c72157e46d6bc85580f0a35', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2d8dbe1107192e2904fca2af92d9fb4dbc02442', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd78da1b96ef9b7adede48e5daa6597254f904e7f', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '060556492411efd8996cae97d1742d7a291a4c1e', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '368fa97e130af44d069bd479fa7df02a9e593fcd', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbfe12b086d7961bdbc192db963340d04c60ff86', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '910b73c7b5a9098cf883a59a2d6447728a1e45b4', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44f0b0f0a936d3357b25ec1e424b00a4832bf24b', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '623f041de331dfac82c6352ab70662a9c7f4b0c1', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
439529620,Code style black,Switching code-style to black - one `subpackage` at a time. ,True,1201,https://api.github.com/repos/tardis-sn/tardis/pulls/1201,https://github.com/tardis-sn/tardis/pull/1201,closed,5078,3191,78,16,1,13,0,0,[],2020-06-24 21:29:41+00:00,2020-06-26 19:14:43+00:00,164702.0,"1 day, 21:45:02","[{'comment_id': 446328746, 'comment_body': '```suggestion\r\n        f""Atom Data {fname} is not found in current path or in TARDIS data repo. {atom_data_name} ""\r\n        ""is also not a standard known TARDIS atom dataset.""\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 17, 54, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 446329636, 'comment_body': '```suggestion\r\n            logger.critical(f""No config file named: {fname}"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 17, 56, 29, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 446330661, 'comment_body': '```suggestion\r\n        f""Atom Data {fname} is not found in current path or in TARDIS data repo. {atom_data_name} ""\r\n        ""is also not a standard known TARDIS atom dataset.""\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 17, 58, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 446331880, 'comment_body': '```suggestion\r\n            logger.critical(f""No config file named: {fname}"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 18, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 446333802, 'comment_body': '```suggestion\r\n            nuclear_symbol = f""{nucname.name(atomic_number)}{mass_number}""\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 18, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 446337863, 'comment_body': '```suggestion\r\n    with open(dst, ""ab"") as f:\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 18, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 446339645, 'comment_body': 'need to change that. ', 'comment_created': datetime.datetime(2020, 6, 26, 18, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 446341581, 'comment_body': '```suggestion\r\n    latex_formula = (r""\\Big(\\dfrac{2\\pi m_{e}/\\beta_{\\textrm{rad}}}{h^2}\\Big)^{3/2}"",)\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 18, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 446342700, 'comment_body': '```suggestion\r\n        r""\\Big(\\dfrac{2\\pi m_{e}/\\beta_{\\textrm{electron}}}{h^2}\\Big)^{3/2}"",\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 18, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 446346786, 'comment_body': '```suggestion\r\n        #        normalised = helium_population.mul(number_density.ix[2] / unnormalised)\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 18, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 446349170, 'comment_body': '```suggestion\r\n                ""Both coronal approximation and classical nebular specified in the config.""\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 18, 39, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 446349185, 'comment_body': '```suggestion\r\n            logger.info(f""Calculating rates for species {species}"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 18, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 446352883, 'comment_body': '```suggestion\r\n        raise ValueError(f""radiative_rates_type type unknown - {config.plasma.radiative_rates_type}"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 18, 47, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}]","[{'commit_sha': '57a606105a12a36de731a9e95433e20942021cf7', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c2f12f996ffc5985cfaf40fad6a4f93ac40182e', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceac910fc4879b2eb4aaa38e4ed67eecbd723a31', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cbf62e594bb0205d0f3275be8e0fc219ccb481b', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '845918a3a815593acaf78a8d08402c3525b6c165', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '796ed86ca47eb504511769807cee8f0f21df95c0', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c05f98346d1bbf125c75462c8473b592e53a616f', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7627cda7da5b1259f62f4a25c6c57d4d0e72b64e', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '941d837d9ca1dd4d2d3f92e0090bb112deed2484', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25d45c2a8453bc762b3db22be4b79963d77e3d0f', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '421234a606d514dcc81af5509141857f54623b03', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d537d0ee7a0b387d7ccc553b62f0aba016620d0', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23a7eefc9cb435d3309ebfada5a00a3b44df6b00', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a5ad8763b46c5274f8bd037b2499045d55c06ba', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eea405d45916a1dc274e2b5288d5f262f32ebb97', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c624b474a1574576754db40f700c58d77c7db5d4', 'committer_username': 'wkerzendorf', 'committer_name': 'Wolfgang Kerzendorf', 'committer_email': None, 'commit_date': datetime.datetime(2010, 12, 2, 5, 11, 8, tzinfo=datetime.timezone.utc)}]",Wolfgang Kerzendorf,506116,,User,,91,,9,89
442262902,Re-applied Black formatting to tardis after excluding undesired directories,"<!--- Provide a general summary of your changes in the Title above -->
This PR aims to exclude undesired directories from black formatting. When running black, there are still 10 files which were formatted blacked (which were not covered earlier run, because it was run not on root of project but inside `tardis/`).

A brief summary of changes in each file are:
- `pyproject.toml` - Added directories to exclude from black (including `astropy_helpers` which was being formatted by black)
- `tardis_env3.yml` - Added black as a code quality dependency, so that it is already installed in a new tardis environment
- 10 files formatted by black are distributed as follows:
  - `tardis/plasma/` - 2 files - they are actually one line changes, made by us @wkerzendorf when editing strings - those strings were quite long, so black line-breaked them as expected :white_check_mark: 
  - `docs/` - There are 4 python files inside it
  - `asv/` - 1 file
  - `ah_bootstrap.py`, `setup.py`, `ez_setup.py` are remaining 3 at root directory.

## Motivation and Context
Related #1201 

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, tests ran to see how -->
<!--- your change affects other areas of the code, etc. -->
They're only formatting changes so ideally they shouldn't break the code. And if test pipeline pass, they are good to merge.
",True,1213,https://api.github.com/repos/tardis-sn/tardis/pulls/1213,https://github.com/tardis-sn/tardis/pull/1213,closed,180,81,8,4,2,6,0,0,[],2020-06-30 20:01:20+00:00,2020-07-29 13:50:49+00:00,2483369.0,"28 days, 17:49:29","[{'comment_id': 447949633, 'comment_body': '```suggestion\r\n                \'perl: warning: Falling back to the standard locale (""C"").\'\r\n```', 'comment_created': datetime.datetime(2020, 6, 30, 20, 9, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 447952128, 'comment_body': ""Unicode string doesn't make sense in Python 3.6+, so black removes them:\r\n> if your code is already Python 3.6+ only or itâ€™s using the unicode_literals future import, Black will remove u from the string prefix as it is meaningless in those scenarios."", 'comment_created': datetime.datetime(2020, 6, 30, 20, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 447953033, 'comment_body': '```suggestion\r\n    log.warn(f""Extracting in {tmpdir}"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 30, 20, 16, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 447953317, 'comment_body': '```suggestion\r\n        log.warn(f""Now working in {subdir}"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 30, 20, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 447953625, 'comment_body': '```suggestion\r\n    log.warn(f""Extracting in {tmpdir}"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 30, 20, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}, {'comment_id': 447953882, 'comment_body': '```suggestion\r\n        log.warn(f""Now working in {subdir}"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 30, 20, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jaladh-singhal', 'type': 'User'}]","[{'commit_sha': '1dd138e838b385f48fea61c7ecedd1fd5a922c89', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a93016a1d5bf9db2263b1bb0b4d7bc040f9222d', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98bf7bdf508492261c5bf9310af1b47fffc1afaf', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2de4c4a298ada4370f044f320be48446be6fd14', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
449142548,Add new Contribution guidelines,"This contribution guidelines page is specifically written in informal way to get a new contributor motivated. Besides, it's purposedly kept short-average length (pointing to other guidelines where required) to not to overwhelm new contributor. A good checklist to cross-check what I have written here can be [tips in this article](https://opensource.com/life/16/3/contributor-guidelines-template-and-tips) - let me know what did I miss and any other improvements.

Demo of how this looks after rendering: https://github.com/jaladh-singhal/tardis/blob/contrib-guide/CONTRIBUTING.md

## To-dos
- [ ] Create issue for creating doc pages/guidelines for void links i.e marked by `#` only
- [ ] Create issue for updating [running tests guidelines](https://tardis-sn.github.io/tardis/development/running_tests.html) (i.e. outdated) which is used here
- [ ] Put the removed commit message guidelines at somewhere else, let me know where?",True,1237,https://api.github.com/repos/tardis-sn/tardis/pulls/1237,https://github.com/tardis-sn/tardis/pull/1237,closed,38,74,3,5,1,2,0,0,[],2020-07-14 22:21:15+00:00,2020-07-15 14:17:49+00:00,57394.0,15:56:34,"[{'comment_id': 455041013, 'comment_body': ""```suggestion\r\nIf you find TARDIS helpful, you can share it with your peers, colleagues, and anyone who can benefit from TARDIS. If you've used TARDIS in your research, please make sure to cite us (https://tardis-sn.github.io/tardis/credits.html). By telling other people about how we helped you, you'll help us in turn, in extending our impact. And we would absolutely love it if you give us a shout-out on [twitter](https://twitter.com/tardis_sn/)!\r\n```"", 'comment_created': datetime.datetime(2020, 7, 15, 13, 14, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}, {'comment_id': 455041648, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 15, 13, 15, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wkerzendorf', 'type': 'User'}]","[{'commit_sha': 'acd51b8faa08d0621aa84d945916381df0e83b56', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b75d7903758fc9ec9c7034ee3312cca5089e95e', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8f54f5c6237457cbd31917616229a6e49ecc7b8', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '611cd9dc2cac5d8db747c5ccb7f032c813ce36c0', 'committer_username': 'marxwillia', 'committer_name': 'Marc Williamson', 'committer_email': None, 'commit_date': datetime.datetime(2012, 4, 3, 8, 17, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb08a2ea25bbe836c8f687edc50d66cfaf88e19b', 'committer_username': 'marxwillia', 'committer_name': 'Marc Williamson', 'committer_email': None, 'commit_date': datetime.datetime(2012, 4, 3, 8, 17, 31, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
458001358,Fix how virtual_packet properties are saved in hdf,"This PR makes sure that vpacket logging status is determined at run-time, thus removes any need of saving to a config file.

## Description
<!--- Describe your changes in detail -->
- Removes all `vpacket_logging.yml` config file creation code implemented in #967
- Uses `runner.virt_logging` to check if vpacket logging is enabled or not within hdf

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
Fixes #1246 

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, tests ran to see how -->
<!--- your change affects other areas of the code, etc. -->
- Saved simulation to hdf file with vpacket-logging enabled, all `vpacket_hdf_properties` get saved.
- Saved simulation to hdf file with vpacket-logging disabled, none of the `vpacket_hdf_properties` get saved.

## Screenshots (if appropriate):

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My code follows the code style of this project.
- [ ] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly.
- [x] I have assigned/requested two reviewers for this pull request.
",True,1254,https://api.github.com/repos/tardis-sn/tardis/pulls/1254,https://github.com/tardis-sn/tardis/pull/1254,closed,10,23,4,2,1,0,0,0,[],2020-07-28 19:19:38+00:00,2020-09-02 12:51:18+00:00,3087100.0,"35 days, 17:31:40",[],"[{'commit_sha': '21e79b7e5e0b2a042c097d62168be46b0be5531a', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03ce0b81ea37a0996e0681d92524e8ba24e5b5a9', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
410273033,Added more file types to git ignore,"There are several filetypes that should go in `.gitignore` to prevent the developer mistakenly committing undesired files - so I've added following, which I encountered:
1. `.ipynb_checkpoints/` - It gets generated when any notebook present in repository is executed locally.
2. `.eggs/` - The dir which contain all `.egg` files and a README.txt (describing what it is purpose of it) - though `.egg` files are already ignored but not this readme file, so I ignored the entire dir
3. `docs/api` - It contains API docs which get auto-generated each time when building docs - they are around 64 files which need not to be committed as the docs pipeline automatically generates them on each build.",True,1139,https://api.github.com/repos/tardis-sn/tardis/pulls/1139,https://github.com/tardis-sn/tardis/pull/1139,closed,3,0,1,1,0,0,0,0,[],2020-04-28 18:00:06+00:00,2020-04-28 19:24:35+00:00,5069.0,1:24:29,[],"[{'commit_sha': 'b0754dc305af615d4343b3352fef9dac453fa6e2', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
418727347,Git ignored VSCode specific files,It will be helpful for the users who use VSCode for developing (like me).,True,1151,https://api.github.com/repos/tardis-sn/tardis/pulls/1151,https://github.com/tardis-sn/tardis/pull/1151,closed,4,0,1,1,0,0,0,0,[],2020-05-15 17:59:40+00:00,2020-05-20 13:16:02+00:00,414982.0,"4 days, 19:16:22",[],"[{'commit_sha': 'e9cce0f2a268d7c09c6001e3a561118fdcea5fd7', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
448464921,Fix kromer plot producing double plots in interactive mode,"## Why this issue happens:
After trying several things I realized, the problem due to which kromer plot is producing two plots is reproducible to this minimal version:
```
def genplot(ax=None):
    if ax is None:
        ax = plt.figure().add_subplot(111)
    ax.plot([1, 2, 3])
    return plt.gcf()
```
In interactive mode, any operation done with `plt` will automatically show the plots [as described here](https://realpython.com/python-matplotlib-guide/#appendix-b-interactive-mode). Besides when the matplotlib `figure` object is returned by the function, it also gets shown in interactive context and hence two plots.

## Solution: Return Axes instead of Figure
Based on several SO threads ([like this](https://stackoverflow.com/questions/48129222/matplotlib-make-plots-in-functions-and-then-add-each-to-a-single-subplot-figure)), the right way to return a matplotlib plot for further manipulation is to return its `axes`. This approach is also what popular matplotlib-based library **seaborn** uses, for e.g. see [their line plot API](https://seaborn.pydata.org/generated/seaborn.lineplot.html#seaborn.lineplot).

Besides, since `generate_plot` in `tardis_kromer_plot` provides user an option to pass `axes` object on which plot needs to be drawn, so it makes more sense to return back `axes` object because that is what user will use to make any manipulations (if any).

## Changes made
- Changed `generate_plot()` to return `gca()` instead of `gcf()`
- Added how to display figure in non-interactive mode which was missing from `instructions.md` along with some edits to correct wrong markdown syntax.",True,34,https://api.github.com/repos/tardis-sn/tardisanalysis/pulls/34,https://github.com/tardis-sn/tardisanalysis/pull/34,closed,28,37,2,2,0,0,0,0,[],2020-07-13 20:13:15+00:00,2020-10-01 13:00:05+00:00,6886010.0,"79 days, 16:46:50",[],"[{'commit_sha': 'b1c2c5b7bd5ba89e06fe7eaa4cd486182113a542', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0defe364dfb236e363d82a06791bc3a35fe6d77e', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41
418189119,Made plot size larger in quickstart notebook,,True,1149,https://api.github.com/repos/tardis-sn/tardis/pulls/1149,https://github.com/tardis-sn/tardis/pull/1149,closed,2,1,1,1,1,0,0,0,[],2020-05-14 19:00:14+00:00,2020-05-20 13:15:19+00:00,497705.0,"5 days, 18:15:05",[],"[{'commit_sha': 'f6e8d4a890c9b539c6bf41ae086a123b481a4fd8', 'committer_username': 'jaladh-singhal', 'committer_name': 'Jaladh Singhal', 'committer_email': 'jaladhsinghal@gmail.com', 'commit_date': datetime.datetime(2018, 2, 11, 9, 19, 36, tzinfo=datetime.timezone.utc)}]",Jaladh Singhal,36361463,jaladhsinghal@gmail.com,User,,38,,51,41

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
2938270,tardis,tardis-sn/tardis,Python,404,198,32,104,4662,184,76,22,"[{'id': 985228960, 'number': 2082, 'closed': datetime.datetime(2022, 7, 8, 17, 59, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 1, 18, 12, 1, tzinfo=datetime.timezone.utc), 'time_taken': 604069.0, 'time_delta': '6 days, 23:47:49', 'additions': 10, 'deletions': 2, 'state': 'closed'}, {'id': 696049891, 'number': 1752, 'closed': datetime.datetime(2022, 1, 11, 19, 50, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 16, 7, 2, tzinfo=datetime.timezone.utc), 'time_taken': 14874235.0, 'time_delta': '172 days, 3:43:55', 'additions': 693, 'deletions': 0, 'state': 'closed'}, {'id': 691678146, 'number': 1737, 'closed': datetime.datetime(2021, 7, 20, 21, 58, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 18, 42, 46, tzinfo=datetime.timezone.utc), 'time_taken': 357343.0, 'time_delta': '4 days, 3:15:43', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 645814921, 'number': 1574, 'closed': datetime.datetime(2021, 5, 17, 12, 18, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 17, 12, 18, 28, tzinfo=datetime.timezone.utc), 'time_taken': 25.0, 'time_delta': '0:00:25', 'additions': 5, 'deletions': 10, 'state': 'closed'}, {'id': 580937205, 'number': 1469, 'closed': datetime.datetime(2021, 3, 30, 19, 40, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 26, 15, 24, 31, tzinfo=datetime.timezone.utc), 'time_taken': 2780145.0, 'time_delta': '32 days, 4:15:45', 'additions': 21, 'deletions': 1, 'state': 'closed'}, {'id': 575903015, 'number': 1462, 'closed': datetime.datetime(2021, 2, 24, 16, 11, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 18, 18, 42, 5, tzinfo=datetime.timezone.utc), 'time_taken': 509394.0, 'time_delta': '5 days, 21:29:54', 'additions': 376, 'deletions': 227, 'state': 'closed'}, {'id': 572724980, 'number': 1458, 'closed': datetime.datetime(2021, 2, 16, 21, 12, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 19, 12, 27, tzinfo=datetime.timezone.utc), 'time_taken': 352817.0, 'time_delta': '4 days, 2:00:17', 'additions': 113, 'deletions': 53, 'state': 'closed'}, {'id': 572557440, 'number': 1457, 'closed': datetime.datetime(2021, 2, 12, 15, 4, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 14, 30, 21, tzinfo=datetime.timezone.utc), 'time_taken': 2031.0, 'time_delta': '0:33:51', 'additions': 55, 'deletions': 55, 'state': 'closed'}, {'id': 564191911, 'number': 1442, 'closed': datetime.datetime(2021, 2, 1, 18, 59, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 29, 19, 34, 18, tzinfo=datetime.timezone.utc), 'time_taken': 257091.0, 'time_delta': '2 days, 23:24:51', 'additions': 14, 'deletions': 5, 'state': 'closed'}, {'id': 564163081, 'number': 1441, 'closed': datetime.datetime(2021, 1, 29, 19, 26, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 29, 18, 36, 47, tzinfo=datetime.timezone.utc), 'time_taken': 2973.0, 'time_delta': '0:49:33', 'additions': 36, 'deletions': 36, 'state': 'closed'}, {'id': 564000632, 'number': 1438, 'closed': datetime.datetime(2021, 2, 11, 22, 43, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 29, 13, 54, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1154896.0, 'time_delta': '13 days, 8:48:16', 'additions': 1002176, 'deletions': 11, 'state': 'closed'}, {'id': 561985326, 'number': 1424, 'closed': datetime.datetime(2021, 1, 28, 15, 6, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 26, 18, 48, 55, tzinfo=datetime.timezone.utc), 'time_taken': 159454.0, 'time_delta': '1 day, 20:17:34', 'additions': 43, 'deletions': 36, 'state': 'closed'}, {'id': 532537709, 'number': 1366, 'closed': datetime.datetime(2020, 12, 4, 19, 50, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 4, 13, 33, 47, tzinfo=datetime.timezone.utc), 'time_taken': 22588.0, 'time_delta': '6:16:28', 'additions': 77, 'deletions': 69, 'state': 'closed'}, {'id': 518566980, 'number': 1340, 'closed': datetime.datetime(2020, 11, 10, 18, 45, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 10, 15, 23, 29, tzinfo=datetime.timezone.utc), 'time_taken': 12111.0, 'time_delta': '3:21:51', 'additions': 67, 'deletions': 59, 'state': 'closed'}, {'id': 512347914, 'number': 1335, 'closed': datetime.datetime(2020, 11, 3, 20, 37, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 29, 15, 12, 13, tzinfo=datetime.timezone.utc), 'time_taken': 451497.0, 'time_delta': '5 days, 5:24:57', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 497826694, 'number': 1313, 'closed': datetime.datetime(2020, 10, 5, 16, 43, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 5, 12, 44, 15, tzinfo=datetime.timezone.utc), 'time_taken': 14368.0, 'time_delta': '3:59:28', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 486844546, 'number': 1300, 'closed': datetime.datetime(2020, 11, 4, 15, 54, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 14, 19, 48, 32, tzinfo=datetime.timezone.utc), 'time_taken': 4392357.0, 'time_delta': '50 days, 20:05:57', 'additions': 4, 'deletions': 9, 'state': 'closed'}, {'id': 470207791, 'number': 1280, 'closed': datetime.datetime(2020, 9, 29, 15, 11, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 14, 35, 8, tzinfo=datetime.timezone.utc), 'time_taken': 3544593.0, 'time_delta': '41 days, 0:36:33', 'additions': 10949, 'deletions': 6711, 'state': 'closed'}, {'id': 463391059, 'number': 1264, 'closed': datetime.datetime(2020, 9, 21, 17, 57, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 13, 39, 24, tzinfo=datetime.timezone.utc), 'time_taken': 4076273.0, 'time_delta': '47 days, 4:17:53', 'additions': 1405, 'deletions': 104, 'state': 'closed'}, {'id': 458001358, 'number': 1254, 'closed': datetime.datetime(2020, 9, 2, 12, 51, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 19, 19, 38, tzinfo=datetime.timezone.utc), 'time_taken': 3087100.0, 'time_delta': '35 days, 17:31:40', 'additions': 10, 'deletions': 23, 'state': 'closed'}, {'id': 451473010, 'number': 1241, 'closed': datetime.datetime(2020, 12, 21, 15, 22, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 21, 25, 2, tzinfo=datetime.timezone.utc), 'time_taken': 13543022.0, 'time_delta': '156 days, 17:57:02', 'additions': 1224, 'deletions': 6, 'state': 'closed'}, {'id': 449142548, 'number': 1237, 'closed': datetime.datetime(2020, 7, 15, 14, 17, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 14, 22, 21, 15, tzinfo=datetime.timezone.utc), 'time_taken': 57394.0, 'time_delta': '15:56:34', 'additions': 38, 'deletions': 74, 'state': 'closed'}, {'id': 442262902, 'number': 1213, 'closed': datetime.datetime(2020, 7, 29, 13, 50, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 20, 1, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2483369.0, 'time_delta': '28 days, 17:49:29', 'additions': 180, 'deletions': 81, 'state': 'closed'}, {'id': 439515995, 'number': 1200, 'closed': datetime.datetime(2020, 6, 26, 19, 7, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 21, 11, 12, tzinfo=datetime.timezone.utc), 'time_taken': 165357.0, 'time_delta': '1 day, 21:55:57', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 434713803, 'number': 1187, 'closed': datetime.datetime(2020, 10, 29, 14, 43, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 18, 53, 59, tzinfo=datetime.timezone.utc), 'time_taken': 11735357.0, 'time_delta': '135 days, 19:49:17', 'additions': 43662, 'deletions': 0, 'state': 'closed'}, {'id': 423881316, 'number': 1166, 'closed': datetime.datetime(2020, 6, 23, 23, 18, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 27, 14, 14, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2365463.0, 'time_delta': '27 days, 9:04:23', 'additions': 7469, 'deletions': 0, 'state': 'closed'}, {'id': 418727347, 'number': 1151, 'closed': datetime.datetime(2020, 5, 20, 13, 16, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 15, 17, 59, 40, tzinfo=datetime.timezone.utc), 'time_taken': 414982.0, 'time_delta': '4 days, 19:16:22', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 418189119, 'number': 1149, 'closed': datetime.datetime(2020, 5, 20, 13, 15, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 14, 19, 0, 14, tzinfo=datetime.timezone.utc), 'time_taken': 497705.0, 'time_delta': '5 days, 18:15:05', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 417583668, 'number': 1146, 'closed': datetime.datetime(2020, 6, 22, 15, 47, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 13, 20, 5, 5, tzinfo=datetime.timezone.utc), 'time_taken': 3440564.0, 'time_delta': '39 days, 19:42:44', 'additions': 1921, 'deletions': 0, 'state': 'closed'}, {'id': 410331575, 'number': 1140, 'closed': datetime.datetime(2020, 4, 28, 20, 4, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 28, 20, 4, 28, tzinfo=datetime.timezone.utc), 'time_taken': 23.0, 'time_delta': '0:00:23', 'additions': 64010, 'deletions': 0, 'state': 'closed'}, {'id': 410273033, 'number': 1139, 'closed': datetime.datetime(2020, 4, 28, 19, 24, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 28, 18, 0, 6, tzinfo=datetime.timezone.utc), 'time_taken': 5069.0, 'time_delta': '1:24:29', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 391233580, 'number': 1107, 'closed': datetime.datetime(2020, 3, 23, 4, 43, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 19, 20, 56, 39, tzinfo=datetime.timezone.utc), 'time_taken': 287221.0, 'time_delta': '3 days, 7:47:01', 'additions': 64010, 'deletions': 0, 'state': 'closed'}, {'id': 294187351, 'number': 947, 'closed': datetime.datetime(2019, 7, 3, 15, 50, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 3, 14, 9, 34, tzinfo=datetime.timezone.utc), 'time_taken': 6052.0, 'time_delta': '1:40:52', 'additions': 2, 'deletions': 8043, 'state': 'closed'}]"
41357355,tardisanalysis,tardis-sn/tardisanalysis,Python,16,5,18,13,103,4,5,0,"[{'id': 448464921, 'number': 34, 'closed': datetime.datetime(2020, 10, 1, 13, 0, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 20, 13, 15, tzinfo=datetime.timezone.utc), 'time_taken': 6886010.0, 'time_delta': '79 days, 16:46:50', 'additions': 28, 'deletions': 37, 'state': 'closed'}]"
