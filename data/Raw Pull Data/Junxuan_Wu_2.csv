pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
691644007,Clone a Virtual Machine,"### Description/Report

This PR adds a Clone VM feature at the API level (as part of GSoC project #4818), which enables the creation of a fully-cloned virtual machine with ROOT / DATA disks, and the same system configuration as the original VM. (Currently Supported for KVM hypervisor only)

Steps involved: 
1. Creation of temporary snapshots (during the clone VM operation) for both ROOT
2. Creation of template from the ROOT disk snapshot
3. Create a new VM from the template created in step 2
4. Automatic assignment of new network resources for the new Cloned VM
5. Creation of temporary snapshots for data disk
6. Create data disk Volume from the snapshots created in step 5
7. Newly created DATA disk created in step 6 is attached to the new VM
8. Cleanup of temporary resources (snapshots) and error handling of the clone VM process

Note: The template created in step 2 cannot be cleaned up as the newly created clone VM uses this template

Feature included: 
- A new CloneVmCmd API interface to use this feature
- A clone button in the compute instance page supporting the related functionalities

### Documentation
- Documentation PR: https://github.com/apache/cloudstack-documentation/pull/236

### Types of changes

- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Enhancement (improves an existing feature and functionality)
- [ ] Cleanup (Code refactoring and cleanup, that may add test cases)

### Feature/Enhancement Scale or Bug Severity

#### Feature/Enhancement Scale

- [x] Major
- [ ] Minor

#### Bug Severity

- [ ] BLOCKER
- [ ] Critical
- [ ] Major
- [ ] Minor
- [ ] Trivial


### Screenshots (if appropriate):
![Clone Scene](https://github.com/atrocitytheme/atrocitytheme.github.io/blob/7428f0e73c980669a46202da124daca3bf958975/cloudstack.png?raw=true)

### How Has This Been Tested?
<!-- Please describe in detail how you tested your changes. -->
<!-- Include details of your testing environment, and the tests you ran to -->
<!-- see how your change affects other areas of the code, etc. -->
This has been manually tested with a mbx KVM setup on a local machine and mbx kvm setup on GCP

- This feature has been tested on a local Linux system with KVM support (5.3.0-64-generic Ubuntu) and Google Cloud instance (4.9.0-15-amd64 Debian)
- Try with cloudmonkey if the management server is running with default configurations.
```
cloneVirtualMachine virtualmachineid=<target_vm_id>
```
will start the cloning process, it'll create a new cloned VM and start it (with all copied data available), network Ip will be assigned to DB instantly and the actual VM will get this IP after a while
- When secondary system VM agents are not available, the cloning process will fail and clean the previously cloned resources
- It'll copy all the data disk content from the target VM no matter whether the data disks are mounted in the VM system or the VM is running
- Temporary resources created (snapshots) during the process will not remain whether the clone succeeds or not
- New smoke test has been added in test_vm_life_cycle.py with class TestCloneVM, which tests the clone of a VM with data disk attached.
- New unit test has been added as validateCloneCondition in the UserVmManagerImpl class
- Manual test of Clone: in the VM page, there's a clone VM button, click it and it'll clone a new VM if with the correct hypervisor setup. 
### GCP environment setup
- Create a GCP instance with nested virtualization enabled, for detailed requirements see: https://cloud.google.com/compute/docs/instances/nested-virtualization/overview
- After creating the instance, deploy a KVM host using mbx: https://github.com/shapeblue/mbx (centos7)
- Before deploying and configuring the cloudstack agent, enable the system nested kvm by: 
```
cat /sys/module/kvm_intel/parameters/nested
// if return N
sudo modprobe -r kvm_intel
sudo modprobe kvm_intel nested=1 
```
<!-- Please read the [CONTRIBUTING](https://github.com/apache/cloudstack/blob/main/CONTRIBUTING.md) document -->
",False,5216,https://api.github.com/repos/apache/cloudstack/pulls/5216,https://github.com/apache/cloudstack/pull/5216,closed,1118,91,21,139,54,52,14,0,"[{'name': 'component:management-server'}, {'name': 'component:api'}, {'name': 'component:usage-server'}, {'name': 'status:work-in-progress'}, {'name': 'component:networking'}, {'name': 'component:UI'}, {'name': 'Python'}, {'name': 'status:has-conflicts'}, {'name': 'component:marvin'}, {'name': 'status:needs-testing'}, {'name': 'status:wip'}, {'name': 'component:integration-test'}, {'name': 'gsoc2021'}, {'name': 'component:storage'}]",2021-07-16 17:31:41+00:00,2023-05-09 11:08:31+00:00,57173810.0,"661 days, 17:36:50","[{'comment_id': 677664438, 'comment_body': 'We could improve these logs with some context data and unify the catches.', 'comment_created': datetime.datetime(2021, 7, 27, 17, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 677665322, 'comment_body': 'We could improve these logs with some context data and unify the catches.', 'comment_created': datetime.datetime(2021, 7, 27, 17, 40, 11, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 677666233, 'comment_body': 'Do we need this import reorganization?', 'comment_created': datetime.datetime(2021, 7, 27, 17, 41, 25, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 677667323, 'comment_body': 'This method is extremely long, we could extract some code and add javadocs and unit tests.', 'comment_created': datetime.datetime(2021, 7, 27, 17, 43, 5, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 677667805, 'comment_body': 'This method is extremely long, we could extract some code and add javadocs and unit tests. Also, I believe we do not need commented code.', 'comment_created': datetime.datetime(2021, 7, 27, 17, 43, 46, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 677668031, 'comment_body': 'Do we need these comments?', 'comment_created': datetime.datetime(2021, 7, 27, 17, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 677668592, 'comment_body': 'Do we need this import reorganization?', 'comment_created': datetime.datetime(2021, 7, 27, 17, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 677669612, 'comment_body': 'This method is extremely long, we could extract some code and add javadocs and unit tests. Also, I believe we do not need commented code.', 'comment_created': datetime.datetime(2021, 7, 27, 17, 46, 20, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 677670059, 'comment_body': 'This method is long, we could extract some code and add javadocs and unit tests. Also, I believe we do not need these comments.', 'comment_created': datetime.datetime(2021, 7, 27, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 677670494, 'comment_body': 'This method is long, we could extract some code and add javadocs and unit tests. Also, I believe we do not need commented code.', 'comment_created': datetime.datetime(2021, 7, 27, 17, 47, 38, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 687933746, 'comment_body': ""Better to add a comment to indicate any new type can be added after INTERNAL (so that the internal enum value [7] doesn't change)"", 'comment_created': datetime.datetime(2021, 8, 12, 17, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sureshanaparti', 'type': 'User'}, {'comment_id': 687938988, 'comment_body': ""Add 'since' parameter to the API cmd"", 'comment_created': datetime.datetime(2021, 8, 12, 17, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sureshanaparti', 'type': 'User'}, {'comment_id': 687946429, 'comment_body': '```suggestion\r\n    private Long virtualMachineId;\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 17, 28, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sureshanaparti', 'type': 'User'}, {'comment_id': 687946686, 'comment_body': '```suggestion\r\n            required = true, description = ""The ID of the virtual machine to clone"")\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 17, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'sureshanaparti', 'type': 'User'}, {'comment_id': 687949990, 'comment_body': '_BaseAsyncCreateCmd_ here?', 'comment_created': datetime.datetime(2021, 8, 12, 17, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sureshanaparti', 'type': 'User'}, {'comment_id': 687954670, 'comment_body': 'Better move the code at line# 105 -112 to User VM service.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sureshanaparti', 'type': 'User'}, {'comment_id': 687957581, 'comment_body': 'Move this to service layer', 'comment_created': datetime.datetime(2021, 8, 12, 17, 44, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sureshanaparti', 'type': 'User'}, {'comment_id': 687960367, 'comment_body': 'check if volume and snapshot service objects are required to be passed here, or these can be accessed from the service layer?', 'comment_created': datetime.datetime(2021, 8, 12, 17, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sureshanaparti', 'type': 'User'}, {'comment_id': 687965480, 'comment_body': 'can you reuse the existing method below.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sureshanaparti', 'type': 'User'}, {'comment_id': 687977992, 'comment_body': 'update relevant method name, not exactly cloning data volume.', 'comment_created': datetime.datetime(2021, 8, 12, 18, 15, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sureshanaparti', 'type': 'User'}, {'comment_id': 692764573, 'comment_body': 'maybe this will work but as we have now two fixed values, it is maybe time to introduce a construcor with values to use?', 'comment_created': datetime.datetime(2021, 8, 20, 8, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692765756, 'comment_body': 'we need a license header above.', 'comment_created': datetime.datetime(2021, 8, 20, 8, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692766471, 'comment_body': ""@atrocitytheme can you add a reason why you didn't apply this suggestion?"", 'comment_created': datetime.datetime(2021, 8, 20, 8, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692770925, 'comment_body': '@atrocitytheme , I unresolved this comment as it is still valid. `VolumeService` is accessible and `SnapshotService` can easily be added to the `UserVmServiceImpl`. no reason to pass them.', 'comment_created': datetime.datetime(2021, 8, 20, 8, 34, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692774016, 'comment_body': '\r\n```suggestion\r\n        cls.small_offering = ServiceOffering.create(\r\n            cls.apiclient,\r\n            cls.services[""service_offerings""][""small""]\r\n        )\r\n        cls._cleanup.append(cls.small_offering)\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 8, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692774672, 'comment_body': '```suggestion\r\n        cls.medium_offering = ServiceOffering.create(\r\n            cls.apiclient,\r\n            cls.services[""service_offerings""][""medium""]\r\n        )\r\n        cls._cleanup.append(cls.medium_offering)\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 8, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692775212, 'comment_body': '```suggestion\r\n        cls.small_virtual_machine = VirtualMachine.create(\r\n            cls.apiclient,\r\n            cls.services[""small""],\r\n            accountid=cls.account.name,\r\n            domainid=cls.account.domainid,\r\n            serviceofferingid=cls.small_offering.id,\r\n            mode=cls.services[""mode""]\r\n        )\r\n        cls._cleanup.append(cls.small_virtual_machine)\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 8, 41, 8, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692775474, 'comment_body': '```suggestion\r\n        cls.medium_virtual_machine = VirtualMachine.create(\r\n            cls.apiclient,\r\n            cls.services[""small""],\r\n            accountid=cls.account.name,\r\n            domainid=cls.account.domainid,\r\n            serviceofferingid=cls.medium_offering.id,\r\n            mode=cls.services[""mode""]\r\n        )\r\n        cls._cleanup.append(cls.medium_virtual_machine)\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 8, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692775850, 'comment_body': '```suggestion\r\n        cls.virtual_machine = VirtualMachine.create(\r\n            cls.apiclient,\r\n            cls.services[""small""],\r\n            accountid=cls.account.name,\r\n            domainid=cls.account.domainid,\r\n            serviceofferingid=cls.small_offering.id,\r\n            mode=cls.services[""mode""]\r\n        )\r\n        cls._cleanup.append(cls.virtual_machine)\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 8, 41, 59, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692777018, 'comment_body': 'cleanup mechs should be slighhtly different:\r\n```suggestion\r\n        cls._cleanup = []\r\n\r\n            cls.account = Account.create(\r\n            cls.apiclient,\r\n            cls.services[""account""],\r\n            domainid=domain.id\r\n        )\r\n        cls._cleanup.append(cls.account)\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 8, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692777612, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 8, 44, 36, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692778910, 'comment_body': '```suggestion\r\n        super(TestCloneVM, self).tearDown()\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 8, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692780137, 'comment_body': '```suggestion\r\n            small_virtual_machine = VirtualMachine.create(\r\n                self.apiclient,\r\n                self.services[""small""],\r\n                accountid=self.account.name,\r\n                domainid=self.account.domainid,\r\n                serviceofferingid=self.small_offering.id,)\r\n                self.cleanup.append(small_virtual_machine)\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 8, 48, 15, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692781356, 'comment_body': 'probably some cleanup item needs to extracted from this response as well.', 'comment_created': datetime.datetime(2021, 8, 20, 8, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692788328, 'comment_body': 'accidental space', 'comment_created': datetime.datetime(2021, 8, 20, 9, 0, 20, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692788940, 'comment_body': 'no ;)', 'comment_created': datetime.datetime(2021, 8, 20, 9, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692791458, 'comment_body': ""I see you did apply this in `UserVmManagerImpl` but didn't remove the parameters."", 'comment_created': datetime.datetime(2021, 8, 20, 9, 5, 12, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692791800, 'comment_body': 'please remove', 'comment_created': datetime.datetime(2021, 8, 20, 9, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692791925, 'comment_body': 'please remove', 'comment_created': datetime.datetime(2021, 8, 20, 9, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692792394, 'comment_body': 'please remove', 'comment_created': datetime.datetime(2021, 8, 20, 9, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692792504, 'comment_body': 'please remove', 'comment_created': datetime.datetime(2021, 8, 20, 9, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692793605, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 9, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692794263, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 9, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 692794577, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 9, 10, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 693532725, 'comment_body': ""this is not what I mean, unless the clone_response *is* the resulting VM, I didn't check."", 'comment_created': datetime.datetime(2021, 8, 22, 17, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 693533406, 'comment_body': 'checked, it is, should work as meant, thnx', 'comment_created': datetime.datetime(2021, 8, 22, 17, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 708331939, 'comment_body': 'please use the parent method , change before merging\r\n```suggestion\r\n        super(TestCloneVM,self).tearDown()\r\n```', 'comment_created': datetime.datetime(2021, 9, 14, 14, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 997290336, 'comment_body': '```suggestion\r\n@APICommand(name = ""cloneVirtualMachine"", responseObject = UserVmResponse.class, description = ""clone a virtual machine"",\r\n```\r\nor \r\n```suggestion\r\n@APICommand(name = ""cloneVirtualMachine"", responseObject = UserVmResponse.class, description = ""clone a VM"",\r\n```', 'comment_created': datetime.datetime(2022, 10, 17, 16, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'JoaoJandre', 'type': 'User'}, {'comment_id': 997302769, 'comment_body': '```suggestion\r\n            TemplateInfo cloneTemplateInfo = _tmplFactory.getTemplate(templateId, DataStoreRole.Image);\r\n```', 'comment_created': datetime.datetime(2022, 10, 17, 16, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'JoaoJandre', 'type': 'User'}, {'comment_id': 997303202, 'comment_body': '```suggestion\r\n            future = _tmpltSvr.createTemplateFromSnapshotAsync(snapInfo, cloneTemplateInfo, store);\r\n```', 'comment_created': datetime.datetime(2022, 10, 17, 16, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'JoaoJandre', 'type': 'User'}, {'comment_id': 997308837, 'comment_body': '```suggestion\r\n            } catch (InterruptedException | ExecutionException e) {\r\n                s_logger.debug(""Failed to create template for id: "" + templateId, e);\r\n                throw new CloudRuntimeException(""Failed to create template"" , e);\r\n            }\r\n```', 'comment_created': datetime.datetime(2022, 10, 17, 17, 1, 18, tzinfo=datetime.timezone.utc), 'commenter': 'JoaoJandre', 'type': 'User'}]","[{'commit_sha': 'd3b8e748a6ccc0d1be13c4d696d08060022e15c5', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2f72280eb8d56ea01dd4c7e7c14a117897147aa', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a2237c8bbc77654b8204e2fec381ac73f0bbabd', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b2604d1ba86f9dcecbdd5d7ca89a6dbb877ad23', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c815aba944108470221e82081b4a70edd9f97dd', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6cb0acb6c96d6ce2da46c742e0af4bdb03e59f', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77c39c21bf5bcaa0888f411eba8e4002088e338c', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1971a39f4bdb9ac2d09cfd3334dbaf28a7c6a51b', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '368711043ee79256466d61a17ee1066fca985764', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbb886cfb0af4fd87f58040635f8ae7c5dba636c', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16d75daafe4f4a56af95328158314905efc6bf0d', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '779681cf2ab17880efa5340a8cf5c2e9224a6358', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a81d2b7e81e88acb0b783313b5e48ccec2a2744', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f4fca9a9a5793a211be41190b1e87107d4b84d5', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '896b0331d7750a88aa4c4aa656f99b0a69a597b4', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfd131c3c83b9421660fa03aae76e0b4e364fa31', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9677858d48b56ba4903bac5dcc63f413966d95fc', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85129eea652cb6c483946a26e0f2795e53a47c00', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6607f4f270411f9d0a6bbeff27fd781f6d3b734', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afae56078259caabf3d271cf3f9f51c89c997cd6', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a1405d0790e3e29fb805b020b3ec1d5ef322bcf', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c0fd51ec6eef65bc62b9c09051da729181a5ef', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e04dc22896699b24ac3a64e8e5efcf6d6087862c', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bef87f11dac1585b5d208801305e5494009416d', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd15f6207fa64d120a39b50b6c2d4e1b1c6d7eeb1', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fee4a95a016a1b3fe410f103afdc41405375e4fb', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eecacc08c6883ef7591a8701c1ee2d16f7c9aea2', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31824f2b6a8abb43423a93ecaef2c5191bb472bb', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3bf89459584e511ca05c806d0f59300d4102089', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99e50434144102c27f2387a23dde0ee46e3035e3', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40abfac2c349e19ea9f58c0c156003cd49474f64', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd235477b349d7682c3e5e9d563bcdb81fb4aae31', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a48d7fa367fe8ae16091bf6a348cda59d300f9fa', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fb099482d1415bd6758920c2cda86319ca5319c', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed9ac4e2fc02ff171497ca3b750452cc518badb9', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23a53cb22ecbdeaf3e67c6295fbb8c696b1442e0', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53785ed1c657e74eb0ebd312a97f9469a92e46e0', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '306a7f42d3aac05ac17ae0ac5d422ca0420c1cbf', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ecb6a587b933b08e514ad67cad8e7bc9c0165b6', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1bf574b8e8b28a1cfbc7ed842174bb801b97f30', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96393890f03fd6c27f9319774947b22f7fcad3fd', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0871f74a4e0c6c0eb5c5693affb1f446cb9d070a', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5b896e5a8291a73bffdf6e715cac2b1fba3a74a', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bebd3b6dd781dfa3d1aa50eeccd4fa61bdbdc86', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21ac7a77aa1ccaa92af6eb98ca62dd5afd7355e5', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '385df67c0d69535c119b525c2b402bec7dfcc9dc', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec1ee9cfd6d7b027e5f52021e451804fce96fd5', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4d7570ad46b24669f7c542c3dc2f2872d8a6552', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52f281035c13a311dc91692dda66c9a6055b0148', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a475b3916d8549352f48be954957ace63feb113', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b64c48bf3a8e7ab0e9c7ada9a72024a6ff8fb1ce', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b145d17494d6467c71d7caab7db56195fbec832', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbf37531d0312af3ed9d94f76330f0514625d351', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63c7c5e9b61a0ce39013439e23117d2949018ae7', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcb81528deba61fee9abb9e9a0db7e2f8149c0d9', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d5295b926d0d6607d7e64310b123dd9906af2e', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1414e3a2621bfd5d9e15b1125835262b7014d4c0', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '877172893d2f555b50b5b8a70ca7ae0a383a0839', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6279ce1c70a5a74c877441addb4fa3a6d1bc0a1', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fd5eb51798510b66a2b22d453ca11267f3d25dc', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '579fe8aa5c1beb14436491b41aac1ceafd1e2e7e', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a005f1c44fd346f17c0a6c9de6e621ab3782df3c', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd339b5413cec573f4bc7c4f2fe215ae149d3fa69', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0415cbc9683a096cc443cfeb4b7e65e5dfea2556', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4542f6bc379722ca70724c91d3a4d9f40eb4bc8a', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03e380f971d516e420f43f419fdee3dee6b8695b', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d6d6cf604948f71a3379756a1a2d6556ac0749f', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '678d9d81a0371f250e78c1a43e2c8281e6425446', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ea6949890faf8732ab3ff4df5320b669955c4dd', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '794ca8f85d63fa8b5851afdacf8059d0ccb5eda9', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9eac6e6f03dec84a6a46b366af43d65d4a833b7', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14fa30c2d758a78aff0aac7f901e52b1dbc2f6cc', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d893f0ca7b639cb3e8d9f3a88004defa2a5c9a3', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c72654c3f47159873eab4e61818d0c4ae6eda60f', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0ab18b18b95803b2d5cfed96a90109a8bf9e06a', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a423887573df270bc3d0fd81d6a22c36efd3e20e', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a3fc6d0c31235da20b34612a1e4308555c5b5c6', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83a25c814e9f0923dd8cc7f95ccaaa38e6f0eff9', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd925bedb69a2332051ff669b09662e95aa2e1c04', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdbbd607c8eb53a72aed12bbb1b583f0e62f27e5', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6af4d28569796ae14af402b39d2a513572e7dfc4', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a743d20820741d7d6c0ac73a14e86f36cd466121', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1194b637235c63b1ac4155d70875f8e593527103', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0521448939196b9cdb0e6cfcb21d8f115e8ad8b9', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de15e9d687f7416997961a7a154c2b97911c017d', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76f9869177965d1fc71b7c81aa292472bfeb7735', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dee440681d16c8c444aa088922438877efd2957a', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1ad52cec266e15e33e79771f3418985b6fa74c3', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94015718b9ecc42eb230799bc84fe4c4078d8342', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cafec91eda99eca74c5ce041adf027c1204466c', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43d00b306cb26e8c6d75dbbd9ac26480ea5aacec', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa552ceda2c00215fd9d90e7e35f34330c8bbbcf', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13bb0a590a2b9b67b7125cefe635ee7de2a3ab68', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b552628e5d5f8622aa52f39a3b5e9926a9d5005', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56f4d1ca8f6f19cd435deb3af04042e5f0a7c540', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4efd6b639f34eeffb67256739e58cd92c712c35f', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd65ab7b5d7bf3095e0e0b3b12089c0602c2ce3a2', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa02972b1383c76598a553081817ff67b2f38945', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a669bf0c9785b1d44ec0108cddcca823c6c425e1', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f58ebd94e16795f06e4a8bed2d39ef85ebeedcc', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53cbda0ba8293751d3922063bfd27cda2f5afab8', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feb0325be5dfb227fba3e8310eda9b402d9e31a5', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa517eaffbc2a0fbdb82ffa404af0b7c1901168', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab56212a0578075a4dec6610bbe09dea42b8e646', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8abf1419d89d3fd33c4c0ebc35fc01f59a0c01a8', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50d250e129a2e5ab26bfd1614896b9f462b797b4', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f6ae9bee90c059831bf28b842e38ce171425f25', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee6ce66f8cdd960a6887dd1cdcb4686ae2164952', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ffd3359d65bc53e1842a7e2519b62c50e8abc90', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '862f9017ee31305b920da3ece4950231b2d0d73c', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28e417cf5f6758457df0366ea42bbf18d3d22eee', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e7f40f3378c06a6c78967f1efb1b9794080a810', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a44bba93d1c3746c41c655e874e82479e0b27ef6', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '826ea4deab865492329fda7e5154791fdfec570c', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ab24721a61f76226c66792bbd0116b6ec11597b', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3e836a2cf207268f5bdea5d5bdc4cfd27e5b20b', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59bc42a0d2879902e1c86dd0e046e7721598be4c', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fd4ca096d3045377907bc637ece49e0835c39d7', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a470cea330db88cb2ce1c65e5fe6c7517290b4b8', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ff0ce4ff982bd8b00319fdd4273c264a97c18e4', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0314bff04df331e23ef3b475020d4acce92a1de', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '520e9515a109d990ac18fa001aa934a041f110f3', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec42c3287e05ec7b471641d2c9061f36f45bde3', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5072889653454664e8f5efc23657b738eea7aaf8', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1e22b784d4930d257ce28b03e61b8fc5473e293', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae25c4a25bf6fd84769ac885bae8bea6763067cd', 'committer_username': 'cron-ns', 'committer_name': 'cron-ns', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 5, 7, 52, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '866a21dcde6ee397b0404a61c8bc3936a1fec463', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b6cffbcb83cbe04dc4dc9ab220db2e78f67bf71', 'committer_username': 'sureshanaparti', 'committer_name': 'Suresh Kumar Anaparti', 'committer_email': 'sureshkumar.anaparti@gmail.com', 'commit_date': datetime.datetime(2015, 4, 20, 7, 11, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b89f7888b5bb8405908c8d5812686ec71273c38f', 'committer_username': 'sureshanaparti', 'committer_name': 'Suresh Kumar Anaparti', 'committer_email': 'sureshkumar.anaparti@gmail.com', 'commit_date': datetime.datetime(2015, 4, 20, 7, 11, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '379309e10e8576fdc32e11244a664ee5e28c03b8', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f4140718746a874793bf224cfb913cfab8fe312', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b048c4fb53d79c306c4381f7fac68fb7ffc4022', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40788cf926cf8f07c75cd14da0e88a2a5529df7d', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8da90f70d10f0420416c35cdf6e6e5534132c18a', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04a6f05cc02528c578b5ddc3ad5aa09e7a96f191', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb99861d6fb2ab2cb07b6c1210ca14aac3d3aa58', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63d3da1bd8e5a35f0a9bc89ce707f7194df4e368', 'committer_username': 'atrocitytheme', 'committer_name': 'Junxuan Wu', 'committer_email': None, 'commit_date': datetime.datetime(2016, 11, 13, 13, 57, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feb548bf19f762558d3e63e5b432f369160b2a13', 'committer_username': 'sureshanaparti', 'committer_name': 'Suresh Kumar Anaparti', 'committer_email': 'sureshkumar.anaparti@gmail.com', 'commit_date': datetime.datetime(2015, 4, 20, 7, 11, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '733b903c65557340e321e419c735906ea9375724', 'committer_username': 'DaanHoogland', 'committer_name': 'dahn', 'committer_email': None, 'commit_date': datetime.datetime(2012, 10, 4, 14, 27, 50, tzinfo=datetime.timezone.utc)}]",Junxuan Wu,23434323,,User,,86,,19,15

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
9759448,cloudstack,apache/cloudstack,Java,1085,1946,142,775,37058,533,275,161,"[{'id': 718118093, 'number': 5358, 'closed': datetime.datetime(2021, 9, 8, 18, 13, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 19, 47, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1376770.0, 'time_delta': '15 days, 22:26:10', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 691644007, 'number': 5216, 'closed': datetime.datetime(2023, 5, 9, 11, 8, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 17, 31, 41, tzinfo=datetime.timezone.utc), 'time_taken': 57173810.0, 'time_delta': '661 days, 17:36:50', 'additions': 1118, 'deletions': 91, 'state': 'closed'}]"
