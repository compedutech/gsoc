pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
683125690,Molecular module,A module for reading molecule data which can be then used to create actors.,True,452,https://api.github.com/repos/fury-gl/fury/pulls/452,https://github.com/fury-gl/fury/pull/452,closed,1292,0,3,89,29,83,0,0,[],2021-07-04 06:54:02+00:00,2021-09-21 13:49:44+00:00,6850542.0,"79 days, 6:55:42","[{'comment_id': 663531404, 'comment_body': 'For better error handling, should I make a custom exception? \r\nSomething like -\r\n```\r\nclass BondingError(Exception):\r\n pass\r\n```\r\nand then use it by calling \r\n`raise BondingError(""Inadequate Bonding Data!"")`', 'comment_created': datetime.datetime(2021, 7, 4, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663660659, 'comment_body': 'The functions below this comment are used to create actors for the molecules by using MoleculeMapper.\r\nWill it be more appropriate to have them in the molecular module or should they be added to actor module?', 'comment_created': datetime.datetime(2021, 7, 5, 6, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663946013, 'comment_body': 'Thank you @SunTzunami for creating this PR. With setAtomicPosition, are we supposed to set the atomic position of specified atom to other position? The name ""atom_coordinate"" is a bit confusing. ""atom_coordinate"" is supposed to be an array of x_coordinate, y_coordinate and z_coordinate of the atom. But here it is assigned to be integer. ', 'comment_created': datetime.datetime(2021, 7, 5, 13, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 663994035, 'comment_body': 'Thank you @nasimanousheh ! Nice catch!', 'comment_created': datetime.datetime(2021, 7, 5, 15, 0, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667793682, 'comment_body': 'I recommend you to remove this and create a fetcher.\r\n\r\nPlease, look at `fury/data/fetcher.py` for more information', 'comment_created': datetime.datetime(2021, 7, 12, 9, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667794668, 'comment_body': 'Why do you need to do it manually? I believe the `molecular` module will handle this part. otherwise, you need to create a reader in `fury.io`', 'comment_created': datetime.datetime(2021, 7, 12, 10, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795326, 'comment_body': '`molecular.molecular....` : this is repetitive, the actor need to change name', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795505, 'comment_body': 'if not use, comment to remove', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795767, 'comment_body': 'not necessary if you use the fetcher', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667796929, 'comment_body': 'as said before, this should be a property.   In general, if you need a get/set, please, use property tag to be more pythonic', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797105, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797241, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797399, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667798098, 'comment_body': 'What is the goal of this empty class?', 'comment_created': datetime.datetime(2021, 7, 12, 10, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667804346, 'comment_body': ""These can be un-commented to see the other models. I added this example for the members to understand how to use the molecular module.\r\nI'll create the final, proper demo for the module once the module has been made properly (in a pythonic way)."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667808615, 'comment_body': ""It's used to create the mappers which are then used to create actors. Please see [here](https://github.com/fury-gl/fury/pull/452/files#diff-8cedb8d1d2aca3f6f359201c5623b21f1f9b55329c4e7cae44d396e9a62bdec5R632) to see how it's used."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809598, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for the ball stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809868, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667810291, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for sphere representation actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667811549, 'comment_body': 'It is strange to have an empty class. I do not think you need it. \r\n\r\nI should use directly vtkOpenglMoleculeMapper in your different function', 'comment_created': datetime.datetime(2021, 7, 12, 10, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812147, 'comment_body': 'ok, sounds good', 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812304, 'comment_body': ""Okay! I'll use vtkOpenGLMoleculeMapper directly."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667968791, 'comment_body': ""Configuring with capita 'C'."", 'comment_created': datetime.datetime(2021, 7, 12, 14, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 667969214, 'comment_body': '#5. instead of #4.', 'comment_created': datetime.datetime(2021, 7, 12, 14, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 678993834, 'comment_body': 'Please follow the structure that Serge recommended to handle the errors. Maybe it\'s better to use ""Try Except"" to test a block of code for errors rather than ""else"".', 'comment_created': datetime.datetime(2021, 7, 29, 9, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679010880, 'comment_body': 'bond_type should be string not integer.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679021158, 'comment_body': 'Please rename ""bond_type"" to ""bond_order"", Bond type is different than bond order. A data file can have different bond types with same bond order. For example, the bond type of C-C is different than than bond type of C-H but both of them have bond order of 1.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679023854, 'comment_body': ""Do you know which one ('VDW' or 'Covalent') is by default? \r\nYou can raise an error if radius_type is something else."", 'comment_created': datetime.datetime(2021, 7, 29, 10, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679109023, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679109149, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134566, 'comment_body': 'Thanks! Done.', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134747, 'comment_body': 'changed bond_type to bond_order', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679135660, 'comment_body': ""Post comment, I made it such that it's 'VDW' by default and a value error is raised if it's something other than these two. Thanks!"", 'comment_created': datetime.datetime(2021, 7, 29, 13, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679475213, 'comment_body': 'Hi @skoudoro ! Can you please help with writing tests for warnings?', 'comment_created': datetime.datetime(2021, 7, 29, 20, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680143807, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680144819, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680389371, 'comment_body': '- `where H is the total number ....` should be in a new line\r\n- `, optional` for most of them', 'comment_created': datetime.datetime(2021, 7, 31, 17, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390628, 'comment_body': 'not sure about the minus here. what about a colon?', 'comment_created': datetime.datetime(2021, 7, 31, 17, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390712, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390800, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390840, 'comment_body': '`,optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391070, 'comment_body': 'use enumerate instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391106, 'comment_body': 'use enumerate instead, more pythonic', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680394726, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394760, 'comment_body': 'added colon instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394787, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394791, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394796, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394835, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394851, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683471803, 'comment_body': ""''to construct the model'."", 'comment_created': datetime.datetime(2021, 8, 5, 13, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683473521, 'comment_body': '""a"" instead of ""an""', 'comment_created': datetime.datetime(2021, 8, 5, 13, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683546485, 'comment_body': ""If the bond between atom1_index and atom2_index is already exist, does 'add_bond' function (with bond_order=1) add one more bond order between atom1_index and atom2_index? If yes, then 'add_bond' function (with bond_order=3) creates an issue, since at the end, the bond order will be 4.\r\n"", 'comment_created': datetime.datetime(2021, 8, 5, 15, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683556686, 'comment_body': 'The ""index of the atom"" or the ""index of the bond""?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683563584, 'comment_body': 'The propose of this function is not clear to me. Can you please explain what the advantage of coping the atomic information from molecule2 into molecule1 is? Does it merge the information of two molecules into one file?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683568286, 'comment_body': 'Can you please explain what ""SetTolerance"" do? What is the propose of choosing 0.1 factor? ', 'comment_created': datetime.datetime(2021, 8, 5, 15, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683583224, 'comment_body': 'When I change the bond_order from 1 to 2 or 3, the first window shows the structure correctly but the second window shows the structure with only one bond. Is it correct?\r\nI also tried with bond_order = 4. It does not give an error, but by default it shows the structure with one bond order. Maybe we should mention that the bond_order=1 is considered if the bond_order is chosen to be more than 3.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683624441, 'comment_body': ""Basically, vtkSimpleBondPerceiver performs a simple check of all interatomic distances and adds a single bond between atoms that are reasonably close. If the interatomic distance is less than the sum of the two atom's covalent radii plus a tolerance (mathematically, (d < r1 + r2 + tolerance)), a single bond is added. \r\nBy default, vtkSimpleBondPerceiver has a high tolerance of 0.45, I thought that this default tolerance is quite high and might lead to excessive bonding and hence chose an arbitrary value of 0.1."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683625312, 'comment_body': ""It's not possible to transfer molecular information from molecule2 into molecule1 by simple assignment i.e. by setting molecule1 = molecule2. Deep copy copies the molecular information from molecule2 into molecule1. You can check the vtk documentation [here](https://vtk.org/doc/nightly/html/classvtkMolecule.html#a227d15dc1266116895d65e72319f273b)."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683632017, 'comment_body': 'To answer the first part, yes it\'s correct, as you can see on [this](https://github.com/fury-gl/fury/pull/452/files#diff-7c3fdef0e37ff1e81acaf4ff0275d29a6b65c070226c5721dd7b5a0fd54c52bcR186) line, `multiple_bonds` is set to ""Off"" for the second window and as a result it\'ll show only single bonds for double/triple bonds.\r\nFor `bond_order` = 4, I\'ll create a note in the documentation.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637317, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637367, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637511, 'comment_body': 'I created a note', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637573, 'comment_body': 'it should be ""index of the bond"". Thank you!', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685096680, 'comment_body': 'For some reason, the tests pass only when the actor is not added to the scene. This is strange as the tests pass locally for me without commenting out this section.', 'comment_created': datetime.datetime(2021, 8, 9, 10, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685332273, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2021, 8, 9, 16, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693051316, 'comment_body': 'Can you make the title more specific to molecules?', 'comment_created': datetime.datetime(2021, 8, 20, 15, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693051503, 'comment_body': 'False please.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693052565, 'comment_body': 'Also should we cite some papers? There must be some original papers that promoted these representations.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693060721, 'comment_body': 'Why not just use a boolean here? True/False', 'comment_created': datetime.datetime(2021, 8, 20, 16, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693061139, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2021, 8, 20, 16, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693160771, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161041, 'comment_body': 'Done. Makes sense. Nice suggestion!', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161090, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693176966, 'comment_body': 'Good catch! The description was for an earlier version of the demo. I updated the title and description. ', 'comment_created': datetime.datetime(2021, 8, 20, 19, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 701806633, 'comment_body': 'This file is in experimental, should we move it to tutorial @Garyfallidis @SunTzunami @nasimanousheh ?', 'comment_created': datetime.datetime(2021, 9, 3, 11, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701809158, 'comment_body': ""I don't think we should move this to tutorial as this was just for the reviewers/mentors to understand how to work with the module. \r\nI've made proper tutorials (using `fetcher`) for which I'll create PRs once this PR is merged."", 'comment_created': datetime.datetime(2021, 9, 3, 11, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710118060, 'comment_body': 'representations present?\r\nChange verb please.', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118425, 'comment_body': 'blank space missing...', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118834, 'comment_body': 'too many empty lines', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710265811, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266048, 'comment_body': 'I changed the description', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266178, 'comment_body': 'removed the unnecessary ones', 'comment_created': datetime.datetime(2021, 9, 16, 16, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': '9d2a2ff4281c6bf6d3953f25f957906b753e851e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcaa9fd92cc35c2da07872b3ee775b86138eda81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6986f2ab13572a5dfcca5dd3bf10d4921d19b36a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b1ad8da2e7a3c67a7ef5b34249ef37417a585b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93d562f7b1b3785e240ba72f7f25f4ad0673aace', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283f159e7374439e132b851b954ce2e2a7f0bfd6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70b70903ba2f6923d87f8e468eaba6cab6e957b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30edf4405acf14d31f90e921af8f0e7312dc5954', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566bb09c480b603fd9478def2c24c36dd898fee6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3feb4dcf7330d1d6af034aa685b12d87a4776564', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfbb2ebd15acd3cb5bed1fad6af7d40cf033161', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb6de7c6b146b7e2284a5ddd2e0fa0deb8b06b34', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327e6184c87ecff3dcd6f2b9ec48e8201f26d10b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b7ee3c198ebe518fb1533e5b30c5311b0b5023', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da691cffe79e6d232775adb75c52d83a2fda6b45', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4424d72516009aa6def335dab12a33ce5957c18b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0466df051e64d91a457ed5ad9a9a810ac6f06ecb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a172b1e658a6f3632935ce198039eb6d379a3e6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d049a65c0a538a23567ae043d2375edda4e8dd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b28f960400038d5781ae7ceb390625cac2381da5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af78f5b06bc45aa172a01f9c9d2e7962538eba71', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f1127bcb8e0a87ffb15d871fd9c37bfcd9cc91', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd804e028462f6dcadb231cd2ebfa9f19d82bbdfe', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5028d8cc96994184fadbcd9381c3ef3e0444be2c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8c49e10171e908081f29741fd95d71d616e863', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5967e16dc30172925d73c2a683b0facedc4de6b7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd195afce6cc7ac311fcc6943f33a61ad44e634', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0fb4b68ae00ce020052e0685423792315b5780e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d4af18ade6ee34f6787e70ef594b0cd69c782e0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ce86a1808bc5b8f0e33e468c7abab351235551', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '376910978f10b6ee83b94e8a8438c55f80418cce', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed28f282f8d76ada78d37ff5688f395758aca63', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e034489824fd219971b0a9c8c1f4adfc494e777b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf61b5f9ab9dc11f4f768efbd5d0b03972006da7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37427c6ea52c14dadf8de89586f88d54edf40989', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fab9bd0a2101ecdb5a5b67a20a5c4a5a76adcec', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '221f354ad74fa0e7071e35da945528e5dc36b139', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11f4e01b1bb30affaeac47ff60adf9b03168502', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93da7e04a2fb5e53f0609934b14bea94a22d822f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff42613e4d191caa2cb4b8d9623fd51361901dfd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe711567f60bc81a7dfae944f327b6b28c28abc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a9455b4573088547ec4a27de4109f79f035e733', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a22d70f0d69e5f47ae1b28b19d26d802a3f0e3c9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbfc529326e861b5f2060fa073eeec6244422a1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a219959c07ed817eb8136d98d035d241336d6ec9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e53195438534d3f4a316b77c2439d89fa96be35', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e0d8d4c7923230ed78fa71724271269d8cae106', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066174e9c7f6cfe76fc404d0eaa1b917877ad9ac', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b7a309e108a5c9c281d89c4145cbd62f5820cf', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9074b2dfd3d49c32dfbfdc712f180566ed9cf50c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c75a00bebd0bdf63ec92e077a9e1c15f61229f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8fedc5200619bfaf19b5642023a2e40fb6ef63d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfe34fb280f50af3ca7978513559d595c723e93c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c4136a0ca3cccab9c70e2b6820fa9a85f2d738d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55abe18534068e7029377c94af6948d20b707828', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c7844d798e8f2c02a2f11570736b42988d7fc1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb89968265f0a5767bbac7539e748e49293da688', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70129cd0b3c57b97e0a66d5653c74064c1555a8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1954fb4d1cb47a66b4d7fc5c54e30a9a7faea7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e2132f162064583230b8a507e1878b331b7b5de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73835106f6269e17e82dc21afb538bb7547e9e87', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0091bae2c8fd3192c9ce4cac5dbc2dd3334031', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7b9d4da1152d85818ffa7d699dc6bafeb000d0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e03c73f3217c95c33c3aa05e78c44ef722d1f17c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0cf8aa20f643cdc66644389ef3986ed51cabc5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd18b94bebaadd7da2bd8d43bfd74f5d6810a6a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6e69d5ccd18a6db4113fa65c282d6b2edd1264', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864a270a307a7e2a545e242b2958db9b691c509c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfdb32930b736f49af80093c29f75ce735138a7a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ca9f298937994422a143e5a96428b3a7587b445', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24eb6b45e03ccdd93d7599f2380055c6cb733217', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a07443cd284824a0b0532c8e8a7d254b99c886', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d90e9c124aa594847e02d2cbe05e7bdce53999', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3b9ea33cf400dfdb4b77fd0a4c23c7387847a32', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551b790f226bb192c9ea3722bbe4d266f91475a7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3d82884f29ff542d4db79dee560c0f3517f366', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319dbfa6150dd40366013c7b8372dbdc51d8bbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d310fb7186ed3a1aaf059f3c9c333b98b003097', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84110458055f5cce6021e0fd53f710e29ca8df81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635be2ea46850d8142d077a755c54c09b9862983', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '667b945bf89de48c634d0ec37a98cba4a45a9172', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02047489fbbff935bae8e50f8c5f2ccf29c9948', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae7dfa6a50c09b8301d661e48cc6760b82cacbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fca0da03a8b6d75be794c3034ab1441cdf81d6b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d11d39eea131241e46841a01652d89da3acee4d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4e03fb6c596e53cc9051f5811b0dd27d09e42d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02063158376fcb3b62a3d0c463665b2abde77b77', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503550d2e8d627a1933023f23f62a66b5dd96beb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46ee5cf3d762eeecb55f5868ca9b5092636d96b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
683125690,Molecular module,A module for reading molecule data which can be then used to create actors.,True,452,https://api.github.com/repos/fury-gl/fury/pulls/452,https://github.com/fury-gl/fury/pull/452,closed,1292,0,3,89,29,83,0,0,[],2021-07-04 06:54:02+00:00,2021-09-21 13:49:44+00:00,6850542.0,"79 days, 6:55:42","[{'comment_id': 663531404, 'comment_body': 'For better error handling, should I make a custom exception? \r\nSomething like -\r\n```\r\nclass BondingError(Exception):\r\n pass\r\n```\r\nand then use it by calling \r\n`raise BondingError(""Inadequate Bonding Data!"")`', 'comment_created': datetime.datetime(2021, 7, 4, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663660659, 'comment_body': 'The functions below this comment are used to create actors for the molecules by using MoleculeMapper.\r\nWill it be more appropriate to have them in the molecular module or should they be added to actor module?', 'comment_created': datetime.datetime(2021, 7, 5, 6, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663946013, 'comment_body': 'Thank you @SunTzunami for creating this PR. With setAtomicPosition, are we supposed to set the atomic position of specified atom to other position? The name ""atom_coordinate"" is a bit confusing. ""atom_coordinate"" is supposed to be an array of x_coordinate, y_coordinate and z_coordinate of the atom. But here it is assigned to be integer. ', 'comment_created': datetime.datetime(2021, 7, 5, 13, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 663994035, 'comment_body': 'Thank you @nasimanousheh ! Nice catch!', 'comment_created': datetime.datetime(2021, 7, 5, 15, 0, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667793682, 'comment_body': 'I recommend you to remove this and create a fetcher.\r\n\r\nPlease, look at `fury/data/fetcher.py` for more information', 'comment_created': datetime.datetime(2021, 7, 12, 9, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667794668, 'comment_body': 'Why do you need to do it manually? I believe the `molecular` module will handle this part. otherwise, you need to create a reader in `fury.io`', 'comment_created': datetime.datetime(2021, 7, 12, 10, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795326, 'comment_body': '`molecular.molecular....` : this is repetitive, the actor need to change name', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795505, 'comment_body': 'if not use, comment to remove', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795767, 'comment_body': 'not necessary if you use the fetcher', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667796929, 'comment_body': 'as said before, this should be a property.   In general, if you need a get/set, please, use property tag to be more pythonic', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797105, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797241, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797399, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667798098, 'comment_body': 'What is the goal of this empty class?', 'comment_created': datetime.datetime(2021, 7, 12, 10, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667804346, 'comment_body': ""These can be un-commented to see the other models. I added this example for the members to understand how to use the molecular module.\r\nI'll create the final, proper demo for the module once the module has been made properly (in a pythonic way)."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667808615, 'comment_body': ""It's used to create the mappers which are then used to create actors. Please see [here](https://github.com/fury-gl/fury/pull/452/files#diff-8cedb8d1d2aca3f6f359201c5623b21f1f9b55329c4e7cae44d396e9a62bdec5R632) to see how it's used."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809598, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for the ball stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809868, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667810291, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for sphere representation actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667811549, 'comment_body': 'It is strange to have an empty class. I do not think you need it. \r\n\r\nI should use directly vtkOpenglMoleculeMapper in your different function', 'comment_created': datetime.datetime(2021, 7, 12, 10, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812147, 'comment_body': 'ok, sounds good', 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812304, 'comment_body': ""Okay! I'll use vtkOpenGLMoleculeMapper directly."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667968791, 'comment_body': ""Configuring with capita 'C'."", 'comment_created': datetime.datetime(2021, 7, 12, 14, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 667969214, 'comment_body': '#5. instead of #4.', 'comment_created': datetime.datetime(2021, 7, 12, 14, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 678993834, 'comment_body': 'Please follow the structure that Serge recommended to handle the errors. Maybe it\'s better to use ""Try Except"" to test a block of code for errors rather than ""else"".', 'comment_created': datetime.datetime(2021, 7, 29, 9, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679010880, 'comment_body': 'bond_type should be string not integer.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679021158, 'comment_body': 'Please rename ""bond_type"" to ""bond_order"", Bond type is different than bond order. A data file can have different bond types with same bond order. For example, the bond type of C-C is different than than bond type of C-H but both of them have bond order of 1.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679023854, 'comment_body': ""Do you know which one ('VDW' or 'Covalent') is by default? \r\nYou can raise an error if radius_type is something else."", 'comment_created': datetime.datetime(2021, 7, 29, 10, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679109023, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679109149, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134566, 'comment_body': 'Thanks! Done.', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134747, 'comment_body': 'changed bond_type to bond_order', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679135660, 'comment_body': ""Post comment, I made it such that it's 'VDW' by default and a value error is raised if it's something other than these two. Thanks!"", 'comment_created': datetime.datetime(2021, 7, 29, 13, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679475213, 'comment_body': 'Hi @skoudoro ! Can you please help with writing tests for warnings?', 'comment_created': datetime.datetime(2021, 7, 29, 20, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680143807, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680144819, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680389371, 'comment_body': '- `where H is the total number ....` should be in a new line\r\n- `, optional` for most of them', 'comment_created': datetime.datetime(2021, 7, 31, 17, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390628, 'comment_body': 'not sure about the minus here. what about a colon?', 'comment_created': datetime.datetime(2021, 7, 31, 17, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390712, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390800, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390840, 'comment_body': '`,optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391070, 'comment_body': 'use enumerate instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391106, 'comment_body': 'use enumerate instead, more pythonic', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680394726, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394760, 'comment_body': 'added colon instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394787, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394791, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394796, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394835, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394851, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683471803, 'comment_body': ""''to construct the model'."", 'comment_created': datetime.datetime(2021, 8, 5, 13, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683473521, 'comment_body': '""a"" instead of ""an""', 'comment_created': datetime.datetime(2021, 8, 5, 13, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683546485, 'comment_body': ""If the bond between atom1_index and atom2_index is already exist, does 'add_bond' function (with bond_order=1) add one more bond order between atom1_index and atom2_index? If yes, then 'add_bond' function (with bond_order=3) creates an issue, since at the end, the bond order will be 4.\r\n"", 'comment_created': datetime.datetime(2021, 8, 5, 15, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683556686, 'comment_body': 'The ""index of the atom"" or the ""index of the bond""?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683563584, 'comment_body': 'The propose of this function is not clear to me. Can you please explain what the advantage of coping the atomic information from molecule2 into molecule1 is? Does it merge the information of two molecules into one file?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683568286, 'comment_body': 'Can you please explain what ""SetTolerance"" do? What is the propose of choosing 0.1 factor? ', 'comment_created': datetime.datetime(2021, 8, 5, 15, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683583224, 'comment_body': 'When I change the bond_order from 1 to 2 or 3, the first window shows the structure correctly but the second window shows the structure with only one bond. Is it correct?\r\nI also tried with bond_order = 4. It does not give an error, but by default it shows the structure with one bond order. Maybe we should mention that the bond_order=1 is considered if the bond_order is chosen to be more than 3.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683624441, 'comment_body': ""Basically, vtkSimpleBondPerceiver performs a simple check of all interatomic distances and adds a single bond between atoms that are reasonably close. If the interatomic distance is less than the sum of the two atom's covalent radii plus a tolerance (mathematically, (d < r1 + r2 + tolerance)), a single bond is added. \r\nBy default, vtkSimpleBondPerceiver has a high tolerance of 0.45, I thought that this default tolerance is quite high and might lead to excessive bonding and hence chose an arbitrary value of 0.1."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683625312, 'comment_body': ""It's not possible to transfer molecular information from molecule2 into molecule1 by simple assignment i.e. by setting molecule1 = molecule2. Deep copy copies the molecular information from molecule2 into molecule1. You can check the vtk documentation [here](https://vtk.org/doc/nightly/html/classvtkMolecule.html#a227d15dc1266116895d65e72319f273b)."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683632017, 'comment_body': 'To answer the first part, yes it\'s correct, as you can see on [this](https://github.com/fury-gl/fury/pull/452/files#diff-7c3fdef0e37ff1e81acaf4ff0275d29a6b65c070226c5721dd7b5a0fd54c52bcR186) line, `multiple_bonds` is set to ""Off"" for the second window and as a result it\'ll show only single bonds for double/triple bonds.\r\nFor `bond_order` = 4, I\'ll create a note in the documentation.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637317, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637367, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637511, 'comment_body': 'I created a note', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637573, 'comment_body': 'it should be ""index of the bond"". Thank you!', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685096680, 'comment_body': 'For some reason, the tests pass only when the actor is not added to the scene. This is strange as the tests pass locally for me without commenting out this section.', 'comment_created': datetime.datetime(2021, 8, 9, 10, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685332273, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2021, 8, 9, 16, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693051316, 'comment_body': 'Can you make the title more specific to molecules?', 'comment_created': datetime.datetime(2021, 8, 20, 15, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693051503, 'comment_body': 'False please.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693052565, 'comment_body': 'Also should we cite some papers? There must be some original papers that promoted these representations.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693060721, 'comment_body': 'Why not just use a boolean here? True/False', 'comment_created': datetime.datetime(2021, 8, 20, 16, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693061139, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2021, 8, 20, 16, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693160771, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161041, 'comment_body': 'Done. Makes sense. Nice suggestion!', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161090, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693176966, 'comment_body': 'Good catch! The description was for an earlier version of the demo. I updated the title and description. ', 'comment_created': datetime.datetime(2021, 8, 20, 19, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 701806633, 'comment_body': 'This file is in experimental, should we move it to tutorial @Garyfallidis @SunTzunami @nasimanousheh ?', 'comment_created': datetime.datetime(2021, 9, 3, 11, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701809158, 'comment_body': ""I don't think we should move this to tutorial as this was just for the reviewers/mentors to understand how to work with the module. \r\nI've made proper tutorials (using `fetcher`) for which I'll create PRs once this PR is merged."", 'comment_created': datetime.datetime(2021, 9, 3, 11, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710118060, 'comment_body': 'representations present?\r\nChange verb please.', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118425, 'comment_body': 'blank space missing...', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118834, 'comment_body': 'too many empty lines', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710265811, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266048, 'comment_body': 'I changed the description', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266178, 'comment_body': 'removed the unnecessary ones', 'comment_created': datetime.datetime(2021, 9, 16, 16, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': '9d2a2ff4281c6bf6d3953f25f957906b753e851e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcaa9fd92cc35c2da07872b3ee775b86138eda81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6986f2ab13572a5dfcca5dd3bf10d4921d19b36a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b1ad8da2e7a3c67a7ef5b34249ef37417a585b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93d562f7b1b3785e240ba72f7f25f4ad0673aace', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283f159e7374439e132b851b954ce2e2a7f0bfd6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70b70903ba2f6923d87f8e468eaba6cab6e957b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30edf4405acf14d31f90e921af8f0e7312dc5954', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566bb09c480b603fd9478def2c24c36dd898fee6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3feb4dcf7330d1d6af034aa685b12d87a4776564', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfbb2ebd15acd3cb5bed1fad6af7d40cf033161', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb6de7c6b146b7e2284a5ddd2e0fa0deb8b06b34', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327e6184c87ecff3dcd6f2b9ec48e8201f26d10b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b7ee3c198ebe518fb1533e5b30c5311b0b5023', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da691cffe79e6d232775adb75c52d83a2fda6b45', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4424d72516009aa6def335dab12a33ce5957c18b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0466df051e64d91a457ed5ad9a9a810ac6f06ecb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a172b1e658a6f3632935ce198039eb6d379a3e6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d049a65c0a538a23567ae043d2375edda4e8dd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b28f960400038d5781ae7ceb390625cac2381da5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af78f5b06bc45aa172a01f9c9d2e7962538eba71', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f1127bcb8e0a87ffb15d871fd9c37bfcd9cc91', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd804e028462f6dcadb231cd2ebfa9f19d82bbdfe', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5028d8cc96994184fadbcd9381c3ef3e0444be2c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8c49e10171e908081f29741fd95d71d616e863', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5967e16dc30172925d73c2a683b0facedc4de6b7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd195afce6cc7ac311fcc6943f33a61ad44e634', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0fb4b68ae00ce020052e0685423792315b5780e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d4af18ade6ee34f6787e70ef594b0cd69c782e0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ce86a1808bc5b8f0e33e468c7abab351235551', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '376910978f10b6ee83b94e8a8438c55f80418cce', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed28f282f8d76ada78d37ff5688f395758aca63', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e034489824fd219971b0a9c8c1f4adfc494e777b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf61b5f9ab9dc11f4f768efbd5d0b03972006da7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37427c6ea52c14dadf8de89586f88d54edf40989', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fab9bd0a2101ecdb5a5b67a20a5c4a5a76adcec', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '221f354ad74fa0e7071e35da945528e5dc36b139', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11f4e01b1bb30affaeac47ff60adf9b03168502', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93da7e04a2fb5e53f0609934b14bea94a22d822f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff42613e4d191caa2cb4b8d9623fd51361901dfd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe711567f60bc81a7dfae944f327b6b28c28abc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a9455b4573088547ec4a27de4109f79f035e733', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a22d70f0d69e5f47ae1b28b19d26d802a3f0e3c9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbfc529326e861b5f2060fa073eeec6244422a1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a219959c07ed817eb8136d98d035d241336d6ec9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e53195438534d3f4a316b77c2439d89fa96be35', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e0d8d4c7923230ed78fa71724271269d8cae106', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066174e9c7f6cfe76fc404d0eaa1b917877ad9ac', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b7a309e108a5c9c281d89c4145cbd62f5820cf', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9074b2dfd3d49c32dfbfdc712f180566ed9cf50c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c75a00bebd0bdf63ec92e077a9e1c15f61229f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8fedc5200619bfaf19b5642023a2e40fb6ef63d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfe34fb280f50af3ca7978513559d595c723e93c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c4136a0ca3cccab9c70e2b6820fa9a85f2d738d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55abe18534068e7029377c94af6948d20b707828', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c7844d798e8f2c02a2f11570736b42988d7fc1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb89968265f0a5767bbac7539e748e49293da688', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70129cd0b3c57b97e0a66d5653c74064c1555a8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1954fb4d1cb47a66b4d7fc5c54e30a9a7faea7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e2132f162064583230b8a507e1878b331b7b5de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73835106f6269e17e82dc21afb538bb7547e9e87', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0091bae2c8fd3192c9ce4cac5dbc2dd3334031', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7b9d4da1152d85818ffa7d699dc6bafeb000d0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e03c73f3217c95c33c3aa05e78c44ef722d1f17c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0cf8aa20f643cdc66644389ef3986ed51cabc5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd18b94bebaadd7da2bd8d43bfd74f5d6810a6a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6e69d5ccd18a6db4113fa65c282d6b2edd1264', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864a270a307a7e2a545e242b2958db9b691c509c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfdb32930b736f49af80093c29f75ce735138a7a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ca9f298937994422a143e5a96428b3a7587b445', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24eb6b45e03ccdd93d7599f2380055c6cb733217', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a07443cd284824a0b0532c8e8a7d254b99c886', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d90e9c124aa594847e02d2cbe05e7bdce53999', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3b9ea33cf400dfdb4b77fd0a4c23c7387847a32', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551b790f226bb192c9ea3722bbe4d266f91475a7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3d82884f29ff542d4db79dee560c0f3517f366', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319dbfa6150dd40366013c7b8372dbdc51d8bbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d310fb7186ed3a1aaf059f3c9c333b98b003097', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84110458055f5cce6021e0fd53f710e29ca8df81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635be2ea46850d8142d077a755c54c09b9862983', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '667b945bf89de48c634d0ec37a98cba4a45a9172', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02047489fbbff935bae8e50f8c5f2ccf29c9948', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae7dfa6a50c09b8301d661e48cc6760b82cacbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fca0da03a8b6d75be794c3034ab1441cdf81d6b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d11d39eea131241e46841a01652d89da3acee4d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4e03fb6c596e53cc9051f5811b0dd27d09e42d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02063158376fcb3b62a3d0c463665b2abde77b77', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503550d2e8d627a1933023f23f62a66b5dd96beb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46ee5cf3d762eeecb55f5868ca9b5092636d96b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
683125690,Molecular module,A module for reading molecule data which can be then used to create actors.,True,452,https://api.github.com/repos/fury-gl/fury/pulls/452,https://github.com/fury-gl/fury/pull/452,closed,1292,0,3,89,29,83,0,0,[],2021-07-04 06:54:02+00:00,2021-09-21 13:49:44+00:00,6850542.0,"79 days, 6:55:42","[{'comment_id': 663531404, 'comment_body': 'For better error handling, should I make a custom exception? \r\nSomething like -\r\n```\r\nclass BondingError(Exception):\r\n pass\r\n```\r\nand then use it by calling \r\n`raise BondingError(""Inadequate Bonding Data!"")`', 'comment_created': datetime.datetime(2021, 7, 4, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663660659, 'comment_body': 'The functions below this comment are used to create actors for the molecules by using MoleculeMapper.\r\nWill it be more appropriate to have them in the molecular module or should they be added to actor module?', 'comment_created': datetime.datetime(2021, 7, 5, 6, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663946013, 'comment_body': 'Thank you @SunTzunami for creating this PR. With setAtomicPosition, are we supposed to set the atomic position of specified atom to other position? The name ""atom_coordinate"" is a bit confusing. ""atom_coordinate"" is supposed to be an array of x_coordinate, y_coordinate and z_coordinate of the atom. But here it is assigned to be integer. ', 'comment_created': datetime.datetime(2021, 7, 5, 13, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 663994035, 'comment_body': 'Thank you @nasimanousheh ! Nice catch!', 'comment_created': datetime.datetime(2021, 7, 5, 15, 0, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667793682, 'comment_body': 'I recommend you to remove this and create a fetcher.\r\n\r\nPlease, look at `fury/data/fetcher.py` for more information', 'comment_created': datetime.datetime(2021, 7, 12, 9, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667794668, 'comment_body': 'Why do you need to do it manually? I believe the `molecular` module will handle this part. otherwise, you need to create a reader in `fury.io`', 'comment_created': datetime.datetime(2021, 7, 12, 10, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795326, 'comment_body': '`molecular.molecular....` : this is repetitive, the actor need to change name', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795505, 'comment_body': 'if not use, comment to remove', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795767, 'comment_body': 'not necessary if you use the fetcher', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667796929, 'comment_body': 'as said before, this should be a property.   In general, if you need a get/set, please, use property tag to be more pythonic', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797105, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797241, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797399, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667798098, 'comment_body': 'What is the goal of this empty class?', 'comment_created': datetime.datetime(2021, 7, 12, 10, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667804346, 'comment_body': ""These can be un-commented to see the other models. I added this example for the members to understand how to use the molecular module.\r\nI'll create the final, proper demo for the module once the module has been made properly (in a pythonic way)."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667808615, 'comment_body': ""It's used to create the mappers which are then used to create actors. Please see [here](https://github.com/fury-gl/fury/pull/452/files#diff-8cedb8d1d2aca3f6f359201c5623b21f1f9b55329c4e7cae44d396e9a62bdec5R632) to see how it's used."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809598, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for the ball stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809868, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667810291, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for sphere representation actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667811549, 'comment_body': 'It is strange to have an empty class. I do not think you need it. \r\n\r\nI should use directly vtkOpenglMoleculeMapper in your different function', 'comment_created': datetime.datetime(2021, 7, 12, 10, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812147, 'comment_body': 'ok, sounds good', 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812304, 'comment_body': ""Okay! I'll use vtkOpenGLMoleculeMapper directly."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667968791, 'comment_body': ""Configuring with capita 'C'."", 'comment_created': datetime.datetime(2021, 7, 12, 14, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 667969214, 'comment_body': '#5. instead of #4.', 'comment_created': datetime.datetime(2021, 7, 12, 14, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 678993834, 'comment_body': 'Please follow the structure that Serge recommended to handle the errors. Maybe it\'s better to use ""Try Except"" to test a block of code for errors rather than ""else"".', 'comment_created': datetime.datetime(2021, 7, 29, 9, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679010880, 'comment_body': 'bond_type should be string not integer.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679021158, 'comment_body': 'Please rename ""bond_type"" to ""bond_order"", Bond type is different than bond order. A data file can have different bond types with same bond order. For example, the bond type of C-C is different than than bond type of C-H but both of them have bond order of 1.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679023854, 'comment_body': ""Do you know which one ('VDW' or 'Covalent') is by default? \r\nYou can raise an error if radius_type is something else."", 'comment_created': datetime.datetime(2021, 7, 29, 10, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679109023, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679109149, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134566, 'comment_body': 'Thanks! Done.', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134747, 'comment_body': 'changed bond_type to bond_order', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679135660, 'comment_body': ""Post comment, I made it such that it's 'VDW' by default and a value error is raised if it's something other than these two. Thanks!"", 'comment_created': datetime.datetime(2021, 7, 29, 13, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679475213, 'comment_body': 'Hi @skoudoro ! Can you please help with writing tests for warnings?', 'comment_created': datetime.datetime(2021, 7, 29, 20, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680143807, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680144819, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680389371, 'comment_body': '- `where H is the total number ....` should be in a new line\r\n- `, optional` for most of them', 'comment_created': datetime.datetime(2021, 7, 31, 17, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390628, 'comment_body': 'not sure about the minus here. what about a colon?', 'comment_created': datetime.datetime(2021, 7, 31, 17, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390712, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390800, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390840, 'comment_body': '`,optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391070, 'comment_body': 'use enumerate instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391106, 'comment_body': 'use enumerate instead, more pythonic', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680394726, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394760, 'comment_body': 'added colon instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394787, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394791, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394796, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394835, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394851, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683471803, 'comment_body': ""''to construct the model'."", 'comment_created': datetime.datetime(2021, 8, 5, 13, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683473521, 'comment_body': '""a"" instead of ""an""', 'comment_created': datetime.datetime(2021, 8, 5, 13, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683546485, 'comment_body': ""If the bond between atom1_index and atom2_index is already exist, does 'add_bond' function (with bond_order=1) add one more bond order between atom1_index and atom2_index? If yes, then 'add_bond' function (with bond_order=3) creates an issue, since at the end, the bond order will be 4.\r\n"", 'comment_created': datetime.datetime(2021, 8, 5, 15, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683556686, 'comment_body': 'The ""index of the atom"" or the ""index of the bond""?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683563584, 'comment_body': 'The propose of this function is not clear to me. Can you please explain what the advantage of coping the atomic information from molecule2 into molecule1 is? Does it merge the information of two molecules into one file?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683568286, 'comment_body': 'Can you please explain what ""SetTolerance"" do? What is the propose of choosing 0.1 factor? ', 'comment_created': datetime.datetime(2021, 8, 5, 15, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683583224, 'comment_body': 'When I change the bond_order from 1 to 2 or 3, the first window shows the structure correctly but the second window shows the structure with only one bond. Is it correct?\r\nI also tried with bond_order = 4. It does not give an error, but by default it shows the structure with one bond order. Maybe we should mention that the bond_order=1 is considered if the bond_order is chosen to be more than 3.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683624441, 'comment_body': ""Basically, vtkSimpleBondPerceiver performs a simple check of all interatomic distances and adds a single bond between atoms that are reasonably close. If the interatomic distance is less than the sum of the two atom's covalent radii plus a tolerance (mathematically, (d < r1 + r2 + tolerance)), a single bond is added. \r\nBy default, vtkSimpleBondPerceiver has a high tolerance of 0.45, I thought that this default tolerance is quite high and might lead to excessive bonding and hence chose an arbitrary value of 0.1."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683625312, 'comment_body': ""It's not possible to transfer molecular information from molecule2 into molecule1 by simple assignment i.e. by setting molecule1 = molecule2. Deep copy copies the molecular information from molecule2 into molecule1. You can check the vtk documentation [here](https://vtk.org/doc/nightly/html/classvtkMolecule.html#a227d15dc1266116895d65e72319f273b)."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683632017, 'comment_body': 'To answer the first part, yes it\'s correct, as you can see on [this](https://github.com/fury-gl/fury/pull/452/files#diff-7c3fdef0e37ff1e81acaf4ff0275d29a6b65c070226c5721dd7b5a0fd54c52bcR186) line, `multiple_bonds` is set to ""Off"" for the second window and as a result it\'ll show only single bonds for double/triple bonds.\r\nFor `bond_order` = 4, I\'ll create a note in the documentation.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637317, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637367, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637511, 'comment_body': 'I created a note', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637573, 'comment_body': 'it should be ""index of the bond"". Thank you!', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685096680, 'comment_body': 'For some reason, the tests pass only when the actor is not added to the scene. This is strange as the tests pass locally for me without commenting out this section.', 'comment_created': datetime.datetime(2021, 8, 9, 10, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685332273, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2021, 8, 9, 16, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693051316, 'comment_body': 'Can you make the title more specific to molecules?', 'comment_created': datetime.datetime(2021, 8, 20, 15, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693051503, 'comment_body': 'False please.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693052565, 'comment_body': 'Also should we cite some papers? There must be some original papers that promoted these representations.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693060721, 'comment_body': 'Why not just use a boolean here? True/False', 'comment_created': datetime.datetime(2021, 8, 20, 16, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693061139, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2021, 8, 20, 16, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693160771, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161041, 'comment_body': 'Done. Makes sense. Nice suggestion!', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161090, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693176966, 'comment_body': 'Good catch! The description was for an earlier version of the demo. I updated the title and description. ', 'comment_created': datetime.datetime(2021, 8, 20, 19, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 701806633, 'comment_body': 'This file is in experimental, should we move it to tutorial @Garyfallidis @SunTzunami @nasimanousheh ?', 'comment_created': datetime.datetime(2021, 9, 3, 11, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701809158, 'comment_body': ""I don't think we should move this to tutorial as this was just for the reviewers/mentors to understand how to work with the module. \r\nI've made proper tutorials (using `fetcher`) for which I'll create PRs once this PR is merged."", 'comment_created': datetime.datetime(2021, 9, 3, 11, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710118060, 'comment_body': 'representations present?\r\nChange verb please.', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118425, 'comment_body': 'blank space missing...', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118834, 'comment_body': 'too many empty lines', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710265811, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266048, 'comment_body': 'I changed the description', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266178, 'comment_body': 'removed the unnecessary ones', 'comment_created': datetime.datetime(2021, 9, 16, 16, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': '9d2a2ff4281c6bf6d3953f25f957906b753e851e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcaa9fd92cc35c2da07872b3ee775b86138eda81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6986f2ab13572a5dfcca5dd3bf10d4921d19b36a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b1ad8da2e7a3c67a7ef5b34249ef37417a585b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93d562f7b1b3785e240ba72f7f25f4ad0673aace', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283f159e7374439e132b851b954ce2e2a7f0bfd6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70b70903ba2f6923d87f8e468eaba6cab6e957b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30edf4405acf14d31f90e921af8f0e7312dc5954', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566bb09c480b603fd9478def2c24c36dd898fee6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3feb4dcf7330d1d6af034aa685b12d87a4776564', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfbb2ebd15acd3cb5bed1fad6af7d40cf033161', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb6de7c6b146b7e2284a5ddd2e0fa0deb8b06b34', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327e6184c87ecff3dcd6f2b9ec48e8201f26d10b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b7ee3c198ebe518fb1533e5b30c5311b0b5023', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da691cffe79e6d232775adb75c52d83a2fda6b45', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4424d72516009aa6def335dab12a33ce5957c18b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0466df051e64d91a457ed5ad9a9a810ac6f06ecb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a172b1e658a6f3632935ce198039eb6d379a3e6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d049a65c0a538a23567ae043d2375edda4e8dd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b28f960400038d5781ae7ceb390625cac2381da5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af78f5b06bc45aa172a01f9c9d2e7962538eba71', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f1127bcb8e0a87ffb15d871fd9c37bfcd9cc91', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd804e028462f6dcadb231cd2ebfa9f19d82bbdfe', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5028d8cc96994184fadbcd9381c3ef3e0444be2c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8c49e10171e908081f29741fd95d71d616e863', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5967e16dc30172925d73c2a683b0facedc4de6b7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd195afce6cc7ac311fcc6943f33a61ad44e634', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0fb4b68ae00ce020052e0685423792315b5780e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d4af18ade6ee34f6787e70ef594b0cd69c782e0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ce86a1808bc5b8f0e33e468c7abab351235551', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '376910978f10b6ee83b94e8a8438c55f80418cce', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed28f282f8d76ada78d37ff5688f395758aca63', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e034489824fd219971b0a9c8c1f4adfc494e777b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf61b5f9ab9dc11f4f768efbd5d0b03972006da7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37427c6ea52c14dadf8de89586f88d54edf40989', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fab9bd0a2101ecdb5a5b67a20a5c4a5a76adcec', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '221f354ad74fa0e7071e35da945528e5dc36b139', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11f4e01b1bb30affaeac47ff60adf9b03168502', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93da7e04a2fb5e53f0609934b14bea94a22d822f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff42613e4d191caa2cb4b8d9623fd51361901dfd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe711567f60bc81a7dfae944f327b6b28c28abc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a9455b4573088547ec4a27de4109f79f035e733', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a22d70f0d69e5f47ae1b28b19d26d802a3f0e3c9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbfc529326e861b5f2060fa073eeec6244422a1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a219959c07ed817eb8136d98d035d241336d6ec9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e53195438534d3f4a316b77c2439d89fa96be35', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e0d8d4c7923230ed78fa71724271269d8cae106', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066174e9c7f6cfe76fc404d0eaa1b917877ad9ac', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b7a309e108a5c9c281d89c4145cbd62f5820cf', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9074b2dfd3d49c32dfbfdc712f180566ed9cf50c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c75a00bebd0bdf63ec92e077a9e1c15f61229f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8fedc5200619bfaf19b5642023a2e40fb6ef63d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfe34fb280f50af3ca7978513559d595c723e93c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c4136a0ca3cccab9c70e2b6820fa9a85f2d738d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55abe18534068e7029377c94af6948d20b707828', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c7844d798e8f2c02a2f11570736b42988d7fc1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb89968265f0a5767bbac7539e748e49293da688', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70129cd0b3c57b97e0a66d5653c74064c1555a8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1954fb4d1cb47a66b4d7fc5c54e30a9a7faea7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e2132f162064583230b8a507e1878b331b7b5de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73835106f6269e17e82dc21afb538bb7547e9e87', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0091bae2c8fd3192c9ce4cac5dbc2dd3334031', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7b9d4da1152d85818ffa7d699dc6bafeb000d0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e03c73f3217c95c33c3aa05e78c44ef722d1f17c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0cf8aa20f643cdc66644389ef3986ed51cabc5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd18b94bebaadd7da2bd8d43bfd74f5d6810a6a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6e69d5ccd18a6db4113fa65c282d6b2edd1264', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864a270a307a7e2a545e242b2958db9b691c509c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfdb32930b736f49af80093c29f75ce735138a7a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ca9f298937994422a143e5a96428b3a7587b445', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24eb6b45e03ccdd93d7599f2380055c6cb733217', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a07443cd284824a0b0532c8e8a7d254b99c886', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d90e9c124aa594847e02d2cbe05e7bdce53999', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3b9ea33cf400dfdb4b77fd0a4c23c7387847a32', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551b790f226bb192c9ea3722bbe4d266f91475a7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3d82884f29ff542d4db79dee560c0f3517f366', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319dbfa6150dd40366013c7b8372dbdc51d8bbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d310fb7186ed3a1aaf059f3c9c333b98b003097', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84110458055f5cce6021e0fd53f710e29ca8df81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635be2ea46850d8142d077a755c54c09b9862983', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '667b945bf89de48c634d0ec37a98cba4a45a9172', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02047489fbbff935bae8e50f8c5f2ccf29c9948', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae7dfa6a50c09b8301d661e48cc6760b82cacbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fca0da03a8b6d75be794c3034ab1441cdf81d6b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d11d39eea131241e46841a01652d89da3acee4d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4e03fb6c596e53cc9051f5811b0dd27d09e42d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02063158376fcb3b62a3d0c463665b2abde77b77', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503550d2e8d627a1933023f23f62a66b5dd96beb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46ee5cf3d762eeecb55f5868ca9b5092636d96b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
683125690,Molecular module,A module for reading molecule data which can be then used to create actors.,True,452,https://api.github.com/repos/fury-gl/fury/pulls/452,https://github.com/fury-gl/fury/pull/452,closed,1292,0,3,89,29,83,0,0,[],2021-07-04 06:54:02+00:00,2021-09-21 13:49:44+00:00,6850542.0,"79 days, 6:55:42","[{'comment_id': 663531404, 'comment_body': 'For better error handling, should I make a custom exception? \r\nSomething like -\r\n```\r\nclass BondingError(Exception):\r\n pass\r\n```\r\nand then use it by calling \r\n`raise BondingError(""Inadequate Bonding Data!"")`', 'comment_created': datetime.datetime(2021, 7, 4, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663660659, 'comment_body': 'The functions below this comment are used to create actors for the molecules by using MoleculeMapper.\r\nWill it be more appropriate to have them in the molecular module or should they be added to actor module?', 'comment_created': datetime.datetime(2021, 7, 5, 6, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663946013, 'comment_body': 'Thank you @SunTzunami for creating this PR. With setAtomicPosition, are we supposed to set the atomic position of specified atom to other position? The name ""atom_coordinate"" is a bit confusing. ""atom_coordinate"" is supposed to be an array of x_coordinate, y_coordinate and z_coordinate of the atom. But here it is assigned to be integer. ', 'comment_created': datetime.datetime(2021, 7, 5, 13, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 663994035, 'comment_body': 'Thank you @nasimanousheh ! Nice catch!', 'comment_created': datetime.datetime(2021, 7, 5, 15, 0, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667793682, 'comment_body': 'I recommend you to remove this and create a fetcher.\r\n\r\nPlease, look at `fury/data/fetcher.py` for more information', 'comment_created': datetime.datetime(2021, 7, 12, 9, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667794668, 'comment_body': 'Why do you need to do it manually? I believe the `molecular` module will handle this part. otherwise, you need to create a reader in `fury.io`', 'comment_created': datetime.datetime(2021, 7, 12, 10, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795326, 'comment_body': '`molecular.molecular....` : this is repetitive, the actor need to change name', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795505, 'comment_body': 'if not use, comment to remove', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795767, 'comment_body': 'not necessary if you use the fetcher', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667796929, 'comment_body': 'as said before, this should be a property.   In general, if you need a get/set, please, use property tag to be more pythonic', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797105, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797241, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797399, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667798098, 'comment_body': 'What is the goal of this empty class?', 'comment_created': datetime.datetime(2021, 7, 12, 10, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667804346, 'comment_body': ""These can be un-commented to see the other models. I added this example for the members to understand how to use the molecular module.\r\nI'll create the final, proper demo for the module once the module has been made properly (in a pythonic way)."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667808615, 'comment_body': ""It's used to create the mappers which are then used to create actors. Please see [here](https://github.com/fury-gl/fury/pull/452/files#diff-8cedb8d1d2aca3f6f359201c5623b21f1f9b55329c4e7cae44d396e9a62bdec5R632) to see how it's used."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809598, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for the ball stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809868, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667810291, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for sphere representation actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667811549, 'comment_body': 'It is strange to have an empty class. I do not think you need it. \r\n\r\nI should use directly vtkOpenglMoleculeMapper in your different function', 'comment_created': datetime.datetime(2021, 7, 12, 10, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812147, 'comment_body': 'ok, sounds good', 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812304, 'comment_body': ""Okay! I'll use vtkOpenGLMoleculeMapper directly."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667968791, 'comment_body': ""Configuring with capita 'C'."", 'comment_created': datetime.datetime(2021, 7, 12, 14, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 667969214, 'comment_body': '#5. instead of #4.', 'comment_created': datetime.datetime(2021, 7, 12, 14, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 678993834, 'comment_body': 'Please follow the structure that Serge recommended to handle the errors. Maybe it\'s better to use ""Try Except"" to test a block of code for errors rather than ""else"".', 'comment_created': datetime.datetime(2021, 7, 29, 9, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679010880, 'comment_body': 'bond_type should be string not integer.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679021158, 'comment_body': 'Please rename ""bond_type"" to ""bond_order"", Bond type is different than bond order. A data file can have different bond types with same bond order. For example, the bond type of C-C is different than than bond type of C-H but both of them have bond order of 1.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679023854, 'comment_body': ""Do you know which one ('VDW' or 'Covalent') is by default? \r\nYou can raise an error if radius_type is something else."", 'comment_created': datetime.datetime(2021, 7, 29, 10, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679109023, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679109149, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134566, 'comment_body': 'Thanks! Done.', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134747, 'comment_body': 'changed bond_type to bond_order', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679135660, 'comment_body': ""Post comment, I made it such that it's 'VDW' by default and a value error is raised if it's something other than these two. Thanks!"", 'comment_created': datetime.datetime(2021, 7, 29, 13, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679475213, 'comment_body': 'Hi @skoudoro ! Can you please help with writing tests for warnings?', 'comment_created': datetime.datetime(2021, 7, 29, 20, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680143807, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680144819, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680389371, 'comment_body': '- `where H is the total number ....` should be in a new line\r\n- `, optional` for most of them', 'comment_created': datetime.datetime(2021, 7, 31, 17, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390628, 'comment_body': 'not sure about the minus here. what about a colon?', 'comment_created': datetime.datetime(2021, 7, 31, 17, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390712, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390800, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390840, 'comment_body': '`,optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391070, 'comment_body': 'use enumerate instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391106, 'comment_body': 'use enumerate instead, more pythonic', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680394726, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394760, 'comment_body': 'added colon instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394787, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394791, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394796, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394835, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394851, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683471803, 'comment_body': ""''to construct the model'."", 'comment_created': datetime.datetime(2021, 8, 5, 13, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683473521, 'comment_body': '""a"" instead of ""an""', 'comment_created': datetime.datetime(2021, 8, 5, 13, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683546485, 'comment_body': ""If the bond between atom1_index and atom2_index is already exist, does 'add_bond' function (with bond_order=1) add one more bond order between atom1_index and atom2_index? If yes, then 'add_bond' function (with bond_order=3) creates an issue, since at the end, the bond order will be 4.\r\n"", 'comment_created': datetime.datetime(2021, 8, 5, 15, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683556686, 'comment_body': 'The ""index of the atom"" or the ""index of the bond""?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683563584, 'comment_body': 'The propose of this function is not clear to me. Can you please explain what the advantage of coping the atomic information from molecule2 into molecule1 is? Does it merge the information of two molecules into one file?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683568286, 'comment_body': 'Can you please explain what ""SetTolerance"" do? What is the propose of choosing 0.1 factor? ', 'comment_created': datetime.datetime(2021, 8, 5, 15, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683583224, 'comment_body': 'When I change the bond_order from 1 to 2 or 3, the first window shows the structure correctly but the second window shows the structure with only one bond. Is it correct?\r\nI also tried with bond_order = 4. It does not give an error, but by default it shows the structure with one bond order. Maybe we should mention that the bond_order=1 is considered if the bond_order is chosen to be more than 3.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683624441, 'comment_body': ""Basically, vtkSimpleBondPerceiver performs a simple check of all interatomic distances and adds a single bond between atoms that are reasonably close. If the interatomic distance is less than the sum of the two atom's covalent radii plus a tolerance (mathematically, (d < r1 + r2 + tolerance)), a single bond is added. \r\nBy default, vtkSimpleBondPerceiver has a high tolerance of 0.45, I thought that this default tolerance is quite high and might lead to excessive bonding and hence chose an arbitrary value of 0.1."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683625312, 'comment_body': ""It's not possible to transfer molecular information from molecule2 into molecule1 by simple assignment i.e. by setting molecule1 = molecule2. Deep copy copies the molecular information from molecule2 into molecule1. You can check the vtk documentation [here](https://vtk.org/doc/nightly/html/classvtkMolecule.html#a227d15dc1266116895d65e72319f273b)."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683632017, 'comment_body': 'To answer the first part, yes it\'s correct, as you can see on [this](https://github.com/fury-gl/fury/pull/452/files#diff-7c3fdef0e37ff1e81acaf4ff0275d29a6b65c070226c5721dd7b5a0fd54c52bcR186) line, `multiple_bonds` is set to ""Off"" for the second window and as a result it\'ll show only single bonds for double/triple bonds.\r\nFor `bond_order` = 4, I\'ll create a note in the documentation.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637317, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637367, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637511, 'comment_body': 'I created a note', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637573, 'comment_body': 'it should be ""index of the bond"". Thank you!', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685096680, 'comment_body': 'For some reason, the tests pass only when the actor is not added to the scene. This is strange as the tests pass locally for me without commenting out this section.', 'comment_created': datetime.datetime(2021, 8, 9, 10, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685332273, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2021, 8, 9, 16, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693051316, 'comment_body': 'Can you make the title more specific to molecules?', 'comment_created': datetime.datetime(2021, 8, 20, 15, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693051503, 'comment_body': 'False please.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693052565, 'comment_body': 'Also should we cite some papers? There must be some original papers that promoted these representations.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693060721, 'comment_body': 'Why not just use a boolean here? True/False', 'comment_created': datetime.datetime(2021, 8, 20, 16, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693061139, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2021, 8, 20, 16, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693160771, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161041, 'comment_body': 'Done. Makes sense. Nice suggestion!', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161090, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693176966, 'comment_body': 'Good catch! The description was for an earlier version of the demo. I updated the title and description. ', 'comment_created': datetime.datetime(2021, 8, 20, 19, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 701806633, 'comment_body': 'This file is in experimental, should we move it to tutorial @Garyfallidis @SunTzunami @nasimanousheh ?', 'comment_created': datetime.datetime(2021, 9, 3, 11, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701809158, 'comment_body': ""I don't think we should move this to tutorial as this was just for the reviewers/mentors to understand how to work with the module. \r\nI've made proper tutorials (using `fetcher`) for which I'll create PRs once this PR is merged."", 'comment_created': datetime.datetime(2021, 9, 3, 11, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710118060, 'comment_body': 'representations present?\r\nChange verb please.', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118425, 'comment_body': 'blank space missing...', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118834, 'comment_body': 'too many empty lines', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710265811, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266048, 'comment_body': 'I changed the description', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266178, 'comment_body': 'removed the unnecessary ones', 'comment_created': datetime.datetime(2021, 9, 16, 16, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': '9d2a2ff4281c6bf6d3953f25f957906b753e851e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcaa9fd92cc35c2da07872b3ee775b86138eda81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6986f2ab13572a5dfcca5dd3bf10d4921d19b36a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b1ad8da2e7a3c67a7ef5b34249ef37417a585b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93d562f7b1b3785e240ba72f7f25f4ad0673aace', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283f159e7374439e132b851b954ce2e2a7f0bfd6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70b70903ba2f6923d87f8e468eaba6cab6e957b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30edf4405acf14d31f90e921af8f0e7312dc5954', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566bb09c480b603fd9478def2c24c36dd898fee6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3feb4dcf7330d1d6af034aa685b12d87a4776564', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfbb2ebd15acd3cb5bed1fad6af7d40cf033161', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb6de7c6b146b7e2284a5ddd2e0fa0deb8b06b34', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327e6184c87ecff3dcd6f2b9ec48e8201f26d10b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b7ee3c198ebe518fb1533e5b30c5311b0b5023', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da691cffe79e6d232775adb75c52d83a2fda6b45', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4424d72516009aa6def335dab12a33ce5957c18b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0466df051e64d91a457ed5ad9a9a810ac6f06ecb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a172b1e658a6f3632935ce198039eb6d379a3e6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d049a65c0a538a23567ae043d2375edda4e8dd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b28f960400038d5781ae7ceb390625cac2381da5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af78f5b06bc45aa172a01f9c9d2e7962538eba71', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f1127bcb8e0a87ffb15d871fd9c37bfcd9cc91', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd804e028462f6dcadb231cd2ebfa9f19d82bbdfe', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5028d8cc96994184fadbcd9381c3ef3e0444be2c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8c49e10171e908081f29741fd95d71d616e863', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5967e16dc30172925d73c2a683b0facedc4de6b7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd195afce6cc7ac311fcc6943f33a61ad44e634', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0fb4b68ae00ce020052e0685423792315b5780e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d4af18ade6ee34f6787e70ef594b0cd69c782e0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ce86a1808bc5b8f0e33e468c7abab351235551', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '376910978f10b6ee83b94e8a8438c55f80418cce', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed28f282f8d76ada78d37ff5688f395758aca63', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e034489824fd219971b0a9c8c1f4adfc494e777b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf61b5f9ab9dc11f4f768efbd5d0b03972006da7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37427c6ea52c14dadf8de89586f88d54edf40989', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fab9bd0a2101ecdb5a5b67a20a5c4a5a76adcec', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '221f354ad74fa0e7071e35da945528e5dc36b139', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11f4e01b1bb30affaeac47ff60adf9b03168502', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93da7e04a2fb5e53f0609934b14bea94a22d822f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff42613e4d191caa2cb4b8d9623fd51361901dfd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe711567f60bc81a7dfae944f327b6b28c28abc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a9455b4573088547ec4a27de4109f79f035e733', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a22d70f0d69e5f47ae1b28b19d26d802a3f0e3c9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbfc529326e861b5f2060fa073eeec6244422a1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a219959c07ed817eb8136d98d035d241336d6ec9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e53195438534d3f4a316b77c2439d89fa96be35', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e0d8d4c7923230ed78fa71724271269d8cae106', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066174e9c7f6cfe76fc404d0eaa1b917877ad9ac', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b7a309e108a5c9c281d89c4145cbd62f5820cf', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9074b2dfd3d49c32dfbfdc712f180566ed9cf50c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c75a00bebd0bdf63ec92e077a9e1c15f61229f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8fedc5200619bfaf19b5642023a2e40fb6ef63d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfe34fb280f50af3ca7978513559d595c723e93c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c4136a0ca3cccab9c70e2b6820fa9a85f2d738d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55abe18534068e7029377c94af6948d20b707828', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c7844d798e8f2c02a2f11570736b42988d7fc1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb89968265f0a5767bbac7539e748e49293da688', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70129cd0b3c57b97e0a66d5653c74064c1555a8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1954fb4d1cb47a66b4d7fc5c54e30a9a7faea7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e2132f162064583230b8a507e1878b331b7b5de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73835106f6269e17e82dc21afb538bb7547e9e87', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0091bae2c8fd3192c9ce4cac5dbc2dd3334031', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7b9d4da1152d85818ffa7d699dc6bafeb000d0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e03c73f3217c95c33c3aa05e78c44ef722d1f17c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0cf8aa20f643cdc66644389ef3986ed51cabc5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd18b94bebaadd7da2bd8d43bfd74f5d6810a6a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6e69d5ccd18a6db4113fa65c282d6b2edd1264', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864a270a307a7e2a545e242b2958db9b691c509c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfdb32930b736f49af80093c29f75ce735138a7a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ca9f298937994422a143e5a96428b3a7587b445', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24eb6b45e03ccdd93d7599f2380055c6cb733217', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a07443cd284824a0b0532c8e8a7d254b99c886', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d90e9c124aa594847e02d2cbe05e7bdce53999', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3b9ea33cf400dfdb4b77fd0a4c23c7387847a32', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551b790f226bb192c9ea3722bbe4d266f91475a7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3d82884f29ff542d4db79dee560c0f3517f366', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319dbfa6150dd40366013c7b8372dbdc51d8bbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d310fb7186ed3a1aaf059f3c9c333b98b003097', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84110458055f5cce6021e0fd53f710e29ca8df81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635be2ea46850d8142d077a755c54c09b9862983', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '667b945bf89de48c634d0ec37a98cba4a45a9172', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02047489fbbff935bae8e50f8c5f2ccf29c9948', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae7dfa6a50c09b8301d661e48cc6760b82cacbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fca0da03a8b6d75be794c3034ab1441cdf81d6b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d11d39eea131241e46841a01652d89da3acee4d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4e03fb6c596e53cc9051f5811b0dd27d09e42d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02063158376fcb3b62a3d0c463665b2abde77b77', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503550d2e8d627a1933023f23f62a66b5dd96beb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46ee5cf3d762eeecb55f5868ca9b5092636d96b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
683125690,Molecular module,A module for reading molecule data which can be then used to create actors.,True,452,https://api.github.com/repos/fury-gl/fury/pulls/452,https://github.com/fury-gl/fury/pull/452,closed,1292,0,3,89,29,83,0,0,[],2021-07-04 06:54:02+00:00,2021-09-21 13:49:44+00:00,6850542.0,"79 days, 6:55:42","[{'comment_id': 663531404, 'comment_body': 'For better error handling, should I make a custom exception? \r\nSomething like -\r\n```\r\nclass BondingError(Exception):\r\n pass\r\n```\r\nand then use it by calling \r\n`raise BondingError(""Inadequate Bonding Data!"")`', 'comment_created': datetime.datetime(2021, 7, 4, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663660659, 'comment_body': 'The functions below this comment are used to create actors for the molecules by using MoleculeMapper.\r\nWill it be more appropriate to have them in the molecular module or should they be added to actor module?', 'comment_created': datetime.datetime(2021, 7, 5, 6, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663946013, 'comment_body': 'Thank you @SunTzunami for creating this PR. With setAtomicPosition, are we supposed to set the atomic position of specified atom to other position? The name ""atom_coordinate"" is a bit confusing. ""atom_coordinate"" is supposed to be an array of x_coordinate, y_coordinate and z_coordinate of the atom. But here it is assigned to be integer. ', 'comment_created': datetime.datetime(2021, 7, 5, 13, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 663994035, 'comment_body': 'Thank you @nasimanousheh ! Nice catch!', 'comment_created': datetime.datetime(2021, 7, 5, 15, 0, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667793682, 'comment_body': 'I recommend you to remove this and create a fetcher.\r\n\r\nPlease, look at `fury/data/fetcher.py` for more information', 'comment_created': datetime.datetime(2021, 7, 12, 9, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667794668, 'comment_body': 'Why do you need to do it manually? I believe the `molecular` module will handle this part. otherwise, you need to create a reader in `fury.io`', 'comment_created': datetime.datetime(2021, 7, 12, 10, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795326, 'comment_body': '`molecular.molecular....` : this is repetitive, the actor need to change name', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795505, 'comment_body': 'if not use, comment to remove', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795767, 'comment_body': 'not necessary if you use the fetcher', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667796929, 'comment_body': 'as said before, this should be a property.   In general, if you need a get/set, please, use property tag to be more pythonic', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797105, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797241, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797399, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667798098, 'comment_body': 'What is the goal of this empty class?', 'comment_created': datetime.datetime(2021, 7, 12, 10, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667804346, 'comment_body': ""These can be un-commented to see the other models. I added this example for the members to understand how to use the molecular module.\r\nI'll create the final, proper demo for the module once the module has been made properly (in a pythonic way)."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667808615, 'comment_body': ""It's used to create the mappers which are then used to create actors. Please see [here](https://github.com/fury-gl/fury/pull/452/files#diff-8cedb8d1d2aca3f6f359201c5623b21f1f9b55329c4e7cae44d396e9a62bdec5R632) to see how it's used."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809598, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for the ball stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809868, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667810291, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for sphere representation actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667811549, 'comment_body': 'It is strange to have an empty class. I do not think you need it. \r\n\r\nI should use directly vtkOpenglMoleculeMapper in your different function', 'comment_created': datetime.datetime(2021, 7, 12, 10, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812147, 'comment_body': 'ok, sounds good', 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812304, 'comment_body': ""Okay! I'll use vtkOpenGLMoleculeMapper directly."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667968791, 'comment_body': ""Configuring with capita 'C'."", 'comment_created': datetime.datetime(2021, 7, 12, 14, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 667969214, 'comment_body': '#5. instead of #4.', 'comment_created': datetime.datetime(2021, 7, 12, 14, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 678993834, 'comment_body': 'Please follow the structure that Serge recommended to handle the errors. Maybe it\'s better to use ""Try Except"" to test a block of code for errors rather than ""else"".', 'comment_created': datetime.datetime(2021, 7, 29, 9, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679010880, 'comment_body': 'bond_type should be string not integer.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679021158, 'comment_body': 'Please rename ""bond_type"" to ""bond_order"", Bond type is different than bond order. A data file can have different bond types with same bond order. For example, the bond type of C-C is different than than bond type of C-H but both of them have bond order of 1.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679023854, 'comment_body': ""Do you know which one ('VDW' or 'Covalent') is by default? \r\nYou can raise an error if radius_type is something else."", 'comment_created': datetime.datetime(2021, 7, 29, 10, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679109023, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679109149, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134566, 'comment_body': 'Thanks! Done.', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134747, 'comment_body': 'changed bond_type to bond_order', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679135660, 'comment_body': ""Post comment, I made it such that it's 'VDW' by default and a value error is raised if it's something other than these two. Thanks!"", 'comment_created': datetime.datetime(2021, 7, 29, 13, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679475213, 'comment_body': 'Hi @skoudoro ! Can you please help with writing tests for warnings?', 'comment_created': datetime.datetime(2021, 7, 29, 20, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680143807, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680144819, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680389371, 'comment_body': '- `where H is the total number ....` should be in a new line\r\n- `, optional` for most of them', 'comment_created': datetime.datetime(2021, 7, 31, 17, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390628, 'comment_body': 'not sure about the minus here. what about a colon?', 'comment_created': datetime.datetime(2021, 7, 31, 17, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390712, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390800, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390840, 'comment_body': '`,optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391070, 'comment_body': 'use enumerate instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391106, 'comment_body': 'use enumerate instead, more pythonic', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680394726, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394760, 'comment_body': 'added colon instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394787, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394791, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394796, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394835, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394851, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683471803, 'comment_body': ""''to construct the model'."", 'comment_created': datetime.datetime(2021, 8, 5, 13, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683473521, 'comment_body': '""a"" instead of ""an""', 'comment_created': datetime.datetime(2021, 8, 5, 13, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683546485, 'comment_body': ""If the bond between atom1_index and atom2_index is already exist, does 'add_bond' function (with bond_order=1) add one more bond order between atom1_index and atom2_index? If yes, then 'add_bond' function (with bond_order=3) creates an issue, since at the end, the bond order will be 4.\r\n"", 'comment_created': datetime.datetime(2021, 8, 5, 15, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683556686, 'comment_body': 'The ""index of the atom"" or the ""index of the bond""?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683563584, 'comment_body': 'The propose of this function is not clear to me. Can you please explain what the advantage of coping the atomic information from molecule2 into molecule1 is? Does it merge the information of two molecules into one file?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683568286, 'comment_body': 'Can you please explain what ""SetTolerance"" do? What is the propose of choosing 0.1 factor? ', 'comment_created': datetime.datetime(2021, 8, 5, 15, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683583224, 'comment_body': 'When I change the bond_order from 1 to 2 or 3, the first window shows the structure correctly but the second window shows the structure with only one bond. Is it correct?\r\nI also tried with bond_order = 4. It does not give an error, but by default it shows the structure with one bond order. Maybe we should mention that the bond_order=1 is considered if the bond_order is chosen to be more than 3.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683624441, 'comment_body': ""Basically, vtkSimpleBondPerceiver performs a simple check of all interatomic distances and adds a single bond between atoms that are reasonably close. If the interatomic distance is less than the sum of the two atom's covalent radii plus a tolerance (mathematically, (d < r1 + r2 + tolerance)), a single bond is added. \r\nBy default, vtkSimpleBondPerceiver has a high tolerance of 0.45, I thought that this default tolerance is quite high and might lead to excessive bonding and hence chose an arbitrary value of 0.1."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683625312, 'comment_body': ""It's not possible to transfer molecular information from molecule2 into molecule1 by simple assignment i.e. by setting molecule1 = molecule2. Deep copy copies the molecular information from molecule2 into molecule1. You can check the vtk documentation [here](https://vtk.org/doc/nightly/html/classvtkMolecule.html#a227d15dc1266116895d65e72319f273b)."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683632017, 'comment_body': 'To answer the first part, yes it\'s correct, as you can see on [this](https://github.com/fury-gl/fury/pull/452/files#diff-7c3fdef0e37ff1e81acaf4ff0275d29a6b65c070226c5721dd7b5a0fd54c52bcR186) line, `multiple_bonds` is set to ""Off"" for the second window and as a result it\'ll show only single bonds for double/triple bonds.\r\nFor `bond_order` = 4, I\'ll create a note in the documentation.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637317, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637367, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637511, 'comment_body': 'I created a note', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637573, 'comment_body': 'it should be ""index of the bond"". Thank you!', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685096680, 'comment_body': 'For some reason, the tests pass only when the actor is not added to the scene. This is strange as the tests pass locally for me without commenting out this section.', 'comment_created': datetime.datetime(2021, 8, 9, 10, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685332273, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2021, 8, 9, 16, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693051316, 'comment_body': 'Can you make the title more specific to molecules?', 'comment_created': datetime.datetime(2021, 8, 20, 15, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693051503, 'comment_body': 'False please.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693052565, 'comment_body': 'Also should we cite some papers? There must be some original papers that promoted these representations.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693060721, 'comment_body': 'Why not just use a boolean here? True/False', 'comment_created': datetime.datetime(2021, 8, 20, 16, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693061139, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2021, 8, 20, 16, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693160771, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161041, 'comment_body': 'Done. Makes sense. Nice suggestion!', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161090, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693176966, 'comment_body': 'Good catch! The description was for an earlier version of the demo. I updated the title and description. ', 'comment_created': datetime.datetime(2021, 8, 20, 19, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 701806633, 'comment_body': 'This file is in experimental, should we move it to tutorial @Garyfallidis @SunTzunami @nasimanousheh ?', 'comment_created': datetime.datetime(2021, 9, 3, 11, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701809158, 'comment_body': ""I don't think we should move this to tutorial as this was just for the reviewers/mentors to understand how to work with the module. \r\nI've made proper tutorials (using `fetcher`) for which I'll create PRs once this PR is merged."", 'comment_created': datetime.datetime(2021, 9, 3, 11, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710118060, 'comment_body': 'representations present?\r\nChange verb please.', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118425, 'comment_body': 'blank space missing...', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118834, 'comment_body': 'too many empty lines', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710265811, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266048, 'comment_body': 'I changed the description', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266178, 'comment_body': 'removed the unnecessary ones', 'comment_created': datetime.datetime(2021, 9, 16, 16, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': '9d2a2ff4281c6bf6d3953f25f957906b753e851e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcaa9fd92cc35c2da07872b3ee775b86138eda81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6986f2ab13572a5dfcca5dd3bf10d4921d19b36a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b1ad8da2e7a3c67a7ef5b34249ef37417a585b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93d562f7b1b3785e240ba72f7f25f4ad0673aace', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283f159e7374439e132b851b954ce2e2a7f0bfd6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70b70903ba2f6923d87f8e468eaba6cab6e957b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30edf4405acf14d31f90e921af8f0e7312dc5954', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566bb09c480b603fd9478def2c24c36dd898fee6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3feb4dcf7330d1d6af034aa685b12d87a4776564', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfbb2ebd15acd3cb5bed1fad6af7d40cf033161', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb6de7c6b146b7e2284a5ddd2e0fa0deb8b06b34', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327e6184c87ecff3dcd6f2b9ec48e8201f26d10b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b7ee3c198ebe518fb1533e5b30c5311b0b5023', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da691cffe79e6d232775adb75c52d83a2fda6b45', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4424d72516009aa6def335dab12a33ce5957c18b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0466df051e64d91a457ed5ad9a9a810ac6f06ecb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a172b1e658a6f3632935ce198039eb6d379a3e6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d049a65c0a538a23567ae043d2375edda4e8dd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b28f960400038d5781ae7ceb390625cac2381da5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af78f5b06bc45aa172a01f9c9d2e7962538eba71', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f1127bcb8e0a87ffb15d871fd9c37bfcd9cc91', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd804e028462f6dcadb231cd2ebfa9f19d82bbdfe', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5028d8cc96994184fadbcd9381c3ef3e0444be2c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8c49e10171e908081f29741fd95d71d616e863', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5967e16dc30172925d73c2a683b0facedc4de6b7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd195afce6cc7ac311fcc6943f33a61ad44e634', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0fb4b68ae00ce020052e0685423792315b5780e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d4af18ade6ee34f6787e70ef594b0cd69c782e0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ce86a1808bc5b8f0e33e468c7abab351235551', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '376910978f10b6ee83b94e8a8438c55f80418cce', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed28f282f8d76ada78d37ff5688f395758aca63', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e034489824fd219971b0a9c8c1f4adfc494e777b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf61b5f9ab9dc11f4f768efbd5d0b03972006da7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37427c6ea52c14dadf8de89586f88d54edf40989', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fab9bd0a2101ecdb5a5b67a20a5c4a5a76adcec', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '221f354ad74fa0e7071e35da945528e5dc36b139', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11f4e01b1bb30affaeac47ff60adf9b03168502', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93da7e04a2fb5e53f0609934b14bea94a22d822f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff42613e4d191caa2cb4b8d9623fd51361901dfd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe711567f60bc81a7dfae944f327b6b28c28abc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a9455b4573088547ec4a27de4109f79f035e733', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a22d70f0d69e5f47ae1b28b19d26d802a3f0e3c9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbfc529326e861b5f2060fa073eeec6244422a1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a219959c07ed817eb8136d98d035d241336d6ec9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e53195438534d3f4a316b77c2439d89fa96be35', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e0d8d4c7923230ed78fa71724271269d8cae106', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066174e9c7f6cfe76fc404d0eaa1b917877ad9ac', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b7a309e108a5c9c281d89c4145cbd62f5820cf', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9074b2dfd3d49c32dfbfdc712f180566ed9cf50c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c75a00bebd0bdf63ec92e077a9e1c15f61229f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8fedc5200619bfaf19b5642023a2e40fb6ef63d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfe34fb280f50af3ca7978513559d595c723e93c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c4136a0ca3cccab9c70e2b6820fa9a85f2d738d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55abe18534068e7029377c94af6948d20b707828', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c7844d798e8f2c02a2f11570736b42988d7fc1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb89968265f0a5767bbac7539e748e49293da688', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70129cd0b3c57b97e0a66d5653c74064c1555a8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1954fb4d1cb47a66b4d7fc5c54e30a9a7faea7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e2132f162064583230b8a507e1878b331b7b5de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73835106f6269e17e82dc21afb538bb7547e9e87', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0091bae2c8fd3192c9ce4cac5dbc2dd3334031', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7b9d4da1152d85818ffa7d699dc6bafeb000d0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e03c73f3217c95c33c3aa05e78c44ef722d1f17c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0cf8aa20f643cdc66644389ef3986ed51cabc5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd18b94bebaadd7da2bd8d43bfd74f5d6810a6a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6e69d5ccd18a6db4113fa65c282d6b2edd1264', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864a270a307a7e2a545e242b2958db9b691c509c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfdb32930b736f49af80093c29f75ce735138a7a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ca9f298937994422a143e5a96428b3a7587b445', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24eb6b45e03ccdd93d7599f2380055c6cb733217', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a07443cd284824a0b0532c8e8a7d254b99c886', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d90e9c124aa594847e02d2cbe05e7bdce53999', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3b9ea33cf400dfdb4b77fd0a4c23c7387847a32', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551b790f226bb192c9ea3722bbe4d266f91475a7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3d82884f29ff542d4db79dee560c0f3517f366', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319dbfa6150dd40366013c7b8372dbdc51d8bbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d310fb7186ed3a1aaf059f3c9c333b98b003097', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84110458055f5cce6021e0fd53f710e29ca8df81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635be2ea46850d8142d077a755c54c09b9862983', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '667b945bf89de48c634d0ec37a98cba4a45a9172', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02047489fbbff935bae8e50f8c5f2ccf29c9948', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae7dfa6a50c09b8301d661e48cc6760b82cacbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fca0da03a8b6d75be794c3034ab1441cdf81d6b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d11d39eea131241e46841a01652d89da3acee4d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4e03fb6c596e53cc9051f5811b0dd27d09e42d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02063158376fcb3b62a3d0c463665b2abde77b77', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503550d2e8d627a1933023f23f62a66b5dd96beb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46ee5cf3d762eeecb55f5868ca9b5092636d96b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
683125690,Molecular module,A module for reading molecule data which can be then used to create actors.,True,452,https://api.github.com/repos/fury-gl/fury/pulls/452,https://github.com/fury-gl/fury/pull/452,closed,1292,0,3,89,29,83,0,0,[],2021-07-04 06:54:02+00:00,2021-09-21 13:49:44+00:00,6850542.0,"79 days, 6:55:42","[{'comment_id': 663531404, 'comment_body': 'For better error handling, should I make a custom exception? \r\nSomething like -\r\n```\r\nclass BondingError(Exception):\r\n pass\r\n```\r\nand then use it by calling \r\n`raise BondingError(""Inadequate Bonding Data!"")`', 'comment_created': datetime.datetime(2021, 7, 4, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663660659, 'comment_body': 'The functions below this comment are used to create actors for the molecules by using MoleculeMapper.\r\nWill it be more appropriate to have them in the molecular module or should they be added to actor module?', 'comment_created': datetime.datetime(2021, 7, 5, 6, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663946013, 'comment_body': 'Thank you @SunTzunami for creating this PR. With setAtomicPosition, are we supposed to set the atomic position of specified atom to other position? The name ""atom_coordinate"" is a bit confusing. ""atom_coordinate"" is supposed to be an array of x_coordinate, y_coordinate and z_coordinate of the atom. But here it is assigned to be integer. ', 'comment_created': datetime.datetime(2021, 7, 5, 13, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 663994035, 'comment_body': 'Thank you @nasimanousheh ! Nice catch!', 'comment_created': datetime.datetime(2021, 7, 5, 15, 0, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667793682, 'comment_body': 'I recommend you to remove this and create a fetcher.\r\n\r\nPlease, look at `fury/data/fetcher.py` for more information', 'comment_created': datetime.datetime(2021, 7, 12, 9, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667794668, 'comment_body': 'Why do you need to do it manually? I believe the `molecular` module will handle this part. otherwise, you need to create a reader in `fury.io`', 'comment_created': datetime.datetime(2021, 7, 12, 10, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795326, 'comment_body': '`molecular.molecular....` : this is repetitive, the actor need to change name', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795505, 'comment_body': 'if not use, comment to remove', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795767, 'comment_body': 'not necessary if you use the fetcher', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667796929, 'comment_body': 'as said before, this should be a property.   In general, if you need a get/set, please, use property tag to be more pythonic', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797105, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797241, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797399, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667798098, 'comment_body': 'What is the goal of this empty class?', 'comment_created': datetime.datetime(2021, 7, 12, 10, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667804346, 'comment_body': ""These can be un-commented to see the other models. I added this example for the members to understand how to use the molecular module.\r\nI'll create the final, proper demo for the module once the module has been made properly (in a pythonic way)."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667808615, 'comment_body': ""It's used to create the mappers which are then used to create actors. Please see [here](https://github.com/fury-gl/fury/pull/452/files#diff-8cedb8d1d2aca3f6f359201c5623b21f1f9b55329c4e7cae44d396e9a62bdec5R632) to see how it's used."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809598, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for the ball stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809868, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667810291, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for sphere representation actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667811549, 'comment_body': 'It is strange to have an empty class. I do not think you need it. \r\n\r\nI should use directly vtkOpenglMoleculeMapper in your different function', 'comment_created': datetime.datetime(2021, 7, 12, 10, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812147, 'comment_body': 'ok, sounds good', 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812304, 'comment_body': ""Okay! I'll use vtkOpenGLMoleculeMapper directly."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667968791, 'comment_body': ""Configuring with capita 'C'."", 'comment_created': datetime.datetime(2021, 7, 12, 14, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 667969214, 'comment_body': '#5. instead of #4.', 'comment_created': datetime.datetime(2021, 7, 12, 14, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 678993834, 'comment_body': 'Please follow the structure that Serge recommended to handle the errors. Maybe it\'s better to use ""Try Except"" to test a block of code for errors rather than ""else"".', 'comment_created': datetime.datetime(2021, 7, 29, 9, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679010880, 'comment_body': 'bond_type should be string not integer.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679021158, 'comment_body': 'Please rename ""bond_type"" to ""bond_order"", Bond type is different than bond order. A data file can have different bond types with same bond order. For example, the bond type of C-C is different than than bond type of C-H but both of them have bond order of 1.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679023854, 'comment_body': ""Do you know which one ('VDW' or 'Covalent') is by default? \r\nYou can raise an error if radius_type is something else."", 'comment_created': datetime.datetime(2021, 7, 29, 10, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679109023, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679109149, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134566, 'comment_body': 'Thanks! Done.', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134747, 'comment_body': 'changed bond_type to bond_order', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679135660, 'comment_body': ""Post comment, I made it such that it's 'VDW' by default and a value error is raised if it's something other than these two. Thanks!"", 'comment_created': datetime.datetime(2021, 7, 29, 13, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679475213, 'comment_body': 'Hi @skoudoro ! Can you please help with writing tests for warnings?', 'comment_created': datetime.datetime(2021, 7, 29, 20, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680143807, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680144819, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680389371, 'comment_body': '- `where H is the total number ....` should be in a new line\r\n- `, optional` for most of them', 'comment_created': datetime.datetime(2021, 7, 31, 17, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390628, 'comment_body': 'not sure about the minus here. what about a colon?', 'comment_created': datetime.datetime(2021, 7, 31, 17, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390712, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390800, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390840, 'comment_body': '`,optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391070, 'comment_body': 'use enumerate instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391106, 'comment_body': 'use enumerate instead, more pythonic', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680394726, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394760, 'comment_body': 'added colon instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394787, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394791, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394796, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394835, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394851, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683471803, 'comment_body': ""''to construct the model'."", 'comment_created': datetime.datetime(2021, 8, 5, 13, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683473521, 'comment_body': '""a"" instead of ""an""', 'comment_created': datetime.datetime(2021, 8, 5, 13, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683546485, 'comment_body': ""If the bond between atom1_index and atom2_index is already exist, does 'add_bond' function (with bond_order=1) add one more bond order between atom1_index and atom2_index? If yes, then 'add_bond' function (with bond_order=3) creates an issue, since at the end, the bond order will be 4.\r\n"", 'comment_created': datetime.datetime(2021, 8, 5, 15, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683556686, 'comment_body': 'The ""index of the atom"" or the ""index of the bond""?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683563584, 'comment_body': 'The propose of this function is not clear to me. Can you please explain what the advantage of coping the atomic information from molecule2 into molecule1 is? Does it merge the information of two molecules into one file?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683568286, 'comment_body': 'Can you please explain what ""SetTolerance"" do? What is the propose of choosing 0.1 factor? ', 'comment_created': datetime.datetime(2021, 8, 5, 15, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683583224, 'comment_body': 'When I change the bond_order from 1 to 2 or 3, the first window shows the structure correctly but the second window shows the structure with only one bond. Is it correct?\r\nI also tried with bond_order = 4. It does not give an error, but by default it shows the structure with one bond order. Maybe we should mention that the bond_order=1 is considered if the bond_order is chosen to be more than 3.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683624441, 'comment_body': ""Basically, vtkSimpleBondPerceiver performs a simple check of all interatomic distances and adds a single bond between atoms that are reasonably close. If the interatomic distance is less than the sum of the two atom's covalent radii plus a tolerance (mathematically, (d < r1 + r2 + tolerance)), a single bond is added. \r\nBy default, vtkSimpleBondPerceiver has a high tolerance of 0.45, I thought that this default tolerance is quite high and might lead to excessive bonding and hence chose an arbitrary value of 0.1."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683625312, 'comment_body': ""It's not possible to transfer molecular information from molecule2 into molecule1 by simple assignment i.e. by setting molecule1 = molecule2. Deep copy copies the molecular information from molecule2 into molecule1. You can check the vtk documentation [here](https://vtk.org/doc/nightly/html/classvtkMolecule.html#a227d15dc1266116895d65e72319f273b)."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683632017, 'comment_body': 'To answer the first part, yes it\'s correct, as you can see on [this](https://github.com/fury-gl/fury/pull/452/files#diff-7c3fdef0e37ff1e81acaf4ff0275d29a6b65c070226c5721dd7b5a0fd54c52bcR186) line, `multiple_bonds` is set to ""Off"" for the second window and as a result it\'ll show only single bonds for double/triple bonds.\r\nFor `bond_order` = 4, I\'ll create a note in the documentation.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637317, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637367, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637511, 'comment_body': 'I created a note', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637573, 'comment_body': 'it should be ""index of the bond"". Thank you!', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685096680, 'comment_body': 'For some reason, the tests pass only when the actor is not added to the scene. This is strange as the tests pass locally for me without commenting out this section.', 'comment_created': datetime.datetime(2021, 8, 9, 10, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685332273, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2021, 8, 9, 16, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693051316, 'comment_body': 'Can you make the title more specific to molecules?', 'comment_created': datetime.datetime(2021, 8, 20, 15, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693051503, 'comment_body': 'False please.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693052565, 'comment_body': 'Also should we cite some papers? There must be some original papers that promoted these representations.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693060721, 'comment_body': 'Why not just use a boolean here? True/False', 'comment_created': datetime.datetime(2021, 8, 20, 16, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693061139, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2021, 8, 20, 16, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693160771, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161041, 'comment_body': 'Done. Makes sense. Nice suggestion!', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161090, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693176966, 'comment_body': 'Good catch! The description was for an earlier version of the demo. I updated the title and description. ', 'comment_created': datetime.datetime(2021, 8, 20, 19, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 701806633, 'comment_body': 'This file is in experimental, should we move it to tutorial @Garyfallidis @SunTzunami @nasimanousheh ?', 'comment_created': datetime.datetime(2021, 9, 3, 11, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701809158, 'comment_body': ""I don't think we should move this to tutorial as this was just for the reviewers/mentors to understand how to work with the module. \r\nI've made proper tutorials (using `fetcher`) for which I'll create PRs once this PR is merged."", 'comment_created': datetime.datetime(2021, 9, 3, 11, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710118060, 'comment_body': 'representations present?\r\nChange verb please.', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118425, 'comment_body': 'blank space missing...', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118834, 'comment_body': 'too many empty lines', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710265811, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266048, 'comment_body': 'I changed the description', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266178, 'comment_body': 'removed the unnecessary ones', 'comment_created': datetime.datetime(2021, 9, 16, 16, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': '9d2a2ff4281c6bf6d3953f25f957906b753e851e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcaa9fd92cc35c2da07872b3ee775b86138eda81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6986f2ab13572a5dfcca5dd3bf10d4921d19b36a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b1ad8da2e7a3c67a7ef5b34249ef37417a585b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93d562f7b1b3785e240ba72f7f25f4ad0673aace', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283f159e7374439e132b851b954ce2e2a7f0bfd6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70b70903ba2f6923d87f8e468eaba6cab6e957b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30edf4405acf14d31f90e921af8f0e7312dc5954', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566bb09c480b603fd9478def2c24c36dd898fee6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3feb4dcf7330d1d6af034aa685b12d87a4776564', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfbb2ebd15acd3cb5bed1fad6af7d40cf033161', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb6de7c6b146b7e2284a5ddd2e0fa0deb8b06b34', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327e6184c87ecff3dcd6f2b9ec48e8201f26d10b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b7ee3c198ebe518fb1533e5b30c5311b0b5023', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da691cffe79e6d232775adb75c52d83a2fda6b45', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4424d72516009aa6def335dab12a33ce5957c18b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0466df051e64d91a457ed5ad9a9a810ac6f06ecb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a172b1e658a6f3632935ce198039eb6d379a3e6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d049a65c0a538a23567ae043d2375edda4e8dd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b28f960400038d5781ae7ceb390625cac2381da5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af78f5b06bc45aa172a01f9c9d2e7962538eba71', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f1127bcb8e0a87ffb15d871fd9c37bfcd9cc91', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd804e028462f6dcadb231cd2ebfa9f19d82bbdfe', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5028d8cc96994184fadbcd9381c3ef3e0444be2c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8c49e10171e908081f29741fd95d71d616e863', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5967e16dc30172925d73c2a683b0facedc4de6b7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd195afce6cc7ac311fcc6943f33a61ad44e634', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0fb4b68ae00ce020052e0685423792315b5780e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d4af18ade6ee34f6787e70ef594b0cd69c782e0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ce86a1808bc5b8f0e33e468c7abab351235551', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '376910978f10b6ee83b94e8a8438c55f80418cce', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed28f282f8d76ada78d37ff5688f395758aca63', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e034489824fd219971b0a9c8c1f4adfc494e777b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf61b5f9ab9dc11f4f768efbd5d0b03972006da7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37427c6ea52c14dadf8de89586f88d54edf40989', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fab9bd0a2101ecdb5a5b67a20a5c4a5a76adcec', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '221f354ad74fa0e7071e35da945528e5dc36b139', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11f4e01b1bb30affaeac47ff60adf9b03168502', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93da7e04a2fb5e53f0609934b14bea94a22d822f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff42613e4d191caa2cb4b8d9623fd51361901dfd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe711567f60bc81a7dfae944f327b6b28c28abc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a9455b4573088547ec4a27de4109f79f035e733', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a22d70f0d69e5f47ae1b28b19d26d802a3f0e3c9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbfc529326e861b5f2060fa073eeec6244422a1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a219959c07ed817eb8136d98d035d241336d6ec9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e53195438534d3f4a316b77c2439d89fa96be35', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e0d8d4c7923230ed78fa71724271269d8cae106', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066174e9c7f6cfe76fc404d0eaa1b917877ad9ac', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b7a309e108a5c9c281d89c4145cbd62f5820cf', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9074b2dfd3d49c32dfbfdc712f180566ed9cf50c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c75a00bebd0bdf63ec92e077a9e1c15f61229f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8fedc5200619bfaf19b5642023a2e40fb6ef63d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfe34fb280f50af3ca7978513559d595c723e93c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c4136a0ca3cccab9c70e2b6820fa9a85f2d738d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55abe18534068e7029377c94af6948d20b707828', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c7844d798e8f2c02a2f11570736b42988d7fc1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb89968265f0a5767bbac7539e748e49293da688', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70129cd0b3c57b97e0a66d5653c74064c1555a8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1954fb4d1cb47a66b4d7fc5c54e30a9a7faea7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e2132f162064583230b8a507e1878b331b7b5de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73835106f6269e17e82dc21afb538bb7547e9e87', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0091bae2c8fd3192c9ce4cac5dbc2dd3334031', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7b9d4da1152d85818ffa7d699dc6bafeb000d0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e03c73f3217c95c33c3aa05e78c44ef722d1f17c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0cf8aa20f643cdc66644389ef3986ed51cabc5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd18b94bebaadd7da2bd8d43bfd74f5d6810a6a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6e69d5ccd18a6db4113fa65c282d6b2edd1264', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864a270a307a7e2a545e242b2958db9b691c509c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfdb32930b736f49af80093c29f75ce735138a7a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ca9f298937994422a143e5a96428b3a7587b445', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24eb6b45e03ccdd93d7599f2380055c6cb733217', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a07443cd284824a0b0532c8e8a7d254b99c886', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d90e9c124aa594847e02d2cbe05e7bdce53999', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3b9ea33cf400dfdb4b77fd0a4c23c7387847a32', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551b790f226bb192c9ea3722bbe4d266f91475a7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3d82884f29ff542d4db79dee560c0f3517f366', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319dbfa6150dd40366013c7b8372dbdc51d8bbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d310fb7186ed3a1aaf059f3c9c333b98b003097', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84110458055f5cce6021e0fd53f710e29ca8df81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635be2ea46850d8142d077a755c54c09b9862983', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '667b945bf89de48c634d0ec37a98cba4a45a9172', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02047489fbbff935bae8e50f8c5f2ccf29c9948', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae7dfa6a50c09b8301d661e48cc6760b82cacbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fca0da03a8b6d75be794c3034ab1441cdf81d6b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d11d39eea131241e46841a01652d89da3acee4d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4e03fb6c596e53cc9051f5811b0dd27d09e42d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02063158376fcb3b62a3d0c463665b2abde77b77', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503550d2e8d627a1933023f23f62a66b5dd96beb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46ee5cf3d762eeecb55f5868ca9b5092636d96b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
683125690,Molecular module,A module for reading molecule data which can be then used to create actors.,True,452,https://api.github.com/repos/fury-gl/fury/pulls/452,https://github.com/fury-gl/fury/pull/452,closed,1292,0,3,89,29,83,0,0,[],2021-07-04 06:54:02+00:00,2021-09-21 13:49:44+00:00,6850542.0,"79 days, 6:55:42","[{'comment_id': 663531404, 'comment_body': 'For better error handling, should I make a custom exception? \r\nSomething like -\r\n```\r\nclass BondingError(Exception):\r\n pass\r\n```\r\nand then use it by calling \r\n`raise BondingError(""Inadequate Bonding Data!"")`', 'comment_created': datetime.datetime(2021, 7, 4, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663660659, 'comment_body': 'The functions below this comment are used to create actors for the molecules by using MoleculeMapper.\r\nWill it be more appropriate to have them in the molecular module or should they be added to actor module?', 'comment_created': datetime.datetime(2021, 7, 5, 6, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663946013, 'comment_body': 'Thank you @SunTzunami for creating this PR. With setAtomicPosition, are we supposed to set the atomic position of specified atom to other position? The name ""atom_coordinate"" is a bit confusing. ""atom_coordinate"" is supposed to be an array of x_coordinate, y_coordinate and z_coordinate of the atom. But here it is assigned to be integer. ', 'comment_created': datetime.datetime(2021, 7, 5, 13, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 663994035, 'comment_body': 'Thank you @nasimanousheh ! Nice catch!', 'comment_created': datetime.datetime(2021, 7, 5, 15, 0, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667793682, 'comment_body': 'I recommend you to remove this and create a fetcher.\r\n\r\nPlease, look at `fury/data/fetcher.py` for more information', 'comment_created': datetime.datetime(2021, 7, 12, 9, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667794668, 'comment_body': 'Why do you need to do it manually? I believe the `molecular` module will handle this part. otherwise, you need to create a reader in `fury.io`', 'comment_created': datetime.datetime(2021, 7, 12, 10, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795326, 'comment_body': '`molecular.molecular....` : this is repetitive, the actor need to change name', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795505, 'comment_body': 'if not use, comment to remove', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795767, 'comment_body': 'not necessary if you use the fetcher', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667796929, 'comment_body': 'as said before, this should be a property.   In general, if you need a get/set, please, use property tag to be more pythonic', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797105, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797241, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797399, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667798098, 'comment_body': 'What is the goal of this empty class?', 'comment_created': datetime.datetime(2021, 7, 12, 10, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667804346, 'comment_body': ""These can be un-commented to see the other models. I added this example for the members to understand how to use the molecular module.\r\nI'll create the final, proper demo for the module once the module has been made properly (in a pythonic way)."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667808615, 'comment_body': ""It's used to create the mappers which are then used to create actors. Please see [here](https://github.com/fury-gl/fury/pull/452/files#diff-8cedb8d1d2aca3f6f359201c5623b21f1f9b55329c4e7cae44d396e9a62bdec5R632) to see how it's used."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809598, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for the ball stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809868, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667810291, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for sphere representation actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667811549, 'comment_body': 'It is strange to have an empty class. I do not think you need it. \r\n\r\nI should use directly vtkOpenglMoleculeMapper in your different function', 'comment_created': datetime.datetime(2021, 7, 12, 10, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812147, 'comment_body': 'ok, sounds good', 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812304, 'comment_body': ""Okay! I'll use vtkOpenGLMoleculeMapper directly."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667968791, 'comment_body': ""Configuring with capita 'C'."", 'comment_created': datetime.datetime(2021, 7, 12, 14, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 667969214, 'comment_body': '#5. instead of #4.', 'comment_created': datetime.datetime(2021, 7, 12, 14, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 678993834, 'comment_body': 'Please follow the structure that Serge recommended to handle the errors. Maybe it\'s better to use ""Try Except"" to test a block of code for errors rather than ""else"".', 'comment_created': datetime.datetime(2021, 7, 29, 9, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679010880, 'comment_body': 'bond_type should be string not integer.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679021158, 'comment_body': 'Please rename ""bond_type"" to ""bond_order"", Bond type is different than bond order. A data file can have different bond types with same bond order. For example, the bond type of C-C is different than than bond type of C-H but both of them have bond order of 1.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679023854, 'comment_body': ""Do you know which one ('VDW' or 'Covalent') is by default? \r\nYou can raise an error if radius_type is something else."", 'comment_created': datetime.datetime(2021, 7, 29, 10, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679109023, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679109149, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134566, 'comment_body': 'Thanks! Done.', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134747, 'comment_body': 'changed bond_type to bond_order', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679135660, 'comment_body': ""Post comment, I made it such that it's 'VDW' by default and a value error is raised if it's something other than these two. Thanks!"", 'comment_created': datetime.datetime(2021, 7, 29, 13, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679475213, 'comment_body': 'Hi @skoudoro ! Can you please help with writing tests for warnings?', 'comment_created': datetime.datetime(2021, 7, 29, 20, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680143807, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680144819, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680389371, 'comment_body': '- `where H is the total number ....` should be in a new line\r\n- `, optional` for most of them', 'comment_created': datetime.datetime(2021, 7, 31, 17, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390628, 'comment_body': 'not sure about the minus here. what about a colon?', 'comment_created': datetime.datetime(2021, 7, 31, 17, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390712, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390800, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390840, 'comment_body': '`,optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391070, 'comment_body': 'use enumerate instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391106, 'comment_body': 'use enumerate instead, more pythonic', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680394726, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394760, 'comment_body': 'added colon instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394787, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394791, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394796, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394835, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394851, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683471803, 'comment_body': ""''to construct the model'."", 'comment_created': datetime.datetime(2021, 8, 5, 13, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683473521, 'comment_body': '""a"" instead of ""an""', 'comment_created': datetime.datetime(2021, 8, 5, 13, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683546485, 'comment_body': ""If the bond between atom1_index and atom2_index is already exist, does 'add_bond' function (with bond_order=1) add one more bond order between atom1_index and atom2_index? If yes, then 'add_bond' function (with bond_order=3) creates an issue, since at the end, the bond order will be 4.\r\n"", 'comment_created': datetime.datetime(2021, 8, 5, 15, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683556686, 'comment_body': 'The ""index of the atom"" or the ""index of the bond""?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683563584, 'comment_body': 'The propose of this function is not clear to me. Can you please explain what the advantage of coping the atomic information from molecule2 into molecule1 is? Does it merge the information of two molecules into one file?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683568286, 'comment_body': 'Can you please explain what ""SetTolerance"" do? What is the propose of choosing 0.1 factor? ', 'comment_created': datetime.datetime(2021, 8, 5, 15, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683583224, 'comment_body': 'When I change the bond_order from 1 to 2 or 3, the first window shows the structure correctly but the second window shows the structure with only one bond. Is it correct?\r\nI also tried with bond_order = 4. It does not give an error, but by default it shows the structure with one bond order. Maybe we should mention that the bond_order=1 is considered if the bond_order is chosen to be more than 3.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683624441, 'comment_body': ""Basically, vtkSimpleBondPerceiver performs a simple check of all interatomic distances and adds a single bond between atoms that are reasonably close. If the interatomic distance is less than the sum of the two atom's covalent radii plus a tolerance (mathematically, (d < r1 + r2 + tolerance)), a single bond is added. \r\nBy default, vtkSimpleBondPerceiver has a high tolerance of 0.45, I thought that this default tolerance is quite high and might lead to excessive bonding and hence chose an arbitrary value of 0.1."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683625312, 'comment_body': ""It's not possible to transfer molecular information from molecule2 into molecule1 by simple assignment i.e. by setting molecule1 = molecule2. Deep copy copies the molecular information from molecule2 into molecule1. You can check the vtk documentation [here](https://vtk.org/doc/nightly/html/classvtkMolecule.html#a227d15dc1266116895d65e72319f273b)."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683632017, 'comment_body': 'To answer the first part, yes it\'s correct, as you can see on [this](https://github.com/fury-gl/fury/pull/452/files#diff-7c3fdef0e37ff1e81acaf4ff0275d29a6b65c070226c5721dd7b5a0fd54c52bcR186) line, `multiple_bonds` is set to ""Off"" for the second window and as a result it\'ll show only single bonds for double/triple bonds.\r\nFor `bond_order` = 4, I\'ll create a note in the documentation.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637317, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637367, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637511, 'comment_body': 'I created a note', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637573, 'comment_body': 'it should be ""index of the bond"". Thank you!', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685096680, 'comment_body': 'For some reason, the tests pass only when the actor is not added to the scene. This is strange as the tests pass locally for me without commenting out this section.', 'comment_created': datetime.datetime(2021, 8, 9, 10, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685332273, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2021, 8, 9, 16, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693051316, 'comment_body': 'Can you make the title more specific to molecules?', 'comment_created': datetime.datetime(2021, 8, 20, 15, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693051503, 'comment_body': 'False please.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693052565, 'comment_body': 'Also should we cite some papers? There must be some original papers that promoted these representations.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693060721, 'comment_body': 'Why not just use a boolean here? True/False', 'comment_created': datetime.datetime(2021, 8, 20, 16, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693061139, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2021, 8, 20, 16, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693160771, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161041, 'comment_body': 'Done. Makes sense. Nice suggestion!', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161090, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693176966, 'comment_body': 'Good catch! The description was for an earlier version of the demo. I updated the title and description. ', 'comment_created': datetime.datetime(2021, 8, 20, 19, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 701806633, 'comment_body': 'This file is in experimental, should we move it to tutorial @Garyfallidis @SunTzunami @nasimanousheh ?', 'comment_created': datetime.datetime(2021, 9, 3, 11, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701809158, 'comment_body': ""I don't think we should move this to tutorial as this was just for the reviewers/mentors to understand how to work with the module. \r\nI've made proper tutorials (using `fetcher`) for which I'll create PRs once this PR is merged."", 'comment_created': datetime.datetime(2021, 9, 3, 11, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710118060, 'comment_body': 'representations present?\r\nChange verb please.', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118425, 'comment_body': 'blank space missing...', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118834, 'comment_body': 'too many empty lines', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710265811, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266048, 'comment_body': 'I changed the description', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266178, 'comment_body': 'removed the unnecessary ones', 'comment_created': datetime.datetime(2021, 9, 16, 16, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': '9d2a2ff4281c6bf6d3953f25f957906b753e851e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcaa9fd92cc35c2da07872b3ee775b86138eda81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6986f2ab13572a5dfcca5dd3bf10d4921d19b36a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b1ad8da2e7a3c67a7ef5b34249ef37417a585b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93d562f7b1b3785e240ba72f7f25f4ad0673aace', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283f159e7374439e132b851b954ce2e2a7f0bfd6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70b70903ba2f6923d87f8e468eaba6cab6e957b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30edf4405acf14d31f90e921af8f0e7312dc5954', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566bb09c480b603fd9478def2c24c36dd898fee6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3feb4dcf7330d1d6af034aa685b12d87a4776564', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfbb2ebd15acd3cb5bed1fad6af7d40cf033161', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb6de7c6b146b7e2284a5ddd2e0fa0deb8b06b34', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327e6184c87ecff3dcd6f2b9ec48e8201f26d10b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b7ee3c198ebe518fb1533e5b30c5311b0b5023', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da691cffe79e6d232775adb75c52d83a2fda6b45', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4424d72516009aa6def335dab12a33ce5957c18b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0466df051e64d91a457ed5ad9a9a810ac6f06ecb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a172b1e658a6f3632935ce198039eb6d379a3e6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d049a65c0a538a23567ae043d2375edda4e8dd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b28f960400038d5781ae7ceb390625cac2381da5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af78f5b06bc45aa172a01f9c9d2e7962538eba71', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f1127bcb8e0a87ffb15d871fd9c37bfcd9cc91', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd804e028462f6dcadb231cd2ebfa9f19d82bbdfe', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5028d8cc96994184fadbcd9381c3ef3e0444be2c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8c49e10171e908081f29741fd95d71d616e863', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5967e16dc30172925d73c2a683b0facedc4de6b7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd195afce6cc7ac311fcc6943f33a61ad44e634', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0fb4b68ae00ce020052e0685423792315b5780e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d4af18ade6ee34f6787e70ef594b0cd69c782e0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ce86a1808bc5b8f0e33e468c7abab351235551', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '376910978f10b6ee83b94e8a8438c55f80418cce', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed28f282f8d76ada78d37ff5688f395758aca63', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e034489824fd219971b0a9c8c1f4adfc494e777b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf61b5f9ab9dc11f4f768efbd5d0b03972006da7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37427c6ea52c14dadf8de89586f88d54edf40989', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fab9bd0a2101ecdb5a5b67a20a5c4a5a76adcec', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '221f354ad74fa0e7071e35da945528e5dc36b139', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11f4e01b1bb30affaeac47ff60adf9b03168502', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93da7e04a2fb5e53f0609934b14bea94a22d822f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff42613e4d191caa2cb4b8d9623fd51361901dfd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe711567f60bc81a7dfae944f327b6b28c28abc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a9455b4573088547ec4a27de4109f79f035e733', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a22d70f0d69e5f47ae1b28b19d26d802a3f0e3c9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbfc529326e861b5f2060fa073eeec6244422a1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a219959c07ed817eb8136d98d035d241336d6ec9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e53195438534d3f4a316b77c2439d89fa96be35', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e0d8d4c7923230ed78fa71724271269d8cae106', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066174e9c7f6cfe76fc404d0eaa1b917877ad9ac', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b7a309e108a5c9c281d89c4145cbd62f5820cf', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9074b2dfd3d49c32dfbfdc712f180566ed9cf50c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c75a00bebd0bdf63ec92e077a9e1c15f61229f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8fedc5200619bfaf19b5642023a2e40fb6ef63d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfe34fb280f50af3ca7978513559d595c723e93c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c4136a0ca3cccab9c70e2b6820fa9a85f2d738d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55abe18534068e7029377c94af6948d20b707828', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c7844d798e8f2c02a2f11570736b42988d7fc1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb89968265f0a5767bbac7539e748e49293da688', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70129cd0b3c57b97e0a66d5653c74064c1555a8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1954fb4d1cb47a66b4d7fc5c54e30a9a7faea7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e2132f162064583230b8a507e1878b331b7b5de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73835106f6269e17e82dc21afb538bb7547e9e87', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0091bae2c8fd3192c9ce4cac5dbc2dd3334031', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7b9d4da1152d85818ffa7d699dc6bafeb000d0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e03c73f3217c95c33c3aa05e78c44ef722d1f17c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0cf8aa20f643cdc66644389ef3986ed51cabc5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd18b94bebaadd7da2bd8d43bfd74f5d6810a6a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6e69d5ccd18a6db4113fa65c282d6b2edd1264', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864a270a307a7e2a545e242b2958db9b691c509c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfdb32930b736f49af80093c29f75ce735138a7a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ca9f298937994422a143e5a96428b3a7587b445', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24eb6b45e03ccdd93d7599f2380055c6cb733217', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a07443cd284824a0b0532c8e8a7d254b99c886', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d90e9c124aa594847e02d2cbe05e7bdce53999', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3b9ea33cf400dfdb4b77fd0a4c23c7387847a32', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551b790f226bb192c9ea3722bbe4d266f91475a7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3d82884f29ff542d4db79dee560c0f3517f366', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319dbfa6150dd40366013c7b8372dbdc51d8bbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d310fb7186ed3a1aaf059f3c9c333b98b003097', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84110458055f5cce6021e0fd53f710e29ca8df81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635be2ea46850d8142d077a755c54c09b9862983', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '667b945bf89de48c634d0ec37a98cba4a45a9172', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02047489fbbff935bae8e50f8c5f2ccf29c9948', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae7dfa6a50c09b8301d661e48cc6760b82cacbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fca0da03a8b6d75be794c3034ab1441cdf81d6b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d11d39eea131241e46841a01652d89da3acee4d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4e03fb6c596e53cc9051f5811b0dd27d09e42d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02063158376fcb3b62a3d0c463665b2abde77b77', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503550d2e8d627a1933023f23f62a66b5dd96beb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46ee5cf3d762eeecb55f5868ca9b5092636d96b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
683125690,Molecular module,A module for reading molecule data which can be then used to create actors.,True,452,https://api.github.com/repos/fury-gl/fury/pulls/452,https://github.com/fury-gl/fury/pull/452,closed,1292,0,3,89,29,83,0,0,[],2021-07-04 06:54:02+00:00,2021-09-21 13:49:44+00:00,6850542.0,"79 days, 6:55:42","[{'comment_id': 663531404, 'comment_body': 'For better error handling, should I make a custom exception? \r\nSomething like -\r\n```\r\nclass BondingError(Exception):\r\n pass\r\n```\r\nand then use it by calling \r\n`raise BondingError(""Inadequate Bonding Data!"")`', 'comment_created': datetime.datetime(2021, 7, 4, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663660659, 'comment_body': 'The functions below this comment are used to create actors for the molecules by using MoleculeMapper.\r\nWill it be more appropriate to have them in the molecular module or should they be added to actor module?', 'comment_created': datetime.datetime(2021, 7, 5, 6, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 663946013, 'comment_body': 'Thank you @SunTzunami for creating this PR. With setAtomicPosition, are we supposed to set the atomic position of specified atom to other position? The name ""atom_coordinate"" is a bit confusing. ""atom_coordinate"" is supposed to be an array of x_coordinate, y_coordinate and z_coordinate of the atom. But here it is assigned to be integer. ', 'comment_created': datetime.datetime(2021, 7, 5, 13, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 663994035, 'comment_body': 'Thank you @nasimanousheh ! Nice catch!', 'comment_created': datetime.datetime(2021, 7, 5, 15, 0, 28, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667793682, 'comment_body': 'I recommend you to remove this and create a fetcher.\r\n\r\nPlease, look at `fury/data/fetcher.py` for more information', 'comment_created': datetime.datetime(2021, 7, 12, 9, 58, 35, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667794668, 'comment_body': 'Why do you need to do it manually? I believe the `molecular` module will handle this part. otherwise, you need to create a reader in `fury.io`', 'comment_created': datetime.datetime(2021, 7, 12, 10, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795326, 'comment_body': '`molecular.molecular....` : this is repetitive, the actor need to change name', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795505, 'comment_body': 'if not use, comment to remove', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667795767, 'comment_body': 'not necessary if you use the fetcher', 'comment_created': datetime.datetime(2021, 7, 12, 10, 1, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667796929, 'comment_body': 'as said before, this should be a property.   In general, if you need a get/set, please, use property tag to be more pythonic', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797105, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797241, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667797399, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 12, 10, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667798098, 'comment_body': 'What is the goal of this empty class?', 'comment_created': datetime.datetime(2021, 7, 12, 10, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667804346, 'comment_body': ""These can be un-commented to see the other models. I added this example for the members to understand how to use the molecular module.\r\nI'll create the final, proper demo for the module once the module has been made properly (in a pythonic way)."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667808615, 'comment_body': ""It's used to create the mappers which are then used to create actors. Please see [here](https://github.com/fury-gl/fury/pull/452/files#diff-8cedb8d1d2aca3f6f359201c5623b21f1f9b55329c4e7cae44d396e9a62bdec5R632) to see how it's used."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809598, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for the ball stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667809868, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for stick actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667810291, 'comment_body': '@skoudoro  the MoleculeMapper class is used here to create the mapper for sphere representation actor.', 'comment_created': datetime.datetime(2021, 7, 12, 10, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667811549, 'comment_body': 'It is strange to have an empty class. I do not think you need it. \r\n\r\nI should use directly vtkOpenglMoleculeMapper in your different function', 'comment_created': datetime.datetime(2021, 7, 12, 10, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812147, 'comment_body': 'ok, sounds good', 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 667812304, 'comment_body': ""Okay! I'll use vtkOpenGLMoleculeMapper directly."", 'comment_created': datetime.datetime(2021, 7, 12, 10, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667968791, 'comment_body': ""Configuring with capita 'C'."", 'comment_created': datetime.datetime(2021, 7, 12, 14, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 667969214, 'comment_body': '#5. instead of #4.', 'comment_created': datetime.datetime(2021, 7, 12, 14, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 678993834, 'comment_body': 'Please follow the structure that Serge recommended to handle the errors. Maybe it\'s better to use ""Try Except"" to test a block of code for errors rather than ""else"".', 'comment_created': datetime.datetime(2021, 7, 29, 9, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679010880, 'comment_body': 'bond_type should be string not integer.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679021158, 'comment_body': 'Please rename ""bond_type"" to ""bond_order"", Bond type is different than bond order. A data file can have different bond types with same bond order. For example, the bond type of C-C is different than than bond type of C-H but both of them have bond order of 1.', 'comment_created': datetime.datetime(2021, 7, 29, 10, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679023854, 'comment_body': ""Do you know which one ('VDW' or 'Covalent') is by default? \r\nYou can raise an error if radius_type is something else."", 'comment_created': datetime.datetime(2021, 7, 29, 10, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 679109023, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679109149, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 29, 12, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134566, 'comment_body': 'Thanks! Done.', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679134747, 'comment_body': 'changed bond_type to bond_order', 'comment_created': datetime.datetime(2021, 7, 29, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679135660, 'comment_body': ""Post comment, I made it such that it's 'VDW' by default and a value error is raised if it's something other than these two. Thanks!"", 'comment_created': datetime.datetime(2021, 7, 29, 13, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679475213, 'comment_body': 'Hi @skoudoro ! Can you please help with writing tests for warnings?', 'comment_created': datetime.datetime(2021, 7, 29, 20, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680143807, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680144819, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 30, 18, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680389371, 'comment_body': '- `where H is the total number ....` should be in a new line\r\n- `, optional` for most of them', 'comment_created': datetime.datetime(2021, 7, 31, 17, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390628, 'comment_body': 'not sure about the minus here. what about a colon?', 'comment_created': datetime.datetime(2021, 7, 31, 17, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390712, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390800, 'comment_body': '`, optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680390840, 'comment_body': '`,optional`', 'comment_created': datetime.datetime(2021, 7, 31, 17, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391070, 'comment_body': 'use enumerate instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680391106, 'comment_body': 'use enumerate instead, more pythonic', 'comment_created': datetime.datetime(2021, 7, 31, 18, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 680394726, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394760, 'comment_body': 'added colon instead', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394787, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394791, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394796, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394835, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 680394851, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 31, 18, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683471803, 'comment_body': ""''to construct the model'."", 'comment_created': datetime.datetime(2021, 8, 5, 13, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683473521, 'comment_body': '""a"" instead of ""an""', 'comment_created': datetime.datetime(2021, 8, 5, 13, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683546485, 'comment_body': ""If the bond between atom1_index and atom2_index is already exist, does 'add_bond' function (with bond_order=1) add one more bond order between atom1_index and atom2_index? If yes, then 'add_bond' function (with bond_order=3) creates an issue, since at the end, the bond order will be 4.\r\n"", 'comment_created': datetime.datetime(2021, 8, 5, 15, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683556686, 'comment_body': 'The ""index of the atom"" or the ""index of the bond""?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683563584, 'comment_body': 'The propose of this function is not clear to me. Can you please explain what the advantage of coping the atomic information from molecule2 into molecule1 is? Does it merge the information of two molecules into one file?', 'comment_created': datetime.datetime(2021, 8, 5, 15, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683568286, 'comment_body': 'Can you please explain what ""SetTolerance"" do? What is the propose of choosing 0.1 factor? ', 'comment_created': datetime.datetime(2021, 8, 5, 15, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683583224, 'comment_body': 'When I change the bond_order from 1 to 2 or 3, the first window shows the structure correctly but the second window shows the structure with only one bond. Is it correct?\r\nI also tried with bond_order = 4. It does not give an error, but by default it shows the structure with one bond order. Maybe we should mention that the bond_order=1 is considered if the bond_order is chosen to be more than 3.', 'comment_created': datetime.datetime(2021, 8, 5, 15, 53, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nasimanousheh', 'type': 'User'}, {'comment_id': 683624441, 'comment_body': ""Basically, vtkSimpleBondPerceiver performs a simple check of all interatomic distances and adds a single bond between atoms that are reasonably close. If the interatomic distance is less than the sum of the two atom's covalent radii plus a tolerance (mathematically, (d < r1 + r2 + tolerance)), a single bond is added. \r\nBy default, vtkSimpleBondPerceiver has a high tolerance of 0.45, I thought that this default tolerance is quite high and might lead to excessive bonding and hence chose an arbitrary value of 0.1."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683625312, 'comment_body': ""It's not possible to transfer molecular information from molecule2 into molecule1 by simple assignment i.e. by setting molecule1 = molecule2. Deep copy copies the molecular information from molecule2 into molecule1. You can check the vtk documentation [here](https://vtk.org/doc/nightly/html/classvtkMolecule.html#a227d15dc1266116895d65e72319f273b)."", 'comment_created': datetime.datetime(2021, 8, 5, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683632017, 'comment_body': 'To answer the first part, yes it\'s correct, as you can see on [this](https://github.com/fury-gl/fury/pull/452/files#diff-7c3fdef0e37ff1e81acaf4ff0275d29a6b65c070226c5721dd7b5a0fd54c52bcR186) line, `multiple_bonds` is set to ""Off"" for the second window and as a result it\'ll show only single bonds for double/triple bonds.\r\nFor `bond_order` = 4, I\'ll create a note in the documentation.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637317, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 48, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637367, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 17, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637511, 'comment_body': 'I created a note', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 683637573, 'comment_body': 'it should be ""index of the bond"". Thank you!', 'comment_created': datetime.datetime(2021, 8, 5, 17, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685096680, 'comment_body': 'For some reason, the tests pass only when the actor is not added to the scene. This is strange as the tests pass locally for me without commenting out this section.', 'comment_created': datetime.datetime(2021, 8, 9, 10, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685332273, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2021, 8, 9, 16, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693051316, 'comment_body': 'Can you make the title more specific to molecules?', 'comment_created': datetime.datetime(2021, 8, 20, 15, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693051503, 'comment_body': 'False please.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693052565, 'comment_body': 'Also should we cite some papers? There must be some original papers that promoted these representations.', 'comment_created': datetime.datetime(2021, 8, 20, 15, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693060721, 'comment_body': 'Why not just use a boolean here? True/False', 'comment_created': datetime.datetime(2021, 8, 20, 16, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693061139, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2021, 8, 20, 16, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 693160771, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161041, 'comment_body': 'Done. Makes sense. Nice suggestion!', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693161090, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 20, 19, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 693176966, 'comment_body': 'Good catch! The description was for an earlier version of the demo. I updated the title and description. ', 'comment_created': datetime.datetime(2021, 8, 20, 19, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 701806633, 'comment_body': 'This file is in experimental, should we move it to tutorial @Garyfallidis @SunTzunami @nasimanousheh ?', 'comment_created': datetime.datetime(2021, 9, 3, 11, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701809158, 'comment_body': ""I don't think we should move this to tutorial as this was just for the reviewers/mentors to understand how to work with the module. \r\nI've made proper tutorials (using `fetcher`) for which I'll create PRs once this PR is merged."", 'comment_created': datetime.datetime(2021, 9, 3, 11, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710118060, 'comment_body': 'representations present?\r\nChange verb please.', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118425, 'comment_body': 'blank space missing...', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710118834, 'comment_body': 'too many empty lines', 'comment_created': datetime.datetime(2021, 9, 16, 13, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 710265811, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266048, 'comment_body': 'I changed the description', 'comment_created': datetime.datetime(2021, 9, 16, 16, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 710266178, 'comment_body': 'removed the unnecessary ones', 'comment_created': datetime.datetime(2021, 9, 16, 16, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': '9d2a2ff4281c6bf6d3953f25f957906b753e851e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcaa9fd92cc35c2da07872b3ee775b86138eda81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6986f2ab13572a5dfcca5dd3bf10d4921d19b36a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b1ad8da2e7a3c67a7ef5b34249ef37417a585b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93d562f7b1b3785e240ba72f7f25f4ad0673aace', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283f159e7374439e132b851b954ce2e2a7f0bfd6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70b70903ba2f6923d87f8e468eaba6cab6e957b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30edf4405acf14d31f90e921af8f0e7312dc5954', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566bb09c480b603fd9478def2c24c36dd898fee6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3feb4dcf7330d1d6af034aa685b12d87a4776564', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfbb2ebd15acd3cb5bed1fad6af7d40cf033161', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb6de7c6b146b7e2284a5ddd2e0fa0deb8b06b34', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327e6184c87ecff3dcd6f2b9ec48e8201f26d10b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b7ee3c198ebe518fb1533e5b30c5311b0b5023', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da691cffe79e6d232775adb75c52d83a2fda6b45', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4424d72516009aa6def335dab12a33ce5957c18b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0466df051e64d91a457ed5ad9a9a810ac6f06ecb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a172b1e658a6f3632935ce198039eb6d379a3e6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75d049a65c0a538a23567ae043d2375edda4e8dd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b28f960400038d5781ae7ceb390625cac2381da5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af78f5b06bc45aa172a01f9c9d2e7962538eba71', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f1127bcb8e0a87ffb15d871fd9c37bfcd9cc91', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd804e028462f6dcadb231cd2ebfa9f19d82bbdfe', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5028d8cc96994184fadbcd9381c3ef3e0444be2c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8c49e10171e908081f29741fd95d71d616e863', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5967e16dc30172925d73c2a683b0facedc4de6b7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd195afce6cc7ac311fcc6943f33a61ad44e634', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0fb4b68ae00ce020052e0685423792315b5780e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d4af18ade6ee34f6787e70ef594b0cd69c782e0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ce86a1808bc5b8f0e33e468c7abab351235551', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '376910978f10b6ee83b94e8a8438c55f80418cce', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed28f282f8d76ada78d37ff5688f395758aca63', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e034489824fd219971b0a9c8c1f4adfc494e777b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf61b5f9ab9dc11f4f768efbd5d0b03972006da7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37427c6ea52c14dadf8de89586f88d54edf40989', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fab9bd0a2101ecdb5a5b67a20a5c4a5a76adcec', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '221f354ad74fa0e7071e35da945528e5dc36b139', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a11f4e01b1bb30affaeac47ff60adf9b03168502', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93da7e04a2fb5e53f0609934b14bea94a22d822f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff42613e4d191caa2cb4b8d9623fd51361901dfd', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe711567f60bc81a7dfae944f327b6b28c28abc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a9455b4573088547ec4a27de4109f79f035e733', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a22d70f0d69e5f47ae1b28b19d26d802a3f0e3c9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbfc529326e861b5f2060fa073eeec6244422a1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a219959c07ed817eb8136d98d035d241336d6ec9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e53195438534d3f4a316b77c2439d89fa96be35', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e0d8d4c7923230ed78fa71724271269d8cae106', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '066174e9c7f6cfe76fc404d0eaa1b917877ad9ac', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19b7a309e108a5c9c281d89c4145cbd62f5820cf', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9074b2dfd3d49c32dfbfdc712f180566ed9cf50c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c75a00bebd0bdf63ec92e077a9e1c15f61229f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8fedc5200619bfaf19b5642023a2e40fb6ef63d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfe34fb280f50af3ca7978513559d595c723e93c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c4136a0ca3cccab9c70e2b6820fa9a85f2d738d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55abe18534068e7029377c94af6948d20b707828', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c7844d798e8f2c02a2f11570736b42988d7fc1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb89968265f0a5767bbac7539e748e49293da688', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f70129cd0b3c57b97e0a66d5653c74064c1555a8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f1954fb4d1cb47a66b4d7fc5c54e30a9a7faea7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e2132f162064583230b8a507e1878b331b7b5de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73835106f6269e17e82dc21afb538bb7547e9e87', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0091bae2c8fd3192c9ce4cac5dbc2dd3334031', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d7b9d4da1152d85818ffa7d699dc6bafeb000d0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e03c73f3217c95c33c3aa05e78c44ef722d1f17c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f0cf8aa20f643cdc66644389ef3986ed51cabc5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffd18b94bebaadd7da2bd8d43bfd74f5d6810a6a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6e69d5ccd18a6db4113fa65c282d6b2edd1264', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864a270a307a7e2a545e242b2958db9b691c509c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfdb32930b736f49af80093c29f75ce735138a7a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ca9f298937994422a143e5a96428b3a7587b445', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24eb6b45e03ccdd93d7599f2380055c6cb733217', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a07443cd284824a0b0532c8e8a7d254b99c886', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d90e9c124aa594847e02d2cbe05e7bdce53999', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3b9ea33cf400dfdb4b77fd0a4c23c7387847a32', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551b790f226bb192c9ea3722bbe4d266f91475a7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3d82884f29ff542d4db79dee560c0f3517f366', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319dbfa6150dd40366013c7b8372dbdc51d8bbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d310fb7186ed3a1aaf059f3c9c333b98b003097', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84110458055f5cce6021e0fd53f710e29ca8df81', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635be2ea46850d8142d077a755c54c09b9862983', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '667b945bf89de48c634d0ec37a98cba4a45a9172', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd02047489fbbff935bae8e50f8c5f2ccf29c9948', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae7dfa6a50c09b8301d661e48cc6760b82cacbd5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fca0da03a8b6d75be794c3034ab1441cdf81d6b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d11d39eea131241e46841a01652d89da3acee4d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4e03fb6c596e53cc9051f5811b0dd27d09e42d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02063158376fcb3b62a3d0c463665b2abde77b77', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503550d2e8d627a1933023f23f62a66b5dd96beb', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46ee5cf3d762eeecb55f5868ca9b5092636d96b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
713940336,[WIP] Molecular surface(s) implementation ,"There are three types of molecular surfaces:
-  Van der Waals
-  Solvent Accessible
-  Solvent Excluded

This program aims to implement all the surfaces, currently the first two i.e. Van der Waals  Surface and Solvent Accessible Surface are implemented. This program is based on the paper ""[Generating Triangulated Macromolecular Surfaces by Euclidean Distance Transform](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0008140)"" by Dong Xu and Yang Zhang.
",False,492,https://api.github.com/repos/fury-gl/fury/pulls/492,https://github.com/fury-gl/fury/pull/492,open,301,0,1,3,4,0,1,0,[{'name': 'type:New Feature'}],2021-08-17 06:02:23+00:00,,0.0,,[],"[{'commit_sha': '33f0475ca1f867549ae43e7221d43b45bcce5706', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c116c0316d4057c6be8bff2ce0ac9fa8c2c1e585', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba97929e3ea0b4808893dcab87cadce63558a14d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
560652190,Animated Surfaces,"Fixes #324 

An example to illustrate how one can render a time-varying 2D function using FURY.  I have added quite a few comments to make the code easy to interpret. 

Preview-

![2d_func](https://user-images.githubusercontent.com/65067354/105639894-b6d32000-5ea0-11eb-8aa3-63c8c3f1f9b7.gif)



",True,362,https://api.github.com/repos/fury-gl/fury/pulls/362,https://github.com/fury-gl/fury/pull/362,closed,240,1,3,32,19,38,1,0,[{'name': 'type:Documentation'}],2021-01-24 18:35:30+00:00,2021-08-20 15:32:39+00:00,17960229.0,"207 days, 20:57:09","[{'comment_id': 563350072, 'comment_body': 'A more descriptive name for `t` would have been better.', 'comment_created': datetime.datetime(2021, 1, 24, 21, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Nibba2018', 'type': 'User'}, {'comment_id': 563350117, 'comment_body': 'same as above.', 'comment_created': datetime.datetime(2021, 1, 24, 21, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Nibba2018', 'type': 'User'}, {'comment_id': 563350275, 'comment_body': '`interactive` must be set to `False`.', 'comment_created': datetime.datetime(2021, 1, 24, 21, 11, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Nibba2018', 'type': 'User'}, {'comment_id': 563451418, 'comment_body': 'Hi @Nibba2018 ! Your suggestion makes sense. Should I rename it to ""time""?', 'comment_created': datetime.datetime(2021, 1, 25, 4, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 563451447, 'comment_body': ""I'll rectify that. Thanks!"", 'comment_created': datetime.datetime(2021, 1, 25, 4, 1, 25, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 568052962, 'comment_body': 'This is where I generate a colormap. @Nibba2018', 'comment_created': datetime.datetime(2021, 2, 1, 18, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 666893110, 'comment_body': 'Creating a temporary surface every time while updating the vertice colors is something that takes a lot of time, is there a better way to update the vertice colors?', 'comment_created': datetime.datetime(2021, 7, 9, 11, 54, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 667302682, 'comment_body': 'Resolved it by directly updating colors of the actor without making a temporary surface.', 'comment_created': datetime.datetime(2021, 7, 10, 7, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 671465578, 'comment_body': 'This can be moved to the signature of the function.', 'comment_created': datetime.datetime(2021, 7, 16, 18, 57, 5, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 671521934, 'comment_body': 'Some of these functions really show the power of this PR. It would be nice to show multiple functions at once, maybe by using the [grid](https://fury.gl/latest/reference/fury.ui.html?highlight=grid#fury.ui.grid).', 'comment_created': datetime.datetime(2021, 7, 16, 20, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 671522582, 'comment_body': 'Now that there is support for colormaps, it would be nice to add the x and y axes to have a reference of the importance of the colormap.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 671547329, 'comment_body': 'Additionally, if multiple functions are showcased please adjust the label corresponding to each function.', 'comment_created': datetime.datetime(2021, 7, 16, 22, 6, 45, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 671547785, 'comment_body': 'If multiple functions are shown maybe x, y and z could be an input of the function.', 'comment_created': datetime.datetime(2021, 7, 16, 22, 8, 13, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 672510861, 'comment_body': 'The param `time` is never used in the scope of the function.', 'comment_created': datetime.datetime(2021, 7, 19, 17, 54, 40, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 672521151, 'comment_body': 'Although this property improves the quality of the final viz I would not recommend introducing these concepts here and focus more on the cool effects you can get with different combinations of functions and colormaps.', 'comment_created': datetime.datetime(2021, 7, 19, 18, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 672736617, 'comment_body': ""@SunTzunami here is a way you can make the text always follow the camera.\r\n\r\n```python\r\nt_actor = actor.label('Function ' + str(i + 1))\r\nt_actor.SetCamera(scene.camera())\r\n```\r\n\r\nAlthough the combination of vtkFollower and vtkVectorText is not as powerful as the vtkTextActor3D and VTK already has the vtkBillboardTextActor3D, my suggestion is to use the label actor and create an issue asking for implementation of the BillboardText."", 'comment_created': datetime.datetime(2021, 7, 20, 1, 11, 42, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 672738430, 'comment_body': ""It would be nice to show the function you're rendering. You could have a dynamic label that changes when you click or hover on the captions or the surfaces of the functions."", 'comment_created': datetime.datetime(2021, 7, 20, 1, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 673401870, 'comment_body': 'Removed time.', 'comment_created': datetime.datetime(2021, 7, 20, 19, 3, 43, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 673402130, 'comment_body': 'Removed property manipulation.', 'comment_created': datetime.datetime(2021, 7, 20, 19, 4, 8, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 673402513, 'comment_body': 'Thanks for the snippet, implemented it.', 'comment_created': datetime.datetime(2021, 7, 20, 19, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 673403851, 'comment_body': 'Can you please tell which actor/function might help with it? Also, does the said actor/function have support to display greek symbols like π?', 'comment_created': datetime.datetime(2021, 7, 20, 19, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 685203330, 'comment_body': ""According to this [issue](https://gitlab.kitware.com/vtk/vtk/-/issues/17528) the best way to add text with math support is by using mathtext which basically means you put your math expression between $$, like this:\r\n\r\n`tb.message = 'Animated 2D function:' + '$2\\pi^2$'`\r\n\r\nBut first you need to make sure that mathtext is supported by getting `True` after running this: \r\n\r\n```python\r\nimport vtk\r\nvtk_mathtext = vtk.vtkMathTextFreeTypeTextRenderer()\r\nprint(vtk_mathtext.MathTextIsSupported())\r\n```\r\n\r\nTry also adding a test for this to see if this option is enabled in all the configurations in the CI."", 'comment_created': datetime.datetime(2021, 8, 9, 13, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 685253181, 'comment_body': 'The name of the variable is the same as the name of a function.', 'comment_created': datetime.datetime(2021, 8, 9, 14, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 685253457, 'comment_body': 'I am talking about wave.', 'comment_created': datetime.datetime(2021, 8, 9, 14, 39, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 685254279, 'comment_body': '@SunTzunami Create an utility function to do this job. ', 'comment_created': datetime.datetime(2021, 8, 9, 14, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 685255430, 'comment_body': 'Extend this comment to explain what is going on.', 'comment_created': datetime.datetime(2021, 8, 9, 14, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 685256236, 'comment_body': 'I am talking about ``.GetMapper().GetInput().GetPointData().SetScalars``', 'comment_created': datetime.datetime(2021, 8, 9, 14, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 686850829, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 11, 13, 50, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 686850951, 'comment_body': 'I changed it.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 50, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 686851103, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 11, 13, 50, 32, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 686857823, 'comment_body': ""Hi @guaje ! I tested it locally and the mathematical symbols are rendered when using `TextBlock2D` but don't work with the `label` actor. Should I display equations corresponding to the functions by using ``TextBlock2D``?"", 'comment_created': datetime.datetime(2021, 8, 11, 13, 57, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 690453125, 'comment_body': '@SunTzunami interactive should be False by default.', 'comment_created': datetime.datetime(2021, 8, 17, 14, 55, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 690454050, 'comment_body': 'Fine for this PR but in the next PR we should look into supporting an ``update_colormap`` method.', 'comment_created': datetime.datetime(2021, 8, 17, 14, 56, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 690455065, 'comment_body': 'Is this useful only for the surface actor?', 'comment_created': datetime.datetime(2021, 8, 17, 14, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 690459347, 'comment_body': 'Please look at the function in utils called ``set_polydata_colors``', 'comment_created': datetime.datetime(2021, 8, 17, 15, 2, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 690524223, 'comment_body': 'What exactly should `update_colormap` do? From what I can understand, everytime the elevation (i.e. `z`) changes, we\'ll need to call the update_colomap function. I can think of something like this:\r\n\r\n```python\r\ndef update_colormap(z, cmap_name):\r\n    """"""Return an updated colormap.\r\n\r\n    Parameters\r\n    ----------\r\n    z : ndarray of shape 3 having elevation data to which colors are mapped.\r\n    cmap_name: str, name of the colormap to be used.\r\n\r\n    Returns\r\n    -------\r\n    updated_colors : ndarray of shape (N,3) where every row gives the\r\n        corresponding r,g,b value\r\n\r\n    """"""\r\n    v = np.copy(z)\r\n    v /= np.max(np.abs(v), axis=0)\r\n    updated_colors = colormap.create_colormap(v, name=cmap_name)\r\n    return updated_colors\r\n```', 'comment_created': datetime.datetime(2021, 8, 17, 16, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 690524589, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 17, 16, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 690527267, 'comment_body': ""Yes, this is only useful for surface actor. `set_polydata_colors` can work but it'll need to be modified and even then, we'll need to access the polydata composing our surface actor by using the following code: `surface_actor.GetMapper().GetInput()` after which we'll need to pass this polydata obtained to `set_polydata_colors`."", 'comment_created': datetime.datetime(2021, 8, 17, 16, 20, 33, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': 'af4d3b4d3c6d972bc40ede73cf5747be8d5c4fe6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3f91011ef6913187026c9c20c7997f9d11c9c37', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1ca3abd528014b26ef32aca015ecb78f127323d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdef5015247842d810d8c42600fb9c31b10e9ef0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b990b6eed0cd8f8520f37eb473a1ec0da19b3b02', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bc2c4f25a27980a8362dda2be6be3bc4e639ba3', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53feb0a51f1ae06bf18f6637503a5393f5311620', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82e3807167223dce3985c4576cc39a6f4a213478', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89ccf586bd7bb19d7cb8e4c8f31f80f64e278d0d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '575e7396d187110961dabbea2d34194b4305629d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9c64a884d6f15cd480c89334a5d17da0dfa77b9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '272df6c69d2fdb259a8c8ea751898c054483de7a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8862a3dcfbd56cbf22e07afe7d13267b772ba045', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20da8c004bb8c269cd36bd6905515af93789658b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e629f54b73c1e3135026f3ec190fa8fd4df7e080', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa368522b54503e274a8f81dbc9512f2c2cb34b3', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8a5becce437b1ebb9209c6a7b56acf1d57cd2e8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a8b6fca64f75dc232ab5f7b0a06c4c3d056af03', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10cd48a2903a02ecefaa126450ee4dc13a480349', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf3e8c8b859998338d5e3494e61860c28be4956e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '144ea657ab60b892d3b3906132187e2cc3e6d1f1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '885821b38bfb33e09454748961e0819bd098bb60', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c29147f3f4dcc8e9731570178f57745cc18be71a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24694d3a9070b72896993fa8dce672270f12f788', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '602ee4d14d1502559dcba199b93709082c9d3948', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ba78564fed58f965cfca0372a1105a22bc677a3', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1a57c158121b183b7fb1ea76a805daac19aebde', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '685842e844753c6f1547aec1a60b7915f80d68d6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a0ec19302d133013a24ad85892a4e7ee30bce63', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27b13af18781e79b194f9b15a7d1a7f5624684b5', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99ac35896b459eda46e005de2f23a5aa90d4bc32', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4239599782a20f95e68fc7b2d616066490c8c6aa', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
691898429,"Updated helical, brownian, emwave animations","1. Updated the demo of helical motion to stop using multiple line actors as discussed in the meeting.
2. Updated the demo of brownian motion to make it more scientifically useful (removed unnecessary rotation of camera during animation and box actor)
3. Added simulation data to both animations (number of simulated steps for brownian motion and velocity of the particle for helical motion)

Preview - 

1. Helical motion 

![viz_helical_motion](https://user-images.githubusercontent.com/65067354/126033284-882ed6fd-fcc3-4a1c-8dfd-3220908859b1.png)

2. Brownian motion 

![viz_brownian_motion](https://user-images.githubusercontent.com/65067354/126033291-da68cb0d-b856-48ad-9aa4-c46621052267.png)
",False,462,https://api.github.com/repos/fury-gl/fury/pulls/462,https://github.com/fury-gl/fury/pull/462,open,186,118,8,26,6,14,1,0,[{'name': 'type:Enhancement'}],2021-07-17 09:58:19+00:00,,0.0,,"[{'comment_id': 674890787, 'comment_body': '@SunTzunami Add extra options in ``scene.background`` to enable the gradient. Do not call a vtk method here like that. Thx.', 'comment_created': datetime.datetime(2021, 7, 22, 15, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 674902973, 'comment_body': 'Same here @SunTzunami. Please make a function in ``material.py`` that takes an input an actor and changes its ambience or use directly the function ``manifest_standard`` from the same file to chose the options that you need.  ', 'comment_created': datetime.datetime(2021, 7, 22, 15, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 674949148, 'comment_body': '@SunTzunami please make a utility function called ``attributes_to_actor`` in ``fury.actor`` and move these operations (lines 101-105) there.', 'comment_created': datetime.datetime(2021, 7, 22, 16, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 674949726, 'comment_body': 'The function should take as input an actor and return the actor with the new attributes as you did above.', 'comment_created': datetime.datetime(2021, 7, 22, 16, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 674950283, 'comment_body': 'See my other comment on the same issue.', 'comment_created': datetime.datetime(2021, 7, 22, 16, 4, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 675957806, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 24, 6, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 675988199, 'comment_body': 'Used manifest_standard. Done.\r\n', 'comment_created': datetime.datetime(2021, 7, 24, 11, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 675988228, 'comment_body': 'Created attributes_to_actor.', 'comment_created': datetime.datetime(2021, 7, 24, 11, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 675992274, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 24, 12, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 676046187, 'comment_body': 'Is the effect exactly how it was before? If not then create an additional ``manifest_ambience`` function and only enable ambient light.', 'comment_created': datetime.datetime(2021, 7, 24, 21, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Garyfallidis', 'type': 'User'}, {'comment_id': 676115901, 'comment_body': 'The effect was a bit different, I created `manifest_ambience` accordingly.', 'comment_created': datetime.datetime(2021, 7, 25, 9, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 676428015, 'comment_body': 'Can you remove this `print`? Thanks !', 'comment_created': datetime.datetime(2021, 7, 26, 9, 11, 16, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 676471792, 'comment_body': 'Removed. Thanks!', 'comment_created': datetime.datetime(2021, 7, 26, 10, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': '3157e993f467a98ef525403235aa5834b8a818a4', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b883e19b3157ffebc1df55a8105256aee6bbdf53', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7b5f26e6ce45a68d69e8e6e0bd0017edba38f16', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdab73a9bf67617f769f7849513501a05904f28a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10c0aa20229b7ade38bbaa099bc798733e4bed79', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc3d3242d6967e13270e346e9f39a46464c522de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be0dc8c0839498f66537ed9c73f00cf14841c8bc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f126155a8f1122ecc8ddd10e2c95ade65fecfb7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e30abb43f546190f99a3176bc840dcf61e4d57d6', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84a12b70e9fa5532b6a008374fbecea18faea2d1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '496f0d3686c2e441fd56b23be9d09e43156014c1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4022576f2e64567d55122fd434c64f68cbdff09e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17c83cc75d2c5b6698969987f05fd873e71dbf4b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c05cbb551232f76fcc42e1411208129c93a160fc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40889ab4dc883c1a7141cba14a85227222f31558', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d329252cc3f3373e85a1494b88e0decb2aaf96a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d1b094cb041392174dcc2ebc1d2b1dfc181ab5b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99d58844c041bb9436ed68d6c2eefadbbb39ccef', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66456bdb080c112043e7a3ce3de913269949c58a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a8715213f6f1858655c093b616cc3a3c91895ef', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc6078adcb983c182ae2201a1d8b21287fc3b48e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c774f958f709c4bfdc002b0aadc4f796196ab2da', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3bfaf2754b754ce477fb696641e05bfb1f831f1', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd306cbf0894a635b7d6690e44ced72589aafed15', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '857fc9919d8113c6c9c5fecbdfa0d771e6ee6f10', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1df1e6ec7b87fce11e644220117c64f4344cbcd0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
697909208,Gsoc blog 2021,@skoudoro PTAL.,True,475,https://api.github.com/repos/fury-gl/fury/pulls/475,https://github.com/fury-gl/fury/pull/475,closed,371,0,8,33,7,59,0,0,[],2021-07-27 14:23:23+00:00,2021-07-30 13:50:08+00:00,257205.0,"2 days, 23:26:45","[{'comment_id': 678259124, 'comment_body': 'colon instead of `-`', 'comment_created': datetime.datetime(2021, 7, 28, 12, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678266349, 'comment_body': 'We might need to put this google document in rst and somewhere else. ', 'comment_created': datetime.datetime(2021, 7, 28, 12, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678266831, 'comment_body': 'colon instead of `-`', 'comment_created': datetime.datetime(2021, 7, 28, 12, 46, 58, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678267137, 'comment_body': 'colon instead of `-`', 'comment_created': datetime.datetime(2021, 7, 28, 12, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678267905, 'comment_body': '`..image` has a caption attribute. Please, use this instead of the current way', 'comment_created': datetime.datetime(2021, 7, 28, 12, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678268165, 'comment_body': 'needs fullstop', 'comment_created': datetime.datetime(2021, 7, 28, 12, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678268721, 'comment_body': 'use a, b instead of `#` (strange in the rendering)', 'comment_created': datetime.datetime(2021, 7, 28, 12, 49, 17, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678268906, 'comment_body': 'colon instead of `-`', 'comment_created': datetime.datetime(2021, 7, 28, 12, 49, 33, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678269803, 'comment_body': 'same as above, use caption and not this preview sentence', 'comment_created': datetime.datetime(2021, 7, 28, 12, 50, 46, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678270456, 'comment_body': 'same as above', 'comment_created': datetime.datetime(2021, 7, 28, 12, 51, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678270535, 'comment_body': 'same as above', 'comment_created': datetime.datetime(2021, 7, 28, 12, 51, 48, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678271052, 'comment_body': 'colon instead of `-`', 'comment_created': datetime.datetime(2021, 7, 28, 12, 52, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678271179, 'comment_body': 'fullstop', 'comment_created': datetime.datetime(2021, 7, 28, 12, 52, 36, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678271686, 'comment_body': 'you might need to convert the google drive to something else', 'comment_created': datetime.datetime(2021, 7, 28, 12, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678271763, 'comment_body': 'colon instead of `-`', 'comment_created': datetime.datetime(2021, 7, 28, 12, 53, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678272276, 'comment_body': 'colon instead of `-`', 'comment_created': datetime.datetime(2021, 7, 28, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678272961, 'comment_body': 'strangely rendered. please, same comment as above', 'comment_created': datetime.datetime(2021, 7, 28, 12, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678273930, 'comment_body': 'really badly rendered. Need to review the whole block', 'comment_created': datetime.datetime(2021, 7, 28, 12, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678274064, 'comment_body': 'fullstop', 'comment_created': datetime.datetime(2021, 7, 28, 12, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678274548, 'comment_body': 'same as above', 'comment_created': datetime.datetime(2021, 7, 28, 12, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 678311485, 'comment_body': 'Nice. Everything looks good for me. How about putting some references about  molecular representations? ', 'comment_created': datetime.datetime(2021, 7, 28, 13, 41, 3, tzinfo=datetime.timezone.utc), 'commenter': 'devmessias', 'type': 'User'}, {'comment_id': 678561810, 'comment_body': 'Any suggestions as to where should I put it?', 'comment_created': datetime.datetime(2021, 7, 28, 18, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678562296, 'comment_body': 'Can you please provide any suggestions regarding this?', 'comment_created': datetime.datetime(2021, 7, 28, 18, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678573768, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 18, 58, 33, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678574181, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 18, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678575734, 'comment_body': ""done (`.. figure` has caption image doesn't)"", 'comment_created': datetime.datetime(2021, 7, 28, 19, 1, 21, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678575951, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678576292, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 2, 7, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678576473, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678576718, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678576963, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678577130, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 3, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678577224, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678577867, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678578907, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 6, 40, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678579251, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678579458, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678579768, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 7, 58, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678579919, 'comment_body': 'reviewed and changed', 'comment_created': datetime.datetime(2021, 7, 28, 19, 8, 12, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678580051, 'comment_body': 'reviewed and changed', 'comment_created': datetime.datetime(2021, 7, 28, 19, 8, 23, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 678580502, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679032653, 'comment_body': '```suggestion\r\nA small backbone visualisation  of 1mb0 protein made on FURY by extracting coordinate data of its alpha carbons \r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 10, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'antrikshmisri', 'type': 'User'}, {'comment_id': 679034234, 'comment_body': 'typo: utilized', 'comment_created': datetime.datetime(2021, 7, 29, 10, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'antrikshmisri', 'type': 'User'}, {'comment_id': 679034714, 'comment_body': '```suggestion\r\nLink to the document: `Molecular_viz_vtk`_. In addition to the\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 10, 37, 55, tzinfo=datetime.timezone.utc), 'commenter': 'antrikshmisri', 'type': 'User'}, {'comment_id': 679035123, 'comment_body': 'typo: endeavor ', 'comment_created': datetime.datetime(2021, 7, 29, 10, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'antrikshmisri', 'type': 'User'}, {'comment_id': 679035929, 'comment_body': 'typo: Generalized ', 'comment_created': datetime.datetime(2021, 7, 29, 10, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'antrikshmisri', 'type': 'User'}, {'comment_id': 679036299, 'comment_body': 'typo: generalize  ', 'comment_created': datetime.datetime(2021, 7, 29, 10, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'antrikshmisri', 'type': 'User'}, {'comment_id': 679037516, 'comment_body': 'typo: Thursday ', 'comment_created': datetime.datetime(2021, 7, 29, 10, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'antrikshmisri', 'type': 'User'}, {'comment_id': 679051783, 'comment_body': ""It's better with a hyphen as I'm displaying a graphic below it. \r\n![image](https://user-images.githubusercontent.com/65067354/127481455-3442a1a7-0263-47db-b337-de2300213ce7.png)\r\n"", 'comment_created': datetime.datetime(2021, 7, 29, 11, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679054342, 'comment_body': ""Utilise is correct, it's the British spelling."", 'comment_created': datetime.datetime(2021, 7, 29, 11, 9, 42, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679055587, 'comment_body': 'thanks, changed it', 'comment_created': datetime.datetime(2021, 7, 29, 11, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679056088, 'comment_body': ""Generalise is correct, it's the British spelling."", 'comment_created': datetime.datetime(2021, 7, 29, 11, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679056297, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2021, 7, 29, 11, 12, 45, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679073012, 'comment_body': '+1 with @antrikshmisri, it does not look good, I recommend removing this hyphen too.\r\n\r\n<img width=""1082"" alt=""Capture d’écran 2021-07-29 à 13 38 42"" src=""https://user-images.githubusercontent.com/23106443/127485842-d84aae20-3365-46e2-a29c-8948c2b2f53f.png"">\r\n', 'comment_created': datetime.datetime(2021, 7, 29, 11, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 679073451, 'comment_body': 'Furthermore, it would be better if the image is centered.', 'comment_created': datetime.datetime(2021, 7, 29, 11, 41, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 679077878, 'comment_body': 'Went with an online spell check tool, the creator must not be British😆', 'comment_created': datetime.datetime(2021, 7, 29, 11, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'antrikshmisri', 'type': 'User'}, {'comment_id': 679082588, 'comment_body': '![image](https://user-images.githubusercontent.com/65067354/127487587-c4f26a92-b5e7-4bf9-b68c-b124f8517409.png)\r\ndone!', 'comment_created': datetime.datetime(2021, 7, 29, 11, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679465854, 'comment_body': ""Hi @devmessias ! Thanks for review! No paper/blog was used as such yet in the project so I've used no references."", 'comment_created': datetime.datetime(2021, 7, 29, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 679470558, 'comment_body': ""Ah ok, but I was talking about this `1mb0 protein`.  For anyone which doesn't work with this topic, this  can sound cryptic"", 'comment_created': datetime.datetime(2021, 7, 29, 20, 38, 23, tzinfo=datetime.timezone.utc), 'commenter': 'devmessias', 'type': 'User'}]","[{'commit_sha': 'e8b72f8178c1f45530f1a39237f152dd9613294a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e958099fd5ecf33709f31fe7f1aa4e267c71c5de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac4422129f0de3a13a4c0d94d8494c859a7ea831', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8de2883ba8acc82aa8586187e3e3cbf74548f597', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86b0e2b6f5d24a9bf66b4ca1d3a16a3720356a13', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ae8a112410ebd90c475f473bbc240ca3724c2d9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2573f01ff22f12f92efaa47b03ae3410397dd07a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f398d0e48c4485379bc98c42d8d4a486ee85ae3c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9729700d6ecb433a47607d213cd00359ea41fb06', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0fd2133ac63e30a79d158e24399c2be839a2f47', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81c43d162806ee318d4635648ef169c14b2869e7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd11324fa8dfc39b9e40c2990e15d11ce85beba0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed4ea4562222926d1914b35ed4ca5cdec225b16f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e2f8a7eea930aba8144d32a15f1277c0a37b287', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed58d950bc78ccd90deaef233e908571b042e4aa', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d329b191bdb1f2d7db923abbe9131757344d8fc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c79a4ac269b09cbbc198f80ed87882d0701151f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd973dc6badc95786525c26dc16bb73f0eed9001', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c050625fd384221938e4697632613a4891151da', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a625e7fb116bdb276c5528d3f9d1ee2f15cf69c0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8432a0aebf322f48cd87162efdf46b9873d0b5ee', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2eff7ccb327b6c4ac805fb9dec8ab17599831143', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c26429d2b71029fd3848733c8e9c21130175f0c9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97ca8b162f611fbeff78d1d9c770e746215de471', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c73bcc85614516e880ed94f62cb16b1233a62b2b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30d7714be1025c1b7e11d38fc8377337f8b08863', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f4ccc63a1307fecb81de4ada06ca19e95c345f0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73cfd1c63c10a8006f9ce3ddeb0b186f687016a4', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3308da4f182e438b22b31201b554909121b540e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59cf5511475b178462dec0aa21e835128063f1ab', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e46a8f4f0a976b329535bf558fe0ed5e4d24d566', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '589d92b28894f285cc8d70b070c879158120b71d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f88430c9092eb90220a3841b1c7433a159180de8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23
716206487,GSoC blogs 2021,"GSoC Blogs for weeks 8, 9, 10 and final work product. ",True,493,https://api.github.com/repos/fury-gl/fury/pulls/493,https://github.com/fury-gl/fury/pull/493,closed,333,0,4,39,9,6,1,0,[{'name': 'type:Documentation'}],2021-08-19 19:34:58+00:00,2021-09-03 19:04:28+00:00,1294170.0,"14 days, 23:29:30","[{'comment_id': 701360346, 'comment_body': '`coding week` instead of `week of coding`', 'comment_created': datetime.datetime(2021, 9, 2, 19, 22, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701363084, 'comment_body': 'Strange rendering here.\r\n\r\nMaybe it is missing one empty line', 'comment_created': datetime.datetime(2021, 9, 2, 19, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701756071, 'comment_body': 'weird rendering, to update', 'comment_created': datetime.datetime(2021, 9, 3, 9, 44, 40, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 701773768, 'comment_body': 'Added empty lines', 'comment_created': datetime.datetime(2021, 9, 3, 10, 12, 52, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 701773890, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 9, 3, 10, 12, 59, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}, {'comment_id': 701773957, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 9, 3, 10, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SunTzunami', 'type': 'User'}]","[{'commit_sha': 'e8b72f8178c1f45530f1a39237f152dd9613294a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e958099fd5ecf33709f31fe7f1aa4e267c71c5de', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac4422129f0de3a13a4c0d94d8494c859a7ea831', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8de2883ba8acc82aa8586187e3e3cbf74548f597', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86b0e2b6f5d24a9bf66b4ca1d3a16a3720356a13', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ae8a112410ebd90c475f473bbc240ca3724c2d9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2573f01ff22f12f92efaa47b03ae3410397dd07a', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f398d0e48c4485379bc98c42d8d4a486ee85ae3c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9729700d6ecb433a47607d213cd00359ea41fb06', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0fd2133ac63e30a79d158e24399c2be839a2f47', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81c43d162806ee318d4635648ef169c14b2869e7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd11324fa8dfc39b9e40c2990e15d11ce85beba0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed4ea4562222926d1914b35ed4ca5cdec225b16f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e2f8a7eea930aba8144d32a15f1277c0a37b287', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed58d950bc78ccd90deaef233e908571b042e4aa', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d329b191bdb1f2d7db923abbe9131757344d8fc', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c79a4ac269b09cbbc198f80ed87882d0701151f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd973dc6badc95786525c26dc16bb73f0eed9001', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c050625fd384221938e4697632613a4891151da', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a625e7fb116bdb276c5528d3f9d1ee2f15cf69c0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8432a0aebf322f48cd87162efdf46b9873d0b5ee', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2eff7ccb327b6c4ac805fb9dec8ab17599831143', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c26429d2b71029fd3848733c8e9c21130175f0c9', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97ca8b162f611fbeff78d1d9c770e746215de471', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c73bcc85614516e880ed94f62cb16b1233a62b2b', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30d7714be1025c1b7e11d38fc8377337f8b08863', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f4ccc63a1307fecb81de4ada06ca19e95c345f0', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73cfd1c63c10a8006f9ce3ddeb0b186f687016a4', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3308da4f182e438b22b31201b554909121b540e', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59cf5511475b178462dec0aa21e835128063f1ab', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e46a8f4f0a976b329535bf558fe0ed5e4d24d566', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '589d92b28894f285cc8d70b070c879158120b71d', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f88430c9092eb90220a3841b1c7433a159180de8', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e01c2b56ece2433e1725a15b570829086a3285b7', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae15c8cdd0c196d32f19e04666b23bea5ab1a543', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b26e71591d56bc40b6919c3fec3b81ee24a5d7d2', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bacb7c901f7d65d1984c284ff9578f6c0bb65c45', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '542803a7f8e061b6c4a1630f4c2edb3dd84a801c', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd891dce4c42899fc13bd41e9cb21ea6e3d36256f', 'committer_username': 'SunTzunami', 'committer_name': 'Sajag Swami', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 9, 9, 3, 31, tzinfo=datetime.timezone.utc)}]",Sajag Swami,65067354,,User,,22,,25,23

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
149529946,fury,fury-gl/fury,Python,165,229,20,88,5461,139,11,58,"[{'id': 716206487, 'number': 493, 'closed': datetime.datetime(2021, 9, 3, 19, 4, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 19, 34, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1294170.0, 'time_delta': '14 days, 23:29:30', 'additions': 333, 'deletions': 0, 'state': 'closed'}, {'id': 713940336, 'number': 492, 'closed': None, 'created': datetime.datetime(2021, 8, 17, 6, 2, 23, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 301, 'deletions': 0, 'state': 'open'}, {'id': 697909208, 'number': 475, 'closed': datetime.datetime(2021, 7, 30, 13, 50, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 14, 23, 23, tzinfo=datetime.timezone.utc), 'time_taken': 257205.0, 'time_delta': '2 days, 23:26:45', 'additions': 371, 'deletions': 0, 'state': 'closed'}, {'id': 691898429, 'number': 462, 'closed': None, 'created': datetime.datetime(2021, 7, 17, 9, 58, 19, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 186, 'deletions': 118, 'state': 'open'}, {'id': 683125690, 'number': 452, 'closed': datetime.datetime(2021, 9, 21, 13, 49, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 6, 54, 2, tzinfo=datetime.timezone.utc), 'time_taken': 6850542.0, 'time_delta': '79 days, 6:55:42', 'additions': 1292, 'deletions': 0, 'state': 'closed'}, {'id': 683052407, 'number': 451, 'closed': datetime.datetime(2021, 7, 3, 23, 22, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 17, 12, 33, tzinfo=datetime.timezone.utc), 'time_taken': 22223.0, 'time_delta': '6:10:23', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 673173538, 'number': 445, 'closed': datetime.datetime(2021, 7, 13, 11, 33, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 5, 16, tzinfo=datetime.timezone.utc), 'time_taken': 2182654.0, 'time_delta': '25 days, 6:17:34', 'additions': 280, 'deletions': 0, 'state': 'closed'}, {'id': 666807744, 'number': 439, 'closed': datetime.datetime(2021, 7, 3, 12, 19, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 11, 43, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1989411.0, 'time_delta': '23 days, 0:36:51', 'additions': 353, 'deletions': 0, 'state': 'closed'}, {'id': 607849485, 'number': 404, 'closed': datetime.datetime(2021, 9, 28, 12, 46, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 6, 40, 32, tzinfo=datetime.timezone.utc), 'time_taken': 15487556.0, 'time_delta': '179 days, 6:05:56', 'additions': 7154, 'deletions': 13242, 'state': 'closed'}, {'id': 592518817, 'number': 393, 'closed': datetime.datetime(2021, 3, 29, 15, 2, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 14, 10, 41, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1311628.0, 'time_delta': '15 days, 4:20:28', 'additions': 85, 'deletions': 1, 'state': 'closed'}, {'id': 581320043, 'number': 388, 'closed': datetime.datetime(2021, 3, 11, 1, 17, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 27, 12, 16, 24, tzinfo=datetime.timezone.utc), 'time_taken': 997239.0, 'time_delta': '11 days, 13:00:39', 'additions': 139, 'deletions': 0, 'state': 'closed'}, {'id': 578606675, 'number': 385, 'closed': datetime.datetime(2021, 2, 26, 16, 47, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 23, 17, 3, 37, tzinfo=datetime.timezone.utc), 'time_taken': 258260.0, 'time_delta': '2 days, 23:44:20', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 576987397, 'number': 383, 'closed': datetime.datetime(2021, 2, 21, 0, 3, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 20, 18, 33, 20, tzinfo=datetime.timezone.utc), 'time_taken': 19809.0, 'time_delta': '5:30:09', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 572976209, 'number': 376, 'closed': datetime.datetime(2021, 2, 18, 20, 13, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 13, 18, 38, 42, tzinfo=datetime.timezone.utc), 'time_taken': 437679.0, 'time_delta': '5 days, 1:34:39', 'additions': 336, 'deletions': 0, 'state': 'closed'}, {'id': 572896896, 'number': 375, 'closed': datetime.datetime(2021, 4, 1, 20, 51, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 13, 7, 2, 38, tzinfo=datetime.timezone.utc), 'time_taken': 4110551.0, 'time_delta': '47 days, 13:49:11', 'additions': 405, 'deletions': 169, 'state': 'closed'}, {'id': 560652190, 'number': 362, 'closed': datetime.datetime(2021, 8, 20, 15, 32, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 24, 18, 35, 30, tzinfo=datetime.timezone.utc), 'time_taken': 17960229.0, 'time_delta': '207 days, 20:57:09', 'additions': 240, 'deletions': 1, 'state': 'closed'}, {'id': 547571860, 'number': 351, 'closed': datetime.datetime(2021, 1, 6, 15, 31, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 1, 6, 9, 23, tzinfo=datetime.timezone.utc), 'time_taken': 465738.0, 'time_delta': '5 days, 9:22:18', 'additions': 19, 'deletions': 10, 'state': 'closed'}, {'id': 528700409, 'number': 345, 'closed': datetime.datetime(2021, 1, 1, 5, 22, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 27, 16, 27, 58, tzinfo=datetime.timezone.utc), 'time_taken': 2984085.0, 'time_delta': '34 days, 12:54:45', 'additions': 19, 'deletions': 10, 'state': 'closed'}]"
