pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1352345778,Minor Change in Control Plots Documentation,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->


#### Brief description of what is fixed or changed

`ramp_response_plot` was under the `See Also` for `ramp_response_plot` itself (due to copy pasting the doc from `impulse_response_plot`). 

Here It should be `impulse_response_plot` instead. 

#### Other comments


#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->
NO ENTRY

<!-- END RELEASE NOTES -->
",True,25147,https://api.github.com/repos/sympy/sympy/pulls/25147,https://github.com/sympy/sympy/pull/25147,closed,1,1,1,1,2,0,0,0,[],2023-05-16 11:37:02+00:00,2023-05-16 12:49:10+00:00,4328.0,1:12:08,[],"[{'commit_sha': 'dcfaf42da1f35ed9602eaa670b19368ab0bd084e', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1359609888,Remove unused test variable from `test_control_plots`,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->


#### Brief description of what is fixed or changed

Variable unused in file and not contributing to any subsequent tests.

#### Other comments


#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->

NO ENTRY

<!-- END RELEASE NOTES -->
",True,25161,https://api.github.com/repos/sympy/sympy/pulls/25161,https://github.com/sympy/sympy/pull/25161,closed,0,1,1,1,3,0,0,0,[],2023-05-22 17:11:23+00:00,2023-05-23 04:18:25+00:00,40022.0,11:07:02,[],"[{'commit_sha': '61916a25f61a793404a971afd015c5bb75ba5234', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1386990074,[GSOC 1.1] Add Examples in the Control System Package,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->

Closes #22124
Closes #20304 

#### Brief description of what is fixed or changed

This PR adds examples in the Control System docs.
It covers all the existing implementations of the Control Package :
1. `Transforms` (Laplace, Inverse-Laplace and related Theorems),
2. `TransferFunction` class (attributes and properties of Transfer Functions)
3. `Plots` (Step response, Impulse response, Pole Zero and Bode's Plots)
4. `TransferFunctionMatrix` class
5. `Configurations` (Series, Parallel and Feedback)

#### Other comments
The control package of SymPy is incomplete, hence a second follow up PR will be aimed at the end of my 3rd Phase with other implementations (`StateSpaceModel` and it's conversions will be added by then).

#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->

* physics.control
  * Added textbook examples to the control systems package
 
<!-- END RELEASE NOTES -->
",True,25227,https://api.github.com/repos/sympy/sympy/pulls/25227,https://github.com/sympy/sympy/pull/25227,closed,861,0,8,10,35,39,2,0,"[{'name': 'GSoC'}, {'name': 'physics.control'}]",2023-06-10 03:56:01+00:00,2023-06-18 13:37:38+00:00,726097.0,"8 days, 9:41:37","[{'comment_id': 1225070837, 'comment_body': 'Right now all the images are hosted at https://github.com/faze-geek/GSOC-Images . Although I do not intend to take down the repository anytime, it seems like a temporary fix. I guess those images may become unavailable if I make the repository private (or delete it).', 'comment_created': datetime.datetime(2023, 6, 10, 4, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1225127715, 'comment_body': 'You should prepare svg images and commit them here (not bitmaps).', 'comment_created': datetime.datetime(2023, 6, 10, 5, 50, 54, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225130625, 'comment_body': 'The math directive gives you the latex align environment so you can write and format more nicely with:\r\n\r\n```rst\r\n... math::\r\n\r\n   a & = b \\\\\r\n   c & = d\r\n```', 'comment_created': datetime.datetime(2023, 6, 10, 5, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225168838, 'comment_body': 'Okay sure. I will have to look into SVG images. Will I have to draw them ? Then it will be difficult to make something accurate like plots (for which I believe we should stick to exactly what SymPy returns, refer Q3. in code)  \r\n\r\n![image](https://github.com/sympy/sympy/assets/90216905/514c8eaa-fa86-4a03-8937-ee8bae0eaf02)\r\n\r\nAre there any online resources that can convert .`jpg `files to .`svg` . with precision ?', 'comment_created': datetime.datetime(2023, 6, 10, 7, 8, 11, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1225291448, 'comment_body': 'Now the rendering looks clearer. Thanks !', 'comment_created': datetime.datetime(2023, 6, 10, 11, 8, 15, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1225368142, 'comment_body': 'If you are generating plots from the code then you should use the matplotlib extension:\r\n\r\nhttps://matplotlib.org/sampledoc/extensions.html', 'comment_created': datetime.datetime(2023, 6, 10, 13, 41, 10, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225416547, 'comment_body': 'I have replaced the image links with the svg files. You can have a look . Tried my best with the drawings :)\n', 'comment_created': datetime.datetime(2023, 6, 10, 15, 10, 7, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1225714189, 'comment_body': 'The drawings look good, but can you generate the plots using the plot directive?', 'comment_created': datetime.datetime(2023, 6, 11, 5, 44, 37, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225757095, 'comment_body': '> The drawings look good, but can you generate the plots using the plot directive?\r\n\r\nThis is a good idea, as the plots will be dynamically generated instead of static SVG images. So any modifications in the plotting or control modules in the future will reflect in the documentation. ', 'comment_created': datetime.datetime(2023, 6, 11, 9, 17, 10, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1225757239, 'comment_body': 'I have added the plot directive. You can have a look now . Thanks!', 'comment_created': datetime.datetime(2023, 6, 11, 9, 18, 3, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1225766223, 'comment_body': '```suggestion\r\nSolution\r\n```', 'comment_created': datetime.datetime(2023, 6, 11, 10, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225766373, 'comment_body': 'This shouldn\'t be in the math mode and ""Differential Equation"" is not capitalized.', 'comment_created': datetime.datetime(2023, 6, 11, 10, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225766524, 'comment_body': 'Use the `.. math::` directive for cleaner display of multiline math.', 'comment_created': datetime.datetime(2023, 6, 11, 10, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225766669, 'comment_body': 'initial conditions', 'comment_created': datetime.datetime(2023, 6, 11, 10, 11, 16, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225766873, 'comment_body': '""A the"" ?', 'comment_created': datetime.datetime(2023, 6, 11, 10, 11, 51, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225766968, 'comment_body': ""Don't use these `-` at the ends of phrases."", 'comment_created': datetime.datetime(2023, 6, 11, 10, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225767303, 'comment_body': 'Why does this not show pairs of imaginary poles?\r\n\r\n![image](https://github.com/sympy/sympy/assets/276007/0fea1653-0be7-4b5e-888d-09d5d8ca1157)\r\n', 'comment_created': datetime.datetime(2023, 6, 11, 10, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225768465, 'comment_body': 'Seeing this form makes me think that displaying an ascii block diagram would be more useful to the user. This is like seeing the srepr of a sympy expression.', 'comment_created': datetime.datetime(2023, 6, 11, 10, 18, 59, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225778864, 'comment_body': '```\r\n>>> s = Symbol(\'s\')\r\n>>> tf = TransferFunction(-s-1+(s+1)**2,(s+1)**3,s)\r\n>>> tf.poles()\r\n[-1, -1, -1]\r\n>>> pole_zero_plot(tf)   # Similar as MATLAB          \r\n```\r\n<img width=""900"" alt=""image"" src=""https://github.com/sympy/sympy/assets/90216905/d60f9e7c-510b-4c52-9202-e962a06d2bad"">\r\n', 'comment_created': datetime.datetime(2023, 6, 11, 11, 8, 58, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1225782306, 'comment_body': 'The plot is misleading because of the 1e-5 range of the imaginary axis. All the poles should be on the real axis line, but there must be some round off error in the imaginary parts.', 'comment_created': datetime.datetime(2023, 6, 11, 11, 29, 20, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1225819491, 'comment_body': 'My apologies, but I did not get what you are suggesting. Can you expand or maybe show through an example ... what you expect here ?', 'comment_created': datetime.datetime(2023, 6, 11, 13, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1225848244, 'comment_body': ""You don't need to fix anything for this, but I was just reflecting on how we may want a better repr for these expressions. One that is easily readable."", 'comment_created': datetime.datetime(2023, 6, 11, 15, 42, 53, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1226087173, 'comment_body': 'Yes, this can be a general fix in the `pole_zero_plot` function instead of just the above example. If we change the multiply a 10 to the scale and then plot in within those limits the users will have better understanding. Something like this - \r\n```\r\n--- a/sympy/physics/control/control_plots.py\r\n+++ b/sympy/physics/control/control_plots.py\r\n@@ -182,6 +182,7 @@ def pole_zero_plot(system, pole_color=\'blue\', pole_markersize=10,\r\n\r\n     pole_real = np.real(poles)\r\n     pole_imag = np.imag(poles)\r\n+    largest_exponent = int(np.floor(np.log10(np.abs(pole_imag))).max())\r\n\r\n     plt.plot(pole_real, pole_imag, \'x\', mfc=\'none\',\r\n         markersize=pole_markersize, color=pole_color)\r\n@@ -196,6 +197,9 @@ def pole_zero_plot(system, pole_color=\'blue\', pole_markersize=10,\r\n     if show_axes:\r\n         plt.axhline(0, color=\'black\')\r\n         plt.axvline(0, color=\'black\')\r\n+\r\n+    plt.ylim(-10 ** (largest_exponent + 1), 10 ** (largest_exponent + 1))\r\n+\r\n```\r\n\r\n<img width=""935"" alt=""image"" src=""https://github.com/sympy/sympy/assets/90216905/87f3e913-6106-4317-8684-67c4e77dae87"">\r\n\r\nMind that if I multiply a greater power like 10^2, all points will be stuck to the real axis and there will be no visibility.', 'comment_created': datetime.datetime(2023, 6, 12, 5, 9, 42, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1226087824, 'comment_body': 'I will keep this comment in mind for any future discussions on possible improvements.', 'comment_created': datetime.datetime(2023, 6, 12, 5, 10, 49, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1226276753, 'comment_body': ""I agree with Jason. This looks way too confusing, even to people who might know what's going on here. \r\nBut it is out of scope for this PR. We can discuss this in Phase 2 and see if we can come up with something better"", 'comment_created': datetime.datetime(2023, 6, 12, 8, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Sc0rpi0n101', 'type': 'User'}, {'comment_id': 1226357073, 'comment_body': ""I'd just open an issue about this, as it seems beyond scope here to fix."", 'comment_created': datetime.datetime(2023, 6, 12, 9, 23, 45, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1226642826, 'comment_body': 'Yes makes sense. The plot is generated so any change in code with improve it dynamically.', 'comment_created': datetime.datetime(2023, 6, 12, 13, 8, 43, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1226646144, 'comment_body': 'Sure. I have saved this comment for phase 2 discussions.', 'comment_created': datetime.datetime(2023, 6, 12, 13, 11, 11, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1228329883, 'comment_body': '```suggestion\r\n   physics/index.rst\r\n```', 'comment_created': datetime.datetime(2023, 6, 13, 15, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1228330419, 'comment_body': 'the url already contains ""guides"", so you can just use ""physics"".', 'comment_created': datetime.datetime(2023, 6, 13, 15, 29, 15, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1228331274, 'comment_body': '```suggestion\r\nControl Package Examples\r\n```', 'comment_created': datetime.datetime(2023, 6, 13, 15, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1228358496, 'comment_body': 'Can we call it `Control Systems Examples` then? ', 'comment_created': datetime.datetime(2023, 6, 13, 15, 49, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Sc0rpi0n101', 'type': 'User'}, {'comment_id': 1228508700, 'comment_body': 'Okay. I have updated this in the latest commit.', 'comment_created': datetime.datetime(2023, 6, 13, 18, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1228510287, 'comment_body': 'I went with `Control Package Examples`. Seemed more suitable here.', 'comment_created': datetime.datetime(2023, 6, 13, 18, 2, 34, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1228999629, 'comment_body': ""```suggestion\r\n    >>> s, k = symbols('s k')\r\n```"", 'comment_created': datetime.datetime(2023, 6, 14, 5, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Smit-create', 'type': 'User'}, {'comment_id': 1229000125, 'comment_body': '```suggestion\r\n    >>> tf = TransferFunction(a, b, s)\r\n```\r\n\r\nIt would be nice to follow the same wherever applicable.', 'comment_created': datetime.datetime(2023, 6, 14, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Smit-create', 'type': 'User'}, {'comment_id': 1229000269, 'comment_body': '```suggestion\r\n    >>> Impulse_Response = inverse_laplace_transform(tf, s, t)\r\n```', 'comment_created': datetime.datetime(2023, 6, 14, 5, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Smit-create', 'type': 'User'}, {'comment_id': 1229000695, 'comment_body': '```suggestion\r\n    >>> F = laplace_correspondence(F, {u: U, y:Y})\r\n```\r\n\r\nPlease keep this style uniform everywhere in the docs/code.', 'comment_created': datetime.datetime(2023, 6, 14, 5, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Smit-create', 'type': 'User'}, {'comment_id': 1230055872, 'comment_body': 'Done, added spaces consistently after commas throughout the file! You can have a look.', 'comment_created': datetime.datetime(2023, 6, 14, 19, 9, 27, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}]","[{'commit_sha': '44d650939370b7fce8b64a6892911e6f1250c1bf', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f9bd90e0a130c5df093dc0571a39b10e15f815b', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8d80af378daf9d9b1ae67455913085dd8c30979', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c600c559715f8c9260744fad33c25bd44ea56b0f', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fb90d8fcb4f579d27d7dcb1ae6d2d064844d9dd', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88412df3153f7ccff0e67d4bb7692bd0b6ee8e1c', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3f55a5b03fe6c2f9643ffae0dba0372cb396f94', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb5d8199a2b6ee2e7e7eef403ec9ead8880cbb9b', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9714322b24b611ea4b2c231ecffdf552cee1e036', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7ee73c436884360072e6068d6efc6166e8a1542', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1396631989,[GSOC 1.2] Add Root Locus and Nichols plot in control plots.,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->


#### Brief description of what is fixed or changed

This pull request adds the Root Locus plot to control system plots.

#### Other comments
Relevant tests will be added soon.

#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->

* physics.control
  * Added the Root Locus and Nichols plot to the control plots.
  
<!-- END RELEASE NOTES -->
",False,25251,https://api.github.com/repos/sympy/sympy/pulls/25251,https://github.com/sympy/sympy/pull/25251,open,355,3,3,6,22,15,2,0,"[{'name': 'GSoC'}, {'name': 'physics.control'}]",2023-06-17 05:43:02+00:00,,0.0,,"[{'comment_id': 1232968342, 'comment_body': ""Hi @oscarbenjamin, I would like if you could go through this once. Thanks !\r\n\r\n>Yes, but we don't need 10000 points to plot the curve. The num=10000 plot above shows that an acceptable plot is obtained from only 40 points (since the other 9960 points are on the real axis).\r\nI expect that uniform spacing is not optimal. Naturally I would guess that something like logarithmic or harmonic spacing would be better. You can see in the num=10000 plot that using uniform intervals for k does not lead to a uniform distance between the points in the plot.\r\nIdeally the curve would be generated using pseudo-arc-length continuation so you can generate them at a fixed 2D distance within the plot but that's probably more complicated than it is worth.\r\n\r\nOriginally posted by **oscarbenjamin** in this [comment](https://github.com/sympy/sympy/pull/21763#discussion_r675992906) .\r\n\r\nI have tried to address this here.\r\n**Consider the earlier attempt at Root Locus Plot**  - c162c48b490166bd82995babadb697b3f7f09823\r\n\r\nFor `TransferFunction(2*s**2 + 5*s + 1, s**2 + 3*s + 5, s)`\r\nIf `num=10000` (sampled 10000 times, default)\r\n\r\n![image](https://github.com/sympy/sympy/assets/90216905/634255e9-daf2-49db-addb-e52be808745f)\r\n\r\n1. Here `np.linspace` was used due to which majority points are not on curve but on the straight line which is unnecessary. I have used `np.logspace`.\r\n2.  Falsely joined points when curve approaches the axis. I have added the `get_breakaway_points()` function which calculates the points where 2 locus branches meet the axis and added the points to the array at the correct index. Here if you `print(idx)` with `np.linspace ` it gives 3 ( only 3/100 sampled points on the curve ) while with `np.logspace` it gives 78 ( 78/100 points on the curve which is indeed good sampling).\r\n3. Here the issue was, the points were being generated upto `k = 400` but the points were only present between `+- 1.5\r\n` so a `k_max` of 2 would also suffice here for the y axis values . But to get all points on the x-axis you would need a higher value . I have generalized it to 40 (default)\r\n\r\nNow we get a better plot with just **100** points compared to the earlier **10000** points required and the time to generate the plot is also lesser."", 'comment_created': datetime.datetime(2023, 6, 17, 5, 47, 13, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1233017943, 'comment_body': 'Use 4 spaces for indentation', 'comment_created': datetime.datetime(2023, 6, 17, 10, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'oscarbenjamin', 'type': 'User'}, {'comment_id': 1233020164, 'comment_body': ""A better approach would be to compute the end points of the lines directly. I don't know much about root locus analysis but as far as I can tell the situation here is something like we have a polynomial and there is a parameter `k` in the coefficients like this:\r\n```\r\nIn [1]: k, s = symbols('k, s')\r\n\r\nIn [2]: p = s**3 + (1 + k)*s**2 + k*s + 1\r\n\r\nIn [3]: p\r\nOut[3]: \r\n       3    2            \r\nk⋅s + s  + s ⋅(k + 1) + 1\r\n```\r\nThe root locus plot shows how the roots of the polynomial for `s` vary as `k` is changed. For some values of `k` the roots will change from being real to being complex. That happens when the discriminant of the polynomial is zero and we can compute those values of `k` directly:\r\n```\r\nIn [4]: d = discriminant(p, s)\r\n\r\nIn [5]: d\r\nOut[5]: \r\n 4      3      2           \r\nk  - 6⋅k  + 7⋅k  + 6⋅k - 31\r\n\r\nIn [6]: [r.n(3) for r in real_roots(d)]\r\nOut[6]: [-1.48, 4.48]\r\n```\r\nWe know that the end points of the lines and curves must be at -1.48 and 4.48 so there are 3 sets of k values to consider `k < -1.48`, `-1.48 < k < 4.48` and `4.48 < k`. Picking a rational number in each of these regions allows us to determine how many real roots there are in each case:\r\n```\r\nIn [7]: len(real_roots(p.subs(k, -2)))\r\nOut[7]: 3\r\n\r\nIn [8]: len(real_roots(p.subs(k, 0)))\r\nOut[8]: 1\r\n\r\nIn [9]: len(real_roots(p.subs(k, 5)))\r\nOut[9]: 3\r\n```\r\nWe know now that for `-1.48 < k < 4.48` there are two nonreal roots but for all other values of `k` there are three real roots."", 'comment_created': datetime.datetime(2023, 6, 17, 10, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'oscarbenjamin', 'type': 'User'}, {'comment_id': 1233214501, 'comment_body': ""Not sure if I totally get what you meant by getting end points from counting the number of `real_roots` in each interval. I tried to prepare a snippet as follows - \r\n\r\n```\r\nimport matplotlib.pyplot as plt\r\nfrom sympy import *\r\nfrom sympy.physics.control import *\r\ns,k = symbols('s k')\r\ntf = TransferFunction(2*s**2 + 5*s + 1, s**2 + 2*s + 3, s)\r\n\r\neq = tf.den + k * tf.num\r\nd = discriminant(eq, s)\r\nroots_discriminant = [r.n(3) for r in real_roots(d)]\r\n# roots_discriminant = [-0.490, 0.961] - x < -0.490, -0.490< x < 0.961, 0.961< x \r\nk_values = [-1.5,-1.35,-1.2,-1.05,-0.9,-0.75,-0.6,-0.45,-0.3,-0.15,0,0.15,0.3,0.45,0.6,0.75,0.9,1.05,1.2,1.35,1.5]\r\n\r\nreal_parts = []\r\nimag_parts = []\r\nfor k_value in k_values:\r\n    modified_eq = eq.subs(k, k_value)\r\n\r\n    roots = np.roots(modified_eq.as_poly().all_coeffs())\r\n    real_parts.append(np.real(roots))\r\n    imag_parts.append(np.imag(roots))\r\n\r\nplt.xlabel('Re')\r\nplt.ylabel('Im')\r\nplt.plot(real_parts, imag_parts)\r\n```\r\n\r\nAnd got a plot - \r\n![image](https://github.com/sympy/sympy/assets/90216905/bd66ed98-7960-488a-88fe-25927aa1266c)\r\n\r\nSo even now, it comes down to sampling and finding roots. I guess some kind of sorting will also be needed in each interval and the wrongful joining of points when curve approaches the axis still exists."", 'comment_created': datetime.datetime(2023, 6, 18, 7, 17, 21, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1233215423, 'comment_body': 'Can you takeover from here and help me to design a plot. I get how this helps in analysis (presence of complex conjugates or only real roots etc.) but cannot figure out the plot with just endpoints of the intervals\r\n```\r\nprint(len(real_roots(eq.subs(k, -2))))\r\nprint(len(real_roots(eq.subs(k, 0))))\r\nprint(len(real_roots(eq.subs(k, 2))))\r\n2\r\n0\r\n2\r\n```', 'comment_created': datetime.datetime(2023, 6, 18, 7, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1233250865, 'comment_body': '> Can you takeover from here and help me to design a plot.\r\n\r\nNo, but if you ask a more specific question I can maybe answer it.\r\n\r\n> the wrongful joining of points when curve approaches the axis still exists\r\n\r\nThat is because you are not using the values of k found in roots_discriminant to make the start and end of the lines. Those k values are precisely the ones that correspond to where the curve meets the axis:\r\n```python\r\nIn [32]: r1, r2 = real_roots(discriminant(eq, s))\r\n\r\nIn [34]: roots(eq.subs(k, r1), s)\r\nOut[34]: {5 + √38: 2}\r\n\r\nIn [35]: roots(eq.subs(k, r2), s)\r\nOut[35]: {5 - √38: 2}\r\n\r\nIn [36]: N(5 - sqrt(38))\r\nOut[36]: -1.16441400296898\r\n```\r\nAs you can see in the plot `-1.16` is where the curves meet. You should use that as the end point of the lines.', 'comment_created': datetime.datetime(2023, 6, 18, 10, 39, 24, tzinfo=datetime.timezone.utc), 'commenter': 'oscarbenjamin', 'type': 'User'}, {'comment_id': 1233252341, 'comment_body': 'Once the new plotting module is merged and it is based on the adaptive library, then these plots will lot better at the  locations where derivative of the roots wrt k is steep. If the sympy plotting module is used to construct the plots (instead of numpy and matplotlib directly) then these benefits will be applied once the new plot module is merged.', 'comment_created': datetime.datetime(2023, 6, 18, 10, 47, 9, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1233278833, 'comment_body': "" > No, but if you ask a more specific question I can maybe answer it.\r\n\r\nYeah, my apologies. My specific question is once we have calculated the start and end points using discriminant, what role does number of real roots in each interval play in the plot. Could you expand on that ?\r\nAs you can see in my snippet above once I get the roots of the discriminant, I limit my k_values around them and eventually did sampling (with the belief that we will need less samples once roots of k are known). I'm not sure I understood what was expected correctly."", 'comment_created': datetime.datetime(2023, 6, 18, 13, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1233599562, 'comment_body': ""Hi, I could find the boundary points of the curve through this -\r\n```\r\nfrom sympy import *\r\ns = Symbol('s')\r\nk = Symbol('k')\r\ntf = TransferFunction(2*s**2 +5*s +1, s**2+2*s+3,s)\r\nn = tf.num\r\nd = tf.den\r\neq = d+k*n\r\nprint(eq)                            # k*(2*s**2 + 5*s + 1) + s**2 + 2*s + 3\r\n\r\nprint(nroots(n))                     # k = oo .Boundary points [-2.28077640640441, -0.219223593595585]\r\n\r\ndis = discriminant(eq, s)  \r\nprint(d)                             # 17*k**2 - 8*k - 8\r\nd_d = [r.n(3) for r in roots(d)]\r\nprint(d_d)                           # [-1.0 - 1.41*I, -1.0 + 1.41*I]   \r\nd_r = [r for r in real_roots(dis)]\r\nprint(d_r)                           # [4/17 - 2*sqrt(38)/17, 4/17 + 2*sqrt(38)/17]\r\n\r\nprint(roots(eq.subs(k, d_r[1]), s))  # {5 - sqrt(38): 2}\r\nprint(N(5 - sqrt(38)))               # −1.16441400296898\r\n```\r\n\r\nThis will gives us a plot like this - \r\n![image](https://github.com/sympy/sympy/assets/90216905/7ac7511f-194f-44a0-abcf-6dec5f13cce6)\r\n\r\nWhich is nothing but poles and zeros of `TransferFunction `and point where discriminant is 0. We would need to do the sampling upto that value `k_discriminant` (1.61.. which is quite less than 40) and need considerable points ( less than 100 but still ) to prepare this part - \r\n`root_locus_plot(tf,k_max= 1.16441400296898,num=50)`\r\n![image](https://github.com/sympy/sympy/assets/90216905/f2c01172-1c60-4465-96c1-ac7f1c1296fa)\r\n \r\n**UPDATE -** This method of getting endpoints and sampling upto `k_discriminant `cannot be generalized. For example 2 of MATLAB shown above (`TransferFunction((0.1)*s**2 + 2*s + 3, 4*s**2 +5*s + 6, s`), we will get a plot like this -\r\n![image](https://github.com/sympy/sympy/assets/90216905/5790d6cd-eab9-4489-9619-2431ac90be50)\r\n"", 'comment_created': datetime.datetime(2023, 6, 19, 6, 49, 55, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1234301175, 'comment_body': ""This can be handled by the sympy's plotting module as follows - \r\n```\r\nfrom sympy.plotting.plot import Parametric2DLineSeries\r\nphase_points, mag_points = Parametric2DLineSeries(phase,mag,(_w,initial_omega,final_omega), nb_of_points = 10000, adaptive= False).get_points()\r\nreturn phase_points, mag_points\r\n```\r\nWe will get rid of `np.linspace `and numerical `lambdify` with this.\r\nThe generation is slower but that is expected and accepted. The accuracy of plots w.r.t MALTAB is not affected - \r\n```\r\ntf = TransferFunction(-(0.1)*s**3 - (2.4)*s**2 - 181*s - 1950, s**3 + (3.3)*s**2 + 990*s + 2600, s)\r\nnichols_plot(tf,1,100)\r\n```\r\n![image](https://github.com/sympy/sympy/assets/90216905/efbe8570-140f-4c99-ad1f-4d7ee95a9ea3)\r\n\r\nWith this **nichols_plot** will not use numpy functionalitites. I'll send in a commit soon if no one opposes this.\r\n\r\n**Update -** I have made the commit."", 'comment_created': datetime.datetime(2023, 6, 19, 17, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1234387371, 'comment_body': '> Once we have calculated the start and end points using discriminant, what role does number of real roots in each interval play in the plot.\r\n\r\nFor real roots the plot is just a straight line and so it is not necessary to call real_roots, nroots etc to generate any points for the plot. Just find the coordinates of the start and end of the line and draw the line using those two points.', 'comment_created': datetime.datetime(2023, 6, 19, 19, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'oscarbenjamin', 'type': 'User'}, {'comment_id': 1238052946, 'comment_body': ""So to be clear, let me point out what I have understood - \r\n1. Get the endpoints ( the discriminant method is applicable, but these are essentially poles and zeros of the TransferFunction which are directly accessible through `tf.poles()` and `tf.zeros()`) and join them. An issue of coloring will arise here since simply joining them will have the line of the same color. Instead separate branches are supposed to have different colors. I thought If this could be handled using the matplotlib coloring schemes but don't think it can be fixed.\r\n2. Then prepare the curve with better sampling (we don't need a `k_max `value upto 40 to generate the curves). Yet, the `k_max `value will have to be thought about . Also, number of points will be reduced .\r\n\r\n@Sc0rpi0n101 I am thinking in the right direction ?"", 'comment_created': datetime.datetime(2023, 6, 22, 6, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1244618005, 'comment_body': 'I will be reverting this commit. I realized recently that `Parametric2DLineSeries` does not work well with Python 3.9 / 3.8 versions as you can see. As SymPy works with any version above 3.8 for now, I would not expect a user to know that the accurate results will be obtained only on version 3.10.\r\nTo make sure that eventually the current method should be replaced by `Parametric2DLineSeries`, I will raise an issue once this is ready to go in.\r\n```\r\ns = Symbol(\'s\')\r\ntf = TransferFunction(-(0.1)*s**3 - (2.4)*s**2 - 181*s - 1950, s**3 + (3.3)*s**2 + 990*s + 2600, s)\r\nnichols_plot(tf,1,100)\r\ntf1 = TransferFunction(s**2 + (0.1)*s + 7.5,s**4 + (0.12)*s**3 + 9*s**2,s)\r\nnichols_plot(tf1)\r\n```\r\n**!python --version    3.10.12**\r\n\r\n![image](https://github.com/sympy/sympy/assets/90216905/6de5cb37-499d-445a-ad42-fadb15ba478d)\r\n![image](https://github.com/sympy/sympy/assets/90216905/53fba273-af51-4110-a990-99ff2e81b1e4)\r\n\r\n**!python --version    3.9.6**\r\n\r\n<img width=""478"" alt=""image"" src=""https://github.com/sympy/sympy/assets/90216905/c1a2cf11-9a1b-4226-961e-eb8937247190"">\r\n<img width=""479"" alt=""image"" src=""https://github.com/sympy/sympy/assets/90216905/7a72f7ff-6074-4794-b6e5-24adbf01c122"">\r\n\r\n\r\n\r\n', 'comment_created': datetime.datetime(2023, 6, 28, 3, 20, 55, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1246080112, 'comment_body': ""> Just find the coordinates of the start and end of the line and draw the line using those two points.\r\n\r\nHi @oscarbenjamin, I have some doubts in the approach you have mentioned.\r\n1. How is the curve supposed to be handled here since this approach talks about the real axis. For that we would anyways need sampling of points to a gain (`k`) value that cannot be generalized. Right now, most of the sampling (90% points) are getting generated on the curve and there are very few points on the real axis, so most plots will need this sampling even if I separately join end points on real axis (there would not be any computational advantage here).\r\nAlso, we have to get each point on the real axis and monitor which of them need to be joined (instead of directly joining the end points here)\r\nConsider this example -\r\n![image](https://github.com/sympy/sympy/assets/90216905/bc4c3ca7-c590-4630-9a18-dfd765a6fdfe)\r\n\r\nI came across this when I was trying to apply this approach on transfer functions of higher order. Here I made the parametric equation, found it's roots and played with points in the intervals. According to the count of `real_roots` It suggests there are 4 real roots in each interval (I should join -21 and -4) but as you can see the MATLAB plot (and plot by this current pr) there should not be a locus on points like -16 and -6.\r\n\r\n![image](https://github.com/sympy/sympy/assets/90216905/8c2f3eb7-9701-429c-924b-240709d125b1)\r\n\r\n2. Coloring the branches. This can be ignored, but if we want different branches to be colored differently, I'm not sure if we can directly join the end points. I tried a matplotlib coloring scheme and made it work for quadratic transfer functions but I'm not certain it will always work.\r\n\r\nI would really appreciate if we can discuss an example end to end before I completely shift to this approach. Thanks."", 'comment_created': datetime.datetime(2023, 6, 29, 4, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1249231447, 'comment_body': 'Resolving as the discussion has been shifted below !', 'comment_created': datetime.datetime(2023, 7, 2, 5, 22, 40, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}]","[{'commit_sha': 'ced1c37fa82c475ae57c9bc227a6ac95c8859f7d', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62b4de51cba0e84096b34f7f2b080ada7f112259', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c15ae7cf11c34b57c613a48f220ab56853751aa', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '308e8e7f990d686f0680772fddef3125744e0340', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '334d6d1f38a91140fbe2438866cdaa936ed16810', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c8c5f2978e0872cc0b62a0ecfe2b37729f2dd76', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1405929375,[GSOC 1.3] Add Instantiation methods for Transfer Functions,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->


#### Brief description of what is fixed or changed
This pull request adds methods to instantiate Transfer Functions as suggested in this [comment](https://github.com/sympy/sympy/pull/19390#issuecomment-635370437).
1. `from_coeff_lists`
2. `from_zpk`

#### Other comments
Relevant tests have been added.

#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->

* physics.control
  * Added Instantiation methods for Transfer Functions

<!-- END RELEASE NOTES -->
",True,25287,https://api.github.com/repos/sympy/sympy/pulls/25287,https://github.com/sympy/sympy/pull/25287,closed,126,3,3,5,6,9,2,0,"[{'name': 'GSoC'}, {'name': 'physics.control'}]",2023-06-24 03:52:36+00:00,2023-06-28 13:30:56+00:00,380300.0,"4 days, 9:38:20","[{'comment_id': 1240625603, 'comment_body': 'This should probably work with any sequence or iterable of sympifiable elements.', 'comment_created': datetime.datetime(2023, 6, 24, 7, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1240625633, 'comment_body': '```suggestion\r\n        >>> tf = TransferFunction.from_coeff_lists(num, den, s)\r\n```', 'comment_created': datetime.datetime(2023, 6, 24, 7, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1240625853, 'comment_body': ""Can't this be any symbol or expression?"", 'comment_created': datetime.datetime(2023, 6, 24, 7, 27, 20, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1240625880, 'comment_body': 'Same here, probably should accept any iterable sequence.', 'comment_created': datetime.datetime(2023, 6, 24, 7, 27, 35, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1240673837, 'comment_body': 'Oh, I see what you mean. I have changed it to be inclusive.', 'comment_created': datetime.datetime(2023, 6, 24, 9, 59, 26, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1240695417, 'comment_body': ""Okay, we don't need to enforce list here. I have removed the `isinstance` check. Yet, I have made the documentation have all examples with lists only just so that it is consistent for viewers."", 'comment_created': datetime.datetime(2023, 6, 24, 10, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1240695666, 'comment_body': 'Done. You can have a look now !', 'comment_created': datetime.datetime(2023, 6, 24, 10, 32, 39, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1240709836, 'comment_body': 'I think that it is technically precise to be ‘Sequence’ though.\r\nIterable cannot have len or support getitem\r\n\r\nhttps://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes', 'comment_created': datetime.datetime(2023, 6, 24, 11, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sylee957', 'type': 'User'}, {'comment_id': 1241651749, 'comment_body': ""Yes, you are right. Thanks for the documentation. I'll replace `Iterable `with `Sequence`."", 'comment_created': datetime.datetime(2023, 6, 26, 6, 42, 13, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}]","[{'commit_sha': 'a5c69c9d042668cbbec2ff5e349f9aca5c558909', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c3cc3749410bbb40576f21cb24cc16c538f8021', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e25ed0c6d04cf205c82641c6679fe5b7917763d', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8ed7910062141cc77d0e4a28d6f12f160219d05', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '042ca90f0a1dabef7cba06c235991024a1232f24', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1414236502,[GSOC 1.4.1] Refactor Pole Zero Plot to use Algebraic methods,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->


#### Brief description of what is fixed or changed


#### Other comments


#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->
NO ENTRY
<!-- END RELEASE NOTES -->
",False,25305,https://api.github.com/repos/sympy/sympy/pulls/25305,https://github.com/sympy/sympy/pull/25305,open,49,50,2,4,5,6,3,0,"[{'name': 'GSoC'}, {'name': 'physics.control'}, {'name': 'Merge conflict'}]",2023-06-30 03:56:43+00:00,,0.0,,"[{'comment_id': 1257420223, 'comment_body': ""The issue to the failing tests lies here. I want to use functions from the sympy-plot-backends library.\r\nBut I am not aware how to ensure that it gets installed for the user before (maybe some requirements file in plotting ?). I did `pip install sympy_plot_backends` locally so it's runs well and no tests fail."", 'comment_created': datetime.datetime(2023, 7, 9, 6, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1257492926, 'comment_body': 'Now that I fully understand [your question](https://github.com/Davide-sd/sympy-plot-backends/issues/28), the approach I suggested yesterday is far from optimal because it would also affect all other plotting functions that uses `Line2DRenderer`, which is inconvenient. \r\n\r\nA better way to achieve that is by creating new data series for the axes, and add them to the existing plot, like this:\r\n\r\n```py\r\nfrom spb.series import HVLineSeries\r\nx = [1, -2, 3]\r\ny = [2, 5, -6]\r\np = plot_list(x, y, is_point=True, show=False, grid=False)\r\nhor = HVLineSeries(0, True, show_in_legend=False)\r\nver = HVLineSeries(0, False, show_in_legend=False)\r\np.extend([hor, ver])\r\np.show()\r\n```\r\n\r\nIn doing so, the following code can be removed:\r\n\r\n```py\r\nfrom spb.backends.matplotlib.renderers.line2d import (\r\n   Line2DRenderer, _draw_line2d_helper, _update_line2d_helper\r\n)\r\n```\r\n\r\nas well as the code that uses these functionalities.', 'comment_created': datetime.datetime(2023, 7, 9, 14, 30, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Davide-sd', 'type': 'User'}, {'comment_id': 1257496031, 'comment_body': ""Now, let's address the elephant in the room. Before your GSoC, the plotting function from the control module created a Matplotlib figure and returned Matplotlib's pyplot module (`plt` in the code). It seems like you are changing them to return plot objects created with a plotting module.\r\n\r\nHere is the problem: if I am a SymPy user, I expect these function to returns plot objects created with SymPy's plotting module. Instead, `zero_pole_plot` will return a plot object created with the [Sympy Plotting Backends](https://github.com/Davide-sd/sympy-plot-backends) module, which is not compatible with plot objects created with the `sympy.plotting` module. Hence, if a user attempts to combine two or more plots created with these two module, an error will be raised.\r\n\r\nIf you really want to return plotting objects, you should use SymPy's plotting module, which means to modify `List2DSeries` and `MatplotlibBackend` to create a scatter plot. Alternatively, make it very clear in the documentation that you are using an external plotting module which is not fully compatible with SymPy's one.\r\n"", 'comment_created': datetime.datetime(2023, 7, 9, 14, 50, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Davide-sd', 'type': 'User'}, {'comment_id': 1257496032, 'comment_body': ""Thanks for all assistance. Having primarily used `Matplotlib` for plotting till now, it will take some time to get familiar with `sympy-plot-backends` but I'm sure I'll get there 👍 "", 'comment_created': datetime.datetime(2023, 7, 9, 14, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1257497684, 'comment_body': ""@faze-geek Note that I released a new version of `spb` to address a bug. You should download it.\r\n\r\nBut let me be extremely clear: I don't think you should use `spb` here! Instead, you should modify `sympy.plotting.MatplotlibBackend` and `sympy.plotting.List2DSeries` to achieve your goal."", 'comment_created': datetime.datetime(2023, 7, 9, 14, 59, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Davide-sd', 'type': 'User'}, {'comment_id': 1257499098, 'comment_body': "">Instead, you should modify `sympy.plotting.MatplotlibBackend` and `sympy.plotting.List2DSeries` to achieve your goal.\r\n\r\nOkay, I'll look into this soon."", 'comment_created': datetime.datetime(2023, 7, 9, 15, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}]","[{'commit_sha': '8d34a332934c83aee8dbd4eb1c4af930ef88336b', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9281a7474aac8cda09093e182494a8ccde721dbd', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6280545c90344168ad0d4004a2d61b34cbae69fe', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11040577f255889d094e2a202e3a238016483f29', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1486350297,[GSOC 1.2.1] WIP : Implementation of the Nyquist Plot,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->
Related Issue: 
#25471 

#### Brief description of what is fixed or changed


#### Other comments
Tests will be added once this is ready.

#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->

* physics.control
  * Added the Nyquist plot to the control plots.
 
<!-- END RELEASE NOTES -->
",False,25575,https://api.github.com/repos/sympy/sympy/pulls/25575,https://github.com/sympy/sympy/pull/25575,open,157,7,3,4,4,0,2,0,"[{'name': 'GSoC'}, {'name': 'Merge conflict'}]",2023-08-23 12:34:13+00:00,,0.0,,[],"[{'commit_sha': 'b10cbf1dc688c8c0979e8c888a7ae4ddf49381e6', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47dc98d7bbe598a35fbfbf1d19772012b7db2e67', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a6b8622b6216f8152f5a29befbe9d1854418a02', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4447c386036ca5d683b35be7cbfca231501a5a3', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1422207277,[GSOC 2.1] Handle the division of Transfer Function instances.,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->
Fixes #25308 

#### Brief description of what is fixed or changed
As discussed division should be handled just like multiplication.

#### Other comments


#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->
* physics.control
  * Modified the behavior of division of Transfer Functions.
<!-- END RELEASE NOTES -->
",True,25329,https://api.github.com/repos/sympy/sympy/pulls/25329,https://github.com/sympy/sympy/pull/25329,closed,90,43,2,5,4,3,2,0,"[{'name': 'GSoC'}, {'name': 'physics.control'}]",2023-07-06 04:31:33+00:00,2023-08-15 16:49:37+00:00,3500284.0,"40 days, 12:18:04","[{'comment_id': 1267906870, 'comment_body': 'can you add a test for this? \r\nAlways add new tests for any existing checks you remove. ', 'comment_created': datetime.datetime(2023, 7, 19, 10, 53, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Sc0rpi0n101', 'type': 'User'}, {'comment_id': 1271250735, 'comment_body': 'Added the test back.', 'comment_created': datetime.datetime(2023, 7, 22, 5, 25, 49, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1294667849, 'comment_body': '```suggestion\r\n            return tf_self / tf_other\r\n```', 'comment_created': datetime.datetime(2023, 8, 15, 14, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'smichr', 'type': 'User'}]","[{'commit_sha': '56ee5628366fcc48227a1b0fa7af6a3ed14bdeeb', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e124674f334ee4aaf156a6928ddcd9cc84e2f0f4', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6069690c92ef87ae6effcd0e7e641818edbaa1a', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12a8228f757b1fe2a71dd5127d5ec7dbc78bdb82', 'committer_username': 'smichr', 'committer_name': 'Christopher Smith', 'committer_email': None, 'commit_date': datetime.datetime(2009, 6, 1, 15, 12, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62712946d46a8f40b38ba4f0c8def7e6d0878f3a', 'committer_username': 'smichr', 'committer_name': 'Christopher Smith', 'committer_email': None, 'commit_date': datetime.datetime(2009, 6, 1, 15, 12, 34, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1425095613,[GSOC 2.2] Add method to evaluate system response of Transfer Functions. ,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->
Fixes #25315 

#### Brief description of what is fixed or changed


#### Other comments


#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->
* physics.control
  * Added evalfr method to TransferFunction and TransferFunctionMatrix class.
<!-- END RELEASE NOTES -->
",True,25335,https://api.github.com/repos/sympy/sympy/pulls/25335,https://github.com/sympy/sympy/pull/25335,closed,59,0,2,2,14,1,0,0,[],2023-07-07 18:21:07+00:00,2023-07-19 11:06:55+00:00,1010748.0,"11 days, 16:45:48","[{'comment_id': 1268032533, 'comment_body': 'It does not really seem meaningful to call this a transfer function.', 'comment_created': datetime.datetime(2023, 7, 19, 12, 53, 26, tzinfo=datetime.timezone.utc), 'commenter': 'oscarbenjamin', 'type': 'User'}]","[{'commit_sha': '795e83d5dfab6f05d8196f44a6b67e3d35f9a67d', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ccc98cac580a2f7829ec5b3454fca662d3d230c', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1447701367,[GSOC 2.3] Add System Margins for Transfer Functions,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->


#### Brief description of what is fixed or changed


#### Other comments


#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->
* physics.control
  * Added phase and gain margins for transfer functions.
<!-- END RELEASE NOTES -->
",True,25418,https://api.github.com/repos/sympy/sympy/pulls/25418,https://github.com/sympy/sympy/pull/25418,closed,199,9,3,9,2,0,2,0,"[{'name': 'GSoC'}, {'name': 'physics.control'}]",2023-07-25 04:01:12+00:00,2023-08-15 23:50:21+00:00,1885749.0,"21 days, 19:49:09",[],"[{'commit_sha': 'b98621dc7150789ad8014c42c9a9936183f06d66', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd00e60fe8de0f774bf7d43bf89fee61f121a68b', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25e51f06c2db6defd02f3066bf473de558c2d9dc', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39aec2e52aa607d0079e05f12a524fc6fae9133a', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2afc072494b816c30cf0fbfd66335be4c0a5a798', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6aca9d97fa7b90e1d699253c20e0dafcccc2fc9c', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f040471e8d72adea1330c1738a9033dfe338a89e', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b245fb9e2bc7086c156c8488668a9c6ca0f6203f', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7e1b99eb9cb086381dfe9d156771e2b8f0dad26', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1459680080,[GSOC_2.4] Support phase unwrapping in frequency response,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->
Fixes #25444 

#### Brief description of what is fixed or changed


#### Other comments


#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->
* physics.control
  * Added support for phase unwrap in bode plot
<!-- END RELEASE NOTES -->
",True,25463,https://api.github.com/repos/sympy/sympy/pulls/25463,https://github.com/sympy/sympy/pull/25463,closed,22,5,1,2,2,9,1,0,[{'name': 'GSoC'}],2023-08-02 12:11:40+00:00,2023-08-15 14:22:13+00:00,1131033.0,"13 days, 2:10:33","[{'comment_id': 1282226081, 'comment_body': ""Any reason for not using [Numpy's unwrap](https://numpy.org/doc/stable/reference/generated/numpy.unwrap.html)?"", 'comment_created': datetime.datetime(2023, 8, 2, 17, 35, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Davide-sd', 'type': 'User'}, {'comment_id': 1283494334, 'comment_body': 'Yup, we are aiming to remove all numerical methods from numpy in `control_plots.py`. I consciously did not use `numpy.unwrap()`.', 'comment_created': datetime.datetime(2023, 8, 3, 17, 12, 31, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1283646787, 'comment_body': 'The plotting module uses Numpy, both when `adaptive=True` and `adaptive=False`. Therefore, this line of code is using Numpy:\r\n\r\n```py\r\nx, y = LineOver1DRangeSeries(phase,\r\n        (_w, 10**initial_exp, 10**final_exp), xscale=\'log\', **kwargs).get_points()\r\n```\r\n\r\nIf `adaptive=True`, `x, y` are lists of Python\'s `float`. If `adaptive=False`, `x, y` are Numpy arrays with `dtype=float`. Which means there is no problem in using Numpy\'s `unwrap`.\r\n\r\n> we are aiming to remove all numerical methods from numpy in control_plots.py. \r\n\r\nImho, this statement needs to be carefully weighted on a case by case basis. I can understand that logic for something like `pole_zero_plot`, where [it was proven the superiority](https://github.com/sympy/sympy/issues/25234#issuecomment-1593319448) of SymPy\'s `roots`  vs Numpy\'s `roots`. But if you go down the ""no-numpy"" route, you\'d have to:\r\n\r\n1. remove `LineOver1DRangeSeries`\r\n2. compute symbolic values from symbolic expressions, probably using `subs`\r\n3. then converting them to float for plotting, thus losing any ""accuracy"" advantage of the symbolic values.\r\n\r\nEnding up with a terribly slow control plotting module, probably barely usable even with today\'s hardware. What would be the advantages of this approach?\r\n\r\n@moorepants @Sc0rpi0n101  What are your opinions?', 'comment_created': datetime.datetime(2023, 8, 3, 19, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Davide-sd', 'type': 'User'}, {'comment_id': 1283687256, 'comment_body': 'I don\'t think we are aiming to ""remove all numpy"", as sympy plotting relies on numpy and matplotlib, but any plot methods in the control package should ideally be built on sympy\'s plotting tools. If we aren\'t working with numpy and matplotlib directly in the control package that is the best, but it may mean new things need to be implemented in sympy.plot.', 'comment_created': datetime.datetime(2023, 8, 3, 20, 30, 6, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1283965309, 'comment_body': '> The plotting module uses Numpy, both when `adaptive=True` and `adaptive=False`. Therefore, this line of code is using Numpy:\r\n\r\nI have pointed something similar out in our earlier discussions that functions like `LineOver1DRangeSeries` already use `Numpy` so it is not possible to totally eliminate the dependency. In some cases like roots, `Sympy` gives better precision than `Numpy` so we replace numerical methods with algebraic methods and sacrifice on time.\r\n\r\n> > we are aiming to remove all numerical methods from numpy in control_plots.py.\r\n> \r\n> Imho, this statement needs to be carefully weighted on a case by case basis. \r\n\r\nYes totally agreed. ', 'comment_created': datetime.datetime(2023, 8, 4, 4, 25, 15, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1294253449, 'comment_body': ""```suggestion\r\n        half = None\r\n        if(phase_unit == 'rad'):\r\n            half = pi\r\n        elif(phase_unit == 'deg'):\r\n            half = 180\r\n        if half:\r\n            unit = 2*half\r\n            for i in range(1, len(y)):\r\n                diff = y[i] - y[i - 1]\r\n                if diff > half:      # Jump from -half to half\r\n                    y[i] = (y[i] - unit)\r\n                elif diff < -half:   # Jump from half to -half\r\n                    y[i] = (y[i] + unit)\r\n```"", 'comment_created': datetime.datetime(2023, 8, 15, 6, 53, 54, tzinfo=datetime.timezone.utc), 'commenter': 'smichr', 'type': 'User'}, {'comment_id': 1294255151, 'comment_body': 'Will the result always be continuous after this or is it possible that a portion has jumped by more than one unit?', 'comment_created': datetime.datetime(2023, 8, 15, 6, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'smichr', 'type': 'User'}, {'comment_id': 1294317089, 'comment_body': ""I get what you're trying to refactor. Making a small modification so that we do not unwrap it when user gives `phase_unwrap = false`.\r\n\r\n```\r\n+        half = None\r\n+        if phase_unwrap:\r\n+            if(phase_unit == 'rad'):\r\n+                half = pi\r\n+            elif(phase_unit == 'deg'):\r\n+                half = 180\r\n+        if half:\r\n+            unit = 2*half\r\n+                if diff > half:      # Jump from -half to half\r\n+                    y[i] = (y[i] - unit)\r\n+                elif diff < -half:   # Jump from half to -half\r\n+                    y[i] = (y[i] + unit)\r\n```"", 'comment_created': datetime.datetime(2023, 8, 15, 8, 19, 45, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1294336347, 'comment_body': ""> Will the result always be continuous after this or is it possible that a portion has jumped by more than one unit?\r\n\r\nNo.\r\nI've tried this out with bode plot examples documented in `MATLAB`. If you have any particular Transfer functions in mind, you can share them here. Thanks !\r\n"", 'comment_created': datetime.datetime(2023, 8, 15, 8, 42, 25, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}]","[{'commit_sha': '6dfcbb5e6fa9b82ce45d3f2fee6cbee4b217208f', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '221f48fbd16275e414840c5a6020337697a3fdaa', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1481104124,[GSOC 2.2.2] Update implementation to evaluate system response at given frequency.,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->
Fixes #25315 

#### Brief description of what is fixed or changed


#### Other comments


#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->
* physics.control
  * Added eval_frequency method to TransferFunction and TransferFunctionMatrix class.
<!-- END RELEASE NOTES -->
",True,25555,https://api.github.com/repos/sympy/sympy/pulls/25555,https://github.com/sympy/sympy/pull/25555,closed,63,0,2,3,4,0,1,0,[{'name': 'GSoC'}],2023-08-18 21:26:32+00:00,2023-09-06 11:59:13+00:00,1607561.0,"18 days, 14:32:41",[],"[{'commit_sha': 'c52a7c4dd2bc0fa3644bbafef73ecf73e4d2d471', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '412e5d7ccfe4f4a063e2df4ae0a09f5f92ac5fde', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aef5320b3c2a0da482cc13f8d4c48b7bd043b903', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21
1464902539,[GSOC 3.1] Add StateSpace class for control package,"<!-- Your title above should be a short description of what
was changed. Do not include the issue number in the title. -->

#### References to other Issues or PRs
<!-- If this pull request fixes an issue, write ""Fixes #NNNN"" in that exact
format, e.g. ""Fixes #1234"" (see
https://tinyurl.com/auto-closing for more information). Also, please
write a comment on that issue linking back to this pull request once it is
open. -->


#### Brief description of what is fixed or changed

#### Other comments


#### Release Notes

<!-- Write the release notes for this release below between the BEGIN and END
statements. The basic format is a bulleted list with the name of the subpackage
and the release note for this PR. For example:

* solvers
  * Added a new solver for logarithmic equations.

* functions
  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.

* physics.units
  * Corrected a semantical error in the conversion between volt and statvolt which
    reported the volt as being larger than the statvolt.

or if no release note(s) should be included use:

NO ENTRY

See https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more
information on how to write release notes. The bot will check your release
notes automatically to see if they are formatted correctly. -->

<!-- BEGIN RELEASE NOTES -->
* physics.control
  * Added the state space model 
<!-- END RELEASE NOTES -->
",True,25473,https://api.github.com/repos/sympy/sympy/pulls/25473,https://github.com/sympy/sympy/pull/25473,closed,1190,12,6,30,11,17,1,0,[{'name': 'GSoC'}],2023-08-07 09:39:31+00:00,2023-09-22 20:01:44+00:00,4011733.0,"46 days, 10:22:13","[{'comment_id': 1287717105, 'comment_body': 'I think that we should name everything with snake case or at least better not name with something outside of PEP-8 convention (https://peps.python.org/pep-0008/#method-names-and-instance-variables), because it can surprise the users.', 'comment_created': datetime.datetime(2023, 8, 8, 21, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sylee957', 'type': 'User'}, {'comment_id': 1287718325, 'comment_body': ""You shouldn't set the properties of the objects.\r\nThis can be derived from `self.args`"", 'comment_created': datetime.datetime(2023, 8, 8, 21, 45, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sylee957', 'type': 'User'}, {'comment_id': 1287965671, 'comment_body': 'Thanks for pointing this out.', 'comment_created': datetime.datetime(2023, 8, 9, 5, 28, 52, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1287973042, 'comment_body': ""Yes, It can be derived from `self.args` but doing it explicitly is followed in `lti.py`.I don't see any issues with that.\r\nFor example the `TransferFunction` class - \r\nhttps://github.com/sympy/sympy/blob/68f7e71c5c22948c1423589ba179c5080a596768/sympy/physics/control/lti.py#L462-L465\r\n"", 'comment_created': datetime.datetime(2023, 8, 9, 5, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1287974193, 'comment_body': 'I think that we need to refactor change to TransferFunction to follow that design as well.', 'comment_created': datetime.datetime(2023, 8, 9, 5, 41, 59, tzinfo=datetime.timezone.utc), 'commenter': 'sylee957', 'type': 'User'}, {'comment_id': 1287985627, 'comment_body': 'A state space formulation would represent a matrix of transfer functions mapping each input to each output. So why does this return a single transfer function?', 'comment_created': datetime.datetime(2023, 8, 9, 5, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1287987441, 'comment_body': 'missing feed forward matrix', 'comment_created': datetime.datetime(2023, 8, 9, 6, 1, 16, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1288008738, 'comment_body': 'Yes you are right, this returned a matrix of transfer functions till I returned `G[0] `as the output. The example is docstring is correct as the D matrix has shape (1 x 1) meaning 1 input and corresponding 1 output. \n\n', 'comment_created': datetime.datetime(2023, 8, 9, 6, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1288037955, 'comment_body': ""Your code doesn't look like it would work for the general case then."", 'comment_created': datetime.datetime(2023, 8, 9, 7, 2, 20, tzinfo=datetime.timezone.utc), 'commenter': 'moorepants', 'type': 'User'}, {'comment_id': 1289026653, 'comment_body': 'Modified the code for the general case. Now in returned list, the Transfer Functions at `ith` column represent the ` i+1 th` input.', 'comment_created': datetime.datetime(2023, 8, 9, 18, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1326265469, 'comment_body': 'To address this as discussed in our latest meeting, I would stick to setting the variables explicitly only. \r\nI found multiple comments in previous PRs related to the control module. Here is one of them asking to change the initial implementation with args  - https://github.com/sympy/sympy/pull/18436#discussion_r426194974 .I remember taking it into consideration when I designed the class. All the classes in `lti.py` are consistent with this. ', 'comment_created': datetime.datetime(2023, 9, 14, 16, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1326286494, 'comment_body': ""Hi @smichr. Trying to figure out the failing tests since some time (locally on branch everything passes, but they recently started failing on github). Could this be related to the recent work you've done with floats https://github.com/sympy/sympy/pull/25614 ? I will appreciate if you have a look at the failing checks. Thanks in advance ."", 'comment_created': datetime.datetime(2023, 9, 14, 17, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1326742944, 'comment_body': ""The output shows that the failing test of 1620 (have line numbers changed since test was run?) has a bare `s` term on the rhs instead of `1.0*s`. I can't tell what's wrong with 1591 -- I can't interpret the error dump. I would have to see the left and rhs of the failing assertion."", 'comment_created': datetime.datetime(2023, 9, 15, 3, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'smichr', 'type': 'User'}, {'comment_id': 1327038807, 'comment_body': ""> The output shows that the failing test of 1620 (have line numbers changed since test was run?) has a bare `s` term on the rhs instead of `1.0*s`. \r\n\r\nNoted. Thanks again.\r\n\r\n> I can't tell what's wrong with 1591 -- I can't interpret the error dump. I would have to see the left and rhs of the failing assertion.\r\n\r\nThese lines should give you an idea about the rhs . Surely has something to do with floats.\r\n```\r\n    p1 = a1*s + a0\r\n    p2 = b2*s**2 + b1*s + b0\r\n    G = StateSpace(Matrix([p1]), Matrix([p2]))\r\n    expect = StateSpace(Matrix([[2*s + 1]]), Matrix([[5*s**2 + 4*s + 3]]), Matrix([[0]]), Matrix([[0]]))\r\n    expect_ = StateSpace(Matrix([[2.0*s + 1.0]]), Matrix([[5.0*s**2 + 4.0*s + 3.0]]), Matrix([[0]]), Matrix([[0]]))\r\n    assert G.subs({a0: 1, a1: 2, b0: 3, b1: 4, b2: 5}) == expect\r\n    assert G.subs({a0: 1, a1: 2, b0: 3, b1: 4, b2: 5}).evalf() == expect_\r\n```\r\n\r\n"", 'comment_created': datetime.datetime(2023, 9, 15, 9, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1327319105, 'comment_body': ""They give me an idea but no specifics since I can't run these lines. If you print the left and the right I might be able to see something."", 'comment_created': datetime.datetime(2023, 9, 15, 13, 51, 11, tzinfo=datetime.timezone.utc), 'commenter': 'smichr', 'type': 'User'}, {'comment_id': 1327498223, 'comment_body': ""Sure. I'll print them and paste output here -\r\n```\r\n>>> G.subs({a0: 1, a1: 2, b0: 3, b1: 4, b2: 5}).evalf() == expect_\r\nFalse\r\n>>> print(G.subs({a0: 1, a1: 2, b0: 3, b1: 4, b2: 5}).evalf())\r\nStateSpace(Matrix([[2.0*s + 1.0]]), Matrix([[5.0*s**2 + 4.0*s + 3.0]]), Matrix([[0]]), Matrix([[0]]))\r\n>>> print(expect_)\r\nStateSpace(Matrix([[2.0*s + 1.0]]), Matrix([[5.0*s**2 + 4.0*s + 3.0]]), Matrix([[0]]), Matrix([[0]]))\r\n```"", 'comment_created': datetime.datetime(2023, 9, 15, 15, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}, {'comment_id': 1327500990, 'comment_body': 'There are methods to compare like :\r\n```\r\n>>> str(G.subs({a0: 1, a1: 2, b0: 3, b1: 4, b2: 5}).evalf()) == str(expect_)\r\nTrue\r\n```\r\nBut I want to understand the root cause here as earlier it used to give `true`.', 'comment_created': datetime.datetime(2023, 9, 15, 15, 57, 9, tzinfo=datetime.timezone.utc), 'commenter': 'faze-geek', 'type': 'User'}]","[{'commit_sha': 'aeef85f5e60b4020ca2417eedf432e2a13fd4229', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83f1e429b6978aa8c5017c9e6bfcbee6e8267865', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acdc3c114dc94e25d4acb493f52f16a865cbb395', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd33a3fa84fc8878c060bb242806217a58bdc6aed', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdcefc126b743e7383fed0172577cb702f0d08db', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ffd8f7f42c761d6315035cac5933b93dcaad378', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '662af37ebb77d0f1f08ffc0a63909b775a43cace', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27fb5fccebc295dd3064e1dbf613fdad61deb874', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7421d6f8da920e8ce825627e86eebd23c51a7ff9', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad37b9f338082f49ee1412dbccbbac9b1ea5aa69', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19966b1c18ec7b08d8ca96705e7ec0f0fc9844f7', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '607144d36a98d4cac07b22a7bfb92a83b46cd6e1', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c536118e69eff4ef1c1edf08a85116dc063e886', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76452db3e3d703f7c4c93f154ad736928649081c', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd30da5c713850a1f0d13fedeafa6a506b976ee5d', 'committer_username': 'anutosh491', 'committer_name': 'Anutosh Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 7, 3, 0, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bbd473008a18af9eecc3978b59b9c0fd194fb80', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50ae9d099345fbea724d9a64c5c33b9705cdf1d5', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7a080185bd399b4751c6ab0311ebbcb0e2a8cc0', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4932f8ca119d0c2832362d6cb662cc7d479c476f', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d08fd79735d772ccd89cf461c6813d209624dd', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '842b049e9e21ece7c8834f4bb9c5901c8a8a9a7a', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2e0cfe35ec80c57ca2b9810e88c9a6519f7b18a', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ade142e8d0c4de698387e3e04589e26db678ad2', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f96bd6939e1a8ef687c5a2807a691363dc118c2', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b72d19aa78dce2526e4bb568e5b1f17db44fc8d1', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f1647f8858402707966d51ed05a841d60b96866', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2ffae79bdc7b3f2734fdf1bea14e6985bc429b0', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3626bdeada51a8aaba693a66ab9ca7e43d2b39b', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc19eea4a0cae426abde3ea7145b01bbf93a7bd0', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96f6f1c66e120496cec130f150b53debc44c9185', 'committer_username': 'faze-geek', 'committer_name': 'Anurag Bhat', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 6, 19, 21, 11, tzinfo=datetime.timezone.utc)}]",Anurag Bhat,90216905,,User,,24,,12,21

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
640534,sympy,sympy/sympy,Python,4367,12712,293,1320,58687,5125,14,718,"[{'id': 1750328515, 'number': 26291, 'closed': datetime.datetime(2024, 2, 29, 19, 30, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 29, 18, 44, 29, tzinfo=datetime.timezone.utc), 'time_taken': 2769.0, 'time_delta': '0:46:09', 'additions': 2, 'deletions': 102, 'state': 'closed'}, {'id': 1486350297, 'number': 25575, 'closed': None, 'created': datetime.datetime(2023, 8, 23, 12, 34, 13, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 157, 'deletions': 7, 'state': 'open'}, {'id': 1481104124, 'number': 25555, 'closed': datetime.datetime(2023, 9, 6, 11, 59, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 18, 21, 26, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1607561.0, 'time_delta': '18 days, 14:32:41', 'additions': 63, 'deletions': 0, 'state': 'closed'}, {'id': 1464902539, 'number': 25473, 'closed': datetime.datetime(2023, 9, 22, 20, 1, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 9, 39, 31, tzinfo=datetime.timezone.utc), 'time_taken': 4011733.0, 'time_delta': '46 days, 10:22:13', 'additions': 1190, 'deletions': 12, 'state': 'closed'}, {'id': 1459680080, 'number': 25463, 'closed': datetime.datetime(2023, 8, 15, 14, 22, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 2, 12, 11, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1131033.0, 'time_delta': '13 days, 2:10:33', 'additions': 22, 'deletions': 5, 'state': 'closed'}, {'id': 1447701367, 'number': 25418, 'closed': datetime.datetime(2023, 8, 15, 23, 50, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 4, 1, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1885749.0, 'time_delta': '21 days, 19:49:09', 'additions': 199, 'deletions': 9, 'state': 'closed'}, {'id': 1425095613, 'number': 25335, 'closed': datetime.datetime(2023, 7, 19, 11, 6, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 7, 18, 21, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1010748.0, 'time_delta': '11 days, 16:45:48', 'additions': 59, 'deletions': 0, 'state': 'closed'}, {'id': 1422207277, 'number': 25329, 'closed': datetime.datetime(2023, 8, 15, 16, 49, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 4, 31, 33, tzinfo=datetime.timezone.utc), 'time_taken': 3500284.0, 'time_delta': '40 days, 12:18:04', 'additions': 90, 'deletions': 43, 'state': 'closed'}, {'id': 1414236502, 'number': 25305, 'closed': None, 'created': datetime.datetime(2023, 6, 30, 3, 56, 43, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 49, 'deletions': 50, 'state': 'open'}, {'id': 1405929375, 'number': 25287, 'closed': datetime.datetime(2023, 6, 28, 13, 30, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 3, 52, 36, tzinfo=datetime.timezone.utc), 'time_taken': 380300.0, 'time_delta': '4 days, 9:38:20', 'additions': 126, 'deletions': 3, 'state': 'closed'}, {'id': 1396631989, 'number': 25251, 'closed': None, 'created': datetime.datetime(2023, 6, 17, 5, 43, 2, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 355, 'deletions': 3, 'state': 'open'}, {'id': 1386990074, 'number': 25227, 'closed': datetime.datetime(2023, 6, 18, 13, 37, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 10, 3, 56, 1, tzinfo=datetime.timezone.utc), 'time_taken': 726097.0, 'time_delta': '8 days, 9:41:37', 'additions': 861, 'deletions': 0, 'state': 'closed'}, {'id': 1359609888, 'number': 25161, 'closed': datetime.datetime(2023, 5, 23, 4, 18, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 22, 17, 11, 23, tzinfo=datetime.timezone.utc), 'time_taken': 40022.0, 'time_delta': '11:07:02', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 1352345778, 'number': 25147, 'closed': datetime.datetime(2023, 5, 16, 12, 49, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 16, 11, 37, 2, tzinfo=datetime.timezone.utc), 'time_taken': 4328.0, 'time_delta': '1:12:08', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1350159013, 'number': 25143, 'closed': datetime.datetime(2023, 5, 15, 7, 58, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 15, 6, 2, 12, tzinfo=datetime.timezone.utc), 'time_taken': 6961.0, 'time_delta': '1:56:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1200627658, 'number': 24540, 'closed': datetime.datetime(2023, 11, 28, 17, 7, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 17, 17, 39, 17, tzinfo=datetime.timezone.utc), 'time_taken': 27214106.0, 'time_delta': '314 days, 23:28:26', 'additions': 31, 'deletions': 2, 'state': 'closed'}, {'id': 1181790434, 'number': 24458, 'closed': datetime.datetime(2023, 1, 5, 13, 57, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 1, 11, 23, 9, tzinfo=datetime.timezone.utc), 'time_taken': 354874.0, 'time_delta': '4 days, 2:34:34', 'additions': 12, 'deletions': 14, 'state': 'closed'}, {'id': 992401271, 'number': 23753, 'closed': datetime.datetime(2022, 7, 12, 10, 40, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 10, 11, 9, 8, tzinfo=datetime.timezone.utc), 'time_taken': 171067.0, 'time_delta': '1 day, 23:31:07', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 935744578, 'number': 23493, 'closed': datetime.datetime(2022, 5, 18, 12, 47, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 13, 10, 11, 35, tzinfo=datetime.timezone.utc), 'time_taken': 441333.0, 'time_delta': '5 days, 2:35:33', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 891011435, 'number': 23296, 'closed': datetime.datetime(2022, 3, 31, 9, 55, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 27, 11, 50, 19, tzinfo=datetime.timezone.utc), 'time_taken': 338721.0, 'time_delta': '3 days, 22:05:21', 'additions': 14, 'deletions': 1, 'state': 'closed'}, {'id': 869801500, 'number': 23199, 'closed': datetime.datetime(2022, 3, 3, 14, 56, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 2, 17, 28, 48, tzinfo=datetime.timezone.utc), 'time_taken': 77288.0, 'time_delta': '21:28:08', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 859736945, 'number': 23141, 'closed': datetime.datetime(2022, 3, 25, 15, 16, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 21, 18, 16, 17, tzinfo=datetime.timezone.utc), 'time_taken': 2754000.0, 'time_delta': '31 days, 21:00:00', 'additions': 60, 'deletions': 21, 'state': 'closed'}, {'id': 851904727, 'number': 23074, 'closed': datetime.datetime(2022, 2, 19, 16, 1, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 14, 11, 9, 21, tzinfo=datetime.timezone.utc), 'time_taken': 449551.0, 'time_delta': '5 days, 4:52:31', 'additions': 68, 'deletions': 21, 'state': 'closed'}, {'id': 849218135, 'number': 23068, 'closed': datetime.datetime(2023, 3, 11, 11, 52, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 12, 17, 4, 26, tzinfo=datetime.timezone.utc), 'time_taken': 33850089.0, 'time_delta': '391 days, 18:48:09', 'additions': 111, 'deletions': 1, 'state': 'closed'}, {'id': 841331329, 'number': 23033, 'closed': datetime.datetime(2022, 2, 10, 5, 42, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 7, 5, 24, 25, tzinfo=datetime.timezone.utc), 'time_taken': 260271.0, 'time_delta': '3 days, 0:17:51', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 838510984, 'number': 22999, 'closed': datetime.datetime(2022, 3, 2, 14, 51, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 2, 16, 53, 36, tzinfo=datetime.timezone.utc), 'time_taken': 2411871.0, 'time_delta': '27 days, 21:57:51', 'additions': 17, 'deletions': 1, 'state': 'closed'}, {'id': 835760809, 'number': 22969, 'closed': datetime.datetime(2022, 3, 19, 13, 55, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 31, 5, 35, 2, tzinfo=datetime.timezone.utc), 'time_taken': 4090831.0, 'time_delta': '47 days, 8:20:31', 'additions': 31, 'deletions': 19, 'state': 'closed'}, {'id': 832049077, 'number': 22927, 'closed': datetime.datetime(2022, 1, 26, 4, 27, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 26, 3, 5, 13, tzinfo=datetime.timezone.utc), 'time_taken': 4928.0, 'time_delta': '1:22:08', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 827189895, 'number': 22889, 'closed': None, 'created': datetime.datetime(2022, 1, 20, 6, 6, 40, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 18, 'deletions': 1, 'state': 'open'}, {'id': 824127876, 'number': 22869, 'closed': None, 'created': datetime.datetime(2022, 1, 17, 3, 21, 34, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 166, 'deletions': 5, 'state': 'open'}, {'id': 817076268, 'number': 22827, 'closed': datetime.datetime(2022, 3, 17, 21, 30, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 9, 17, 20, 11, tzinfo=datetime.timezone.utc), 'time_taken': 5803831.0, 'time_delta': '67 days, 4:10:31', 'additions': 57, 'deletions': 22, 'state': 'closed'}, {'id': 815686604, 'number': 22809, 'closed': None, 'created': datetime.datetime(2022, 1, 6, 17, 8, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 39, 'deletions': 14, 'state': 'open'}, {'id': 813909615, 'number': 22790, 'closed': None, 'created': datetime.datetime(2022, 1, 4, 14, 32, 52, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 68, 'deletions': 0, 'state': 'open'}, {'id': 812288746, 'number': 22770, 'closed': datetime.datetime(2022, 2, 10, 5, 42, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 31, 8, 26, tzinfo=datetime.timezone.utc), 'time_taken': 3532585.0, 'time_delta': '40 days, 21:16:25', 'additions': 12, 'deletions': 12, 'state': 'closed'}, {'id': 809203906, 'number': 22746, 'closed': None, 'created': datetime.datetime(2021, 12, 23, 14, 26, 55, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 326, 'deletions': 333, 'state': 'open'}, {'id': 806051956, 'number': 22712, 'closed': datetime.datetime(2023, 1, 5, 13, 56, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 19, 12, 22, 13, tzinfo=datetime.timezone.utc), 'time_taken': 33010478.0, 'time_delta': '382 days, 1:34:38', 'additions': 14, 'deletions': 14, 'state': 'closed'}, {'id': 804701797, 'number': 22688, 'closed': None, 'created': datetime.datetime(2021, 12, 16, 17, 53, 59, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 3, 'deletions': 0, 'state': 'open'}, {'id': 804681768, 'number': 22687, 'closed': datetime.datetime(2021, 12, 16, 17, 30, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 16, 17, 26, 31, tzinfo=datetime.timezone.utc), 'time_taken': 227.0, 'time_delta': '0:03:47', 'additions': 3, 'deletions': 99, 'state': 'closed'}, {'id': 804182959, 'number': 22681, 'closed': datetime.datetime(2021, 12, 20, 19, 39, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 16, 8, 10, 19, tzinfo=datetime.timezone.utc), 'time_taken': 386934.0, 'time_delta': '4 days, 11:28:54', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 802012628, 'number': 22670, 'closed': datetime.datetime(2021, 12, 15, 2, 24, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 14, 6, 52, 26, tzinfo=datetime.timezone.utc), 'time_taken': 70315.0, 'time_delta': '19:31:55', 'additions': 12, 'deletions': 2, 'state': 'closed'}, {'id': 800387556, 'number': 22647, 'closed': datetime.datetime(2021, 12, 15, 2, 24, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 11, 6, 27, 40, tzinfo=datetime.timezone.utc), 'time_taken': 331009.0, 'time_delta': '3 days, 19:56:49', 'additions': 12, 'deletions': 3, 'state': 'closed'}, {'id': 800023668, 'number': 22640, 'closed': datetime.datetime(2021, 12, 15, 2, 24, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 10, 15, 35, 22, tzinfo=datetime.timezone.utc), 'time_taken': 384547.0, 'time_delta': '4 days, 10:49:07', 'additions': 7, 'deletions': 0, 'state': 'closed'}]"
