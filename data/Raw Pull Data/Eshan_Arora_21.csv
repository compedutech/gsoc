pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
668535996,storage benchmark tests for cache read/write,"## ðŸš€ ðŸš€ Pull Request

### Checklist:

- [x]  [My code follows the style guidelines of this project](https://www.notion.so/activeloop/Engineering-Guidelines-d6e502306d0e4133a8ca507516d1baab) and the [Contributing document](https://github.com/activeloopai/Hub/blob/release/2.0/CONTRIBUTING.md)
- [x]  I have commented my code, particularly in hard-to-understand areas
- [x]  I have kept the `coverage-rate` up
- [x]  I have performed a self-review of my own code and resolved any problems
- [x]  I have checked to ensure there aren't any other open [Pull Requests](https://github.com/activeloopai/Hub/pulls) for the same change
- [x]  I have described and made corresponding changes to the relevant documentation
- [x]  New and existing unit tests pass locally with my changes


### Changes

<!-- Describe your changes! Describe the scope of this PR's responsibilities. -->
Segregate storage benchmark tests for cache read/write",True,941,https://api.github.com/repos/activeloopai/deeplake/pulls/941,https://github.com/activeloopai/deeplake/pull/941,closed,6,7,1,4,2,2,2,0,"[{'name': 'v2'}, {'name': 'cla:signed'}]",2021-06-11 20:30:25+00:00,2021-06-16 06:32:05+00:00,381700.0,"4 days, 10:01:40","[{'comment_id': 650651583, 'comment_body': 'please do not use 1 GB of data here (128 * MB is sufficient)', 'comment_created': datetime.datetime(2021, 6, 14, 5, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 650651744, 'comment_body': 'this is probably why the tests are failing (they are timing out, presumably due to this taking a long time)', 'comment_created': datetime.datetime(2021, 6, 14, 5, 9, 10, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}]","[{'commit_sha': '69f187024c89868c2580fc707dcf8dbdebe7a4d0', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ab0155c3a816d659de02a0633568de5406e12d9', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '109a15fe61e54571a2293bd5ede3c6cc54c1b3d5', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6e45c6a5c986765fd6e001f2852b400ce7b70a3', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
694536385,Integrate hub auto + kaggle,"## ðŸš€ ðŸš€ Pull Request

### Checklist:

- [x]  [My code follows the style guidelines of this project](https://www.notion.so/activeloop/Engineering-Guidelines-d6e502306d0e4133a8ca507516d1baab) and the [Contributing document](https://github.com/activeloopai/Hub/blob/release/2.0/CONTRIBUTING.md)
- [x]  I have commented my code, particularly in hard-to-understand areas
- [x]  I have kept the `coverage-rate` up
- [x]  I have performed a self-review of my own code and resolved any problems
- [x]  I have checked to ensure there aren't any other open [Pull Requests](https://github.com/activeloopai/Hub/pulls) for the same change
- [x]  I have described and made corresponding changes to the relevant documentation
- [x]  New and existing unit tests pass locally with my changes


### Changes

<!-- Describe your changes! Describe the scope of this PR's responsibilities. -->
add hub.auto funcitonality under hub/auto/unstructured using Image_classification
add tests for image_classification
add tests for kaggle
add dummy_data under hub/tests/dummy_data",True,1075,https://api.github.com/repos/activeloopai/deeplake/pulls/1075,https://github.com/activeloopai/deeplake/pull/1075,closed,643,9,25,72,1,47,1,1,[{'name': 'cla:signed'}],2021-07-21 16:43:50+00:00,2021-08-04 17:22:33+00:00,1211923.0,"14 days, 0:38:43","[{'comment_id': 674161102, 'comment_body': 'TODO: add docstring (i will do this)', 'comment_created': datetime.datetime(2021, 7, 21, 16, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 674161529, 'comment_body': 'TODO: docstring', 'comment_created': datetime.datetime(2021, 7, 21, 16, 47, 23, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 674181698, 'comment_body': 'TODO docstring', 'comment_created': datetime.datetime(2021, 7, 21, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 675180029, 'comment_body': 'test this with a raises block https://docs.pytest.org/en/6.2.x/reference.html#pytest.raises', 'comment_created': datetime.datetime(2021, 7, 22, 21, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 675180426, 'comment_body': '```suggestion\r\n        """"""Convert an unstructured dataset to a structured dataset.\r\n        \r\n        Args:\r\n            source (str): The full path to the dataset.\r\n```\r\n\r\nmake sure you add an empty line above all sections in docstrings. otherwise, our darglint doesn\'t properly register them.', 'comment_created': datetime.datetime(2021, 7, 22, 21, 39, 52, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 675181025, 'comment_body': 'write a test case for this exception (with the raises syntax)', 'comment_created': datetime.datetime(2021, 7, 22, 21, 41, 3, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 675181082, 'comment_body': 'write a test case for this one too', 'comment_created': datetime.datetime(2021, 7, 22, 21, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 675503015, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 23, 11, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 675503037, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 23, 11, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 675683076, 'comment_body': 'ingestion only supports local. you should say ""Path to a local folder containing an unstructured dataset.""', 'comment_created': datetime.datetime(2021, 7, 23, 16, 16, 14, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 675908839, 'comment_body': 'this is image classification, please mention this is the only case that works (not just an unstructured dataset)', 'comment_created': datetime.datetime(2021, 7, 23, 23, 26, 16, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 676858853, 'comment_body': '```suggestion\r\n        Note:\r\n            Currently only local source paths and image classification datasets are supported for automatic ingestion.\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 18, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 676859260, 'comment_body': '```suggestion\r\n        # TODO: support more than just image classification (and update docstring)\r\n        unstructured = ImageClassification(source=src)\r\n\r\n        # TODO: auto detect compression\r\n        unstructured.structure(\r\n            ds, image_tensor_args={""sample_compression"": compression}\r\n        )\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 18, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 676859515, 'comment_body': '```suggestion\r\n        Note:\r\n            Currently only local source paths and image classification datasets are supported for automatic ingestion.\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 18, 50, 59, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 676859991, 'comment_body': 'you should not re-implement code when it exists in another function. instead, just call `hub.ingest(...)` after downloading the kaggle dataset', 'comment_created': datetime.datetime(2021, 7, 26, 18, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 676860525, 'comment_body': 'you should remove this for now (if possible)', 'comment_created': datetime.datetime(2021, 7, 26, 18, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 676861496, 'comment_body': 'could you redo this docstring? it basically just needs to be refactored and updated.\r\n\r\nalso, can you remove the commented out code? \r\n\r\nyou can remove the ""test"" TODO, it is already covered in your tests :-P', 'comment_created': datetime.datetime(2021, 7, 26, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 676862157, 'comment_body': 'dude these tests are gorgeous, nice job. the API also looks nice!', 'comment_created': datetime.datetime(2021, 7, 26, 18, 54, 59, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 676995316, 'comment_body': '```suggestion\r\n        str: Root path of the unstructured dataset.\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 22, 50, 54, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 677326054, 'comment_body': 'I would prefer to have path as the first argument for the sake of uniformity', 'comment_created': datetime.datetime(2021, 7, 27, 10, 34, 59, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 677326597, 'comment_body': '`if os.path.isdir(src)` seems redundant after the above exception', 'comment_created': datetime.datetime(2021, 7, 27, 10, 35, 52, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 677328459, 'comment_body': ""why aren't we checking the src path here similar to the first line in ingest?"", 'comment_created': datetime.datetime(2021, 7, 27, 10, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 677328942, 'comment_body': 'we also need destination creds. ideally all the arguments from dataset creation methods should be present in the ingest methods', 'comment_created': datetime.datetime(2021, 7, 27, 10, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 677383202, 'comment_body': 'avoid default mutable args', 'comment_created': datetime.datetime(2021, 7, 27, 12, 4, 1, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 677387004, 'comment_body': 'Can we do better than unknown? What are the cases when this could fail?', 'comment_created': datetime.datetime(2021, 7, 27, 12, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 677410053, 'comment_body': '`if not username` check should be done prior to setting the env var, as env vars can only be strings, not None.', 'comment_created': datetime.datetime(2021, 7, 27, 12, 41, 26, tzinfo=datetime.timezone.utc), 'commenter': 'farizrahman4u', 'type': 'User'}, {'comment_id': 677410560, 'comment_body': 'Unreachable code, this check should be prior to setting `os.environ`', 'comment_created': datetime.datetime(2021, 7, 27, 12, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'farizrahman4u', 'type': 'User'}, {'comment_id': 677410970, 'comment_body': '`if not  key` check should be done prior to setting the env var, as env vars can only be strings, not None.', 'comment_created': datetime.datetime(2021, 7, 27, 12, 42, 37, tzinfo=datetime.timezone.utc), 'commenter': 'farizrahman4u', 'type': 'User'}, {'comment_id': 677430022, 'comment_body': '`path` sounds good for uniformity but here it points to an unstructured dataset [not a Hub dataset like the rest] so I went for a different name', 'comment_created': datetime.datetime(2021, 7, 27, 13, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 677435537, 'comment_body': 'if the `src` path is an invalid directory, `ingest_kaggle` creates a directory with that name hence a check there is unnecessary.', 'comment_created': datetime.datetime(2021, 7, 27, 13, 12, 32, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 677518749, 'comment_body': 'yes, I am working on that, some cases for failure is `NotImplementedError` which includes ingesting non-image files.', 'comment_created': datetime.datetime(2021, 7, 27, 14, 41, 25, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 677519557, 'comment_body': 'there is a docstring in this file that explains everything, can I resolve this comment?', 'comment_created': datetime.datetime(2021, 7, 27, 14, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 677651805, 'comment_body': ""actually, we only need destination creds, right? source can only be a local path and that doesn't require creds"", 'comment_created': datetime.datetime(2021, 7, 27, 17, 20, 50, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 677660177, 'comment_body': '```suggestion\r\n        ds = hub.ingest(\r\n            src=src, dest=dest, dest_creds=dest_creds, compression=compression, overwrite=overwrite\r\n        )\r\n\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 17, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 677660995, 'comment_body': 'this method calls hub.ingest', 'comment_created': datetime.datetime(2021, 7, 27, 17, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 677661962, 'comment_body': '```suggestion\r\n        src: str, dest: str, dest_creds: dict, compression: str, overwrite: bool = False\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 17, 35, 24, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 677662259, 'comment_body': '```suggestion\r\n        ds = hub.dataset(dest, creds=dest_creds)\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 17, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 677752056, 'comment_body': '```\r\nexcept Exception as e:\r\n\r\n      warnings.warn(\r\n          f""[Skipping] Could not upload sample \'{file_path}\'. Reason: {e}""\r\n      )\r\n      continue\r\n```\r\n                    \r\nThis will print the exception for the time being when encountering non image file type and continue ingesting the remaining files.', 'comment_created': datetime.datetime(2021, 7, 27, 19, 49, 49, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 677762602, 'comment_body': ""We need both src_creds and dest_creds as optional arguments, don't we?\r\n"", 'comment_created': datetime.datetime(2021, 7, 27, 20, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'istranic', 'type': 'User'}, {'comment_id': 677762889, 'comment_body': 'store -> store**s**', 'comment_created': datetime.datetime(2021, 7, 27, 20, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'istranic', 'type': 'User'}, {'comment_id': 677764212, 'comment_body': ""Ingestion works only for local source path so i don't think we need `src_creds` for ingestion"", 'comment_created': datetime.datetime(2021, 7, 27, 20, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 677764315, 'comment_body': ""We should be more explicit about the assumed underlying data structure in the source. Does it need to have a 1-folder per class structure. What if there are extra folders with random info? What if there are extra files with metadata? What if all the files are in 1 folder and there's another file that maps filenames to classes?\r\n\r\nThe envelope of what works and what doesn't should be more clear."", 'comment_created': datetime.datetime(2021, 7, 27, 20, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'istranic', 'type': 'User'}, {'comment_id': 677765095, 'comment_body': 'Nvm, this is for local-only right?\r\n', 'comment_created': datetime.datetime(2021, 7, 27, 20, 10, 43, tzinfo=datetime.timezone.utc), 'commenter': 'istranic', 'type': 'User'}, {'comment_id': 677770345, 'comment_body': 'Yes the source is path is local-only, hence no credentials needed', 'comment_created': datetime.datetime(2021, 7, 27, 20, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 678454482, 'comment_body': 'All extra folders with random Information are ignored. However, if there are folders with image data, they are added to the dataset. If there are 2 folders \'train\' and \'test\', Ingest() will allow access to those folders as such [""train/images"", ""train/labels"", ""test/images"", ""test/labels""] in the dataset `ds`\r\n\r\nAll extra files apart from PNG/PEG/JPG  are ignored, filetypes like .txt, .pdf, .csv,  .npy, LICENSE, etc. are not ingested. The function leaves a warning that displays the files that are not ingested.\r\n\r\nSince it only works with ingesting image data directly, a file that maps filenames to classes has not been implemented yet but support for that is imminent. I have been running the current implementation of hub.auto (`ingest` and `ingest_kaggle`) through datasets and we (@mccrearyd) are working to resolve several edge cases. This PR holds a working version of Hub auto that works on majority of the datasets. Next update would support auto detection of compression type.', 'comment_created': datetime.datetime(2021, 7, 28, 16, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 678581159, 'comment_body': '@istranic I have updated the doctoring to provide more clarity\r\nhttps://github.com/activeloopai/Hub/blob/e036647ed22891c07249a93d50cc923495b03201/hub/api/dataset.py#L242-L279', 'comment_created': datetime.datetime(2021, 7, 28, 19, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 680648818, 'comment_body': ""Use python for unziping and deleting files. These commands are linux specific and won't work on Windows. Also consider using `os.chdir()` instead of concatting `cd %s`, but thats not as important.\r\n"", 'comment_created': datetime.datetime(2021, 8, 2, 4, 40, 50, tzinfo=datetime.timezone.utc), 'commenter': 'farizrahman4u', 'type': 'User'}]","[{'commit_sha': 'd60ca3a306c2fdbb55537dacb15e831b9337829e', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba42d557c699d963a79c620b11210be74857eaf5', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a9c7639f596fe313c94bdc84956017eb19272ca', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c69c6e6617b872700b842c7b392fcb6fd41646a1', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07cc78cfadaa6162f163c4104e75729404dfb7d9', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '121f147411f6328f77d13bb58f5bc7423856c1ac', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70e49664477382de53c90fcf38116b9d4b0ae47a', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '408e30b353ea276ecf3e3fa4f72ab35a2cab63fa', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ee9545474a7af44edc6d28f8c415d35c8b2ea78', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ca6b6c5425752c6cb30750b96ca2c89e8fe054c', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bba2fa473d7c14cfa01bbf2302d7777b49a63b5d', 'committer_username': 'verbose-void', 'committer_name': 'dyllan', 'committer_email': 'dyllanmccreary@gmail.com', 'commit_date': datetime.datetime(2017, 3, 14, 22, 58, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': '695e01d77503584de4ff09f2fe2661a989344871', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31055c93b4dc96cf7eea8ef9eb4d57f6ecb4e910', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12ce277a5bb05210a831a2d392100fb8facd078c', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68699116e2b1c992c811b330ba0ae5fe54501f5e', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f79837ea18ee408ab6b35883a0788791971addb', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09c58cc952d2a08e5131fb6f718907f7790499bc', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbf1fb2cf30b1a2678875e3682449b8685ae7358', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bba092fab45f1493c650101a6767571cf438708', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7438e130acfe943ce8f5389a1f6dfab3e3c9b3f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fddfd799cd6e215725bc549b16fbf0d74656de3', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a99e1b1a703b17483ee3a3cd9699bbb3cff4e7db', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9500028d589ae0d191d2cd5a9a3b56fbec254358', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ee164984be050475d4f60eb275db25b2a6aeda7', 'committer_username': 'davidbuniat', 'committer_name': 'Davit Buniatyan', 'committer_email': None, 'commit_date': datetime.datetime(2014, 3, 26, 12, 3, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87982f907929671ae335527d7abd7c1a3adc5319', 'committer_username': 'verbose-void', 'committer_name': 'dyllan', 'committer_email': 'dyllanmccreary@gmail.com', 'commit_date': datetime.datetime(2017, 3, 14, 22, 58, 45, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfb1c34c415661458d03e13a5b4fefbb030f71b2', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e6ad665b953afa7999d2ff251e4a98c67d604d3', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af1e928e6d592c783d3dcffbf3f9085698fe555', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90e85b8760426cf8f22d717cdae1519de9a2aa65', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '809ad6dce3624db4766fd8f7a72858a5844e1596', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e09c8df2c69711dbdde496f4a9351545dd91d6ea', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53156f77d51cf815718f4a56da70cd2471a4a9e8', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93be06a291b136268d94c997ab1fbe60a7be2f69', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fe462946ec7bebfd2ccb6c125341a36fdf77d3c', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '859eacc7d5b59c2c083a5414968f2cda0602b8aa', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a53a1d85eb407bfa9bed7656028d0638c9c1575', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d1dac84b7aefdb8a176279eac32a04416fc6cd1', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '807f2eaaa19470f1e2a8eb68f13c3c91dd52ee9f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cf8582012b5b9739feab27f4d5b8911b3cb97c6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91869b306b35c49588bac2ab312767ed6bf81ea7', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e272ff2102fb17d1ef245591e086eb586942777e', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bba22f8394d18c9cdd89ad071acd283c4a4b312e', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e827c9306aff1d7e680377840e0fe8dadd9be0e3', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01676936dba5aec919fb8eeee2c922872785237e', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc393a1de335ec4bc0ec2cc1a91cd2834bfa3daa', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '971a6b4c6645ebb25d95367445d6b6f6933241ab', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea2c3ea63e632103a4b2882b76651fcf017b7032', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56c160fe6b7e0998f658b00501f2685da51c04bd', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4f8662e9e1e44e7079b248242fababe9e873ce6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f54141a08f34c6f83fbbd1596d62b871870cfd8', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf0fbeeb1ff9102a9132503ea4c9c1d1b6aced07', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d81f7ab2bf36c68f686a6453eddaa20448bc1be', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2952c740d7ff288077ca9d11d8ede3fdafe763a2', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f34f89fec7ae64b81cc3cc089a82c881fce55570', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '929c953c012bd864f50ec2595a30c539c974da3e', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c4d138cfc158887c47cc6da09a6ee782ef2154e', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '684ab9c56950440678c0ea38622547c4c1f10d7f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbf6264c0aa69a9ada5a7590c8f38a7bee1c9382', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8163953df15638d929e275d230e5e04440f5f6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '431323ddf39a3d07307efd2858ae8576609bc3f0', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf04174abd44b9b8b0c055f3b422fc2f39c8a8e2', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25f8666da39630ac69094e1776c1228865e1e619', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e036647ed22891c07249a93d50cc923495b03201', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd1a4225cf75fd028cb543cb1fb62186d645dd4', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b23bd8e44e83cf9a3f5002febdd19e0391c65835', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9af9c8580101c57e5ebb3812c7d1ddc2e4e2a3c1', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '362c61ba89779c8ec5889e486599cc7073dc3f3d', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a26bcd22a47d43ef140bd68edbd68da3dd40bdad', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bd7dde2f9808046292e601cedce694c6120517a', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4f7925793a7da3845228c175b6d234393f8e2bb', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d331f7d3635b1d1e68fe25415888b9a090c0894', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '054b14ffcb27806a2549d6ef93864065ac3ee560', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
703824289,kaggle argument fix,"## ðŸš€ ðŸš€ Pull Request

### Checklist:

- [x]  [My code follows the style guidelines of this project](https://www.notion.so/activeloop/Engineering-Guidelines-d6e502306d0e4133a8ca507516d1baab) and the [Contributing document](https://github.com/activeloopai/Hub/blob/release/2.0/CONTRIBUTING.md)
- [x]  I have commented my code, particularly in hard-to-understand areas
- [x]  I have kept the `coverage-rate` up
- [x]  I have performed a self-review of my own code and resolved any problems
- [x]  I have checked to ensure there aren't any other open [Pull Requests](https://github.com/activeloopai/Hub/pulls) for the same change
- [x]  I have described and made corresponding changes to the relevant documentation
- [x]  New and existing unit tests pass locally with my changes


### Changes

<!-- Describe your changes! Describe the scope of this PR's responsibilities. -->
add missing kaggle-credentials argument
tiny fix - pls approve",True,1101,https://api.github.com/repos/activeloopai/deeplake/pulls/1101,https://github.com/activeloopai/deeplake/pull/1101,closed,79,45,4,14,2,4,1,0,[{'name': 'cla:signed'}],2021-08-04 18:25:49+00:00,2021-08-09 12:27:01+00:00,410472.0,"4 days, 18:01:12","[{'comment_id': 682946205, 'comment_body': '```suggestion\r\n            images_compression (str): For image classification datasets, this compression will be used for the `images` tensor.\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 20, 44, 19, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 682946734, 'comment_body': '```suggestion\r\n            kaggle_credentials (dict): A dictionary containing kaggle credentials {""username"":""YOUR_USERNAME"", ""key"": ""YOUR_KEY""}. If None, environment variables/the kaggle.json file will be used if available.\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 20, 45, 11, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 682947331, 'comment_body': '```suggestion\r\n```\r\n\r\nyou can remove these now because you made `dest_creds` `None` by default.', 'comment_created': datetime.datetime(2021, 8, 4, 20, 46, 14, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 683395004, 'comment_body': 'I just noticed, _set_environment_credential_if_none will ignore a dictionary of kaggle credentials passed as it only goes into the if condition if the credentials are None. I think the if statement on L23 should probably be outside the if on L21.', 'comment_created': datetime.datetime(2021, 8, 5, 12, 12, 47, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}]","[{'commit_sha': 'bc415d8f44c6bd4f24619049dfe36ed26d48b6af', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65bd5817c5a3ae7a259bf6eddbf3094f622a02b1', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '540f217fef7d190ea009d76120abf0bcced9781f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7214254712e9b6bb95d6abd2d1af55fc73fb124d', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ff7c53be9fbe006e21df960e5abef94092bf588', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8cfbaceda429abcfa97e79fb0657a9c73ecc15a', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7ea769da4f7d796497737dc131b348217cb5bd7', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd43f4c0250d397d8ae2fea678080892ff6915282', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63a2f86103e385de47e1b81dd4885e476cbd98d1', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22112108b53114e75a44c4f5687086289765cacf', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '788de5108c97f51babadee9bb4bbd9a75fd7ab11', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1601553e50d9b049552b7c9c59533ff1d758e57', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f878a7851c04d18dd4222b909a4ff8c9267d9d03', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '894b54492ad21287df7204fef1a4c617a9b12bc2', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
706786444,add --kaggle functionality,"## ðŸš€ ðŸš€ Pull Request

### Checklist:

- [x]  [My code follows the style guidelines of this project](https://www.notion.so/activeloop/Engineering-Guidelines-d6e502306d0e4133a8ca507516d1baab) and the [Contributing document](https://github.com/activeloopai/Hub/blob/release/2.0/CONTRIBUTING.md)
- [x]  I have commented my code, particularly in hard-to-understand areas
- [ ]  I have kept the `coverage-rate` up
- [x]  I have performed a self-review of my own code and resolved any problems
- [x]  I have checked to ensure there aren't any other open [Pull Requests](https://github.com/activeloopai/Hub/pulls) for the same change
- [x]  I have described and made corresponding changes to the relevant documentation
- [x]  New and existing unit tests pass locally with my changes


### Changes
Kaggle tests now run with --local --kaggle
<!-- Describe your changes! Describe the scope of this PR's responsibilities. -->",True,1108,https://api.github.com/repos/activeloopai/deeplake/pulls/1108,https://github.com/activeloopai/deeplake/pull/1108,closed,153,117,8,10,1,2,0,0,[],2021-08-09 19:38:35+00:00,2021-08-13 20:22:39+00:00,348244.0,"4 days, 0:44:04","[{'comment_id': 687931659, 'comment_body': 'I think CircleCI is not using the --kaggle option which is why the coverage is low', 'comment_created': datetime.datetime(2021, 8, 12, 17, 8, 2, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 688673039, 'comment_body': 'please update `CONTRIBUTING.md`  (the `Running Tests` section)', 'comment_created': datetime.datetime(2021, 8, 13, 17, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}]","[{'commit_sha': '9ba1a5e1861689cb64e5250342b97143a75b09c6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f70b3b50833a2f4318a71fa22cc6846c104b16f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa5cf794f880332e5bd02be95e3df1335356184', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fcb5a1ff8dbbcfbbe76bbdbcd297789ad0be2a6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '439f19f0186eb92e14cae30e43d9a8c9951642db', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28460d472bf38e27be360f155a216bd1a81e5f8f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6facc2b4c257f3f9070352c4b6b4e4ead0223cc', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94dbafe832581a9c1ae6b66938de77ba87fc9cf8', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c0430b0c558b54f201c58435199566cc9be6d29', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b3a4eed95ad1e6093e069c44420e73f5caf2de8', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
706870686,Auto compression,"## ðŸš€ ðŸš€ Pull Request

### Checklist:

- [x]  [My code follows the style guidelines of this project](https://www.notion.so/activeloop/Engineering-Guidelines-d6e502306d0e4133a8ca507516d1baab) and the [Contributing document](https://github.com/activeloopai/Hub/blob/release/2.0/CONTRIBUTING.md)
- [x]  I have commented my code, particularly in hard-to-understand areas
- [ ]  I have kept the `coverage-rate` up
- [x]  I have performed a self-review of my own code and resolved any problems
- [x]  I have checked to ensure there aren't any other open [Pull Requests](https://github.com/activeloopai/Hub/pulls) for the same change
- [x]  I have described and made corresponding changes to the relevant documentation
- [x]  New and existing unit tests pass locally with my changes


### Changes

<!-- Describe your changes! Describe the scope of this PR's responsibilities. -->
Auto detect compression for hub auto",True,1109,https://api.github.com/repos/activeloopai/deeplake/pulls/1109,https://github.com/activeloopai/deeplake/pull/1109,closed,110,11,8,12,1,19,0,0,[],2021-08-09 21:32:08+00:00,2021-08-16 21:04:48+00:00,603160.0,"6 days, 23:32:40","[{'comment_id': 686211000, 'comment_body': 'we should not use `None` here, because the user may want to actually use no compression.\r\n\r\ninstead, use ""auto""\r\n\r\n```suggestion\r\n        images_compression: str = ""auto"",\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 18, 12, 46, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686212013, 'comment_body': 'make sure to update the docstring. and make sure you mention that setting this param to ""auto"" means the compression will be automatically determined by the most common one', 'comment_created': datetime.datetime(2021, 8, 10, 18, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686212125, 'comment_body': '```suggestion\r\n        images_compression: str = ""auto"",\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 18, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686212536, 'comment_body': 'be explicit for tests\r\n\r\n```suggestion\r\n        src=path,\r\n        dest=memory_ds.path,\r\n        images_compression=""auto"",\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 18, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686212679, 'comment_body': ""ha! that's neat"", 'comment_created': datetime.datetime(2021, 8, 10, 18, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 686213909, 'comment_body': '```suggestion\r\ndef detect_compression(path: str) -> str:\r\n    """"""Determines the most frequently used extension in a directory of files.\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 18, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686214686, 'comment_body': 'you should make `types` a parameter to this function, and make this value the default.\r\n\r\nalso, please rename this argument to `allowed_extensions`', 'comment_created': datetime.datetime(2021, 8, 10, 18, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686214913, 'comment_body': '```suggestion\r\n        str: Most common extension under the provided path.\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 18, 18, 37, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686215060, 'comment_body': '```suggestion\r\n        path (str): Directory to scan.\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 18, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686215303, 'comment_body': ""add a check here to make sure `path` is a directory. if the path is not a directory, return the file extension of the file it's pointing to. if no extension, please return none"", 'comment_created': datetime.datetime(2021, 8, 10, 18, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686216724, 'comment_body': 'you already have this test basically in test ingestion. for testing your util function in isolation, please do not use hub.ingest. i recommend only calling `detect_compression`', 'comment_created': datetime.datetime(2021, 8, 10, 18, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686217242, 'comment_body': '```suggestion\r\ndef get_most_common_extension(path: str):\r\n```', 'comment_created': datetime.datetime(2021, 8, 10, 18, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686218208, 'comment_body': ""i think a better way to do this function would be to use [numpy's unique function](https://numpy.org/doc/stable/reference/generated/numpy.unique.html).\r\n\r\nthis way you can get counts for each extension and we can optionally return that"", 'comment_created': datetime.datetime(2021, 8, 10, 18, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 686218834, 'comment_body': ""don't spend too much time doing that suggestion ^ this function is pretty good as-is so i don't really care if this comment gets addressed."", 'comment_created': datetime.datetime(2021, 8, 10, 18, 24, 13, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688661554, 'comment_body': 'instead of 1 error message for all cases, could you add a message argument to AutoCompressionError? In this line, it should say the directory was empty', 'comment_created': datetime.datetime(2021, 8, 13, 17, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688661826, 'comment_body': 'ideally we should also print the filename for the user and tell them there was no file extension', 'comment_created': datetime.datetime(2021, 8, 13, 17, 9, 15, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688662398, 'comment_body': '```suggestion\r\n    local_path: str, allowed_extensions: Tuple = ("".jpeg"", "".png"", "".jpg"")\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 17, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688662742, 'comment_body': '```suggestion\r\n    def __init__(self, directory, message):\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 17, 10, 39, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688699306, 'comment_body': ""this is scanning an entire directory, so this exception can print the directory that holds the file(s) instead of the exact file. This works on a util file so I'll keep it pretty general something like:\r\n\r\n`InvalidFileExtension: Missing file with extension in {directory}. Expected a valid file extension got None.`"", 'comment_created': datetime.datetime(2021, 8, 13, 18, 17, 14, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}]","[{'commit_sha': 'ebaf781d2b1fcbdb0e415d6bf7420c411b22cfbe', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb13219afab4a7fef3258baeca29bf0cb37ea45f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7232888c1a32304152fdc6c5d5fe5f994a2e103a', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '539ff204510bb9f40041d724e768b5f12a7ff150', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0bba4f6fe2a849df413af9bacfa96e96a1d212c', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da7d77b5f7ef0f11633853de80068117737ccf90', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f19a33959303533f230a080857459a4cce181767', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a371427cb68e124d835088727baddee315903590', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e73baf9f3715079d7938e137a8fbd4808786119c', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2e9d10415e318044fe354ce2233d67dfa1503e6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24b85f603c6981d7425a109517d9c90be34cd20d', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a39a0dae2bf97033300f25a5007bbd7870384ae', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
709742603,Ingestion summary,"ðŸš€ ðŸš€ Pull Request

### Checklist:

- [x]  [My code follows the style guidelines of this project](https://www.notion.so/activeloop/Engineering-Guidelines-d6e502306d0e4133a8ca507516d1baab) and the [Contributing document](https://github.com/activeloopai/Hub/blob/release/2.0/CONTRIBUTING.md)
- [x]  I have commented my code, particularly in hard-to-understand areas
- [x]  I have kept the `coverage-rate` up
- [x]  I have performed a self-review of my own code and resolved any problems
- [x]  I have checked to ensure there aren't any other open [Pull Requests](https://github.com/activeloopai/Hub/pulls) for the same change
- [x]  I have described and made corresponding changes to the relevant documentation
- [x]  New and existing unit tests pass locally with my changes


### Changes

<!-- Describe your changes! Describe the scope of this PR's responsibilities. -->
Generate Ingestion Summary after ingest() or ingest_kaggle()
List files skipped during ingestion in a tree like structure
Add overwrite fix

No files skipped [All files ingested]:

<img width=""1440"" alt=""Screenshot 2021-08-15 at 4 02 07 PM"" src=""https://user-images.githubusercontent.com/39293757/129475596-1633f5de-999a-4b15-8ef4-75cd864584c9.png"">


Skipped files during ingestion ['image_classification/lol.json' and 'image_classification/class0/lol.json']

<img width=""1440"" alt=""Screenshot 2021-08-15 at 4 07 17 PM"" src=""https://user-images.githubusercontent.com/39293757/129475660-23d2be20-2816-4926-81dd-50429ee09d7c.png"">



",True,1117,https://api.github.com/repos/activeloopai/deeplake/pulls/1117,https://github.com/activeloopai/deeplake/pull/1117,closed,182,22,11,44,2,26,0,0,[],2021-08-11 22:30:31+00:00,2021-08-19 20:43:51+00:00,684800.0,"7 days, 22:13:20","[{'comment_id': 687997026, 'comment_body': 'can you put this in the hub auto util file instead?', 'comment_created': datetime.datetime(2021, 8, 12, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 687997971, 'comment_body': 'can we modify the progress bar to have the len(skipped_files)?', 'comment_created': datetime.datetime(2021, 8, 12, 18, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 687999313, 'comment_body': ""the progress bar's description is the full path to the dataset, but in the screen shot you provided is extremely long. can we just use the last folder?"", 'comment_created': datetime.datetime(2021, 8, 12, 18, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688000026, 'comment_body': 'will do', 'comment_created': datetime.datetime(2021, 8, 12, 18, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 688000098, 'comment_body': 'the pbar would look like this:\r\n\r\n\r\ningesting ""my_dataset_folder"" (0 files skipped): [|||||||||||||||||||||||||||xxxxxxxxx]', 'comment_created': datetime.datetime(2021, 8, 12, 18, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688000925, 'comment_body': 'https://stackoverflow.com/questions/37506645/can-i-add-message-to-the-tqdm-progressbar', 'comment_created': datetime.datetime(2021, 8, 12, 18, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688002175, 'comment_body': 'gotcha, will do\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 18, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 688664083, 'comment_body': 'should not be in this PR', 'comment_created': datetime.datetime(2021, 8, 13, 17, 13, 12, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688664878, 'comment_body': 'for the ingestion tests, can you please set `use_progress_bar` to False for all of them (including kaggle)? ', 'comment_created': datetime.datetime(2021, 8, 13, 17, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688665502, 'comment_body': '```suggestion\r\ndef ingestion_summary(local_path: str, skipped_files: list):\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 17, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688666995, 'comment_body': '```suggestion\r\n        with ds, iterator:\r\n```\r\n\r\nif you move the iterator outside this with statement (above) you can use this syntax, and i think you can remove the `iterator.close()` call after all the loops', 'comment_created': datetime.datetime(2021, 8, 13, 17, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688668176, 'comment_body': 'test this first though, im not 100% sure', 'comment_created': datetime.datetime(2021, 8, 13, 17, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 688670139, 'comment_body': ""`iterator.close()` isn't necessary there. I'll remove it\r\n"", 'comment_created': datetime.datetime(2021, 8, 13, 17, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 689382351, 'comment_body': 'Actually == is better for such comparisons', 'comment_created': datetime.datetime(2021, 8, 16, 9, 33, 22, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 689383536, 'comment_body': 'could you add tests for this?', 'comment_created': datetime.datetime(2021, 8, 16, 9, 35, 12, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 689384193, 'comment_body': 'is this a flag? Use true and false for this', 'comment_created': datetime.datetime(2021, 8, 16, 9, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 689424766, 'comment_body': ""yes I agree, was trying to keep this change limited to the auto-compression PR as rightly [suggested](https://github.com/activeloopai/Hub/pull/1117#discussion_r688664083) by @mccrearyd .\r\nIt's a tiny change for now so I guess we can make it."", 'comment_created': datetime.datetime(2021, 8, 16, 10, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 690323448, 'comment_body': ""I don't think this test is testing out most of ingestion summary, most of it is still untested."", 'comment_created': datetime.datetime(2021, 8, 17, 12, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 691138570, 'comment_body': ""done, I got rid of the preceding and trailing '====' as it was dependent on the terminal window size and the output varied on the ci OS.\r\nnow the tests are cleaner and should be good "", 'comment_created': datetime.datetime(2021, 8, 18, 11, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 691468367, 'comment_body': '```suggestion\r\n- `pytest . --kaggle`: Run all tests that use the kaggle API.\r\n```', 'comment_created': datetime.datetime(2021, 8, 18, 17, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 691469140, 'comment_body': '```suggestion\r\n            summary (bool): If True, a summary of skipped files will be printed after completion. Defaults to True.\r\n```', 'comment_created': datetime.datetime(2021, 8, 18, 17, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 691521475, 'comment_body': 'we should remove the explicit overwrite parameter, it should work with kwargs', 'comment_created': datetime.datetime(2021, 8, 18, 18, 54, 3, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 691521629, 'comment_body': 'here too ', 'comment_created': datetime.datetime(2021, 8, 18, 18, 54, 19, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 692052981, 'comment_body': ""why is this -2 here? if we're skipping it and continuing the part of the loop that increments the count shouldn't this line not exist?"", 'comment_created': datetime.datetime(2021, 8, 19, 12, 13, 20, tzinfo=datetime.timezone.utc), 'commenter': 'AbhinavTuli', 'type': 'User'}, {'comment_id': 692155382, 'comment_body': 'thanks for that! I forgot to remove it after some testing ðŸ˜…', 'comment_created': datetime.datetime(2021, 8, 19, 14, 18, 32, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 692473434, 'comment_body': 'remove this todo', 'comment_created': datetime.datetime(2021, 8, 19, 20, 42, 31, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}]","[{'commit_sha': 'abf9b9540ff523d7eda73d8e115605c1261a24b6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ace0bff6b59ef625779d76c61af45965a6e28ebb', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d442784745c8afcd62f0716de6981c8a1eaa492', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2d36a3afe9f1eebeb187a9f66dc1ac14d20dcf1', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7f9d354d315e3f0e2611f8a59cffadada80a931', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39a1ee714ba79d5012a719f34c1e00e39db90f35', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37c5d2d8a9157db09c3cf7ef000384278d0ca439', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '261ab749543fd4e25437a15f64058f757edb0326', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45e953d0a56357997a83c5388c95890c1410220d', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04a700a61d9a5e013ef46ace74abfa5a792376a6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf490ca07ebc33861254fdf479f263e644f65af4', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '939d397c342330bc3ee4caf9ef07d5a048155508', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04aea6cf9649684dc425bb6bcb766c9941899d74', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cee6e8a7756556cc31ebfae28642bb61b32b673', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1aa0c511c8533fa065aedffaaf6240e7ce40fba', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24ec94fa260da0420e47102538c09de00af66528', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b73fa30ee0c4f50c1c07178d2caf9727dcc89504', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94f16f78e82dae59c0fff65a032bd88969e1e4b8', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28b97cef584a98c83f2439f388c99882af9e538a', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef9622b125433935f4e71534f97a712b7e279605', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26d152e63884b48b8627d74f2efbcfb70865b13f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70e08aa5912b8dfa012c3f5f786bd000f48255f6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '552580a26cc86fe3ee846e0a34d672ce65897092', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b901a8c811f017c94e82067bf5e1122e9a9e162', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cf5b0181b1d0dd99057630e199971f0ad541cee', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd62db99ed496e0ed87962221e10611921ade836b', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fa05358218fa41a1d744436baebdb54f3bd197c', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac8f08f17cd4ecdd8d42c1c9461624347f17c11', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24fa664e606ca9e44375c127b80e055faf7dbfdc', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d9d2914453356e1d44284b2e27492aa5b9e68e6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b935f309f453c2f5866eff3e0a08ebefacafa2f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29549fae406642f29d8987ba055df8a65327b482', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ebb649ed4626c315eb787f262095cdeac5c96ae', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9268e06d08130f2eb9212034f2f043005f5a48ee', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47e96bd4b6e188564c55867254c3e47afc76a70c', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e73226f7d8e63a4e7e65693e8df76897dfd997fc', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65633fbae294da5ec5ff79475f08fed9c05478b7', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd77eb9fea4560957cbbfc7b387c6bd774dfded8', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d6d355ad7f83029804711d2ad63a4b91a38e9ee', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eab13673c5d879639fa820fd9a92c1addc338d63', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a57ff1f79a87338e8287b3acd1b90a6febd3b8', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b976bf8c99d1fc7918d393dfb5afa40aad031a42', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ac5fa07c0b9a19bf82f00dcd39c509aa7cb0c8f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dd7d55a31858b26a010b72b97618436dabc6467', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
716559512,auto refinement,"## ðŸš€ ðŸš€ Pull Request

### Checklist:

- [x]  [My code follows the style guidelines of this project](https://www.notion.so/activeloop/Engineering-Guidelines-d6e502306d0e4133a8ca507516d1baab) and the [Contributing document](https://github.com/activeloopai/Hub/blob/release/2.0/CONTRIBUTING.md)
- [x]  I have commented my code, particularly in hard-to-understand areas
- [x]  I have kept the `coverage-rate` up
- [x]  I have performed a self-review of my own code and resolved any problems
- [x]  I have checked to ensure there aren't any other open [Pull Requests](https://github.com/activeloopai/Hub/pulls) for the same change
- [x]  I have described and made corresponding changes to the relevant documentation
- [x]  New and existing unit tests pass locally with my changes


### Changes
<!-- Describe your changes! Describe the scope of this PR's responsibilities. -->
Few touch ups on Hub auto
Jupyter notebook fix: Addresses an issue when a non-supported file doesn't get skipped and stops ingestion
Temporarily remove numeric value from ingestion summary",True,1124,https://api.github.com/repos/activeloopai/deeplake/pulls/1124,https://github.com/activeloopai/deeplake/pull/1124,closed,24,15,3,9,1,0,0,0,[],2021-08-20 08:51:47+00:00,2021-08-24 08:42:17+00:00,345030.0,"3 days, 23:50:30",[],"[{'commit_sha': '472493097386d54ee7fd4128a8c7b6c55270f85a', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9aa52008d89de55ebb446d59606c8eef405077e6', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c74b09e2d532874e64ff7427a1ff15ff9834f00', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d0fd8812342f8e85c4b97c36b60260e2b1d191f', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e86e0aa59b09bbcbbaf98270b81da25c6ecaa4bf', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab48cb23933275534a5468091d73d6f77fd89bcb', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71b7fe31fdc56dee38355626d65242953086daf3', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27a8c5b1980db3bb70fd23aa78efae74ccf85074', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e530f2020975d0cf438090cf5e2218e0c7307b9b', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
657117645,Removing pickle,Removing pickle form chunk_engine (replacing it with json),False,903,https://api.github.com/repos/activeloopai/deeplake/pulls/903,https://github.com/activeloopai/deeplake/pull/903,closed,173,27,3,4,2,0,1,0,[{'name': 'cla:signed'}],2021-05-28 21:25:49+00:00,2021-05-29 18:20:23+00:00,75274.0,20:54:34,[],"[{'commit_sha': '9522730b91f2c028dc3c6b5f193399b8207584d4', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd29c3fc2069317868efa150f55e920acca4ffd9a', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57046613c64651be6599fc4bf2cf0f0102938cce', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb42587bfac73e803c8658ba5019ec566a4267ee', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
657633443,Depickle and convert index_map to list,"1.  Remove pickle instances (pickle -> json)
2. Convert index_map to list of lists
3. Edit tests to work with above changes
4. Split storage benchmark tests on cache read/write",False,906,https://api.github.com/repos/activeloopai/deeplake/pulls/906,https://github.com/activeloopai/deeplake/pull/906,closed,45,30,4,5,1,12,2,1,"[{'name': 'v2'}, {'name': 'cla:signed'}]",2021-05-30 08:15:28+00:00,2021-06-03 17:27:11+00:00,378703.0,"4 days, 9:11:43","[{'comment_id': 642548310, 'comment_body': 'I think tuple is probably better here. No need for mutability, right?', 'comment_created': datetime.datetime(2021, 5, 31, 15, 0, 59, tzinfo=datetime.timezone.utc), 'commenter': 'benchislett', 'type': 'User'}, {'comment_id': 642548828, 'comment_body': ""What's wrong with `list(some_tuple)`?"", 'comment_created': datetime.datetime(2021, 5, 31, 15, 1, 56, tzinfo=datetime.timezone.utc), 'commenter': 'benchislett', 'type': 'User'}, {'comment_id': 642550156, 'comment_body': '`dict.items` is a method that returns an iterable over the key-value pairs.\r\n\r\nSo you can just do `return list(dictionary.items())` if you even need a function for it', 'comment_created': datetime.datetime(2021, 5, 31, 15, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'benchislett', 'type': 'User'}, {'comment_id': 642552511, 'comment_body': ""I _really_ don't like this syntax. We'll have to constantly remember the numbers corresponding to each field, and have to update _everything_ if we ever change the order.\r\n\r\nAlso, python dicts are guaranteed to be ordered based on _insertion_, so it'll also be tricky to ensure that this ordering is always maintained. \r\n\r\nWhat's the motivation for doing this conversion? If it's really essential, we should add a layer of abstraction here to interface with the index mapping more cleanly"", 'comment_created': datetime.datetime(2021, 5, 31, 15, 8, 11, tzinfo=datetime.timezone.utc), 'commenter': 'benchislett', 'type': 'User'}, {'comment_id': 642601004, 'comment_body': ""There is no need for mutability, however since we are moving from pickle->json. We will have to store the shapes as lists as json doesn't support tuples."", 'comment_created': datetime.datetime(2021, 5, 31, 16, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 642603160, 'comment_body': '`list(some_tuple)` was giving an error earlier. It works perfectly now. I will make this change.', 'comment_created': datetime.datetime(2021, 5, 31, 17, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 642604865, 'comment_body': 'Thank you for the suggestion @benchislett, will make this change!', 'comment_created': datetime.datetime(2021, 5, 31, 17, 5, 33, tzinfo=datetime.timezone.utc), 'commenter': 'thisiseshan', 'type': 'User'}, {'comment_id': 642608165, 'comment_body': 'yeah, maybe we should use a class and have it be responsible for the encoding/decoding ', 'comment_created': datetime.datetime(2021, 5, 31, 17, 15, 42, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 642608427, 'comment_body': 'same thing with the meta, @imshashank recommended this quite some time ago, with accessing meta values like `tensor_meta.min_shape`, i think this is good timing to implement.', 'comment_created': datetime.datetime(2021, 5, 31, 17, 16, 22, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 642610985, 'comment_body': '`index_map: List[np.ndarray]`', 'comment_created': datetime.datetime(2021, 5, 31, 17, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 642615236, 'comment_body': 'instead of `write_index_map` and `read_index_map`, we should use a class that automatically handles this logic. then, when i go to add an entry, i could just do \r\n\r\n`index_map.add_entry(start_byte=something, end_byte=something, chunk_names=..., shape=...)`\r\n\r\nthis add_entry function should automatically encode.\r\n\r\nthe state of `index_map` would be a `bytearray`.\r\n\r\nthen when reading, i can do\r\n\r\n`index_map[0].chunk_names`\r\n\r\nthese reads should automatically decode.\r\n\r\n```python\r\ndef encode_entry(start_byte, end_byte, chunk_names=[...]):\r\n    cn = []  # <-- TODO: encode chunk names into numpy \r\n    a = [start_byte, end_byte, *cn]\r\n    return np.ndarray(a)\r\n\r\ndef decode_entry(a: np.ndarray) -> dict:\r\n    ...\r\n    return {}\r\n\r\n# NOTE: we do not want to use ""json"" to serialize the index map\r\nclass SampleTracker:  # TODO: rename\r\n    def __init__(self, storage: StorageProvider):\r\n        self.state = storage.get(index_map_key, """") # TODO: rename\r\n        self.storage = storage\r\n\r\n    def add_entry(self, *kwargs): # TODO: define arguments STATICALLY not kwargs\r\n        array = encode_entry(kwargs)\r\n        self.state += array.tobytes() + ""\\n""\r\n        self.storage[index_map_key] = self.state\r\n\r\n    def __getitem__(self, item):\r\n        # TODO: get the item referenced from state\r\n        # return dictionary (decode array)\r\n       pass\r\n```', 'comment_created': datetime.datetime(2021, 5, 31, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}, {'comment_id': 642616117, 'comment_body': 'so your file would look like this:\r\n\r\n\r\none line = 1 encoded array (bytes)\r\n```\r\n3291571239045okjgsldkgjlagjlasdjflalsdkfj\r\n214923598134iothjgkldfsbkh\r\n12345i13745987134i6245ok7jk2l4\r\n13245972134t98ugkeraghskdfhgls\r\n431543ht52k34h6k2jh5y134\r\n```\r\n\r\n^ this file has 5 index entries', 'comment_created': datetime.datetime(2021, 5, 31, 17, 39, 46, tzinfo=datetime.timezone.utc), 'commenter': 'verbose-void', 'type': 'User'}]","[{'commit_sha': '0cd55673feeb8776a7b7ec36ff2222de2724ba47', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ea2813e62e5175059f5d3412bea4ad36ced8404', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5799914c504dededd1a8ea74a1a6f8e70ab29b2c', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '334d28856b3e029c5914fcc01a8db5d095ff77c3', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '390e5c625cca593bb55374f81175a497b9492d57', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
662365215,"depickle, add index_map, fix storage benchmarks","## ðŸš€ ðŸš€ Pull Request

### Checklist:

- [ ]  [My code follows the style guidelines of this project](https://www.notion.so/activeloop/Engineering-Guidelines-d6e502306d0e4133a8ca507516d1baab) and the [Contributing document](https://github.com/activeloopai/Hub/blob/release/2.0/CONTRIBUTING.md)
- [ ]  I have commented my code, particularly in hard-to-understand areas
- [ ]  I have kept the `coverage-rate` up
- [ ]  I have performed a self-review of my own code and resolved any problems
- [ ]  I have checked to ensure there aren't any other open [Pull Requests](https://github.com/activeloopai/Hub/pulls) for the same change
- [ ]  I have described and made corresponding changes to the relevant documentation
- [ ]  New and existing unit tests pass locally with my changes


### Changes

<!-- Describe your changes! Describe the scope of this PR's responsibilities. -->

- Depickle code
- Add IndexMap and IndexMapEntry class
- Add Tests to work with class
- Replace read_index_map() and write_index_map() references to work with class
- Add Storage benchmark tests with separate fixtures for cache read/write


",False,920,https://api.github.com/repos/activeloopai/deeplake/pulls/920,https://github.com/activeloopai/deeplake/pull/920,closed,243,60,10,1,0,0,1,0,[{'name': 'cla:signed'}],2021-06-05 09:39:28+00:00,2021-06-05 09:39:43+00:00,15.0,0:00:15,[],"[{'commit_sha': '5bf4e82e3eb96f0363415e5fa428f16c801f03d7', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
662365531,"depickle, add index_map, fix storage benchmarks","## ðŸš€ ðŸš€ Pull Request

### Checklist:

- [x]  [My code follows the style guidelines of this project](https://www.notion.so/activeloop/Engineering-Guidelines-d6e502306d0e4133a8ca507516d1baab) and the [Contributing document](https://github.com/activeloopai/Hub/blob/release/2.0/CONTRIBUTING.md)
- [x]  I have commented my code, particularly in hard-to-understand areas
- [ ]  I have kept the `coverage-rate` up
- [x]  I have performed a self-review of my own code and resolved any problems
- [x]  I have checked to ensure there aren't any other open [Pull Requests](https://github.com/activeloopai/Hub/pulls) for the same change
- [x]  I have described and made corresponding changes to the relevant documentation
- [x]  New and existing unit tests pass locally with my changes


### Changes

<!-- Describe your changes! Describe the scope of this PR's responsibilities. -->

- Depickle code
- Add IndexMap and IndexMapEntry class
- Add Tests to work with class
- Replace read_index_map() and write_index_map() references to work with class
- Add Storage benchmark tests with separate fixtures for cache read/write


",False,921,https://api.github.com/repos/activeloopai/deeplake/pulls/921,https://github.com/activeloopai/deeplake/pull/921,closed,288,63,11,3,0,0,2,0,"[{'name': 'v2'}, {'name': 'cla:signed'}]",2021-06-05 09:40:21+00:00,2021-06-19 00:52:39+00:00,1177938.0,"13 days, 15:12:18",[],"[{'commit_sha': '5bf4e82e3eb96f0363415e5fa428f16c801f03d7', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09ecc46f972287afc0147aad9bd74e8514166846', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1ee92c4155d3082b48fd025461e5ec26a3e340c', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49
702570088,Feature/2.0/auto detect compression,"## ðŸš€ ðŸš€ Pull Request

### Checklist:

- [ ]  [My code follows the style guidelines of this project](https://www.notion.so/activeloop/Engineering-Guidelines-d6e502306d0e4133a8ca507516d1baab) and the [Contributing document](https://github.com/activeloopai/Hub/blob/release/2.0/CONTRIBUTING.md)
- [ ]  I have commented my code, particularly in hard-to-understand areas
- [ ]  I have kept the `coverage-rate` up
- [ ]  I have performed a self-review of my own code and resolved any problems
- [ ]  I have checked to ensure there aren't any other open [Pull Requests](https://github.com/activeloopai/Hub/pulls) for the same change
- [ ]  I have described and made corresponding changes to the relevant documentation
- [ ]  New and existing unit tests pass locally with my changes


### Changes

<!-- Describe your changes! Describe the scope of this PR's responsibilities. -->
auto detect compression for ingest() and ingest_kaggle()",False,1100,https://api.github.com/repos/activeloopai/deeplake/pulls/1100,https://github.com/activeloopai/deeplake/pull/1100,closed,268,12,14,8,2,0,1,0,[{'name': 'cla:signed'}],2021-08-03 20:04:45+00:00,2021-08-09 21:35:59+00:00,523874.0,"6 days, 1:31:14",[],"[{'commit_sha': 'c88a99d1f70557b59437b22ec88d37bf3a4e070b', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6a315a341facd2dc1895d1a2d7075687a18a4d7', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e70e33624f61ad9e21bc72fccc797561d08b05b1', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dbd4282240f5dd069f16c648afbf72092d1e3e7', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc5143b01bc958b25b6d091bd76314b8446a1213', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57ec7c89d994bea190a029ae5a73abc1b267ccc0', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e35909304799f23696073df15b636a3b0baf1b2', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}, {'commit_sha': '219ec3fe1065d17fa1aa234d2cea93730ee7e560', 'committer_username': 'thisiseshan', 'committer_name': 'Eshan Arora', 'committer_email': 'arora.es@northeastern.edu', 'commit_date': datetime.datetime(2018, 5, 15, 7, 0, 58, tzinfo=datetime.timezone.utc)}]",Eshan Arora,39293757,arora.es@northeastern.edu,User,,70,,73,49

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
201403923,deeplake,activeloopai/deeplake,Python,609,7991,88,132,9079,72,284,18,"[{'id': 725512442, 'number': 1144, 'closed': datetime.datetime(2021, 9, 2, 9, 24, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 2, 7, 29, 33, tzinfo=datetime.timezone.utc), 'time_taken': 6894.0, 'time_delta': '1:54:54', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 716559512, 'number': 1124, 'closed': datetime.datetime(2021, 8, 24, 8, 42, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 8, 51, 47, tzinfo=datetime.timezone.utc), 'time_taken': 345030.0, 'time_delta': '3 days, 23:50:30', 'additions': 24, 'deletions': 15, 'state': 'closed'}, {'id': 709742603, 'number': 1117, 'closed': datetime.datetime(2021, 8, 19, 20, 43, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 22, 30, 31, tzinfo=datetime.timezone.utc), 'time_taken': 684800.0, 'time_delta': '7 days, 22:13:20', 'additions': 182, 'deletions': 22, 'state': 'closed'}, {'id': 706870686, 'number': 1109, 'closed': datetime.datetime(2021, 8, 16, 21, 4, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 21, 32, 8, tzinfo=datetime.timezone.utc), 'time_taken': 603160.0, 'time_delta': '6 days, 23:32:40', 'additions': 110, 'deletions': 11, 'state': 'closed'}, {'id': 706786444, 'number': 1108, 'closed': datetime.datetime(2021, 8, 13, 20, 22, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 19, 38, 35, tzinfo=datetime.timezone.utc), 'time_taken': 348244.0, 'time_delta': '4 days, 0:44:04', 'additions': 153, 'deletions': 117, 'state': 'closed'}, {'id': 703824289, 'number': 1101, 'closed': datetime.datetime(2021, 8, 9, 12, 27, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 18, 25, 49, tzinfo=datetime.timezone.utc), 'time_taken': 410472.0, 'time_delta': '4 days, 18:01:12', 'additions': 79, 'deletions': 45, 'state': 'closed'}, {'id': 702570088, 'number': 1100, 'closed': datetime.datetime(2021, 8, 9, 21, 35, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 20, 4, 45, tzinfo=datetime.timezone.utc), 'time_taken': 523874.0, 'time_delta': '6 days, 1:31:14', 'additions': 268, 'deletions': 12, 'state': 'closed'}, {'id': 694536385, 'number': 1075, 'closed': datetime.datetime(2021, 8, 4, 17, 22, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 16, 43, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1211923.0, 'time_delta': '14 days, 0:38:43', 'additions': 643, 'deletions': 9, 'state': 'closed'}, {'id': 668535996, 'number': 941, 'closed': datetime.datetime(2021, 6, 16, 6, 32, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 20, 30, 25, tzinfo=datetime.timezone.utc), 'time_taken': 381700.0, 'time_delta': '4 days, 10:01:40', 'additions': 6, 'deletions': 7, 'state': 'closed'}, {'id': 662365531, 'number': 921, 'closed': datetime.datetime(2021, 6, 19, 0, 52, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 9, 40, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1177938.0, 'time_delta': '13 days, 15:12:18', 'additions': 288, 'deletions': 63, 'state': 'closed'}, {'id': 662365215, 'number': 920, 'closed': datetime.datetime(2021, 6, 5, 9, 39, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 9, 39, 28, tzinfo=datetime.timezone.utc), 'time_taken': 15.0, 'time_delta': '0:00:15', 'additions': 243, 'deletions': 60, 'state': 'closed'}, {'id': 657633443, 'number': 906, 'closed': datetime.datetime(2021, 6, 3, 17, 27, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 30, 8, 15, 28, tzinfo=datetime.timezone.utc), 'time_taken': 378703.0, 'time_delta': '4 days, 9:11:43', 'additions': 45, 'deletions': 30, 'state': 'closed'}, {'id': 657117645, 'number': 903, 'closed': datetime.datetime(2021, 5, 29, 18, 20, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 21, 25, 49, tzinfo=datetime.timezone.utc), 'time_taken': 75274.0, 'time_delta': '20:54:34', 'additions': 173, 'deletions': 27, 'state': 'closed'}, {'id': 615045517, 'number': 771, 'closed': datetime.datetime(2021, 4, 14, 8, 51, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 14, 8, 35, 50, tzinfo=datetime.timezone.utc), 'time_taken': 917.0, 'time_delta': '0:15:17', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 613612488, 'number': 763, 'closed': datetime.datetime(2021, 6, 1, 12, 23, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 12, 13, 5, 28, tzinfo=datetime.timezone.utc), 'time_taken': 4317476.0, 'time_delta': '49 days, 23:17:56', 'additions': 58, 'deletions': 1, 'state': 'closed'}, {'id': 608356466, 'number': 743, 'closed': datetime.datetime(2021, 4, 9, 7, 47, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 3, 9, 9, 6, tzinfo=datetime.timezone.utc), 'time_taken': 513513.0, 'time_delta': '5 days, 22:38:33', 'additions': 166, 'deletions': 0, 'state': 'closed'}, {'id': 585803216, 'number': 654, 'closed': datetime.datetime(2021, 3, 23, 17, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 5, 18, 39, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1550910.0, 'time_delta': '17 days, 22:48:30', 'additions': 298, 'deletions': 28, 'state': 'closed'}, {'id': 505437210, 'number': 95, 'closed': datetime.datetime(2020, 10, 21, 18, 16, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 18, 8, 47, 27, tzinfo=datetime.timezone.utc), 'time_taken': 293367.0, 'time_delta': '3 days, 9:29:27', 'additions': 5, 'deletions': 0, 'state': 'closed'}]"
