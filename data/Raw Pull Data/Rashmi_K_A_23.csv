pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
675626947,Add Teams model ,"This PR is in reference to issue #548 for creating a ~Groups~ **Teams** model to handle organizational hierarchies. This PR includes changes to the following files:

- models.py - add Team model
- db.py - add internal methods `add_team`, `find_team` and `delete_team`
- api.py - add methods `add_team`, `delete_team`


#541  has more information on the discussion around how to handle organizational hierarchies. ",True,552,https://api.github.com/repos/chaoss/grimoirelab-sortinghat/pulls/552,https://github.com/chaoss/grimoirelab-sortinghat/pull/552,closed,801,2,11,3,9,43,0,0,[],2021-06-22 17:29:53+00:00,2021-07-07 07:14:51+00:00,1259098.0,"14 days, 13:44:58","[{'comment_id': 656908582, 'comment_body': 'We started using Django 3.1. Please squash the commit you have later with this one.', 'comment_created': datetime.datetime(2021, 6, 23, 9, 10, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656909272, 'comment_body': ""Thought we were going to name this class `OrganizationGroup` or something similar. Although if it's no mandatory to assing it to an organization, probably it doesn't make sense. Then, we should look for a different name for the table."", 'comment_created': datetime.datetime(2021, 6, 23, 9, 11, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656912193, 'comment_body': ""It would be better to split this line in:\r\n\r\n```\r\norganization = ForeignKey(Organization, related_name='groups', on_delete=CASCADE,\r\n                          blank=True, null=True)\r\n```"", 'comment_created': datetime.datetime(2021, 6, 23, 9, 15, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656913448, 'comment_body': ""Have you tried to create a second instance with the same name and the organization as null? I think it will allow you when that shouldn't be the case."", 'comment_created': datetime.datetime(2021, 6, 23, 9, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656916672, 'comment_body': ""As `organization` and `parent` can be `None`, I think it's better to reformulate the definition of the function this way:\r\n```\r\ndef add_group(trxl, group_name, organization=None, parent=None):\r\n```"", 'comment_created': datetime.datetime(2021, 6, 23, 9, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656921102, 'comment_body': 'Same as before. It should be:\r\n\r\n```\r\ndef find_group(group_name, organization=None):\r\n```', 'comment_created': datetime.datetime(2021, 6, 23, 9, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656922914, 'comment_body': 'This also should be:\r\n\r\n""""Find a group in an organization.\r\n\r\nFinds a group by its name in the database by its name. If organization is passed, it looks for a group in that organization. When the group does not exist, the function will raise a `NotFoundError`.\r\n', 'comment_created': datetime.datetime(2021, 6, 23, 9, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656924535, 'comment_body': 'This function is should go also where the other `find_*` functions are.', 'comment_created': datetime.datetime(2021, 6, 23, 9, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656925820, 'comment_body': 'Leave a blank line between the docstring and the code.', 'comment_created': datetime.datetime(2021, 6, 23, 9, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656928530, 'comment_body': 'Same as before.', 'comment_created': datetime.datetime(2021, 6, 23, 9, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656929371, 'comment_body': 'Check also that the parent is `subgroup`.', 'comment_created': datetime.datetime(2021, 6, 23, 9, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656932556, 'comment_body': 'Leave a blank line between docstring and code.', 'comment_created': datetime.datetime(2021, 6, 23, 9, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656933679, 'comment_body': 'Because `organization` and `parent_name` can be None, reorganize the definition as explained before.', 'comment_created': datetime.datetime(2021, 6, 23, 9, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656934501, 'comment_body': 'Same comment with the definition of the function as before.', 'comment_created': datetime.datetime(2021, 6, 23, 9, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656934923, 'comment_body': ""You should reword this because the group doesn't need to belong to an organization."", 'comment_created': datetime.datetime(2021, 6, 23, 9, 45, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 656937717, 'comment_body': 'Please, organize this test (and the other ones) so we can read them better. For example:\r\n\r\n```\r\napi.add_group(self.ctx, ""Example"", None, ""suborg"")\r\n\r\ntrx_date = datetime_utcnow()\r\n\r\nwith self.assertRaisesRegex(InvalidValueError, GROUP_ORG_NAME_MISSING):\r\n     api.delete_group(self.ctx, None, ""suborg"")\r\n\r\ntransactions = Transaction.objects.filter(created_at__gt=trx_date)\r\nself.assertEqual(len(transactions), 0)\r\n```\r\n', 'comment_created': datetime.datetime(2021, 6, 23, 9, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 658878286, 'comment_body': ""What do you suggest? OrganizationGroup doesnt make much sense since we discussed that some group don't have to be linked to organizations."", 'comment_created': datetime.datetime(2021, 6, 25, 16, 6, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 658879088, 'comment_body': 'Got it, I forgot to format the file and break down lines with >80 chars, will do', 'comment_created': datetime.datetime(2021, 6, 25, 16, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 658903259, 'comment_body': ""To be honest, I'm more towards `Team` to be honest. Many people know about GitHub teams so it's easy to understand what it is. "", 'comment_created': datetime.datetime(2021, 6, 25, 16, 47, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 658919004, 'comment_body': ""Works for me! I had an initial impression that Team might only feel like small groups (I don't know much about Github teams). However, if you think it will work, we can make the model into Team and call the table 'teams'"", 'comment_created': datetime.datetime(2021, 6, 25, 17, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 658937146, 'comment_body': ""yes, just caught this. I should have put in a unit test for this one. I think I can override the model's validate_unique or clean function to catch this.  What are your thoughts? "", 'comment_created': datetime.datetime(2021, 6, 25, 17, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659161362, 'comment_body': '@sduenas I have added a `validate_unique` function to the model and called `group.full_clean()` before saving the objects in `add_group` function in `db.py`. It catches this error. Do you think that will suffice? I will add sufficient tests as well.', 'comment_created': datetime.datetime(2021, 6, 26, 12, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294315, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294323, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 50, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294326, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 50, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294333, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 50, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294338, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294394, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 51, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294396, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 51, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294400, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294404, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 51, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294425, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294446, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659294459, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2021, 6, 27, 9, 51, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 659725342, 'comment_body': ""We need a test for that case to check that it doesn't let it create two groups/teams with the same name and org = NULL."", 'comment_created': datetime.datetime(2021, 6, 28, 12, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 659942011, 'comment_body': 'Done :+1', 'comment_created': datetime.datetime(2021, 6, 28, 16, 34, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 660371490, 'comment_body': ""This shouldn't mention `organization` because it's only optional."", 'comment_created': datetime.datetime(2021, 6, 29, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 660374614, 'comment_body': ""```suggestion\r\n\r\n    if model == Team:\r\n        eid = m.group('value').split('-')[0]\r\n        \r\n```"", 'comment_created': datetime.datetime(2021, 6, 29, 8, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 660380663, 'comment_body': ""This function is not really supposed to do that. Do you think we can find something else? This method will slow the process. Usually it's better to try to write and get the error that ask first."", 'comment_created': datetime.datetime(2021, 6, 29, 8, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 660381342, 'comment_body': '```suggestion\r\n        """""" Check if parent is able to be found""""""\r\n        \r\n```', 'comment_created': datetime.datetime(2021, 6, 29, 8, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 660383612, 'comment_body': 'Remove this line here.', 'comment_created': datetime.datetime(2021, 6, 29, 8, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 660443287, 'comment_body': ""@sduenas Yes, we need to figure out some way to add this validation though. Because if teams have orgs as NULL, the inbuilt validation just doesn't work. This is going to test for every node that has orgs as NULL and I agree that its going to affect the performance if we have too many teams without orgs.  Is there any alternative that you can suggest or shall I dig around more and see what I can find?"", 'comment_created': datetime.datetime(2021, 6, 29, 9, 29, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 662044373, 'comment_body': ""I don't exactly remember how we do this with the identities. The problem should be the same. Can you check it? Because I couldn't find it."", 'comment_created': datetime.datetime(2021, 7, 1, 7, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}]","[{'commit_sha': 'e4ff708fff3d3454f7b0190926b58a90d4cf7cef', 'committer_username': 'Rashmi-K-A', 'committer_name': 'Rashmi K A', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 1, 5, 42, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bab7d32822828f52156a48aa2af93be60f798e5', 'committer_username': 'Rashmi-K-A', 'committer_name': 'Rashmi K A', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 1, 5, 42, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7098743caee928dd68effbcebfa793979f65bc1', 'committer_username': 'Rashmi-K-A', 'committer_name': 'Rashmi K A', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 1, 5, 42, 21, tzinfo=datetime.timezone.utc)}]",Rashmi K A,39820442,,User,,34,,3,5
687823856,[schema] Add GraphQL layer for teams,"This PR includes the changes for extending the GraphQL layer to manipulate Team objects. It adds a query for searching through Team objects and two mutations - `AddTeam` and `DeleteTeam` for creating and deleting Team objects respectively.

This PR closes #558.
",True,562,https://api.github.com/repos/chaoss/grimoirelab-sortinghat/pulls/562,https://github.com/chaoss/grimoirelab-sortinghat/pull/562,closed,757,0,2,1,5,0,0,0,[],2021-07-12 13:03:00+00:00,2021-07-19 10:24:48+00:00,595308.0,"6 days, 21:21:48",[],"[{'commit_sha': 'a02f4a045c7ecf95904b2750db8729d9ad69e0ea', 'committer_username': 'Rashmi-K-A', 'committer_name': 'Rashmi K A', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 1, 5, 42, 21, tzinfo=datetime.timezone.utc)}]",Rashmi K A,39820442,,User,,34,,3,5
687921458,[api] Fix delete_team method,"Previously, the delete_team method could not handle deleting teams
that do not belong to any organization. This change removes the
requirement for delete_team to have organization as a parameter.

Signed-off-by: Rashmi-K-A <k.a.rashmi04@gmail.com>",True,563,https://api.github.com/repos/chaoss/grimoirelab-sortinghat/pulls/563,https://github.com/chaoss/grimoirelab-sortinghat/pull/563,closed,20,24,2,1,0,0,0,0,[],2021-07-12 14:59:45+00:00,2021-07-15 09:48:05+00:00,240500.0,"2 days, 18:48:20",[],"[{'commit_sha': '3dd78f12caa2c710fa66901999c1a6b8eed8ecfc', 'committer_username': 'Rashmi-K-A', 'committer_name': 'Rashmi K A', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 1, 5, 42, 21, tzinfo=datetime.timezone.utc)}]",Rashmi K A,39820442,,User,,34,,3,5
707533284,[ui] add TeamModal component,"This commit adds a modal component to the Organizations
table. On clicking the View teams button in the table,
this modal opens up displaying all the top level teams
of the organization.

Signed-off-by: Rashmi-K-A <k.a.rashmi04@gmail.com>",True,582,https://api.github.com/repos/chaoss/grimoirelab-sortinghat/pulls/582,https://github.com/chaoss/grimoirelab-sortinghat/pull/582,closed,1485,88,15,1,2,16,0,0,[],2021-08-10 17:46:39+00:00,2021-08-17 14:17:08+00:00,592229.0,"6 days, 20:30:29","[{'comment_id': 686804643, 'comment_body': ""If you move this `v-if` to `<v-treeview>` you don't need a `v-else` for the button below, it would always be displayed."", 'comment_created': datetime.datetime(2021, 8, 11, 12, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'evamillan', 'type': 'User'}, {'comment_id': 686806939, 'comment_body': ""I don't think you need this, you can use `this.teams` directly on the treeview."", 'comment_created': datetime.datetime(2021, 8, 11, 13, 0, 21, tzinfo=datetime.timezone.utc), 'commenter': 'evamillan', 'type': 'User'}, {'comment_id': 686808880, 'comment_body': ""If there is no pagination we probably don't need all this data."", 'comment_created': datetime.datetime(2021, 8, 11, 13, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'evamillan', 'type': 'User'}, {'comment_id': 686812990, 'comment_body': 'This can be moved to the `filters` initialization in `data()`.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'evamillan', 'type': 'User'}, {'comment_id': 686819568, 'comment_body': ""This looks a bit redundant, maybe adding one level of `subteams` to the query would make this initialization of `children` unnecessary and improve the UX. Right now, all teams have an arrow by their name, implying they have subteams, and when you click one that doesn't have children it looks like a bug. What do you think?"", 'comment_created': datetime.datetime(2021, 8, 11, 13, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'evamillan', 'type': 'User'}, {'comment_id': 686895462, 'comment_body': 'It would help for just that one level, sure. But the first level down there would still have to have the arrows because we dont know which of the children in the first level are leaf teams and which of them have subteams. The easiest way to make all of this simpler would be to just write a query for around five levels of subteams and construct the org tree on component creation. It would simplify a lot of the code in the rest of the functions as well. What do you think? \r\n', 'comment_created': datetime.datetime(2021, 8, 11, 14, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 686907517, 'comment_body': '> * I thought we would display the number of teams and the top level ones on the organizations table, it could be useful to have that bit of information there. In any case, the expanded view can look tidier if the ""Domains"" and ""Teams"" text has the same size and is aligned.\r\n\r\nIt would be a good idea to show total temas yes, but our query right now only shows top level teams when we filter by org in the graphql layer. We cant get all the teams in an org, so am not sure how we would get total count of teams', 'comment_created': datetime.datetime(2021, 8, 11, 14, 50, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 686980540, 'comment_body': ""You're right, it would only work for the first level, after that we'd have the same problem. What about using the `numchild` field for this? If it's other than 0, you can assume there are children and add the empty array then.\r\nI agree that writing a query with multiple levels would simplify the code a lot, but we would have to set an artificial limit of levels somewhere, so I'm not sure about it."", 'comment_created': datetime.datetime(2021, 8, 11, 16, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'evamillan', 'type': 'User'}, {'comment_id': 687044124, 'comment_body': 'I believe we are working on a ticket to hide those fields as they fall under implementation details. Check -  https://github.com/chaoss/grimoirelab-sortinghat/issues/569, but having numChildren might be useful. We could check with Santiago about exposing just that field but we dont actually have it as part of the Teams model. \r\n\r\n\r\nI agree, I am not in favor of limiting the depth as well. Further, the issue with displaying subteams is also related to this.  The load-children call is made only the first time the component encounters an empty `children` array for a node, so when you dont have any children for a team and you have already expanded the arrow(which means the load-children function was already called once), adding a new child doesnt display the child. The other two cases (1. displaying a new subteam of a node that already has subteams AND 2. displaying a new subteam for a node that hasnt been expanded yet) has been covered wiht my conditions but I couldnt figure out a way to capture this.\r\n', 'comment_created': datetime.datetime(2021, 8, 11, 17, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 687484202, 'comment_body': 'I think new subteams are not being updated properly because of the condition on the `add` function on line 244 `if (parent.children.length > 0)`. It only adds the child if there are other children.', 'comment_created': datetime.datetime(2021, 8, 12, 8, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'evamillan', 'type': 'User'}, {'comment_id': 687568732, 'comment_body': 'otherwise if i dont have that condition , vue would  see that the children array is not empty so it would never call load children. none of the other subteams would show up\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 9, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 687569433, 'comment_body': 'an alternate is to call get subteams as part of the call for add team for the parent passed', 'comment_created': datetime.datetime(2021, 8, 12, 10, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 687579523, 'comment_body': '> an alternate is to call get subteams as part of the call for add team for the parent passed\r\n\r\nThis could work, can you try it?', 'comment_created': datetime.datetime(2021, 8, 12, 10, 15, 24, tzinfo=datetime.timezone.utc), 'commenter': 'evamillan', 'type': 'User'}, {'comment_id': 687580982, 'comment_body': 'yep, sure can! And about using numchildren as a way of checking whether a team has any chlidren, where did we land on that? If you think its a good idea, I ll loop in Santiago to confirm from his side if its ok\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 10, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}, {'comment_id': 687588670, 'comment_body': ""Yes, I think it's the best way to check for children if we don't want to limit the depth of subteams."", 'comment_created': datetime.datetime(2021, 8, 12, 10, 29, 34, tzinfo=datetime.timezone.utc), 'commenter': 'evamillan', 'type': 'User'}, {'comment_id': 687606329, 'comment_body': 'Sure I ll put in the changes\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 10, 57, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}]","[{'commit_sha': 'b49f48f11926be470b9304a01da102bc72c209e2', 'committer_username': 'Rashmi-K-A', 'committer_name': 'Rashmi K A', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 1, 5, 42, 21, tzinfo=datetime.timezone.utc)}]",Rashmi K A,39820442,,User,,34,,3,5
703684636,[schema] Add `subteams` field to Team objects in GraphQL,"Resolves: #568 

This commit adds the `subteams` field to the Team object.
`subteams` can be resolved recursively within the query multiple times.
As a result of adding subteams, this commit modifies the resolver for
Team objects to return teams of only one level at any point of time
unless the `subteams` field is requested in query.

Signed-off-by: Rashmi-K-A <k.a.rashmi04@gmail.com>",True,577,https://api.github.com/repos/chaoss/grimoirelab-sortinghat/pulls/577,https://github.com/chaoss/grimoirelab-sortinghat/pull/577,closed,78,22,2,1,2,3,0,0,[],2021-08-04 16:12:54+00:00,2021-08-06 07:02:00+00:00,139746.0,"1 day, 14:49:06","[{'comment_id': 682814886, 'comment_body': 'It might be better to change the order of this. First check the `subteams[0]` and later `subteams[1]`.', 'comment_created': datetime.datetime(2021, 8, 4, 17, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 683601457, 'comment_body': 'Although I understand it, I think it will be better to add a comment at the beginning of the if block explaining what it does.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 683655006, 'comment_body': '@sduenas  Done :+1:\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 17, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}]","[{'commit_sha': 'c8364669e52bd2543aceb422ff859b6effdb6884', 'committer_username': 'Rashmi-K-A', 'committer_name': 'Rashmi K A', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 1, 5, 42, 21, tzinfo=datetime.timezone.utc)}]",Rashmi K A,39820442,,User,,34,,3,5
705396551,[schema] Add query for groups,"This commit adds the groups query to GraphQL.
The groups query allows users to query for unaffiliated
groups in the registry.

Signed-off-by: Rashmi-K-A <k.a.rashmi04@gmail.com>",True,580,https://api.github.com/repos/chaoss/grimoirelab-sortinghat/pulls/580,https://github.com/chaoss/grimoirelab-sortinghat/pull/580,closed,348,11,2,1,0,5,0,0,[],2021-08-06 11:05:33+00:00,2021-08-09 08:17:05+00:00,249092.0,"2 days, 21:11:32","[{'comment_id': 684298012, 'comment_body': '```suggestion\r\n    def resolve_groups(self, info, filters=None, page=1,\r\n                       page_size=settings.DEFAULT_GRAPHQL_PAGE_SIZE, **kwargs):\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 14, 53, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 684299895, 'comment_body': ""Can we change the name of this function? Maybe to `apply_team_query_filters` or `set_team_query_filters`. Also, we don't want to make this function available to others outside of the module, so it should start with `__`."", 'comment_created': datetime.datetime(2021, 8, 6, 14, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 684300127, 'comment_body': 'Can you add also some docstrings to this function?', 'comment_created': datetime.datetime(2021, 8, 6, 14, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 684310915, 'comment_body': 'Docstring is missing.', 'comment_created': datetime.datetime(2021, 8, 6, 15, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sduenas', 'type': 'User'}, {'comment_id': 684337672, 'comment_body': 'Its not working with __ since the resolvers arent able to access it.@sduenas ', 'comment_created': datetime.datetime(2021, 8, 6, 15, 50, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Rashmi-K-A', 'type': 'User'}]","[{'commit_sha': 'd1580cbd9d14699735fb31f1c87da54772c879f3', 'committer_username': 'Rashmi-K-A', 'committer_name': 'Rashmi K A', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 1, 5, 42, 21, tzinfo=datetime.timezone.utc)}]",Rashmi K A,39820442,,User,,34,,3,5

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
24677113,grimoirelab-sortinghat,chaoss/grimoirelab-sortinghat,Python,83,52,17,29,2026,27,2,6,"[{'id': 707533284, 'number': 582, 'closed': datetime.datetime(2021, 8, 17, 14, 17, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 17, 46, 39, tzinfo=datetime.timezone.utc), 'time_taken': 592229.0, 'time_delta': '6 days, 20:30:29', 'additions': 1485, 'deletions': 88, 'state': 'closed'}, {'id': 705396551, 'number': 580, 'closed': datetime.datetime(2021, 8, 9, 8, 17, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 11, 5, 33, tzinfo=datetime.timezone.utc), 'time_taken': 249092.0, 'time_delta': '2 days, 21:11:32', 'additions': 348, 'deletions': 11, 'state': 'closed'}, {'id': 703684636, 'number': 577, 'closed': datetime.datetime(2021, 8, 6, 7, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 16, 12, 54, tzinfo=datetime.timezone.utc), 'time_taken': 139746.0, 'time_delta': '1 day, 14:49:06', 'additions': 78, 'deletions': 22, 'state': 'closed'}, {'id': 687921458, 'number': 563, 'closed': datetime.datetime(2021, 7, 15, 9, 48, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 14, 59, 45, tzinfo=datetime.timezone.utc), 'time_taken': 240500.0, 'time_delta': '2 days, 18:48:20', 'additions': 20, 'deletions': 24, 'state': 'closed'}, {'id': 687823856, 'number': 562, 'closed': datetime.datetime(2021, 7, 19, 10, 24, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 13, 3, tzinfo=datetime.timezone.utc), 'time_taken': 595308.0, 'time_delta': '6 days, 21:21:48', 'additions': 757, 'deletions': 0, 'state': 'closed'}, {'id': 675626947, 'number': 552, 'closed': datetime.datetime(2021, 7, 7, 7, 14, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 17, 29, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1259098.0, 'time_delta': '14 days, 13:44:58', 'additions': 801, 'deletions': 2, 'state': 'closed'}]"
