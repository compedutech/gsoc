pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
465496038,"[GSoC] GPU-enabled OpenCV.js, add webgpu-dawn support for dnn module.","### Overview

- Proposal : [GPU-enabled OpenCV.js](https://summerofcode.withgoogle.com/dashboard/project/5352882720735232/details/)

- Mentor : Zhiwen Wu @wzw-intel, Ningxin Hu @huningxin 

- Student : Hao Jiang [@NALLEIN](https://github.com/NALLEIN)

<cut/>

### This pull request changes

- **Done**

1. Use [Dawn , a  webgpu implemention ](https://dawn.googlesource.com/dawn)to implement some operators under the opencv/modules/dnn module, refer to [the implementation of Vulkan](https://github.com/opencv/opencv/pull/12703) and reuse the shader. Passed the corresponding test cases on ubuntu.

```
git clone https://github.com/opencv/opencv_extra.git
export OPENCV_TEST_DATA_PATH=${PATH_TO}/opencv_extra/testdata

sudo apt-get install libvulkan1 mesa-vulkan-drivers vulkan-utils
git clone https://github.com/NALLEIN/opencv.git
cd opencv/
git checkout -b layerTest origin/gsoc_2020_webgpu
mkdir build
cd build
cmake -D CMAKE_BUILD_TYPE=Release -DWITH_WEBGPU=ON -D CMAKE_INSTALL_PREFIX=/usr/local ..
make -j8
$(PATH_TO_OPENCV)/build/bin/opencv_test_dnn --gtest_filter=*layers*
```

2. Use [emscripten](https://emscripten.org/) to compile Dawn's API into a wasm format that can be executed in the chrome browser. This module can be compiled to JavaScript using `--build_webgpu` flag, E.g ``` python ./platforms/js/build_js.py build_js --build_webgpu```.
Use the latest [emsdk](https://emscripten.org/docs/getting_started/downloads.html)  version 1.40.1, you can refer to [opencv.js tutorials ](https://docs.opencv.org/3.4/d4/da1/tutorial_js_setup.html)to set up the environment.

- **To do** 

1. Verify wheher the DNN_BACKEND_WGPU compiled by emscripten can run correctly in chrome.

2. Write the unit test and perf test for DNN_BACKEND_WGPU.


```
force_builders_only=linux,docs,Custom
buildworker:Custom=linux-4
build_image:Docs=docs-js
build_image:Custom=javascript-webgpu:1.40.1
```",False,18066,https://api.github.com/repos/opencv/opencv/pulls/18066,https://github.com/opencv/opencv/pull/18066,open,7561,39,82,1,25,33,4,0,"[{'name': 'feature'}, {'name': 'GSoC'}, {'name': 'category: dnn'}, {'name': 'category: javascript (js)'}]",2020-08-10 13:20:45+00:00,,0.0,,"[{'comment_id': 473818888, 'comment_body': ""The `ArrayBuffer` doesn't convert to `void*`. You may need to alloc the memory on Wasm heap and copy the data of `arrayBuffer` to that memory. After use, you need to free that memory in your C code.\r\n\r\nHere are some references:\r\nhttps://emscripten.org/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html#access-memory-from-javascript\r\nhttps://emscripten.org/docs/api_reference/emscripten.h.html#c.EM_JS"", 'comment_created': datetime.datetime(2020, 8, 20, 9, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 480598210, 'comment_body': 'Please document the commit of dawn that you tested.', 'comment_created': datetime.datetime(2020, 9, 1, 2, 11, 41, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 480600111, 'comment_body': 'Please add an option for webgpu build. The default build should be without webgpu support.', 'comment_created': datetime.datetime(2020, 9, 1, 2, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 480604138, 'comment_body': 'Please avoid removing this constructor.', 'comment_created': datetime.datetime(2020, 9, 1, 2, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 480604874, 'comment_body': 'If there is a conflict with other constructors, please try class function instead.', 'comment_created': datetime.datetime(2020, 9, 1, 2, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 480608283, 'comment_body': 'Please webgpu to guard these compiler switches.', 'comment_created': datetime.datetime(2020, 9, 1, 2, 21, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 480627876, 'comment_body': 'Please test the CPU backend first and assert its result.', 'comment_created': datetime.datetime(2020, 9, 1, 2, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481068756, 'comment_body': 'Please allow to use custom path, like ""WEBGPU_ROOT_DIR"" (as CMake or environment variable)', 'comment_created': datetime.datetime(2020, 9, 1, 11, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 481069227, 'comment_body': '> NOT EMSCRIPTEN\r\n\r\nIs it correct?', 'comment_created': datetime.datetime(2020, 9, 1, 11, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 481069925, 'comment_body': ""> WGPU\r\n\r\nLet's use clear names: WEBGPU (at least in public API)"", 'comment_created': datetime.datetime(2020, 9, 1, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 481070243, 'comment_body': 'Probably this should be moved to dnn/CMakeLists.txt', 'comment_created': datetime.datetime(2020, 9, 1, 11, 33, 43, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 481072272, 'comment_body': 'Please add OpenCV short license header: https://github.com/opencv/opencv/wiki/Coding_Style_Guide#file-structure\r\n```\r\n// This file is part of OpenCV project.\r\n// It is subject to the license terms in the LICENSE file found in the top-level directory\r\n// of this distribution and at http://opencv.org/license.html.\r\n```\r\n\r\n(all created .cpp/.hpp files except samples)', 'comment_created': datetime.datetime(2020, 9, 1, 11, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 481072666, 'comment_body': 'Please restore new-line in EOF', 'comment_created': datetime.datetime(2020, 9, 1, 11, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 481072910, 'comment_body': '> dawnUtils.cpp \r\n\r\nPlease use lowercase filenames only.', 'comment_created': datetime.datetime(2020, 9, 1, 11, 39, 2, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 481073519, 'comment_body': 'Do we really need that binary blob?\r\nHow to reproduce that?', 'comment_created': datetime.datetime(2020, 9, 1, 11, 40, 11, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 481076746, 'comment_body': '> retained in opencv/3rdparty/include/webgpu\r\n\r\nIt is bad idea to modify source tree.\r\n\r\nUse dedicated standalone directory for preparing 3rdparty dependency instead. See note about `WEBGPU_ROOT_DIR` below', 'comment_created': datetime.datetime(2020, 9, 1, 11, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 481096230, 'comment_body': 'Yes, this is the corret flag according to https://github.com/kainino0x/webgpu-cross-platform-demo/blob/main/CMakeLists.txt#L7', 'comment_created': datetime.datetime(2020, 9, 1, 12, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'NALLEIN', 'type': 'User'}, {'comment_id': 481096863, 'comment_body': ""WGPU is the same as the Dawn's namespace `wgpu::`."", 'comment_created': datetime.datetime(2020, 9, 1, 12, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'NALLEIN', 'type': 'User'}, {'comment_id': 481099684, 'comment_body': 'Yes, these are pre-compiled shaders in [SPIR-V format](https://www.khronos.org/spir/). We can generate the SPIR-V shaders through the `spirv_generator.py` in `modules/dnn/src/webgpu/shader`.', 'comment_created': datetime.datetime(2020, 9, 1, 12, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'NALLEIN', 'type': 'User'}, {'comment_id': 481523621, 'comment_body': 'WEBGPU is clearer for backend name. Please use that.', 'comment_created': datetime.datetime(2020, 9, 2, 1, 22, 17, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 481524262, 'comment_body': 'I believe vkcom backend also uses this way, does it @wzw-intel ?', 'comment_created': datetime.datetime(2020, 9, 2, 1, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 484156579, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2020, 9, 7, 2, 43, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wzw-intel', 'type': 'User'}, {'comment_id': 484612938, 'comment_body': 'Could you please avoid copying `webgpu_cpp.cpp` into `modules/dnn/src/webgpu/src`? Instead you can add this file into `SOURCE` of `dnn` module when `WITH_WEBGPU` is set. Please look into `modules/dnn/CMakeLists.txt` and `ocv_glob_module_sources` for details. \r\n\r\n@alalek , any comments here?', 'comment_created': datetime.datetime(2020, 9, 8, 2, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 485563038, 'comment_body': ""Done, I've moved this into `modules/dnn/CMakeLists.txt` and updated READEME.md. PTAL @huningxin @alalek !"", 'comment_created': datetime.datetime(2020, 9, 9, 12, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'NALLEIN', 'type': 'User'}, {'comment_id': 488326387, 'comment_body': 'Looks good, thanks!', 'comment_created': datetime.datetime(2020, 9, 15, 1, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'huningxin', 'type': 'User'}, {'comment_id': 518325287, 'comment_body': 'Remove this from the patch (it is enough to have this in PR description).', 'comment_created': datetime.datetime(2020, 11, 5, 19, 52, 18, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 518607677, 'comment_body': ""> > --build_webgpu\r\n> \r\n> This doesn't look to work properly.\r\n> \r\n> CMake emits warning:\r\n> \r\n> ```\r\n> CMake Warning at cmake/OpenCVDetectWebGPU.cmake:19 (message):\r\n>   Can't use WebGPU-Dawn\r\n> ```\r\n> \r\n\r\nDid you [pre-build the Dawn project](https://dawn.googlesource.com/dawn/+/HEAD/docs/buiding.md)? This PR has third-party dependencies and temporarily work with Dawn comment : `0b89b27263b127a46371641b299fdf0f2cd7caff`.\r\n@alalek "", 'comment_created': datetime.datetime(2020, 11, 6, 8, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'NALLEIN', 'type': 'User'}, {'comment_id': 518640355, 'comment_body': ""Actually, I skipped the first section of PR's description with native code and `dawn` project.\r\nThese steps doesn't use Emscripten and doesn't produce opencv.js with WebGPU support:\r\n```\r\ncmake -D CMAKE_BUILD_TYPE=Release -DWITH_WEBGPU=ON -D CMAKE_INSTALL_PREFIX=/usr/local ..\r\nmake -j8\r\n```\r\n\r\nThis comment is about the second section with `build_js.py --build_webgpu`.\r\nExpected utilization of this: https://github.com/emscripten-core/emscripten/blob/master/system/include/webgpu/webgpu.h\r\n\r\n/cc @huningxin What is expected to work in this patch?"", 'comment_created': datetime.datetime(2020, 11, 6, 9, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 520203910, 'comment_body': 'I checked `cvconfig.h` content from `build_js.py --build_webgpu` flow:\r\n```\r\n/* WebGPU-Dawn support */\r\n/* #undef HAVE_WEBGPU */\r\n#define DAWN_EMSDK\r\n/* #undef DAWN_METAL */\r\n```\r\n\r\nProbably there is something wrong in CMake scripts.', 'comment_created': datetime.datetime(2020, 11, 10, 0, 17, 8, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 523709525, 'comment_body': ""> Actually, I skipped the first section of PR's description with native code and `dawn` project.\r\n> These steps doesn't use Emscripten and doesn't produce opencv.js with WebGPU support:\r\n> \r\n> ```\r\n> cmake -D CMAKE_BUILD_TYPE=Release -DWITH_WEBGPU=ON -D CMAKE_INSTALL_PREFIX=/usr/local ..\r\n> make -j8\r\n> ```\r\n> \r\n> This comment is about the second section with `build_js.py --build_webgpu`.\r\n> Expected utilization of this: https://github.com/emscripten-core/emscripten/blob/master/system/include/webgpu/webgpu.h\r\n> \r\n> /cc @huningxin What is expected to work in this patch?\r\n\r\nTo generate the corresponding binary file requires the first step, build native dawn. A third-party Dawn dependency is needed here, because WebGPU is implemented in native based on Dawn project.\r\nBesides， I’m sorry I didn’t reply in time because of the school’s midterm exam.\r\n@alalek \r\n\r\n"", 'comment_created': datetime.datetime(2020, 11, 15, 5, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'NALLEIN', 'type': 'User'}, {'comment_id': 523710543, 'comment_body': 'According to [WebGPU demo](https://github.com/kainino0x/webgpu-cross-platform-demo) there are 2 cases:\r\n- Native build (using dawn)\r\n- Web build (to run in browser)\r\n\r\nThey are **independent**.\r\n\r\nThis thread is about ""Web build"" flavor.\r\nDoes it expected to work here?', 'comment_created': datetime.datetime(2020, 11, 15, 5, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'alalek', 'type': 'User'}, {'comment_id': 523712473, 'comment_body': '> According to [WebGPU demo](https://github.com/kainino0x/webgpu-cross-platform-demo) there are 2 cases:\r\n> \r\n> * Native build (using dawn)\r\n> * Web build (to run in browser)\r\n> \r\n> They are **independent**.\r\n> \r\n> This thread is about ""Web build"" flavor.\r\n> Does it expected to work here?\r\n\r\nYes, they are independent,  emscripten can map Dawn\'s C++ API to WebGPU\'s API. But build opencv.js will not generate binary files corresponding to cpp files.  The finally generated opencv.js file is in the opencv/build_js/bin directory.', 'comment_created': datetime.datetime(2020, 11, 15, 5, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'NALLEIN', 'type': 'User'}, {'comment_id': 581862529, 'comment_body': ""Do this mean it wouldn't generate library file could link by c++ program(ex : libopencv_dnn.a)?Would like to port the native app to browser in order to perform object detection/fall down classification."", 'comment_created': datetime.datetime(2021, 2, 24, 10, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'stereomatchingkiss', 'type': 'User'}]","[{'commit_sha': 'd5bebf0eb775bf9dec5d36eb771374da74f059b8', 'committer_username': 'NALLEIN', 'committer_name': 'JiangHao', 'committer_email': 'cclairets@gmail.com', 'commit_date': datetime.datetime(2017, 9, 12, 11, 59, 34, tzinfo=datetime.timezone.utc)}]",JiangHao,31888869,cclairets@gmail.com,User,,77,,42,5

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
5108051,opencv,opencv/opencv,C++,55707,77598,2655,2195,34493,2598,6,132,"[{'id': 465496038, 'number': 18066, 'closed': None, 'created': datetime.datetime(2020, 8, 10, 13, 20, 45, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 7561, 'deletions': 39, 'state': 'open'}]"
