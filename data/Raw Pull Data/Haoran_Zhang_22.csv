pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1370906613,[#123]Common functionalities for querying server version,"Created some functions to get server version, and for more, since now people can create whatever query message with the query they want",True,125,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/125,https://github.com/pgmoneta/pgmoneta/pull/125,closed,78,0,5,1,1,0,1,1,[{'name': 'feature'}],2023-05-30 18:26:54+00:00,2023-05-31 16:21:28+00:00,78874.0,21:54:34,[],"[{'commit_sha': 'aafdd9c454269324982e41a72d6973582b49132b', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1430125200,[#123] Base backup functionality integration,,True,134,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/134,https://github.com/pgmoneta/pgmoneta/pull/134,closed,225,139,3,1,3,4,0,0,[],2023-07-11 20:11:51+00:00,2023-07-12 18:34:15+00:00,80544.0,22:22:24,"[{'comment_id': 1261087761, 'comment_body': 'Sorting', 'comment_created': datetime.datetime(2023, 7, 12, 12, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261087936, 'comment_body': 'Sorting', 'comment_created': datetime.datetime(2023, 7, 12, 12, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261580875, 'comment_body': 'This one is always first', 'comment_created': datetime.datetime(2023, 7, 12, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261583547, 'comment_body': ""ðŸ˜† So sorry about that. It's fixed now."", 'comment_created': datetime.datetime(2023, 7, 12, 18, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'e9637e0a6d26e2694ec33388ee0b23cba56d9b4b', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1396900217,[#123] Receive and consume copy stream messages,"Finally, I resolved the bug (that was a stupid mistake)! This PR cosists of two functionalities:

One to read data from server into a buffer, it will left shift consumed data to reuse space, I tested locally and it was perfect, did not once exceed its original buffer size. For the sake of simplicity I just use the default buffer size (65535B), in the future we could have some configuration for the user to specify how big they want the stream buffer to be.

Another one is to parse data in the buffer, consume data into messages. It will block and return one message by another, and it will filter out those messages we are not interested in the stream replication process. And it will automatically read new data if current message is not complete.

I tested locally and it works perfectly, just as the protocal says, two DataRow messages, one CopyOutResponse then a bunch of CopyData, then finishes by a CopyDone message.

Let me know if you have questions.",True,127,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/127,https://github.com/pgmoneta/pgmoneta/pull/127,closed,261,0,4,1,3,10,1,1,[{'name': 'feature'}],2023-06-17 21:41:41+00:00,2023-06-20 16:26:39+00:00,240298.0,"2 days, 18:44:58","[{'comment_id': 1235272953, 'comment_body': 'Missing line feed above', 'comment_created': datetime.datetime(2023, 6, 20, 13, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235274192, 'comment_body': 'Lets call it `buffer`', 'comment_created': datetime.datetime(2023, 6, 20, 13, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235274522, 'comment_body': 'Lets align documentation comments', 'comment_created': datetime.datetime(2023, 6, 20, 13, 31, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235278061, 'comment_body': '`struct stream_buffer** stream_buf` -> `struct stream_buffer** buffer`', 'comment_created': datetime.datetime(2023, 6, 20, 13, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235278914, 'comment_body': ""I'm using `Uncrustify_d-0.76.0_f` - your version ?"", 'comment_created': datetime.datetime(2023, 6, 20, 13, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235444922, 'comment_body': ""I was using 0.75... Anyway it's fixed now."", 'comment_created': datetime.datetime(2023, 6, 20, 15, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1235474070, 'comment_body': 'buffer -> stream_buffer', 'comment_created': datetime.datetime(2023, 6, 20, 15, 51, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235474362, 'comment_body': 'buf -> buffer', 'comment_created': datetime.datetime(2023, 6, 20, 15, 52, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235475016, 'comment_body': 'buffer** -> stream_buffer**', 'comment_created': datetime.datetime(2023, 6, 20, 15, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235485749, 'comment_body': ""Oh I thought you want me to change the struct name! I'm on it"", 'comment_created': datetime.datetime(2023, 6, 20, 16, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'f440f5c3103a06efb84b0ffe674bf671e5bde9d3', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1404571862,[#123] Receive and parse DataRow messages in stream buffer,I had to re-implement this functionality similar to `pgmoneta_query_execute`. Because now all the data is in stream buffer. I also made some changes to `pgmoneta_consume_copy_stream` so that I can make use of existing APIs. I think it's better to submit this patch as a sperate PR because the next one (archive_streamer) should be really big and it'll take some time to finish.,True,128,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/128,https://github.com/pgmoneta/pgmoneta/pull/128,closed,112,8,2,1,1,0,1,1,[{'name': 'feature'}],2023-06-23 06:50:04+00:00,2023-06-23 15:38:37+00:00,31713.0,8:48:33,[],"[{'commit_sha': 'f05dd09141307eafdd0230d49e234419cd16546d', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1418889537,[#123] Receive and extract base backup archive,"Finally! This is our native implementation of receiving and extracting the basebackup and the mainfest postgres server sends us. It uses libarchive to do the tar file extraction. We also support tablespaces now, for convenience I had to add the oid feild to the tablespace struct. So that I can keep track of and update the symbolic link easily. Let me know if you find it not ok. 

This implementation only works for server with version < 15, which sends tar file for each tablespaces separately. For server whose version >= 15, everything is sent in one backup stream so it's slightly different. 

I also have hesitations on whether to extract some parts into functions or if I'm putting the functionality in the right file. Feel free to give suggestions.

The correctness has be manually verified. But I couldn't really put it to test until in the end I also implement the xlog streaming.",True,130,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/130,https://github.com/pgmoneta/pgmoneta/pull/130,closed,612,12,15,1,7,12,1,1,[{'name': 'feature'}],2023-07-04 03:01:20+00:00,2023-07-11 12:42:16+00:00,639656.0,"7 days, 9:40:56","[{'comment_id': 1258481242, 'comment_body': 'sorting', 'comment_created': datetime.datetime(2023, 7, 10, 16, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258483555, 'comment_body': '`>= 13`', 'comment_created': datetime.datetime(2023, 7, 10, 16, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258484189, 'comment_body': 'Document the rest, and align comments', 'comment_created': datetime.datetime(2023, 7, 10, 16, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258486996, 'comment_body': 'Can we do with `!strcmp()` ?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258564404, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258568934, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258571304, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572054, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572994, 'comment_body': 'Yeah, just keep this function', 'comment_created': datetime.datetime(2023, 7, 10, 16, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258584078, 'comment_body': ""It's there to deal with null inputs. "", 'comment_created': datetime.datetime(2023, 7, 10, 16, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258584725, 'comment_body': ""Oh that actually reminds me. I didn't check server version when it comes to manifest. I'm on it."", 'comment_created': datetime.datetime(2023, 7, 10, 16, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258587666, 'comment_body': 'Gotcha', 'comment_created': datetime.datetime(2023, 7, 10, 16, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'bc0b35cbc321e21ffce5199206e1cda8f034f200', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1418889537,[#123] Receive and extract base backup archive,"Finally! This is our native implementation of receiving and extracting the basebackup and the mainfest postgres server sends us. It uses libarchive to do the tar file extraction. We also support tablespaces now, for convenience I had to add the oid feild to the tablespace struct. So that I can keep track of and update the symbolic link easily. Let me know if you find it not ok. 

This implementation only works for server with version < 15, which sends tar file for each tablespaces separately. For server whose version >= 15, everything is sent in one backup stream so it's slightly different. 

I also have hesitations on whether to extract some parts into functions or if I'm putting the functionality in the right file. Feel free to give suggestions.

The correctness has be manually verified. But I couldn't really put it to test until in the end I also implement the xlog streaming.",True,130,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/130,https://github.com/pgmoneta/pgmoneta/pull/130,closed,612,12,15,1,7,12,1,1,[{'name': 'feature'}],2023-07-04 03:01:20+00:00,2023-07-11 12:42:16+00:00,639656.0,"7 days, 9:40:56","[{'comment_id': 1258481242, 'comment_body': 'sorting', 'comment_created': datetime.datetime(2023, 7, 10, 16, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258483555, 'comment_body': '`>= 13`', 'comment_created': datetime.datetime(2023, 7, 10, 16, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258484189, 'comment_body': 'Document the rest, and align comments', 'comment_created': datetime.datetime(2023, 7, 10, 16, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258486996, 'comment_body': 'Can we do with `!strcmp()` ?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258564404, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258568934, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258571304, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572054, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572994, 'comment_body': 'Yeah, just keep this function', 'comment_created': datetime.datetime(2023, 7, 10, 16, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258584078, 'comment_body': ""It's there to deal with null inputs. "", 'comment_created': datetime.datetime(2023, 7, 10, 16, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258584725, 'comment_body': ""Oh that actually reminds me. I didn't check server version when it comes to manifest. I'm on it."", 'comment_created': datetime.datetime(2023, 7, 10, 16, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258587666, 'comment_body': 'Gotcha', 'comment_created': datetime.datetime(2023, 7, 10, 16, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'bc0b35cbc321e21ffce5199206e1cda8f034f200', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1430125200,[#123] Base backup functionality integration,,True,134,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/134,https://github.com/pgmoneta/pgmoneta/pull/134,closed,225,139,3,1,3,4,0,0,[],2023-07-11 20:11:51+00:00,2023-07-12 18:34:15+00:00,80544.0,22:22:24,"[{'comment_id': 1261087761, 'comment_body': 'Sorting', 'comment_created': datetime.datetime(2023, 7, 12, 12, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261087936, 'comment_body': 'Sorting', 'comment_created': datetime.datetime(2023, 7, 12, 12, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261580875, 'comment_body': 'This one is always first', 'comment_created': datetime.datetime(2023, 7, 12, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261583547, 'comment_body': ""ðŸ˜† So sorry about that. It's fixed now."", 'comment_created': datetime.datetime(2023, 7, 12, 18, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'e9637e0a6d26e2694ec33388ee0b23cba56d9b4b', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1436362472,Replace archive functionality with libarchive,"I verified the correctness and this seems alright. Server starts normally. Note that this replacement doesn't do anything special with symlinks or tablespaces currently. I think this part should be first handled in restore. So it only does what our archive functionality used to do, nothing more and nothing less.",False,137,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/137,https://github.com/pgmoneta/pgmoneta/pull/137,closed,311,1205,12,1,16,1,1,1,[{'name': 'enhancement'}],2023-07-16 19:40:46+00:00,2023-07-19 09:47:23+00:00,223597.0,"2 days, 14:06:37","[{'comment_id': 1266789237, 'comment_body': 'static', 'comment_created': datetime.datetime(2023, 7, 18, 13, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}]","[{'commit_sha': 'a0759694f99f0384b41227c1332c03929a83d795', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1455275850,[#139] Native receivewal solution,"Hi @jesperpedersen, this is only an initial version of our receivewal solution. I pushed it because I could use some advice before going further. This solution works beautifully and smoothly as I tested locally, I think. Our stream buffer adapts really well, it automatically expands itself just enough to suit the larger xlog messages. I also dealt with cases like server sends data across segment boundary. And it exits on server shutdown or connection close. I also started a server on the received xlogs and everything seems to be normal.

By ""initial"" I mean it doesn't have the ability to deal with older timelines yet. If server sends CommandComplete for reaching the end of timeline, the while loop will simply break instead of starting again on new timeline. And I wonder if it's necessary since the callback is triggerred regularly, if the process exits because of reaching the end of the timeline, next callback will naturally start the process on the next timeline.

Also there is a serious problem, the process doesn't end when I stop pgmoneta by pressing `ctrl+c`. It seems that SIGINT is not propagating to this child process. I'm not very familiar with how signals are handled in pgmoneta, so I could really use your help here.",False,140,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/140,https://github.com/pgmoneta/pgmoneta/pull/140,closed,549,49,5,1,11,0,1,1,[{'name': 'feature'}],2023-07-30 21:51:08+00:00,2023-08-04 13:04:54+00:00,400426.0,"4 days, 15:13:46",[],"[{'commit_sha': 'bbd690ebeee0e0311b5dc49bccf74074b4c04437', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1455275850,[#139] Native receivewal solution,"Hi @jesperpedersen, this is only an initial version of our receivewal solution. I pushed it because I could use some advice before going further. This solution works beautifully and smoothly as I tested locally, I think. Our stream buffer adapts really well, it automatically expands itself just enough to suit the larger xlog messages. I also dealt with cases like server sends data across segment boundary. And it exits on server shutdown or connection close. I also started a server on the received xlogs and everything seems to be normal.

By ""initial"" I mean it doesn't have the ability to deal with older timelines yet. If server sends CommandComplete for reaching the end of timeline, the while loop will simply break instead of starting again on new timeline. And I wonder if it's necessary since the callback is triggerred regularly, if the process exits because of reaching the end of the timeline, next callback will naturally start the process on the next timeline.

Also there is a serious problem, the process doesn't end when I stop pgmoneta by pressing `ctrl+c`. It seems that SIGINT is not propagating to this child process. I'm not very familiar with how signals are handled in pgmoneta, so I could really use your help here.",False,140,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/140,https://github.com/pgmoneta/pgmoneta/pull/140,closed,549,49,5,1,11,0,1,1,[{'name': 'feature'}],2023-07-30 21:51:08+00:00,2023-08-04 13:04:54+00:00,400426.0,"4 days, 15:13:46",[],"[{'commit_sha': 'bbd690ebeee0e0311b5dc49bccf74074b4c04437', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1436362472,Replace archive functionality with libarchive,"I verified the correctness and this seems alright. Server starts normally. Note that this replacement doesn't do anything special with symlinks or tablespaces currently. I think this part should be first handled in restore. So it only does what our archive functionality used to do, nothing more and nothing less.",False,137,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/137,https://github.com/pgmoneta/pgmoneta/pull/137,closed,311,1205,12,1,16,1,1,1,[{'name': 'enhancement'}],2023-07-16 19:40:46+00:00,2023-07-19 09:47:23+00:00,223597.0,"2 days, 14:06:37","[{'comment_id': 1266789237, 'comment_body': 'static', 'comment_created': datetime.datetime(2023, 7, 18, 13, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}]","[{'commit_sha': 'a0759694f99f0384b41227c1332c03929a83d795', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1436362472,Replace archive functionality with libarchive,"I verified the correctness and this seems alright. Server starts normally. Note that this replacement doesn't do anything special with symlinks or tablespaces currently. I think this part should be first handled in restore. So it only does what our archive functionality used to do, nothing more and nothing less.",False,137,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/137,https://github.com/pgmoneta/pgmoneta/pull/137,closed,311,1205,12,1,16,1,1,1,[{'name': 'enhancement'}],2023-07-16 19:40:46+00:00,2023-07-19 09:47:23+00:00,223597.0,"2 days, 14:06:37","[{'comment_id': 1266789237, 'comment_body': 'static', 'comment_created': datetime.datetime(2023, 7, 18, 13, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}]","[{'commit_sha': 'a0759694f99f0384b41227c1332c03929a83d795', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1430125200,[#123] Base backup functionality integration,,True,134,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/134,https://github.com/pgmoneta/pgmoneta/pull/134,closed,225,139,3,1,3,4,0,0,[],2023-07-11 20:11:51+00:00,2023-07-12 18:34:15+00:00,80544.0,22:22:24,"[{'comment_id': 1261087761, 'comment_body': 'Sorting', 'comment_created': datetime.datetime(2023, 7, 12, 12, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261087936, 'comment_body': 'Sorting', 'comment_created': datetime.datetime(2023, 7, 12, 12, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261580875, 'comment_body': 'This one is always first', 'comment_created': datetime.datetime(2023, 7, 12, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261583547, 'comment_body': ""ðŸ˜† So sorry about that. It's fixed now."", 'comment_created': datetime.datetime(2023, 7, 12, 18, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'e9637e0a6d26e2694ec33388ee0b23cba56d9b4b', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1418889537,[#123] Receive and extract base backup archive,"Finally! This is our native implementation of receiving and extracting the basebackup and the mainfest postgres server sends us. It uses libarchive to do the tar file extraction. We also support tablespaces now, for convenience I had to add the oid feild to the tablespace struct. So that I can keep track of and update the symbolic link easily. Let me know if you find it not ok. 

This implementation only works for server with version < 15, which sends tar file for each tablespaces separately. For server whose version >= 15, everything is sent in one backup stream so it's slightly different. 

I also have hesitations on whether to extract some parts into functions or if I'm putting the functionality in the right file. Feel free to give suggestions.

The correctness has be manually verified. But I couldn't really put it to test until in the end I also implement the xlog streaming.",True,130,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/130,https://github.com/pgmoneta/pgmoneta/pull/130,closed,612,12,15,1,7,12,1,1,[{'name': 'feature'}],2023-07-04 03:01:20+00:00,2023-07-11 12:42:16+00:00,639656.0,"7 days, 9:40:56","[{'comment_id': 1258481242, 'comment_body': 'sorting', 'comment_created': datetime.datetime(2023, 7, 10, 16, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258483555, 'comment_body': '`>= 13`', 'comment_created': datetime.datetime(2023, 7, 10, 16, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258484189, 'comment_body': 'Document the rest, and align comments', 'comment_created': datetime.datetime(2023, 7, 10, 16, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258486996, 'comment_body': 'Can we do with `!strcmp()` ?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258564404, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258568934, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258571304, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572054, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572994, 'comment_body': 'Yeah, just keep this function', 'comment_created': datetime.datetime(2023, 7, 10, 16, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258584078, 'comment_body': ""It's there to deal with null inputs. "", 'comment_created': datetime.datetime(2023, 7, 10, 16, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258584725, 'comment_body': ""Oh that actually reminds me. I didn't check server version when it comes to manifest. I'm on it."", 'comment_created': datetime.datetime(2023, 7, 10, 16, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258587666, 'comment_body': 'Gotcha', 'comment_created': datetime.datetime(2023, 7, 10, 16, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'bc0b35cbc321e21ffce5199206e1cda8f034f200', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1430125200,[#123] Base backup functionality integration,,True,134,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/134,https://github.com/pgmoneta/pgmoneta/pull/134,closed,225,139,3,1,3,4,0,0,[],2023-07-11 20:11:51+00:00,2023-07-12 18:34:15+00:00,80544.0,22:22:24,"[{'comment_id': 1261087761, 'comment_body': 'Sorting', 'comment_created': datetime.datetime(2023, 7, 12, 12, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261087936, 'comment_body': 'Sorting', 'comment_created': datetime.datetime(2023, 7, 12, 12, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261580875, 'comment_body': 'This one is always first', 'comment_created': datetime.datetime(2023, 7, 12, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261583547, 'comment_body': ""ðŸ˜† So sorry about that. It's fixed now."", 'comment_created': datetime.datetime(2023, 7, 12, 18, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'e9637e0a6d26e2694ec33388ee0b23cba56d9b4b', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1423780739,[#131] Fix message free function misusage in wf_basebackup,,True,132,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/132,https://github.com/pgmoneta/pgmoneta/pull/132,closed,2,2,1,1,1,0,1,1,[{'name': 'bug'}],2023-07-07 01:30:15+00:00,2023-07-10 14:14:23+00:00,305048.0,"3 days, 12:44:08",[],"[{'commit_sha': '6d9abc2e74fdbd87e321084f3a24b8846766c98c', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1418889537,[#123] Receive and extract base backup archive,"Finally! This is our native implementation of receiving and extracting the basebackup and the mainfest postgres server sends us. It uses libarchive to do the tar file extraction. We also support tablespaces now, for convenience I had to add the oid feild to the tablespace struct. So that I can keep track of and update the symbolic link easily. Let me know if you find it not ok. 

This implementation only works for server with version < 15, which sends tar file for each tablespaces separately. For server whose version >= 15, everything is sent in one backup stream so it's slightly different. 

I also have hesitations on whether to extract some parts into functions or if I'm putting the functionality in the right file. Feel free to give suggestions.

The correctness has be manually verified. But I couldn't really put it to test until in the end I also implement the xlog streaming.",True,130,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/130,https://github.com/pgmoneta/pgmoneta/pull/130,closed,612,12,15,1,7,12,1,1,[{'name': 'feature'}],2023-07-04 03:01:20+00:00,2023-07-11 12:42:16+00:00,639656.0,"7 days, 9:40:56","[{'comment_id': 1258481242, 'comment_body': 'sorting', 'comment_created': datetime.datetime(2023, 7, 10, 16, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258483555, 'comment_body': '`>= 13`', 'comment_created': datetime.datetime(2023, 7, 10, 16, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258484189, 'comment_body': 'Document the rest, and align comments', 'comment_created': datetime.datetime(2023, 7, 10, 16, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258486996, 'comment_body': 'Can we do with `!strcmp()` ?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258564404, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258568934, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258571304, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572054, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572994, 'comment_body': 'Yeah, just keep this function', 'comment_created': datetime.datetime(2023, 7, 10, 16, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258584078, 'comment_body': ""It's there to deal with null inputs. "", 'comment_created': datetime.datetime(2023, 7, 10, 16, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258584725, 'comment_body': ""Oh that actually reminds me. I didn't check server version when it comes to manifest. I'm on it."", 'comment_created': datetime.datetime(2023, 7, 10, 16, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258587666, 'comment_body': 'Gotcha', 'comment_created': datetime.datetime(2023, 7, 10, 16, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'bc0b35cbc321e21ffce5199206e1cda8f034f200', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1418889537,[#123] Receive and extract base backup archive,"Finally! This is our native implementation of receiving and extracting the basebackup and the mainfest postgres server sends us. It uses libarchive to do the tar file extraction. We also support tablespaces now, for convenience I had to add the oid feild to the tablespace struct. So that I can keep track of and update the symbolic link easily. Let me know if you find it not ok. 

This implementation only works for server with version < 15, which sends tar file for each tablespaces separately. For server whose version >= 15, everything is sent in one backup stream so it's slightly different. 

I also have hesitations on whether to extract some parts into functions or if I'm putting the functionality in the right file. Feel free to give suggestions.

The correctness has be manually verified. But I couldn't really put it to test until in the end I also implement the xlog streaming.",True,130,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/130,https://github.com/pgmoneta/pgmoneta/pull/130,closed,612,12,15,1,7,12,1,1,[{'name': 'feature'}],2023-07-04 03:01:20+00:00,2023-07-11 12:42:16+00:00,639656.0,"7 days, 9:40:56","[{'comment_id': 1258481242, 'comment_body': 'sorting', 'comment_created': datetime.datetime(2023, 7, 10, 16, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258483555, 'comment_body': '`>= 13`', 'comment_created': datetime.datetime(2023, 7, 10, 16, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258484189, 'comment_body': 'Document the rest, and align comments', 'comment_created': datetime.datetime(2023, 7, 10, 16, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258486996, 'comment_body': 'Can we do with `!strcmp()` ?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258564404, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258568934, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258571304, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572054, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572994, 'comment_body': 'Yeah, just keep this function', 'comment_created': datetime.datetime(2023, 7, 10, 16, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258584078, 'comment_body': ""It's there to deal with null inputs. "", 'comment_created': datetime.datetime(2023, 7, 10, 16, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258584725, 'comment_body': ""Oh that actually reminds me. I didn't check server version when it comes to manifest. I'm on it."", 'comment_created': datetime.datetime(2023, 7, 10, 16, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258587666, 'comment_body': 'Gotcha', 'comment_created': datetime.datetime(2023, 7, 10, 16, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'bc0b35cbc321e21ffce5199206e1cda8f034f200', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1418889537,[#123] Receive and extract base backup archive,"Finally! This is our native implementation of receiving and extracting the basebackup and the mainfest postgres server sends us. It uses libarchive to do the tar file extraction. We also support tablespaces now, for convenience I had to add the oid feild to the tablespace struct. So that I can keep track of and update the symbolic link easily. Let me know if you find it not ok. 

This implementation only works for server with version < 15, which sends tar file for each tablespaces separately. For server whose version >= 15, everything is sent in one backup stream so it's slightly different. 

I also have hesitations on whether to extract some parts into functions or if I'm putting the functionality in the right file. Feel free to give suggestions.

The correctness has be manually verified. But I couldn't really put it to test until in the end I also implement the xlog streaming.",True,130,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/130,https://github.com/pgmoneta/pgmoneta/pull/130,closed,612,12,15,1,7,12,1,1,[{'name': 'feature'}],2023-07-04 03:01:20+00:00,2023-07-11 12:42:16+00:00,639656.0,"7 days, 9:40:56","[{'comment_id': 1258481242, 'comment_body': 'sorting', 'comment_created': datetime.datetime(2023, 7, 10, 16, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258483555, 'comment_body': '`>= 13`', 'comment_created': datetime.datetime(2023, 7, 10, 16, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258484189, 'comment_body': 'Document the rest, and align comments', 'comment_created': datetime.datetime(2023, 7, 10, 16, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258486996, 'comment_body': 'Can we do with `!strcmp()` ?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258564404, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258568934, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258571304, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572054, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572994, 'comment_body': 'Yeah, just keep this function', 'comment_created': datetime.datetime(2023, 7, 10, 16, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258584078, 'comment_body': ""It's there to deal with null inputs. "", 'comment_created': datetime.datetime(2023, 7, 10, 16, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258584725, 'comment_body': ""Oh that actually reminds me. I didn't check server version when it comes to manifest. I'm on it."", 'comment_created': datetime.datetime(2023, 7, 10, 16, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258587666, 'comment_body': 'Gotcha', 'comment_created': datetime.datetime(2023, 7, 10, 16, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'bc0b35cbc321e21ffce5199206e1cda8f034f200', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1404571862,[#123] Receive and parse DataRow messages in stream buffer,I had to re-implement this functionality similar to `pgmoneta_query_execute`. Because now all the data is in stream buffer. I also made some changes to `pgmoneta_consume_copy_stream` so that I can make use of existing APIs. I think it's better to submit this patch as a sperate PR because the next one (archive_streamer) should be really big and it'll take some time to finish.,True,128,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/128,https://github.com/pgmoneta/pgmoneta/pull/128,closed,112,8,2,1,1,0,1,1,[{'name': 'feature'}],2023-06-23 06:50:04+00:00,2023-06-23 15:38:37+00:00,31713.0,8:48:33,[],"[{'commit_sha': 'f05dd09141307eafdd0230d49e234419cd16546d', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1396900217,[#123] Receive and consume copy stream messages,"Finally, I resolved the bug (that was a stupid mistake)! This PR cosists of two functionalities:

One to read data from server into a buffer, it will left shift consumed data to reuse space, I tested locally and it was perfect, did not once exceed its original buffer size. For the sake of simplicity I just use the default buffer size (65535B), in the future we could have some configuration for the user to specify how big they want the stream buffer to be.

Another one is to parse data in the buffer, consume data into messages. It will block and return one message by another, and it will filter out those messages we are not interested in the stream replication process. And it will automatically read new data if current message is not complete.

I tested locally and it works perfectly, just as the protocal says, two DataRow messages, one CopyOutResponse then a bunch of CopyData, then finishes by a CopyDone message.

Let me know if you have questions.",True,127,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/127,https://github.com/pgmoneta/pgmoneta/pull/127,closed,261,0,4,1,3,10,1,1,[{'name': 'feature'}],2023-06-17 21:41:41+00:00,2023-06-20 16:26:39+00:00,240298.0,"2 days, 18:44:58","[{'comment_id': 1235272953, 'comment_body': 'Missing line feed above', 'comment_created': datetime.datetime(2023, 6, 20, 13, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235274192, 'comment_body': 'Lets call it `buffer`', 'comment_created': datetime.datetime(2023, 6, 20, 13, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235274522, 'comment_body': 'Lets align documentation comments', 'comment_created': datetime.datetime(2023, 6, 20, 13, 31, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235278061, 'comment_body': '`struct stream_buffer** stream_buf` -> `struct stream_buffer** buffer`', 'comment_created': datetime.datetime(2023, 6, 20, 13, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235278914, 'comment_body': ""I'm using `Uncrustify_d-0.76.0_f` - your version ?"", 'comment_created': datetime.datetime(2023, 6, 20, 13, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235444922, 'comment_body': ""I was using 0.75... Anyway it's fixed now."", 'comment_created': datetime.datetime(2023, 6, 20, 15, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1235474070, 'comment_body': 'buffer -> stream_buffer', 'comment_created': datetime.datetime(2023, 6, 20, 15, 51, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235474362, 'comment_body': 'buf -> buffer', 'comment_created': datetime.datetime(2023, 6, 20, 15, 52, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235475016, 'comment_body': 'buffer** -> stream_buffer**', 'comment_created': datetime.datetime(2023, 6, 20, 15, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1235485749, 'comment_body': ""Oh I thought you want me to change the struct name! I'm on it"", 'comment_created': datetime.datetime(2023, 6, 20, 16, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'f440f5c3103a06efb84b0ffe674bf671e5bde9d3', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1370906613,[#123]Common functionalities for querying server version,"Created some functions to get server version, and for more, since now people can create whatever query message with the query they want",True,125,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/125,https://github.com/pgmoneta/pgmoneta/pull/125,closed,78,0,5,1,1,0,1,1,[{'name': 'feature'}],2023-05-30 18:26:54+00:00,2023-05-31 16:21:28+00:00,78874.0,21:54:34,[],"[{'commit_sha': 'aafdd9c454269324982e41a72d6973582b49132b', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1347882619,Apply existing patch,"The first commit consists of changes only from the patch. 

I thought I'd do some cleanup or modifications on the basis of the patch directly, but on second thought it might be better if we could have some discussions first @jesperpedersen. I've already made some comments in the code (some are just plain questions about the code).

I'll leave the commits unsquashed to tell the changes apart. And I will squash the changes once we agree it's good enough to merge.",False,122,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/122,https://github.com/pgmoneta/pgmoneta/pull/122,closed,898,50,15,1,4,20,1,1,[{'name': 'feature'}],2023-05-11 23:48:23+00:00,2023-05-17 17:00:36+00:00,493933.0,"5 days, 17:12:13","[{'comment_id': 1191791132, 'comment_body': 'Just to make sure, this has to be used along with dynamic append right? Since it only init the size without actually malloc any memory.', 'comment_created': datetime.datetime(2023, 5, 12, 0, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1191827715, 'comment_body': 'can we assume `append_size` is always at most the size of memory `append` is pointing to?', 'comment_created': datetime.datetime(2023, 5, 12, 1, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1191832811, 'comment_body': ""This is not from the patch I think. But is it ok to just use some magic numbers here? I'm confused because there are more such usage below."", 'comment_created': datetime.datetime(2023, 5, 12, 1, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1191837397, 'comment_body': 'I think we need to clean this chunk of comments', 'comment_created': datetime.datetime(2023, 5, 12, 2, 2, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1191841070, 'comment_body': 'Just a plain question, what does `MESSAGE_STATUS_ZERO` mean and why do we sleep here?', 'comment_created': datetime.datetime(2023, 5, 12, 2, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1191841483, 'comment_body': ""How can I find more info about this message type such as 'Z', 'E' or 'T'? "", 'comment_created': datetime.datetime(2023, 5, 12, 2, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1191850426, 'comment_body': ""I'm not familiar with the mechanism here. Is there some agreement on where the type of message will be within the message?"", 'comment_created': datetime.datetime(2023, 5, 12, 2, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1191854486, 'comment_body': 'I feel that we probably need to change the note here, judging from the code below this is more like a response to a query instead of the query itself? And is 8 big enough as the max column number?', 'comment_created': datetime.datetime(2023, 5, 12, 2, 45, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1194082539, 'comment_body': 'Yeah, we will start with `NULL`', 'comment_created': datetime.datetime(2023, 5, 15, 16, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1194084438, 'comment_body': 'It should always be the current size, and `realloc` will do the rest', 'comment_created': datetime.datetime(2023, 5, 15, 16, 36, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1194085522, 'comment_body': 'Its the different sizes of the fields.\r\n\r\nSee https://www.postgresql.org/docs/devel/protocol-message-formats.html', 'comment_created': datetime.datetime(2023, 5, 15, 16, 38, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1194088073, 'comment_body': 'Yeah', 'comment_created': datetime.datetime(2023, 5, 15, 16, 40, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1194088772, 'comment_body': '0 bytes was received, so we have to wait a bit for the stuff we are looking for', 'comment_created': datetime.datetime(2023, 5, 15, 16, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1194089584, 'comment_body': 'Its the protocol,\r\n\r\nMain: https://www.postgresql.org/docs/devel/protocol-message-formats.html\r\nReplication: https://www.postgresql.org/docs/current/protocol-replication.html', 'comment_created': datetime.datetime(2023, 5, 15, 16, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1194090028, 'comment_body': 'Protocol again', 'comment_created': datetime.datetime(2023, 5, 15, 16, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1194090550, 'comment_body': 'I think we are ok with 8 for now', 'comment_created': datetime.datetime(2023, 5, 15, 16, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1194275545, 'comment_body': 'Do you want to reconsider the naming here? `query_response` makes more sense to me than `query`. ', 'comment_created': datetime.datetime(2023, 5, 15, 19, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1194277677, 'comment_body': '`column_names` ?', 'comment_created': datetime.datetime(2023, 5, 15, 19, 27, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1194283640, 'comment_body': 'Hmm I think that is fine, since we have the comment there. What confused me is the name of the struct, I just feel that it is more of the response to a query than the query itself, judging from the usage in `pgmoneta_query_execute`, unless we have other usage later.', 'comment_created': datetime.datetime(2023, 5, 15, 19, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1194285623, 'comment_body': 'Type it up, and lets take a look at it', 'comment_created': datetime.datetime(2023, 5, 15, 19, 36, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}]","[{'commit_sha': '00d71a9b58adba0b8ac6c8ed6b34c5ad0d8738d2', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1418889537,[#123] Receive and extract base backup archive,"Finally! This is our native implementation of receiving and extracting the basebackup and the mainfest postgres server sends us. It uses libarchive to do the tar file extraction. We also support tablespaces now, for convenience I had to add the oid feild to the tablespace struct. So that I can keep track of and update the symbolic link easily. Let me know if you find it not ok. 

This implementation only works for server with version < 15, which sends tar file for each tablespaces separately. For server whose version >= 15, everything is sent in one backup stream so it's slightly different. 

I also have hesitations on whether to extract some parts into functions or if I'm putting the functionality in the right file. Feel free to give suggestions.

The correctness has be manually verified. But I couldn't really put it to test until in the end I also implement the xlog streaming.",True,130,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/130,https://github.com/pgmoneta/pgmoneta/pull/130,closed,612,12,15,1,7,12,1,1,[{'name': 'feature'}],2023-07-04 03:01:20+00:00,2023-07-11 12:42:16+00:00,639656.0,"7 days, 9:40:56","[{'comment_id': 1258481242, 'comment_body': 'sorting', 'comment_created': datetime.datetime(2023, 7, 10, 16, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258483555, 'comment_body': '`>= 13`', 'comment_created': datetime.datetime(2023, 7, 10, 16, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258484189, 'comment_body': 'Document the rest, and align comments', 'comment_created': datetime.datetime(2023, 7, 10, 16, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258486996, 'comment_body': 'Can we do with `!strcmp()` ?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258564404, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258568934, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258571304, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572054, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572994, 'comment_body': 'Yeah, just keep this function', 'comment_created': datetime.datetime(2023, 7, 10, 16, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258584078, 'comment_body': ""It's there to deal with null inputs. "", 'comment_created': datetime.datetime(2023, 7, 10, 16, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258584725, 'comment_body': ""Oh that actually reminds me. I didn't check server version when it comes to manifest. I'm on it."", 'comment_created': datetime.datetime(2023, 7, 10, 16, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258587666, 'comment_body': 'Gotcha', 'comment_created': datetime.datetime(2023, 7, 10, 16, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'bc0b35cbc321e21ffce5199206e1cda8f034f200', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1418889537,[#123] Receive and extract base backup archive,"Finally! This is our native implementation of receiving and extracting the basebackup and the mainfest postgres server sends us. It uses libarchive to do the tar file extraction. We also support tablespaces now, for convenience I had to add the oid feild to the tablespace struct. So that I can keep track of and update the symbolic link easily. Let me know if you find it not ok. 

This implementation only works for server with version < 15, which sends tar file for each tablespaces separately. For server whose version >= 15, everything is sent in one backup stream so it's slightly different. 

I also have hesitations on whether to extract some parts into functions or if I'm putting the functionality in the right file. Feel free to give suggestions.

The correctness has be manually verified. But I couldn't really put it to test until in the end I also implement the xlog streaming.",True,130,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/130,https://github.com/pgmoneta/pgmoneta/pull/130,closed,612,12,15,1,7,12,1,1,[{'name': 'feature'}],2023-07-04 03:01:20+00:00,2023-07-11 12:42:16+00:00,639656.0,"7 days, 9:40:56","[{'comment_id': 1258481242, 'comment_body': 'sorting', 'comment_created': datetime.datetime(2023, 7, 10, 16, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258483555, 'comment_body': '`>= 13`', 'comment_created': datetime.datetime(2023, 7, 10, 16, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258484189, 'comment_body': 'Document the rest, and align comments', 'comment_created': datetime.datetime(2023, 7, 10, 16, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258486996, 'comment_body': 'Can we do with `!strcmp()` ?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258564404, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258568934, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258571304, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572054, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572994, 'comment_body': 'Yeah, just keep this function', 'comment_created': datetime.datetime(2023, 7, 10, 16, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258584078, 'comment_body': ""It's there to deal with null inputs. "", 'comment_created': datetime.datetime(2023, 7, 10, 16, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258584725, 'comment_body': ""Oh that actually reminds me. I didn't check server version when it comes to manifest. I'm on it."", 'comment_created': datetime.datetime(2023, 7, 10, 16, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258587666, 'comment_body': 'Gotcha', 'comment_created': datetime.datetime(2023, 7, 10, 16, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'bc0b35cbc321e21ffce5199206e1cda8f034f200', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1418889537,[#123] Receive and extract base backup archive,"Finally! This is our native implementation of receiving and extracting the basebackup and the mainfest postgres server sends us. It uses libarchive to do the tar file extraction. We also support tablespaces now, for convenience I had to add the oid feild to the tablespace struct. So that I can keep track of and update the symbolic link easily. Let me know if you find it not ok. 

This implementation only works for server with version < 15, which sends tar file for each tablespaces separately. For server whose version >= 15, everything is sent in one backup stream so it's slightly different. 

I also have hesitations on whether to extract some parts into functions or if I'm putting the functionality in the right file. Feel free to give suggestions.

The correctness has be manually verified. But I couldn't really put it to test until in the end I also implement the xlog streaming.",True,130,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/130,https://github.com/pgmoneta/pgmoneta/pull/130,closed,612,12,15,1,7,12,1,1,[{'name': 'feature'}],2023-07-04 03:01:20+00:00,2023-07-11 12:42:16+00:00,639656.0,"7 days, 9:40:56","[{'comment_id': 1258481242, 'comment_body': 'sorting', 'comment_created': datetime.datetime(2023, 7, 10, 16, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258483555, 'comment_body': '`>= 13`', 'comment_created': datetime.datetime(2023, 7, 10, 16, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258484189, 'comment_body': 'Document the rest, and align comments', 'comment_created': datetime.datetime(2023, 7, 10, 16, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258486996, 'comment_body': 'Can we do with `!strcmp()` ?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258564404, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258568934, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258571304, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572054, 'comment_body': 'MAX_PATH_LENGTH', 'comment_created': datetime.datetime(2023, 7, 10, 16, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258572994, 'comment_body': 'Yeah, just keep this function', 'comment_created': datetime.datetime(2023, 7, 10, 16, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1258584078, 'comment_body': ""It's there to deal with null inputs. "", 'comment_created': datetime.datetime(2023, 7, 10, 16, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258584725, 'comment_body': ""Oh that actually reminds me. I didn't check server version when it comes to manifest. I'm on it."", 'comment_created': datetime.datetime(2023, 7, 10, 16, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}, {'comment_id': 1258587666, 'comment_body': 'Gotcha', 'comment_created': datetime.datetime(2023, 7, 10, 16, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'bc0b35cbc321e21ffce5199206e1cda8f034f200', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1430125200,[#123] Base backup functionality integration,,True,134,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/134,https://github.com/pgmoneta/pgmoneta/pull/134,closed,225,139,3,1,3,4,0,0,[],2023-07-11 20:11:51+00:00,2023-07-12 18:34:15+00:00,80544.0,22:22:24,"[{'comment_id': 1261087761, 'comment_body': 'Sorting', 'comment_created': datetime.datetime(2023, 7, 12, 12, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261087936, 'comment_body': 'Sorting', 'comment_created': datetime.datetime(2023, 7, 12, 12, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261580875, 'comment_body': 'This one is always first', 'comment_created': datetime.datetime(2023, 7, 12, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}, {'comment_id': 1261583547, 'comment_body': ""ðŸ˜† So sorry about that. It's fixed now."", 'comment_created': datetime.datetime(2023, 7, 12, 18, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Jubilee101', 'type': 'User'}]","[{'commit_sha': 'e9637e0a6d26e2694ec33388ee0b23cba56d9b4b', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17
1436362472,Replace archive functionality with libarchive,"I verified the correctness and this seems alright. Server starts normally. Note that this replacement doesn't do anything special with symlinks or tablespaces currently. I think this part should be first handled in restore. So it only does what our archive functionality used to do, nothing more and nothing less.",False,137,https://api.github.com/repos/pgmoneta/pgmoneta/pulls/137,https://github.com/pgmoneta/pgmoneta/pull/137,closed,311,1205,12,1,16,1,1,1,[{'name': 'enhancement'}],2023-07-16 19:40:46+00:00,2023-07-19 09:47:23+00:00,223597.0,"2 days, 14:06:37","[{'comment_id': 1266789237, 'comment_body': 'static', 'comment_created': datetime.datetime(2023, 7, 18, 13, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jesperpedersen', 'type': 'User'}]","[{'commit_sha': 'a0759694f99f0384b41227c1332c03929a83d795', 'committer_username': 'Jubilee101', 'committer_name': 'Haoran Zhang', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 1, 16, 17, 46, tzinfo=datetime.timezone.utc)}]",Haoran Zhang,89931362,,User,,33,,13,17

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
368512518,pgmoneta,pgmoneta/pgmoneta,C,40,138,11,19,475,25,14,3,"[{'id': 2011217666, 'number': 354, 'closed': datetime.datetime(2024, 8, 9, 0, 17, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 8, 20, 10, 36, tzinfo=datetime.timezone.utc), 'time_taken': 14801.0, 'time_delta': '4:06:41', 'additions': 1816, 'deletions': 2627, 'state': 'closed'}, {'id': 1989308774, 'number': 347, 'closed': datetime.datetime(2024, 7, 27, 7, 16, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 26, 11, 55, 5, tzinfo=datetime.timezone.utc), 'time_taken': 69694.0, 'time_delta': '19:21:34', 'additions': 1685, 'deletions': 2046, 'state': 'closed'}, {'id': 1970740770, 'number': 339, 'closed': datetime.datetime(2024, 7, 16, 5, 33, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 16, 5, 9, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1462.0, 'time_delta': '0:24:22', 'additions': 15, 'deletions': 668, 'state': 'closed'}, {'id': 1969091637, 'number': 338, 'closed': datetime.datetime(2024, 7, 16, 4, 32, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 15, 10, 16, 1, tzinfo=datetime.timezone.utc), 'time_taken': 65808.0, 'time_delta': '18:16:48', 'additions': 253, 'deletions': 257, 'state': 'closed'}, {'id': 1941045771, 'number': 323, 'closed': datetime.datetime(2024, 6, 27, 0, 15, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 27, 0, 13, 52, tzinfo=datetime.timezone.utc), 'time_taken': 111.0, 'time_delta': '0:01:51', 'additions': 15, 'deletions': 45, 'state': 'closed'}, {'id': 1930219323, 'number': 317, 'closed': datetime.datetime(2024, 6, 21, 5, 25, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 20, 9, 42, 42, tzinfo=datetime.timezone.utc), 'time_taken': 70990.0, 'time_delta': '19:43:10', 'additions': 776, 'deletions': 203, 'state': 'closed'}, {'id': 1902088882, 'number': 309, 'closed': datetime.datetime(2024, 6, 5, 1, 28, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 4, 4, 27, 3, tzinfo=datetime.timezone.utc), 'time_taken': 75686.0, 'time_delta': '21:01:26', 'additions': 2571, 'deletions': 118, 'state': 'closed'}, {'id': 1865473740, 'number': 293, 'closed': datetime.datetime(2024, 5, 15, 8, 36, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 12, 23, 22, 2, tzinfo=datetime.timezone.utc), 'time_taken': 206060.0, 'time_delta': '2 days, 9:14:20', 'additions': 2337, 'deletions': 678, 'state': 'closed'}, {'id': 1822161404, 'number': 272, 'closed': datetime.datetime(2024, 4, 14, 23, 20, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 14, 23, 5, 51, tzinfo=datetime.timezone.utc), 'time_taken': 885.0, 'time_delta': '0:14:45', 'additions': 28, 'deletions': 1, 'state': 'closed'}, {'id': 1821893521, 'number': 271, 'closed': datetime.datetime(2024, 4, 14, 10, 43, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 14, 10, 33, 13, tzinfo=datetime.timezone.utc), 'time_taken': 622.0, 'time_delta': '0:10:22', 'additions': 133, 'deletions': 1, 'state': 'closed'}, {'id': 1815659880, 'number': 258, 'closed': datetime.datetime(2024, 4, 10, 11, 25, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 10, 9, 21, 28, tzinfo=datetime.timezone.utc), 'time_taken': 7428.0, 'time_delta': '2:03:48', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1813651405, 'number': 254, 'closed': datetime.datetime(2024, 4, 9, 9, 40, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 9, 8, 31, 55, tzinfo=datetime.timezone.utc), 'time_taken': 4117.0, 'time_delta': '1:08:37', 'additions': 15, 'deletions': 5, 'state': 'closed'}, {'id': 1811312958, 'number': 252, 'closed': datetime.datetime(2024, 4, 8, 12, 0, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 8, 5, 48, 8, tzinfo=datetime.timezone.utc), 'time_taken': 22343.0, 'time_delta': '6:12:23', 'additions': 193, 'deletions': 46, 'state': 'closed'}, {'id': 1810323258, 'number': 249, 'closed': datetime.datetime(2024, 4, 6, 10, 23, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 6, 8, 22, 7, tzinfo=datetime.timezone.utc), 'time_taken': 7301.0, 'time_delta': '2:01:41', 'additions': 9, 'deletions': 0, 'state': 'closed'}, {'id': 1810316787, 'number': 247, 'closed': datetime.datetime(2024, 4, 6, 10, 21, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 6, 7, 57, 28, tzinfo=datetime.timezone.utc), 'time_taken': 8647.0, 'time_delta': '2:24:07', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 1806576510, 'number': 242, 'closed': datetime.datetime(2024, 4, 4, 10, 36, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 4, 9, 45, 10, tzinfo=datetime.timezone.utc), 'time_taken': 3096.0, 'time_delta': '0:51:36', 'additions': 37, 'deletions': 1, 'state': 'closed'}, {'id': 1787933723, 'number': 226, 'closed': datetime.datetime(2024, 3, 23, 20, 41, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 23, 20, 33, 21, tzinfo=datetime.timezone.utc), 'time_taken': 518.0, 'time_delta': '0:08:38', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1787664113, 'number': 224, 'closed': datetime.datetime(2024, 3, 23, 7, 46, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 23, 5, 10, 41, tzinfo=datetime.timezone.utc), 'time_taken': 9331.0, 'time_delta': '2:35:31', 'additions': 1533, 'deletions': 537, 'state': 'closed'}, {'id': 1753722058, 'number': 204, 'closed': datetime.datetime(2024, 3, 4, 7, 54, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 4, 1, 28, 1, tzinfo=datetime.timezone.utc), 'time_taken': 23217.0, 'time_delta': '6:26:57', 'additions': 356, 'deletions': 9, 'state': 'closed'}, {'id': 1753606015, 'number': 203, 'closed': datetime.datetime(2024, 3, 4, 7, 37, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 3, 22, 13, 12, tzinfo=datetime.timezone.utc), 'time_taken': 33887.0, 'time_delta': '9:24:47', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1752630205, 'number': 199, 'closed': datetime.datetime(2024, 3, 2, 12, 19, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 2, 0, 50, 34, tzinfo=datetime.timezone.utc), 'time_taken': 41364.0, 'time_delta': '11:29:24', 'additions': 297, 'deletions': 4, 'state': 'closed'}, {'id': 1733642887, 'number': 188, 'closed': datetime.datetime(2024, 2, 20, 12, 16, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 19, 22, 2, 8, tzinfo=datetime.timezone.utc), 'time_taken': 51247.0, 'time_delta': '14:14:07', 'additions': 402, 'deletions': 194, 'state': 'closed'}, {'id': 1708209032, 'number': 185, 'closed': datetime.datetime(2024, 2, 2, 12, 59, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 2, 11, 0, 12, tzinfo=datetime.timezone.utc), 'time_taken': 7183.0, 'time_delta': '1:59:43', 'additions': 77, 'deletions': 2, 'state': 'closed'}, {'id': 1667635743, 'number': 178, 'closed': datetime.datetime(2024, 1, 7, 7, 8, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 7, 5, 22, 33, tzinfo=datetime.timezone.utc), 'time_taken': 6332.0, 'time_delta': '1:45:32', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 1661573991, 'number': 177, 'closed': datetime.datetime(2024, 1, 2, 17, 56, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 2, 9, 11, 43, tzinfo=datetime.timezone.utc), 'time_taken': 31468.0, 'time_delta': '8:44:28', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 1661561217, 'number': 176, 'closed': datetime.datetime(2024, 1, 2, 17, 54, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 2, 8, 57, 55, tzinfo=datetime.timezone.utc), 'time_taken': 32201.0, 'time_delta': '8:56:41', 'additions': 167, 'deletions': 36, 'state': 'closed'}, {'id': 1651984572, 'number': 174, 'closed': datetime.datetime(2023, 12, 22, 20, 10, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 20, 12, 27, 17, tzinfo=datetime.timezone.utc), 'time_taken': 200621.0, 'time_delta': '2 days, 7:43:41', 'additions': 18, 'deletions': 0, 'state': 'closed'}, {'id': 1648682616, 'number': 172, 'closed': datetime.datetime(2023, 12, 18, 14, 22, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 18, 14, 17, 6, tzinfo=datetime.timezone.utc), 'time_taken': 295.0, 'time_delta': '0:04:55', 'additions': 20, 'deletions': 21, 'state': 'closed'}, {'id': 1642232903, 'number': 169, 'closed': datetime.datetime(2023, 12, 13, 11, 59, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 13, 11, 10, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2942.0, 'time_delta': '0:49:02', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1639850473, 'number': 166, 'closed': datetime.datetime(2023, 12, 12, 20, 12, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 12, 1, 14, 12, tzinfo=datetime.timezone.utc), 'time_taken': 68307.0, 'time_delta': '18:58:27', 'additions': 202, 'deletions': 5, 'state': 'closed'}, {'id': 1638352460, 'number': 165, 'closed': datetime.datetime(2023, 12, 11, 13, 51, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 11, 8, 53, 10, tzinfo=datetime.timezone.utc), 'time_taken': 17894.0, 'time_delta': '4:58:14', 'additions': 149, 'deletions': 10, 'state': 'closed'}, {'id': 1635809013, 'number': 163, 'closed': datetime.datetime(2023, 12, 8, 12, 18, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 8, 8, 51, 37, tzinfo=datetime.timezone.utc), 'time_taken': 12433.0, 'time_delta': '3:27:13', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1598420600, 'number': 152, 'closed': datetime.datetime(2023, 11, 22, 1, 47, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 13, 8, 49, 52, tzinfo=datetime.timezone.utc), 'time_taken': 752285.0, 'time_delta': '8 days, 16:58:05', 'additions': 393, 'deletions': 57, 'state': 'closed'}, {'id': 1585690838, 'number': 150, 'closed': datetime.datetime(2023, 11, 4, 3, 24, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 3, 9, 29, 28, tzinfo=datetime.timezone.utc), 'time_taken': 64482.0, 'time_delta': '17:54:42', 'additions': 122, 'deletions': 0, 'state': 'closed'}, {'id': 1467707255, 'number': 144, 'closed': datetime.datetime(2023, 8, 9, 19, 19, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 8, 23, 1, 55, tzinfo=datetime.timezone.utc), 'time_taken': 73046.0, 'time_delta': '20:17:26', 'additions': 502, 'deletions': 4, 'state': 'closed'}, {'id': 1466058485, 'number': 142, 'closed': datetime.datetime(2023, 8, 8, 11, 51, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 8, 0, 15, tzinfo=datetime.timezone.utc), 'time_taken': 41793.0, 'time_delta': '11:36:33', 'additions': 10, 'deletions': 4, 'state': 'closed'}, {'id': 1455275850, 'number': 140, 'closed': datetime.datetime(2023, 8, 4, 13, 4, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 30, 21, 51, 8, tzinfo=datetime.timezone.utc), 'time_taken': 400426.0, 'time_delta': '4 days, 15:13:46', 'additions': 549, 'deletions': 49, 'state': 'closed'}, {'id': 1436362472, 'number': 137, 'closed': datetime.datetime(2023, 7, 19, 9, 47, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 16, 19, 40, 46, tzinfo=datetime.timezone.utc), 'time_taken': 223597.0, 'time_delta': '2 days, 14:06:37', 'additions': 311, 'deletions': 1205, 'state': 'closed'}, {'id': 1435253828, 'number': 136, 'closed': datetime.datetime(2023, 7, 14, 19, 9, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 14, 19, 4, 45, tzinfo=datetime.timezone.utc), 'time_taken': 262.0, 'time_delta': '0:04:22', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1430125200, 'number': 134, 'closed': datetime.datetime(2023, 7, 12, 18, 34, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 11, 20, 11, 51, tzinfo=datetime.timezone.utc), 'time_taken': 80544.0, 'time_delta': '22:22:24', 'additions': 225, 'deletions': 139, 'state': 'closed'}, {'id': 1423780739, 'number': 132, 'closed': datetime.datetime(2023, 7, 10, 14, 14, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 7, 1, 30, 15, tzinfo=datetime.timezone.utc), 'time_taken': 305048.0, 'time_delta': '3 days, 12:44:08', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1418889537, 'number': 130, 'closed': datetime.datetime(2023, 7, 11, 12, 42, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 4, 3, 1, 20, tzinfo=datetime.timezone.utc), 'time_taken': 639656.0, 'time_delta': '7 days, 9:40:56', 'additions': 612, 'deletions': 12, 'state': 'closed'}, {'id': 1404571862, 'number': 128, 'closed': datetime.datetime(2023, 6, 23, 15, 38, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 23, 6, 50, 4, tzinfo=datetime.timezone.utc), 'time_taken': 31713.0, 'time_delta': '8:48:33', 'additions': 112, 'deletions': 8, 'state': 'closed'}, {'id': 1396900217, 'number': 127, 'closed': datetime.datetime(2023, 6, 20, 16, 26, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 17, 21, 41, 41, tzinfo=datetime.timezone.utc), 'time_taken': 240298.0, 'time_delta': '2 days, 18:44:58', 'additions': 261, 'deletions': 0, 'state': 'closed'}, {'id': 1370906613, 'number': 125, 'closed': datetime.datetime(2023, 5, 31, 16, 21, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 30, 18, 26, 54, tzinfo=datetime.timezone.utc), 'time_taken': 78874.0, 'time_delta': '21:54:34', 'additions': 78, 'deletions': 0, 'state': 'closed'}, {'id': 1356070418, 'number': 124, 'closed': datetime.datetime(2023, 5, 18, 18, 0, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 18, 17, 54, 45, tzinfo=datetime.timezone.utc), 'time_taken': 321.0, 'time_delta': '0:05:21', 'additions': 0, 'deletions': 135, 'state': 'closed'}, {'id': 1347882619, 'number': 122, 'closed': datetime.datetime(2023, 5, 17, 17, 0, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 11, 23, 48, 23, tzinfo=datetime.timezone.utc), 'time_taken': 493933.0, 'time_delta': '5 days, 17:12:13', 'additions': 898, 'deletions': 50, 'state': 'closed'}, {'id': 1305370435, 'number': 118, 'closed': datetime.datetime(2023, 4, 11, 16, 3, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 6, 23, 8, 22, tzinfo=datetime.timezone.utc), 'time_taken': 406487.0, 'time_delta': '4 days, 16:54:47', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1297983840, 'number': 117, 'closed': datetime.datetime(2023, 4, 24, 7, 28, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 31, 15, 47, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2043670.0, 'time_delta': '23 days, 15:41:10', 'additions': 721, 'deletions': 60, 'state': 'closed'}, {'id': 1294200910, 'number': 116, 'closed': datetime.datetime(2023, 4, 3, 16, 0, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 29, 8, 49, 54, tzinfo=datetime.timezone.utc), 'time_taken': 457841.0, 'time_delta': '5 days, 7:10:41', 'additions': 511, 'deletions': 59, 'state': 'closed'}, {'id': 1274501773, 'number': 113, 'closed': datetime.datetime(2023, 3, 15, 5, 36, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 14, 7, 10, 39, tzinfo=datetime.timezone.utc), 'time_taken': 80775.0, 'time_delta': '22:26:15', 'additions': 22, 'deletions': 2, 'state': 'closed'}, {'id': 1262587021, 'number': 109, 'closed': datetime.datetime(2023, 3, 14, 8, 20, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 3, 20, 30, 48, tzinfo=datetime.timezone.utc), 'time_taken': 906557.0, 'time_delta': '10 days, 11:49:17', 'additions': 17, 'deletions': 5, 'state': 'closed'}]"
