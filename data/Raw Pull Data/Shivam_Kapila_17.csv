pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
370579910,LB-499: Update documentation,"# Description
<!--
 Update documentation to include steps about setting up Listenbrainz Spark server and uploading listens to HDFS.
-->


* This is aâ€¦
    * ( ) Bug fix
    * ( ) Feature addition
    * ( ) Refactoring
    * (x) Minor / simple change (like a typo)
    * ( ) Other

* **Describe this change in 1-2 sentences**:

# Problem

The documentation regarding how to setup Listenbrainz Spark server and uploading listens to HDFS was missing[(JIRA Ticket)](https://tickets.metabrainz.org/browse/LB-499).

# Solution

* Update devel-env.rst to include steps to setup the Listenbrainz Spark server.

* Update HACKING.md to include the steps to upload listens to HDFS.

* Replace code import in listenbrainz-dumps.rst file with external link as the code was not getting imported.",True,718,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/718,https://github.com/metabrainz/listenbrainz-server/pull/718,closed,185,25,5,12,3,90,0,1,[],2020-02-03 23:52:31+00:00,2020-03-21 16:22:07+00:00,4033776.0,"46 days, 16:29:36","[{'comment_id': 374551722, 'comment_body': 'we should use `docker-compose exec` here, it should be possible to use develop.sh to call it.', 'comment_created': datetime.datetime(2020, 2, 4, 9, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 374554689, 'comment_body': ""small thing here, but I'd prefer this said FAQ or FAQs"", 'comment_created': datetime.datetime(2020, 2, 4, 9, 22, 10, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 374557888, 'comment_body': ""in this file we're mixing -- and ## for headers, should we be consistent?\r\n\r\nnow that we're using rst for some files (for integration in sphinx?) should we consider using rst in README/HACKING too?"", 'comment_created': datetime.datetime(2020, 2, 4, 9, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 374561436, 'comment_body': 'Yes totally. Makes more sense. I will update it alongwith some other changes. Thanks. :)', 'comment_created': datetime.datetime(2020, 2, 4, 9, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 374866311, 'comment_body': ""@alastair I tried running `docker-compose exec -it listenbrainzspark_playground_1 bash`, but this doesn't work. Please let me know where I am getting wrong?"", 'comment_created': datetime.datetime(2020, 2, 4, 19, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 374870358, 'comment_body': 'What is the error? Also, you did not specify the docker-compose file. Take a look at `develop.sh`, it might help. ', 'comment_created': datetime.datetime(2020, 2, 4, 19, 17, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 374870547, 'comment_body': 'I will update it to use ## instead of --. migrating these files to .rst is also a good idea. Please let me know if README.md and HACKING.md are to be migrated.', 'comment_created': datetime.datetime(2020, 2, 4, 19, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 374925719, 'comment_body': ""@alastair @vansika \r\nThe equivalent command is \r\n`docker-compose -f docker/docker-compose.spark.yml -p listenbrainzspark exec playground bash` or \r\n`docker-compose -f docker/docker-compose.spark.yml -p listenbrainzspark run --rm playground bash`\r\n\r\nIt can also be run using\r\n`./develop.sh spark exec playground bash`. or \r\n`./develop.sh spark run --rm playground bash`\r\n\r\nI guess `./develop.sh spark run --rm playground bash` is better option since currently develop.sh uses `run` for most cases. Also for `exec -it`, although docker-compose automatically allocates TTY so `-t` is not needed, I couldn't get alternative for `-i` which keeps STDIN open even if not attached.\r\n\r\nLet me know which command should I update in the documentation."", 'comment_created': datetime.datetime(2020, 2, 4, 21, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 375202111, 'comment_body': ""the develop.sh spark commands look good. You're right that docker-compose doesn't need to specify -i or -t. I don't know why docker exec was used in this case, you'll have to verify if it was for a specific reason, in which case we should continue to use it, or if run will do the same thing."", 'comment_created': datetime.datetime(2020, 2, 5, 11, 28, 56, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 376801923, 'comment_body': ""Why was this changed? I don't completely understand."", 'comment_created': datetime.datetime(2020, 2, 9, 17, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376802140, 'comment_body': 'We generally use *upload* with HDFS. \r\nWhat about *Upload listens to HDFS*?', 'comment_created': datetime.datetime(2020, 2, 9, 17, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376802782, 'comment_body': 'I think the introduction should come before *Importing Listenbrainz Listens to HDFS*. \r\nA brief introduction and then the steps to upload listens. Also, instead of saying it is recommended you can tell why exactly incremental dumps should be used for the local machine.  Well, we have path defined in config.py for dumps but they are large for a local machine (around 12 GB, refer to FTP for exact numbers).\r\n\r\nI also think that rn, you should only talk about stats since we need other smaller dumps in addition to listens dump when it comes to recommendations. The other (mapping and artist relations) are not on FTP rn.  They will be soon :)', 'comment_created': datetime.datetime(2020, 2, 9, 18, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376805692, 'comment_body': 'I think these lines are not required, we can mention the website in *update config.py* section when we actually need it. \r\nAlso, you can consider introducing line breaks to wrap text, I usually do it after 120-150 charactes.', 'comment_created': datetime.datetime(2020, 2, 9, 18, 45, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376807959, 'comment_body': 'instead of saying *look for the following section*  I think it would be better to just go with the *update* statement.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376808066, 'comment_body': 'instead of saying *look for* you can just say update the values with .....', 'comment_created': datetime.datetime(2020, 2, 9, 19, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376808160, 'comment_body': 'extra space after *To import the*. \r\nupdate the configs?', 'comment_created': datetime.datetime(2020, 2, 9, 19, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376808274, 'comment_body': 'I think you missed out the *download listens* part. Listens are first downloaded from FTP and then upoaded to HDFS.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 21, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376808529, 'comment_body': 'I am not sure if it is required or not, I mean removing the containers everytime you are done with the work is not necessary. ', 'comment_created': datetime.datetime(2020, 2, 9, 19, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376808610, 'comment_body': 'We are not using BigQuery for stats. We use Apache SPark for stats as well.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376808692, 'comment_body': 'can we add the command in develop.sh?', 'comment_created': datetime.datetime(2020, 2, 9, 19, 27, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376808764, 'comment_body': ""We don't have integration tests for spark as of now. This shell script invokes integration tests for ListenBrainz"", 'comment_created': datetime.datetime(2020, 2, 9, 19, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376808992, 'comment_body': 'if namenode is formatted, datanode should be formatted too.\r\nI think we can skip this for now because I am working on adding this to Hacking.md, with detailed commands. Later we can add it in the FAQ with a warning about what formatting can do to the data and then link HAcking.md for the command to format.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 376809557, 'comment_body': 'The sphinx code integration was not working. Till then I just provided an external link to the file. Have a look [here](https://github.com/metabrainz/listenbrainz-server/blob/master/docs/dev/listenbrainz-dumps.rst/), just before the Incremental dumps heading. The code is not imported here.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376809582, 'comment_body': 'Sure. I will update it.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376809724, 'comment_body': 'Okay I will move the introduction up and mention the exact reasons for using incremental dumps. I will remove the recommendations part too.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376809797, 'comment_body': 'Should I mention the website name in _config.py_?', 'comment_created': datetime.datetime(2020, 2, 9, 19, 43, 38, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376809824, 'comment_body': 'Okay I will make these changes.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 44, 1, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376809889, 'comment_body': ""I faced the error `datanode is already running` if I don't shut down the containers. I will look into it again. "", 'comment_created': datetime.datetime(2020, 2, 9, 19, 45, 28, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376809928, 'comment_body': 'Okay. Got it.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 46, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376810003, 'comment_body': 'You mean `./develop.sh spark run --rm hadoop-master hdfs namenode -format -nonInteractive -force`?', 'comment_created': datetime.datetime(2020, 2, 9, 19, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376810016, 'comment_body': 'Okay I will remove the clause.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 47, 34, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376810057, 'comment_body': 'Okay I will remove this question  till then.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 48, 13, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376810276, 'comment_body': ""Aren't they automatically downloaded? Please have a look [here](https://github.com/metabrainz/listenbrainz-server/blob/master/spark_manage.py#L82)."", 'comment_created': datetime.datetime(2020, 2, 9, 19, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376810455, 'comment_body': ""`exec` requires a running container and `run` creates a temporary container. It's good to use `exec` in this case. I will update it using `exec` command."", 'comment_created': datetime.datetime(2020, 2, 9, 19, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376810639, 'comment_body': 'Okay I will make these changes.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 57, 59, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 376810651, 'comment_body': 'Okay I will make these changes.', 'comment_created': datetime.datetime(2020, 2, 9, 19, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378751829, 'comment_body': 'cool.', 'comment_created': datetime.datetime(2020, 2, 13, 9, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378752485, 'comment_body': 'Not in the file config.py. You can mention the website in the docs itself.', 'comment_created': datetime.datetime(2020, 2, 13, 9, 48, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378753117, 'comment_body': 'right :) Maybe you can include a short note that this first downloads the listens from FTP and then upload to HDFS.', 'comment_created': datetime.datetime(2020, 2, 13, 9, 49, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378753737, 'comment_body': 'ah! Good enough.', 'comment_created': datetime.datetime(2020, 2, 13, 9, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378755155, 'comment_body': 'not really. Should be just `./develop.sh format `\r\nhttps://github.com/metabrainz/listenbrainz-server/blob/master/develop.sh#L26\r\nLike in here you just need to write `./develop.sh psql` ', 'comment_created': datetime.datetime(2020, 2, 13, 9, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378756077, 'comment_body': 'upload the listens to HDFS?', 'comment_created': datetime.datetime(2020, 2, 13, 9, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378757923, 'comment_body': 'I am not sure but there is too much *you* in the guide, just looks a lil off to me. What about something like this:\r\n`If stats are to be generated on a local machine, incremental dumps should be used since....`\r\n\r\nIf you are convinced with the idea, please refactor the guide to minimize the use of *you*.', 'comment_created': datetime.datetime(2020, 2, 13, 9, 58, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378758448, 'comment_body': 'since this is a substep to *generating stats*, it should be indented accordingly.', 'comment_created': datetime.datetime(2020, 2, 13, 9, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378760390, 'comment_body': 'update TEMP_LISTENS_DIR with the directory name and TEMP_LISTENS_DUMP with the .tar.xz file?\r\n\r\nAlso, where would they find the directory and tar name?', 'comment_created': datetime.datetime(2020, 2, 13, 10, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378760632, 'comment_body': 'Maybe start the example from a new line', 'comment_created': datetime.datetime(2020, 2, 13, 10, 3, 51, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378762214, 'comment_body': ""`ListenBrainz Spark` would do. We don't really use server with it. Also, B capital in ListenBrainz everywhere :)"", 'comment_created': datetime.datetime(2020, 2, 13, 10, 6, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378762933, 'comment_body': ""Maybe you can look into the formatting of markdown, if you are defining steps in order, you don't need to use *next* all the time :)"", 'comment_created': datetime.datetime(2020, 2, 13, 10, 8, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378763884, 'comment_body': 'How to generate stats? It will be good to add a command here which users can run to sanity check.', 'comment_created': datetime.datetime(2020, 2, 13, 10, 9, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378764407, 'comment_body': '<3', 'comment_created': datetime.datetime(2020, 2, 13, 10, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378764558, 'comment_body': 'ListenBrainz', 'comment_created': datetime.datetime(2020, 2, 13, 10, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378765336, 'comment_body': 'patch ~back~ to the project?', 'comment_created': datetime.datetime(2020, 2, 13, 10, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378770023, 'comment_body': 'Installed?', 'comment_created': datetime.datetime(2020, 2, 13, 10, 21, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378770197, 'comment_body': 'Running Spark containers?', 'comment_created': datetime.datetime(2020, 2, 13, 10, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378770585, 'comment_body': 'listenbrainz_spark containers communicate with....', 'comment_created': datetime.datetime(2020, 2, 13, 10, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378771512, 'comment_body': ""is this intended? shouldn't it be dashed? "", 'comment_created': datetime.datetime(2020, 2, 13, 10, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378772143, 'comment_body': 'I learnt something :)', 'comment_created': datetime.datetime(2020, 2, 13, 10, 25, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378773587, 'comment_body': ""But the user may want to format namenode. Instead of *should'nt execute* a warning stating that it will erase all the namenode data and its link with datanode will be lost.... will look good."", 'comment_created': datetime.datetime(2020, 2, 13, 10, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378773814, 'comment_body': 'load?', 'comment_created': datetime.datetime(2020, 2, 13, 10, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 378822094, 'comment_body': 'Okay got it. Like this. Refer http://ftp.musicbrainz.org/pub/musicbrainz/listenbrainz/ for the listen dumps', 'comment_created': datetime.datetime(2020, 2, 13, 12, 10, 1, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378822312, 'comment_body': 'Okay I will include it', 'comment_created': datetime.datetime(2020, 2, 13, 12, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378823086, 'comment_body': '@vansika Are these files to be migrated to .rst or should I leave them for now?', 'comment_created': datetime.datetime(2020, 2, 13, 12, 12, 21, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378823774, 'comment_body': 'So this works for now :)', 'comment_created': datetime.datetime(2020, 2, 13, 12, 13, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378824045, 'comment_body': 'Okay I will create function for it similar to the `./develop.sh psql`', 'comment_created': datetime.datetime(2020, 2, 13, 12, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378824347, 'comment_body': 'Oh I missed this. I will update it', 'comment_created': datetime.datetime(2020, 2, 13, 12, 15, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378824649, 'comment_body': 'Got it. I will update it.', 'comment_created': datetime.datetime(2020, 2, 13, 12, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378825205, 'comment_body': 'I will add the ftp server link', 'comment_created': datetime.datetime(2020, 2, 13, 12, 17, 31, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378825362, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2020, 2, 13, 12, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378825557, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2020, 2, 13, 12, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378826061, 'comment_body': 'Am I using the wrong format?', 'comment_created': datetime.datetime(2020, 2, 13, 12, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378826437, 'comment_body': ""Actually I couldn't generate stats on my local machine. I was getting an error. Can you tell me how to generate stats?"", 'comment_created': datetime.datetime(2020, 2, 13, 12, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378826591, 'comment_body': 'Oh typo :-/', 'comment_created': datetime.datetime(2020, 2, 13, 12, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378827760, 'comment_body': 'Got it', 'comment_created': datetime.datetime(2020, 2, 13, 12, 23, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378827806, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2020, 2, 13, 12, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378827888, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2020, 2, 13, 12, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378827943, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2020, 2, 13, 12, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378828192, 'comment_body': 'I will have to check. I think its for subheadings too like dashed', 'comment_created': datetime.datetime(2020, 2, 13, 12, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378828380, 'comment_body': ':)', 'comment_created': datetime.datetime(2020, 2, 13, 12, 24, 58, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378828464, 'comment_body': 'Yeah. Makes more sense', 'comment_created': datetime.datetime(2020, 2, 13, 12, 25, 11, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 378828704, 'comment_body': ""I will change the words. To me also it isn't making any sense"", 'comment_created': datetime.datetime(2020, 2, 13, 12, 25, 41, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 379078791, 'comment_body': ""Sorry I couldn't get it. Could you explain?"", 'comment_created': datetime.datetime(2020, 2, 13, 19, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 379095984, 'comment_body': 'This gives sub-sub-heading \r\n=== H1\r\n----- H2\r\n^^^^ H3\r\n', 'comment_created': datetime.datetime(2020, 2, 13, 20, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 381558123, 'comment_body': 'I think moving the faqs to a different file and linking it here is a good idea.', 'comment_created': datetime.datetime(2020, 2, 19, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 382800542, 'comment_body': ""This is not possible easily right now, let's leave any mention of generation of stats for now."", 'comment_created': datetime.datetime(2020, 2, 21, 20, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 382814448, 'comment_body': 'Should I remove the whole block or let Uploading listens to HDFS stay there?\r\n', 'comment_created': datetime.datetime(2020, 2, 21, 21, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 382814522, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 2, 21, 21, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 382889072, 'comment_body': 'leave them for now', 'comment_created': datetime.datetime(2020, 2, 22, 5, 48, 12, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 382889152, 'comment_body': 'Okay, so there are a lot of lines where you have been using the word ""next"" which can be avoided imo. It looks a little odd while reading the doc in a flow.', 'comment_created': datetime.datetime(2020, 2, 22, 5, 50, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 382889192, 'comment_body': 'cool :)', 'comment_created': datetime.datetime(2020, 2, 22, 5, 50, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 382901945, 'comment_body': ""Keep anything that is specific enough that you know how to do it. Do not mention any thing that you don't know how to do yet. "", 'comment_created': datetime.datetime(2020, 2, 22, 10, 8, 11, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}]","[{'commit_sha': '6e76a962e7e04bb40a2812714dba3ce0162216fa', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '482da3c769df7f0c2ed3531984c652aa5c463905', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8b1ff6815a93a74dcc96dcd5cccae8bb34c1fc0', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fa3cbc96569a785b20c478d80c6aedc055e736d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa54e82a384219899cfd89e97d7d3e93934e821c', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53cdd3132fabefbcdac1c899a0f9351e5111337b', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4684f29e50a8d17e4967a6e38ccc56a4357dd287', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87111c5fa911f1e3d44ee737b3da42800309fb79', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5ae8c2f6a4711984914cb35a61c4e5a16543edf', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd572fbdc0523a379de058b0afac11f866f01fab0', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06c24ca9300f780264d55f494da59fb0fab5b3bc', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89fa6592d82108feb6f27cffbb21b6779b9b5217', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
373311614,"Add ""delete listens"" button","

# Description
Add ""Delete your listens"" button to delete listens history for a user 


* This is aâ€¦
    * ( ) Bug fix
    * (x) Feature addition
    * ( ) Refactoring
    * ( ) Minor / simple change (like a typo)
    * ( ) Other

* **Describe this change in 1-2 sentences**:

# Problem
There didn't exist any button to access the `delete` function present in _influx_listenstore.py_.

# Solution

* Added a button to redirect to `/delete-listens` route.
* If GET request it renders a page asking user for confirmation. If POST request it deletes the listens history for the logged-in user. 
(Similar to delete user feature.)",True,726,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/726,https://github.com/metabrainz/listenbrainz-server/pull/726,closed,165,7,7,33,4,22,0,1,[],2020-02-10 19:31:23+00:00,2020-03-16 17:09:57+00:00,3015514.0,"34 days, 21:38:34","[{'comment_id': 382819325, 'comment_body': ""I'd prefer to name this `delete_listens.html` for consistency."", 'comment_created': datetime.datetime(2020, 2, 21, 21, 42, 28, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 382832837, 'comment_body': ""given that you're fixing this anyways, we've decided to avoid gendered pronouns. Let's fix this to be `them` or `the user`."", 'comment_created': datetime.datetime(2020, 2, 21, 22, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 382832898, 'comment_body': 'same for gendered pronoun here.', 'comment_created': datetime.datetime(2020, 2, 21, 22, 17, 58, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 382833507, 'comment_body': ""So we should also test that the listens have actually gotten deleted. \r\n\r\nLet's add an integration test which does the following:\r\n1. submits a bunch of listens\r\n2. checks that the listens have been written\r\n2. makes a post request to this endpoint\r\n3. checks that the listens have been deleted.\r\n "", 'comment_created': datetime.datetime(2020, 2, 21, 22, 19, 47, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 382833608, 'comment_body': ""let's test that the page redirects to login if the user isn't logged in also."", 'comment_created': datetime.datetime(2020, 2, 21, 22, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 382833828, 'comment_body': ""also, let's add a test that makes sure that the endpoint returns a 4xx if the auth token isn't provided or if the auth token is incorrect."", 'comment_created': datetime.datetime(2020, 2, 21, 22, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 382834798, 'comment_body': 'This message is shown to the user. Let\'s change it to something more user friendly.\r\n\r\n""We couldn\'t delete your listens due to an error. Please try again later.""', 'comment_created': datetime.datetime(2020, 2, 21, 22, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 382862092, 'comment_body': 'Is it ok if I test against 302 because in case auth token is missing or invalid the user is redirected to profile page. If I explicitly specify 4xx then the page is not automatically redirected.', 'comment_created': datetime.datetime(2020, 2, 22, 0, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 382862427, 'comment_body': ""The behaviour seems incorrect then. The code should return we should `raise Unauthorized` if the token is not valid.\r\n\r\nLet's fix the actual code so that the test which checks for a 401 Unauthorized status passes"", 'comment_created': datetime.datetime(2020, 2, 22, 0, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 382867399, 'comment_body': 'Did exactly the same.', 'comment_created': datetime.datetime(2020, 2, 22, 0, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 382871490, 'comment_body': ""I have added the unauthorized check. The test for invalid token passed but if I don't pass any token or pass None to it then it gets status 200 in tests but in actual if I delete token it raises unauthorized. Can you please look at the [test code](https://gist.github.com/shivam-kapila/d14dbde481c0208bd95bd87c61eabe7e).\r\n\r\nThe modified actual code [here](https://gist.github.com/shivam-kapila/246b8b2ac3722a04ee7ea45a8308242a#file-delete_listens-modified-code-L14)"", 'comment_created': datetime.datetime(2020, 2, 22, 1, 16, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 382872058, 'comment_body': 'In the test, the request response is stored in `r` and the assertion is on `response` ', 'comment_created': datetime.datetime(2020, 2, 22, 1, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 386150151, 'comment_body': 'I have added the test.', 'comment_created': datetime.datetime(2020, 3, 1, 23, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 386150211, 'comment_body': 'Thanks a lot. I have pushed all the tests.', 'comment_created': datetime.datetime(2020, 3, 1, 23, 8, 24, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 386150285, 'comment_body': 'I have updated it with **Auth token invalid or missing.**', 'comment_created': datetime.datetime(2020, 3, 1, 23, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 386150325, 'comment_body': 'The integration tests have been added.', 'comment_created': datetime.datetime(2020, 3, 1, 23, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 389831500, 'comment_body': ""I think this text makes it sound like if you press the button your listens are gone, when in fact you'll be taken to another page. I personally don't think we need the extra page just yet -- all the other actions can be taken directly from the profile page. I think for now it would be better to add the delete listens function to the profile page."", 'comment_created': datetime.datetime(2020, 3, 9, 17, 6, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 389838210, 'comment_body': 'You need to catch and handle exceptions from here.', 'comment_created': datetime.datetime(2020, 3, 9, 17, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 389852013, 'comment_body': '@mayhem Thanks for the review. Most of the exceptions are handled in the `delete` function in _listenstore.py_ [here](https://github.com/metabrainz/listenbrainz-server/blob/master/listenbrainz/listenstore/influx_listenstore.py#L916). Can you give me an idea which exceptions can I handle in the function I created.', 'comment_created': datetime.datetime(2020, 3, 9, 17, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 389852670, 'comment_body': 'Okay.', 'comment_created': datetime.datetime(2020, 3, 9, 17, 40, 16, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 389856606, 'comment_body': 'Sorry, never mind this point.', 'comment_created': datetime.datetime(2020, 3, 9, 17, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 392396154, 'comment_body': '@mayhem Done :)', 'comment_created': datetime.datetime(2020, 3, 13, 18, 19, 50, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': '6e76a962e7e04bb40a2812714dba3ce0162216fa', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54d1873591798ad2c4ac1e56f2e7a60bf43bc3e2', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2448ebbacbb8349954a6d388bf1d8934cf0b6c7f', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94b2ae50d5b09ba8ff27233f61e05dab7bb3b7d7', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6198622cc7454d014fac5291d744305905e41cd6', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3b4e569c62b5af1ee23720475a4aecbd5b89519', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45eed63f06dc0c8843e1d3c5995c98d4708afae1', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a94f0c4a4a529c848d368982095889abdd7a2e0', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d45b7d086175af6fb777e3cfd9ebd0d6b4c6552', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e0f2d48476befe0b9ca36d23b7992645871ff02', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5da9e2df240f9ce46c4cf550de7043a03617cfa1', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19a8c576810ca437a6b386b2cf3ffb5f45baeeeb', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5618fed9e081c26ad13f0a25f4a23b350a04e1a7', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e314ec6189bafc0ad94da22e927d714f1c58e695', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958a7689e4620a450c99d582265096f73189ccc8', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f8d76d0bb1b2ffc6746b1b7e0a8541a6453df62', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1f0ce3e49041959d239bf2ee104618351481385', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f46307d623fb580893de0510e9348a84541581b', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bbf3843e1385a13c728549aae08d1f3c88f65ef', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc4b199c02366a4619b9d166b410fd67e907ebe2', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba48414ea56265b7a6ee7cdbaae4c85181e9e3dc', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76ffa95ba945e65a3203ff901b71efe6d8a9459e', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bde9d441316013602e66110cfe9cdc960ad5e5c', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '628b458a474faaea6a786bd778952073c45378c2', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdc4def2a1983cb36317d9d8e73724174f060af3', 'committer_username': 'sjainit', 'committer_name': 'sarthak_jain', 'committer_email': 'sarthak2907@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0589be7e662c53f58a945a51de29ab61ab306cce', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f36741c14729e022c11da8d1f389a58944af177', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34a32445fd971e26da3c0d661a7917a4135395df', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd489411e4ccc660b0c33d93db4e99d949e80370b', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a248c89eaa407b4379a40c60aebc8fb89ff24eae', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2251604f90eb5ae4a3ae9f7a9d8ca23335dc9d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04c1f0c87173046592fbad3da1cddadc4c134f5e', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05dd392b53ae9fc1a5a5f0477e87177d6af17281', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
377532321,LB-494: Make Last.fm importer modal responsive,"# Description

Make Last.fm importer modal responsive and add redirect link to user profile in it

# Problem

The last.fm importer modal is not currently responsive after it was ported to react. Also, the link that redirects the user to his/her profile after importing the listens from Last.fm is missing.

# Solution

- Make the  Last.fm importer modal responsive
- Add redirect to user profile in the modal",True,738,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/738,https://github.com/metabrainz/listenbrainz-server/pull/738,closed,7,4,4,4,2,0,0,1,[],2020-02-20 03:38:13+00:00,2020-02-21 20:19:38+00:00,146485.0,"1 day, 16:41:25",[],"[{'commit_sha': '6e76a962e7e04bb40a2812714dba3ce0162216fa', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e0f2d48476befe0b9ca36d23b7992645871ff02', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '971e0aa85402596c0e865e2316f2700eca75e685', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b349946f4ea940a71fcc66d2df7249b0097a89f3', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
391506910,LB-501: Fix DB setup scripts in manage.py,"# Description

This PR is in continuation to #761 

The commands `./develop.sh manage init_db -f` and `./develop.sh manage init_msb_db -f` raise psycopg2 errors [(JIRA ticket)](https://tickets.metabrainz.org/browse/LB-501).

# Problem

The command `./develop.sh manage init_db` -f throws an error
`sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  role ""listenbrainz"" does not exist`

A similar error is thrown on running `./develop.sh manage init_msb_db`.

# Solution
Running the queries in *create_db.sql* files for the associated DB creates the user and fixes this error.",True,762,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/762,https://github.com/metabrainz/listenbrainz-server/pull/762,closed,2,2,1,1,7,0,0,0,[],2020-03-20 12:30:20+00:00,2020-05-06 16:10:01+00:00,4073981.0,"47 days, 3:39:41",[],"[{'commit_sha': 'fe8b0ee651bab67d495e41d37d511effda2243d8', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
412461257,LB-533: Fix Incorrect timestamp argument max_ts: null when browsing listens,"# Problem

While browsing the listens the next button is not hidden when `max_ts=null`. This means no more listens for the user exist but the next button is still visible.

# Solution

Hide the next button when `max_ts=null` by setting `class=""hidden""` properly.",True,827,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/827,https://github.com/metabrainz/listenbrainz-server/pull/827,closed,2,2,2,1,0,0,0,0,[],2020-05-02 14:44:11+00:00,2020-05-02 18:40:14+00:00,14163.0,3:56:03,[],"[{'commit_sha': '9a8abe5f2945843326d40199d8e1568005a40d9f', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
412490823,Fix last_update_ts for user stats,"# Problem

The spark reader raised an error when the user stats are calculated for the first time as `last_update_ts` is None and hence can't be used in datetime operations.

# Solution

Using a default min value for datetime (in UTC timezone) for last_update_ts if its None fixes the issue.",True,828,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/828,https://github.com/metabrainz/listenbrainz-server/pull/828,closed,5,1,1,2,1,2,0,0,[],2020-05-02 18:35:13+00:00,2020-05-02 18:49:57+00:00,884.0,0:14:44,"[{'comment_id': 418992718, 'comment_body': ""brackets around if conditions isn't really pythonic."", 'comment_created': datetime.datetime(2020, 5, 2, 18, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 418993152, 'comment_body': 'My bad', 'comment_created': datetime.datetime(2020, 5, 2, 18, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': '0f850c562c5676c081f4d7da6068b6e18ca40304', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9a3ae0f87ea21c6ef3d44cc3f791009cea44b9a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
414107379,LB-556: Fix user stats on deleting listens,"# Problem

The stats were not reset when a user deleted their listens.

# Solution

- Add a function to delete user stats and call it in delet_listens_history function.
- Add associated tests.",True,836,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/836,https://github.com/metabrainz/listenbrainz-server/pull/836,closed,25,2,4,4,1,0,0,0,[],2020-05-06 13:46:33+00:00,2020-05-06 16:39:21+00:00,10368.0,2:52:48,[],"[{'commit_sha': '7b01d3216c38eb438d678ee9cc627621937ad590', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73d337339e6623505d945beebf57c903673b43ac', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6e2249b0598e3ab7cbd047b90d02186a4594e67', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '497cbb796b72a4bc487aa4cc9939106d65f6aa27', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
451823278,"Timescale final PR, hopefully",This is a newly rebased branch of the timescale work.,True,968,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/968,https://github.com/metabrainz/listenbrainz-server/pull/968,closed,2412,2756,83,166,2,0,0,0,[],2020-07-18 09:22:55+00:00,2020-07-22 15:40:22+00:00,368247.0,"4 days, 6:17:27",[],"[{'commit_sha': '9a3d80739739967865d40de3eafbc4cc945a7406', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55857e707dd85a612eb69ab2e386804a8bf6cd86', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99822f48a109293231c419a2c0cc66bbfaf98169', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '571f920a9c1b010839d4295b6f26643d4e646e58', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f10c822f1bc9ebdcd2cda404bf7e78959ad74893', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf8d041fddd34caf7f6062b1ada3376d091a29c6', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65731dd6e491e37e2535bce1a214054cc5d15182', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c58253bb400ea0a5ec8267b70f5562e477f8e717', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1febbcc5d62633afc0ce7488357c05413a4dea1', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd27aa20fadd08914b66232117a1d201e77b3ade2', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bbc3686b15d102edf8064e9cd2e8bedd4dc8b6e', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2c1f25b56dd1bcd17db1d1e2df57892327e5287', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61e987b97d68fd7bf217e260c184eb407c2ad705', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '895605dd5a80a5b5022593c041f600f5ff9d0ba1', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a14b710114ad58606ce0345da181a6ea25f286d', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '424cb59e3147e2396d47592659a2ecf39615939f', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8065c2a6fd8a32b25c50c885313e79163f632d0f', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '839f77fd86a9640b51a4eb44da7c48257f238dd4', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcb7da9abacaed7e73eb63033a3d76b892dd1f13', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdb50e8cfb599f9a491105f5c2b83c6a5fb1d851', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7a06da55a8eec8575fd38fa66ca8b644acb8175', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1e9acda588045d1c7ea6864aca160bb0b5d2334', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e174a161d29d3319cd3b5fc3c2136580cfab5fb', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '036d5f725e498bde70d36050767ab188f3508c4e', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa8b0c19f010960b43954a56002a9c03e751e50f', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3440cdd01a153cbf853c50f0d455bba92043514', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81604983e59e80f560b82f18205209f23e208608', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdcedba7e082f950e13ee7cacecda197143c454d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2fc4241fc24aa146939b97383d3a80a6443aff5', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e229e51fb20a8cf9a73f255c046e170574ddc3d0', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8aa32e4d2024274da9f40b003fd8a75828e2c477', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2020607ed84314fb65ec2cc1f4fe5e839e5f667', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13687e31ac96e52ed0ce4fee0654ecf41aa6cfc9', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db5994164b5f54570427613efee3e8eb236f1427', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af1294fc2c152f5b5abc38ddfac5fea5350279cb', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '067aa0315474c7377b47b769cfe764635ab57540', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43a739b4d8ded932f70e9ab172f342d0065f128a', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87f972e4e792f6ef3ad3abd767aed626c477088c', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed40c6650cdf9849c564ca327c1de591dd61725a', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f6c96609f312b58dbf12e29250d99a75eca139c', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b4061e1ed3ee4fb549c24d4edfde7eb33594e8f', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd9b9ff8faf7cb020f288a85bddf3a5f728cf72a', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cc4a8cf1686ae27651716facd523c64e9068671', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b19ff998561bb5e746daf58ceabe004162b1027', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3221e092303b2047127880704cd01a4617a3328f', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2dcc8fdd389e653d68c741cff5922f0140625b0', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79a52e77f878abf0e0dd9f9d451be27f10348f4c', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c03de42a2ed3b94adf38ccc1ad02f6796104723', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cd24e8af35d3a1457faab71bbe8975feff3599d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '330260e40376b823f226dde4d1e2375c05b7865f', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8ee786fb6d561a8b0e948bf83e3796769838fa6', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e59f8f975a087f28107f75d1fe3465f779bbe8f7', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93cb9671a1876c0025785126939fbc229dd2e9cc', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f49c3ea1e635da40570ef27f94e6d429e560d466', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f7109f9e9b335c25025fd063ff46591813af353', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69327470bf94f8e93554aa7a919db0087df1e05a', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a3e1108b9d8ddc16840ea633d1f64eec5af218e', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9815f65ede12f253c5dbb1640cb3c5a2194414dd', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3f78392e1df338292522dca28e90a4875893ad3', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21515f58c26c2f9904fa511751dc19a37798b0db', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80aae8056895ad4f68324024c74a28edafc327cf', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '942e46fc4367cb60e80e98cc70992fa73c8cfd52', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '470f63b54856b6c757bb159b05387516bd96fd39', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '494d9beb05fbe1b70064705173ea871254ef4b88', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b65ea4798f53113dbda9fb7d9baa54c8bbc963e1', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2abafdef1db77ee1b7d1cbd361c1aeea9593e7b5', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eba87c6e3897e97a7c6d0f434523dde8f5f493a7', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5f54aeab86edc6f0ffc0bbec3dc9de53836ca0', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43529058f5bc80b0bf06e6b1d53c2b9bc1c838d2', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dabe38903e7cf0e97e772fa61b8b834519116fe4', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c043184c98c971f8b40ee9f69d546911e59b7dd5', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd1f67bd14d00fc975f742019994c43e9853f435', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc7b38d8dfdcc682d8e68db4bc88bd681369aea0', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8617776239a9ffeb91f2ef3343e2febf563c9a6d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82fa35913229d84b631c3e860c55b09f8f652d51', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '166a24dea528e962f001a707cfaff60158e9a8a5', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '595901ea67bee443ba4b34bfaf3188f8f87f49bd', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cf80797c8b11f4e51303d59f70927f102a6b6e4', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28e16deb7f3afd5992db66de1a8edd42992211da', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2823aa8288a8722d2f598bee2cee19ec06175e29', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd97d3347705a553f8f6e0790176423c5bc0c7e5', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9199890906511f2c4054c11004d80120580f5ae7', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '948a8e95554895c67b0b41a6eebc427a0faa42a6', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cadc6827070dc590fdb5e93fd8fd00b05235f56d', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38b2ed927eb8c4b2b462d8bd0a69cff8a2cb1e1b', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8fc797502efced58e64362bbbb6c766c1f5cbaf', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf5b66329e65f2cfd410d5c14d79f453a220e00', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd83728942a381aaca2aeb3a0b455b74f407bcb82', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f446c97bca6cee59582850970335dfdd851f2ce9', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1817d698bf7d677186b7dd5852b0507d04afaee3', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9c8e13aef84a72cfdb33b202c8f4214d6915b99', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ade93ed1d5d37fe1268de73c8e5b4f26aba3058', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70bd4ce590fcde63f5d66a67cbd94c2442f1ffd3', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02dfc4350e91ffb29ae28cb751d4e8f15542b789', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47aa415f5e9d6091e4cbeb2456e374e4f3b31687', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d02ff2984c34d32b44151fa17dd7a0c8377fab6', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21b0d0c2fda363b9581546cd672f52baf144e748', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef4b081b8aac39d656ac09ff9115cb2830082fe6', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8f86a2791757634d1d3c0ab057fbb3eb530e8e2', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60295789a3b963275075a6a8e8b078d68deb9b67', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd55c23a30a62e2bca37c9f20fb389e1015c93e5f', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2995cbd78d7149486f98b508c7b6fddc76bad699', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7b3addd599e3a941c4dd378e91a37862de871f6', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af8af39d6b5001f37cc4fc16ab735c9458b40681', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08e410e619d7527422632a085c58793e80ab6128', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79be8822fe26e7fce8fa62dd56f7619b8814921c', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3e116912de2b9103c010557b67c1564c110f58e', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc3ed50bd1a6c64d392822298b80167d997c10a0', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '532883ebc149df561b9e20995e8a10350a039b71', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62e82fe2e091289f3140bb45bb2310a99052389d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '834f0b795b24169e043e77b4d62f1779396bad37', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccf610c0563919b4628216eabeddbb0f98bae9db', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70181d6e72e5535fd4894a8192b076f5682905b8', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6c19ebf34390386faee554324e603e6e5255066', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04893517fdefe0e0efcaa2408b8676f409411da3', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49c1b12145e68e761c6be672932ae8ba70f46fe3', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a62ed21ee1181dd8daea66912d0aeb6b8c64b2ea', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29be3b499e2823465a925258da6289eb55d69edb', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80b35a07d587a2e60ab96854a9f4834e74db29f5', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03b9a12e5371f46c90cc0d0bff6020fa396eae81', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c1cc01c19cae1a41617ce218b2e9ad1ffd7c67e', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31a654cbc75329712c4ba61741a30ca9708aa000', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faf7d3c97630266c8326a44b2f37b27cb54c0e34', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef5a80f8c21a893959299f76d7ed6cbf003c87ec', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd97fdfb4277c29c7d1ffbf7b707daa6264f4ea41', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5bcbaf7e33007a8d4c81d7d6102364b443f1677', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e402ec6cf29f99ada9d800d12b5950cc175006b', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '648344951e0c03db198a17e48fd6128345b3b614', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb9c20441d63d4000b36c2a282485df5c131e33e', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9019cba411b119aa715ed8dfc593ce72341debb0', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6f3484d82627d094c8854c21fa9fa6c482336a3', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7488603a4d1fe59e0069d8c1f998476036ec1add', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '462f44f9570cf702f24602832405fd0cdd4282e4', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8f6cc5c80c36a390c80281e4fbbe7e9e909ca08', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1969e3404a77d22da10b8b839bd1cbf1c7e0b6af', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a5a621d8933b86af07dcc211c0624eb51325234', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e2125505d1bc29549069be0e1a69291598bc0c9', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe1b21ca69079cad24166541db514c788a6171a2', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9c602bbf62157b281179edf40692da1fd414f68', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43eceec381a6ee385109c3d50532d3cce4ab3d79', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1177b93686a5c40f528378f270eb8bef2d4a05f', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36ce13fa2f5b4d491bc1cfe001ddf6a7f5fea90a', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f44c47f24dffb799941a2ee33c296dbbf3c83bd0', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69fb806ebcdd2b7484355725ef2ee1445543eb5c', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3af69a0990c09b098c7bee634f3f181bcaf32297', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c341f0e7746c9c723d67b91f771cbbc68df61b64', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b587c22d2410b9c0c08320518a1ae5b9989ec5fa', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64660c3b2b57d4f8c6dcadab7e1f77830a59c4dd', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ce243a4cd1ac4ba53ddef701250fe9b4a21c593', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e73840ee5a3b85942d0995ead3645b924e26e6f', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05e62fe5848733a8d46c5696b5b2de9b166a54e1', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f44f7d7a2de225f13500b605546425c689abe83d', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '771b8e195b96319652b6696e8e58ebaeb5a883b6', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a8e0563f30d63ae51a6bfd99a69041f991e79e9', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8ba9ed35ee17d6a2c8832e3d4ff8cf04b054d80', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f58581f69d330104947e5afc071c32ea8bf65bfd', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04e0f499d60666b48e439c72e6d4109dd28efe67', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54e2ba46c18036afd30db1dcab135d599452e4a3', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd66235f9e86cbbcdb60863524417b0c314917a0c', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76d00783dd0e67a1d064b2e5a028e63ce5fc08ac', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1df00c6adb7328c542748f7b1a43141eda0733b8', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad5f55c0e895223bdc6fef55aff97041ab49cb04', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c64f52ba837311288003fc003df8c8d222ae40a6', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dc94fc18386b0f2238fce6fc82a1725879a9270', 'committer_username': 'ishaanshah', 'committer_name': 'Ishaan Shah', 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 18, 12, 54, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1569bf5617e001032ba11f87685f4400ad78c6dd', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfd9d74bf36a8d7c7450910c308cf332394fb321', 'committer_username': 'mayhem', 'committer_name': 'Robert Kaye', 'committer_email': None, 'commit_date': datetime.datetime(2009, 1, 27, 20, 28, 53, tzinfo=datetime.timezone.utc)}]",Robert Kaye,49745,,User,,90,,7,146
414165563,LB-567: Merge test scripts,"# Problem

Listenbrainz currently has 4 test files
- _test.sh_
- _integration-test.sh_
- _frontend-test.sh_
- _spark_test.sh_

These all can be merged into one file.

# Solution

All these can be merged into `test.sh` and appropriate options can be provided to run particular tests.

- `test.sh` (for all tests)
- `test.sh fe` (for frontend tests)
- `test.sh spark` (for spark tests)
- `test.sh int` (for integration tests)",True,837,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/837,https://github.com/metabrainz/listenbrainz-server/pull/837,closed,223,124,7,10,1,6,0,0,[],2020-05-06 15:22:07+00:00,2020-05-09 14:07:01+00:00,254694.0,"2 days, 22:44:54","[{'comment_id': 420933950, 'comment_body': ""Can we call this `./test.sh -fe`, I don't wanna type `frontend` everytime"", 'comment_created': datetime.datetime(2020, 5, 6, 16, 40, 8, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 420934277, 'comment_body': 'does `fe -u` do two things?', 'comment_created': datetime.datetime(2020, 5, 6, 16, 40, 38, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 420979638, 'comment_body': 'Sure. Thats too long :p', 'comment_created': datetime.datetime(2020, 5, 6, 17, 50, 37, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 420980706, 'comment_body': 'Oh no thats a mistake. Sorry', 'comment_created': datetime.datetime(2020, 5, 6, 17, 52, 21, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 422036272, 'comment_body': 'new line?', 'comment_created': datetime.datetime(2020, 5, 8, 9, 12, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}, {'comment_id': 422041552, 'comment_body': 'Added', 'comment_created': datetime.datetime(2020, 5, 8, 9, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': '0d13b592b3d6dc1083652a0c24ee03dbc2e5dd36', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1f319da1282e32f114c3de6295051467c1e5667', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d0cfeb6764f235fa37bcd3f10ffe193d9b2f366', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e76a4c66a9dba0412411fc4c6d19969a5f3bc3b', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82c9578722c413b4835401bfb6c2e7c5e15d0ecc', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a8c80bd005ee4368f5b53f98017abbd62e398b1', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3a40706bd2adeb92b3011bd350b0e231a08805b', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bbd4c98e55975a1a1dd0a8e01cc6611cb5bd929', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64898d04db1cdd8e4c5a28e76089a6e4bb26a871', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29154d87455ad386e1bf5034b68ddd32c440ca04', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
419104238,LB-591: Upgrade postgresql-client to 12 from 9.5,"# Problem

After the lastest upgrade to postgresql 12, the postgresql-client was left for upgrade.

# Solution

- Update the _Dockerfile_ and _Dockerfile.test_ files
- Update _develop.sh_ to use URL to log into psql.

# Action

The steps I followed are
1. Copy configs
2. Update dockerfile
3. `./develop.sh build`
4. Remove old image 
5. `./develop.sh psql`
",True,861,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/861,https://github.com/metabrainz/listenbrainz-server/pull/861,closed,5,4,3,3,0,7,0,0,[],2020-05-17 12:11:55+00:00,2020-05-17 12:41:06+00:00,1751.0,0:29:11,"[{'comment_id': 426254366, 'comment_body': ""By default, we'd want to log in as the `listenbrainz` user not as `postgres`"", 'comment_created': datetime.datetime(2020, 5, 17, 12, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 426254427, 'comment_body': 'can we just do `psql -U listenbrainz -h db -p listenbrainz listenbrainz` here instead of duplicating the variable from config.py? Is there a way to not make this change at all?', 'comment_created': datetime.datetime(2020, 5, 17, 12, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 426254720, 'comment_body': 'If we keep the old setup it will prompt us to add password everytime. Alastair suggested to use URLs when we were changing timescale branch, so that we are consistent in how we connect to postgres', 'comment_created': datetime.datetime(2020, 5, 17, 12, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 426254807, 'comment_body': 'Actually, there is no `-p`, we could set the PGPASSWORD env variable instead...', 'comment_created': datetime.datetime(2020, 5, 17, 12, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 426254907, 'comment_body': 'Oh sorry', 'comment_created': datetime.datetime(2020, 5, 17, 12, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 426256029, 'comment_body': ""Let's change the variable name here too"", 'comment_created': datetime.datetime(2020, 5, 17, 12, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 426256236, 'comment_body': 'Oh sorry :/', 'comment_created': datetime.datetime(2020, 5, 17, 12, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': 'd2517d1260b2a5b5bf369355708a8d9341ebc1e5', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db05697371e7dc50067ebd99062dd5b8c4eab89a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c40da2785febb1ada7bc9f35683589f46ea9d9c7', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
417563438,"LB-586: Fix bad font of the ""Copy token"" button","# Problem

The unnecessary glyphicon class makes the ""Copy"" button text look bad.

![image](https://user-images.githubusercontent.com/33172244/81855351-ddecfa00-957c-11ea-884d-dc3e1020fd8b.png)

# Solution

Removing the class fixes the issue.

![image](https://user-images.githubusercontent.com/33172244/81855720-56ec5180-957d-11ea-8909-dad568e424a2.png)",True,850,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/850,https://github.com/metabrainz/listenbrainz-server/pull/850,closed,3,3,2,1,0,0,0,0,[],2020-05-13 19:23:45+00:00,2020-05-13 20:06:25+00:00,2560.0,0:42:40,[],"[{'commit_sha': 'd775028902b52d12fae7f80480b2473b37bfffef', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
420200693,Implement the database changes and SQL scripts for the lovehate table,"This PR aims to 

- Implement the database changes to create the `lovehate` table.
- Create an SQL upgrade scripts to make the changes in production.",True,865,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/865,https://github.com/metabrainz/listenbrainz-server/pull/865,closed,34,0,5,3,1,0,0,0,[],2020-05-19 15:37:40+00:00,2020-05-19 17:25:09+00:00,6449.0,1:47:29,[],"[{'commit_sha': '2bc802930c31c67fa72df094d815d2e8d1f3ca41', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48facec31e1d934514c1b8b4052f56e9f862add7', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b3a6542a923b67ee1b9ba4f8a2657eeac3fccf5', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
420201952,Add python module to interact with lovehate table,"This PR aims to add a python module to perform `insert`, `delete`, `update` and `fetch` queries on the feedback schema. ",True,866,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/866,https://github.com/metabrainz/listenbrainz-server/pull/866,closed,293,0,4,15,3,55,0,0,[],2020-05-19 15:39:43+00:00,2020-05-25 16:25:32+00:00,521149.0,"6 days, 0:45:49","[{'comment_id': 427870173, 'comment_body': 'I suppose at some point we should also change this to insert_feedback_record. And if the module is called feedback, then this could just be called insert(). Pretty simple...', 'comment_created': datetime.datetime(2020, 5, 20, 9, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 427870628, 'comment_body': 'Yay for the on conflict clause!', 'comment_created': datetime.datetime(2020, 5, 20, 9, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 427871343, 'comment_body': 'get_feedback() ?', 'comment_created': datetime.datetime(2020, 5, 20, 9, 30, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 427874102, 'comment_body': 'This function and the next feel weird to me -- not sure we ever want to fetch just one. Buy ok, it exists... But the names are confusing -- you have to read the docs before you get what they mean. \r\n\r\n@paramsingh what do you think?', 'comment_created': datetime.datetime(2020, 5, 20, 9, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 427896331, 'comment_body': 'Makes sense. I m already on it', 'comment_created': datetime.datetime(2020, 5, 20, 10, 12, 21, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 427924525, 'comment_body': 'I tried to resolve the names to better names. Perhaps these will be good now', 'comment_created': datetime.datetime(2020, 5, 20, 11, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428000529, 'comment_body': ""let's start using python type hints in new code, and slowly start migrating other code as we touch it.\r\nIn this case, this is as simple as putting these types in the function definition: `def insert(user_id: int, recording_msid: str, score: int):` and removing it from the docstring. Nothing else needed for now"", 'comment_created': datetime.datetime(2020, 5, 20, 13, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428000996, 'comment_body': 'where will validation on this value happen? do other numbers have meaning? -10? 0? 20? Do we want to limit the ranges here at all?', 'comment_created': datetime.datetime(2020, 5, 20, 13, 16, 53, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428004666, 'comment_body': ""Did we want to consider if a user's feedback for a song changes over time? Maybe they used to like it, but no longer do. Or they like it in the mornings, but not in the evenings, or they only want it when they're in a particular mood.\r\nThese are all possible future uses of this data, and I understand if we don't want to support it right now, but perhaps it could be interesting to store multiple feedbacks rather than overwriting them?"", 'comment_created': datetime.datetime(2020, 5, 20, 13, 21, 42, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428005639, 'comment_body': 'I was thinking to validate the values at the API endpoint function to prevent unnecessary db calls if the value is not in [-1,01]. \r\n@alastair does this check seem ok to you or did I miss an edge case?', 'comment_created': datetime.datetime(2020, 5, 20, 13, 22, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428005758, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 5, 20, 13, 23, 6, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428020080, 'comment_body': 'I am not quite sure about allowing multiple feedbacks. I mean if we want to know how the feedbacks for a recording drift over time, we may like to allow multiple records. \r\nI would like to know what @mayhem and @paramsingh have to say about this? ', 'comment_created': datetime.datetime(2020, 5, 20, 13, 41, 39, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428021028, 'comment_body': 'I am somewhat inclined to return the `username` rather than the `id`. @mayhem Please let me know your opinion.', 'comment_created': datetime.datetime(2020, 5, 20, 13, 42, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428135606, 'comment_body': ""It depends on what we want to use this data for. If it's to give to an external endpoint for a user to use, it should definitely be a musicbrainz login name. If we need to use this information for internal stuff, it might be better to be an id, so it definitely depends on the final requirement."", 'comment_created': datetime.datetime(2020, 5, 20, 16, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428137135, 'comment_body': ""Take a look at how we return this kind of data in other places in LB:\r\nhttps://github.com/metabrainz/listenbrainz-server/blob/b73de5f5/listenbrainz/db/spotify.py#L187\r\nhttps://github.com/metabrainz/listenbrainz-server/blob/b73de5f5/listenbrainz/db/user.py#L412\r\n\r\n2 things:\r\n * we use `fetchall` when we know that there are many rows to be returned\r\n * we just use `dict(row)` to turn the row into a dictionary instead of using an external formatting function. Note that an item from a db cursor is both a list _and_ a dictionary. If needed you can use `row[0]` but also `row['user_id']`"", 'comment_created': datetime.datetime(2020, 5, 20, 16, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428196638, 'comment_body': ""this `while true` is a bit scary to me. I know the loop will eventually break, but I'd still prefer if we just used a for loop through all the records, instead of a `while True` and a `break` "", 'comment_created': datetime.datetime(2020, 5, 20, 17, 47, 32, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428197307, 'comment_body': ""```suggestion\r\n            records.append(_format_recording_feedback_row(row['user_id'], row['recording_msid'], row['score']))\r\n```\r\n\r\nSomething around these lines will probably work too, and is easier to understand. Also, maybe it's a good idea to use named parameters for `format_recording_feedback_row`"", 'comment_created': datetime.datetime(2020, 5, 20, 17, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428197487, 'comment_body': '++', 'comment_created': datetime.datetime(2020, 5, 20, 17, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428197668, 'comment_body': ""same here, let's do it how it's done in other places."", 'comment_created': datetime.datetime(2020, 5, 20, 17, 49, 12, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428197832, 'comment_body': ""instead of the integer indices, let's use strings"", 'comment_created': datetime.datetime(2020, 5, 20, 17, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428198194, 'comment_body': ""I don't think we need a seperate json file for these tests, I'd prefer if you just kept the dict in code, it's easier to read that way."", 'comment_created': datetime.datetime(2020, 5, 20, 17, 50, 3, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428199678, 'comment_body': '```suggestion\r\ndef get_feedback_by_user_and_score(user_id: int, score: int):\r\n```', 'comment_created': datetime.datetime(2020, 5, 20, 17, 52, 33, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428199943, 'comment_body': 'why not both?', 'comment_created': datetime.datetime(2020, 5, 20, 17, 52, 55, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428202233, 'comment_body': 'not exactly ideal, but something along these lines would be nice. we have `get_user_by_mbid` in `db/user.py`.', 'comment_created': datetime.datetime(2020, 5, 20, 17, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428202767, 'comment_body': 'We could store multiple rows and just show the latest one on the listen page. I think storing as much of this data as possible might be a good idea?', 'comment_created': datetime.datetime(2020, 5, 20, 17, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428211885, 'comment_body': 'I don\'t think we should return the user_id in the case of API endpoints. I guess the class approach can get it solved with the class approach. We can have to methods\r\n1. to_api()\r\n2. to_internal_methods() (""yet to think its name"")', 'comment_created': datetime.datetime(2020, 5, 20, 18, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428213407, 'comment_body': 'right, but this is the database function, just return both here and take the one you want for the API.', 'comment_created': datetime.datetime(2020, 5, 20, 18, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428225390, 'comment_body': ""@paramsingh DB doesn't store user_name though. Makes sense to return only user_id and change it in feedback_api class, when needed?"", 'comment_created': datetime.datetime(2020, 5, 20, 18, 34, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428229869, 'comment_body': ""if you're gonna need the username later, joining in this query and returning here might be a better idea than having to run a different query later. I don't know how this will be used exactly, so I can't say."", 'comment_created': datetime.datetime(2020, 5, 20, 18, 39, 41, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 428537476, 'comment_body': ""As per IRC discussion, I think this data is going to be sparse and we shouldn't bother collecting it now. If we need it later, then we can always turn it on. Let's keep the on conflict clause."", 'comment_created': datetime.datetime(2020, 5, 21, 9, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 428603451, 'comment_body': 'Added better names', 'comment_created': datetime.datetime(2020, 5, 21, 11, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428603598, 'comment_body': 'Added a validator check in the class.', 'comment_created': datetime.datetime(2020, 5, 21, 11, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428603773, 'comment_body': 'Standardized the returned object.', 'comment_created': datetime.datetime(2020, 5, 21, 11, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428603850, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2020, 5, 21, 11, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428603932, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2020, 5, 21, 11, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428604045, 'comment_body': 'Added named parameters.', 'comment_created': datetime.datetime(2020, 5, 21, 11, 47, 33, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428604100, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 21, 11, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428604189, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 21, 11, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428604261, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 5, 21, 11, 48, 3, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428604337, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 5, 21, 11, 48, 15, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428614869, 'comment_body': ""just a thing to be aware of here, this will be a UUID object, not a string. In most cases this probably won't be a problem - postgres will happily accept it as a value, but it does mean that the type definition is incorrect. Also, you might find that some places don't like it.\r\nMaybe better to use `str(rec_msid)` here"", 'comment_created': datetime.datetime(2020, 5, 21, 12, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428615646, 'comment_body': 'Makes sense', 'comment_created': datetime.datetime(2020, 5, 21, 12, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428616295, 'comment_body': ""the definition of the user_id field in the database schema is `NOT NULL`, so this will never be None. Therefore I don't think the `if` is needed."", 'comment_created': datetime.datetime(2020, 5, 21, 12, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428616755, 'comment_body': 'If pydantic works well for us, we need to make a decision on how to construct these objects. This works fine, but we could also do `[Feedback(**dict(row)) for row in result.fetchall()]`', 'comment_created': datetime.datetime(2020, 5, 21, 12, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428619835, 'comment_body': 'Yep', 'comment_created': datetime.datetime(2020, 5, 21, 12, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428645321, 'comment_body': 'too many __ here in `user__id`', 'comment_created': datetime.datetime(2020, 5, 21, 13, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428645618, 'comment_body': ""it'd be nice for this to say that it returns a `Feedback` object. "", 'comment_created': datetime.datetime(2020, 5, 21, 13, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428645742, 'comment_body': ""this isn't needed here and in a few other methods"", 'comment_created': datetime.datetime(2020, 5, 21, 13, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428646379, 'comment_body': 'should be some basic documentation here explaining what a feedback is.\r\n@paramsingh what do you think about location of this? We could either keep it in the module in db associated with reading/writing them, or make a separate `models` package. Thoughts?', 'comment_created': datetime.datetime(2020, 5, 21, 13, 20, 39, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 428658842, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2020, 5, 21, 13, 42, 41, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428658945, 'comment_body': 'Oops. Removed', 'comment_created': datetime.datetime(2020, 5, 21, 13, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428659172, 'comment_body': 'Documentation added.', 'comment_created': datetime.datetime(2020, 5, 21, 13, 43, 12, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428662278, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2020, 5, 21, 13, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428662505, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2020, 5, 21, 13, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 428865261, 'comment_body': ""hmm, i'm thinking of how we'll import it and I think for now it makes sense to keep in the db module."", 'comment_created': datetime.datetime(2020, 5, 21, 19, 27, 42, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}]","[{'commit_sha': 'bb925f82682b6caf66ac85015cda30217db02cce', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fdce722e241c19a0658efa16d7597c06ab6803e', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8eb53fbfd5b957adea8466f663cc4955e6cceeaa', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d657c79b912acfc49df262d5adedd5f3da48342', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4abd06d35e0b26faa1d2e9806243edb475cf77f4', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27a8901dc412e9140246a8729a2ac08c3994ba0c', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f558c482261849e58d0c9c6fc5773eaf330817c', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f29804ca80ddffb599f4518ff386780fca69bf73', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45b49e55d530e341549a2e92b00bd48810dc67ad', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83b260378cf1261fb13edbef4385aa160e8f5004', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05beca2de4ac8cc284b23a788456969f1436c28d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d6e751b340375e2f8249a5f7bfc24a60f5dcf93', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3b86f46029b230dd86c5407ade6120c50f7dd4a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e49170973f3069334033b8c6587e3617fa8cdb39', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '842ed559ebe0ccdc038e9ba8291105b852a127e6', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
420810078,Add Feedback API endpoint,"This PR aims to

- Add APIs to submit and retrieve the feedbacks.
- Add the required API tools.
- Add reference JSON for feedback APIs.
- Add tests for the APIs
",True,869,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/869,https://github.com/metabrainz/listenbrainz-server/pull/869,closed,874,27,8,13,1,50,0,0,[],2020-05-20 15:00:07+00:00,2020-06-05 08:39:54+00:00,1359587.0,"15 days, 17:39:47","[{'comment_id': 429178377, 'comment_body': 'We can nuke this, since we will strictly check the input and will reject anything that could be copyrighted.', 'comment_created': datetime.datetime(2020, 5, 22, 10, 51, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 429276641, 'comment_body': 'This is also not needed since a feedback object is nearly fixed in size.', 'comment_created': datetime.datetime(2020, 5, 22, 14, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 429277174, 'comment_body': 'There is not need for this extra layer. Just have the recording_msid and score on the same level as user_id', 'comment_created': datetime.datetime(2020, 5, 22, 14, 23, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 429277389, 'comment_body': 'obvs make this one match the one above.', 'comment_created': datetime.datetime(2020, 5, 22, 14, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 429278744, 'comment_body': 'if we even keep this, we should drastically reduce this to something near the actual size.', 'comment_created': datetime.datetime(2020, 5, 22, 14, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 429279594, 'comment_body': 'I think we can nuke this part. ', 'comment_created': datetime.datetime(2020, 5, 22, 14, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 429282616, 'comment_body': 'The JSON being posted to the endpoint is simple enough that I think we should use request.json and leave the parsing of json to flask. I think you can drop all the code from here until line 55 and use the built in json support.', 'comment_created': datetime.datetime(2020, 5, 22, 14, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 429390119, 'comment_body': 'Nuked', 'comment_created': datetime.datetime(2020, 5, 22, 18, 15, 15, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 429390202, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2020, 5, 22, 18, 15, 25, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 429390277, 'comment_body': 'Simplified', 'comment_created': datetime.datetime(2020, 5, 22, 18, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 429390332, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 22, 18, 15, 45, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 429390375, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2020, 5, 22, 18, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 429390451, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2020, 5, 22, 18, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 429967967, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2020, 5, 25, 14, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 429996309, 'comment_body': 'you should log the error internally (self.log.error or so), and include the complete error message you can get from e.', 'comment_created': datetime.datetime(2020, 5, 25, 15, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 429997375, 'comment_body': ""The request.args seems like a leftover, here. If you intend to print out the value that was sent, you should improve the format string. I'd say take it out."", 'comment_created': datetime.datetime(2020, 5, 25, 15, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 429999217, 'comment_body': ""This is a bad DB access pattern. If a recording has 1000 rows of feedback by 1000 different users, you'll execute 1,000 queries. You should make a list of users and then fetch them all using an SELECT ... FROM table WHERE user_name in ([list]). "", 'comment_created': datetime.datetime(2020, 5, 25, 15, 51, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 430063174, 'comment_body': 'why are we catching an API error from the database?', 'comment_created': datetime.datetime(2020, 5, 25, 20, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 430063388, 'comment_body': 'this seems random, do we really need to do this? If yes, we should have a more detailed comment saying what this does.', 'comment_created': datetime.datetime(2020, 5, 25, 20, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 430063755, 'comment_body': ""this does not seem the right way to do what you're trying to do. I think you want the dict() method on pydantic models here?"", 'comment_created': datetime.datetime(2020, 5, 25, 20, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 430063888, 'comment_body': 'Should this endpoint have a limit and offset for pagination? ', 'comment_created': datetime.datetime(2020, 5, 25, 20, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 430063924, 'comment_body': '\r\nShould this endpoint have a limit and offset for pagination?\r\n', 'comment_created': datetime.datetime(2020, 5, 25, 20, 12, 36, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 430064179, 'comment_body': ""`/1/feedback/submit-feedback`? I'm wondering if this should be recording feedback? Feedback could refer to many things."", 'comment_created': datetime.datetime(2020, 5, 25, 20, 13, 54, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 430064244, 'comment_body': '```suggestion\r\n        feedback[i] = fb.dict()\r\n```', 'comment_created': datetime.datetime(2020, 5, 25, 20, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 430064691, 'comment_body': '```suggestion\r\nTo submit feedback via our API (see: :doc:`api`), ``POST`` a JSON document to\r\n```', 'comment_created': datetime.datetime(2020, 5, 25, 20, 16, 29, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 430339004, 'comment_body': 'Added', 'comment_created': datetime.datetime(2020, 5, 26, 11, 20, 56, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430341135, 'comment_body': 'The `request.args` is passed so that it can be logged as an error internally. See [here](https://github.com/metabrainz/listenbrainz-server/blob/master/listenbrainz/webserver/views/api_tools.py#L278)', 'comment_created': datetime.datetime(2020, 5, 26, 11, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430341279, 'comment_body': ""Shouldn't be here"", 'comment_created': datetime.datetime(2020, 5, 26, 11, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430457148, 'comment_body': 'Oops. Improved.', 'comment_created': datetime.datetime(2020, 5, 26, 14, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430457593, 'comment_body': 'Improved the comment.', 'comment_created': datetime.datetime(2020, 5, 26, 14, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430457734, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 5, 26, 14, 30, 49, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430457841, 'comment_body': 'Added', 'comment_created': datetime.datetime(2020, 5, 26, 14, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430458124, 'comment_body': 'Updated to /1/feedback/recording-feedback', 'comment_created': datetime.datetime(2020, 5, 26, 14, 31, 20, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430458320, 'comment_body': 'Updated. Thanks', 'comment_created': datetime.datetime(2020, 5, 26, 14, 31, 33, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430458633, 'comment_body': 'Oops. Updated.', 'comment_created': datetime.datetime(2020, 5, 26, 14, 31, 54, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430458807, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2020, 5, 26, 14, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430459265, 'comment_body': 'Oops. Updated. Thanks.', 'comment_created': datetime.datetime(2020, 5, 26, 14, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 430460976, 'comment_body': 'typo ""speicifies""', 'comment_created': datetime.datetime(2020, 5, 26, 14, 35, 6, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 430461521, 'comment_body': 'Better wording for stupid english: ""The total number of feedback _items_ for the""', 'comment_created': datetime.datetime(2020, 5, 26, 14, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 430463516, 'comment_body': 'Better, but the raise will never return, so you need to swap this line with the raise.', 'comment_created': datetime.datetime(2020, 5, 26, 14, 38, 28, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 430464332, 'comment_body': 'feedback items', 'comment_created': datetime.datetime(2020, 5, 26, 14, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 430466696, 'comment_body': 'Ahhh, right!', 'comment_created': datetime.datetime(2020, 5, 26, 14, 42, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 431856469, 'comment_body': 'When getting data from the database, it\'s often a good idea to let the database do as much work as possible. Partially so that you don\'t make a mistake when joining data together, but also because the database is much more efficient at collecting this data and returning if you request it all in one go.\r\n\r\nIn this case I see a few things that can be improved:\r\n * You perform the offset / count in python\r\n * you perform 2 queries - one for the feedback and one for the users\r\n * you manually link feedback and users together\r\n\r\nI would make the following changes:\r\n* In the database query, use OFFSET ... LIMIT to do the paging. You can pass these parameters into the `get_feedback_by_recording_msid` method.\r\n* Directly join the user table against the feedback table (`select ... blah, u.username from recording_feedback join ""user"" u on u.id = recording_feedback.user_id`), so that you get the feedback and the username in a single query. I think it makes sense to also include username in the `Feedback` model here. You could include both the user id and the username, making the id required (as it\'s needed for the database row). In some cases the username could be optional (e.g. when you\'re making an object to pass it to the insert method).', 'comment_created': datetime.datetime(2020, 5, 28, 13, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 433253137, 'comment_body': 'Done in #883 ', 'comment_created': datetime.datetime(2020, 6, 1, 14, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 433253461, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 1, 14, 4, 15, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 433253967, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 1, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 433254081, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 1, 14, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 433316117, 'comment_body': 'This seems hard to understand to me. Could we keep the args as variables and pass them explicitly into the function? That would be much more readable. ', 'comment_created': datetime.datetime(2020, 6, 1, 15, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 433316797, 'comment_body': 'Same for the other endpoint ', 'comment_created': datetime.datetime(2020, 6, 1, 15, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 433339056, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2020, 6, 1, 16, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': 'aa8871824953f12cc4b23ab2fd313bb989f1a449', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fedf1014edaeaf9a5d7751f875692f86faacfcdb', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e988677e35e229ce5a0ef7404801dfad75b3b601', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33c3ed5d6cd70cfbea9c766f8389fe01c5106033', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5af2d65826858b84622047ce8458657aaef54cb', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49c2da0042cf990c225a791b5b6c7f8780cff6e5', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2bcfd53904fefd26d05693555df750d41347f92', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '520bd609900c54fc13bcdb2afd0dd63451985ccc', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42f76ad57b95ace6cb3236bd6a88bc57779542e1', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c6003d5c50b7e09d998828836eabed77a759d8b', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3db3df090b2011f5af425b2bc0fa563299c24b8e', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88cf94dda7e6ee15b1d4e5d026b307e84f9f9ee1', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10d92f9d685b82781c69614cc90c8813842c4b29', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
425255813,Improve feedback module,"# Problem

The module did not serve the purpose properly for the APIs.

- We had to make separate access for getting `user_name`
- We were fetching all the records and then applying offset and count at the API level.
- There was a lot of repetitive code.

# Solution

This PR aims to address these issues by:

- Using SQL JOINs to fetch `username` along with feedback records.
- Apply LIMIT and OFFSET in SQL queries.
- Remove repetitive code.
",True,883,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/883,https://github.com/metabrainz/listenbrainz-server/pull/883,closed,197,110,3,4,1,6,0,0,[],2020-05-29 18:18:51+00:00,2020-06-05 08:14:05+00:00,568514.0,"6 days, 13:55:14","[{'comment_id': 432828745, 'comment_body': ""You should add something here to explicitly say that they're returned in newest-to-oldest order."", 'comment_created': datetime.datetime(2020, 5, 30, 10, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 432828763, 'comment_body': 'spelling: total number of recording feedbacks', 'comment_created': datetime.datetime(2020, 5, 30, 10, 6, 39, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 432828800, 'comment_body': 'this is wrong, should be recordings?', 'comment_created': datetime.datetime(2020, 5, 30, 10, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'alastair', 'type': 'User'}, {'comment_id': 432836301, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2020, 5, 30, 12, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 432836322, 'comment_body': 'Oops', 'comment_created': datetime.datetime(2020, 5, 30, 12, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 432836347, 'comment_body': 'Yeah. Sorry. Corrected.', 'comment_created': datetime.datetime(2020, 5, 30, 12, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': 'd97db2de8b9ae46291b30ff28c5abc2a6f468599', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c1cf74ee2ac797bb01bb97e4df3884bc40b0e66', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ead55e89f98b9bcc527493b19aed02b477886c1', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eea572529292ad82ca55f22c5e9dc279aaa0ec7c', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
434534610,Create dumps for recording_feedback,This PR adds the `recording_feedback` table to the list of PUBLIC_TABLES so that it can be dumped into the LB public dumps,True,918,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/918,https://github.com/metabrainz/listenbrainz-server/pull/918,closed,60,7,2,4,4,6,0,0,[],2020-06-15 13:18:00+00:00,2020-06-16 16:42:59+00:00,98699.0,"1 day, 3:24:59","[{'comment_id': 440179726, 'comment_body': 'The recording_feedback table is included in ""dumps of all tables"". This addition makes the comment read poorly.', 'comment_created': datetime.datetime(2020, 6, 15, 13, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 440184781, 'comment_body': 'Not sure I get you correctly. It reads _dumps of all tables in statistics schema_ or I misunderstood this?', 'comment_created': datetime.datetime(2020, 6, 15, 13, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 440789055, 'comment_body': 'Do you really need to add ""and recording_feedback"" here?', 'comment_created': datetime.datetime(2020, 6, 16, 11, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 440791441, 'comment_body': ""I don't feel strongly about it. I added it to specify that we also dump this table in the public dump. I can remove that if it makes the comment awkward."", 'comment_created': datetime.datetime(2020, 6, 16, 11, 53, 4, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 440794262, 'comment_body': ""Let's do that. No need to highlight this table in particular."", 'comment_created': datetime.datetime(2020, 6, 16, 11, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 440815912, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2020, 6, 16, 12, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': '6a9570c2b877a00612bac7c2b8f9aea7591aea11', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd5c312716701ead10127ef9292f50ef6113de32', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e32ac481226072565571a0333fc8c588ce3d4f4e', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bccb7bf55a248640f76c21c69be44e5f249cc769', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
436984438,Remove the Stats Calculation Request Section,"This PR aims to remove the ""Request Statistics Calculation"" section under the ""My Profile"" page, since the new pipeline based on Apache Spark is in proper action.",True,923,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/923,https://github.com/metabrainz/listenbrainz-server/pull/923,closed,23,63,7,3,0,0,0,0,[],2020-06-19 09:11:48+00:00,2020-06-19 17:27:45+00:00,29757.0,8:15:57,[],"[{'commit_sha': '1ef66872c55154eecca5fa83eb4a55fc183e768c', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66ac8a0a628393c867eb2ed1fb328f4f988340c0', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c797c1d82540c2d1dd33773f8146c96990da4d7', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
433217943,Add delete a listen feature,"This PR aims to add a feature to delete listen for particular `recording_msid` for the given user.

## Note

This PR is dependent on Timescale and can't be directly merged to master as Influx has some issues in deleting listens.",True,912,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/912,https://github.com/metabrainz/listenbrainz-server/pull/912,closed,186,7,3,1,2,21,0,0,[],2020-06-11 17:04:44+00:00,2020-07-24 20:06:57+00:00,3726133.0,"43 days, 3:02:13","[{'comment_id': 438945711, 'comment_body': ""You're missing the `% recording_msid` here."", 'comment_created': datetime.datetime(2020, 6, 11, 17, 19, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 438946660, 'comment_body': ""Perhaps this not ideal, perhaps it doesn't matter. But if the listen count just near expiry and we delete a listen and set the decremented listen count for the same duration again the date may be stale for longer. How about just deleting the key from redis and forcing a fetch next time?"", 'comment_created': datetime.datetime(2020, 6, 11, 17, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 438948564, 'comment_body': ""I think we can do this better -- the exception being caught is very general and we're sending the details of DB exception to the user, which isn't very nice. We should just tell them sorry, we could not delete this please try again later. I personally think you should catch the DB exception in the timescale module and raise something more generic that you can catch here. Make sure to log the error though.\r\nIf we can't delete listen, that is our fault so it should be a 500 error, not a 400. (remember 4xx is their fault, 5xx is our fault) "", 'comment_created': datetime.datetime(2020, 6, 11, 17, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 438949623, 'comment_body': 'You have two delete_listen functions here. And this one does very little, do we really need it?', 'comment_created': datetime.datetime(2020, 6, 11, 17, 26, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 439021399, 'comment_body': ""this would delete ALL listens with a particular recording msid, is that what we want to do? If so, we should fix the name of the function to make sure that it's clear that it will probably delete more than one listen."", 'comment_created': datetime.datetime(2020, 6, 11, 19, 32, 23, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 440168837, 'comment_body': 'Actually the %s is redundant. I have removed it.', 'comment_created': datetime.datetime(2020, 6, 15, 13, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 440169847, 'comment_body': 'From your suggestion, I think we can just delete the key and also decrement the count at frontend on success. If the user reloads the page then the new listen_count will be updated in the cache also. Sounds good to you?', 'comment_created': datetime.datetime(2020, 6, 15, 13, 20, 26, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 440170579, 'comment_body': 'I raised `TimescaleListenStoreException` and when its caught then return ServiceUnavailable. If any other exception then raise BadRequest. Is it fine now?', 'comment_created': datetime.datetime(2020, 6, 15, 13, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 440170791, 'comment_body': 'Actually seems unnecessary. So nuked it', 'comment_created': datetime.datetime(2020, 6, 15, 13, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 440172075, 'comment_body': 'I changed it to delete the listen based on (listened_at, track_name, user_name) since the `listen` table in timescale is now based on track_name rather than recording_feedback as a key. Hopefully, your issue is addressed now.', 'comment_created': datetime.datetime(2020, 6, 15, 13, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 440314812, 'comment_body': 'Why not use recording msid instead of track name? ', 'comment_created': datetime.datetime(2020, 6, 15, 16, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 440795011, 'comment_body': 'OK, that works for me.', 'comment_created': datetime.datetime(2020, 6, 16, 11, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 440795282, 'comment_body': '+1', 'comment_created': datetime.datetime(2020, 6, 16, 12, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 440796551, 'comment_body': ""Better, but I think we should go with the 500 error for the general case -- we don't know what happened for sure, but likely it will have been our problem, so a 5xx error is needed. "", 'comment_created': datetime.datetime(2020, 6, 16, 12, 2, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 440892502, 'comment_body': 'Reverted', 'comment_created': datetime.datetime(2020, 6, 16, 14, 25, 17, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 440993291, 'comment_body': ""Can we add an index for this? Otherwise it'll probably be very slow"", 'comment_created': datetime.datetime(2020, 6, 16, 16, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 441002847, 'comment_body': ""If possible, otherwise I'm happy to merge this."", 'comment_created': datetime.datetime(2020, 6, 16, 16, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 441080980, 'comment_body': 'As per our IRC discussion indexes are not needed.', 'comment_created': datetime.datetime(2020, 6, 16, 19, 9, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}, {'comment_id': 441081953, 'comment_body': ""Upon some discussion and confusion on IRC it was noticed that index isn't much of use here as we already have an index on `user_name, listened_at`. So we think its not required as of now."", 'comment_created': datetime.datetime(2020, 6, 16, 19, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 441096831, 'comment_body': '500 for general exceptions\r\n503 for all Timescale exceptions', 'comment_created': datetime.datetime(2020, 6, 16, 19, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 441097899, 'comment_body': 'yep', 'comment_created': datetime.datetime(2020, 6, 16, 19, 41, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mayhem', 'type': 'User'}]","[{'commit_sha': '0507829434cc9fb4c4012870ce7ed2944cd0dc1c', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
459974534,Minor improvements to shared React components,"- [x] Improve card shadows
- [x] Improve card radius
- [x] Add spinner icon
- [x] Add spinner text
- [x] Update pills
- [x] Make navbar sticky
- [x] Fix charts height
- [x] Fix heatmap height",True,1000,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1000,https://github.com/metabrainz/listenbrainz-server/pull/1000,closed,1432,1535,21,12,1,5,0,0,[],2020-07-31 09:43:25+00:00,2020-08-16 08:19:18+00:00,1377353.0,"15 days, 22:35:53","[{'comment_id': 470566434, 'comment_body': '```suggestion\r\n      {loaderText && (\r\n        <small>\r\n          <p className=""text-muted mt-5"">{loaderText}</p>\r\n        </small>\r\n      )}\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 11, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ishaanshah', 'type': 'User'}, {'comment_id': 470569203, 'comment_body': ""IMO the graph looks better with padding set to 1. It doesn't look good on mobile view and the ticks look misaligned."", 'comment_created': datetime.datetime(2020, 8, 14, 11, 30, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ishaanshah', 'type': 'User'}, {'comment_id': 470577382, 'comment_body': 'I am not sure what exactly is the cause of the issue but the alignment is incorrect for the entity list.\r\nPR -\r\n![2020-08-14-171515_381x567_scrot](https://user-images.githubusercontent.com/25200200/90246442-471d2b80-de52-11ea-9c78-5594a5559478.png)\r\nProduction -\r\n![2020-08-14-171505_389x567_scrot](https://user-images.githubusercontent.com/25200200/90246468-5603de00-de52-11ea-989b-a9fe7c618da1.png)\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 14, 11, 49, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ishaanshah', 'type': 'User'}, {'comment_id': 470762780, 'comment_body': 'okk', 'comment_created': datetime.datetime(2020, 8, 14, 17, 37, 11, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 470766852, 'comment_body': '\r\n\r\nCaught it. Flexbox helping us\r\n', 'comment_created': datetime.datetime(2020, 8, 14, 17, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': '41fb3eae03f860f4837fd18e15dd522716d0fa26', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c850e85cd909802363f34893c11e1622576f23a1', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4be84a6ad34ff8039f0df94cc723202aa9bca1b8', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63417a09ffa90c487c8953838c742832f4bf928a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fef81ab219a796e8ce21c45542c3b18634f9e06', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a9166f45f7db5610f894dab05ea7bb53bd49ce5', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fd7bf18c7fa43050e0465669c3e744742a65c86', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16201260882767832d3223155079ffb328cfbe34', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be7552ce33712c0db4b235d77cb0db7c7b53686b', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd515bd79f5b2f333f0e73c42fb0d12b9654ce063', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '142c635b39beef7887dfdfcbfc2c81d5122ff3de', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfab3e30aed924f57c18d751974450fdefd8f785', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
466024363,Add listen count card,"Please don't merge till UI release.

Preview:
![image](https://user-images.githubusercontent.com/33172244/89888531-b5ad7f80-dbed-11ea-99d3-2911f34f6c4f.png)
",True,1030,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1030,https://github.com/metabrainz/listenbrainz-server/pull/1030,closed,106,2,5,3,2,3,0,0,[],2020-08-11 10:44:32+00:00,2020-08-14 17:40:57+00:00,284185.0,"3 days, 6:56:25","[{'comment_id': 470709692, 'comment_body': '```suggestion\r\n    const wrapper = mount(<ListenCountCard {...props} />);\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 15, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 470735670, 'comment_body': 'looking at this again, would this not render the number 0?', 'comment_created': datetime.datetime(2020, 8, 14, 16, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 470738112, 'comment_body': 'Didnt Get you', 'comment_created': datetime.datetime(2020, 8, 14, 16, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': '79405054c2612487eae8bc98041bb96dd97f6da6', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44409cc8ced1f5f3fc428e6f733bbd7311cda24a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae9f6659e44c504c12c8f56e19646f10052b79d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
466024363,Add listen count card,"Please don't merge till UI release.

Preview:
![image](https://user-images.githubusercontent.com/33172244/89888531-b5ad7f80-dbed-11ea-99d3-2911f34f6c4f.png)
",True,1030,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1030,https://github.com/metabrainz/listenbrainz-server/pull/1030,closed,106,2,5,3,2,3,0,0,[],2020-08-11 10:44:32+00:00,2020-08-14 17:40:57+00:00,284185.0,"3 days, 6:56:25","[{'comment_id': 470709692, 'comment_body': '```suggestion\r\n    const wrapper = mount(<ListenCountCard {...props} />);\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 15, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 470735670, 'comment_body': 'looking at this again, would this not render the number 0?', 'comment_created': datetime.datetime(2020, 8, 14, 16, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 470738112, 'comment_body': 'Didnt Get you', 'comment_created': datetime.datetime(2020, 8, 14, 16, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': '79405054c2612487eae8bc98041bb96dd97f6da6', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44409cc8ced1f5f3fc428e6f733bbd7311cda24a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae9f6659e44c504c12c8f56e19646f10052b79d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
470206404,Add feedback controls,"Add generic react component to handle listens.
Add feedback components to submit feedback (based on the generic component itself).",True,1043,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1043,https://github.com/metabrainz/listenbrainz-server/pull/1043,closed,1229,47,24,13,3,17,0,0,[],2020-08-19 14:33:03+00:00,2020-08-22 19:30:45+00:00,277062.0,"3 days, 4:57:42","[{'comment_id': 473243174, 'comment_body': 'This and handleClickHate should be merged into one function with feedback as arg', 'comment_created': datetime.datetime(2020, 8, 19, 18, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 473243455, 'comment_body': 'What happens if status is not 200? Does the user know somehow? ', 'comment_created': datetime.datetime(2020, 8, 19, 18, 40, 6, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 474851441, 'comment_body': 'return type in the type annotation', 'comment_created': datetime.datetime(2020, 8, 21, 18, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 474851936, 'comment_body': 'Is this the same function as the one in `RecentListens`? Can we pass the function as a prop into ListenCard from RecentListens instead to reduce code duplication?', 'comment_created': datetime.datetime(2020, 8, 21, 18, 11, 38, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 474896287, 'comment_body': 'merged', 'comment_created': datetime.datetime(2020, 8, 21, 19, 33, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 474896378, 'comment_body': 'alert added', 'comment_created': datetime.datetime(2020, 8, 21, 19, 33, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 474897178, 'comment_body': 'we dont have handle error there. Just newError', 'comment_created': datetime.datetime(2020, 8, 21, 19, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 474954294, 'comment_body': 'added', 'comment_created': datetime.datetime(2020, 8, 21, 20, 44, 46, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 475119697, 'comment_body': 'the indentation on this query is off, could you take a look here once: https://github.com/metabrainz/guidelines/blob/master/Python.md#sql?', 'comment_created': datetime.datetime(2020, 8, 22, 18, 53, 41, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 475119884, 'comment_body': 'Would like a docstring and type annotations here', 'comment_created': datetime.datetime(2020, 8, 22, 18, 55, 43, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 475119973, 'comment_body': 'This should be `recordingFeedbackMap`', 'comment_created': datetime.datetime(2020, 8, 22, 18, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 475119996, 'comment_body': 'The type here should be RecordingFeedbackMap', 'comment_created': datetime.datetime(2020, 8, 22, 18, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 475121846, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 22, 19, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 475121856, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 22, 19, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 475121862, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 22, 19, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 475121875, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 22, 19, 17, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 511336235, 'comment_body': ""Okay, so I have been reading the feedback (db + API + react) code for some time now and there are a few things that must be changed. You can either work on this\r\nor open a ticket so that these *can be buggy in future features* can catch someone's attention.\r\n\r\n(I wasn't able to find all the PRs related to feedback work so I am commenting everything here)\r\n\r\n1. There should be separate endpoints for feedback submit and feedback delete. The following json will ideally be interpreted as a submission irrespective of the score. {'recording_msid': 'xxx', score: '0'}\r\nKeeping 1, -1 for submission and 0 for deletion and passing through the same endpoint is not a good idea. Also, you are simply checking in the feedback_api script if the submitted score is in [-1, 0, 1] but there is no constraint in the DB to ensure the same. I would recommend making separate endpoint for feedback submission and deletion and also to have DB constraints for the score submitted.\r\n\r\n2. You have allowed -1, 0, 1 as valid score values to be submitted to the API endpoint. But here in this query, you are returning a pseudo score as 0 for recording msids that the user has not rated. Then in react at some places, you have used 0 to delete feedback via the endpoint and at some places, you have used 0 to reflect that the feedback for that recording was not submitted. The whole usage of 0 is very confusing. Even though the code works perfectly rn, we may have bugs in the future which are because of this confusing use of 0 or are difficult to track because of this confusing use of 0.\r\n\r\n3. Almost at all the places the previous state has been mutated like this https://github.com/metabrainz/listenbrainz-server/blob/master/listenbrainz/webserver/static/js/src/RecentListens.tsx#L520. You should ideally make a copy of the previous state and then do setState. \r\n\r\n"", 'comment_created': datetime.datetime(2020, 10, 24, 8, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vansika', 'type': 'User'}]","[{'commit_sha': '3b7b466f87fd487090205dadc325236437c2ae7a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b721eacece18cffe0f7194bb687706d7d4d8c9c', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58b4cfa886bc0acaeb0548212e219206ae617d32', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b2712084a9f7e1e21ec4ec7b39b6a3de30a860', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db0607d55040abe88319ed872a4515abf8bbfc2e', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76a6118cd6df1569e1fc4b136a5086e8b4f31b7d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '343c4c60b93dc4cbd38f07d964d2131912a7ee7f', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98ae74d14c5cf73a724e0725590c79f8b4742745', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93b0c3171d91b2432abd59b7f5e14af99303a890', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80a3bea4730ac7679473aa64ed83f38335ee0842', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7bf41a0f0b6b6531257c26b05829231588f6d2a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c4156b755e160f6214d98ea005629a32468df7f', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78db4d4e115af432b9d41c67e0fdd532f074d8f3', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
472103109,Hide icons for playing now,Hide feedback icons for playing now,True,1047,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1047,https://github.com/metabrainz/listenbrainz-server/pull/1047,closed,250,12,3,1,0,0,0,0,[],2020-08-23 10:07:24+00:00,2020-08-23 10:16:53+00:00,569.0,0:09:29,[],"[{'commit_sha': 'fd49cbbb5831aaf4493d8797857f3532a063baff', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
472035058,Fix indentation in Feedback DB module,"# Problem
The feeback.py file in DB module had awful indentation of SQL queries.

# Solution

Fix indentation and make code beautiful.

",True,1045,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1045,https://github.com/metabrainz/listenbrainz-server/pull/1045,closed,16,14,1,1,0,0,0,0,[],2020-08-22 20:13:44+00:00,2020-08-22 20:28:57+00:00,913.0,0:15:13,[],"[{'commit_sha': '6bcbbb3210adef456e8b012ccc515f457b7932f7', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
472147364,Add controls to delete listens,Add a dropdown containing an option to delete listen,True,1049,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1049,https://github.com/metabrainz/listenbrainz-server/pull/1049,closed,913,359,16,13,2,8,0,0,[],2020-08-23 16:35:10+00:00,2020-08-23 21:35:22+00:00,18012.0,5:00:12,"[{'comment_id': 475244749, 'comment_body': 'Will this go in the public docs? We should make it better if so. ', 'comment_created': datetime.datetime(2020, 8, 23, 17, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 475244898, 'comment_body': 'This function name could be more descriptive. Update how?\r\n\r\n`removeListenFromListenList`? ', 'comment_created': datetime.datetime(2020, 8, 23, 17, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 475245058, 'comment_body': 'RecentListens2 is not a descriptive name. Maybe `RecentListensControls.test.tsx`? Why did we add a second file though? Could we not put these tests in a Seperate describe block in the old file? ', 'comment_created': datetime.datetime(2020, 8, 23, 17, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 475245881, 'comment_body': 'Add what parameters it takes, what it returns etc. ', 'comment_created': datetime.datetime(2020, 8, 23, 17, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 475266103, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 23, 20, 53, 5, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 475266108, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 23, 20, 53, 10, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 475266118, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 23, 20, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 475266403, 'comment_body': ""```suggestion\r\n    Delete a particular listen from a user's listen history.\r\n```\r\n\r\nThis'll delete listens from whichever auth token it gets"", 'comment_created': datetime.datetime(2020, 8, 23, 20, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}]","[{'commit_sha': 'fb50d4766976683854d65cc0979f3bff9a10ec63', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1e995a2c5a8fc6565f2f2821d9c912cbf950937', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '042866b309556d1b6737e3179f9c6b4aca37780b', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5861a95d1670d358f2815ba83445e012badd058d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9759987cf07b7f1a2587589dcd8928973f6d6259', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '635e24bfd37937e7ca1cf827759cf162f47ccdec', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6dfd081fb547cc2c92febfb9dbacc14d6903cc', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c3928ef258ef82d32a031ed0f4d194caab1bece', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5a0a2a6c802a935c36f8ade30805e9afe5bf936', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c305c2acd1b5997941c9ac7588d2b8b0c83f1352', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f70256ea4ac2bdbed02ec63ee620ba6a342723a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa34ef4595bfc0a11a956681a740eff472e505f4', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33d1af9ed40e0555e4d4e0bcd882f155f726afd9', 'committer_username': 'paramsingh', 'committer_name': 'Param Singh', 'committer_email': 'me@param.codes', 'commit_date': datetime.datetime(2012, 6, 11, 8, 43, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
473296246,LB-598: Add option to download feedback as json,Add an option on Export page to export feedback.,True,1053,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1053,https://github.com/metabrainz/listenbrainz-server/pull/1053,closed,131,18,8,6,1,4,0,0,[],2020-08-25 15:45:04+00:00,2020-08-28 16:06:52+00:00,260508.0,"3 days, 0:21:48","[{'comment_id': 477418124, 'comment_body': 'This should be required, no?', 'comment_created': datetime.datetime(2020, 8, 26, 16, 7, 53, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 477418407, 'comment_body': 'why is it set to none by default', 'comment_created': datetime.datetime(2020, 8, 26, 16, 8, 22, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 477419040, 'comment_body': 'this code is duplicated from the export listens function right? We should extract it into a seperate function.', 'comment_created': datetime.datetime(2020, 8, 26, 16, 9, 14, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 478564237, 'comment_body': 'Because we also validate the feedback submitted via API using this model and it doesnt have a created field', 'comment_created': datetime.datetime(2020, 8, 27, 16, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': '448fa80e77f913591496dd9753b4d2d4da9d3923', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d5cf1746e77324e49f6dfa11c52d0fb7e5a7f99', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2c98ec93c02491c86738bc8b86d1c8d9d3332dd', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fa17b0805681dcde6545542bec9b79c185364f2', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d76f7aac44ec658fae2aa847bac932640a059d6', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cade36df30b17c5ad47b6637acbe955ebfddef0', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
474942251,Update heart color shades,"
![image](https://user-images.githubusercontent.com/33172244/91493544-1ff43e80-e8d5-11ea-82da-2f58b9565bad.png)

",True,1056,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1056,https://github.com/metabrainz/listenbrainz-server/pull/1056,closed,2,2,1,1,0,0,0,0,[],2020-08-27 20:51:08+00:00,2020-08-28 16:11:24+00:00,69616.0,19:20:16,[],"[{'commit_sha': '491d1693f859a5e2aa98d4f146861dc3db7c1ff5', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
474964034,Add dash after playing now and fix italic styling,"Add dash after playing now
Italic styling on time wasnt't getting applied",True,1057,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1057,https://github.com/metabrainz/listenbrainz-server/pull/1057,closed,6,6,2,1,0,0,0,0,[],2020-08-27 21:34:55+00:00,2020-08-28 16:12:20+00:00,67045.0,18:37:25,[],"[{'commit_sha': '8ddef7441f497fdf6a4204cb6f55a160d73cd03e', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
474993582,Smoothen deletion animation,"Smoothen deletion animation by making it little fast
Add hover action to 3 dots menu",True,1058,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1058,https://github.com/metabrainz/listenbrainz-server/pull/1058,closed,5,1,1,1,0,0,0,0,[],2020-08-27 22:57:42+00:00,2020-08-28 16:24:51+00:00,62829.0,17:27:09,[],"[{'commit_sha': 'fe25c097766a633eee0a4e14eaaa07fccc76f6d8', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
468331317,[WIP] Add cover art api,Add API to fetch and store cover art.,False,1037,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1037,https://github.com/metabrainz/listenbrainz-server/pull/1037,closed,29,1,5,1,2,4,0,0,[],2020-08-15 15:38:34+00:00,2020-12-11 13:47:36+00:00,10188542.0,"117 days, 22:09:02","[{'comment_id': 471086997, 'comment_body': 'what happens if the url changes and we want to update it? ', 'comment_created': datetime.datetime(2020, 8, 16, 9, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 471087289, 'comment_body': 'I think this should be unique on msid, source not just msid', 'comment_created': datetime.datetime(2020, 8, 16, 9, 8, 58, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 471087322, 'comment_body': ""Don't see an index here"", 'comment_created': datetime.datetime(2020, 8, 16, 9, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 471087365, 'comment_body': ""If you're doing type hints, please add a return value for the function as well. "", 'comment_created': datetime.datetime(2020, 8, 16, 9, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}]","[{'commit_sha': '4309c32ff2afa295edab85af7eb14e2217f3ac87', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101
474057880,Improve spotify imports,"Move to native spotipy methods
Import songs only after latest_listen_ts",True,1054,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1054,https://github.com/metabrainz/listenbrainz-server/pull/1054,closed,58,27,2,9,1,8,0,0,[],2020-08-26 17:42:57+00:00,2020-09-01 17:46:48+00:00,518631.0,"6 days, 0:03:51","[{'comment_id': 477481905, 'comment_body': 'function call is not a valid type. this would take a function, right?', 'comment_created': datetime.datetime(2020, 8, 26, 17, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 477484956, 'comment_body': 'this bypasses the retry logic that is implemented in `make_api_request`. what we should do is pass the current_user_recently_played function into `make_api_request`\r\n\r\n```suggestion\r\n    return  make_api_request(user.get_spotipy_client().current_user_recently_played, limit=50, after=latest_listened_at_ts)\r\n```\r\n\r\nsomething like this', 'comment_created': datetime.datetime(2020, 8, 26, 17, 57, 16, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 477485348, 'comment_body': 'Same comment here, this should use make_api_request as well.', 'comment_created': datetime.datetime(2020, 8, 26, 17, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 478580511, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 27, 17, 27, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 478580554, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 8, 27, 17, 27, 39, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 478603810, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2020, 8, 27, 18, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}, {'comment_id': 479403446, 'comment_body': ""why not just `if user.latest_listened_at` here? the extra variable declaration makes this part of the code confusing, specially because there's no real difference between the names of the two variables."", 'comment_created': datetime.datetime(2020, 8, 28, 16, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'paramsingh', 'type': 'User'}, {'comment_id': 481187172, 'comment_body': 'done', 'comment_created': datetime.datetime(2020, 9, 1, 14, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'shivam-kapila', 'type': 'User'}]","[{'commit_sha': '57878a985d93c22b75e2feca29390b469a50c105', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39423190d6c8f0c7ce8d6fb2f477761955bf12ef', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '803ea437b92d31dfa390a8c98e8768c73df52f1a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a748e15fbd98fe94284b7ea3f93dfd1445ffa42a', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc94daeb9a9740c5b9df4dfc384b2f75e3c8d31f', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bd474399ceae8038529d0dc5712c9a2a92fad88', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fae93210a5c78b4fd4fc551db842bb86b937bb81', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28034a0a211d3e4aa0161c50962c3e4171747a76', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d35d658ffcd310e02487b469dfa8b0cf0673c7d', 'committer_username': 'shivam-kapila', 'committer_name': 'Shivam Kapila', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 28, 6, 41, 56, tzinfo=datetime.timezone.utc)}]",Shivam Kapila,33172244,,User,,94,,105,101

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
41960013,listenbrainz-server,metabrainz/listenbrainz-server,Python,208,669,33,120,11802,14,83,14,"[{'id': 660778392, 'number': 1496, 'closed': datetime.datetime(2021, 6, 9, 11, 12, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 3, 10, 14, 1, tzinfo=datetime.timezone.utc), 'time_taken': 521911.0, 'time_delta': '6 days, 0:58:31', 'additions': 2, 'deletions': 31, 'state': 'closed'}, {'id': 586071607, 'number': 1320, 'closed': datetime.datetime(2021, 3, 30, 12, 30, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 6, 14, 9, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2067643.0, 'time_delta': '23 days, 22:20:43', 'additions': 922, 'deletions': 285, 'state': 'closed'}, {'id': 585787969, 'number': 1319, 'closed': datetime.datetime(2021, 3, 6, 12, 55, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 5, 18, 7, 52, tzinfo=datetime.timezone.utc), 'time_taken': 67630.0, 'time_delta': '18:47:10', 'additions': 231, 'deletions': 2, 'state': 'closed'}, {'id': 585643909, 'number': 1317, 'closed': datetime.datetime(2021, 3, 5, 16, 2, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 5, 14, 16, 20, tzinfo=datetime.timezone.utc), 'time_taken': 6352.0, 'time_delta': '1:45:52', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 579473458, 'number': 1294, 'closed': datetime.datetime(2021, 3, 4, 16, 29, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 24, 17, 18, 50, tzinfo=datetime.timezone.utc), 'time_taken': 688251.0, 'time_delta': '7 days, 23:10:51', 'additions': 121, 'deletions': 45, 'state': 'closed'}, {'id': 548285346, 'number': 1226, 'closed': datetime.datetime(2021, 1, 11, 17, 44, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 4, 14, 43, 54, tzinfo=datetime.timezone.utc), 'time_taken': 615621.0, 'time_delta': '7 days, 3:00:21', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 517178762, 'number': 1171, 'closed': datetime.datetime(2020, 11, 30, 16, 39, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 7, 18, 57, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1978915.0, 'time_delta': '22 days, 21:41:55', 'additions': 11, 'deletions': 3, 'state': 'closed'}, {'id': 502610093, 'number': 1136, 'closed': datetime.datetime(2020, 12, 11, 14, 37, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 13, 17, 31, 10, tzinfo=datetime.timezone.utc), 'time_taken': 5087169.0, 'time_delta': '58 days, 21:06:09', 'additions': 53, 'deletions': 26, 'state': 'closed'}, {'id': 502481907, 'number': 1135, 'closed': datetime.datetime(2020, 12, 9, 12, 12, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 13, 15, 39, 41, tzinfo=datetime.timezone.utc), 'time_taken': 4912368.0, 'time_delta': '56 days, 20:32:48', 'additions': 96, 'deletions': 25, 'state': 'closed'}, {'id': 490706718, 'number': 1105, 'closed': datetime.datetime(2020, 9, 22, 6, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 22, 5, 52, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1837.0, 'time_delta': '0:30:37', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 490232557, 'number': 1102, 'closed': datetime.datetime(2020, 9, 21, 13, 7, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 21, 11, 39, 47, tzinfo=datetime.timezone.utc), 'time_taken': 5239.0, 'time_delta': '1:27:19', 'additions': 10, 'deletions': 6, 'state': 'closed'}, {'id': 490223256, 'number': 1101, 'closed': datetime.datetime(2020, 9, 21, 12, 38, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 21, 11, 22, 13, tzinfo=datetime.timezone.utc), 'time_taken': 4554.0, 'time_delta': '1:15:54', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 489811423, 'number': 1097, 'closed': datetime.datetime(2020, 9, 30, 16, 43, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 19, 19, 5, 38, tzinfo=datetime.timezone.utc), 'time_taken': 941885.0, 'time_delta': '10 days, 21:38:05', 'additions': 363, 'deletions': 1, 'state': 'closed'}, {'id': 474993582, 'number': 1058, 'closed': datetime.datetime(2020, 8, 28, 16, 24, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 27, 22, 57, 42, tzinfo=datetime.timezone.utc), 'time_taken': 62829.0, 'time_delta': '17:27:09', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 474964034, 'number': 1057, 'closed': datetime.datetime(2020, 8, 28, 16, 12, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 27, 21, 34, 55, tzinfo=datetime.timezone.utc), 'time_taken': 67045.0, 'time_delta': '18:37:25', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 474942251, 'number': 1056, 'closed': datetime.datetime(2020, 8, 28, 16, 11, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 27, 20, 51, 8, tzinfo=datetime.timezone.utc), 'time_taken': 69616.0, 'time_delta': '19:20:16', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 474057880, 'number': 1054, 'closed': datetime.datetime(2020, 9, 1, 17, 46, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 17, 42, 57, tzinfo=datetime.timezone.utc), 'time_taken': 518631.0, 'time_delta': '6 days, 0:03:51', 'additions': 58, 'deletions': 27, 'state': 'closed'}, {'id': 473296246, 'number': 1053, 'closed': datetime.datetime(2020, 8, 28, 16, 6, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 25, 15, 45, 4, tzinfo=datetime.timezone.utc), 'time_taken': 260508.0, 'time_delta': '3 days, 0:21:48', 'additions': 131, 'deletions': 18, 'state': 'closed'}, {'id': 472147364, 'number': 1049, 'closed': datetime.datetime(2020, 8, 23, 21, 35, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 23, 16, 35, 10, tzinfo=datetime.timezone.utc), 'time_taken': 18012.0, 'time_delta': '5:00:12', 'additions': 913, 'deletions': 359, 'state': 'closed'}, {'id': 472103109, 'number': 1047, 'closed': datetime.datetime(2020, 8, 23, 10, 16, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 23, 10, 7, 24, tzinfo=datetime.timezone.utc), 'time_taken': 569.0, 'time_delta': '0:09:29', 'additions': 250, 'deletions': 12, 'state': 'closed'}, {'id': 472035058, 'number': 1045, 'closed': datetime.datetime(2020, 8, 22, 20, 28, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 22, 20, 13, 44, tzinfo=datetime.timezone.utc), 'time_taken': 913.0, 'time_delta': '0:15:13', 'additions': 16, 'deletions': 14, 'state': 'closed'}, {'id': 470965315, 'number': 1044, 'closed': datetime.datetime(2020, 8, 20, 15, 6, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 14, 54, 57, tzinfo=datetime.timezone.utc), 'time_taken': 704.0, 'time_delta': '0:11:44', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 470206404, 'number': 1043, 'closed': datetime.datetime(2020, 8, 22, 19, 30, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 14, 33, 3, tzinfo=datetime.timezone.utc), 'time_taken': 277062.0, 'time_delta': '3 days, 4:57:42', 'additions': 1229, 'deletions': 47, 'state': 'closed'}, {'id': 468478569, 'number': 1038, 'closed': datetime.datetime(2020, 8, 18, 18, 49, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 16, 18, 25, tzinfo=datetime.timezone.utc), 'time_taken': 174271.0, 'time_delta': '2 days, 0:24:31', 'additions': 481, 'deletions': 89, 'state': 'closed'}, {'id': 468331317, 'number': 1037, 'closed': datetime.datetime(2020, 12, 11, 13, 47, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 15, 15, 38, 34, tzinfo=datetime.timezone.utc), 'time_taken': 10188542.0, 'time_delta': '117 days, 22:09:02', 'additions': 29, 'deletions': 1, 'state': 'closed'}, {'id': 466024363, 'number': 1030, 'closed': datetime.datetime(2020, 8, 14, 17, 40, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 10, 44, 32, tzinfo=datetime.timezone.utc), 'time_taken': 284185.0, 'time_delta': '3 days, 6:56:25', 'additions': 106, 'deletions': 2, 'state': 'closed'}, {'id': 459974534, 'number': 1000, 'closed': datetime.datetime(2020, 8, 16, 8, 19, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 31, 9, 43, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1377353.0, 'time_delta': '15 days, 22:35:53', 'additions': 1432, 'deletions': 1535, 'state': 'closed'}, {'id': 436984438, 'number': 923, 'closed': datetime.datetime(2020, 6, 19, 17, 27, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 9, 11, 48, tzinfo=datetime.timezone.utc), 'time_taken': 29757.0, 'time_delta': '8:15:57', 'additions': 23, 'deletions': 63, 'state': 'closed'}, {'id': 434534610, 'number': 918, 'closed': datetime.datetime(2020, 6, 16, 16, 42, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 13, 18, tzinfo=datetime.timezone.utc), 'time_taken': 98699.0, 'time_delta': '1 day, 3:24:59', 'additions': 60, 'deletions': 7, 'state': 'closed'}, {'id': 433217943, 'number': 912, 'closed': datetime.datetime(2020, 7, 24, 20, 6, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 11, 17, 4, 44, tzinfo=datetime.timezone.utc), 'time_taken': 3726133.0, 'time_delta': '43 days, 3:02:13', 'additions': 186, 'deletions': 7, 'state': 'closed'}, {'id': 425255813, 'number': 883, 'closed': datetime.datetime(2020, 6, 5, 8, 14, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 29, 18, 18, 51, tzinfo=datetime.timezone.utc), 'time_taken': 568514.0, 'time_delta': '6 days, 13:55:14', 'additions': 197, 'deletions': 110, 'state': 'closed'}, {'id': 420810078, 'number': 869, 'closed': datetime.datetime(2020, 6, 5, 8, 39, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 15, 0, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1359587.0, 'time_delta': '15 days, 17:39:47', 'additions': 874, 'deletions': 27, 'state': 'closed'}, {'id': 420616187, 'number': 868, 'closed': datetime.datetime(2020, 5, 20, 18, 27, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 9, 10, 52, tzinfo=datetime.timezone.utc), 'time_taken': 33396.0, 'time_delta': '9:16:36', 'additions': 31, 'deletions': 5, 'state': 'closed'}, {'id': 420201952, 'number': 866, 'closed': datetime.datetime(2020, 5, 25, 16, 25, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 19, 15, 39, 43, tzinfo=datetime.timezone.utc), 'time_taken': 521149.0, 'time_delta': '6 days, 0:45:49', 'additions': 293, 'deletions': 0, 'state': 'closed'}, {'id': 420200693, 'number': 865, 'closed': datetime.datetime(2020, 5, 19, 17, 25, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 19, 15, 37, 40, tzinfo=datetime.timezone.utc), 'time_taken': 6449.0, 'time_delta': '1:47:29', 'additions': 34, 'deletions': 0, 'state': 'closed'}, {'id': 419104238, 'number': 861, 'closed': datetime.datetime(2020, 5, 17, 12, 41, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 17, 12, 11, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1751.0, 'time_delta': '0:29:11', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 417563438, 'number': 850, 'closed': datetime.datetime(2020, 5, 13, 20, 6, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 13, 19, 23, 45, tzinfo=datetime.timezone.utc), 'time_taken': 2560.0, 'time_delta': '0:42:40', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 414165563, 'number': 837, 'closed': datetime.datetime(2020, 5, 9, 14, 7, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 6, 15, 22, 7, tzinfo=datetime.timezone.utc), 'time_taken': 254694.0, 'time_delta': '2 days, 22:44:54', 'additions': 223, 'deletions': 124, 'state': 'closed'}, {'id': 414107379, 'number': 836, 'closed': datetime.datetime(2020, 5, 6, 16, 39, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 6, 13, 46, 33, tzinfo=datetime.timezone.utc), 'time_taken': 10368.0, 'time_delta': '2:52:48', 'additions': 25, 'deletions': 2, 'state': 'closed'}, {'id': 412576889, 'number': 829, 'closed': datetime.datetime(2020, 5, 3, 10, 3, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 3, 9, 50, 1, tzinfo=datetime.timezone.utc), 'time_taken': 811.0, 'time_delta': '0:13:31', 'additions': 4, 'deletions': 13, 'state': 'closed'}, {'id': 412490823, 'number': 828, 'closed': datetime.datetime(2020, 5, 2, 18, 49, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 2, 18, 35, 13, tzinfo=datetime.timezone.utc), 'time_taken': 884.0, 'time_delta': '0:14:44', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 412461257, 'number': 827, 'closed': datetime.datetime(2020, 5, 2, 18, 40, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 2, 14, 44, 11, tzinfo=datetime.timezone.utc), 'time_taken': 14163.0, 'time_delta': '3:56:03', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 404244564, 'number': 809, 'closed': datetime.datetime(2020, 4, 16, 10, 28, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 9, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2216.0, 'time_delta': '0:36:56', 'additions': 87, 'deletions': 63, 'state': 'closed'}, {'id': 400441951, 'number': 782, 'closed': datetime.datetime(2020, 4, 29, 18, 30, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 18, 51, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1899515.0, 'time_delta': '21 days, 23:38:35', 'additions': 12, 'deletions': 14, 'state': 'closed'}, {'id': 397647753, 'number': 775, 'closed': datetime.datetime(2020, 4, 7, 11, 35, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 2, 15, 22, 31, tzinfo=datetime.timezone.utc), 'time_taken': 418400.0, 'time_delta': '4 days, 20:13:20', 'additions': 135, 'deletions': 22, 'state': 'closed'}, {'id': 395853772, 'number': 772, 'closed': datetime.datetime(2020, 3, 31, 16, 20, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 30, 19, 33, 28, tzinfo=datetime.timezone.utc), 'time_taken': 74806.0, 'time_delta': '20:46:46', 'additions': 184, 'deletions': 31, 'state': 'closed'}, {'id': 394744106, 'number': 767, 'closed': datetime.datetime(2020, 3, 30, 11, 55, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 27, 13, 8, 50, tzinfo=datetime.timezone.utc), 'time_taken': 254790.0, 'time_delta': '2 days, 22:46:30', 'additions': 15, 'deletions': 4, 'state': 'closed'}, {'id': 391506910, 'number': 762, 'closed': datetime.datetime(2020, 5, 6, 16, 10, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 12, 30, 20, tzinfo=datetime.timezone.utc), 'time_taken': 4073981.0, 'time_delta': '47 days, 3:39:41', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 391484645, 'number': 761, 'closed': datetime.datetime(2020, 3, 20, 12, 3, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 11, 35, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1692.0, 'time_delta': '0:28:12', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 377532321, 'number': 738, 'closed': datetime.datetime(2020, 2, 21, 20, 19, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 20, 3, 38, 13, tzinfo=datetime.timezone.utc), 'time_taken': 146485.0, 'time_delta': '1 day, 16:41:25', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 373311614, 'number': 726, 'closed': datetime.datetime(2020, 3, 16, 17, 9, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 10, 19, 31, 23, tzinfo=datetime.timezone.utc), 'time_taken': 3015514.0, 'time_delta': '34 days, 21:38:34', 'additions': 165, 'deletions': 7, 'state': 'closed'}, {'id': 370579910, 'number': 718, 'closed': datetime.datetime(2020, 3, 21, 16, 22, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 3, 23, 52, 31, tzinfo=datetime.timezone.utc), 'time_taken': 4033776.0, 'time_delta': '46 days, 16:29:36', 'additions': 185, 'deletions': 25, 'state': 'closed'}, {'id': 367169649, 'number': 707, 'closed': datetime.datetime(2020, 1, 26, 11, 35, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 26, 0, 41, 28, tzinfo=datetime.timezone.utc), 'time_taken': 39242.0, 'time_delta': '10:54:02', 'additions': 8, 'deletions': 4, 'state': 'closed'}]"
