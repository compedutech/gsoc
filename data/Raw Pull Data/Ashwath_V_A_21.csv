pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
672850061,Chord Symbol Style Editor,"The Chord Symbol Style Editor has two parts: Inspector pop-up and Styles Dialog.

**Inspector View:**
The Inspector pop-up is fully functional. Changing styles through inspector pop-up updates the quality symbols too. It sets the correct quality symbols and other settings like scaling and offset too by extracting the data from the selection history. The playback settings are relocated to the correct place. There are few more things to do like replacing text in the grid view items with previews of each style. 

**Chord style description file search:**
The chord description file search is also implemented. The chord symbol styles listed are from the file search (in both the pop-up and the main editor). This is handled by the class `ChordSymbolStyleManager`. This class acts as a messenger. When needed the instance is created. The manager searches through the folder for files or through the file for the symbols and returns the findings to the caller. It does not store any data itself. This allows the pop-up and the styles dialog to be not dependent on a single instance of the manager. For `ChordSymbolStyleManager` to recognize the chord description file, the file must have the attribute `type` set to `""chordStyle""`. And the quality representations must be enclosed by the tag `<quality>`.

**Chord Symbol Style Editor:**
The style editor is partially implemented now. It can select various styles and chord spellings. The different sets of quality symbols for each style are also handled here. In other words, the list of qualities that are to be respelled is dynamic. The un-needed qualities can be ignored in the XML file. When a style is selected, the editor asks the manager instance to get the quality symbols associated with it from the XML file. There is also another new feature: offset and scaling for quality symbols. This works exactly like how offset and scaling work for extensions and modifiers now.

**Quality Symbol Respelling:**
The program now respells the chord quality symbol according to the preference set by the user. The quality symbols are extracted from the XML file. Along with the quality symbols, the users can specify offset/scaling of quality, extension, and modifier(if there are any particular settings that go with that preset). The chords symbols also refresh immediately when a symbol is changed. The app remembers the quality symbols selection of each style, so the selections are not lost while switching between styles. This function is also partially intelligent in a way that it is able to understand the implicit quality of the chord symbols and respell them accordingly. For example, any chord symbol of form <minor> 7 b5 is treated as a half-diminished chord rather than a minor chord. 
There is also a choice to use/not use the presets in the chord symbols(to be specified in the XML file), which when disabled, bypasses all the newly added functions and so basically providing the user, the same system/functionality found in MuseScore 3.6.
The editor also allows respelling of omit modifier, 69 extension, suspension modifier, and bass note.

**Modifier Sorting:**
The program sorts the modifiers in order to produce more consistent chord symbols. Sorting makes the stacking function more accurate too. The sorting order is `maj7 > sus > alt > add/omit > alterations(like b5)`. And also, the alterations are sorted based on the note number.

**Modifier Stacking:**
There is a new option to stack the modifiers in chord symbols. Stacking works selectively for modifiers that are of form ""b"",""#"",""bb"",""##"",""add"" and ""omit"". The size of the stacked modifiers is reduced. Also, when add/omit and modifiers are present in the same chord symbol, they are stacked in two different columns.

**Quality Symbol Letter Case:**
There are new additions to the already existing letter case options. The editor offers capitalization options for major and minor quality symbols. Other qualities are left untouched. This converts the letter case of only the symbols that have a valid conversion. For example, When uppercase quality symbols are chosen, ""min"" will be converted to ""Min"" but ""m"" will not turn into ""M"".

**Parentheses Options:**
The parsing function strips all parentheses(makes it easier for the stacking and respelling functions to work without the clutter) from the input text and adds it according to the user settings. Four options are offered now: Alterations, Suspensions, maj7(only when it occurs in minor chords), and Add&Omit which can be selected/deselected.",False,8345,https://api.github.com/repos/musescore/MuseScore/pulls/8345,https://github.com/musescore/MuseScore/pull/8345,open,9650,2508,48,60,15,33,1,0,[{'name': 'GSoC'}],2021-06-17 17:28:24+00:00,,0.0,,"[{'comment_id': 653801956, 'comment_body': 'This change seems unnecessary', 'comment_created': datetime.datetime(2021, 6, 17, 17, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 653818111, 'comment_body': 'Removing this code causes my build to crash. Is it the same for you too?', 'comment_created': datetime.datetime(2021, 6, 17, 18, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 653854621, 'comment_body': ""No, that sounds strange... I'll investigate tomorrow."", 'comment_created': datetime.datetime(2021, 6, 17, 18, 57, 34, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 653934197, 'comment_body': ""Seems a bit unnecessary unless you're triggering an event, also I'd generally write setters/getters as inline functions in the header file unless there's a particular reason not to.  Though maybe this doesn't work if it's a slot..."", 'comment_created': datetime.datetime(2021, 6, 17, 20, 56, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 653935415, 'comment_body': ""would expect a blank line before this unless uncrustify doesn't like it!"", 'comment_created': datetime.datetime(2021, 6, 17, 20, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 653935685, 'comment_body': ""what's the parameter for?"", 'comment_created': datetime.datetime(2021, 6, 17, 20, 58, 10, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 653936340, 'comment_body': 'Would try to think of a better variable name here!', 'comment_created': datetime.datetime(2021, 6, 17, 20, 58, 54, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 653937043, 'comment_body': 'This method is overridden from QAbstractItemModel.', 'comment_created': datetime.datetime(2021, 6, 17, 20, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 653943790, 'comment_body': ""@wizofaus It's generally our style to put nothing of function definitions in header files.\r\n\r\nBut I agree the setter is not necessary. Setters like this with such a check are necessary for use with QML, to avoid binding loops. But when a setter is only used in C++, the check is not necessary. In this case, the setter is only used inside the class itself, and only one time (if I'm not mistaken), so I think it should be removed and replaced by just `m_chordStylesModel = new ChordSymbolStylesModel(this);`."", 'comment_created': datetime.datetime(2021, 6, 17, 21, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 653947285, 'comment_body': ""Does it need to be alloc'ed on the heap at all? I.e. couldn't m_chordStylesModel just be a ChordSymbolStylesModel instance rather than a pointer?"", 'comment_created': datetime.datetime(2021, 6, 17, 21, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 653952430, 'comment_body': 'Good point. Also, currently a `delete` is missing, but with just an instance, that would not be necessary. I believe QML can only work with pointers to Object-derived items, so you would need to pass a pointer to the instance in the getter method. ', 'comment_created': datetime.datetime(2021, 6, 17, 21, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 653974305, 'comment_body': 'Except the current object is passed in as ""parent"" to the QObject, I\'m not sure if that\'s necessary or what it will mean - if Qt automatically deletes children when you delete the parent it would be an issue!', 'comment_created': datetime.datetime(2021, 6, 17, 21, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 654079676, 'comment_body': 'I had it temporarily. Forgot to change it.', 'comment_created': datetime.datetime(2021, 6, 18, 1, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 654084806, 'comment_body': 'I added the setter method at first thinking I might use it from somewhere else in the code. But now it does seem unnecessary. I will remove it now and add it if I needed it again.\r\nAnd regarding `ChordSymbolStylesModel` being a pointer or instance, a pointer is fine right? Is there any reason to change it?', 'comment_created': datetime.datetime(2021, 6, 18, 1, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 654098250, 'comment_body': ""You just need to check if it automatically gets deleted when the parent does, if not, you'll need to delete it yourself or use an instance."", 'comment_created': datetime.datetime(2021, 6, 18, 2, 22, 29, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 654098563, 'comment_body': ""From reading the Qt documentation it seems it will get automatically deleted as you're passing in the current object as the parent."", 'comment_created': datetime.datetime(2021, 6, 18, 2, 23, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 654098968, 'comment_body': ""> From reading the Qt documentation it seems it will get automatically deleted as you're passing in the current object as the parent.\r\n\r\nOh Ok. No problem then."", 'comment_created': datetime.datetime(2021, 6, 18, 2, 24, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 655579967, 'comment_body': ""When you want to display text on a button, it is better to use the `text:` property of FlatButton. \r\nAlso, it is preferred to use our own components (StyledTextLabel) instead of QML's default ones, because our own ones have the correct styling. "", 'comment_created': datetime.datetime(2021, 6, 21, 17, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 655811127, 'comment_body': 'Ok. I will change it finally(if it is still there). Because anyway I will be changing it to a canvas or smth.', 'comment_created': datetime.datetime(2021, 6, 22, 1, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 682571104, 'comment_body': 'What does NW stand for?', 'comment_created': datetime.datetime(2021, 8, 4, 12, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 682579317, 'comment_body': '""Not Working"" :) \r\nI have not implemented the functionality for that button yet. That\'s why.', 'comment_created': datetime.datetime(2021, 8, 4, 12, 44, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 682586630, 'comment_body': ';-)', 'comment_created': datetime.datetime(2021, 8, 4, 12, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691973067, 'comment_body': 'this change seems useless and may just lead to merge conflicts for no good reason', 'comment_created': datetime.datetime(2021, 8, 19, 10, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691975418, 'comment_body': 'Ahh yes. I missed that during rebase. I will fix it. Thnkx.', 'comment_created': datetime.datetime(2021, 8, 19, 10, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 691975776, 'comment_body': 'What happened here, maybe just a carriage return / linefeed change? If so: please revert.', 'comment_created': datetime.datetime(2021, 8, 19, 10, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691977572, 'comment_body': 'This change is not needed. Probably harmlsee too though, IIRC it gets set to 1 programatically anyway', 'comment_created': datetime.datetime(2021, 8, 19, 10, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691978092, 'comment_body': 'Strange naming... I guess this is only temporary?', 'comment_created': datetime.datetime(2021, 8, 19, 10, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691979855, 'comment_body': 'I am sorry I do not understand. If you are asking if I have made any change to this file that pertains to the project, then yes. But the difference should be few lines only. I do not know what is happening here.', 'comment_created': datetime.datetime(2021, 8, 19, 10, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 691981396, 'comment_body': 'Yes. In the end, I will take out the old Chord Symbols page and rename this.', 'comment_created': datetime.datetime(2021, 8, 19, 10, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 691984819, 'comment_body': ""Then please double check on those changes. I don't see a need to change the entire file, this will cause merge conflicts later"", 'comment_created': datetime.datetime(2021, 8, 19, 10, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 693863228, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2021, 8, 23, 10, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 693863809, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 23, 10, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 698021377, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 29, 14, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}]","[{'commit_sha': '52501109f9824f85fbe3f4b6fe4f2261564567b8', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9dc1ed71c7db21b8d83026b97e5cd9c969d2d00', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a4d5f2b563ecb34607abaa7b4391070995d82a1', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '293044f21cc7f48a89327215d8155281df44c0bf', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b39d3d748262b5d1b60d18e9e446e1ee7b13e982', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf7dbb797986924da3277b54d50cf89f092976e6', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7aa2becd26be5ac35175d5f0f32ca49703e4a3c', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2768fda4abd7ca9774c84d644a50706befb1b279', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90b4de0336a2c0e4fb87d85c112db745f2fadf67', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ab10ab5c30856c18df7f0d8c0a8afe5fa6c13ff', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5237adc92523d84872912b8b3e194bdd0c0a8e7', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '744324c2b6544b975c22f05a02552bea982ab044', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57768f20c14873ba12dc1e26d5c64bccd8de3501', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3691834a404181c8daeada1137387b0da2be70d2', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab8ad558ff13f14a72b2db5e5ff001fac1c0c64e', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16282c66d73f116532940b82ebfb3b8fde006bc5', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4e981a15c86389199d7da5b16c41f7757e5ef2a', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6af64cb700f789dfb850847c00cc196f56ef4d8a', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c24afc814103d14ea845ed57acd50af06a5fdbd', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '098ec445be04874ac29d3b173855f5e18312d5fd', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '108705bc57628068744b0b69eb3d02c2bd5fadb1', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a5a9df989e11fdc5a3cfac06c61c0c7cadd7e26', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '179cb30ab4f1f69c4a6e53db6095695c008e4b29', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbd0e6b7446d9c8f44cf5378cf975b2157ddca85', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db19fd491d2245a3cc1cbcfdba9be423aa660c68', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c083299a78865fd3b2eb69fe6333ad6d66ffa74', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cccdb1f6cb946b840a1698fe35e1b21ddb2a9aa2', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e863cc984f767fcb9abc8672eb105654b4cc0165', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0be63511e829e4f8dbc5e018f6803b62a806044e', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd89d518b50fe1da9d103bd01540dc6b062926976', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fd8d324b35f9760fe786b2b52f6a0622f118595', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c838459b11abcdef400e89a3a51588ff684cc212', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '945bce62f1612609ab382c5c577fd0f66d8e65e4', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '905d9fab0a3042f7a45f9178f5cd4861eb36468f', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '167e52e068363d9174f7a4a1241b59b24226e186', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8d05bb02b5a00f137194a4dff73c9d32d918691', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37f008424026d91031de535930fddd66e94786c5', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab20d9bc88a90501091049ffcf73c96b3d12d526', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a676b4cc4fae254f168c86f967ebaae170deebbc', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cddec37ace5d7185f40f6b230549774f405c9d26', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e7311cf5efb89cbc8393627f7ab1c646ada6c1d', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c10fa249f7f4852d8b895c17bc4aa62d57cb73f2', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40b6a7d0505867c5707aa10cbc1d8b37bff20676', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7173de4ea26fde021b47a72bb8bbb25e3bab944f', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba551ff3fd0c9e551edaae0aa368457bf287d563', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44b5d4f9bb77f0b91a20ca12f669e064d3e9d37a', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '625325ab8004f3d80b7eac6cacf1c9d845c01bbc', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e447172f7ef55ef5acaf538940168fd92752e0ac', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230789179260849c834aa766ce87888dff42c7e2', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86705df656ff94dc6b04faa63741a450fd242a3b', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7b40aca1cdcd4303c7995528c402e3a5d19d3c2', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f38b42ca168dc8d59dd245c41556857729fe2654', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e6b7826f771ea8c7ed320402768f0b216b2806d', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43a9c19b7e4a11606b7160cee3da11a3749984ad', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c94891d0d587c52c2a3ddff00fcf700b0da2ef8', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b21b0c8febe1ee263fc80902418ed4648eb5b2e', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af12c94efc8092dbf1eda9fe72956f88e1ef01e3', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '871982071b99d647c54210f2caf63f5ec1b7e372', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '845fb6e1d9c8340eddc33b665b161355360f07af', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d3c80cb8cb1505c6213206f265b941a4e515c78', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}]",Ashwath V A,73862377,,User,,47,,33,37
672850061,Chord Symbol Style Editor,"The Chord Symbol Style Editor has two parts: Inspector pop-up and Styles Dialog.

**Inspector View:**
The Inspector pop-up is fully functional. Changing styles through inspector pop-up updates the quality symbols too. It sets the correct quality symbols and other settings like scaling and offset too by extracting the data from the selection history. The playback settings are relocated to the correct place. There are few more things to do like replacing text in the grid view items with previews of each style. 

**Chord style description file search:**
The chord description file search is also implemented. The chord symbol styles listed are from the file search (in both the pop-up and the main editor). This is handled by the class `ChordSymbolStyleManager`. This class acts as a messenger. When needed the instance is created. The manager searches through the folder for files or through the file for the symbols and returns the findings to the caller. It does not store any data itself. This allows the pop-up and the styles dialog to be not dependent on a single instance of the manager. For `ChordSymbolStyleManager` to recognize the chord description file, the file must have the attribute `type` set to `""chordStyle""`. And the quality representations must be enclosed by the tag `<quality>`.

**Chord Symbol Style Editor:**
The style editor is partially implemented now. It can select various styles and chord spellings. The different sets of quality symbols for each style are also handled here. In other words, the list of qualities that are to be respelled is dynamic. The un-needed qualities can be ignored in the XML file. When a style is selected, the editor asks the manager instance to get the quality symbols associated with it from the XML file. There is also another new feature: offset and scaling for quality symbols. This works exactly like how offset and scaling work for extensions and modifiers now.

**Quality Symbol Respelling:**
The program now respells the chord quality symbol according to the preference set by the user. The quality symbols are extracted from the XML file. Along with the quality symbols, the users can specify offset/scaling of quality, extension, and modifier(if there are any particular settings that go with that preset). The chords symbols also refresh immediately when a symbol is changed. The app remembers the quality symbols selection of each style, so the selections are not lost while switching between styles. This function is also partially intelligent in a way that it is able to understand the implicit quality of the chord symbols and respell them accordingly. For example, any chord symbol of form <minor> 7 b5 is treated as a half-diminished chord rather than a minor chord. 
There is also a choice to use/not use the presets in the chord symbols(to be specified in the XML file), which when disabled, bypasses all the newly added functions and so basically providing the user, the same system/functionality found in MuseScore 3.6.
The editor also allows respelling of omit modifier, 69 extension, suspension modifier, and bass note.

**Modifier Sorting:**
The program sorts the modifiers in order to produce more consistent chord symbols. Sorting makes the stacking function more accurate too. The sorting order is `maj7 > sus > alt > add/omit > alterations(like b5)`. And also, the alterations are sorted based on the note number.

**Modifier Stacking:**
There is a new option to stack the modifiers in chord symbols. Stacking works selectively for modifiers that are of form ""b"",""#"",""bb"",""##"",""add"" and ""omit"". The size of the stacked modifiers is reduced. Also, when add/omit and modifiers are present in the same chord symbol, they are stacked in two different columns.

**Quality Symbol Letter Case:**
There are new additions to the already existing letter case options. The editor offers capitalization options for major and minor quality symbols. Other qualities are left untouched. This converts the letter case of only the symbols that have a valid conversion. For example, When uppercase quality symbols are chosen, ""min"" will be converted to ""Min"" but ""m"" will not turn into ""M"".

**Parentheses Options:**
The parsing function strips all parentheses(makes it easier for the stacking and respelling functions to work without the clutter) from the input text and adds it according to the user settings. Four options are offered now: Alterations, Suspensions, maj7(only when it occurs in minor chords), and Add&Omit which can be selected/deselected.",False,8345,https://api.github.com/repos/musescore/MuseScore/pulls/8345,https://github.com/musescore/MuseScore/pull/8345,open,9650,2508,48,60,15,33,1,0,[{'name': 'GSoC'}],2021-06-17 17:28:24+00:00,,0.0,,"[{'comment_id': 653801956, 'comment_body': 'This change seems unnecessary', 'comment_created': datetime.datetime(2021, 6, 17, 17, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 653818111, 'comment_body': 'Removing this code causes my build to crash. Is it the same for you too?', 'comment_created': datetime.datetime(2021, 6, 17, 18, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 653854621, 'comment_body': ""No, that sounds strange... I'll investigate tomorrow."", 'comment_created': datetime.datetime(2021, 6, 17, 18, 57, 34, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 653934197, 'comment_body': ""Seems a bit unnecessary unless you're triggering an event, also I'd generally write setters/getters as inline functions in the header file unless there's a particular reason not to.  Though maybe this doesn't work if it's a slot..."", 'comment_created': datetime.datetime(2021, 6, 17, 20, 56, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 653935415, 'comment_body': ""would expect a blank line before this unless uncrustify doesn't like it!"", 'comment_created': datetime.datetime(2021, 6, 17, 20, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 653935685, 'comment_body': ""what's the parameter for?"", 'comment_created': datetime.datetime(2021, 6, 17, 20, 58, 10, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 653936340, 'comment_body': 'Would try to think of a better variable name here!', 'comment_created': datetime.datetime(2021, 6, 17, 20, 58, 54, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 653937043, 'comment_body': 'This method is overridden from QAbstractItemModel.', 'comment_created': datetime.datetime(2021, 6, 17, 20, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 653943790, 'comment_body': ""@wizofaus It's generally our style to put nothing of function definitions in header files.\r\n\r\nBut I agree the setter is not necessary. Setters like this with such a check are necessary for use with QML, to avoid binding loops. But when a setter is only used in C++, the check is not necessary. In this case, the setter is only used inside the class itself, and only one time (if I'm not mistaken), so I think it should be removed and replaced by just `m_chordStylesModel = new ChordSymbolStylesModel(this);`."", 'comment_created': datetime.datetime(2021, 6, 17, 21, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 653947285, 'comment_body': ""Does it need to be alloc'ed on the heap at all? I.e. couldn't m_chordStylesModel just be a ChordSymbolStylesModel instance rather than a pointer?"", 'comment_created': datetime.datetime(2021, 6, 17, 21, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 653952430, 'comment_body': 'Good point. Also, currently a `delete` is missing, but with just an instance, that would not be necessary. I believe QML can only work with pointers to Object-derived items, so you would need to pass a pointer to the instance in the getter method. ', 'comment_created': datetime.datetime(2021, 6, 17, 21, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 653974305, 'comment_body': 'Except the current object is passed in as ""parent"" to the QObject, I\'m not sure if that\'s necessary or what it will mean - if Qt automatically deletes children when you delete the parent it would be an issue!', 'comment_created': datetime.datetime(2021, 6, 17, 21, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 654079676, 'comment_body': 'I had it temporarily. Forgot to change it.', 'comment_created': datetime.datetime(2021, 6, 18, 1, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 654084806, 'comment_body': 'I added the setter method at first thinking I might use it from somewhere else in the code. But now it does seem unnecessary. I will remove it now and add it if I needed it again.\r\nAnd regarding `ChordSymbolStylesModel` being a pointer or instance, a pointer is fine right? Is there any reason to change it?', 'comment_created': datetime.datetime(2021, 6, 18, 1, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 654098250, 'comment_body': ""You just need to check if it automatically gets deleted when the parent does, if not, you'll need to delete it yourself or use an instance."", 'comment_created': datetime.datetime(2021, 6, 18, 2, 22, 29, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 654098563, 'comment_body': ""From reading the Qt documentation it seems it will get automatically deleted as you're passing in the current object as the parent."", 'comment_created': datetime.datetime(2021, 6, 18, 2, 23, 38, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 654098968, 'comment_body': ""> From reading the Qt documentation it seems it will get automatically deleted as you're passing in the current object as the parent.\r\n\r\nOh Ok. No problem then."", 'comment_created': datetime.datetime(2021, 6, 18, 2, 24, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 655579967, 'comment_body': ""When you want to display text on a button, it is better to use the `text:` property of FlatButton. \r\nAlso, it is preferred to use our own components (StyledTextLabel) instead of QML's default ones, because our own ones have the correct styling. "", 'comment_created': datetime.datetime(2021, 6, 21, 17, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 655811127, 'comment_body': 'Ok. I will change it finally(if it is still there). Because anyway I will be changing it to a canvas or smth.', 'comment_created': datetime.datetime(2021, 6, 22, 1, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 682571104, 'comment_body': 'What does NW stand for?', 'comment_created': datetime.datetime(2021, 8, 4, 12, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 682579317, 'comment_body': '""Not Working"" :) \r\nI have not implemented the functionality for that button yet. That\'s why.', 'comment_created': datetime.datetime(2021, 8, 4, 12, 44, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 682586630, 'comment_body': ';-)', 'comment_created': datetime.datetime(2021, 8, 4, 12, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691973067, 'comment_body': 'this change seems useless and may just lead to merge conflicts for no good reason', 'comment_created': datetime.datetime(2021, 8, 19, 10, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691975418, 'comment_body': 'Ahh yes. I missed that during rebase. I will fix it. Thnkx.', 'comment_created': datetime.datetime(2021, 8, 19, 10, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 691975776, 'comment_body': 'What happened here, maybe just a carriage return / linefeed change? If so: please revert.', 'comment_created': datetime.datetime(2021, 8, 19, 10, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691977572, 'comment_body': 'This change is not needed. Probably harmlsee too though, IIRC it gets set to 1 programatically anyway', 'comment_created': datetime.datetime(2021, 8, 19, 10, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691978092, 'comment_body': 'Strange naming... I guess this is only temporary?', 'comment_created': datetime.datetime(2021, 8, 19, 10, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691979855, 'comment_body': 'I am sorry I do not understand. If you are asking if I have made any change to this file that pertains to the project, then yes. But the difference should be few lines only. I do not know what is happening here.', 'comment_created': datetime.datetime(2021, 8, 19, 10, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 691981396, 'comment_body': 'Yes. In the end, I will take out the old Chord Symbols page and rename this.', 'comment_created': datetime.datetime(2021, 8, 19, 10, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 691984819, 'comment_body': ""Then please double check on those changes. I don't see a need to change the entire file, this will cause merge conflicts later"", 'comment_created': datetime.datetime(2021, 8, 19, 10, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 693863228, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2021, 8, 23, 10, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 693863809, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 23, 10, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}, {'comment_id': 698021377, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 29, 14, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Mystic-Slice', 'type': 'User'}]","[{'commit_sha': '52501109f9824f85fbe3f4b6fe4f2261564567b8', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9dc1ed71c7db21b8d83026b97e5cd9c969d2d00', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a4d5f2b563ecb34607abaa7b4391070995d82a1', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '293044f21cc7f48a89327215d8155281df44c0bf', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b39d3d748262b5d1b60d18e9e446e1ee7b13e982', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf7dbb797986924da3277b54d50cf89f092976e6', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7aa2becd26be5ac35175d5f0f32ca49703e4a3c', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2768fda4abd7ca9774c84d644a50706befb1b279', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90b4de0336a2c0e4fb87d85c112db745f2fadf67', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ab10ab5c30856c18df7f0d8c0a8afe5fa6c13ff', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5237adc92523d84872912b8b3e194bdd0c0a8e7', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '744324c2b6544b975c22f05a02552bea982ab044', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57768f20c14873ba12dc1e26d5c64bccd8de3501', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3691834a404181c8daeada1137387b0da2be70d2', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab8ad558ff13f14a72b2db5e5ff001fac1c0c64e', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16282c66d73f116532940b82ebfb3b8fde006bc5', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4e981a15c86389199d7da5b16c41f7757e5ef2a', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6af64cb700f789dfb850847c00cc196f56ef4d8a', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c24afc814103d14ea845ed57acd50af06a5fdbd', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '098ec445be04874ac29d3b173855f5e18312d5fd', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '108705bc57628068744b0b69eb3d02c2bd5fadb1', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a5a9df989e11fdc5a3cfac06c61c0c7cadd7e26', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '179cb30ab4f1f69c4a6e53db6095695c008e4b29', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbd0e6b7446d9c8f44cf5378cf975b2157ddca85', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db19fd491d2245a3cc1cbcfdba9be423aa660c68', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c083299a78865fd3b2eb69fe6333ad6d66ffa74', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cccdb1f6cb946b840a1698fe35e1b21ddb2a9aa2', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e863cc984f767fcb9abc8672eb105654b4cc0165', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0be63511e829e4f8dbc5e018f6803b62a806044e', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd89d518b50fe1da9d103bd01540dc6b062926976', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fd8d324b35f9760fe786b2b52f6a0622f118595', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c838459b11abcdef400e89a3a51588ff684cc212', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '945bce62f1612609ab382c5c577fd0f66d8e65e4', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '905d9fab0a3042f7a45f9178f5cd4861eb36468f', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '167e52e068363d9174f7a4a1241b59b24226e186', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8d05bb02b5a00f137194a4dff73c9d32d918691', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37f008424026d91031de535930fddd66e94786c5', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab20d9bc88a90501091049ffcf73c96b3d12d526', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a676b4cc4fae254f168c86f967ebaae170deebbc', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cddec37ace5d7185f40f6b230549774f405c9d26', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e7311cf5efb89cbc8393627f7ab1c646ada6c1d', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c10fa249f7f4852d8b895c17bc4aa62d57cb73f2', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40b6a7d0505867c5707aa10cbc1d8b37bff20676', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7173de4ea26fde021b47a72bb8bbb25e3bab944f', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba551ff3fd0c9e551edaae0aa368457bf287d563', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44b5d4f9bb77f0b91a20ca12f669e064d3e9d37a', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '625325ab8004f3d80b7eac6cacf1c9d845c01bbc', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e447172f7ef55ef5acaf538940168fd92752e0ac', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230789179260849c834aa766ce87888dff42c7e2', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86705df656ff94dc6b04faa63741a450fd242a3b', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7b40aca1cdcd4303c7995528c402e3a5d19d3c2', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f38b42ca168dc8d59dd245c41556857729fe2654', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e6b7826f771ea8c7ed320402768f0b216b2806d', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43a9c19b7e4a11606b7160cee3da11a3749984ad', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c94891d0d587c52c2a3ddff00fcf700b0da2ef8', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b21b0c8febe1ee263fc80902418ed4648eb5b2e', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af12c94efc8092dbf1eda9fe72956f88e1ef01e3', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '871982071b99d647c54210f2caf63f5ec1b7e372', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '845fb6e1d9c8340eddc33b665b161355360f07af', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d3c80cb8cb1505c6213206f265b941a4e515c78', 'committer_username': 'Mystic-Slice', 'committer_name': 'Ashwath V A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 3, 1, 23, 46, tzinfo=datetime.timezone.utc)}]",Ashwath V A,73862377,,User,,47,,33,37

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
4454793,MuseScore,musescore/MuseScore,C++,2585,12001,239,427,37301,2747,112,139,"[{'id': 736502450, 'number': 9184, 'closed': datetime.datetime(2021, 9, 20, 7, 22, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 17, 16, 2, 1, tzinfo=datetime.timezone.utc), 'time_taken': 228026.0, 'time_delta': '2 days, 15:20:26', 'additions': 18, 'deletions': 19, 'state': 'closed'}, {'id': 735099483, 'number': 9146, 'closed': datetime.datetime(2021, 9, 16, 7, 9, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 16, 3, 56, 30, tzinfo=datetime.timezone.utc), 'time_taken': 11576.0, 'time_delta': '3:12:56', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 672850061, 'number': 8345, 'closed': None, 'created': datetime.datetime(2021, 6, 17, 17, 28, 24, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 9650, 'deletions': 2508, 'state': 'open'}, {'id': 652641447, 'number': 8170, 'closed': datetime.datetime(2021, 11, 30, 9, 48, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 25, 17, 50, 7, tzinfo=datetime.timezone.utc), 'time_taken': 16300690.0, 'time_delta': '188 days, 15:58:10', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 632880345, 'number': 8062, 'closed': datetime.datetime(2021, 5, 12, 10, 22, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 14, 44, 56, tzinfo=datetime.timezone.utc), 'time_taken': 416281.0, 'time_delta': '4 days, 19:38:01', 'additions': 21, 'deletions': 12, 'state': 'closed'}, {'id': 612212991, 'number': 7918, 'closed': datetime.datetime(2021, 4, 19, 15, 26, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 9, 7, 10, 39, tzinfo=datetime.timezone.utc), 'time_taken': 893735.0, 'time_delta': '10 days, 8:15:35', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 611732410, 'number': 7914, 'closed': datetime.datetime(2021, 4, 12, 20, 25, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 8, 17, 14, 19, tzinfo=datetime.timezone.utc), 'time_taken': 357049.0, 'time_delta': '4 days, 3:10:49', 'additions': 16, 'deletions': 11, 'state': 'closed'}, {'id': 609877722, 'number': 7905, 'closed': datetime.datetime(2021, 4, 6, 18, 5, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 6, 14, 0, 44, tzinfo=datetime.timezone.utc), 'time_taken': 14680.0, 'time_delta': '4:04:40', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 609492015, 'number': 7901, 'closed': datetime.datetime(2021, 4, 28, 11, 53, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 6, 5, 52, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1922479.0, 'time_delta': '22 days, 6:01:19', 'additions': 11, 'deletions': 8, 'state': 'closed'}, {'id': 603807730, 'number': 7835, 'closed': datetime.datetime(2021, 3, 30, 15, 8, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 30, 13, 44, 53, tzinfo=datetime.timezone.utc), 'time_taken': 5018.0, 'time_delta': '1:23:38', 'additions': 18, 'deletions': 1, 'state': 'closed'}, {'id': 603719757, 'number': 7834, 'closed': datetime.datetime(2021, 3, 30, 13, 41, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 30, 12, 37, 33, tzinfo=datetime.timezone.utc), 'time_taken': 3844.0, 'time_delta': '1:04:04', 'additions': 16, 'deletions': 1, 'state': 'closed'}, {'id': 601753665, 'number': 7805, 'closed': datetime.datetime(2022, 3, 23, 15, 18, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 26, 16, 21, 47, tzinfo=datetime.timezone.utc), 'time_taken': 31272998.0, 'time_delta': '361 days, 22:56:38', 'additions': 2, 'deletions': 0, 'state': 'closed'}]"
