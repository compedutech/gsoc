pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1399410969,Add the capacity p-median example to the notebook,"#381 

Hi! I want to pull the request of adding the capacity p-median example. I know I need to create a new forked repository later, just want to share the updated version so that I can get some advice!

Also, I noticed this pull request also contains my previous commit of adding references, I am confused of it because I remembered I have pulled it last week. If there is nothing wrong with this pull request, please do let me know and I will modify it!

Also, it says the diff on notebooks is too large to show. I suppose it's because I add the formulation, and made it longer.",False,387,https://api.github.com/repos/pysal/spopt/pulls/387,https://github.com/pysal/spopt/pull/387,closed,1116,93,4,13,17,32,2,1,"[{'name': 'notebooks/binders'}, {'name': 'GSOC2023'}]",2023-06-20 08:10:00+00:00,2023-10-03 19:54:51+00:00,9114291.0,"105 days, 11:44:51","[{'comment_id': 1235468901, 'comment_body': 'We will need to update your predefined facilities section due to our documentation confusion --> xref: https://github.com/pysal/spopt/issues/352, https://github.com/pysal/spopt/pull/384', 'comment_created': datetime.datetime(2023, 6, 20, 15, 47, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1287310089, 'comment_body': 'I think your added section to the notebook looks great. Can you update according to the issue and PR for predefined facilities above?', 'comment_created': datetime.datetime(2023, 8, 8, 15, 42, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1287310935, 'comment_body': 'This file looks good.', 'comment_created': datetime.datetime(2023, 8, 8, 15, 43, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1287328488, 'comment_body': ""Just a minor typo. It's missing the parenthesis in the last column. `k_nearest_pmedian.solve(pulp.PULP_CBC_CMD(msg=False))`. "", 'comment_created': datetime.datetime(2023, 8, 8, 15, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'gegen07', 'type': 'User'}, {'comment_id': 1287329230, 'comment_body': ""```python\r\ndef __init__(self, clients, facilities, weights, capacities, k_list, distance_metric, p_facilities, name='k-nearest p median'):\r\n   ...\r\n```\r\nThen, at the end of the function here, \r\n```python\r\nreturn KNearestPMedian(clients, facilities, weights, capacities, k_list, distance_metric, name)\r\n```\r\n"", 'comment_created': datetime.datetime(2023, 8, 8, 15, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ljwolf', 'type': 'User'}, {'comment_id': 1287335913, 'comment_body': 'this `@classmethod` needs to be removed. And, at the end of the function, we would set `self.problem = k_nearest_p_median`', 'comment_created': datetime.datetime(2023, 8, 8, 16, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ljwolf', 'type': 'User'}, {'comment_id': 1287343599, 'comment_body': 'this `@classmethod` needs to be removed. `solve()` should be an instance method, since we use it from a ""initialised"" object. ', 'comment_created': datetime.datetime(2023, 8, 8, 16, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ljwolf', 'type': 'User'}, {'comment_id': 1287345635, 'comment_body': 'This `@classmethod` should be removed. This should be a standard method. ', 'comment_created': datetime.datetime(2023, 8, 8, 16, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ljwolf', 'type': 'User'}, {'comment_id': 1287349741, 'comment_body': '@rongboxu Add the following text above cell 49:\r\n\r\n> However, in many real world applications there may already be existing facility locations with the goal being to add one or more new facilities. Here we will define facilites $y_0$ and $y_1$ as already existing (they must be present in the model solution). This will lead to a sub-optimal solution.\r\n> \r\n> ***Important:*** The facilities in `""predefined_loc""` are a binary array where `1` means the associated location must appear in the solution.\r\n\r\nSee an example in the current version of the [`pmedian` notebook on `main`](https://github.com/pysal/spopt/blob/main/notebooks/p-median.ipynb) above cell 24.\r\n\r\n', 'comment_created': datetime.datetime(2023, 8, 8, 16, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1287362143, 'comment_body': 'Are warnings thrown or are exceptions raised? If these are errors/exceptions this section title would probably be `Raises`.', 'comment_created': datetime.datetime(2023, 8, 8, 16, 16, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1290371261, 'comment_body': ""Hi James @jGaboardi ! The 'Warning' you pick out is referring to these check process. It check if the demand geodataframe and facility geodataframe have the same crs. Here I set it raise the ValueError."", 'comment_created': datetime.datetime(2023, 8, 10, 16, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rongboxu', 'type': 'User'}, {'comment_id': 1290624560, 'comment_body': 'Yes, but are those actually warnings or are they errors/exceptions? These would be different sections in the [NumPy style docstrings](https://numpydoc.readthedocs.io/en/latest/format.html#style-guide) (which we follow). The [Raises](https://numpydoc.readthedocs.io/en/latest/format.html#raises) and [Warns](https://numpydoc.readthedocs.io/en/latest/format.html#warns) sections are optional, but if they are included they should be correctly labeled.', 'comment_created': datetime.datetime(2023, 8, 10, 20, 4, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1291159533, 'comment_body': ""I think they belong to errors. And in the numpy style docstrings, 'Raise section should be used judiciously, i.e., only for errors that are non-obvious or have a large chance of getting raised'. Thus, I think there is no need to add this part to the docstring?"", 'comment_created': datetime.datetime(2023, 8, 11, 10, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rongboxu', 'type': 'User'}, {'comment_id': 1291210755, 'comment_body': 'As we discussed before, I rewrote the `__init__()`.', 'comment_created': datetime.datetime(2023, 8, 11, 11, 7, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rongboxu', 'type': 'User'}, {'comment_id': 1291212821, 'comment_body': 'Now, the `_create_sparse_matrix` and `_from_sparse_matrix` are both instance methods. Only `from_geodataframe` is classmethod.', 'comment_created': datetime.datetime(2023, 8, 11, 11, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rongboxu', 'type': 'User'}, {'comment_id': 1291213648, 'comment_body': 'The `from_geodataframe` classmethod will return an object.', 'comment_created': datetime.datetime(2023, 8, 11, 11, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rongboxu', 'type': 'User'}, {'comment_id': 1291215703, 'comment_body': 'Now I use `self.method()` to use the instance method.', 'comment_created': datetime.datetime(2023, 8, 11, 11, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rongboxu', 'type': 'User'}, {'comment_id': 1291530274, 'comment_body': 'Correct! I agree.', 'comment_created': datetime.datetime(2023, 8, 11, 15, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1292538390, 'comment_body': 'I wonder if this method might be better named something like `_increment_k_list()`, `_update_k_list()`, or `_increase_k_list()`? Since the `self.k_list()` already attribute exists we are not creating it.', 'comment_created': datetime.datetime(2023, 8, 12, 23, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1292541907, 'comment_body': 'Should the initial value for `k_list` default to an array of 1s? That seems the most logical case to initiate the  `KNearestPMedian`.\r\n\r\nIf so, perhaps we can set `k_list` as a keyword argument with the default value being `numpy.ones`. Then:\r\n\r\n```python\r\nif callable(k_list):\r\n    k_list = k_list(gdf_demand.shape[0])\r\n```', 'comment_created': datetime.datetime(2023, 8, 12, 23, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1292784574, 'comment_body': ""Hi James! I appreciate your input. I agree that there's room for improvement in terms of naming, `_update_k_list()` is great! I'll make sure to update it accordingly. Thank you!"", 'comment_created': datetime.datetime(2023, 8, 13, 13, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rongboxu', 'type': 'User'}, {'comment_id': 1292787779, 'comment_body': ""I also think it's a great idea to set the default value for k_list to an array of one!\r\n\r\nHowever, in Church's paper, he recommended to set the initial value of k as 5. I am not sure which way we should use now. Maybe we can discuss it in the meeting next week?"", 'comment_created': datetime.datetime(2023, 8, 13, 13, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rongboxu', 'type': 'User'}, {'comment_id': 1295206305, 'comment_body': 'Are we enforcing that `k_list` be a `numpy.array` (or can it be a `list`)?\r\n\r\n* If the answer is ""yes"", we may consider updating the argument and attribute name to `k_array` or, more generally, `k_values`.\r\n* If the answer is ""no"", we should have logic to check if `k_list` is actually a `numpy.array` and cast it as such if it is not. Line 959 will break if the type of `k_list` is an actual `list`.', 'comment_created': datetime.datetime(2023, 8, 15, 22, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1297232820, 'comment_body': 'Great tests, @rongboxu.', 'comment_created': datetime.datetime(2023, 8, 17, 13, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1299499452, 'comment_body': 'Is it added to dependencies or I missed something? It is not installing when using this branch.', 'comment_created': datetime.datetime(2023, 8, 21, 1, 48, 10, tzinfo=datetime.timezone.utc), 'commenter': 'gegen07', 'type': 'User'}, {'comment_id': 1300045203, 'comment_body': 'Yes, I noticed this as well when try to run the notebook locally. @rongboxu `pointpats` needs to be added to:\r\n* the `.ci/` environments\r\n* `pyproject.tml`\r\n* `environment.yaml`', 'comment_created': datetime.datetime(2023, 8, 21, 12, 29, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}]","[{'commit_sha': '7ee64216395ff1110c72176da61ec5437039ee52', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe9ed594bc771aacb56250a8e598d3fb9a5271eb', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99cb6e31548011881017720aaaf0961ea318fab3', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ef3bdc3b579e9a7a1d9ee10035e72f8008cfff8', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca79f5018abe78e6537ca8ee944f8ff72a851169', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66e7305396d47067586ed28c4f1ebef9dda482d6', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3de631a8987c704e9e8e39bf06683af8e3420cb1', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca8d42089dce308d5163dda8dc27c11dd97a353c', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2f5eddea65ed94af00be143f83f21ba3857f059', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48334a11bbcc7c42346164cd2da374f911199163', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d5f307ece927e6d1f975c692afd37a83a2014b8', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4996272647658cecae6e50f467155dcb15daa13', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3eac2c675911e2bfa3ae4fd1d5f696627e24bb2b', 'committer_username': 'jGaboardi', 'committer_name': 'James Gaboardi', 'committer_email': None, 'commit_date': datetime.datetime(2014, 8, 29, 13, 8, 19, tzinfo=datetime.timezone.utc)}]",,91969070,,User,,12,,1,0
1483720797,Add the k nearest p-median module and the tutorial example for capacitated p-median,Hi all! This pull request originates from the feature branch and includes all the commits from PR #387 . It can be identified as the outcome of the GSOC 2023 project.,True,397,https://api.github.com/repos/pysal/spopt/pulls/397,https://github.com/pysal/spopt/pull/397,closed,951,576,11,17,10,5,2,1,"[{'name': 'locate'}, {'name': 'GSOC2023'}]",2023-08-21 23:13:02+00:00,2023-10-03 18:30:25+00:00,3698243.0,"42 days, 19:17:23","[{'comment_id': 1300780462, 'comment_body': ""Let's remove the pin here (and all other `.ci/` environments ***except*** `.ci/38-MIN.yaml`):\r\n\r\n```suggestion\r\n  - pointpats\r\n```"", 'comment_created': datetime.datetime(2023, 8, 22, 0, 27, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1300781226, 'comment_body': '```suggestion\r\n  - pointpats\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 0, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1300781297, 'comment_body': '```suggestion\r\n  - pointpats\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 0, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1300781372, 'comment_body': '```suggestion\r\n  - pointpats\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 0, 29, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jGaboardi', 'type': 'User'}, {'comment_id': 1301484427, 'comment_body': ""Hi James. I commit this change, but the test with python 3.10 still fails.\r\nYesterday, I initially used `pointpats` without specifying its version, but the tests didn't pass. Therefore, I specified the latest version of `pointpats` (2.3.0)."", 'comment_created': datetime.datetime(2023, 8, 22, 11, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rongboxu', 'type': 'User'}]","[{'commit_sha': '83005d0ed6edb3a54d1c450f50483cdc0706d92b', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04b19113cbba27403b308f900a7389cde4ce7489', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6138b5f9d776444503877c1b60c9cf2c4f833ee', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ab3b6604ae146b2603656ff9e7ebf11dc6dfafe', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffeb9c095f9e87dcc3676410256eff25a20169f2', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cac89d886f33a87a56878ffad8d92fd3628d09f', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b44cfdaeab1938dea0f1846d959c1644e945128', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21582390fb1c45b903cde74293d1e542dc043c01', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41c433e5c14ff24b725a1bc25214190eab791768', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd14dac6ea26c3c28b1b1cf966fad1b6af55fa1ec', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d3633711dce568584f8469118ce11327d271aca', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd533240714bb536c8b6c07653541c720b328d5a7', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02503173b6a39b769469a9d9d4f524cfc0babbe1', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1706612cacafe37799b65623d6420507b5c2786', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8881c2797eb1adaa67bff2b519decd93d40cc76b', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a299cedff3829f5fad8f46febb8e770909794df4', 'committer_username': 'rongboxu', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 5, 15, 13, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30cbcfeb7473f4252c7d6ab6ab901247167329e6', 'committer_username': 'jGaboardi', 'committer_name': 'James Gaboardi', 'committer_email': None, 'commit_date': datetime.datetime(2014, 8, 29, 13, 8, 19, tzinfo=datetime.timezone.utc)}]",,91969070,,User,,12,,1,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
173353142,spopt,pysal/spopt,Python,46,299,14,18,1069,21,2,0,"[{'id': 1483720797, 'number': 397, 'closed': datetime.datetime(2023, 10, 3, 18, 30, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 21, 23, 13, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3698243.0, 'time_delta': '42 days, 19:17:23', 'additions': 951, 'deletions': 576, 'state': 'closed'}, {'id': 1399410969, 'number': 387, 'closed': datetime.datetime(2023, 10, 3, 19, 54, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 8, 10, tzinfo=datetime.timezone.utc), 'time_taken': 9114291.0, 'time_delta': '105 days, 11:44:51', 'additions': 1116, 'deletions': 93, 'state': 'closed'}, {'id': 1391946564, 'number': 382, 'closed': datetime.datetime(2023, 6, 15, 16, 57, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 14, 8, 43, 45, tzinfo=datetime.timezone.utc), 'time_taken': 116019.0, 'time_delta': '1 day, 8:13:39', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 1365748149, 'number': 374, 'closed': datetime.datetime(2023, 6, 13, 15, 38, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 5, 51, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1590433.0, 'time_delta': '18 days, 9:47:13', 'additions': 1176, 'deletions': 11, 'state': 'closed'}]"
