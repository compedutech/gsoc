pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
416623323,User collections create/edit route,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing
1. Verify that your changes match our coding style
1. Fill out the requested information
-->

### Problem
Added Collection-Create/Edit Route

",True,425,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/425,https://github.com/metabrainz/bookbrainz-site/pull/425,closed,614,4,10,16,7,55,0,1,[],2020-05-12 10:09:02+00:00,2020-06-09 15:29:27+00:00,2438425.0,"28 days, 5:20:25","[{'comment_id': 423734054, 'comment_body': ""What happens if there's an error?"", 'comment_created': datetime.datetime(2020, 5, 12, 13, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 423735331, 'comment_body': '```suggestion\r\n\tisValid() {\r\n```', 'comment_created': datetime.datetime(2020, 5, 12, 13, 32, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 423963968, 'comment_body': 'You might be able to use `UserCollection().collaborators().attach([collaborator.id\r\n])` and `detach([collaborator.id])` here.\r\nhttps://bookshelfjs.org/api.html#Collection-instance-attach', 'comment_created': datetime.datetime(2020, 5, 12, 18, 59, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 423964678, 'comment_body': ""Looking at naming for other models, I'd expect 'collaborators.details' here"", 'comment_created': datetime.datetime(2020, 5, 12, 19, 0, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 423981894, 'comment_body': 'Wow, this is a new feature right? to make changes directly from here.\r\n![Screenshot_2020-05-13  WIP  User collections create route by prabalsingh24 · Pull Request #425 · bookbrainz bookbrainz-site](https://user-images.githubusercontent.com/45737735/81737131-41abf000-94b5-11ea-8e9e-834560d8820f.png)\r\n\r\n', 'comment_created': datetime.datetime(2020, 5, 12, 19, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 423986310, 'comment_body': 'https://github.com/bookbrainz/bookbrainz-data-js/blob/fc02949c3426a7eb213ad68df6c544045709fbf9/src/models/userCollectionCollaborator.js#L24\r\nI think `UserCollection.collaborators.collaboratorDetails` is better because there is a `editor.collaboratesOn.collectionDetails` as well\r\n\r\nOr Maybe `editor.collaboratesOn.collection` and `UserCollection.collaborators.details` sounds better..\r\nWhat do you think?', 'comment_created': datetime.datetime(2020, 5, 12, 19, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 424173563, 'comment_body': '``` This method (along with Collection#detach and Collection#updatePivot) are mixed in to a Collection when returned by a belongsToMany relation. ```\r\n\r\nHere I used `hasMany` relation. [UserCollectionModel](https://github.com/bookbrainz/bookbrainz-data-js/blob/fc02949c3426a7eb213ad68df6c544045709fbf9/src/models/userCollection.js#L25)\r\n\r\nAlso `UserCollection().collaborators.attach()` is giving error : `attach is not a function` because of `hasMany` relation', 'comment_created': datetime.datetime(2020, 5, 13, 5, 2, 19, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 424278826, 'comment_body': ""Well, in my experience it should work for both sides of the relationship, but maybe I'm getting it wrong. \r\nIt should be `UserCollection().collaborators().attach()` with parenthesis after collaborators; Wanna try it? It'll make your job a bit easier."", 'comment_created': datetime.datetime(2020, 5, 13, 8, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 424279368, 'comment_body': ""I don't think it's new new but the ability to do it for multiple lines is https://github.blog/changelog/2020-02-26-multi-line-code-suggestions-beta/"", 'comment_created': datetime.datetime(2020, 5, 13, 8, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 424284023, 'comment_body': 'Oh wait! oops. I was trying it wrong it think. I was doing `UserCollection.collaborators.....` ', 'comment_created': datetime.datetime(2020, 5, 13, 9, 1, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 424287523, 'comment_body': ""I would suggest `UserCollectionCollaborator.collaborator()` and `UserCollectionCollaborator.collection()`\r\n\r\nLooking at `Editor.collaboratesOn.collection`, you could skip a step: with the ORM, you can return the array of `collection` models an editor collaborates on directly, with `[.through()`](https://bookshelfjs.org/api.html#Collection-instance-through).\r\n\r\nSo you would have instead `editor.collaboratesOn()` which would return a collection of UserCollection items.\r\nSame thing for `UserCollection.collaborators()` which would return a collection of Editor items.\r\nHere's an example where this is used in the ORM: https://github.com/bookbrainz/bookbrainz-data-js/blob/fc02949c3426a7eb213ad68df6c544045709fbf9/src/models/editor.js#L25\r\n\r\n"", 'comment_created': datetime.datetime(2020, 5, 13, 9, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 431695752, 'comment_body': 'Umm no `attach` works only with `belongsToMany` relation. :(\r\n', 'comment_created': datetime.datetime(2020, 5, 28, 9, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 433142563, 'comment_body': ""Is this necessary? I think the way React optimizes state changes this line won't do anything."", 'comment_created': datetime.datetime(2020, 6, 1, 9, 52, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433148352, 'comment_body': ""Here too I'm not sure why there's a need for this line."", 'comment_created': datetime.datetime(2020, 6, 1, 10, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433148412, 'comment_body': ""Probably more concise to do `collaborators: […prevState.collaborators, {id:null, name:''}]` rather than modify the existing state object above (this.state.collection.collaborators.push…)"", 'comment_created': datetime.datetime(2020, 6, 1, 10, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433149210, 'comment_body': 'Same as above, not sure this does anything', 'comment_created': datetime.datetime(2020, 6, 1, 10, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433160302, 'comment_body': ""Better to import only the utilities you need rather than the whole library. (`import {upperFirst} from 'lodash'`)\r\nI'm not sure how much tree-shaking our current build setup does…"", 'comment_created': datetime.datetime(2020, 6, 1, 10, 35, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433160841, 'comment_body': '```suggestion\r\n\t\tconst {UserCollection, UserCollectionCollaborator} = req.app.locals.orm;\r\n```', 'comment_created': datetime.datetime(2020, 6, 1, 10, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433161459, 'comment_body': ""I'd suggest making this case insensitive"", 'comment_created': datetime.datetime(2020, 6, 1, 10, 38, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433168550, 'comment_body': 'Why is this needed? A comment would be welcome', 'comment_created': datetime.datetime(2020, 6, 1, 10, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433171457, 'comment_body': ""You can move this after the /create route; that way you're sure it only looks for collectionID parameter in the routes that need it (I recently changes this in the entity routes in PR #429 )"", 'comment_created': datetime.datetime(2020, 6, 1, 11, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433172158, 'comment_body': ""Regarding the comment above, you'll want to move this handler before the collectionId param routes"", 'comment_created': datetime.datetime(2020, 6, 1, 11, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433172498, 'comment_body': 'Did you mean to commit this?\r\n', 'comment_created': datetime.datetime(2020, 6, 1, 11, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433173704, 'comment_body': 'It is updating the errorText. it shows the error in the bottom. ', 'comment_created': datetime.datetime(2020, 6, 1, 11, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 433174113, 'comment_body': 'Oh do you mean only update the error text?', 'comment_created': datetime.datetime(2020, 6, 1, 11, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 433174434, 'comment_body': ""Hmm yess. I'll make this change"", 'comment_created': datetime.datetime(2020, 6, 1, 11, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 433176929, 'comment_body': ""Yes, as far as I know this line `collection: prevState.collection,` isn't going to change anything and should be removed.\r\n\r\n"", 'comment_created': datetime.datetime(2020, 6, 1, 11, 16, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433177387, 'comment_body': ""Oh okay. I'll test it can make this change everywhere "", 'comment_created': datetime.datetime(2020, 6, 1, 11, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 433178962, 'comment_body': ""Oops. I'll undo this. I did this because I was changing users and refreshing index while testing. and it was taking time to add user in trustedUsers each time :P. "", 'comment_created': datetime.datetime(2020, 6, 1, 11, 22, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 433179354, 'comment_body': ""I wonder if it wouldn't be even better to have collaborators separate on the state instead of a property of collection, so that React can optimize rendering better: if collaborators change but not the collection items, no need to redraw whatever uses the collection items. Currently I think the whole collection object in the state gets invalidated in this call.\r\n\r\nIt will require a bit of destructuring in the constructor."", 'comment_created': datetime.datetime(2020, 6, 1, 11, 23, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433179887, 'comment_body': ""Yep, totally understand. It's a far from ideal situation at the moment.\r\nI just assumed you committed it by mistake :)"", 'comment_created': datetime.datetime(2020, 6, 1, 11, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 433325485, 'comment_body': 'Yeah sorry I was testing that `try` `catch` block :P', 'comment_created': datetime.datetime(2020, 6, 1, 15, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 434596720, 'comment_body': 'The title is duplicated (""Create a collection"" followed by ""Create your collection"") needlessly', 'comment_created': datetime.datetime(2020, 6, 3, 14, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434597161, 'comment_body': 'The page layout is a bit off. Instead of a Grid -> Row -> Col hierarchy, try div -> Col only\r\nThe Grid adds a \'container\' class which throws off the layout in some screen sizes.\r\n\r\nI find that there is no need for Row + Col and just having your Col elements a level higher works better (I\'m attaching a screenshot where you can see the flattened hierarchy\r\n<img width=""1211"" alt=""Capture d’écran 2020-06-03 à 15 46 59"" src=""https://user-images.githubusercontent.com/6179856/83644385-878a3e80-a5b1-11ea-97f1-a7476a7847bf.png"">', 'comment_created': datetime.datetime(2020, 6, 3, 14, 10, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434597662, 'comment_body': 'You could add a small separation between the collection details and the collaborators section, like an `<hr>` element, and add a small title for that section.', 'comment_created': datetime.datetime(2020, 6, 3, 14, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434602433, 'comment_body': 'Putting the ""remove"" buttons on the same line as the collaborator select makes it clear that they are related. You can pass a `buttonAfter` property, which with a small modification to the EntitySearchFieldOption component will be [passed down to CustomInput](https://github.com/bookbrainz/bookbrainz-site/blob/77475b87fe748aecbb5202bc6774188b251051d8/src/client/input.js#L124)\r\n\r\nThe modification is passing down the props to CustomInput [here](https://github.com/bookbrainz/bookbrainz-site/blob/77475b87fe748aecbb5202bc6774188b251051d8/src/client/entity-editor/common/entity-search-field-option.js#L108): \r\n```\r\n<CustomInput label={labelElement} tooltipText={this.props.tooltipText}>\r\n<CustomInput label={labelElement} tooltipText={this.props.tooltipText} {...this.props}>\r\n```\r\n\r\nWith that set up, you can do the following:\r\n```\r\nthis.state.collection.collaborators.map((collaborator, index) => {\r\n\t\t\t\t\t\t\t\tconst buttonAfter = (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tbsSize=""small""\r\n\t\t\t\t\t\t\t\t\t\tbsStyle=""danger""\r\n\t\t\t\t\t\t\t\t\t\ttype=""button""\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleRemoveCollaborator(index)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tRemove\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={collaborator.id}>\r\n\t\t\t\t\t\t\t\t\t\t<EntitySearchFieldOption\r\n\t\t\t\t\t\t\t\t\t\t\tbuttonAfter={buttonAfter}\r\n\t\t\t\t\t\t\t\t\t\t\tinstanceId=""collaboratorSearchField""\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=""Select Collaborator""\r\n\t\t\t\t\t\t\t\t\t\t\tname=""editor""\r\n\t\t\t\t\t\t\t\t\t\t\ttype=""editor""\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={collaborator}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(newCollaborator) => this.handleChangeCollaborator(newCollaborator, index)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n```\r\n\r\n<img width=""687"" alt=""Capture d’écran 2020-06-03 à 16 17 09"" src=""https://user-images.githubusercontent.com/6179856/83647893-b60a1880-a5b5-11ea-83af-3e2ac5a6a8a7.png"">\r\n', 'comment_created': datetime.datetime(2020, 6, 3, 14, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434602956, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t\t\t\t\tbsStyle=""danger""\r\n```\r\n\r\nYou could also add a trash bin icon like in some other pages', 'comment_created': datetime.datetime(2020, 6, 3, 14, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434603419, 'comment_body': 'How about `bsStyle=""primary""`  to avoid the grey buttons?', 'comment_created': datetime.datetime(2020, 6, 3, 14, 18, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434604743, 'comment_body': 'Currently, selecting a user from the dropdown already selects them without having to press this button correct?\r\nMeaning this button is to add an extra empty collaborator?\r\n\r\nIf so, then the button should read ""Add another collaborator"", maybe with a little ""plus"" sign icon', 'comment_created': datetime.datetime(2020, 6, 3, 14, 20, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434604894, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t\t\tbsStyle=""success""\r\n```', 'comment_created': datetime.datetime(2020, 6, 3, 14, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434605861, 'comment_body': 'Why all caps?\r\nI would say ""Update collection"" and ""Create collection"", since we have all the space in the world', 'comment_created': datetime.datetime(2020, 6, 3, 14, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434609220, 'comment_body': 'I would replace this with `padding-sides-0`, which I prevented some differences in padding between form elements and buttons/h elements outside of from-groups.', 'comment_created': datetime.datetime(2020, 6, 3, 14, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434673888, 'comment_body': ""This shouldn't be a 404, unless we're fetching something specific (for example line 37 `await new UserCollection({id: req.params.collectionId}).fetch…` in this case an error =  collection not found = 404)"", 'comment_created': datetime.datetime(2020, 6, 3, 15, 54, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434678684, 'comment_body': ""There's an issue here: the else block is not called if the server sends an error.\r\nYour `post.send.promise.then` accepts two callbacks: one for success and one for failure: https://github.com/KyleAMathews/superagent-bluebird-promise#usage\r\n\r\nSo the else block should become a separate callback `(error) => {//do something with error}`"", 'comment_created': datetime.datetime(2020, 6, 3, 16, 0, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434733553, 'comment_body': ""Contrarily to the other makeXXXXHandler, this one does isn't a function factory that returns a function when invoked.\r\nSo `make` here is misleading."", 'comment_created': datetime.datetime(2020, 6, 3, 17, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434734720, 'comment_body': 'In this else block I guess you should also set lastModified with the current timestamp, otherwise it is not updated.', 'comment_created': datetime.datetime(2020, 6, 3, 17, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 435176101, 'comment_body': ""I just merged #438 which updates a few packages, including superagent that now doesn't need the extra 'superagent-bluebird-promise' package anymore.\r\n\r\nYou'll need to change this to `superagent` after rebasing\r\n\r\nYou will also need to remove the `.promise()` call after `request.post…`.\r\nHere's an example: https://github.com/bookbrainz/bookbrainz-site/pull/438/files#diff-e8473140e224bec0384c75907f7aee19"", 'comment_created': datetime.datetime(2020, 6, 4, 11, 13, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 435388490, 'comment_body': 'what do you think is better? destructing in the contructor ? `const {collaborators, ...collection} = props.collection;` OR passing `constructor` in the `props itself \r\n\r\n```\r\n<UserCollectionForm\r\n\tcanEditType={canEditType}\r\n\tcollection={props.collection}\r\n        collaborator={props.collaborator}\r\n/>\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 4, 16, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 435389511, 'comment_body': 'I think destructing in the backend itself is a better option?', 'comment_created': datetime.datetime(2020, 6, 4, 16, 27, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 435397423, 'comment_body': ""is `Internal Error` is enough? I don't think we should show the internal error to the user. ( it won't make any sense to them anyway)\r\nwe can print the error in the logs. Will be useful while debugging"", 'comment_created': datetime.datetime(2020, 6, 4, 16, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 435398544, 'comment_body': 'Thank you for thiss. I forgot about `buttonAfter` I was trying to adjust the button to the right side by `col-md-10`  `col-md-2`, but that way it was looking very bad ', 'comment_created': datetime.datetime(2020, 6, 4, 16, 41, 20, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 436636372, 'comment_body': 'Yes,I think Internal error as well as a `console.error(` here would make sense.', 'comment_created': datetime.datetime(2020, 6, 8, 11, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 436671077, 'comment_body': ""This change hasn't been removed."", 'comment_created': datetime.datetime(2020, 6, 8, 12, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 436671575, 'comment_body': ""I see you commented out the last_modified update below. What's the reason?"", 'comment_created': datetime.datetime(2020, 6, 8, 12, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 436671916, 'comment_body': 'I still think a separation between the main body of the form and the collaborators will be helpful.', 'comment_created': datetime.datetime(2020, 6, 8, 12, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '33d6879226f59d211382b97a1fc1aff7701e72d7', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '577200f25d82c2858f6bab1af9a1778554fcd819', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e64060b5e2ebb73e57eebe96ad5e467fa2a0a0e2', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60a15b110e758ae8d7c4b19e076ff46e2f1dbdf4', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc88933b5244056d393a225de2ee3d5bfc430e24', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '048921abf03bd53c0eb1eeb7fd0e38d3cab45977', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41ee0e0bc9485f2bd82050384289cd90433ca62c', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4bbe3cf75a6cde86a9b5fb2c9ad43b2c966f292', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed0f6b392854369fae36edc61d301d27ffde44e9', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e244b414e70e7a4aff64861312fcc31d8559f4f7', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99a7fe722eceec3ed1573e355743ad5e89669153', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7013e34c62ceab96c72fdc284635c0f3c7512a0', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef656f6a446e4e87ec2d22244b03e232027fce15', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dbbd2e833ce4911b10b97ec8c17fa69a2c4e651', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3341194d8e5ad22ef97a01370e2bc7eeace907f3', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21159eb4662b9cec35157d8947929b26a748347e', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}]",,45737735,,User,,36,,5,17
437680027,Delete collections,"### Problem
Added the feature to delete a collection


",True,464,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/464,https://github.com/metabrainz/bookbrainz-site/pull/464,closed,142,18,7,10,6,12,0,0,[],2020-06-22 04:53:51+00:00,2020-07-02 16:36:22+00:00,906151.0,"10 days, 11:42:31","[{'comment_id': 445452406, 'comment_body': 'The placement of this button looks a bit random at the moment, and in some screen sizes something comes over the button and prevents me from clicking it.\r\nI think it would make more sense to group it with the submit button at the bottom of the page, in a `<ButtonGroup>` element.', 'comment_created': datetime.datetime(2020, 6, 25, 10, 11, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445452896, 'comment_body': ""I'd say the trash icon would be better here for consistency, and I'd remove `this` to match the grammar of the other button"", 'comment_created': datetime.datetime(2020, 6, 25, 10, 11, 53, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445453192, 'comment_body': '```suggestion\r\n\t\t\t\t\t<Button bsStyle=""danger"" onClick={this.handleDelete}>\r\n```', 'comment_created': datetime.datetime(2020, 6, 25, 10, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445454756, 'comment_body': '```suggestion\r\n\t\t\t\t\t<Button bsStyle=""info"" onClick={this.handleClose}>\r\n```\r\n\r\nI would also suggest removing the `times-circle` icon entirely, just so that it stays absolutely clear which button actually deletes the collection.  What do you think?\r\n\r\n<img width=""614"" alt=""Capture d’écran 2020-06-25 à 12 15 00"" src=""https://user-images.githubusercontent.com/6179856/85701329-901bf380-b6dd-11ea-8f8c-a3b8369b8171.png"">\r\n', 'comment_created': datetime.datetime(2020, 6, 25, 10, 15, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445455400, 'comment_body': 'I would call this property `onClose` in this component, where the `DeleteModal` part is redundant, and the `on…` format for callbacks follows what we do in other components', 'comment_created': datetime.datetime(2020, 6, 25, 10, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445459107, 'comment_body': 'While you\'re in there, you could also add a ""save"" icon to the submit button :)', 'comment_created': datetime.datetime(2020, 6, 25, 10, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445460433, 'comment_body': ""I've also seen before the use of elipsis (`…`) on delete buttons (and often in menu items) to suggest there is a further action, or at least that it's not an instant deletion. What do you think about that?"", 'comment_created': datetime.datetime(2020, 6, 25, 10, 27, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445463626, 'comment_body': 'I would just put this paragraph in the alert, under the h4 element.', 'comment_created': datetime.datetime(2020, 6, 25, 10, 33, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445469014, 'comment_body': 'And a tiny nitpick :) : \r\n```suggestion\r\n\t\t\t\t\t<Modal.Title>Confirm deletion</Modal.Title>\r\n```', 'comment_created': datetime.datetime(2020, 6, 25, 10, 44, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 448484001, 'comment_body': 'Sorry, I think i suggested `onCloseModal` instead of `handleCloseModal` for this function, to be consistent with `handleShowModal`', 'comment_created': datetime.datetime(2020, 7, 1, 16, 34, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 448484451, 'comment_body': 'And the other way around for the property: `onCloseModal={this. handleCloseModal}`', 'comment_created': datetime.datetime(2020, 7, 1, 16, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 448496591, 'comment_body': ""We don't want to swallow the error in case we're debugging an issue, so `log.debug(err);` here would be welcome, with `import log from 'log';` in the imports.\r\n(I forgot to recreate my database and the missing `CASCADE` on delete was throwing an error which I couldn't see, for example, which was solved quickly and easily by logging the error :) )"", 'comment_created': datetime.datetime(2020, 7, 1, 16, 57, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': 'a2bc43120b8730bab6064061817f02c88f180f5e', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c36efe7ec6b8163f28b6b161ecb98706574f80c0', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65e58a352870922a4a1fabb880e4f0d1fdb7b317', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43e8b1ba7e3486b54182dbab992c81a60ccb9de8', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6679af697b72767b613ba1393007223267369c9', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e308e1a7c40d0ef773c7508567c40ab86d250645', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ef4ed09b5f3b365339464889bd094ebc8a63f47', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6cd5780bb8c91d929b14afab1085e6ad0a10529', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd12e84744614392084a13d2cbeb9891f4ce85b2a', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d3d82c2cf249901d8285a513f5d2e752488f0c0', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}]",,45737735,,User,,36,,5,17
441192111,CollectionView page,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing
1. Verify that your changes match our coding style
1. Fill out the requested information
-->

### Problem
CollectionView Page
<!-- What are you trying to solve? -->
",True,468,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/468,https://github.com/metabrainz/bookbrainz-site/pull/468,closed,1056,78,14,23,11,31,0,0,[],2020-06-29 04:45:35+00:00,2020-07-08 13:38:45+00:00,809590.0,"9 days, 8:53:10","[{'comment_id': 447607568, 'comment_body': 'Same as in the other PR, it would be great if this was a more user-friendly error message', 'comment_created': datetime.datetime(2020, 6, 30, 11, 21, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447608214, 'comment_body': ""That's a smart way to solve the issue of each entity table requiring a specific named key. Nice!"", 'comment_created': datetime.datetime(2020, 6, 30, 11, 22, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447609268, 'comment_body': 'I think you can get the formatting closer to the existing entity pages, and also use a big entity icon. (I was originally thinking the icon of the entity type)', 'comment_created': datetime.datetime(2020, 6, 30, 11, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447610561, 'comment_body': ""I wonder if it would make more sense to show these buttons below the entity table, along with the batch remove button.\r\n\r\nIf that doesn't work out well, I'd suggest having the buttons left aligned rather than right-aligned"", 'comment_created': datetime.datetime(2020, 6, 30, 11, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447611007, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon=""times-circle""/>\r\n```\r\n\r\nI think here the times-circle icon will be ideal', 'comment_created': datetime.datetime(2020, 6, 30, 11, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447611336, 'comment_body': ""```suggestion\r\nCollectionPage.displayName = 'CollectionPage';\r\n```"", 'comment_created': datetime.datetime(2020, 6, 30, 11, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447612471, 'comment_body': '```suggestion\r\n\tlet showCheckboxes = isOwner;\r\n\tif (collection.collaborators.filter(collaborator => collaborator.id === req.user?.id).length)) {\r\n```', 'comment_created': datetime.datetime(2020, 6, 30, 11, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447613695, 'comment_body': ""```suggestion\r\n\tonToggleRow: PropTypes.func\r\n```\r\n\r\nThis should be changed wherever that function is passed to a child component, to clearly identify that it's a event  function"", 'comment_created': datetime.datetime(2020, 6, 30, 11, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447614527, 'comment_body': 'I wonder if you could do without this.\r\nWould changing `onClick={() => toggleRow(edition.bbid)}` \r\nto: `onClick={toggleRow.bind(this, edition.bbid)}` do the trick?', 'comment_created': datetime.datetime(2020, 6, 30, 11, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447616800, 'comment_body': ""We'll need to modify this according to the resolution in the other PR"", 'comment_created': datetime.datetime(2020, 6, 30, 11, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447618010, 'comment_body': ""In the future we might want to think about optimizing this to fetch all the entities in a single batch, but that's for another day."", 'comment_created': datetime.datetime(2020, 6, 30, 11, 42, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447618726, 'comment_body': 'We probably want to send a detailed error if there are no bbids (missing in body or empty array)', 'comment_created': datetime.datetime(2020, 6, 30, 11, 43, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447619436, 'comment_body': ""I wonder if you could do this in one batch instead of multiple calls?\r\nPerhaps using Bookshelf's collections ?"", 'comment_created': datetime.datetime(2020, 6, 30, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447619627, 'comment_body': ""Let's `log.debug` this."", 'comment_created': datetime.datetime(2020, 6, 30, 11, 45, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 449488064, 'comment_body': 'that fixes that error but shows a different eslint error. :(', 'comment_created': datetime.datetime(2020, 7, 3, 9, 42, 4, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 449488069, 'comment_body': ""I'll add this to that doc"", 'comment_created': datetime.datetime(2020, 7, 3, 9, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 449759502, 'comment_body': '`fetchPage` is not working here. `debug: true` shows two sql queries for `fetchPage` (idk why..). The problem is with second query which counts the number of items.. I think the error is because of composite primary key\r\n', 'comment_created': datetime.datetime(2020, 7, 4, 10, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 449759523, 'comment_body': '`fetchAll` is working fine though', 'comment_created': datetime.datetime(2020, 7, 4, 10, 8, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 450335365, 'comment_body': 'I suggest using the `getEntityLabel` utility from entityHelpers', 'comment_created': datetime.datetime(2020, 7, 6, 16, 20, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 450336100, 'comment_body': ""Not sure this is necessary, and you're not using it in the `.find(…` and `onToggleRow(…` below."", 'comment_created': datetime.datetime(2020, 7, 6, 16, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 450354627, 'comment_body': 'We need to optimize this at some point to fetch all the entities in one go.', 'comment_created': datetime.datetime(2020, 7, 6, 16, 52, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 450355396, 'comment_body': '```suggestion\r\n\t\tconst isOwner = req.user && parseInt(collection.ownerId, 10) === parseInt(req.user?.id, 10);\r\n```', 'comment_created': datetime.datetime(2020, 7, 6, 16, 53, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 450356469, 'comment_body': '```suggestion\r\n\t\tnext(err);\r\n```', 'comment_created': datetime.datetime(2020, 7, 6, 16, 55, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 450356594, 'comment_body': '```suggestion\r\n\t\treturn next(err);\r\n```', 'comment_created': datetime.datetime(2020, 7, 6, 16, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 450360589, 'comment_body': 'Here we can do that in one query. [From the docs](https://bookshelfjs.org/api.html#Model-instance-save):\r\n```\r\n// UPDATE authors SET ""bio"" = \'Short user bio\' WHERE ""id"" = 1\r\nnew Author({id: 1, first_name: \'User\'})\r\n  .save({bio: \'Short user bio\'}, {patch: true})\r\n  .then((model) => {\r\n    // ...\r\n  })\r\n```\r\n', 'comment_created': datetime.datetime(2020, 7, 6, 17, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 450381644, 'comment_body': ""I'll have a look into this. Have you checked if it behaves differently for other paginated pages?"", 'comment_created': datetime.datetime(2020, 7, 6, 17, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 450759630, 'comment_body': ""At first I hadn't understood that it wasn't working *at all*, as in throwing an error :D\r\nI thought the not working part was that there were two queries instead of one.\r\n\r\nI see the issue. Tried a couple of things unsuccessfully. It's undoubtedly related to Bookshelf not supporting composite primary keys ([#1664](https://github.com/bookshelf/bookshelf/issues/1664)).\r\n\r\nYou solved it the right way :+1:. You can remove the commented out fetchpage code I think, we'll just do it this way."", 'comment_created': datetime.datetime(2020, 7, 7, 10, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 451288530, 'comment_body': ""I have made this change, but I don't think this was needed. We're checking `req.user` first and because of `&&` if the first query is false the second is not calculated.\r\n\r\n"", 'comment_created': datetime.datetime(2020, 7, 8, 5, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 451445547, 'comment_body': 'True.', 'comment_created': datetime.datetime(2020, 7, 8, 10, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 451461606, 'comment_body': ""I just noticed these column classes.\r\nIt's making  some rows wrap around for me, which we probably don't want.\r\nWas there a specific reason for the col-… classes?\r\nIf it's to ensure you have enough space for the name, you can add a simple `style={{width: '40%'}}` to the Name <th element.\r\n"", 'comment_created': datetime.datetime(2020, 7, 8, 11, 7, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 451528389, 'comment_body': 'yes because here there are 5 columns, there was little less space for name and there was little extra space for date columns', 'comment_created': datetime.datetime(2020, 7, 8, 13, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}]","[{'commit_sha': '2b412ea74a6c1c7016a0bd36776d6d82579e7bee', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '687a3bdaab9a160cd7c5bc13bbffbb8173843b34', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '366d3ec57128a7008f00d0118a9ab9457a440bc0', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b23900181dad21c10de493ad7d52b62da98469f5', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc5806b850e87b23c06f598bbfef244b870790d2', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b55c56d35e25183564afbaeca0afd6b8c85c5f37', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd7ec017d18b239a86e5495b384e960f015f1c2e', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97c77e6fcdf6eadf9e3c8ce75c1cc929548abf48', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '608c55da1f64aca92217345d261e4ab12e126db5', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92a1550193a6be562ea21f50e8054c66743656b6', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30e3e5323719ff4175ca7f8b3d7ce9d1ac23e773', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feadacd3b4f76493773e6f181ae56bf13ab20eac', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '535168092e5f415269fdeb6de184431932469061', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '126f0cc97e8a3955d42ad696120a979ca806b330', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'add12c70cc80bf24421a7bd0866f6eef09fb4588', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '926f3bb11b247e474097d0c50cee67ac06652e12', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75e67db37af5abbd5b766431f425af9f1d3be7e7', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b54e6fd0620659a17ef942134d6e2aa302fedde', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bbfb8689450b7b8bfe9f2e5ba0083f89d91e6c3', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07469c01b14bd84ec4e5968ca58eaa147d71f821', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '634e71f2f12b070b2800b5d139edd5d0a96afd2b', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f39b8a810e6123fe57fe58e6badc317dfad25d66', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62e9f7c2868cd2483757604501d4dc3a9834358c', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}]",,45737735,,User,,36,,5,17
425613535,Collections: Editor Profile Tab,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing
1. Verify that your changes match our coding style
1. Fill out the requested information
-->

### Problem
`collections` tab in user -profile


### Solution
![Screenshot_2020-05-31 prabalsinghbhandari's Collections – BookBrainz](https://user-images.githubusercontent.com/45737735/83353688-f5e0be00-a371-11ea-8ed6-9d9dbacfa7b9.png)
",True,434,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/434,https://github.com/metabrainz/bookbrainz-site/pull/434,closed,1031,41,22,18,6,26,0,0,[],2020-05-31 13:39:52+00:00,2020-06-25 16:55:34+00:00,2171742.0,"25 days, 3:15:42","[{'comment_id': 432948371, 'comment_body': 'I think this can done in one DB query, instead of two here..', 'comment_created': datetime.datetime(2020, 5, 31, 13, 41, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 433182035, 'comment_body': 'Also I am thinking of adding `entity_type` in params. That way collections of a particular type can be fetched. \r\n<br>\r\nThis route then can be used in `Add Entity to Collection` in the search page.\r\n`editor/:id/collections/collections?type=edition` this will return a JSON object with list of editon-collection for the user\r\n', 'comment_created': datetime.datetime(2020, 6, 1, 11, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 434739715, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t\t<th className=""col-sm-3"">Entity Type</th>\r\n```', 'comment_created': datetime.datetime(2020, 6, 3, 17, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434740358, 'comment_body': 'Not an ideal display format, IMO.\r\nLook for the `formatDate` utility in src/client/helpers/utils.js', 'comment_created': datetime.datetime(2020, 6, 3, 17, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434740760, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t\t<th className=""col-sm-2"">Name</th>\r\n```', 'comment_created': datetime.datetime(2020, 6, 3, 17, 36, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434742496, 'comment_body': ""OK, let me know when I should review, after you've looked into doing a single query.\r\n\r\n\r\nI think the addition of `entity_type` (or just `type`) could be useful indeed."", 'comment_created': datetime.datetime(2020, 6, 3, 17, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434742962, 'comment_body': '```suggestion\r\n\t\tnext(err);\r\n```\r\n\r\nThat way you should be able to remove the  `// eslint-disable-next-line consistent-return` above.', 'comment_created': datetime.datetime(2020, 6, 3, 17, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 434744017, 'comment_body': '```suggestion\r\n\t\tnext(err);\r\n```\r\nSame comment as above about eslint', 'comment_created': datetime.datetime(2020, 6, 3, 17, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 435416783, 'comment_body': '`// eslint-disable-next-line consistent-return` this needs to be added if it is done like that. :(\r\n', 'comment_created': datetime.datetime(2020, 6, 4, 17, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 437694269, 'comment_body': 'this is required because `entity_type` in the model `UserCollection` can only take valid values. Otherwise it throws this error. \r\n`invalid input value for enum bookbrainz.entity_type:` \r\n', 'comment_created': datetime.datetime(2020, 6, 9, 20, 20, 29, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 437950544, 'comment_body': 'I am wondering if in the `user_collection_collaborator` table , `user_collection_collaborator.editor_id` should be changed to `user_collection_collaborator.collaborator_id`', 'comment_created': datetime.datetime(2020, 6, 10, 8, 26, 58, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 439393426, 'comment_body': 'because in `user_collection` table, we have `owner_id`', 'comment_created': datetime.datetime(2020, 6, 12, 12, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 439421771, 'comment_body': 'Sure, it makes sense.\r\nIn other tables we also rename `editor_id` to something else that matches the table (like `revision.author_id` for example)', 'comment_created': datetime.datetime(2020, 6, 12, 13, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 440121147, 'comment_body': 'I think it would make sense to send a 400 error with a clear error message (something like ""type ${type} does not exist""), while also allowing the type to be null.\r\nYou can use `utils.getEntityModelByType` to avoid code duplication.\r\n\r\nSo to recap in pseudo code:\r\nif (type !== null) try {getEntityModelByType(type)} catch { send 400 error with helpful message}', 'comment_created': datetime.datetime(2020, 6, 15, 11, 52, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 440121476, 'comment_body': 'Same comment about sending a 400 error.', 'comment_created': datetime.datetime(2020, 6, 15, 11, 53, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 440124979, 'comment_body': ""Could this not be done using `withRelated: ['collaborators']` in the fetchPage options?"", 'comment_created': datetime.datetime(2020, 6, 15, 11, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 440126884, 'comment_body': 'I would like to see this menu item come *after* ""Revisions"" in the menu bar.\r\nI believe in the code the order is reversed (because of the pullRight attributes), so in code it would need to be *before* Revisions ', 'comment_created': datetime.datetime(2020, 6, 15, 12, 3, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 440128760, 'comment_body': 'What do you think about showing the last modified datetime here, using the formatDate utility?', 'comment_created': datetime.datetime(2020, 6, 15, 12, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 440130280, 'comment_body': 'This property could be named more explicitly, something like `showIfOwnerOrCollaborator`', 'comment_created': datetime.datetime(2020, 6, 15, 12, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 440132344, 'comment_body': 'Instead of checking all the keys (which you already do in the previous test), you should test that collection.entityType === ""author"" here, as that\'s what\'s important for this test.', 'comment_created': datetime.datetime(2020, 6, 15, 12, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 440137997, 'comment_body': 'I don\'t think this is necessary in any of the `getOrderedCollectionsForEditorPage` tests you currently have.\r\nThe expect(…).to.have.keys part would instead be in a specific separate test like you did for `getOrderedPublicCollections` (""should return collections with expected keys"").\r\n\r\nInstead, I\'d like you to ensure that the collections that `getOrderedCollectionsForEditorPage` returns are the ones you expect.\r\nYou can compare by the collection ids. If you map `orderedCollections` to get an array of ids, you can compare it with an array composed of the ids of the collections you\'re expecting to be returned.\r\nThat will make for much more robust tests, as currently you\'re only comparing the length of the array of returned values.', 'comment_created': datetime.datetime(2020, 6, 15, 12, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 440141031, 'comment_body': 'It might be clearer to have tableHeading = ""Public Collections"" in the props.', 'comment_created': datetime.datetime(2020, 6, 15, 12, 30, 36, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 440142081, 'comment_body': ""Why 'Editor' in here, rather than just `CollectionsTable` ?"", 'comment_created': datetime.datetime(2020, 6, 15, 12, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445491606, 'comment_body': 'You should probably have the same error mechanism as for the `/collections` route\r\n\r\n```\r\nif (!entityTypes.includes(type) && type !== null) {\r\n\tthrow new error.BadRequestError(`Type ${type} do not exist`);\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 6, 25, 11, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445495172, 'comment_body': 'Did you try with `withRelated`?', 'comment_created': datetime.datetime(2020, 6, 25, 11, 40, 13, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 445513221, 'comment_body': 'Hm yess I forgot about thiss', 'comment_created': datetime.datetime(2020, 6, 25, 12, 16, 26, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}]","[{'commit_sha': 'fa4b848f34e247faf77d2b673247d80d7cb22192', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84bc231d97f2fb7e8a0650c0ade749b9c02aa327', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f747dad0695f4f74e5dcf358affa88d2160c14', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1de645febb324f41fe0b6877c27f500a122debcd', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e59244c2eedf035d69ba22da077b4679edd6f4', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21146542b02b28b269678555a0015db209322525', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e300e18d92215953b3c4d00ec9700a7d7b4febf', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ac28f62fbfd25d9a168f16ee9959944c71b361d', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6516256556feaf539c87faa26e0f83dd41d097b3', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '562d91bdaac0c6e5cf0e94fa5d26fd512d924a22', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaeb1346bde627dfd39e29b4ccb8ef0ee81ee98e', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '670e52b12ff23180b299a8f4705b93447fd20c45', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f82c0c4f08b6f536a4c42cb8cf2a3ef5706abb82', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4e30f3a435e1ed5d4b202b177478bb92f7e2e4', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8630ac719b29826e5600118df66f339ada299863', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d440fe562f7912d9a7f198e9aa58929ba17cd74', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc394e06522d4d6973741357796b74cf630315f0', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc06c73fcfdc915eda48adb4451f3209b6b13548', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}]",,45737735,,User,,36,,5,17
440547941,Add entity to collection entity page,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing
1. Verify that your changes match our coding style
1. Fill out the requested information
-->

### Problem
Add Entity To Collection From Entity Page


### Solution
<!-- What does this PR do to fix the problem? -->
1. Changed all entityPage to React Class
2. Added `Add To Collection` Modal
3. Created POST `collection/:collectionId/add` route


",True,467,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/467,https://github.com/metabrainz/bookbrainz-site/pull/467,closed,526,72,13,17,9,56,0,0,[],2020-06-26 12:06:22+00:00,2020-07-02 18:36:26+00:00,541804.0,"6 days, 6:30:04","[{'comment_id': 446226005, 'comment_body': 'What about making the button disabled if `!this.props.user` instead ?\r\nThat way you are sure that if the button was pressed it should show the modal.\r\n\r\nThat also means you can render the `AddToCollectionModal` component only if `Boolean(this.props.user)`.', 'comment_created': datetime.datetime(2020, 6, 26, 14, 41, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 446230468, 'comment_body': ""If it's all we need, maybe we should pass only the `user.id` as `userId` ?"", 'comment_created': datetime.datetime(2020, 6, 26, 14, 48, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447116840, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t\t\t\tSelect an existing collection\r\n```', 'comment_created': datetime.datetime(2020, 6, 29, 16, 56, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447117093, 'comment_body': 'I would put these buttons in the footer along with the other buttons.', 'comment_created': datetime.datetime(2020, 6, 29, 16, 57, 10, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447117244, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=""plus""/> Add to new collection\r\n```', 'comment_created': datetime.datetime(2020, 6, 29, 16, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447118393, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=""plus""/> Add to selected collection{this.state.selectedCollections.length > 1 ? \'s\' : null}\r\n```', 'comment_created': datetime.datetime(2020, 6, 29, 16, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447121861, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t<Button bsStyle=""success"" onClick={this.handleAddToCollection}>\r\n```\r\n\r\nThis identifies it clearly as ""the button that validates my action""', 'comment_created': datetime.datetime(2020, 6, 29, 17, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447146510, 'comment_body': 'This doesn\'t work (in my browser at least) for me:\r\n<img width=""213"" alt=""Capture d’écran 2020-06-29 à 19 46 40"" src=""https://user-images.githubusercontent.com/6179856/86038515-59c5d780-ba41-11ea-805f-24bb59cbbe5f.png"">\r\n\r\nI had the best result with `vertical-align: text-top;`. How does that look for you?', 'comment_created': datetime.datetime(2020, 6, 29, 17, 48, 40, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447148084, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t<FontAwesomeIcon icon=""times""/> Cancel\r\n```\r\n\r\n\r\nThe button should also be all the way to the left to match other modals.', 'comment_created': datetime.datetime(2020, 6, 29, 17, 51, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447169560, 'comment_body': '```suggestion\r\n\t\t\t\t\tOops, looks like you do not yet have any collection of {_.upperFirst(_.camelCase(this.props.entityType))}s . <br/>\r\n```\r\n\r\nYou\'ll need the lodash string utilities here for ""EditionGroup""', 'comment_created': datetime.datetime(2020, 6, 29, 18, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447171697, 'comment_body': 'This doesn\'t seem to make sense considering we\'re offering the possibility to create a new collection on the fly.\r\n\r\nMaybe you can have something like ""Click on the button below to create a new collection"", or even automatically show the new collection form?', 'comment_created': datetime.datetime(2020, 6, 29, 18, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447174166, 'comment_body': 'Maybe something more user friendly here?', 'comment_created': datetime.datetime(2020, 6, 29, 18, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447177151, 'comment_body': 'I was able to create a collection whose name is just a single space.\r\nMaybe you need something like `_.trim(this.name.getValue()).length`?\r\n\r\nI think the collection creation server route should also throw an error under the same condition (trimmed name string length == 0)', 'comment_created': datetime.datetime(2020, 6, 29, 18, 42, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447177999, 'comment_body': ""```suggestion\r\n\t\t\t\t\ttext: `Successfully added to selected collection{selectedCollections.length > 1 ? 's' : null}`,\r\n```"", 'comment_created': datetime.datetime(2020, 6, 29, 18, 44, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447179146, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t<Button bsStyle=""success"" onClick={this.handleAddToNewCollection}>\r\n```', 'comment_created': datetime.datetime(2020, 6, 29, 18, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447179819, 'comment_body': ""We should log the error here (for when we do debugging) with `log.debug(err);`.\r\nYou'll need to `import log from 'log';`"", 'comment_created': datetime.datetime(2020, 6, 29, 18, 47, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447180253, 'comment_body': '```suggestion\r\n\tonCloseCallback: PropTypes.func.isRequired,\r\n```', 'comment_created': datetime.datetime(2020, 6, 29, 18, 48, 6, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447182565, 'comment_body': 'To match the existing modals, this should not be an `<h2>` nor `<strong>`.\r\nSee for example:\r\nhttps://github.com/bookbrainz/bookbrainz-site/blob/fe5f2266a973f62a6355a6b3d65a9b848ed212b5/src/client/entity-editor/identifier-editor/identifier-editor.js#L67-L72', 'comment_created': datetime.datetime(2020, 6, 29, 18, 52, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447184610, 'comment_body': ""It's a shame that we can't create a new collection with an initial list of bbids.\r\nMaybe something to refactor if there's time at the end of the project?"", 'comment_created': datetime.datetime(2020, 6, 29, 18, 55, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447185984, 'comment_body': '```suggestion\r\n\t\t\tnewSelected = [...oldSelected, collectionId];\r\n```', 'comment_created': datetime.datetime(2020, 6, 29, 18, 58, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447187346, 'comment_body': ""```suggestion\r\n\t\t\tthis.setState({error: 'You need to be logged in'});\r\n```"", 'comment_created': datetime.datetime(2020, 6, 29, 19, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447189106, 'comment_body': 'That does not look good. Why is this needed?', 'comment_created': datetime.datetime(2020, 6, 29, 19, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447194779, 'comment_body': ""Not 100% sure what's going on here.\r\nWhy do you need to store `show` on the state, instead of using `this.props.show` directly?\r\n\r\nAs for setting collectionsAvailable, I think it would be better to do it in `componentDidMount` instead. I don't really think we need to re-fetch if a user closes and reopens the modal."", 'comment_created': datetime.datetime(2020, 6, 29, 19, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447195930, 'comment_body': 'Why the `size` here? Is it because we have a small default size?\r\nIf so, we might want to think about implementing `size=0` to fetch all the collections?\r\n\r\nYour comment made me think about what would happen if there are a lot of collections.\r\nMaybe at the end of the project we can think about using a virtualized scroll.', 'comment_created': datetime.datetime(2020, 6, 29, 19, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447198105, 'comment_body': 'To me it would make more sense to just call `onCloseCallback` and letting the parent component set this.props.show and using that directly.', 'comment_created': datetime.datetime(2020, 6, 29, 19, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447503010, 'comment_body': ""Yeah we can use `componentDidMount`. I was using `componentDidUpdate` because earlier I didn't have the feature of creating the collection in the modal. and had to open a new tab to create a new collection. In that case `componentDidUpdate` was required.\r\nBut now that we can create collection in the modal itself we don't need to fetch collections everytime. One time is enough"", 'comment_created': datetime.datetime(2020, 6, 30, 8, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 447535908, 'comment_body': '\r\nThis is how it is looking for `vertical-align: text-top;`\r\n\r\n![Screenshot_2020-06-30 W Pustyni i w Puszczy (Work) – BookBrainz](https://user-images.githubusercontent.com/45737735/86107926-21c1a180-bae0-11ea-9119-2523c561a52a.png)\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 30, 9, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 447542710, 'comment_body': 'left or right?', 'comment_created': datetime.datetime(2020, 6, 30, 9, 25, 19, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 447543414, 'comment_body': ""Umm we don't really need to do this, `entityType` is already `EditionGroup`"", 'comment_created': datetime.datetime(2020, 6, 30, 9, 26, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 447543762, 'comment_body': ""Hmmm I'll make this change in `userCollectionForm` as well"", 'comment_created': datetime.datetime(2020, 6, 30, 9, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 447545959, 'comment_body': ""Umm I don't really think we need to log this. Because user can accidentally add same entity multiple times and it's not really a bug. \r\nIt would've been nice if bookshelf had `upsert` option.\r\nThe other thing we can do is first check if exists, if not then add it. But that would require 2 calls. And since this is gonna be used alot, I don't think we want this."", 'comment_created': datetime.datetime(2020, 6, 30, 9, 30, 23, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 447546205, 'comment_body': 'Yeah we can refactor it later..', 'comment_created': datetime.datetime(2020, 6, 30, 9, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 447548949, 'comment_body': 'Yes it has default 20 size and also that endpoint uses `fetchPage` and we need to pass a size in it, otherwise it takes up default `10` size.\r\n\r\nThe modal is scrollable, so if there are alot of collectoins, the modal will become very long...', 'comment_created': datetime.datetime(2020, 6, 30, 9, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 447549380, 'comment_body': 'Yeah this is not needed. I forgot to remove it', 'comment_created': datetime.datetime(2020, 6, 30, 9, 35, 59, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 447666483, 'comment_body': ""OK, let's cross that bridge when we come to it, then.\r\nThere is a virtualized scrolling library already installed that will help us with that (we use it for the long list of languages to select from)"", 'comment_created': datetime.datetime(2020, 6, 30, 13, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447685085, 'comment_body': 'Yes, upsert would be useful here, definitely.\r\nLet\'s not do the double call, as therse are no dire consequences if adding an entity twice.\r\nThe logging I meant more in case there is another type of error.\r\n\r\nThis can be achieved by checking the type of error, displaying an ""entity already added"" message if it\'s a [NoRowsUpdatedError](https://bookshelfjs.org/api.html#Model-static-NoRowsUpdatedError) and logging the error otherwise.', 'comment_created': datetime.datetime(2020, 6, 30, 13, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447686713, 'comment_body': ""Let's remove this and solve the issue instead :)\r\n\r\nYou can see the naming conventions here: https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-handler-names.md\r\n\r\nI suppose you would have to rename the function `onCloseModal` to `handleCloseModal`, which would be consistent with the existing `handleShowModal`"", 'comment_created': datetime.datetime(2020, 6, 30, 13, 35, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447690000, 'comment_body': 'It would be a nice touch to add an `onDismiss={this.handleAlertDismiss}` property, and `handleAlertDismiss` be a simple `this.setState({error: null})`', 'comment_created': datetime.datetime(2020, 6, 30, 13, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447690935, 'comment_body': ""Let's use the icon for Collections here."", 'comment_created': datetime.datetime(2020, 6, 30, 13, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447691216, 'comment_body': 'Maybe `Add to collection`?\r\nWhat do you think?', 'comment_created': datetime.datetime(2020, 6, 30, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447697349, 'comment_body': 'Left a little easter egg :)', 'comment_created': datetime.datetime(2020, 6, 30, 13, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447715136, 'comment_body': 'This looks nice currently, but a user is allowed to continue clicking on ""add to new collection"" and it will create as many duplicate collections.\r\nWe can avoid that easily by either:\r\n1. closing the modal (and maybe showing a success alert in the entity footer (but what about adding from the search page?) or \r\n2. disabling the button after successful creation. I think that is more elegant and self-contained.', 'comment_created': datetime.datetime(2020, 6, 30, 14, 12, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447715726, 'comment_body': ""```suggestion\r\n\t\t\t\t\t\ttext: 'Something went wrong! Please try again later',\r\n```"", 'comment_created': datetime.datetime(2020, 6, 30, 14, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447718500, 'comment_body': 'I liked the ""Incomplete form""  message you had previously.\r\nHow about ""The form is incomplete. Please fill in a name and privacy option before continuing.""', 'comment_created': datetime.datetime(2020, 6, 30, 14, 16, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447723773, 'comment_body': 'After some thought and using the modal, I feel like ""Close"" would be better than ""Cancel"" since if I added to a or created a collection, the button will not revert that action.\r\n```suggestion\r\n\t\t\t\t\t\t<FontAwesomeIcon icon=""times""/> Close\r\n```\r\n\r\n\r\nIf I close the modal, the collection selection is not cleared (which is good IMO) but the new collection form is cleared. It\'s because when we toggle the collection rows it\'s stored in the state, while the name/description/privacy isn\'t.\r\nI don\'t think that\'s an issue in this case, but something to keep in mind I guess.', 'comment_created': datetime.datetime(2020, 6, 30, 14, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447735226, 'comment_body': 'It might be a good idea to wrap this in a try/catch block for safety, and display a generic user-friendly error message if there is a failure, something like ""Sorry, we could not fetch your collections ({error})""', 'comment_created': datetime.datetime(2020, 6, 30, 14, 38, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447735541, 'comment_body': '```suggestion\r\n\t\treturn req.body;\r\n```', 'comment_created': datetime.datetime(2020, 6, 30, 14, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447738491, 'comment_body': ""```suggestion\r\n\t\t\t\t\ttext: 'No collection selected',\r\n```"", 'comment_created': datetime.datetime(2020, 6, 30, 14, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447742837, 'comment_body': ""```suggestion\r\nAddToCollectionModal.displayName = 'AddToCollectionModal';\r\n```"", 'comment_created': datetime.datetime(2020, 6, 30, 14, 47, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447800845, 'comment_body': 'Right, it should be `Edition Groups` instead with a space', 'comment_created': datetime.datetime(2020, 6, 30, 16, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 447803030, 'comment_body': 'Hm, I think we may have inconsistent placement and color across the website. I was looking at the relationship editor where the close button is on the left.', 'comment_created': datetime.datetime(2020, 6, 30, 16, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 448528385, 'comment_body': '```suggestion\r\n\t\t\t\t\t<Col md={10} mdOffset={1}>\r\n```', 'comment_created': datetime.datetime(2020, 7, 1, 17, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 448530238, 'comment_body': ""I'd suggest making this `disabled` if `!this.state.collectionsAvailable.length`"", 'comment_created': datetime.datetime(2020, 7, 1, 18, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 448531010, 'comment_body': ""```suggestion\r\n\t\t\t\t\t\t{this.state. showCollectionForm ? 'Create' : 'Select'} Collection\r\n```"", 'comment_created': datetime.datetime(2020, 7, 1, 18, 3, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 448553387, 'comment_body': 'We probably want to wrap this in a try/catch block and display a generic error message if something goes south', 'comment_created': datetime.datetime(2020, 7, 1, 18, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 448554030, 'comment_body': 'I wish there was a better way to check if it\'s an ""entry already exists"" error, but nothing I tried is better than this. So be it.\r\nA comment would be useful above this line to explain why we\'re doing this, as it\'s not clear unless you\'re very familiar with the db errors (which I\'ll admit I\'m not).\r\n\r\nHowever in this block you would `throw err` instead of logging it so that it can be dealt with by the parent catch block. Otherwise you\'re in a situation where the addition failed but you\'re sending a success response.', 'comment_created': datetime.datetime(2020, 7, 1, 18, 49, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '75b52418adb92dbd8ec1708e29141930f8506757', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c7d95431b07b461cd895e77b3270ced111d610b', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3cc4caa6e965aeb86a23ef1b25b9c512bd856ba', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e135fd10d0418c7a08e20334c7deb6b91cf8b21', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c862301d1161e735cf1f765f7a03c8395487b77a', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26b390f772a1d779fd683d9de2b9fcb5e7b1689b', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c9b5ff565afb6824d7287fd5136fd69397040d', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfe4b90d8971d8c64783e14675000ba9a72982f8', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '770a645b2118b41e5260bbf7c3d5db5851dd9ba4', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6c447bfd5c3acab9790060fef4fb73670d4241f', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '430531f21d871837c363d384dd3e2f2509768888', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48810c257106331a4279cfcf70bbcd30f69676b2', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b8c033b6c7bf3c0699825273cd17723e8ee6be5', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dbd38537b02fbaa1ad08e23fcb62f8956afd77f', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc3fdb51507fac8c8039642a226944fa1774d522', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '558879e2935dd3354a231f78b6b0e0f3fc12d897', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b83c46e791a6fccdf496ccdcd32ad33141b932e', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}]",,45737735,,User,,36,,5,17
425855541,UserCollection: Add to collections from search results,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing
1. Verify that your changes match our coding style
1. Fill out the requested information
-->

### Problem
UserCollection: Add to collections from search results
<!-- What are you trying to solve? -->


### Solution
1. Changed the `result-table` to react class
2. Added checkboxes feature
",True,435,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/435,https://github.com/metabrainz/bookbrainz-site/pull/435,closed,256,87,5,5,3,10,0,0,[],2020-06-01 09:22:03+00:00,2020-07-31 08:47:57+00:00,5181954.0,"59 days, 23:25:54","[{'comment_id': 461436694, 'comment_body': ""Let's do a single call to setState here"", 'comment_created': datetime.datetime(2020, 7, 28, 9, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 461467669, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t\tbsStyle=""primary""\r\n```', 'comment_created': datetime.datetime(2020, 7, 28, 10, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 461467832, 'comment_body': 'Any particular reason for having a small button?', 'comment_created': datetime.datetime(2020, 7, 28, 10, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 461475455, 'comment_body': 'This whole block should be after the closing `</Table>` tag.\r\n\r\nYou\'ll be able to get rid of the whole `className=""pull-left margin-top-d5""` on the button too.\r\n\r\n\r\nI tried with an `<hr className=\'thin\'/>` in-between the table and the button, too. I\'ll let you decide which one looks best in your opinion:\r\n\r\n![FireShot Capture 101 - Search Results – BookBrainz - localhost](https://user-images.githubusercontent.com/6179856/88653020-d1803400-d0cb-11ea-8d57-b16862eeee64.png)\r\n![FireShot Capture 102 - Search Results – BookBrainz - localhost](https://user-images.githubusercontent.com/6179856/88653034-d47b2480-d0cb-11ea-9bf7-1dbc3f0723c7.png)\r\n', 'comment_created': datetime.datetime(2020, 7, 28, 10, 19, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 461475947, 'comment_body': ""This could probably benefit from a `className='margin-top-1'` to have some space between the button and the alert."", 'comment_created': datetime.datetime(2020, 7, 28, 10, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 461482916, 'comment_body': ""`collections` could potentially be `undefined` here (admittedly in rare cases where a call to `getCollections` fails).\r\n\r\nIf so, further down a check on `this.state.collectionsAvailable.length` will throw an error `Cannot read property 'length' of undefined`.\r\n\r\nSo we either have to ensure `collectionsAvailable` is never set to `undefined`, or check if it is `undefined` wherever we use it.\r\nI suggest this simple method :\r\n```suggestion\r\n\t\t\tthis.setState({collectionsAvailable: collections || []});\r\n```\r\n\r\nAnd the same should apply for `componentDidMount`."", 'comment_created': datetime.datetime(2020, 7, 28, 10, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 461492825, 'comment_body': 'Also I think it would be consistent to add the collections icon in this button', 'comment_created': datetime.datetime(2020, 7, 28, 10, 54, 24, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 462918522, 'comment_body': ""Let's use this utility here: `{genEntityIconHTMLElement('Collection')}`"", 'comment_created': datetime.datetime(2020, 7, 30, 11, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 462923598, 'comment_body': 'A couple of suggestions for this button:\r\n- using the `<Badge>` element for Bootstrap for the number\r\n- making the button disabled instead of removing it if there is no selection (i\'m of the opinion we should do the same for the ""add to collection"" button)\r\n- changing the color (to keep red for more important destructive actions)\r\n\r\n```suggestion\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tbsStyle=""warning""\r\n\t\t\t\t\t\t\t\tdisabled={!this.state.selected.length}\r\n\t\t\t\t\t\t\t\ttype=""button""\r\n\t\t\t\t\t\t\t\tonClick={this.handleClearSelected}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tClear <Badge>{this.state.selected.length}</Badge> selected\r\n\t\t\t\t\t\t\t</Button>\r\n```', 'comment_created': datetime.datetime(2020, 7, 30, 11, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 462923827, 'comment_body': ""Using Bootstrap's `<Badge>` element, this should be unused."", 'comment_created': datetime.datetime(2020, 7, 30, 11, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': 'aed07dd14ba7abfbce1dc08a46d5ea2239d7e701', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '036d7e4e8738d231d7d153c560ed3e0b25558c5e', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8795d9e10e91794bc27b22b606bf04103ae33d13', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a5cccf8ceb5c00c6bcb7f530397f4a84e2994bf', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2be59376efd9fff80b52d8e61671dca60d608afb', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}]",,45737735,,User,,36,,5,17
465293216,Feat: Adding Entity from Collection Page,"<!--
Before making a pull request, please:
1. Read the guidelines for contributing
1. Verify that your changes match our coding style
1. Fill out the requested information
-->

### Problem
<!-- What are you trying to solve? -->
Adding Entity from Collection Page

![Screenshot_2020-08-10 BookBrainz – The Open Book Database(2)](https://user-images.githubusercontent.com/45737735/89755348-c0d4b280-dafc-11ea-9211-302e654885b0.png)
",True,487,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/487,https://github.com/metabrainz/bookbrainz-site/pull/487,closed,313,27,3,7,5,11,0,0,[],2020-08-10 06:02:09+00:00,2020-08-13 12:38:15+00:00,282966.0,"3 days, 6:36:06","[{'comment_id': 468491296, 'comment_body': ""I'd say the plus ('+') icon here would make more sense"", 'comment_created': datetime.datetime(2020, 8, 11, 10, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468493869, 'comment_body': ""```suggestion\r\n\t\t\t<Row>\r\n```\r\n\r\nThis will solve both your horizontal line and alert box overlap issues !\r\nDon't forget the closing tag too."", 'comment_created': datetime.datetime(2020, 8, 11, 10, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468498642, 'comment_body': 'The trailing semicolon \';\' at the end appears as text in the page, right after the alert:\r\n\r\n<img width=""1170"" alt=""Capture d’écran 2020-08-11 à 13 00 17"" src=""https://user-images.githubusercontent.com/6179856/89889852-a967f900-dbd2-11ea-8223-e6710339163a.png"">\r\n', 'comment_created': datetime.datetime(2020, 8, 11, 11, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468500333, 'comment_body': 'This looks like leftover from a copy paste', 'comment_created': datetime.datetime(2020, 8, 11, 11, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468500790, 'comment_body': '```suggestion\r\n\t\t\t\t\t\t\t&nbsp;Add another {lowerCase(this.props.collectionType)}\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 11, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468501185, 'comment_body': ""```suggestion\r\n\t\t\t\t\t\t\t{lowerCase(this.props.collectionType)}{cleanedEntities.length > 1 ? 's' : ''} to the collection\r\n```"", 'comment_created': datetime.datetime(2020, 8, 11, 11, 9, 13, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468501450, 'comment_body': '```suggestion\r\n\t\t\t\t\t\tAdd {lowerCase(this.props.collectionType)}s to the collection\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 11, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468505573, 'comment_body': ""This threw me off at first.\r\nDid you change this so that it's clearer that an element was added to the collection, since it will appear at the top?\r\n\r\nI'm not sure how we should display this, but ascending order made more sense to me.\r\nEventually, we'll want to give the user the freedom to sort however they want with some fancy table library, but for now…"", 'comment_created': datetime.datetime(2020, 8, 11, 11, 18, 50, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 469340164, 'comment_body': ""While it looks to me like this pattern would work, I don't think it's the most straightforward solution, and might generate extra rendering in the process.\r\n\r\nTo be honest there's no ideal way to communicate punctual events from parent to child, but what I usually end up doing is creating a reference to the child component and calling `myChildRef.doSomething()` from the parent component.\r\nThat way, the logic of deciding what should happen and when stays with the parent where it belongs, while the details of what's supposed to happen stay with the child.\r\n\r\nHere's an example where we use that pattern:\r\nhttps://github.com/bookbrainz/bookbrainz-site/blob/7ef08d9d5ca84f7e8befa6230117c5232d606c70/src/client/components/input/entity-search.js#L80\r\nhttps://github.com/bookbrainz/bookbrainz-site/blob/7ef08d9d5ca84f7e8befa6230117c5232d606c70/src/client/components/input/entity-search.js#L38"", 'comment_created': datetime.datetime(2020, 8, 12, 15, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 469344448, 'comment_body': 'In this case, in the parent (CollectionPage) it would look something like this:\r\n```\r\ncloseAddEntityModalShowMessageAndRefreshTable(message) {\r\n\t\tthis.setState({\r\n\t\t\tmessage,\r\n\t\t\tshowAddEntityModal: false\r\n\t\t}, this.pagerElementRef.triggerSearch\r\n\t}\r\n```', 'comment_created': datetime.datetime(2020, 8, 12, 15, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 469871283, 'comment_body': 'SomehowBecause this is on a new line, it ends up with a space between entity type and \'s\':\r\n\r\n<img width=""233"" alt=""Capture d’écran 2020-08-13 à 13 00 13"" src=""https://user-images.githubusercontent.com/6179856/90127253-2e831780-dd65-11ea-8e88-0ff97dcb0005.png"">\r\n\r\nThis is the only place it does that though, the other messages are fine.', 'comment_created': datetime.datetime(2020, 8, 13, 11, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': '1d9045ce063cf51d43e8b19bbe62958f0cf7cd99', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47156fe1d2db7e1c065b7133054f20b7fbf50654', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13ebfa7c57cde6a7e5413c589998735e6e52b20d', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc5fc254ab372a78677b4398e50d04be414a9deb', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e5291cfa343f62a0dd2c5223a2aa14b92d9ceae', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '802c52472b790afbd1432eaaf4081ab0465de96e', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0816c48402e69a4a2e260be425ed47b97d2096', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}]",,45737735,,User,,36,,5,17
465545806,Feature: Remove Collaboration,"
<!--
Before making a pull request, please:
1. Read the guidelines for contributing
1. Verify that your changes match our coding style
1. Fill out the requested information
-->

### Problem
Collaborators should have an option to remove collaboration from a collection

### Solution
![Screenshot_2020-08-10 BookBrainz – The Open Book Database(4)](https://user-images.githubusercontent.com/45737735/89795289-d6ba9580-db45-11ea-8cb3-f74a84d0092f.png)
<!-- What does this PR do to fix the problem? -->
",True,488,https://api.github.com/repos/metabrainz/bookbrainz-site/pulls/488,https://github.com/metabrainz/bookbrainz-site/pull/488,closed,419,99,7,10,3,19,0,0,[],2020-08-10 14:43:50+00:00,2020-08-28 13:58:02+00:00,1552452.0,"17 days, 23:14:12","[{'comment_id': 468524569, 'comment_body': 'I\'ve been thinking about the wording for this.\r\nI think the long title (""Remove yourself as a collaborator"") works well.\r\n\r\nWhat do you think of these alternatives for the button text?\r\n- Leave collection\r\n- Stop collaborating\r\n- Stop collaboration\r\n- Remove from collaborators\r\n- Remove me', 'comment_created': datetime.datetime(2020, 8, 11, 11, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468525607, 'comment_body': 'In the other modal PR you have (#487), you put the alert in the footer rather than the body.', 'comment_created': datetime.datetime(2020, 8, 11, 11, 58, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468526139, 'comment_body': '```suggestion\r\n\t\t\t\t\t\tAre you sure you want to proceed ? You won’t be able to undo this.\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 11, 59, 34, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468526767, 'comment_body': 'The button text here should match the one in the collection page, once that has been decided.', 'comment_created': datetime.datetime(2020, 8, 11, 12, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 468527596, 'comment_body': ""```suggestion\r\n\t\t\t\t'You do not have permission to edit this collection\\'s collaborators', req\r\n```"", 'comment_created': datetime.datetime(2020, 8, 11, 12, 2, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 470061596, 'comment_body': 'I think you committed this by accident…', 'comment_created': datetime.datetime(2020, 8, 13, 16, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 470061795, 'comment_body': '```suggestion\r\n\t\t\t\t\t\tAre you sure you want to proceed ? You won’t be able to undo this.\r\n```', 'comment_created': datetime.datetime(2020, 8, 13, 16, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 470063322, 'comment_body': ""This hasn't been corrected."", 'comment_created': datetime.datetime(2020, 8, 13, 16, 7, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 470066759, 'comment_body': ""If I read this correctly, I won't be able to call this endpoint if I'm the owner of the collection, which would be unexpected."", 'comment_created': datetime.datetime(2020, 8, 13, 16, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 470068419, 'comment_body': ""Why `-1`? You risk calling the endpoint with `collaborator/remove/-1`, and I don't know what would happen then.\r\nMaybe null instead would be clearer, and easier to test against?\r\n\r\nAs a matter of fact, since the collaboratorId propType above is not defined as `isRequired`, why have a default at all?"", 'comment_created': datetime.datetime(2020, 8, 13, 16, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 470070370, 'comment_body': 'This should probably be `isDelete` to be clearer.', 'comment_created': datetime.datetime(2020, 8, 13, 16, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 470073928, 'comment_body': ""I'm not sure this should be required. What if I'm not logged in? I should still be able to see public collections.\r\n\r\nIn src/server/routes/collection.js, you have `const userId = parseInt(req.user?.id, 10);` which will return `NaN` if user is undefined. Perhaps it should be added to the props conditionally ?"", 'comment_created': datetime.datetime(2020, 8, 13, 16, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 475188194, 'comment_body': 'I changed the other PR and put error in the body. https://github.com/bookbrainz/bookbrainz-site/blob/c6cc0f6187b93199641f0292a8415889320f1044/src/client/components/pages/parts/add-entity-to-collection-modal.js#L187-L190', 'comment_created': datetime.datetime(2020, 8, 23, 8, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'prabalsingh24', 'type': 'User'}, {'comment_id': 478393671, 'comment_body': ""```suggestion\r\n\t\t\tcollaboratorIds: [loggedInUser.get('id'), collaborator2.get('id')]\r\n```\r\n\r\nThis change makes sure that even if the user is amongst the collaborators they won't be able to remove anyone else, an edge case that you planned for in your code.\r\nIf you want to be extra sure you could test both scenarios separately."", 'comment_created': datetime.datetime(2020, 8, 27, 12, 50, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 478404275, 'comment_body': 'Why `node` instead of `number` here?', 'comment_created': datetime.datetime(2020, 8, 27, 13, 6, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 478404542, 'comment_body': 'Same as above, why `node` instead of `number`?', 'comment_created': datetime.datetime(2020, 8, 27, 13, 7, 5, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 478406282, 'comment_body': ""```suggestion\r\n\t\t\t\t\t\tAre you sure you want to proceed ? You won’t be able to undo this yourself and will need to ask the collection's owner to add you again.\r\n```\r\nNothing big, but a suggestion"", 'comment_created': datetime.datetime(2020, 8, 27, 13, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 478407591, 'comment_body': '```suggestion\r\n\t\t\t\t<Alert bsStyle=""danger"">\r\n```\r\n\r\nLet\'s go even bolder for an irreversible action.', 'comment_created': datetime.datetime(2020, 8, 27, 13, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 478408739, 'comment_body': ""I wonder if this is necessary… Considering you would need to be the collection's owner to delete it, props.userId should be the same as props.collection.ownerId."", 'comment_created': datetime.datetime(2020, 8, 27, 13, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': 'd3e2a60179a6d2438c789aab2610bb42289d7aeb', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c364f45729fc15d6b47b2a11f153cd25de57692', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd35a9daf7dba796d0a80b83fd80ce020a7e0211a', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03a85fb75181bebcba786f393acc222b0953ed82', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4667fabca06ab7f3502eab02ffe4dab756d52a6', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2d4361f1e40740086394619a15f61b995e92f8f', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a911c1adab0a9eea3b41ffb7b62394a69c0450f', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae7911deafc0e9e9c0b7a109eefc66d14ff9fc04', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85b6da524878d09db966f229cdde2261f043f598', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6b232a38d0f7adf1f04f17aa9cc171aacbdf501', 'committer_username': 'prabalsingh24', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 12, 9, 16, 37, 9, tzinfo=datetime.timezone.utc)}]",,45737735,,User,,36,,5,17

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
28521896,bookbrainz-site,metabrainz/bookbrainz-site,JavaScript,278,186,15,94,6138,22,21,22,"[{'id': 723617338, 'number': 696, 'closed': None, 'created': datetime.datetime(2021, 8, 31, 18, 10, 22, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1589, 'deletions': 1109, 'state': 'open'}, {'id': 482185835, 'number': 512, 'closed': datetime.datetime(2020, 9, 9, 16, 11, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 17, 16, 27, tzinfo=datetime.timezone.utc), 'time_taken': 82482.0, 'time_delta': '22:54:42', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 482150140, 'number': 511, 'closed': datetime.datetime(2020, 9, 10, 9, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 16, 7, 45, tzinfo=datetime.timezone.utc), 'time_taken': 150135.0, 'time_delta': '1 day, 17:42:15', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 482139108, 'number': 510, 'closed': datetime.datetime(2020, 9, 10, 9, 50, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 15, 48, 33, tzinfo=datetime.timezone.utc), 'time_taken': 151345.0, 'time_delta': '1 day, 18:02:25', 'additions': 42, 'deletions': 1, 'state': 'closed'}, {'id': 481963184, 'number': 509, 'closed': datetime.datetime(2020, 9, 8, 11, 11, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 11, 3, 39, tzinfo=datetime.timezone.utc), 'time_taken': 446.0, 'time_delta': '0:07:26', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 476980892, 'number': 506, 'closed': datetime.datetime(2020, 9, 1, 11, 20, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 1, 10, 26, 14, tzinfo=datetime.timezone.utc), 'time_taken': 3230.0, 'time_delta': '0:53:50', 'additions': 9116, 'deletions': 2646, 'state': 'closed'}, {'id': 476952439, 'number': 505, 'closed': datetime.datetime(2020, 9, 7, 16, 24, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 1, 9, 36, 16, tzinfo=datetime.timezone.utc), 'time_taken': 542878.0, 'time_delta': '6 days, 6:47:58', 'additions': 5601, 'deletions': 252, 'state': 'closed'}, {'id': 475345083, 'number': 498, 'closed': datetime.datetime(2020, 8, 28, 11, 16, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 28, 11, 16, 8, tzinfo=datetime.timezone.utc), 'time_taken': 41.0, 'time_delta': '0:00:41', 'additions': 14303, 'deletions': 2890, 'state': 'closed'}, {'id': 473664685, 'number': 495, 'closed': datetime.datetime(2020, 8, 28, 14, 0, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 5, 52, 53, tzinfo=datetime.timezone.utc), 'time_taken': 202076.0, 'time_delta': '2 days, 8:07:56', 'additions': 92, 'deletions': 23, 'state': 'closed'}, {'id': 467265688, 'number': 490, 'closed': datetime.datetime(2020, 8, 13, 11, 44, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 9, 29, 46, tzinfo=datetime.timezone.utc), 'time_taken': 8071.0, 'time_delta': '2:14:31', 'additions': 57, 'deletions': 12, 'state': 'closed'}, {'id': 465994298, 'number': 489, 'closed': datetime.datetime(2020, 8, 11, 11, 22, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 9, 46, 57, tzinfo=datetime.timezone.utc), 'time_taken': 5734.0, 'time_delta': '1:35:34', 'additions': 12, 'deletions': 1, 'state': 'closed'}, {'id': 465545806, 'number': 488, 'closed': datetime.datetime(2020, 8, 28, 13, 58, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 14, 43, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1552452.0, 'time_delta': '17 days, 23:14:12', 'additions': 419, 'deletions': 99, 'state': 'closed'}, {'id': 465293216, 'number': 487, 'closed': datetime.datetime(2020, 8, 13, 12, 38, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 6, 2, 9, tzinfo=datetime.timezone.utc), 'time_taken': 282966.0, 'time_delta': '3 days, 6:36:06', 'additions': 313, 'deletions': 27, 'state': 'closed'}, {'id': 463266539, 'number': 484, 'closed': datetime.datetime(2020, 8, 6, 9, 50, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 9, 35, 16, tzinfo=datetime.timezone.utc), 'time_taken': 87313.0, 'time_delta': '1 day, 0:15:13', 'additions': 162, 'deletions': 0, 'state': 'closed'}, {'id': 463200461, 'number': 483, 'closed': datetime.datetime(2020, 8, 13, 11, 59, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 7, 28, 15, tzinfo=datetime.timezone.utc), 'time_taken': 707470.0, 'time_delta': '8 days, 4:31:10', 'additions': 607, 'deletions': 7, 'state': 'closed'}, {'id': 457196916, 'number': 477, 'closed': datetime.datetime(2020, 8, 13, 12, 54, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 14, 21, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1463569.0, 'time_delta': '16 days, 22:32:49', 'additions': 442, 'deletions': 7, 'state': 'closed'}, {'id': 448128609, 'number': 472, 'closed': datetime.datetime(2020, 7, 13, 10, 47, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 9, 25, 49, tzinfo=datetime.timezone.utc), 'time_taken': 4922.0, 'time_delta': '1:22:02', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 446286731, 'number': 469, 'closed': datetime.datetime(2020, 7, 9, 18, 7, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 8, 14, 36, 39, tzinfo=datetime.timezone.utc), 'time_taken': 99027.0, 'time_delta': '1 day, 3:30:27', 'additions': 13, 'deletions': 14, 'state': 'closed'}, {'id': 441192111, 'number': 468, 'closed': datetime.datetime(2020, 7, 8, 13, 38, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 29, 4, 45, 35, tzinfo=datetime.timezone.utc), 'time_taken': 809590.0, 'time_delta': '9 days, 8:53:10', 'additions': 1056, 'deletions': 78, 'state': 'closed'}, {'id': 440547941, 'number': 467, 'closed': datetime.datetime(2020, 7, 2, 18, 36, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 26, 12, 6, 22, tzinfo=datetime.timezone.utc), 'time_taken': 541804.0, 'time_delta': '6 days, 6:30:04', 'additions': 526, 'deletions': 72, 'state': 'closed'}, {'id': 439770388, 'number': 466, 'closed': datetime.datetime(2020, 6, 25, 12, 33, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 7, 41, 22, tzinfo=datetime.timezone.utc), 'time_taken': 17537.0, 'time_delta': '4:52:17', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 437680027, 'number': 464, 'closed': datetime.datetime(2020, 7, 2, 16, 36, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 4, 53, 51, tzinfo=datetime.timezone.utc), 'time_taken': 906151.0, 'time_delta': '10 days, 11:42:31', 'additions': 142, 'deletions': 18, 'state': 'closed'}, {'id': 433990750, 'number': 451, 'closed': datetime.datetime(2020, 6, 13, 11, 1, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 10, 47, 22, tzinfo=datetime.timezone.utc), 'time_taken': 853.0, 'time_delta': '0:14:13', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 427787385, 'number': 439, 'closed': datetime.datetime(2020, 6, 4, 12, 12, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 4, 12, 2, 10, tzinfo=datetime.timezone.utc), 'time_taken': 612.0, 'time_delta': '0:10:12', 'additions': 7711, 'deletions': 5545, 'state': 'closed'}, {'id': 425855541, 'number': 435, 'closed': datetime.datetime(2020, 7, 31, 8, 47, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 9, 22, 3, tzinfo=datetime.timezone.utc), 'time_taken': 5181954.0, 'time_delta': '59 days, 23:25:54', 'additions': 256, 'deletions': 87, 'state': 'closed'}, {'id': 425613535, 'number': 434, 'closed': datetime.datetime(2020, 6, 25, 16, 55, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 31, 13, 39, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2171742.0, 'time_delta': '25 days, 3:15:42', 'additions': 1031, 'deletions': 41, 'state': 'closed'}, {'id': 423887733, 'number': 433, 'closed': datetime.datetime(2020, 5, 27, 16, 1, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 27, 14, 23, 15, tzinfo=datetime.timezone.utc), 'time_taken': 5868.0, 'time_delta': '1:37:48', 'additions': 20, 'deletions': 4, 'state': 'closed'}, {'id': 423111779, 'number': 428, 'closed': datetime.datetime(2020, 5, 26, 15, 49, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 26, 10, 11, 31, tzinfo=datetime.timezone.utc), 'time_taken': 20252.0, 'time_delta': '5:37:32', 'additions': 5331, 'deletions': 1449, 'state': 'closed'}, {'id': 416623323, 'number': 425, 'closed': datetime.datetime(2020, 6, 9, 15, 29, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 12, 10, 9, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2438425.0, 'time_delta': '28 days, 5:20:25', 'additions': 614, 'deletions': 4, 'state': 'closed'}, {'id': 416291030, 'number': 424, 'closed': datetime.datetime(2020, 5, 13, 19, 25, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 11, 19, 13, 11, tzinfo=datetime.timezone.utc), 'time_taken': 173536.0, 'time_delta': '2 days, 0:12:16', 'additions': 64, 'deletions': 0, 'state': 'closed'}, {'id': 415327934, 'number': 423, 'closed': datetime.datetime(2020, 5, 18, 17, 55, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 8, 16, 49, 15, tzinfo=datetime.timezone.utc), 'time_taken': 867963.0, 'time_delta': '10 days, 1:06:03', 'additions': 129, 'deletions': 54, 'state': 'closed'}, {'id': 401849701, 'number': 410, 'closed': datetime.datetime(2020, 5, 11, 12, 3, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 10, 10, 14, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2684943.0, 'time_delta': '31 days, 1:49:03', 'additions': 94, 'deletions': 25, 'state': 'closed'}, {'id': 397057053, 'number': 402, 'closed': datetime.datetime(2020, 4, 6, 12, 37, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 1, 15, 9, 37, tzinfo=datetime.timezone.utc), 'time_taken': 422851.0, 'time_delta': '4 days, 21:27:31', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 389131779, 'number': 392, 'closed': datetime.datetime(2020, 4, 1, 17, 5, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 16, 10, 21, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1406609.0, 'time_delta': '16 days, 6:43:29', 'additions': 16, 'deletions': 2, 'state': 'closed'}, {'id': 388592187, 'number': 391, 'closed': datetime.datetime(2020, 3, 19, 18, 22, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 15, 6, 14, 7, tzinfo=datetime.timezone.utc), 'time_taken': 389306.0, 'time_delta': '4 days, 12:08:26', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 388553560, 'number': 390, 'closed': datetime.datetime(2020, 4, 6, 13, 5, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 15, 3, 52, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1933974.0, 'time_delta': '22 days, 9:12:54', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 386692803, 'number': 387, 'closed': datetime.datetime(2020, 3, 11, 14, 40, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 11, 13, 34, 20, tzinfo=datetime.timezone.utc), 'time_taken': 3943.0, 'time_delta': '1:05:43', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 385900650, 'number': 386, 'closed': datetime.datetime(2020, 4, 8, 11, 36, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 10, 2, 12, 41, tzinfo=datetime.timezone.utc), 'time_taken': 2539417.0, 'time_delta': '29 days, 9:23:37', 'additions': 121, 'deletions': 7, 'state': 'closed'}, {'id': 385793369, 'number': 385, 'closed': datetime.datetime(2020, 4, 2, 15, 48, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 9, 20, 9, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2057932.0, 'time_delta': '23 days, 19:38:52', 'additions': 3159, 'deletions': 2655, 'state': 'closed'}, {'id': 385135321, 'number': 383, 'closed': datetime.datetime(2020, 3, 12, 14, 26, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 7, 11, 27, 29, tzinfo=datetime.timezone.utc), 'time_taken': 442731.0, 'time_delta': '5 days, 2:58:51', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 378634797, 'number': 377, 'closed': datetime.datetime(2020, 2, 22, 21, 53, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 22, 21, 46, 13, tzinfo=datetime.timezone.utc), 'time_taken': 417.0, 'time_delta': '0:06:57', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 377221555, 'number': 375, 'closed': datetime.datetime(2020, 3, 23, 17, 45, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 19, 15, 4, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2860903.0, 'time_delta': '33 days, 2:41:43', 'additions': 105, 'deletions': 23, 'state': 'closed'}, {'id': 375909974, 'number': 374, 'closed': datetime.datetime(2020, 4, 6, 13, 20, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 17, 2, 22, 7, tzinfo=datetime.timezone.utc), 'time_taken': 4273117.0, 'time_delta': '49 days, 10:58:37', 'additions': 400, 'deletions': 117, 'state': 'closed'}, {'id': 374609360, 'number': 372, 'closed': datetime.datetime(2020, 3, 6, 11, 49, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 13, 0, 28, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1941706.0, 'time_delta': '22 days, 11:21:46', 'additions': 28, 'deletions': 12, 'state': 'closed'}, {'id': 374594040, 'number': 371, 'closed': datetime.datetime(2020, 2, 16, 21, 49, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 12, 23, 33, tzinfo=datetime.timezone.utc), 'time_taken': 339412.0, 'time_delta': '3 days, 22:16:52', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 372871423, 'number': 370, 'closed': datetime.datetime(2020, 2, 12, 3, 17, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 9, 20, 45, 7, tzinfo=datetime.timezone.utc), 'time_taken': 196366.0, 'time_delta': '2 days, 6:32:46', 'additions': 52, 'deletions': 57, 'state': 'closed'}, {'id': 372867124, 'number': 369, 'closed': datetime.datetime(2020, 2, 12, 1, 59, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 9, 20, 1, 50, tzinfo=datetime.timezone.utc), 'time_taken': 194270.0, 'time_delta': '2 days, 5:57:50', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 372866540, 'number': 368, 'closed': datetime.datetime(2020, 2, 12, 1, 55, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 9, 19, 55, 44, tzinfo=datetime.timezone.utc), 'time_taken': 194360.0, 'time_delta': '2 days, 5:59:20', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 372866441, 'number': 367, 'closed': datetime.datetime(2020, 2, 12, 1, 53, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 9, 19, 54, 34, tzinfo=datetime.timezone.utc), 'time_taken': 194365.0, 'time_delta': '2 days, 5:59:25', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 372866361, 'number': 366, 'closed': datetime.datetime(2020, 2, 12, 1, 48, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 9, 19, 53, 41, tzinfo=datetime.timezone.utc), 'time_taken': 194075.0, 'time_delta': '2 days, 5:54:35', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 372866294, 'number': 365, 'closed': datetime.datetime(2020, 2, 12, 1, 47, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 9, 19, 52, 47, tzinfo=datetime.timezone.utc), 'time_taken': 194061.0, 'time_delta': '2 days, 5:54:21', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 372866156, 'number': 364, 'closed': datetime.datetime(2020, 2, 12, 1, 43, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 9, 19, 51, 11, tzinfo=datetime.timezone.utc), 'time_taken': 193918.0, 'time_delta': '2 days, 5:51:58', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 372865993, 'number': 363, 'closed': datetime.datetime(2020, 2, 12, 1, 52, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 9, 19, 49, 24, tzinfo=datetime.timezone.utc), 'time_taken': 194611.0, 'time_delta': '2 days, 6:03:31', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 371153956, 'number': 360, 'closed': datetime.datetime(2020, 2, 16, 20, 13, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 5, 2, 34, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1013973.0, 'time_delta': '11 days, 17:39:33', 'additions': 181, 'deletions': 157, 'state': 'closed'}, {'id': 369395793, 'number': 358, 'closed': datetime.datetime(2020, 2, 16, 21, 42, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 31, 3, 48, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1446855.0, 'time_delta': '16 days, 17:54:15', 'additions': 308, 'deletions': 102, 'state': 'closed'}, {'id': 367778174, 'number': 356, 'closed': datetime.datetime(2020, 1, 30, 11, 52, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 28, 0, 57, 26, tzinfo=datetime.timezone.utc), 'time_taken': 212103.0, 'time_delta': '2 days, 10:55:03', 'additions': 12, 'deletions': 12, 'state': 'closed'}, {'id': 367229105, 'number': 353, 'closed': datetime.datetime(2020, 2, 12, 1, 36, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 26, 15, 26, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1419035.0, 'time_delta': '16 days, 10:10:35', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 367228959, 'number': 352, 'closed': datetime.datetime(2020, 1, 29, 16, 20, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 26, 15, 24, 36, tzinfo=datetime.timezone.utc), 'time_taken': 262560.0, 'time_delta': '3 days, 0:56:00', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 367228784, 'number': 351, 'closed': datetime.datetime(2020, 1, 29, 16, 11, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 26, 15, 22, 48, tzinfo=datetime.timezone.utc), 'time_taken': 262118.0, 'time_delta': '3 days, 0:48:38', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 367228662, 'number': 350, 'closed': datetime.datetime(2020, 4, 8, 11, 46, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 26, 15, 21, 42, tzinfo=datetime.timezone.utc), 'time_taken': 6294272.0, 'time_delta': '72 days, 20:24:32', 'additions': 147, 'deletions': 3222, 'state': 'closed'}, {'id': 367228484, 'number': 349, 'closed': datetime.datetime(2020, 2, 12, 1, 10, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 26, 15, 20, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1417846.0, 'time_delta': '16 days, 9:50:46', 'additions': 3379, 'deletions': 2869, 'state': 'closed'}, {'id': 367228196, 'number': 348, 'closed': datetime.datetime(2020, 2, 12, 1, 35, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 26, 15, 17, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1419483.0, 'time_delta': '16 days, 10:18:03', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 366629148, 'number': 345, 'closed': datetime.datetime(2020, 1, 28, 18, 56, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 24, 0, 19, 58, tzinfo=datetime.timezone.utc), 'time_taken': 412616.0, 'time_delta': '4 days, 18:36:56', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 365318776, 'number': 344, 'closed': datetime.datetime(2020, 1, 21, 15, 8, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 21, 13, 57, 34, tzinfo=datetime.timezone.utc), 'time_taken': 4230.0, 'time_delta': '1:10:30', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 365066007, 'number': 343, 'closed': datetime.datetime(2020, 1, 28, 19, 0, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 21, 2, 23, 41, tzinfo=datetime.timezone.utc), 'time_taken': 664582.0, 'time_delta': '7 days, 16:36:22', 'additions': 60, 'deletions': 3, 'state': 'closed'}, {'id': 362853335, 'number': 342, 'closed': datetime.datetime(2020, 1, 17, 13, 43, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 14, 21, 44, 12, tzinfo=datetime.timezone.utc), 'time_taken': 230356.0, 'time_delta': '2 days, 15:59:16', 'additions': 40, 'deletions': 13, 'state': 'closed'}, {'id': 361809507, 'number': 340, 'closed': datetime.datetime(2020, 2, 12, 0, 54, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 12, 9, 6, 36, tzinfo=datetime.timezone.utc), 'time_taken': 2648899.0, 'time_delta': '30 days, 15:48:19', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 361640715, 'number': 339, 'closed': datetime.datetime(2020, 1, 29, 15, 0, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 10, 22, 5, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1616115.0, 'time_delta': '18 days, 16:55:15', 'additions': 498, 'deletions': 99, 'state': 'closed'}]"
