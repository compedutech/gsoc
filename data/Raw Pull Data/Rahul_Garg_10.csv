pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
986632976,Toolbar UI shortcut assignment,"This is related to the GSoC project [Global Shortcuts](https://musescore.org/en/user/3638616/blog/2022/06/01/gsoc22-global-shortcuts)
This PR intends to add context menu to Note Input Bar and the Playback toolbar for shortcut assignment through the UI.

### Notation Toolbar
![image](https://user-images.githubusercontent.com/75690289/179398877-bd9aff86-aea3-4cd7-b345-089d6ecf1d64.png)
### Note Input Bar
![image](https://user-images.githubusercontent.com/75690289/177190226-8964b05e-bf0d-4b8d-9a17-5421a1f66311.png)
### Playback Toolbar
![image](https://user-images.githubusercontent.com/75690289/177190261-32fcfd30-0c65-4b56-8179-591f5f30b0cd.png)

<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [x] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made",False,12265,https://api.github.com/repos/musescore/MuseScore/pulls/12265,https://github.com/musescore/MuseScore/pull/12265,open,772,140,28,9,1,9,1,0,[{'name': 'GSoC'}],2022-07-04 16:10:08+00:00,,0.0,,"[{'comment_id': 913131160, 'comment_body': 'Please do let me know the context for these couple actions, I could add the ones nearby (like `notation-staff-not-tab`) but I just wanted to be sure', 'comment_created': datetime.datetime(2022, 7, 4, 16, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 915748287, 'comment_body': 'I think you should get rid of such duplication. ([NoteInputBar, PlaybackToolBar)\r\nThere must be a general solution and you must reuse everywhere.\r\nBut in order to find the ideal solution, we need to understand in which places and for which components we need to change the shortcuts.\r\n\r\nCan you explain to me where we need to implement this feature?', 'comment_created': datetime.datetime(2022, 7, 7, 11, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 915793202, 'comment_body': '@Eism The ""minimum viable product"" for this project is that the user can assign shortcuts in the NoteInputBar and PlaybackToolbar (and maybe that ""notation toolbar"", with the ""Mixer"" and ""Parts"" buttons). A stretch goal is to implement it for Palettes too, but that might need to work slightly differently.', 'comment_created': datetime.datetime(2022, 7, 7, 12, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 916001624, 'comment_body': ""@Eism I agree, a general solution for the dialog and the shortcuts model would be a lot better. If you have any general solution in mind, please do let me know, I'll be very happy to incorporate the same! I too will go back to this feature and see if there are any possibilities of simplifying and generalizing something to remove this duplication"", 'comment_created': datetime.datetime(2022, 7, 7, 15, 21, 25, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 916042664, 'comment_body': 'I could imagine a solution like this would be nice: \r\n- Defining a component for the context menu, which can be instantiated in any toolbar button. See ContextMenuLoader, which could be used as a base.\r\n\r\n- Inside that component, you could put a small C++ model, that handles the actions: for the ""add"" action, just open the dialog (using IInteractive), for the ""remove"" action, I think it would be good to create a dedicated ""removeShortcutForAction"" method in ShortcutsRegister, and call that in this model.\r\n \r\n- For the dialog: I think it\'s good to transform the dialog into a separate StyledDialogView which can be opened using the IInteractive system, with the action code as a parameter in the UriQuery. It would be great to modify the EditShortcutDialog component in such way that it can either be embedded in the Preferences dialog, or in a dedicated standalone dialog. Or maybe move the contents to a separate component called ""EditShortcutView"", and use that component both in EditShortcutDialog and in the new dialog.\r\n\r\n- Finally, it would be nice to create a way to set a single shortcut directly using ShortcutsRegister, instead of involving a whole ShortcutsModel, which should ideally only be used in ShortcutsPage.qml. ', 'comment_created': datetime.datetime(2022, 7, 7, 16, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 916103094, 'comment_body': '@cbjeukendrup This is definitely something I can work towards!\r\nI just had some confusion regarding point 3. The only difference between this dialogue and the normal dialogue are the buttons. So transforming into a separate Dialogue View QML file would result in quite a lot of duplication, unless I mis-interpreted what you said. Please do clarify this point.', 'comment_created': datetime.datetime(2022, 7, 7, 17, 8, 12, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 916121830, 'comment_body': 'Indeed, the UI is mostly the same, so you should definitely define that in only one component. But the difference is how the dialog will be opened and with which models it works:\r\n- In Preferences, it is opened using QML\'s dialog type, and when the ""Add""/""Assign"" button is clicked, the new shortcut is saved in the list in ShortcutsModel, but not yet immediately applied to ShortcutsRegister.\r\n- As a standalone dialog, it will be opened using IInteractive, and when the ""Assign"" button is clicked, the new shortcut is directly applied to ShortcutsRegister, without the intervention of ShortcutsModel. \r\n\r\nSo the solution is to extract the UI into a new component called `EditShortcutView`, and use that component in both `EditShortcutDialog` and the new dialog. `EditShortcutDialog` will contain some ""adapter"" code to let the view work with ShortcutsModel and PreferencesPage, and the new dialog will contain a different model that will help applying the shortcut directly to ShortcutsRegister. ', 'comment_created': datetime.datetime(2022, 7, 7, 17, 32, 5, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 917388861, 'comment_body': 'I have implemented the suggested change, please do have a look once. I am not squashing right now just to preserve history in case something goes wrong. When everything is final in the end, I can rebase, squash and force-push.', 'comment_created': datetime.datetime(2022, 7, 10, 12, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 922801336, 'comment_body': 'I believe this would get resolved by: https://github.com/musescore/MuseScore/pull/12414\r\n\r\n\r\nTemporarily resolved by: https://github.com/musescore/MuseScore/pull/12265/commits/361edea1974c167f109f307827db8401ba6255af', 'comment_created': datetime.datetime(2022, 7, 17, 9, 14, 21, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}]","[{'commit_sha': '6a42a1f5b5f671005b99dfd9e3ccc0ee9ae6b2b6', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0b3b8fae602d8bae5ddc4c00c45958c93c68efa', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8aef413211b53e943bf480ed0b1b32b5719b9c64', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a844c7fd796c40350f172ae8915fbc7c85b838f', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '913fc6343d4904c9f91548bba13f9fd28e9f31ef', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc0a06db80b9744d29cce9e2b5770d18182af443', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7c3518cc651e1321d6c29c363dd643f9c91bd60', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9435a04ef729e918cdeb6fc82e95adeccf0fa5d', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d171e1f1f71247b6367d33ebf5b905dc685eb90', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}]",Rahul Garg,75690289,rahul.garg@research.iiit.ac.in,User,,54,,26,30
997130279,Fix: #11060: Add missing shortcuts to Preferences,"Resolves: #11060 
This PR intends to add the missing shortcuts in shortcuts list.
It also adds the shortcut contexts to the cpp files alongside newly added descriptions (which are now displayed in the Preferences page instead of the titles)

Note: There is an existing issue that you can't clear shortcuts that already have default shortcuts. I have not tried to resolve that issue in this PR because it has consequences to adding new default shortcuts. 

<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",True,12414,https://api.github.com/repos/musescore/MuseScore/pulls/12414,https://github.com/musescore/MuseScore/pull/12414,closed,977,616,25,3,9,11,1,0,[{'name': 'strings'}],2022-07-14 21:18:40+00:00,2022-07-25 06:58:11+00:00,898771.0,"10 days, 9:39:31","[{'comment_id': 922113406, 'comment_body': 'This will cause a compiler warning: the order in which the fields are initialized here must match the order in which they appear in the struct. So, you should simply swap title and scCtx:\r\n```suggestion\r\n        : code(code), uiCtx(ctx), scCtx(scCtx),  title(title), checkable(ch) {}\r\n```\r\n(The same for the other constructors below)', 'comment_created': datetime.datetime(2022, 7, 15, 12, 21, 40, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 922117938, 'comment_body': 'Just pushed it @cbjeukendrup, please have a look', 'comment_created': datetime.datetime(2022, 7, 15, 12, 28, 3, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 928768908, 'comment_body': 'It looks like `actionDescription(actionCode) == """"` will never be true, because in `load()`, you do:\r\n```c++\r\n         if (action.title.isEmpty() || action.description.isEmpty()) {\r\n             continue;\r\n         }\r\n```\r\nMaybe you meant `&&` instead of `||`? Or is the emptiness check just redundant?', 'comment_created': datetime.datetime(2022, 7, 25, 11, 20, 22, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 928771565, 'comment_body': 'I agree that this should never really be required. But just as a safety measure, if somehow a description was empty and it was allowed in the list(maybe inserted via some other measure or later modified to not have a description), it should then default to the title. \r\n\r\nIt is just a safety-check just so the item in shortcuts list is not empty by any means', 'comment_created': datetime.datetime(2022, 7, 25, 11, 23, 47, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 929024684, 'comment_body': '@VanSHOE \r\nPlease optimize the code, you are calculating the description twice.', 'comment_created': datetime.datetime(2022, 7, 25, 15, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 947878183, 'comment_body': '@VanSHOE \r\nCan you explain to me why you filter empty shortcuts here?', 'comment_created': datetime.datetime(2022, 8, 17, 12, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 947883778, 'comment_body': ""Otherwise we fill the shortcuts register (and thus the user shortcuts xml file) with _all_ actions that exist, while only a few have a shortcut.\r\n\r\nHowever, @VanSHOE and me are aware that this solution is not perfect, because if the user deletes a default shortcut, this deletion is not saved.\r\n\r\nSo maybe we should accept that we store a big amount of unnecessary information in the shortcuts register. \r\n\r\nOr we should make this filter clever, by only saving user shortcuts that differ from the default ones instead of only saving non-empty user shortcuts. Maybe that's the best solution."", 'comment_created': datetime.datetime(2022, 8, 17, 12, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 947894723, 'comment_body': 'There is another issue which occurs even if we do store the ones that are currently different from the default ones. \r\nIf a default shortcut is added in the development process to the xml which was previously not assigned anything, it would not get assigned to any one if we choose store empty values in the register.\r\n\r\nI was thinking that we have another flag with each shortcut where we can mark if it was user cleared. In that case, we do write it to the shortcuts register.\r\n\r\nOther shortcuts that are just not assigned any shortcut can continue to not exist in the register.', 'comment_created': datetime.datetime(2022, 8, 17, 12, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 947914241, 'comment_body': 'There are more problems than benefits. I will revert this changes in https://github.com/musescore/MuseScore/pull/12890', 'comment_created': datetime.datetime(2022, 8, 17, 13, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 956457632, 'comment_body': '@VanSHOE\r\nCould you explain why here OR?\r\nShould be AND?', 'comment_created': datetime.datetime(2022, 8, 26, 21, 27, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 956469506, 'comment_body': 'All ui actions that should be in the shortcuts list should have a description and a title at all times. Description is needed to display the correct text in the model (though as another safety check, if somehow an action without desc made it in, actionText would handle it).\n\n', 'comment_created': datetime.datetime(2022, 8, 26, 21, 56, 43, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}]","[{'commit_sha': 'd019502fe943cb027b49e257bd19c1d6a8f49414', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66612717d234d3a4c6043f7b54046be8bcdd13de', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b633f2927a01604fcedec2ee15d07f6f9b95b97', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}]",Rahul Garg,75690289,rahul.garg@research.iiit.ac.in,User,,54,,26,30
1022285500,Shortcut Categories,"This adds shortcut categories as defined [here](https://musescore.org/en/user/3638616/blog/2022/06/01/gsoc22-global-shortcuts#:~:text=Categorizing%20shortcuts%20in%20shortcut%20preferences)
![image](https://user-images.githubusercontent.com/75690289/183830553-e1583aaf-a6bb-4bf1-b78d-696b3e510e9d.png)

The shortcut categories are currently draft categories and may change later on.
A known issue is that the opening and closing of categories can be a bit stuttery when opening/ closing categories but it mostly happens when they are just about to be opened/ closed
<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [x] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",False,12752,https://api.github.com/repos/musescore/MuseScore/pulls/12752,https://github.com/musescore/MuseScore/pull/12752,open,772,21,24,25,9,24,3,3,"[{'name': 'GSoC'}, {'name': 'P2'}, {'name': 'needs review'}]",2022-08-10 06:27:17+00:00,,0.0,,"[{'comment_id': 943555925, 'comment_body': ""Enum values should be CamelCase or UPPER_CASE. I don't think we have a consistent standard for this (neither does Qt) but Sentencecase is definitely wrong here."", 'comment_created': datetime.datetime(2022, 8, 11, 14, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 952840598, 'comment_body': 'Lists values should be written out on separate lines like the enum values above to make for easier reading, scrolling and commenting. They also need to be translated:\r\n```c++\r\n{\r\n    TranslatableString(""framework/actioncategory"", ""Undefined""),\r\n    TranslatableString(""framework/actioncategory"", ""Internal""), // Now I can comment on this value\r\n    TranslatableString(""framework/actioncategory"", ""Tablature""),\r\n    // TranslatableString(""framework/actioncategory"", ""Viewing & Navigation""), // And comment out this value altogether\r\n    ...\r\n}\r\n```\r\nBut I\'m not sure if these strings should really be in a static list or just return values of a switch statement? (Maybe another dev can comment on this?) Also, they should probably be defined in a `.cpp` file along with the body of the `getCategory()` function.', 'comment_created': datetime.datetime(2022, 8, 23, 16, 17, 32, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 952880530, 'comment_body': ""I would call this function `categoryName()`.  But I'm not sure it really belongs here. It should probably be defined more like this:\r\n```c++\r\nQString name(ActionCategory cat) {\r\n    // code\r\n}\r\n```\r\nAnd live outside the UiAction struct. It should be declared in a `.h` file and defined in a `.cpp` file."", 'comment_created': datetime.datetime(2022, 8, 23, 16, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 961578593, 'comment_body': ""I'm inclined to suggest moving this vector to ShortcutsModel, since that is the only place where it is used and I think this is rather UI-related than logic-related so might fit better into a UI-related class."", 'comment_created': datetime.datetime(2022, 9, 2, 11, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961654487, 'comment_body': ""Sure I'll move it there!"", 'comment_created': datetime.datetime(2022, 9, 2, 12, 59, 53, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 961944899, 'comment_body': 'Thanks for moving the function, but why did you go back to using C-style casts? It should be:\r\n```C++\r\n    QString getCategoryName(ui::ActionCategory category) const\r\n    {\r\n        size_t c = static_cast<int>(category) + 1;\r\n        IF_ASSERT_FAILED(c < categories.size()) {\r\n            return QString();\r\n        }\r\n        return categories[c].qTranslated();\r\n    }\r\n```', 'comment_created': datetime.datetime(2022, 9, 2, 19, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 961946222, 'comment_body': ""It might be better to get rid of the vector and do this method as a switch statement: \r\n```c++\r\nswitch (category) {\r\ncase ...: return ...;\r\n...\r\n}\r\n\r\n// Unreachable\r\nreturn {};\r\n```\r\nThis way, you don't need to worry about syncing the order in the enum and in this method, and you'll get a compiler warning here if you forget to handle new cases here.\r\n\r\nAlso, maybe better rename the method to `categoryName(...)` (we tend not to use `get` prefixes)."", 'comment_created': datetime.datetime(2022, 9, 2, 19, 15, 5, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961950381, 'comment_body': ""In SectionName, you convert from QString to QVariant and here you're converting back. That could be more efficient. Just return QString in SectionName."", 'comment_created': datetime.datetime(2022, 9, 2, 19, 22, 34, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961951426, 'comment_body': ""A few code style comments in this area:\r\n- `SectionName` should start with a lowercase `s`\r\n- I don't like unnecessary uses of `this->` because it decreases readability (makes a simple thing look complicated)\r\n- `getSections` preferably without `get` prefix (and then also with lowercase `s`)"", 'comment_created': datetime.datetime(2022, 9, 2, 19, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961952369, 'comment_body': 'Ah, so sorry, must have missed it during handling a merge conflict', 'comment_created': datetime.datetime(2022, 9, 2, 19, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 961952716, 'comment_body': 'Sure Ill incorporate these suggestions', 'comment_created': datetime.datetime(2022, 9, 2, 19, 27, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 961954346, 'comment_body': 'Are the changes in this file fix-ups for previous changes, or are they left-overs of uncommitted experiments?', 'comment_created': datetime.datetime(2022, 9, 2, 19, 30, 10, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961954765, 'comment_body': '(please remove before merge)', 'comment_created': datetime.datetime(2022, 9, 2, 19, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961957574, 'comment_body': 'Not sure if this is the best translation context. @shoogle What do you think? Maybe `""action/category""`, to keep it consistent with `""action""` which is the context of UIActions?\r\n(probably ""framework/"" is not right anyway because it\'s not part of the framework module anymore)', 'comment_created': datetime.datetime(2022, 9, 2, 19, 36, 35, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961957959, 'comment_body': 'This one seems unnecessary', 'comment_created': datetime.datetime(2022, 9, 2, 19, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961960854, 'comment_body': ""Although there's some inconsistency within the project, I think in new code it is more common to use CamelCase. It has may preference, because it looks more friendly and I think it's better readable.\r\n\r\nAlso, in any case, the words should be separated, e.g. `VIEW_NAVIGATION` or `ViewNavigation`, `LAYOUT_FORMATTING` or `LayoutFormatting`, etc."", 'comment_created': datetime.datetime(2022, 9, 2, 19, 42, 48, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961962217, 'comment_body': '(please fix code style before merge)', 'comment_created': datetime.datetime(2022, 9, 2, 19, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961963683, 'comment_body': 'This one also seems unnecessary now that `getCategory` has been moved', 'comment_created': datetime.datetime(2022, 9, 2, 19, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961965468, 'comment_body': '(please remove the logging statements before merge)', 'comment_created': datetime.datetime(2022, 9, 2, 19, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 961966289, 'comment_body': 'Should be sentence case (`""Toggle visibility""`)', 'comment_created': datetime.datetime(2022, 9, 2, 19, 53, 16, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 962180711, 'comment_body': ""Please let me know if this is supposed to be done. Till then I'll push some of the other changes"", 'comment_created': datetime.datetime(2022, 9, 3, 16, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 962302417, 'comment_body': '@cbjeukendrup I can do this however, the categories vector is required to send all sections to QML as well. It is in `ShortcutsPage.qml`\r\n```qml\r\n  Component.onCompleted: {\r\n      shortcutsModel.load()\r\n\r\n      shortcutsView.allSections = shortcutsModel.sections() // <-- Here\r\n      topPanel.setSearchText(root.shortcutCodeKey)\r\n  }\r\n```\r\n\r\nSo I thought maybe the get category could just use this list itself to preserve Lines of Code. Please let me know if I should still go with the switch case approach in section name\r\n\r\n\r\nEdit: Also in QML, these names are directly used to check whether they are collapsed or not, so using the list itself would ensure that there is no mis-match among the names (because same source)\r\nBut if I use switch, then if any typo happens in naming and it does not match what it says in the list, it would cause bugs', 'comment_created': datetime.datetime(2022, 9, 4, 12, 4, 25, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}, {'comment_id': 1186915125, 'comment_body': 'It looks like the `Internal` category is not really used; its role already seems to be fulfilled by `Undefined`. Do we need it?', 'comment_created': datetime.datetime(2023, 5, 7, 21, 15, 42, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 1188525729, 'comment_body': '@cbjeukendrup \r\nBack then, I believe I set Undefined for those shortcuts that I did not really know the category of while Internal meant confirmed private actions. We can remove them but I thought it might be nice to keep them separate in case the Undefined ones do end up getting a category at some point', 'comment_created': datetime.datetime(2023, 5, 9, 12, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'VanSHOE', 'type': 'User'}]","[{'commit_sha': '048a0707bc0f3881f582c8639d47e4d5f71596d3', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e433e5d6329793b2c4422b00d9e2e417052c6f0a', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b91733e5a36865d8dea85754850e88fdc5e286a', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2f2ae5f3264ff34acd8343489793195d1a279d3', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cca70af04dacb7f06f1d7cba4d4272ae2cc16359', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e878c068c15806c4965b97f5156bb83119d1efa', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df0299eeba5d01b4955b03fa21885bba485931bb', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '537e3658984a1e80260112a1e754ac2c6825ea38', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e43b2b96a78bddc0c42e35fcb56a5cb1fe7f34ad', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7bf6b1e332d8afefae349dc4162c2dd42411f67', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b52d832f1a3c077a57913bc14f38d4ca73c2473', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26ce922c515c61da752a8ec3c51e76e5e4520001', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dac1b15e11b55b6e5050b53526905ac90eda2019', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3650569ba78a4ba059a4b6eea4f6a315f46f8ab6', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e237e36197c06893d924e1a1915f44f7bba379d', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b837386fae61a38f6a65a53c66bc5fe8146ce9a', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc5a0a9c931232d1030c91018c80c5b5561c500a', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd88d16824c2a3d58f8200ca07201a8681864f697', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09fc0ad39b343b0a5b0c5e397c4e622c7bafd28d', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ac2ba25e895185198a3195740ae97b0c12f51fe', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '338140c5f817e9ae7580d95dc140aa65c4f9b69b', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82fedc127b9a4c5b220fbdb93c6edb837b57331b', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bb0bb6a26fe343a0c1ced0c36773198e337781f', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '427e26ba345f2efea1ad6322f3da4b81e9450c67', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22537cc33fc50b7057053e2ef408322840914959', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}]",Rahul Garg,75690289,rahul.garg@research.iiit.ac.in,User,,54,,26,30
1025833290,Palette shortcuts,"This is a proof-of-concept Pull Request containing all the work done on palette shortcuts done up till now. 
After discussion with @shoogle, we found some issues that would require to be solved before this system can be implemented. 
I mentioned these issues in [GSoC'22 Week 8](https://musescore.org/en/user/3638616/blog/2022/08/08/gsoc22-week-8-global-shortcuts) blogpost.
This particular feature spans months of work hence there might be some useless pieces of code that I will clean up.

Currently you can assign shortcuts to palette items from the palette sidebar or from preferences.
The shortcuts are stored in the workspace where other palette cell data is stored. 

<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [x] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",False,12850,https://api.github.com/repos/musescore/MuseScore/pulls/12850,https://github.com/musescore/MuseScore/pull/12850,open,489,28,33,33,0,0,1,0,[{'name': 'GSoC'}],2022-08-14 15:45:24+00:00,,0.0,,[],"[{'commit_sha': '2591191fcc16a4faa26c044b5426dd814b1fd77a', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '104b483172259498e4ec7d2d8c3adb50a1c64741', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '260e9a6ab16975434a26a5648b89c7a4920acae7', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5482effc6043e462595c64e87cd0c3e3ab37218', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6083a23293e3adb058ff682d5aa44edce79d2914', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2ae001f35d92efa8eea4dc7b0ad762e44e87559', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8362ab174db5172d7d859ed29bf9e62e3aeb80', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83b8e75db2a2090b33764ca07087a7050bc782de', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05ca4eae51e8f7bc84d5f9011153493f743aabe8', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc85c602ec35ca66b7404e5c5b3348b342d6cfd2', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3de79ac027468451e9cc7c614586b4999c305086', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10e3a9ba3825e0aad288d57c66843b30c26e395f', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e51bb314a64cb0e827c5a62f3829378ad610ab4', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a2a73c8ecc0eb6c0727c0eea64a8d331745f367', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd403efbe5ee0e4b4d71354bf6a944d090ff34e0a', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b91cc55cf0d95aafdbad513ae68e46b35dfa699', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8efe4a72ffaeff926eefbcb7099c2eec2685cd70', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec7c350a31babb23dda936a41fa287a71f76f2d', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74f8b78c4fb85fae619691f26e6f1fb2a6e4bf5e', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0f0d010b5b050d19f19be6c210c61f49ba8bd02', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfef1630306e728a5f37b2a12606339315bcf4e1', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ba3d30ff12302c7440c32639ff0f71ab2bddd83', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a770e0e973a1e9362170b65d2affe4493fa18e1b', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2035871a75f9b0728fb9e146ab892c318119ad16', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e88d418c4c206f0c193e785a8873728cbed5b15', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01bb41971a6b90163e01c77b0ae90694a26d4491', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cc59c5ffba574486c15d0b799a6781ce8bbfdcc', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a51aba39a22aa6dd5a921b2a253631cb3636fcf', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55abdfb04b71abe245ab3d816ed8adefd7201f06', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93c21d80ba7c60dc9306a22bc386afbf7ffe52c5', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'deeb9ff43c8cfc1d8f9bea35293354c14cf83804', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11049aa7858221f3a1d61ab2fac295e5182277ad', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31be53386e2a0a9dd861baac672e3f0c519b53fb', 'committer_username': 'VanSHOE', 'committer_name': 'Rahul Garg', 'committer_email': 'rahul.garg@research.iiit.ac.in', 'commit_date': datetime.datetime(2020, 12, 8, 17, 5, 6, tzinfo=datetime.timezone.utc)}]",Rahul Garg,75690289,rahul.garg@research.iiit.ac.in,User,,54,,26,30

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
4454793,MuseScore,musescore/MuseScore,C++,2583,11978,240,427,37258,2736,111,136,"[{'id': 1192849362, 'number': 15813, 'closed': datetime.datetime(2023, 6, 7, 16, 25, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 10, 20, 3, 12, tzinfo=datetime.timezone.utc), 'time_taken': 12774153.0, 'time_delta': '147 days, 20:22:33', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 1025833290, 'number': 12850, 'closed': None, 'created': datetime.datetime(2022, 8, 14, 15, 45, 24, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 489, 'deletions': 28, 'state': 'open'}, {'id': 1022285500, 'number': 12752, 'closed': None, 'created': datetime.datetime(2022, 8, 10, 6, 27, 17, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 772, 'deletions': 21, 'state': 'open'}, {'id': 1012627800, 'number': 12611, 'closed': datetime.datetime(2022, 8, 1, 14, 46, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 30, 11, 21, 32, tzinfo=datetime.timezone.utc), 'time_taken': 185110.0, 'time_delta': '2 days, 3:25:10', 'additions': 7, 'deletions': 20, 'state': 'closed'}, {'id': 1007660672, 'number': 12551, 'closed': datetime.datetime(2022, 7, 26, 8, 51, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 25, 19, 1, 21, tzinfo=datetime.timezone.utc), 'time_taken': 49796.0, 'time_delta': '13:49:56', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1001039030, 'number': 12479, 'closed': datetime.datetime(2022, 7, 20, 10, 35, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 19, 17, 8, 40, tzinfo=datetime.timezone.utc), 'time_taken': 62807.0, 'time_delta': '17:26:47', 'additions': 8, 'deletions': 4, 'state': 'closed'}, {'id': 997130279, 'number': 12414, 'closed': datetime.datetime(2022, 7, 25, 6, 58, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 14, 21, 18, 40, tzinfo=datetime.timezone.utc), 'time_taken': 898771.0, 'time_delta': '10 days, 9:39:31', 'additions': 977, 'deletions': 616, 'state': 'closed'}, {'id': 986632976, 'number': 12265, 'closed': None, 'created': datetime.datetime(2022, 7, 4, 16, 10, 8, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 772, 'deletions': 140, 'state': 'open'}, {'id': 961377869, 'number': 11923, 'closed': datetime.datetime(2022, 6, 27, 8, 37, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 8, 8, 59, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1640229.0, 'time_delta': '18 days, 23:37:09', 'additions': 39, 'deletions': 1, 'state': 'closed'}, {'id': 954225333, 'number': 11854, 'closed': datetime.datetime(2023, 9, 11, 18, 2, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 1, 15, 51, 46, tzinfo=datetime.timezone.utc), 'time_taken': 40356638.0, 'time_delta': '467 days, 2:10:38', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 940222737, 'number': 11680, 'closed': datetime.datetime(2022, 5, 19, 10, 48, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 18, 17, 12, 33, tzinfo=datetime.timezone.utc), 'time_taken': 63338.0, 'time_delta': '17:35:38', 'additions': 2, 'deletions': 16, 'state': 'closed'}, {'id': 936753623, 'number': 11644, 'closed': datetime.datetime(2022, 5, 15, 15, 58, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 15, 13, 47, 17, tzinfo=datetime.timezone.utc), 'time_taken': 7848.0, 'time_delta': '2:10:48', 'additions': 28, 'deletions': 15, 'state': 'closed'}, {'id': 936505231, 'number': 11634, 'closed': datetime.datetime(2022, 5, 16, 16, 31, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 14, 10, 15, 15, tzinfo=datetime.timezone.utc), 'time_taken': 195402.0, 'time_delta': '2 days, 6:16:42', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 936344283, 'number': 11630, 'closed': datetime.datetime(2022, 5, 14, 9, 18, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 13, 21, 43, 50, tzinfo=datetime.timezone.utc), 'time_taken': 41659.0, 'time_delta': '11:34:19', 'additions': 20, 'deletions': 6, 'state': 'closed'}, {'id': 932566293, 'number': 11586, 'closed': datetime.datetime(2022, 6, 20, 9, 49, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 10, 15, 12, 51, tzinfo=datetime.timezone.utc), 'time_taken': 3522983.0, 'time_delta': '40 days, 18:36:23', 'additions': 1675, 'deletions': 0, 'state': 'closed'}, {'id': 909179224, 'number': 11188, 'closed': datetime.datetime(2022, 5, 11, 15, 10, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 13, 17, 26, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2411039.0, 'time_delta': '27 days, 21:43:59', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 909090720, 'number': 11185, 'closed': datetime.datetime(2022, 4, 19, 11, 47, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 13, 15, 45, 49, tzinfo=datetime.timezone.utc), 'time_taken': 504072.0, 'time_delta': '5 days, 20:01:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 908057648, 'number': 11170, 'closed': datetime.datetime(2022, 4, 15, 15, 24, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 12, 19, 4, 4, tzinfo=datetime.timezone.utc), 'time_taken': 246014.0, 'time_delta': '2 days, 20:20:14', 'additions': 5, 'deletions': 7, 'state': 'closed'}, {'id': 906494389, 'number': 11158, 'closed': datetime.datetime(2022, 4, 11, 22, 10, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 11, 21, 18, 48, tzinfo=datetime.timezone.utc), 'time_taken': 3115.0, 'time_delta': '0:51:55', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 906084763, 'number': 11144, 'closed': datetime.datetime(2022, 4, 26, 6, 23, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 11, 14, 33, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1266632.0, 'time_delta': '14 days, 15:50:32', 'additions': 25, 'deletions': 0, 'state': 'closed'}, {'id': 899298877, 'number': 11089, 'closed': datetime.datetime(2022, 4, 5, 9, 48, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 4, 17, 34, 19, tzinfo=datetime.timezone.utc), 'time_taken': 58454.0, 'time_delta': '16:14:14', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 845251541, 'number': 10524, 'closed': datetime.datetime(2022, 2, 22, 18, 2, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 13, 9, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1054389.0, 'time_delta': '12 days, 4:53:09', 'additions': 0, 'deletions': 7, 'state': 'closed'}, {'id': 840153343, 'number': 10447, 'closed': datetime.datetime(2022, 2, 14, 20, 10, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 4, 11, 9, 52, tzinfo=datetime.timezone.utc), 'time_taken': 896431.0, 'time_delta': '10 days, 9:00:31', 'additions': 18, 'deletions': 3, 'state': 'closed'}, {'id': 816691022, 'number': 10224, 'closed': datetime.datetime(2022, 1, 13, 7, 36, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 7, 22, 2, 51, tzinfo=datetime.timezone.utc), 'time_taken': 466409.0, 'time_delta': '5 days, 9:33:29', 'additions': 11, 'deletions': 3, 'state': 'closed'}, {'id': 815412239, 'number': 10216, 'closed': datetime.datetime(2022, 1, 21, 14, 38, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 6, 10, 39, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1310358.0, 'time_delta': '15 days, 3:59:18', 'additions': 21, 'deletions': 5, 'state': 'closed'}, {'id': 814555255, 'number': 10212, 'closed': datetime.datetime(2022, 7, 18, 12, 13, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 5, 9, 57, 59, tzinfo=datetime.timezone.utc), 'time_taken': 16769730.0, 'time_delta': '194 days, 2:15:30', 'additions': 8, 'deletions': 2, 'state': 'closed'}]"
