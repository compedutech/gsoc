pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
679109271,[ext] Initialise extension,"**Description**

This PR initializes the Chrome helper Extension project. The project will use TypeScript and Webpack for transpilation purposes.

All the code for background service worker will reside in the `src` folder while the resources required for configuring the extension reside insie `public` folder.

The .ts files inside the `src` folder get transpiled and bundled into a single `build/index.js` file which is loaded by `manifest.json`. Once the build completes, contents of the  `public` folder get copied into `build` folder. This `build` directory can be loaded into chrome as an extension.

NOTE: `package-lock.json` contributes +10834 in the PR. Manually written code: +161 lines

**Screenshots**

![image](https://user-images.githubusercontent.com/28949397/124200288-9879ec00-daf2-11eb-8f56-1d6fca4fb143.png)

",True,20,https://api.github.com/repos/MahmoudAGawad/cros-diag-app/pulls/20,https://github.com/MahmoudAGawad/cros-diag-app/pull/20,closed,11099,2,19,1,3,12,0,0,[],2021-06-28 14:40:06+00:00,2021-07-07 13:34:15+00:00,773649.0,"8 days, 22:54:09","[{'comment_id': 660301073, 'comment_body': 'Default ESLint Typescript configuration', 'comment_created': datetime.datetime(2021, 6, 29, 5, 54, 24, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 660301332, 'comment_body': 'Default config for testing the project using Jest library.', 'comment_created': datetime.datetime(2021, 6, 29, 5, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 660301734, 'comment_body': 'When `npm run build` is run, the `pre` and `post` automatically run before and after the build command respectively.', 'comment_created': datetime.datetime(2021, 6, 29, 5, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 661387067, 'comment_body': 'nit: ""Chrome OS Diagnostics Helper Extension""', 'comment_created': datetime.datetime(2021, 6, 30, 11, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 661387911, 'comment_body': 'nit: @fileoverview Service worker script', 'comment_created': datetime.datetime(2021, 6, 30, 11, 50, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 661390197, 'comment_body': ""remove this.\r\n\r\nYou should listen on install events and do the necessary pre-work (which will be empty for now).\r\n```\r\n\r\nself.addEventListener('install', function(event) {\r\n   console.log('Service worker is installed!');\r\n  );\r\n});\r\n```"", 'comment_created': datetime.datetime(2021, 6, 30, 11, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 664084001, 'comment_body': ""nit: let's maybe call it a `companion extension`?"", 'comment_created': datetime.datetime(2021, 7, 5, 18, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 664102861, 'comment_body': ""nit: let's rename it to `sw.ts` to avoid confusion :)"", 'comment_created': datetime.datetime(2021, 7, 5, 19, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 664473222, 'comment_body': 'sw.js?', 'comment_created': datetime.datetime(2021, 7, 6, 11, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 664473581, 'comment_body': 'sw.js?', 'comment_created': datetime.datetime(2021, 7, 6, 11, 33, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 664473828, 'comment_body': 'sw.js', 'comment_created': datetime.datetime(2021, 7, 6, 11, 34, 16, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 665343915, 'comment_body': 'nit: companion extension', 'comment_created': datetime.datetime(2021, 7, 7, 12, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}]","[{'commit_sha': 'f4bf883183da3e6da73ff816bf5350fec9e51bf9', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}]",Aayush Joglekar,28949397,aayushjog@gmail.com,User,,59,,57,227
686948552,[ext] Add code coverage,The coverage [report](https://codecov.io/github/MahmoudAGawad/cros-diag-app/commit/9f77d01570e6960564c9c1a823ca4a6c6deaf83c) is empty since there are no tests present. It will start to populate once we write tests in the extension.,True,25,https://api.github.com/repos/MahmoudAGawad/cros-diag-app/pulls/25,https://github.com/MahmoudAGawad/cros-diag-app/pull/25,closed,3,1,3,1,0,0,0,0,[],2021-07-09 17:45:51+00:00,2021-07-13 16:38:49+00:00,341578.0,"3 days, 22:52:58",[],"[{'commit_sha': '9f77d01570e6960564c9c1a823ca4a6c6deaf83c', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}]",Aayush Joglekar,28949397,aayushjog@gmail.com,User,,59,,57,227
744965367,DPSL integration,"This PR attempts to integrate the [DPSL library](https://www.npmjs.com/package/cros-dpsl-js).

In this PR, only the supported telemetry methods are supported.

No integration tests, as we plan to have a E-2-E test.",True,40,https://api.github.com/repos/MahmoudAGawad/cros-diag-app/pulls/40,https://github.com/MahmoudAGawad/cros-diag-app/pull/40,closed,557,460,15,3,2,5,0,0,[],2021-09-28 16:12:50+00:00,2021-09-29 14:20:09+00:00,79639.0,22:07:19,"[{'comment_id': 717766414, 'comment_body': 'This should be 1.0.1 once the new version is published.\r\n\r\nThis is causing the check to fail.', 'comment_created': datetime.datetime(2021, 9, 28, 16, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718409735, 'comment_body': 'Those fields were refactored to make the GSOC demo work. I can move them to another PR, but I prefer to keep it here. WDYT?', 'comment_created': datetime.datetime(2021, 9, 29, 11, 21, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718411028, 'comment_body': 'unused.', 'comment_created': datetime.datetime(2021, 9, 29, 11, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718415617, 'comment_body': 'needed for importing cros-dpsl-js library.\r\n\r\n> ""moduleResolution"": ""node"",\r\n\r\n[moduleResolution](https://www.typescriptlang.org/tsconfig#moduleResolution) is needed since dpsl lib is using CommonJS syntax which is the standard for Node.js. The default is classic, which is used for older versions of Typescript (and doesn\'t work with dpsl right now).\r\n\r\n> ""noImplicitAny"": false,\r\n\r\ndpsl object from cros-dpsl-js has an implicit type Any, the default for this field is true, which prevents the usage of implicit any. The proper handling of this is to define a declaration file (.d.ts) which defines the type of the imported objects, but I am not sure if we want to mix .ts with .js files in dpsl.', 'comment_created': datetime.datetime(2021, 9, 29, 11, 30, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718463923, 'comment_body': 'I am OK to make such changes in this CL.', 'comment_created': datetime.datetime(2021, 9, 29, 12, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}]","[{'commit_sha': '0d712eacdea1ad1375fedc55f8664df8b6de085f', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15009f4af5dce23a9f97f412d63cd33aecccd95b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73f381bc4356bd19289fec9e5abd7cc6b39fdbe9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Mahmoud Aly,6995139,mahmoudabdelgawad993@gmail.com,User,,21,,2,13
744965367,DPSL integration,"This PR attempts to integrate the [DPSL library](https://www.npmjs.com/package/cros-dpsl-js).

In this PR, only the supported telemetry methods are supported.

No integration tests, as we plan to have a E-2-E test.",True,40,https://api.github.com/repos/MahmoudAGawad/cros-diag-app/pulls/40,https://github.com/MahmoudAGawad/cros-diag-app/pull/40,closed,557,460,15,3,2,5,0,0,[],2021-09-28 16:12:50+00:00,2021-09-29 14:20:09+00:00,79639.0,22:07:19,"[{'comment_id': 717766414, 'comment_body': 'This should be 1.0.1 once the new version is published.\r\n\r\nThis is causing the check to fail.', 'comment_created': datetime.datetime(2021, 9, 28, 16, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718409735, 'comment_body': 'Those fields were refactored to make the GSOC demo work. I can move them to another PR, but I prefer to keep it here. WDYT?', 'comment_created': datetime.datetime(2021, 9, 29, 11, 21, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718411028, 'comment_body': 'unused.', 'comment_created': datetime.datetime(2021, 9, 29, 11, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718415617, 'comment_body': 'needed for importing cros-dpsl-js library.\r\n\r\n> ""moduleResolution"": ""node"",\r\n\r\n[moduleResolution](https://www.typescriptlang.org/tsconfig#moduleResolution) is needed since dpsl lib is using CommonJS syntax which is the standard for Node.js. The default is classic, which is used for older versions of Typescript (and doesn\'t work with dpsl right now).\r\n\r\n> ""noImplicitAny"": false,\r\n\r\ndpsl object from cros-dpsl-js has an implicit type Any, the default for this field is true, which prevents the usage of implicit any. The proper handling of this is to define a declaration file (.d.ts) which defines the type of the imported objects, but I am not sure if we want to mix .ts with .js files in dpsl.', 'comment_created': datetime.datetime(2021, 9, 29, 11, 30, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718463923, 'comment_body': 'I am OK to make such changes in this CL.', 'comment_created': datetime.datetime(2021, 9, 29, 12, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}]","[{'commit_sha': '0d712eacdea1ad1375fedc55f8664df8b6de085f', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15009f4af5dce23a9f97f412d63cd33aecccd95b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73f381bc4356bd19289fec9e5abd7cc6b39fdbe9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Mahmoud Aly,6995139,mahmoudabdelgawad993@gmail.com,User,,21,,2,13
744965367,DPSL integration,"This PR attempts to integrate the [DPSL library](https://www.npmjs.com/package/cros-dpsl-js).

In this PR, only the supported telemetry methods are supported.

No integration tests, as we plan to have a E-2-E test.",True,40,https://api.github.com/repos/MahmoudAGawad/cros-diag-app/pulls/40,https://github.com/MahmoudAGawad/cros-diag-app/pull/40,closed,557,460,15,3,2,5,0,0,[],2021-09-28 16:12:50+00:00,2021-09-29 14:20:09+00:00,79639.0,22:07:19,"[{'comment_id': 717766414, 'comment_body': 'This should be 1.0.1 once the new version is published.\r\n\r\nThis is causing the check to fail.', 'comment_created': datetime.datetime(2021, 9, 28, 16, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718409735, 'comment_body': 'Those fields were refactored to make the GSOC demo work. I can move them to another PR, but I prefer to keep it here. WDYT?', 'comment_created': datetime.datetime(2021, 9, 29, 11, 21, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718411028, 'comment_body': 'unused.', 'comment_created': datetime.datetime(2021, 9, 29, 11, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718415617, 'comment_body': 'needed for importing cros-dpsl-js library.\r\n\r\n> ""moduleResolution"": ""node"",\r\n\r\n[moduleResolution](https://www.typescriptlang.org/tsconfig#moduleResolution) is needed since dpsl lib is using CommonJS syntax which is the standard for Node.js. The default is classic, which is used for older versions of Typescript (and doesn\'t work with dpsl right now).\r\n\r\n> ""noImplicitAny"": false,\r\n\r\ndpsl object from cros-dpsl-js has an implicit type Any, the default for this field is true, which prevents the usage of implicit any. The proper handling of this is to define a declaration file (.d.ts) which defines the type of the imported objects, but I am not sure if we want to mix .ts with .js files in dpsl.', 'comment_created': datetime.datetime(2021, 9, 29, 11, 30, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 718463923, 'comment_body': 'I am OK to make such changes in this CL.', 'comment_created': datetime.datetime(2021, 9, 29, 12, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}]","[{'commit_sha': '0d712eacdea1ad1375fedc55f8664df8b6de085f', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15009f4af5dce23a9f97f412d63cd33aecccd95b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73f381bc4356bd19289fec9e5abd7cc6b39fdbe9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Mahmoud Aly,6995139,mahmoudabdelgawad993@gmail.com,User,,21,,2,13
664519208,[app] Initialise AngularCLI project,"This PR initialises an Angular CLI Project and the following changes have been made to the boilerplate code:

- Remove boilerplate code
- Install @angular/pwa support
- Refresh PWA Cache on update
- Comment out failing dummy test
- Add @angular/material

Screenshots:

![image](https://user-images.githubusercontent.com/28949397/121160843-11768280-c86a-11eb-9262-6a3747e0ea56.png)
",True,1,https://api.github.com/repos/MahmoudAGawad/cros-diag-app/pulls/1,https://github.com/MahmoudAGawad/cros-diag-app/pull/1,closed,28905,0,27,7,7,43,0,0,[],2021-06-08 08:54:08+00:00,2021-06-16 12:06:17+00:00,702729.0,"8 days, 3:12:09","[{'comment_id': 648226823, 'comment_body': 'Do we really need this file as part of the repo?', 'comment_created': datetime.datetime(2021, 6, 9, 11, 51, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 648227568, 'comment_body': ""same comment: let's remove editor-specific files from here. Maybe add them in the upper level .gitignore"", 'comment_created': datetime.datetime(2021, 6, 9, 11, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 648230073, 'comment_body': 'Please describe what this folder represents.\r\n\r\nIs this the PWA high level folder? if so, please rename it so that it becomes self-descriptive.', 'comment_created': datetime.datetime(2021, 6, 9, 11, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 648243766, 'comment_body': 'It was an autogenerated file, removed it. 👍🏻 ', 'comment_created': datetime.datetime(2021, 6, 9, 12, 16, 34, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 648244008, 'comment_body': 'Updated to `Diagnostics Progressive Web App`', 'comment_created': datetime.datetime(2021, 6, 9, 12, 16, 58, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 648580141, 'comment_body': 'can we move test-related files into a separate folder. e.g. diagnostics-app/test/?', 'comment_created': datetime.datetime(2021, 6, 9, 18, 42, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 648583620, 'comment_body': 'for consistency with Chromium project. Can you change this to //:\r\n```\r\n// Copyright 2021 The Chromium Authors. All rights reserved.\r\n// Use of this source code is governed by a BSD-style license that can be\r\n// found in the LICENSE file.\r\n```\r\n\r\nPlease do this in the other files as well.', 'comment_created': datetime.datetime(2021, 6, 9, 18, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 648586427, 'comment_body': 'Chrome OS Diagnostics App', 'comment_created': datetime.datetime(2021, 6, 9, 18, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 648596583, 'comment_body': ""In each of these files, please follow Google's style guide: https://google.github.io/styleguide/jsguide.html#source-file-structure\r\nFor example, each file should start with @fileoverview {description}, e.g:\r\n```\r\n/**\r\n  * @fileoverview Description of file, its uses and information\r\n  * about its dependencies.\r\n  * Note: Auto-generated file.\r\n  */\r\n```"", 'comment_created': datetime.datetime(2021, 6, 9, 19, 1, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 648599627, 'comment_body': 'remove if not used.', 'comment_created': datetime.datetime(2021, 6, 9, 19, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 648610778, 'comment_body': 'same comment: would it be better to isolate test-related logic in a separate folder?', 'comment_created': datetime.datetime(2021, 6, 9, 19, 23, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 648614844, 'comment_body': ""What is the purpose of this file? It seems like you are testing LitElement? Let's not add unused code."", 'comment_created': datetime.datetime(2021, 6, 9, 19, 30, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 650016632, 'comment_body': '[Angular Test Style Guide](https://angular.io/guide/testing#test-file-name-and-location\r\n)\r\n\r\nAccording to this, there can be two ways of organising tests in an Angular project. Looks like keeping test files with component has more pros than a separate test folder. ', 'comment_created': datetime.datetime(2021, 6, 11, 14, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 650030416, 'comment_body': ""Yes, I included it as a dummy component for future references. Removed it. 👍🏻 I'll make sure to not push unused code from next time."", 'comment_created': datetime.datetime(2021, 6, 11, 14, 36, 33, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 650550437, 'comment_body': ""Thanks for sharing! Let's keep them in the same directory, then.\r\n\r\nAlso, let's not forget to add a test/ folder when it comes to integration tests, according to this: https://angular.io/guide/testing#place-your-spec-files-in-a-test-folder"", 'comment_created': datetime.datetime(2021, 6, 13, 16, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 650550703, 'comment_body': 'as discussed in the other thread, we are going to follow Angular Style guide, and leave them together in the same folder.', 'comment_created': datetime.datetime(2021, 6, 13, 16, 49, 40, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 650823454, 'comment_body': 'Done these changes in PR #4 ', 'comment_created': datetime.datetime(2021, 6, 14, 10, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 650945487, 'comment_body': 'use // instead of /* in css files as well.', 'comment_created': datetime.datetime(2021, 6, 14, 13, 26, 51, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 650957611, 'comment_body': ""let's add this header for js/ts/css/html files only"", 'comment_created': datetime.datetime(2021, 6, 14, 13, 41, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 650961242, 'comment_body': 'use // instead of /*', 'comment_created': datetime.datetime(2021, 6, 14, 13, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 650972017, 'comment_body': '/* */ is the only way to add comments in CSS.\r\n\r\nhttps://www.xanthir.com/b4U10 According to this blog, we can have // comments in CSS but it would look like:\r\n\r\n```\r\n//Copyright 2021 The Chromium Authors. All rights reserved. {}\r\n//Use of this source code is governed by a BSD-style license that can be {}\r\n//found in the LICENSE file. {}\r\n```', 'comment_created': datetime.datetime(2021, 6, 14, 13, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 650973514, 'comment_body': 'Same as the previous comment.', 'comment_created': datetime.datetime(2021, 6, 14, 13, 59, 9, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 651753456, 'comment_body': ""I looked into chromium files and found out we are using /* as you did. So, let's keep it with a **leading space** preceeding the * at the beginning of each line (starting from the second line)\r\n```\r\n/*\r\n * Copyright 2021 The Chromium Authors. All rights reserved.\r\n * Use of this source code is governed by a BSD-style license that can be\r\n * found in the LICENSE file.\r\n */\r\n ```"", 'comment_created': datetime.datetime(2021, 6, 15, 12, 45, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 651918110, 'comment_body': '\\n at the end?', 'comment_created': datetime.datetime(2021, 6, 15, 15, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 651921740, 'comment_body': 'Do we need polyfills? Why? :)', 'comment_created': datetime.datetime(2021, 6, 15, 15, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 651924370, 'comment_body': 'Can you please add a brief comments for each dependency? It will help to understand why do we need them all.', 'comment_created': datetime.datetime(2021, 6, 15, 15, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 651925310, 'comment_body': ""I don't see that it's used somewhere in the code. Do you need it?"", 'comment_created': datetime.datetime(2021, 6, 15, 15, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 651926281, 'comment_body': 'This is used only for testing, should we put it under ""dependencies""? Are there some sort of test dependencies?', 'comment_created': datetime.datetime(2021, 6, 15, 15, 50, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 651927855, 'comment_body': ""Same. Don't see that it's used in the code. Do we need it?"", 'comment_created': datetime.datetime(2021, 6, 15, 15, 51, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 651934948, 'comment_body': 'Added. 👍🏻 ', 'comment_created': datetime.datetime(2021, 6, 15, 16, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 651937487, 'comment_body': ""Yes. This file is automatically generated by Angular CLI and was earlier used to support IE and older browsers.\r\n\r\nAlthough we don't need to support them, there are some ES6+ and Typescript features that might not be fully compatible yet. Hence, according to some sources, it is safe to have this file."", 'comment_created': datetime.datetime(2021, 6, 15, 16, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 651939692, 'comment_body': 'These were added automatically by the CLI and will be required in the future. For eg. @angular/animations is used in PR #8 for the sidebar module. The are used internally by the modules that are installed.', 'comment_created': datetime.datetime(2021, 6, 15, 16, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 651941454, 'comment_body': ""Same as above. Yes, all the dependencies that are listed automatically are used in the code. They're either imported in `app.module.ts` or will be needed very soon."", 'comment_created': datetime.datetime(2021, 6, 15, 16, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 651944477, 'comment_body': '- `tslib` is a runtime library for TypeScript that contains all of the TypeScript helper functions.\r\n- `zone.js` is essential to Angular for handling change detections. It allows Angular to know when the UI needs to be refreshed.\r\n\r\nSo both of them are core essentials of Angular! ', 'comment_created': datetime.datetime(2021, 6, 15, 16, 12, 34, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 652010317, 'comment_body': 'Sounds good if this required for this PR, but not PR 8', 'comment_created': datetime.datetime(2021, 6, 15, 17, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 652011880, 'comment_body': 'We should add them when we need them.', 'comment_created': datetime.datetime(2021, 6, 15, 17, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 652518363, 'comment_body': 'I had a doubt regarding `rxjs` not being used directly. It is being used as a dependency by `@angular/material`\r\n\r\n```\r\n""peerDependencies"": {\r\n    ""@angular/animations"": ""^12.0.0 || ^13.0.0-0"",\r\n    ""@angular/cdk"": ""12.0.3"",\r\n    ""@angular/core"": ""^12.0.0 || ^13.0.0-0"",\r\n    ""@angular/common"": ""^12.0.0 || ^13.0.0-0"",\r\n    ""@angular/forms"": ""^12.0.0 || ^13.0.0-0"",\r\n    ""rxjs"": ""^6.5.3""\r\n  }\r\n ```\r\n\r\nSo all of them are essential in this PR. 👍🏻 ', 'comment_created': datetime.datetime(2021, 6, 16, 9, 30, 15, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 652523827, 'comment_body': ""I've added them, please have a look."", 'comment_created': datetime.datetime(2021, 6, 16, 9, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 652602667, 'comment_body': '`This document` -- why does it refer to some document?', 'comment_created': datetime.datetime(2021, 6, 16, 11, 35, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 652604081, 'comment_body': 'nit: please be consistent with dots at the end of comments.', 'comment_created': datetime.datetime(2021, 6, 16, 11, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 652604824, 'comment_body': 'Thanks for double check!', 'comment_created': datetime.datetime(2021, 6, 16, 11, 38, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Lamzin', 'type': 'User'}, {'comment_id': 652611543, 'comment_body': 'Fixed it. 👍🏻 ', 'comment_created': datetime.datetime(2021, 6, 16, 11, 48, 18, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 652611842, 'comment_body': 'Thanks for pointing out!', 'comment_created': datetime.datetime(2021, 6, 16, 11, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}]","[{'commit_sha': '06fdea6d5dbf4dd3ce0b7462d113658b9ad5bac1', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '145cedf88176c589240d8e2ac950e1082d20b5e9', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71c519810f018f614b73c65dea261578d07cdf84', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0325eb1a287dbe73d8f2edf0eb8eb10b431a07f', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed7f1ac6156340f10cc002cd4bdcbbf412bc683c', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33bebae94bba0286674da4eabfd6032b20de8ac8', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '208a4b77f2cc662034e6900a5f1492bf0815c1cb', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}]",Aayush Joglekar,28949397,aayushjog@gmail.com,User,,59,,57,227
682575699,[ext] Add dpsl types,To be merged after #20 ,True,21,https://api.github.com/repos/MahmoudAGawad/cros-diag-app/pulls/21,https://github.com/MahmoudAGawad/cros-diag-app/pull/21,closed,239,0,2,1,0,7,0,0,[],2021-07-02 12:05:50+00:00,2021-07-07 13:42:52+00:00,437822.0,"5 days, 1:37:02","[{'comment_id': 663857052, 'comment_body': 'is there more bound type than unknown?', 'comment_created': datetime.datetime(2021, 7, 5, 11, 28, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 663857367, 'comment_body': 'FanInfo should be an array.\r\n\r\nhttps://source.chromium.org/chromium/chromium/src/+/main:chromeos/components/telemetry_extension_ui/resources/dpsl/dpsl_types.js;drc=043c35d129e66b4ebe45509c4070a39a10fbd06f;l=80', 'comment_created': datetime.datetime(2021, 7, 5, 11, 28, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 663858775, 'comment_body': 'not sure if we need this. It was declared in dpsl/ for using inside the library code, not sure if the extension would need this?', 'comment_created': datetime.datetime(2021, 7, 5, 11, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 664072259, 'comment_body': 'These are internal definitions in dpsl. As a user of the library, you are going to call very specific event listeners, e.g. dpsl.system_events.bluetooth.addOnAdapterAddedListener(callback). More examples: https://source.chromium.org/chromium/chromium/src/+/main:chromeos/components/telemetry_extension_ui/test/untrusted_browsertest.js?q=dpsl.system_events ', 'comment_created': datetime.datetime(2021, 7, 5, 17, 53, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 664385893, 'comment_body': '>/**\r\n     * Starts listening on bluetooth-adapter-added events.\r\n     * @param {function()} callback\r\n     * @public\r\n     */\r\n    addOnAdapterAddedListener(callback) {\r\n      this.eventTarget.addEventListener(\r\n          EVENTS.BLUETOOTH_ADAPTER_ADDED, callback);\r\n    }\r\n    \r\n   Will I receive anything in the callback parameters? If yes, then where can I find their schemas?', 'comment_created': datetime.datetime(2021, 7, 6, 9, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}, {'comment_id': 664483660, 'comment_body': 'Callbacks[1] receive no input. It is just state change event, if you need more information, you can call the appropriate API. Example, you receive a callback for bluetooth-adapter-added, then you consult dpsl.telemetry.getBluetoothInfo() and get dpsl.BluetoothInfo[2] as a result.\r\n\r\n[1] https://source.chromium.org/chromium/chromium/src/+/main:chromeos/components/telemetry_extension_ui/resources/dpsl/events_service.js\r\n\r\n[2] https://source.chromium.org/chromium/chromium/src/+/main:chromeos/components/telemetry_extension_ui/resources/dpsl/dpsl_types.js;drc=043c35d129e66b4ebe45509c4070a39a10fbd06f;l=52', 'comment_created': datetime.datetime(2021, 7, 6, 11, 49, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MahmoudAGawad', 'type': 'User'}, {'comment_id': 664497247, 'comment_body': ""Makes sense. Thanks! 👍🏻 I've removed them from code."", 'comment_created': datetime.datetime(2021, 7, 6, 12, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'zerefwayne', 'type': 'User'}]","[{'commit_sha': '4a74bf58eaeaed896c026567945f81d56af24fc6', 'committer_username': 'zerefwayne', 'committer_name': 'Aayush Joglekar', 'committer_email': 'aayushjog@gmail.com', 'commit_date': datetime.datetime(2017, 5, 25, 10, 6, 5, tzinfo=datetime.timezone.utc)}]",Aayush Joglekar,28949397,aayushjog@gmail.com,User,,59,,57,227

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
374634611,cros-diag-app,MahmoudAGawad/cros-diag-app,TypeScript,2,5,3,2,27,10,4,5,"[{'id': 714941777, 'number': 39, 'closed': None, 'created': datetime.datetime(2021, 8, 18, 10, 16, 39, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 588, 'deletions': 13, 'state': 'open'}, {'id': 714788426, 'number': 38, 'closed': None, 'created': datetime.datetime(2021, 8, 18, 6, 35, 47, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 550, 'deletions': 13, 'state': 'open'}, {'id': 714524689, 'number': 37, 'closed': None, 'created': datetime.datetime(2021, 8, 17, 19, 55, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 237, 'deletions': 3, 'state': 'open'}, {'id': 712889967, 'number': 35, 'closed': datetime.datetime(2021, 8, 17, 19, 55, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 7, 27, 17, tzinfo=datetime.timezone.utc), 'time_taken': 217675.0, 'time_delta': '2 days, 12:27:55', 'additions': 942, 'deletions': 35, 'state': 'closed'}, {'id': 709283132, 'number': 34, 'closed': datetime.datetime(2021, 8, 16, 13, 3, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 17, 2, 37, tzinfo=datetime.timezone.utc), 'time_taken': 417658.0, 'time_delta': '4 days, 20:00:58', 'additions': 706, 'deletions': 32, 'state': 'closed'}, {'id': 707377604, 'number': 33, 'closed': datetime.datetime(2021, 8, 10, 14, 55, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 13, 54, 32, tzinfo=datetime.timezone.utc), 'time_taken': 3686.0, 'time_delta': '1:01:26', 'additions': 740, 'deletions': 35, 'state': 'closed'}, {'id': 701955878, 'number': 32, 'closed': datetime.datetime(2021, 8, 3, 11, 12, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 4, 59, 18, tzinfo=datetime.timezone.utc), 'time_taken': 22365.0, 'time_delta': '6:12:45', 'additions': 24, 'deletions': 24, 'state': 'closed'}, {'id': 698852456, 'number': 30, 'closed': datetime.datetime(2021, 8, 3, 4, 52, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 16, 47, 22, tzinfo=datetime.timezone.utc), 'time_taken': 475517.0, 'time_delta': '5 days, 12:05:17', 'additions': 686, 'deletions': 7, 'state': 'closed'}, {'id': 697191299, 'number': 28, 'closed': datetime.datetime(2021, 7, 27, 17, 52, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 16, 50, 15, tzinfo=datetime.timezone.utc), 'time_taken': 90132.0, 'time_delta': '1 day, 1:02:12', 'additions': 14, 'deletions': 6, 'state': 'closed'}, {'id': 694060240, 'number': 26, 'closed': datetime.datetime(2021, 7, 22, 18, 6, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 5, 25, 51, tzinfo=datetime.timezone.utc), 'time_taken': 132047.0, 'time_delta': '1 day, 12:40:47', 'additions': 634, 'deletions': 0, 'state': 'closed'}, {'id': 686948552, 'number': 25, 'closed': datetime.datetime(2021, 7, 13, 16, 38, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 17, 45, 51, tzinfo=datetime.timezone.utc), 'time_taken': 341578.0, 'time_delta': '3 days, 22:52:58', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 686936924, 'number': 24, 'closed': datetime.datetime(2021, 7, 23, 5, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 17, 21, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1165911.0, 'time_delta': '13 days, 11:51:51', 'additions': 335, 'deletions': 0, 'state': 'closed'}, {'id': 685346641, 'number': 23, 'closed': datetime.datetime(2021, 7, 8, 10, 30, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 16, 35, 40, tzinfo=datetime.timezone.utc), 'time_taken': 64497.0, 'time_delta': '17:54:57', 'additions': 26, 'deletions': 17, 'state': 'closed'}, {'id': 684358602, 'number': 22, 'closed': datetime.datetime(2021, 7, 7, 13, 33, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 13, 3, 55, tzinfo=datetime.timezone.utc), 'time_taken': 88195.0, 'time_delta': '1 day, 0:29:55', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 682575699, 'number': 21, 'closed': datetime.datetime(2021, 7, 7, 13, 42, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 12, 5, 50, tzinfo=datetime.timezone.utc), 'time_taken': 437822.0, 'time_delta': '5 days, 1:37:02', 'additions': 239, 'deletions': 0, 'state': 'closed'}, {'id': 679109271, 'number': 20, 'closed': datetime.datetime(2021, 7, 7, 13, 34, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 14, 40, 6, tzinfo=datetime.timezone.utc), 'time_taken': 773649.0, 'time_delta': '8 days, 22:54:09', 'additions': 11099, 'deletions': 2, 'state': 'closed'}, {'id': 674658279, 'number': 18, 'closed': datetime.datetime(2021, 6, 23, 10, 15, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 15, 26, 9, tzinfo=datetime.timezone.utc), 'time_taken': 154133.0, 'time_delta': '1 day, 18:48:53', 'additions': 33, 'deletions': 24, 'state': 'closed'}, {'id': 673867825, 'number': 15, 'closed': datetime.datetime(2021, 6, 21, 12, 10, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 11, 42, 59, tzinfo=datetime.timezone.utc), 'time_taken': 174457.0, 'time_delta': '2 days, 0:27:37', 'additions': 25, 'deletions': 1, 'state': 'closed'}, {'id': 673866783, 'number': 14, 'closed': datetime.datetime(2021, 6, 19, 11, 37, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 11, 34, 13, tzinfo=datetime.timezone.utc), 'time_taken': 222.0, 'time_delta': '0:03:42', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 673866104, 'number': 13, 'closed': datetime.datetime(2021, 6, 19, 11, 37, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 11, 28, 48, tzinfo=datetime.timezone.utc), 'time_taken': 509.0, 'time_delta': '0:08:29', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 673406165, 'number': 12, 'closed': datetime.datetime(2021, 6, 28, 12, 53, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 11, 45, 37, tzinfo=datetime.timezone.utc), 'time_taken': 868045.0, 'time_delta': '10 days, 1:07:25', 'additions': 1019, 'deletions': 46, 'state': 'closed'}, {'id': 672418372, 'number': 11, 'closed': datetime.datetime(2021, 7, 22, 15, 57, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 9, 9, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3048441.0, 'time_delta': '35 days, 6:47:21', 'additions': 101, 'deletions': 11, 'state': 'closed'}, {'id': 671390876, 'number': 10, 'closed': datetime.datetime(2021, 7, 20, 14, 51, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 12, 5, 55, tzinfo=datetime.timezone.utc), 'time_taken': 2947531.0, 'time_delta': '34 days, 2:45:31', 'additions': 139, 'deletions': 23, 'state': 'closed'}, {'id': 670360111, 'number': 9, 'closed': datetime.datetime(2021, 7, 15, 22, 33, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 12, 28, 32, tzinfo=datetime.timezone.utc), 'time_taken': 2628293.0, 'time_delta': '30 days, 10:04:53', 'additions': 176, 'deletions': 10, 'state': 'closed'}, {'id': 670288909, 'number': 8, 'closed': datetime.datetime(2021, 7, 9, 14, 57, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 10, 44, 17, tzinfo=datetime.timezone.utc), 'time_taken': 2088822.0, 'time_delta': '24 days, 4:13:42', 'additions': 273, 'deletions': 22, 'state': 'closed'}, {'id': 670077926, 'number': 6, 'closed': datetime.datetime(2021, 7, 8, 18, 42, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 5, 51, 10, tzinfo=datetime.timezone.utc), 'time_taken': 2033483.0, 'time_delta': '23 days, 12:51:23', 'additions': 437, 'deletions': 81, 'state': 'closed'}, {'id': 669437915, 'number': 4, 'closed': datetime.datetime(2021, 6, 28, 13, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 10, 16, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1221453.0, 'time_delta': '14 days, 3:17:33', 'additions': 105, 'deletions': 13, 'state': 'closed'}, {'id': 669436006, 'number': 3, 'closed': datetime.datetime(2021, 6, 18, 11, 58, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 10, 13, 30, tzinfo=datetime.timezone.utc), 'time_taken': 351919.0, 'time_delta': '4 days, 1:45:19', 'additions': 146, 'deletions': 31, 'state': 'closed'}, {'id': 665860701, 'number': 2, 'closed': datetime.datetime(2021, 6, 14, 14, 3, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 12, 29, 17, tzinfo=datetime.timezone.utc), 'time_taken': 437658.0, 'time_delta': '5 days, 1:34:18', 'additions': 29433, 'deletions': 0, 'state': 'closed'}, {'id': 664519208, 'number': 1, 'closed': datetime.datetime(2021, 6, 16, 12, 6, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 8, 54, 8, tzinfo=datetime.timezone.utc), 'time_taken': 702729.0, 'time_delta': '8 days, 3:12:09', 'additions': 28905, 'deletions': 0, 'state': 'closed'}]"
