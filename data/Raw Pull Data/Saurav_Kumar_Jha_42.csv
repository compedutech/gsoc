pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1432995776,AIRAVATA-3594-admin-dashboard-additions,"This PR was raised during Google Summer of Code 2023
It contains additions to the admin statistics dashboard which was the requirements of Airavata-3594 Jira EPIC",False,184,https://api.github.com/repos/apache/airavata-django-portal/pulls/184,https://github.com/apache/airavata-django-portal/pull/184,open,1291,263,18,24,0,2,0,0,[],2023-07-13 12:06:44+00:00,,0.0,,"[{'comment_id': 1312042392, 'comment_body': 'You can do this by setting\r\n\r\n```\r\npermission_classes = (IsAuthenticated, IsInAdminsGroupPermission,)\r\n```\r\n\r\nSee IAMUserViewSet for example.', 'comment_created': datetime.datetime(2023, 8, 31, 18, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}, {'comment_id': 1391351420, 'comment_body': 'Thanks @machristie for review and comments. I have added the update based on your comment.', 'comment_created': datetime.datetime(2023, 11, 13, 16, 25, 16, tzinfo=datetime.timezone.utc), 'commenter': 'SauravKumarJhaNITW', 'type': 'User'}]","[{'commit_sha': '7ccc3fece549ffb1cbfd996c8c7e18c62789a230', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8605db3510109b58fa38d2736598b6ec46cddd5b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '019380a53018649e672297d65e8a3c8a0512b2cc', 'committer_username': 'SauravKumarJhaNITW', 'committer_name': 'Saurav Kumar Jha', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 21, 18, 7, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02c7c7ae4830dfc9291e35b8546658bb3b647667', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ad2475cd2ed5525e0b11aec34577a37753a5ab2c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '64eeb1050b7935b15814326a550de8c8eefe0923', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f49d114debbd4f72ad817511ecb19eda6a75fc1b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7644d95f8fb93587bea06707b771568978268ba4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf877615ca8c6d91a4d3a1ee08076c002dde2ecb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0e00588c9dc9a255e77c1e85f9514e9efaddff2d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8ba0662f61a479172e53c50ffd57edc72618a60f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '19550885c8f56962fb26df26493a9349c98d6e34', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a7a7da345e3e67ac5379ab1d1da150bd254bbabe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8201a2beb33703ddd4bf3fe79c3395f6f3490738', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '48f199fa7fa6ae717477c579c82df2458a39970f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f8ac1ec4a6a27ff41bbe93d5d40e43449af28ca4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f8ae67c339ea2e55751c0478b01f18f6c922b6c7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c8b59c02bd42fde3216fa4e9d5e9f0838a3c7707', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a15f5bb73e22a095735ccaf3a6cf41376895bc1c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5f6ec5eeaca2294ffc5297a3482934e9517f06b7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd26f97e596b8bf92d5e6152b2f3abc623d4b0479', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f247452b86e090babd26a50da7d06d3043743d1c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '82dc688d42d57334e4fcbe57e08b675aae9e465b', 'committer_username': 'SauravKumarJhaNITW', 'committer_name': 'Saurav Kumar Jha', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 21, 18, 7, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86774aa66a42c014b456fa243ae258dcfeb7bf77', 'committer_username': 'SauravKumarJhaNITW', 'committer_name': 'Saurav Kumar Jha', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 21, 18, 7, 13, tzinfo=datetime.timezone.utc)}]",Saurav Kumar Jha,64098318,,User,,17,,4,2
1473037937,Airavata 3594 admin dashboard additions,"This PR was raised during Google Summer of Code 2023
It contains methods, models, configurations which was the requirements of Airavata-3594 Jira EPIC
added a method to return UserGroups filtered by creation date
added a method to return cpuUsages within the specified date, corresponding models and configurations",False,433,https://api.github.com/repos/apache/airavata/pulls/433,https://github.com/apache/airavata/pull/433,open,14018,6314,38,5,1,3,0,0,[],2023-08-12 19:27:32+00:00,,0.0,,"[{'comment_id': 1312006222, 'comment_body': ""This double for loop isn't going to scale well for gateways with a large number of jobs. It would be better to do this all in the query. I would suggest something like this:\r\n\r\n```sql\r\nselect j.* from JOB j\r\ninner join PROCESS p on p.PROCESS_ID = j.PROCESS_ID\r\ninner join EXPERIMENT e on e.EXPERIMENT_ID = p.EXPERIMENT_ID\r\nwhere e.GATEWAY_ID = ?\r\nand exists (select 1 from JOB_STATUS js where js.JOB_ID = j.JOB_ID and js.STATE = ? and js.TIME_OF_STATE_CHANGE <= ?)\r\nand exists (select 1 from JOB_STATUS js where js.JOB_ID = j.JOB_ID and (js.STATE = ? or js.STATE = ? or js.STATE = ?) and js.TIME_OF_STATE_CHANGE >= ?)\r\n```"", 'comment_created': datetime.datetime(2023, 8, 31, 18, 1, 2, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}, {'comment_id': 1312007360, 'comment_body': ""I'm pretty sure this won't work. Mapping a JobStatus back to an Entity won't populate the extra fields (like `getJobId()`) that are stored on the database. But see my comment above, if that approach works you won't need to do this."", 'comment_created': datetime.datetime(2023, 8, 31, 18, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}, {'comment_id': 1312011740, 'comment_body': ""Do you need this query? You've already loaded the ExperimentModel so I think you can just use `experiment.getUserConfigurationData().getComputationalResourceScheduling().getTotalCPUCount()`."", 'comment_created': datetime.datetime(2023, 8, 31, 18, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'machristie', 'type': 'User'}]","[{'commit_sha': '34d83abb1bc41d1973b7ea1728abf0686a75d1b3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c3e87e3b34264a3c2a9bfd2640ad85f01c8c2389', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b0f1af5f81cdba5d924fc256e3ca9426110f8ae7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9e394ed84c764b2a35ecc88aedefc331d53e9a9b', 'committer_username': 'SauravKumarJhaNITW', 'committer_name': 'Saurav Kumar Jha', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 21, 18, 7, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c1c7e72aacd35c6f861efb603c76cd7c725f8f4', 'committer_username': 'SauravKumarJhaNITW', 'committer_name': 'Saurav Kumar Jha', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 21, 18, 7, 13, tzinfo=datetime.timezone.utc)}]",Saurav Kumar Jha,64098318,,User,,17,,4,2

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
102179100,airavata-django-portal,apache/airavata-django-portal,Python,42,32,15,26,2184,68,101,68,"[{'id': 1432995776, 'number': 184, 'closed': None, 'created': datetime.datetime(2023, 7, 13, 12, 6, 44, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1291, 'deletions': 263, 'state': 'open'}, {'id': 1432994600, 'number': 183, 'closed': datetime.datetime(2023, 7, 13, 12, 6, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 13, 12, 6, 2, tzinfo=datetime.timezone.utc), 'time_taken': 19.0, 'time_delta': '0:00:19', 'additions': 124, 'deletions': 4, 'state': 'closed'}]"
16338711,airavata,apache/airavata,Java,116,110,26,105,10336,79,96,79,"[{'id': 1473037937, 'number': 433, 'closed': None, 'created': datetime.datetime(2023, 8, 12, 19, 27, 32, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 14018, 'deletions': 6314, 'state': 'open'}, {'id': 1429653630, 'number': 431, 'closed': datetime.datetime(2023, 8, 31, 17, 31, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 11, 15, 1, 54, tzinfo=datetime.timezone.utc), 'time_taken': 4415370.0, 'time_delta': '51 days, 2:29:30', 'additions': 2, 'deletions': 0, 'state': 'closed'}]"
