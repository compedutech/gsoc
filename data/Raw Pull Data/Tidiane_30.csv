pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
650110359,Implemented BaseMessageBlock and custom block types,See #1 ,True,2,https://api.github.com/repos/wagtail/wagtail-live/pulls/2,https://github.com/wagtail/wagtail-live/pull/2,closed,74,2,2,1,0,0,0,0,[],2021-05-21 16:13:17+00:00,2021-05-22 12:08:30+00:00,71713.0,19:55:13,[],"[{'commit_sha': '335ddb24c33659cb4eb368d0a6d28d1a33d51e94', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Tidiane Dia,71412737,,User,,33,,3,10
650630316,Added LivePageMixin class,See #3 ,True,4,https://api.github.com/repos/wagtail/wagtail-live/pulls/4,https://github.com/wagtail/wagtail-live/pull/4,closed,62,1,1,2,0,2,0,0,[],2021-05-22 13:44:42+00:00,2021-05-22 20:58:50+00:00,26048.0,7:14:08,"[{'comment_id': 637408030, 'comment_body': ""Doesn't this need `null=True` too?\r\n\r\nIt might be a good moment to start adding some tests. ;)"", 'comment_created': datetime.datetime(2021, 5, 22, 14, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'allcaps', 'type': 'User'}, {'comment_id': 637408429, 'comment_body': 'Yes I think it needs it.\r\n\r\nCan you please show me a test file in wagtail that I will inspire from or maybe just some guidelines on what/how to test?', 'comment_created': datetime.datetime(2021, 5, 22, 14, 8, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}]","[{'commit_sha': '875ceca95b5bcf5d0377f81c880ee648e845980a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1e5bdd880bd9b1a7ea58e92054ea486a1cb14665', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Tidiane Dia,71412737,,User,,33,,3,10
660830581,Live receivers,"I tried to clean the Receiver classes following some of @lucasmoeskops suggestions and made a more structured PR(I really tried but the latest commits from 'Typo fix tutorial' aren't very relevant). Each commit addresses one 'topic'.

Processing images still fails!

An initial getting started tutorial is available on `docs/getting-started/tutorial.md`.

",True,11,https://api.github.com/repos/wagtail/wagtail-live/pulls/11,https://github.com/wagtail/wagtail-live/pull/11,closed,928,48,13,20,0,35,0,0,[],2021-06-03 11:35:10+00:00,2021-06-07 20:00:43+00:00,375933.0,"4 days, 8:25:33","[{'comment_id': 644790955, 'comment_body': '```suggestion\r\nWagtail Live needs the following information to communicate with your app:\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 26, 49, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644791327, 'comment_body': '```suggestion\r\n    We will only need bot tokens for our live blog.\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644791651, 'comment_body': ""```suggestion\r\n    In your app's **Basic Information** page, navigate to **OAuth & Permissions** \r\n```"", 'comment_created': datetime.datetime(2021, 6, 3, 13, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644792525, 'comment_body': 'Is this line deliberately quoted?', 'comment_created': datetime.datetime(2021, 6, 3, 13, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644792723, 'comment_body': 'Are these lines deliberately quoted?', 'comment_created': datetime.datetime(2021, 6, 3, 13, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644793254, 'comment_body': ""```suggestion\r\n    Scroll down to **App Credentials**. You'll find your Signing Secret there. Copy it and keep it in a safe\r\n```"", 'comment_created': datetime.datetime(2021, 6, 3, 13, 29, 35, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644794826, 'comment_body': '```suggestion\r\n$ python3 manage.py makemigrations\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 31, 30, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644794989, 'comment_body': '```suggestion\r\n$ python3 manage.py migrate\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 31, 40, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644795134, 'comment_body': '```suggestion\r\n$ python3 manage.py createsuperuser\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 31, 53, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644795665, 'comment_body': '```suggestion\r\naccessible URL. We use a development proxy (ngrok) that will create a public URL and tunnel requests to our own \r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 32, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644796526, 'comment_body': '```suggestion\r\nNow we can start the server. Make sure ngrok is running on port 8000.\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 33, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644796652, 'comment_body': '```suggestion\r\n$ python3 manage.py runserver\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644797763, 'comment_body': ""```suggestion\r\nYou'll be asked to type a **Request URL**. Get the URL generated by ngrok (the one that that starts with https://)\r\n```"", 'comment_created': datetime.datetime(2021, 6, 3, 13, 35, 5, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644798065, 'comment_body': '```suggestion\r\nFor example, if your generated URL is something like https://e54acd3a20b3.ngrok.io, the **Request URL** you\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644799344, 'comment_body': '```suggestion\r\nChoose the `message.channels` event and hit the `Save Changes` button. This enables your bot to listen for messages in public channels that it is added to.\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 37, 8, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644799836, 'comment_body': '```suggestion\r\nCreate a new Live Blog Page with the title of your preference. To find the identifier of the channel you created,\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 13, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644800124, 'comment_body': ""```suggestion\r\nFor example, if you go on your channel's page and the URL is https://app.slack.com/client/T023G8L63FS/C024931MDK3,\r\n```"", 'comment_created': datetime.datetime(2021, 6, 3, 13, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 644814310, 'comment_body': 'Yes, quoted from Slack API docs.', 'comment_created': datetime.datetime(2021, 6, 3, 13, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 644815823, 'comment_body': 'Yes, same as above.', 'comment_created': datetime.datetime(2021, 6, 3, 13, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 645031093, 'comment_body': '**Suggestion:** can we wrap this in a Python code block to ensure proper syntax highlighting? \r\n', 'comment_created': datetime.datetime(2021, 6, 3, 18, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645033129, 'comment_body': '```suggestion\r\n```python\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 18, 26, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645034489, 'comment_body': '```suggestion\r\nWe can now create our first `LiveBlogPage`. Add the following in `liveblog/models.py`:\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 18, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645035092, 'comment_body': '```suggestion\r\n```python\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 18, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645035733, 'comment_body': '```suggestion\r\nAdd the following in your `settings/base.py` file:\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 18, 29, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645047202, 'comment_body': '**Question, non-blocking:** I am using the Slack Desktop client. Is there an easy way for me to find out what my channel identifier is from the desktop app?', 'comment_created': datetime.datetime(2021, 6, 3, 18, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645049858, 'comment_body': ""**Thought:** I found this to be a bit confusing. I expected to enter the channel name but instead I must enter a channel identifier. Wouldn't calling this field 'channel identifier' be more appropriate?"", 'comment_created': datetime.datetime(2021, 6, 3, 18, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645058203, 'comment_body': '```suggestion\r\n```python\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 19, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645059804, 'comment_body': '```suggestion\r\n""""""How to use it?\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 19, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645064305, 'comment_body': 'I assume this should be `LivePostBlock`?\r\n```suggestion\r\n            live_post (LivePostBlock): Live post which content will be cleared.\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 19, 17, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645064472, 'comment_body': '```suggestion\r\n            live_post (LivePostBlock): Live post to update.\r\n```', 'comment_created': datetime.datetime(2021, 6, 3, 19, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 645075196, 'comment_body': 'Sure!', 'comment_created': datetime.datetime(2021, 6, 3, 19, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 645076428, 'comment_body': ""This is the only way I found but I haven't given it a deep look. An easier way may certainly exist, I will check that."", 'comment_created': datetime.datetime(2021, 6, 3, 19, 39, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 645077910, 'comment_body': 'I had this thought too. Maybe we can have two fields, `channel_name` and `channel_id`?', 'comment_created': datetime.datetime(2021, 6, 3, 19, 41, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 645078350, 'comment_body': 'Yup!', 'comment_created': datetime.datetime(2021, 6, 3, 19, 42, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 646896454, 'comment_body': 'I changed `channel_name` to `channel_id`.', 'comment_created': datetime.datetime(2021, 6, 7, 19, 54, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}]","[{'commit_sha': '106f7616461ec40ff4b24a8076dfe9b0d8553dc5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bbbc875e7b76d23edb24096ba51f3d6451d9f1e3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8eef09f73f373543a394644957ea90033c046e16', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cb03666e2eb2ec9b52b6aa2c5d1989f3080fbc3f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c43ac073f2b36e2b2fe55ab0d181bda2762ae8e1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '775dc8abca2f513958a2d93a6ea5f1a203951a4b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab34dd48ed8c870c07ad763dcf28203a5b0e062a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dc1160b290e7bab2b6dd7c0e9702550fafe694b7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4151c447d2e2cf960f65f9ccb862c0d546e9187b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55fd9d0ffda1fd050f845757d605e63d710cb65e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4fd5d8a81db814a91c8b6cbd935d8f20c606d4c3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f2acae957b680ba0763fbb1eb0df1e85558d8e43', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '518ff6f46c74cf823a99c9ba76222db76dea6248', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5de7172eda4aa37cbf8438f78c5225bf1985bb42', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8a3414d4151b1317c6235b710acfe2c1c7273ab', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae00fc9f5be9c6f15203c8e2a41699f990268bb6', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08ab87e09c8cf7ea9f21ad8e4fefed18faf78ff5', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92a1b2d43ccf410c02e55cff6ec2b499e90de2d8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd9ae37e9db5fd2f2531c5c27a8789de248f3a3cb', 'committer_username': 'allcaps', 'committer_name': 'Coen van der Kamp', 'committer_email': None, 'commit_date': datetime.datetime(2012, 7, 13, 11, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e914ef8c3e35956e40ac840c0cc20b5b6a0bb2c', 'committer_username': 'allcaps', 'committer_name': 'Coen van der Kamp', 'committer_email': None, 'commit_date': datetime.datetime(2012, 7, 13, 11, 29, tzinfo=datetime.timezone.utc)}]",Tidiane Dia,71412737,,User,,33,,3,10
676973148,Webhook Receiver Mixin,,True,47,https://api.github.com/repos/wagtail/wagtail-live/pulls/47,https://github.com/wagtail/wagtail-live/pull/47,closed,631,107,16,29,3,9,0,0,[],2021-06-24 10:06:40+00:00,2021-06-25 13:03:35+00:00,97015.0,"1 day, 2:56:55","[{'comment_id': 657877323, 'comment_body': '**Suggestion:** could we perhaps include the name of the receiver used? Including the value of `WAGTAIL_LIVE_RECEIVER` in this message should be enough.', 'comment_created': datetime.datetime(2021, 6, 24, 11, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 657879993, 'comment_body': '**Suggestion (non-blocking):** could we make this more robust by checking if the header is set before trying to use it?', 'comment_created': datetime.datetime(2021, 6, 24, 11, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 657895366, 'comment_body': 'I don\'t understand, like ""The receiver receiver-chosen isn\'t supported"" ?', 'comment_created': datetime.datetime(2021, 6, 24, 12, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 657896503, 'comment_body': 'I think that if the request arrives here, then it means it comes from Slack and we can assume that Slack has put the header here imo.', 'comment_created': datetime.datetime(2021, 6, 24, 12, 22, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 657897408, 'comment_body': ""I meant that it would show a message like this:\r\n> The receiver myapp.receivers.MyFaultyReciver doesn't inherit from wagtail_live.receivers.BaseMessageReceiver"", 'comment_created': datetime.datetime(2021, 6, 24, 12, 23, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 657904361, 'comment_body': ""My understanding is that here we're checking if this request _really_ is from Slack. It could be a bot or something that didn't provide the header. Anyway, my point being that this code could crash and cause a 500 server error. I don't think that is big deal though as it's rare something other than Slack will ever hit this url.\r\n"", 'comment_created': datetime.datetime(2021, 6, 24, 12, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 657913794, 'comment_body': ""Ah ok, yes it's more informative indeed. "", 'comment_created': datetime.datetime(2021, 6, 24, 12, 47, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 657914874, 'comment_body': 'I get your point now. You are right!', 'comment_created': datetime.datetime(2021, 6, 24, 12, 48, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 657922672, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2021, 6, 24, 12, 57, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}]","[{'commit_sha': '4d98acf7bb3de5b97d31bb90340b318e27e15e1d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6a9fd08b9fa327f4fa7b08c14f9cdc18622d6cb3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a3f28f94d9cf1d0525447fe5e42b7c8f79e588d1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c8a53716054d7e820af4a9d93f6e4e1c79a1a97', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae5750f98d68163dd565195022a8fa8a5518fc39', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be07a3513d135715d84310dc77f529879e64bbc4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a694e4bdc916aeb259ae2ba2bc35d32823a14b3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b77ed168dc2d4e490a55551f7963ed9f892935cb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '339d8a2fbfe211790c2a8d6a3f6b601bfe34078b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd0daf50d52c9a2af3eb65725937fb5412daeed70', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b731ed75ec8568ce27185587bc4e54d61f71bb01', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2ab05126c358d7963e425d808e7390644a62bd06', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '227b892fd3b53429de7bbd92d2f0255613a3aa60', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd26335f7e641242289ec4af580b8c88144d5d8ab', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16adeb583efc2981d9f6ec8fceda3cce1b5cbba3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '23bfb195e53bd162628f592401b65a06eb5f0c03', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7d467e173697ae14aa78176d7cd422bc2a0e271f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4b8fe9783a5808b575a4610af2fd6dc97eac1220', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '38d30cd7bb908891e8443b5ec7b55a95e147b23d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf969fefa867fac2efc31071eeb92130e39b75b3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1551194a4e2abe6ea86533b211c4909a4f24a81d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e476cc133bad6ac4e8f1b045c6ce243c279f8aaa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '80d0a816b8b76c2b260d87ca9f8a1fadc10448d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4109f21edf772e681537fc3fae67d0e02015b2f4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8b0f713288a097acffab2740e294afcf459d2919', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '104bbf229e8a3e0a9b55c7f4499b0357086b66b1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cd074ad92aab987f62355e8a7f8d1f63371ae031', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '29ac56b0db2ab4376f4cf793bd95cf4f3f820741', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '22d83515f14a132bada39122c008a58dc9897df9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Tidiane Dia,71412737,,User,,33,,3,10
677850768,Polling publishers,"This PR adds a `PollingPublisherMixin` for publishers using the polling technique.

It also adds an `IntervalPollingPublisher` and a `LongPollingPublisher`.

I haven't added tests yet, I want to have a feedback on the design first. 
To try it out with the testapp, checkout this branch (`polling-publisher`).

Here are the steps to take if you want to test the interval polling publisher:

1. Add this to your `settings.py` file:
`WAGTAIL_LIVE_PUBLISHER = ""wagtail_live.publishers.IntervalPollingPublisher""`

2. Add `wagtail_live` urls in `tests.urls` like this:
```
from wagtail_live import urls as live_urls

urlpatterns += [
    path(""wagtail_live/"", include(live_urls)),
]
```

3. Create a template for `BlogPage` model and add the following:
```
{% include ""wagtail_live/live_posts.html"" %}

{% include ""wagtail_live/polling/interval_polling.html"" %}
```
4. Create a live page in the admin interface with channel_id=test_channel for example

5. Head to http://127.0.0.1:8000/wagtail_live_interface/channels and create a channel with the same name as the BlogPage created, in this example test_channel

6. (Optional) You can also add a `WAGTAIL_LIVE_POLLING_INTERVAL` value in milliseconds in your settings.

We need to set `DEBUG` to `True` in order to get static files served.
And it should be fine.

The steps to take for the long polling publisher are similar with these differences:
1. `WAGTAIL_LIVE_PUBLISHER = ""wagtail_live.publishers.LongPollingPublisher""`

3. Create a template for `BlogPage` model and add the following:
```
{% include ""wagtail_live/live_posts.html"" %}

{% include ""wagtail_live/polling/long_polling.html"" %}
```

6. (Optional) You can add a `WAGTAIL_LIVE_POLLING_TIMEOUT` value in seconds in your settings.

**Additional remarks**

From [django docs](https://docs.djangoproject.com/en/3.2/topics/async/), long polling is a good candidate for async views:

> Under a WSGI server, async views will run in their own, one-off event loop. This means you can use async features, like concurrent async HTTP requests, without any issues, but you will not get the benefits of an async stack.

> The main benefits are the ability to service hundreds of connections without using Python threads. This allows you to use slow streaming, long-polling, and other exciting response types.

I tried to make an `AsyncLongPollingPublisher` but I don't think it changes a lot under WSGI but maybe we can add it for apps running on ASGI?",True,51,https://api.github.com/repos/wagtail/wagtail-live/pulls/51,https://github.com/wagtail/wagtail-live/pull/51,closed,1119,110,22,27,0,13,0,0,[],2021-06-25 11:44:01+00:00,2021-06-29 12:21:41+00:00,347860.0,"4 days, 0:37:40","[{'comment_id': 660086005, 'comment_body': ""**Suggestion:** what if the request doesn't have a `last_update_ts` parameter? Should we return something else instead? Maybe `None` but code that calls this method would have to handle that as well."", 'comment_created': datetime.datetime(2021, 6, 28, 20, 13, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}, {'comment_id': 660106027, 'comment_body': 'There is maybe https://docs.djangoproject.com/en/3.2/topics/testing/tools/#django.test.override_settings to help you with this test!', 'comment_created': datetime.datetime(2021, 6, 28, 20, 47, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 660107858, 'comment_body': 'https://docs.djangoproject.com/en/3.2/topics/testing/tools/#django.test.override_settings is nice here I think', 'comment_created': datetime.datetime(2021, 6, 28, 20, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 660113828, 'comment_body': ""if you have a construction like\r\n```\r\nif (someStatement) {\r\n  return true\r\n} else {\r\n  return false\r\n}\r\n```\r\nyou can just do `return someStatement` or `return bool(someStatement)` if it isn't already a bool."", 'comment_created': datetime.datetime(2021, 6, 28, 21, 0, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 660117735, 'comment_body': 'the ù seems a typo!', 'comment_created': datetime.datetime(2021, 6, 28, 21, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 660120016, 'comment_body': 'At some point this might be optimized since when many people watch the live-stream they will essentially all be doing many identical queries to the database all the time. But database caching like django-cachalot will already help out in cases like this I think (only when you have considerably many users). ', 'comment_created': datetime.datetime(2021, 6, 28, 21, 11, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 660181078, 'comment_body': ""Yes, it's nice. Thanks!"", 'comment_created': datetime.datetime(2021, 6, 28, 23, 35, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 660181302, 'comment_body': 'Yup, my bad!', 'comment_created': datetime.datetime(2021, 6, 28, 23, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 660415294, 'comment_body': 'Alright, do we support it out of the box and define a boolean setting like `WAGTAIL_LIVE_USE_CACHALOT` or shall we just mention in the docs that this optimisation is possible?', 'comment_created': datetime.datetime(2021, 6, 29, 8, 53, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 660419639, 'comment_body': 'I think we should just mention this possibility. If people use e.g. cachalot it will be automatically fixed, so no setting is required.', 'comment_created': datetime.datetime(2021, 6, 29, 8, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 660421962, 'comment_body': 'Good👍', 'comment_created': datetime.datetime(2021, 6, 29, 9, 1, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 660549135, 'comment_body': 'I think that this can happen only if `page.latest_revision_created_at` is `None`. And if that happens, we will be in trouble sooner since we call the `timestamp` method on None object [here](https://github.com/wagtail/wagtail-live/blob/35536fb027eec58f425d0a6700979181b6c3ff5a/src/wagtail_live/models.py#L43).  So, we need to handle it from there I think. How do you suggest to handle it?', 'comment_created': datetime.datetime(2021, 6, 29, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 660559553, 'comment_body': ""Hmm, ok. Maybe we shouldn't worry too much and just return a 400 bad request response to the client if it doesn't include a `last_update_ts ` parameter."", 'comment_created': datetime.datetime(2021, 6, 29, 12, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Stormheg', 'type': 'User'}]","[{'commit_sha': '70fa6f7fb21493e58addcda2a60359832fef8c98', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd15c14e4e6e20a29218215d6d8b3a5cb797a0458', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '93bb0d5b0552dac81d97a34b47074ebd7b5c4393', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4ee7b9efd76d9dddd1422d128d47eaa893feca96', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '70c727bfdcb7c841ae868bf16cbaa4024435c261', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5d1f5ab9a4c378a644d0ac46f391a68dc7b537f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '17c7108ed9a51125be742a50d4310818c5ca53f1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd46146176af6bb12509cf476921ba487b1348414', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '83b32437e4618a956f8e11537f5fff21b0ad64e6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f56a163b1fd824768f09d8e12e9c78c0046ed602', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b277bb3844de18a724131ead2a9956d9687c9c36', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b57558c2d1be01440a61aa2dbc5a4dd8ba69dcc6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '98f0fac0fc0b93e4c057cbf21e7e1f443166c4ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55935577961f14b6070695246e966263e5a737fc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2bbe08be77673b9d2492ea4557dff6409069d67a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '904cff96b8ba6017aa8e4480eec64abeddb6fc85', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd56035815bc64ad725a22186c5d8f36df811dcdd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '167b42022653b155246d5beae98e30051df02ccc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67fe421508a829f37986cdc358af7dda43f78128', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f1daa75dee1a1b2334c3253b619c8170aaf8eb6c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e80a7417ac625e5b43d41db3194bcb9573316e6d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '51c660c236c6386ced04a1cc4f5a16e2df3c726b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6b7d9f21cea0dbc5cf29646b914d7746b64dc899', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '77bbfb8ff6a1728afac46b146b56975e6393f225', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e29e6adda9000a26c0b715af15ae6ea510c3eb7a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '85f35cd235fe8f544222d39d4c8c876079b67b00', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35536fb027eec58f425d0a6700979181b6c3ff5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Tidiane Dia,71412737,,User,,33,,3,10
692513731,Telegram webhook receiver,"PR to add Telegram webhook receiver.

**Current limitations**
When a message with multiple images is edited on Telegram, we only receive the edited message and the first photo of the message. This means that the other images of the message will be removed from the corresponding live post.

See #80 to find how to setup TelegramWebhookReceiver.",True,85,https://api.github.com/repos/wagtail/wagtail-live/pulls/85,https://github.com/wagtail/wagtail-live/pull/85,closed,984,5,8,10,3,12,0,0,[],2021-07-19 11:16:27+00:00,2021-07-20 08:18:01+00:00,75694.0,21:01:34,"[{'comment_id': 672556501, 'comment_body': ""Hi Tidiane,\r\n\r\nCould you give an example what you are trying to detect here? What case should be converted and what case shouldn't? Thanks :-)"", 'comment_created': datetime.datetime(2021, 7, 19, 19, 5, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 672567381, 'comment_body': 'Hi Lucas, this shouldn\'t be converted for example:\r\n```\r\n""This post contains an embed.\\n""\r\n""https://www.youtube.com/watch?v=Cq3LOsf2kSY\\n""\r\n```\r\nThis however should be converted:\r\n```\r\n""https://www.youtube.com/watch?v=Cq3LOsf2kSY. Some content here.\\n""\r\n ""Some content here. https://www.youtube.com/watch?v=Cq3LOsf2kSY""\r\n ```\r\n\r\nThe idea is, if the embed url is the first line, or inside `\\n` or the last line of the message, the `process_text` method will convert it into an embed.\r\n\r\nIf there is other text in the same line than the embed url, we convert it.', 'comment_created': datetime.datetime(2021, 7, 19, 19, 21, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 672591757, 'comment_body': 'Ah, because embeds are different than links to embeds of course :-) I propose a little note describing this to remind the reader!', 'comment_created': datetime.datetime(2021, 7, 19, 20, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 672595805, 'comment_body': 'Note that:\r\n  * `len_text > end + 1` is not necessary when the character we are looking for is the character at `end` (not `end + 1`! ), it should be `len_text > end` I think. Then, if `end` is not `len_text`, it will always be bigger than `end`, since otherwise it can not contain the string, so the condition `len_text > end` is not necessary. \r\n  * `text[end : end + 1]` is a single character and therefore equal to `text[end]` :-)\r\n\r\n(Edit: converted the code parts to code statements to make this comment more readable)', 'comment_created': datetime.datetime(2021, 7, 19, 20, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 672596219, 'comment_body': 'Same here, `text[offset - 1 : offset]` is equal to the more clear `text[offset - 1]`', 'comment_created': datetime.datetime(2021, 7, 19, 20, 9, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 672598532, 'comment_body': 'I\'m not sure about single-quote html elements, but I think the standard is double quotes, so I would propose to use `f\'<a href=""{url}"">{description}</a>\'`', 'comment_created': datetime.datetime(2021, 7, 19, 20, 12, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 672598585, 'comment_body': 'I think this manual algorithm is a bit too complicated which makes it hard to understand what happens. After some thinking I concluded that no extra variables are needed if the entities are process backwards, because the text will then only be edited at locations which are no longer matches by indices in the entity objects.\r\n\r\nI propose the following algorithm:\r\n\r\n```python\r\n# Process the entities in reversed order to be able to edit the text in place.\r\nfor entity in reversed(entities):\r\n    url = """"\r\n    start = entity[\'offset\']\r\n    end = start + entity[\'length\']\r\n\r\n    if entity[""type""] == ""url"":\r\n        url = description = text[start:end]\r\n\r\n        if is_embed(url):\r\n            # Check if this can match an embed block, if so no conversion happens.\r\n            # It matches an embed block if it has a line in the text for itself.\r\n            if end == len_text or text[end] == ""\\n"":\r\n                if start == 0 or text[start - 1] == ""\\n"":\r\n                    # This is an embed block, skip to the next entity\r\n                    continue\r\n\r\n    if entity[""type""] == ""text_link"":\r\n        url = entity[""url""]\r\n        description = text[start:end]\r\n\r\n    if url:\r\n        link = f\'<a href=""{url}"">{description}</a>\'\r\n        text = text[:start] + link + text[end:]\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 20, 12, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 672600586, 'comment_body': ""I guess the comment I put isn't clear then :-)."", 'comment_created': datetime.datetime(2021, 7, 19, 20, 16, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 672606467, 'comment_body': 'Because of quote change proposal this would become: \r\n```python\r\n        == \'This is a regular link <a href=""https://github.com/"">https://github.com/</a>.\'\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 20, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 672606830, 'comment_body': 'Because of quote change proposal this would become:\r\n```python\r\n        == \'This is a link_text <a href=""https://github.com/wagtail"">wagtail</a>.\'\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 20, 26, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 672611907, 'comment_body': "":-) Now I know what you mean, but it is often useful to give a small explanation why something is, because readers might not know or deduce it. So I think\r\n```\r\n# Check if this can match an embed block, if so no conversion happens.\r\n```\r\nWould be clearer like:\r\n```\r\n# Check if this can match an embed block. If so no conversion happens, because embeds should not become links.\r\n```\r\n:-)\r\n\r\nEdit: I was also a bit sleepy, so I didn't immediately deduce that you were going to replace urls for clickable urls, haha. I see now that you also mention in the description of the method that it will replace links, my bad :-)"", 'comment_created': datetime.datetime(2021, 7, 19, 20, 34, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 672653875, 'comment_body': 'Very nice algorithm. Thanks!', 'comment_created': datetime.datetime(2021, 7, 19, 21, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}]","[{'commit_sha': 'ed9256c46e606f97e19cf851d34d879280da888f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9102f5b1781462b57943ca851f5cb765739a02f9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a02efb78e39a43752e65167036e88613289608db', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a81320eb354d3676492d9774d750a2613635964c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62058a3e52d12998f9160204035373012a7573d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fcfb6140f43a9a9efc4d4bbc88ab0e5e31194a60', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '77fd3b9e93caf7fd6249cf0eb021a3e7dc3cd4ea', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd79da0419ccf4808587c6ba0b64f1c39f91bb5ba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '634310d8f7d3db17150f2df2e4be0152d0f4324f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6b618331553114d36a4147a09cceb383cd2596d7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Tidiane Dia,71412737,,User,,33,,3,10
696394125,Websocket publisher,,True,88,https://api.github.com/repos/wagtail/wagtail-live/pulls/88,https://github.com/wagtail/wagtail-live/pull/88,closed,457,13,24,45,6,17,0,0,[],2021-07-24 19:10:27+00:00,2021-08-01 19:43:15+00:00,693168.0,"8 days, 0:32:48","[{'comment_id': 680236950, 'comment_body': ""The default way to include signals would not be the models file, but the ready method of the app config. See just below https://docs.djangoproject.com/en/3.2/topics/signals/#django.dispatch.receiver.\r\n\r\nSince you're defining both the signal and the handlers in the same file, this might be an issue. I see Wagtail solves this by putting the receivers in a file called signal_handlers.py. You can see how they do this in the wagtail.core app."", 'comment_created': datetime.datetime(2021, 7, 30, 21, 46, 14, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 680237892, 'comment_body': 'Would it be an option to render this in the signal receiver? Currently not every publisher uses the signals, but they still get the performance draw of the rendering.', 'comment_created': datetime.datetime(2021, 7, 30, 21, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 680240441, 'comment_body': 'Why do want to avoid cleaning?', 'comment_created': datetime.datetime(2021, 7, 30, 21, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 680242014, 'comment_body': 'Is this notation preferable to https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals?', 'comment_created': datetime.datetime(2021, 7, 30, 22, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 680243109, 'comment_body': 'what is the difference between an update and a new update? ;-)', 'comment_created': datetime.datetime(2021, 7, 30, 22, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 680254729, 'comment_body': ""I don't understand your question. Which `update` are you talking about?"", 'comment_created': datetime.datetime(2021, 7, 30, 22, 42, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 680255125, 'comment_body': 'I will use the template literals.', 'comment_created': datetime.datetime(2021, 7, 30, 22, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 680255565, 'comment_body': ""This is from another PR but I will change it in a next PR. This was done so that the `last_updated_at` field isn't changed when a post is added via a receiver."", 'comment_created': datetime.datetime(2021, 7, 30, 22, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 680255755, 'comment_body': 'Sure!', 'comment_created': datetime.datetime(2021, 7, 30, 22, 47, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 680256106, 'comment_body': 'Do you mean that I should add the handler of the signal in the ready method and only define the signal itself in `signals.py`?', 'comment_created': datetime.datetime(2021, 7, 30, 22, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 680327976, 'comment_body': 'Yes I think you should consider that. Because this way it might be imported more than once, which causes the function to be connected multiple times possibly.', 'comment_created': datetime.datetime(2021, 7, 31, 8, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 680328148, 'comment_body': ""Ah, maybe you can achieve the same effect by doing `self.__class__.objects.filter(pk=self.pk).update(last_updatet_at=timezone.now())`? I'm not sure what is nicer, but I think this might be more failsafe. Maybe others have an opinion as well."", 'comment_created': datetime.datetime(2021, 7, 31, 8, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 680328382, 'comment_body': 'Just a naming thing, not referring to somewhere else :-) I meant, why do you call it ""new_update"" instead of just ""update"". Because an update is supposed to be new anyway, right? So ""new"" seems redundant :-)', 'comment_created': datetime.datetime(2021, 7, 31, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 680333059, 'comment_body': 'Ah alright! And I also name the method update on the consumer. Good!', 'comment_created': datetime.datetime(2021, 7, 31, 9, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 680333976, 'comment_body': ""I've followed your suggestion. I tried to add test for it but it fails with django 2.2. Do you have an idea why this happens?"", 'comment_created': datetime.datetime(2021, 7, 31, 9, 13, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 680334191, 'comment_body': 'I intend to remove `clean=False` in a following PR.', 'comment_created': datetime.datetime(2021, 7, 31, 9, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 680334313, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2021, 7, 31, 9, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}]","[{'commit_sha': '3a0c6e42b9acb98e8880a8eaf8ff7abd55020f32', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba9af66b3239d25756adc875afb66a5da1e29bd9', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf61bb67d127ad17486cbd7adc6c887ebb74675d', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a27846824472b8307f7f28536de72af3acadd378', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6c194c90f430938bfb9d37189cc601d41ede87c', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6943e5679cfbbbc4f7a064d371291d7b92eb9a6', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f704319e9accf96c3ea07772e12160eae83b9b16', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1d5b7bbb392226a3c0ef0714b262da1899ddc57', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e29093c22730f663f355c073066d3ce4ba231996', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19854ce2f7025a8736bedff617499d845c9896e5', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b0cd0949e68bd80be58842296d36da5b80c6297', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '946125c3be4a4708954db8a7fe17d609734cb842', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cb634f3b394bff68d0c8a693acd3833755d4722', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1013d9b0e0dc7f5103974d5c2f9835e764f05325', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efd0b64937d24252d63a030318a7512d32cfc3c8', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '696d14f3a19ce1b5c7c3a369b596f336bd8dd6dd', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66be17329f0c94d3be35e00c4991993a3ba1698b', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '838d28e2781460f7fb43bab11560199da6a63704', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '464921d5c50eb7f0404c0946cd00d5641c9aa2ad', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e799d81121c6262300696dc537283b8bb27629e5', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '219081b473ed2ce6693111a6f499e02fd40638be', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c76dd5c9626ce74da9036ac8dd55e03028a582d9', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a002caaf8f8047e4c4327d548a2ab0fcdae6e89d', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92df520c88ac4952a118349a9fb8bdbcd943b294', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ae6667c0617c0f6777bb41a16d120724ad4b734', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7c1963135c6e4be850caf1718d5d7970b90ffd4', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20604afbdb79be92628ab6ddc6f3b3fdfed9f279', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b81a7bbc50e5b9a735eed8f477e98d36f85b6493', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '471b699dca2c6075d93b2f8f3d8e60685222756e', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a7620391947dea4ac5de520b490969702bf4943', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54055877b8dfd4988873dd90e48d2beb56265090', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74905b756723e1b6b1fe12660b27626386ccd10a', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c98641dba0acb81a0c07b7405f4be0e98d1d445', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1ca719d14f67a6798ee078ca132f5b312ade4b9', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d54478194320bbb90b92df9198f33641e7ba47d', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6b1f9ebf584ded54638669383d05ea2f99cb600', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82c9457e39e734d30b4b66f13bd0a2ceedf77f25', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46f5f957c147b4fafc8ae81e71e07575d29990ab', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cdaa5769ed512f21e381c76ab4c17956d8a5eb8', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9137ea1cc980b08505cffcba67b51b6c8341be5a', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93f869b5f423f1485818b0400a0adf968ba6d79d', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0c466a6ebd8d7eba8883de4c9f1bdb55796149e', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8620f1cc2984f5964f439ec15fcc4917b0b6f407', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cceddc2babf76dd0735646ae3d6bf36bf959b2b', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8808c3395f43737442fde09a6b24b74e8709c79f', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}]",Tidiane Dia,71412737,,User,,33,,3,10
700979557,Separate websocket server publisher,This PR adds a `websockets` and `starlette` publishers.,True,90,https://api.github.com/repos/wagtail/wagtail-live/pulls/90,https://github.com/wagtail/wagtail-live/pull/90,closed,756,7,33,33,3,17,0,0,[],2021-08-01 20:31:56+00:00,2021-08-18 10:07:22+00:00,1431326.0,"16 days, 13:35:26","[{'comment_id': 682085134, 'comment_body': 'Could be a small performance boost to load the json message once instead of once per message?', 'comment_created': datetime.datetime(2021, 8, 3, 20, 38, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 682086946, 'comment_body': ""Maybe something with ngrok and localhost mixed? I can't think of a reason directly either :-)"", 'comment_created': datetime.datetime(2021, 8, 3, 20, 41, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 682090346, 'comment_body': '`{ws_1, ws_2}` is also a short hand for `set([ws_1, ws_2])` :-)', 'comment_created': datetime.datetime(2021, 8, 3, 20, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 682094151, 'comment_body': 'The format string seems unnecessary here?', 'comment_created': datetime.datetime(2021, 8, 3, 20, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 682115851, 'comment_body': ""I needed to add `aioredis==2.0.0` to testenv deps in tox.ini, otherwise tox wouldn't run for me."", 'comment_created': datetime.datetime(2021, 8, 3, 21, 30, 12, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 682376435, 'comment_body': 'Ah, this version of aioredis has been released the last week. Prior to that I would do the same but now if I simply do `pip install aioredis` it installs `aioredis 2.0.0`. Do i need to add it to the tox configuration?', 'comment_created': datetime.datetime(2021, 8, 4, 7, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 682377664, 'comment_body': ""Maybe, here are the docs https://www.starlette.io/middleware/#corsmiddleware.\r\n\r\nI think it's something like django's `ALLOWED_HOSTS`."", 'comment_created': datetime.datetime(2021, 8, 4, 7, 54, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 682396691, 'comment_body': 'Well it\'s not about the version, but when I don\'t add it I get an error ""Module not found: aioredis"" in tox. So it is required for me to run tox.', 'comment_created': datetime.datetime(2021, 8, 4, 8, 20, 20, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 682404739, 'comment_body': 'Ah ok, so I add it in tox?', 'comment_created': datetime.datetime(2021, 8, 4, 8, 31, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 682405117, 'comment_body': '```suggestion\r\nThis document describes how to set up an event bus with Redis, for Wagtail Live publishers.\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 8, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 682405470, 'comment_body': '```suggestion\r\n- **Publisher**: A live page sends a new message containing its recent modifications to its channel group. Each live page is associated to a unique channel group.\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 8, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 682405790, 'comment_body': '```suggestion\r\nFollow the steps outlined [here](https://redis.io/topics/quickstart) to install Redis.\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 8, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 682406031, 'comment_body': '```suggestion\r\nWhenever you want to test your application, you will have to start the Redis server.\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 8, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 682406435, 'comment_body': ""```suggestion\r\nYou can define the server's host and port in your settings file as follows:\r\n```"", 'comment_created': datetime.datetime(2021, 8, 4, 8, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 682411906, 'comment_body': ""```suggestion\r\n    - Set up Slack Events API receiver: getting_started/setup_slack.md\r\n```\r\n\r\n(and all other imperative 'Setup's should be 'Set up's)"", 'comment_created': datetime.datetime(2021, 8, 4, 8, 40, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 682528787, 'comment_body': ""Yes maybe. But it seems odd if you don't have the same problem :-)"", 'comment_created': datetime.datetime(2021, 8, 4, 11, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 682552918, 'comment_body': ""And the CI passes too so it's odd yes.\r\n"", 'comment_created': datetime.datetime(2021, 8, 4, 12, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}]","[{'commit_sha': 'd1a7c6b1d402189909dc4ce525482cb6f83a4c8e', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd24d167c2b2c363118e89ac2478638ae4d52cf0', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1dbba71b571b4d81bd6163d7d63620165161455b', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36259c818175af2dfcd8a569a2dfa669e6a135dd', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d476e6aa94e17a49f9f22518faf21e6e078f5fa', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cad243a6021774cbd2f40d2cf46c7640294e031', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37724c24bbfe3ce693133716d981d810e52ebaf9', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18968bf8b0c4559ca0d5bc4ff7fb54b9b52363e9', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8c2bceb803f944ed5fc65d73829ddf395e512f8', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41b5e49577fcb02bf9bb7720541218113a5624a7', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '278e2d4e36848d4827d9668c0bfa5f0bbd243c24', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be03a1d73e17d814137af87bb411dadd6284d252', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '659683e1397a4ed0ebd2821edbc7a100999759d6', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94122ed5b22a86f1f0d912d6c2feadd83af297a7', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb046b16d40497483988342a94c609c05d5a0748', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd39c33cff5a3aa8a17f28da5686b6d4293ea1a0d', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd900107df972e3be757be2c118efb65efe8160ca', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67d76cacabb231d6c641dfb6599885a04bec6ca3', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f0e2288819e44259111c1714a8ff62ffa02974d', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6eeaa55f6300c4f82b671f532508140a42bb802', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '765fa845326922821a9259e61a4bfd81ad1b23df', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45d37b94bc6288ce909ddd04aeb1789f96b68858', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e8d025670f94ec9c799ba68a5d6eaf9df406a59', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ba402aa1e378669373427d2f48a739822bca1d3', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e40fd1a2a2ceea92c5d0f2934f87289da0eadbc', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e99ce34ee051d9776af44135a0b34ac0e4a3eb1', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aecf401e6751565d552634733b35323f17365d7c', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51129d218bd8add8e22e9f729d3120a86045caf7', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3bdb16f4800dcd94370ebc11083961eb7b75e20', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '750a549ac051e6ed7a7be91dba1bd7b2d0ee1e34', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fb19ab31d395be9c42809379bc55eb029cfa265', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '451337b50bf72d258dfda7fee02f568e54695fcf', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d245faa07e34d875fe9e4b076786d8d360c4e4a', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}]",Tidiane Dia,71412737,,User,,33,,3,10
704799797,PieSocket publisher,This PR adds a publisher based on [PieSocket](https://www.piesocket.com/).,True,97,https://api.github.com/repos/wagtail/wagtail-live/pulls/97,https://github.com/wagtail/wagtail-live/pull/97,closed,321,0,14,9,1,3,0,0,[],2021-08-05 15:16:55+00:00,2021-08-11 19:45:32+00:00,534517.0,"6 days, 4:28:37","[{'comment_id': 683557965, 'comment_body': '```suggestion\r\nAfter creating a new key, you can click the little information icon to find them as shown below:\r\n```', 'comment_created': datetime.datetime(2021, 8, 5, 15, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 683560620, 'comment_body': '```suggestion\r\n    """"""Retrieves user\'s Piesocket API key.\r\n```', 'comment_created': datetime.datetime(2021, 8, 5, 15, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}, {'comment_id': 683560838, 'comment_body': ""```suggestion\r\n        (ImproperlyConfigured) if the Piesocket API key isn't specified in settings.\r\n```"", 'comment_created': datetime.datetime(2021, 8, 5, 15, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tomdyson', 'type': 'User'}]","[{'commit_sha': 'a56c5f6975fdf67d9ec93f78410ce50c7ccb9150', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcde7c12e8c47e1e2c728a1cea8434f050bc0f28', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd899134c23f9a32013959bbefdeb04490498fa', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c40e688ec5d716686d4b1ede5ae55bc7b722891d', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '285835930082f6160d21696bed9eda672d84fcd1', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32a6d1a5803593458b9d11a50b20c1de4af42af7', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21901abfaa8f9a128df00180dd35069f361e6949', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88f59e2d850229e1535a06ee0d47af9c506880db', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5c25e8d5210f6722e50be71914c1694cc10d75a', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}]",Tidiane Dia,71412737,,User,,33,,3,10
662942274,Wagtail Live Debug,"As discussed in Slack, this PR is cleaner and takes into account some suggestions received.",True,13,https://api.github.com/repos/wagtail/wagtail-live/pulls/13,https://github.com/wagtail/wagtail-live/pull/13,closed,1248,10,22,6,0,10,0,0,[],2021-06-06 12:40:42+00:00,2021-06-07 20:21:28+00:00,114046.0,"1 day, 7:40:46","[{'comment_id': 646902766, 'comment_body': 'Nitpick: Files should end with a blank line.', 'comment_created': datetime.datetime(2021, 6, 7, 20, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'allcaps', 'type': 'User'}, {'comment_id': 646903971, 'comment_body': ""I think you'd always want to test in 'production' mode. So `DEBUG=False`. As that is the configuration you'd like your app to work.\r\n\r\nOr is this with a specific reason?"", 'comment_created': datetime.datetime(2021, 6, 7, 20, 6, 38, tzinfo=datetime.timezone.utc), 'commenter': 'allcaps', 'type': 'User'}, {'comment_id': 646905027, 'comment_body': 'nitpick, blank line.', 'comment_created': datetime.datetime(2021, 6, 7, 20, 8, 23, tzinfo=datetime.timezone.utc), 'commenter': 'allcaps', 'type': 'User'}, {'comment_id': 646905201, 'comment_body': 'Not for a specific reason, it was just for debugging. I will fix it.', 'comment_created': datetime.datetime(2021, 6, 7, 20, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 646905930, 'comment_body': 'Can we do that? OR Add a `TODO` so all todos can be found.', 'comment_created': datetime.datetime(2021, 6, 7, 20, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'allcaps', 'type': 'User'}, {'comment_id': 646907691, 'comment_body': 'Should we put the `#` on the `__str__` method of a model? So that channel names are consistent? ', 'comment_created': datetime.datetime(2021, 6, 7, 20, 12, 59, tzinfo=datetime.timezone.utc), 'commenter': 'allcaps', 'type': 'User'}, {'comment_id': 646907908, 'comment_body': ""How to add TODO in js? I don't know type of error we can expect. I will do it later."", 'comment_created': datetime.datetime(2021, 6, 7, 20, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 646908067, 'comment_body': 'ALright', 'comment_created': datetime.datetime(2021, 6, 7, 20, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 646908809, 'comment_body': '`/* Need better error handling */` -> `/* TODO: Need better error handling */`\r\n\r\nNow you can search for `TODO` and find all places we need to work on.', 'comment_created': datetime.datetime(2021, 6, 7, 20, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'allcaps', 'type': 'User'}, {'comment_id': 646910930, 'comment_body': 'Added a TODO.', 'comment_created': datetime.datetime(2021, 6, 7, 20, 18, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}]","[{'commit_sha': '5255d61ae9008b42e216b5fb7fa83e1c8d337bb6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fcf5fb67fa565ee03437e3e8b498a66d1d3d4d4b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8a1071950459290ce17fa93fc6652ee1379ac3d7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '64b34215f4a4e5c4281d0fb7caa5c5d5fd673133', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2316be73779d2640779831dbc56593fb5482907b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '304e90d17ad4e39d1871f2ae9abbec59d99b0961', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Tidiane Dia,71412737,,User,,33,,3,10
673326473,Renamed wagtail_live_debug to wagtail_live_interface.,I renamed `wagtail_live_debug` to `wagtail_live_interface`.,True,19,https://api.github.com/repos/wagtail/wagtail-live/pulls/19,https://github.com/wagtail/wagtail-live/pull/19,closed,134,90,22,1,0,0,0,0,[],2021-06-18 09:43:21+00:00,2021-06-21 14:59:52+00:00,278191.0,"3 days, 5:16:31",[],"[{'commit_sha': '21527cd30dba96cf910b56b0ad2dbfdbe466e646', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Tidiane Dia,71412737,,User,,33,,3,10
676432619,Wagtail Live Interface Receiver,"I added a receiver class for Wagtail Live Interface.
It's a concrete subclass of `BaseMessageReceiver` so we can test the `add_message`, `change_message` and `delete_message` methods.",True,43,https://api.github.com/repos/wagtail/wagtail-live/pulls/43,https://github.com/wagtail/wagtail-live/pull/43,closed,367,5,7,6,0,1,0,0,[],2021-06-23 16:10:43+00:00,2021-06-23 22:32:39+00:00,22916.0,6:21:56,"[{'comment_id': 657390126, 'comment_body': 'Should we pin this? Just `mock>=[CURRENT_INSTALLED_VERSION],<[NEXT_MAJOR_VERSION]`and same for pytest-mock. ', 'comment_created': datetime.datetime(2021, 6, 23, 19, 8, 43, tzinfo=datetime.timezone.utc), 'commenter': 'allcaps', 'type': 'User'}]","[{'commit_sha': 'd349882d3d66f7a8f53d811c263acca3967e9092', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a6be8e4004331065b814a98fdf6227e854cd273a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4c610508d4c1849526639f52530af5bca4fc7ee0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a7d05e6e92b659c8987f5ae64562167301fd111e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0585dfabd9d5e2e64aab55bdc82ed874456c12bb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0d01eaaea5f5276fc7ea7f27104d183ce198764d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Tidiane Dia,71412737,,User,,33,,3,10
680690324,Webapp,"This PR renames `wagtail_live_interface` to `webapp`. 
The webapp folder lives inside `src/wagtail_live/`.",True,53,https://api.github.com/repos/wagtail/wagtail-live/pulls/53,https://github.com/wagtail/wagtail-live/pull/53,closed,110,138,24,3,0,0,0,0,[],2021-06-30 09:31:09+00:00,2021-06-30 09:44:30+00:00,801.0,0:13:21,[],"[{'commit_sha': '5d00ef851fc6a2227c0c84feb0ae21b8addf2761', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aa87aa5dbc1fa277befeaba9cd14b6ff6c9554cf', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '936babe1c521b9681e71937316446f661d91bd89', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Tidiane Dia,71412737,,User,,33,,3,10
685559763,Image support webapp,"This PR adds image support to the webapp.

I also renamed the model `DummyChannel` to `Channel` and refactored/lint the js code; that's why it comes with so many additions and deletions.",True,67,https://api.github.com/repos/wagtail/wagtail-live/pulls/67,https://github.com/wagtail/wagtail-live/pull/67,closed,749,476,18,17,0,8,0,1,[],2021-07-07 22:48:46+00:00,2021-07-16 13:44:10+00:00,744924.0,"8 days, 14:55:24","[{'comment_id': 671179051, 'comment_body': ""Is it maybe nice to also remove the extension from the name here? (I'm assuming it's there because of the get_image_mimetype method)"", 'comment_created': datetime.datetime(2021, 7, 16, 11, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 671179778, 'comment_body': ""dictionary instead of dictionnary if I'm nitpicking ;-)"", 'comment_created': datetime.datetime(2021, 7, 16, 11, 44, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 671185543, 'comment_body': ""Won't this give a problem with the Delete view you also added below? It seems to only delete the image, but this view might raise an Image.DoesNotExist then? Or is it never called anymore?"", 'comment_created': datetime.datetime(2021, 7, 16, 11, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 671194256, 'comment_body': ""@lucasmoeskops I tried hard but I can't get your point.\nIs it the DeleteImageView that you are talking about?\nIf so, what problem might occur and when?"", 'comment_created': datetime.datetime(2021, 7, 16, 12, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 671195548, 'comment_body': 'Alright!', 'comment_created': datetime.datetime(2021, 7, 16, 12, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 671250883, 'comment_body': 'Yes, in the DeleteImageView, the only thing that seems to be done is to delete the specified Image instance. But can the image not still be used in an existing message, so that this code will raise an error when trying to do `.get(id=image[""id""])`? \r\n\r\nI mean basically, the image seems to be deleted, but the message seems to still exist. Trying to reproduce it, but having some issues with csrf token validation at the moment interestingly :-(', 'comment_created': datetime.datetime(2021, 7, 16, 13, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}, {'comment_id': 671257458, 'comment_body': 'I expect that the user will click ""Save changes"" in which case the image will no longer be in the message. If we send an update, the id of the message deleted won\'t be in the update so I think we should not have an error there.\n\nI get sometimes a csrf token error but when I refresh or close and reopen the tab it works fine. Maybe there is something else too.\n\n', 'comment_created': datetime.datetime(2021, 7, 16, 13, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Tijani-Dia', 'type': 'User'}, {'comment_id': 671264973, 'comment_body': ""You are right! It is no issue because a different message is sent. All right :-) Then I'll merge the request!"", 'comment_created': datetime.datetime(2021, 7, 16, 13, 43, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lucasmoeskops', 'type': 'User'}]","[{'commit_sha': '2b9d2a12c00646c056e63a7f2c5e3d29137eed18', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '26d1750bc35ed73b1a9b60d93e77022708618039', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5be1acc454baa3a65485513f00067e328a5ca3a0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a1a1afd5004b4367cefb5d0ed77febf2e84e014b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3d01cfd9dc912230256b3d75908fb56ac7f9b12d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '645072787ff893643aef2bb8bb0df5662634835f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd70d565341e2347c017607fe4fc1ccb7f74810b9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f4e9216fc1e2c937c42fdc970886cb2685a1beb8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '72863e77bef37ebc2c74380771328fd930c62771', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d51903433da258dd90d3633836b975e6dfcf171', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '39c933d559e69f6da1223fa889fc5ddab3b8b7dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0333b28348e768fa1591052936888334f1ab5587', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '322993a8ae4d5758f892b847be51a9458db0118a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '14535204bfcc6ecec1fb673a2eef1ee58702dc96', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9f226155ea5b022f210978470c48e8b276fa5761', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ac5af7997a6e1754f2e5fb26b29ec5c937a55cc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9249f9c6803e25f3874964602d30946319dbe4ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Tidiane Dia,71412737,,User,,33,,3,10
715056081,Add tests,"I made some little refactoring and added tests to reach 100%.

The `run_publisher.py` file is omitted in the measurements. It's tricky to test and it won' be used in production.",True,104,https://api.github.com/repos/wagtail/wagtail-live/pulls/104,https://github.com/wagtail/wagtail-live/pull/104,closed,257,119,24,17,1,0,0,0,[],2021-08-18 12:58:09+00:00,2021-08-27 11:20:24+00:00,771735.0,"8 days, 22:22:15",[],"[{'commit_sha': '518567f7266fc56bb1e9a747d776129156e822be', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0790c15cb30168adcf4efc342a59febedaa7830', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5eecb1faef48ced801f2b2651dd564d6813329ed', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03833e4f55dec0d7d3746560e018690a490e86d4', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d4302b9e9cd6dfb7a317108661a5abea059fab3', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a58460ee42382a74e2444434c9f5ed3f603ab883', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d53894bba26d73a13195585c1a94971553d17e1', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '952d36dcc123243e466752e467dd5bf9a4e5f433', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca18159398e08e0efaa204b5a2f6e78f83fab683', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4d2d6b4ab7287adc6524c9533ec920226775d91', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e366ab558df703f4bf026a3b557d58359e718b5', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '719cc1acb531fe3c9377ef3bb98d41ae4d55d745', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '648979cd8207f04a1a79ea9b5a588ee3fae24114', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32eb05a15ed0f4e193c0e65b4c9f1234aebff3ca', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7f450d1d138ab11e8e2323746565ae38d768707', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbdddfb73ebbc17a9ac79b120a4f5120e6e66919', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cbc4d72d036b1c904c4b30b662323940f087397', 'committer_username': 'Tijani-Dia', 'committer_name': 'Tidiane Dia', 'committer_email': None, 'commit_date': datetime.datetime(2020, 9, 16, 22, 39, 38, tzinfo=datetime.timezone.utc)}]",Tidiane Dia,71412737,,User,,33,,3,10

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
368998786,wagtail-live,wagtail/wagtail-live,Python,6,36,6,5,115,15,10,6,"[{'id': 884290149, 'number': 144, 'closed': datetime.datetime(2022, 3, 21, 14, 38, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 20, 23, 58, 37, tzinfo=datetime.timezone.utc), 'time_taken': 52799.0, 'time_delta': '14:39:59', 'additions': 38, 'deletions': 2, 'state': 'closed'}, {'id': 884260552, 'number': 142, 'closed': datetime.datetime(2022, 3, 21, 14, 35, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 20, 21, 17, 14, tzinfo=datetime.timezone.utc), 'time_taken': 62288.0, 'time_delta': '17:18:08', 'additions': 27, 'deletions': 1, 'state': 'closed'}, {'id': 884248736, 'number': 140, 'closed': datetime.datetime(2022, 3, 21, 14, 16, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 20, 20, 9, 59, tzinfo=datetime.timezone.utc), 'time_taken': 65182.0, 'time_delta': '18:06:22', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 878203851, 'number': 138, 'closed': None, 'created': datetime.datetime(2022, 3, 12, 16, 29, 34, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 192, 'deletions': 4, 'state': 'open'}, {'id': 768263918, 'number': 132, 'closed': datetime.datetime(2021, 10, 28, 12, 31, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 28, 11, 45, 38, tzinfo=datetime.timezone.utc), 'time_taken': 2739.0, 'time_delta': '0:45:39', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 766745702, 'number': 131, 'closed': datetime.datetime(2021, 10, 28, 8, 16, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 26, 18, 44, 7, tzinfo=datetime.timezone.utc), 'time_taken': 135153.0, 'time_delta': '1 day, 13:32:33', 'additions': 11, 'deletions': 5, 'state': 'closed'}, {'id': 766722286, 'number': 130, 'closed': datetime.datetime(2021, 10, 26, 19, 4, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 26, 18, 9, 56, tzinfo=datetime.timezone.utc), 'time_taken': 3276.0, 'time_delta': '0:54:36', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 764631696, 'number': 128, 'closed': datetime.datetime(2021, 10, 23, 21, 25, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 23, 7, 9, 50, tzinfo=datetime.timezone.utc), 'time_taken': 51360.0, 'time_delta': '14:16:00', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 763999627, 'number': 127, 'closed': datetime.datetime(2021, 10, 22, 9, 8, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 22, 9, 0, 16, tzinfo=datetime.timezone.utc), 'time_taken': 480.0, 'time_delta': '0:08:00', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 763945871, 'number': 126, 'closed': datetime.datetime(2021, 10, 22, 7, 50, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 22, 7, 45, 49, tzinfo=datetime.timezone.utc), 'time_taken': 253.0, 'time_delta': '0:04:13', 'additions': 5, 'deletions': 69, 'state': 'closed'}, {'id': 763940691, 'number': 125, 'closed': datetime.datetime(2021, 10, 22, 7, 48, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 22, 7, 37, 18, tzinfo=datetime.timezone.utc), 'time_taken': 677.0, 'time_delta': '0:11:17', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 763610926, 'number': 124, 'closed': datetime.datetime(2021, 10, 21, 19, 57, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 21, 19, 50, 20, tzinfo=datetime.timezone.utc), 'time_taken': 409.0, 'time_delta': '0:06:49', 'additions': 18, 'deletions': 26, 'state': 'closed'}, {'id': 763169377, 'number': 123, 'closed': datetime.datetime(2021, 10, 21, 14, 39, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 21, 11, 23, 10, tzinfo=datetime.timezone.utc), 'time_taken': 11785.0, 'time_delta': '3:16:25', 'additions': 93, 'deletions': 6, 'state': 'closed'}, {'id': 763042212, 'number': 122, 'closed': datetime.datetime(2021, 10, 21, 16, 22, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 21, 8, 46, 57, tzinfo=datetime.timezone.utc), 'time_taken': 27361.0, 'time_delta': '7:36:01', 'additions': 14, 'deletions': 2, 'state': 'closed'}, {'id': 760613069, 'number': 121, 'closed': None, 'created': datetime.datetime(2021, 10, 18, 15, 42, 21, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 116, 'deletions': 87, 'state': 'open'}, {'id': 760155991, 'number': 120, 'closed': datetime.datetime(2021, 10, 25, 18, 56, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 18, 7, 39, 7, tzinfo=datetime.timezone.utc), 'time_taken': 645432.0, 'time_delta': '7 days, 11:17:12', 'additions': 496, 'deletions': 79, 'state': 'closed'}, {'id': 721277382, 'number': 118, 'closed': datetime.datetime(2021, 10, 12, 16, 35, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 27, 12, 3, 14, tzinfo=datetime.timezone.utc), 'time_taken': 3990715.0, 'time_delta': '46 days, 4:31:55', 'additions': 106, 'deletions': 54, 'state': 'closed'}, {'id': 717378584, 'number': 115, 'closed': None, 'created': datetime.datetime(2021, 8, 22, 21, 41, 47, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 376, 'deletions': 0, 'state': 'open'}, {'id': 716965524, 'number': 114, 'closed': datetime.datetime(2021, 8, 21, 5, 53, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 19, 55, 30, tzinfo=datetime.timezone.utc), 'time_taken': 35879.0, 'time_delta': '9:57:59', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 715909244, 'number': 112, 'closed': datetime.datetime(2021, 8, 20, 19, 35, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 12, 55, 28, tzinfo=datetime.timezone.utc), 'time_taken': 110420.0, 'time_delta': '1 day, 6:40:20', 'additions': 133, 'deletions': 0, 'state': 'closed'}, {'id': 715056081, 'number': 104, 'closed': datetime.datetime(2021, 8, 27, 11, 20, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 12, 58, 9, tzinfo=datetime.timezone.utc), 'time_taken': 771735.0, 'time_delta': '8 days, 22:22:15', 'additions': 257, 'deletions': 119, 'state': 'closed'}, {'id': 714051047, 'number': 103, 'closed': None, 'created': datetime.datetime(2021, 8, 17, 9, 1, 48, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 352, 'deletions': 2, 'state': 'open'}, {'id': 711081088, 'number': 99, 'closed': datetime.datetime(2021, 8, 13, 11, 0, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 15, 2, 23, tzinfo=datetime.timezone.utc), 'time_taken': 71886.0, 'time_delta': '19:58:06', 'additions': 334, 'deletions': 237, 'state': 'closed'}, {'id': 710723298, 'number': 98, 'closed': datetime.datetime(2021, 8, 13, 10, 39, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 11, 20, 45, tzinfo=datetime.timezone.utc), 'time_taken': 83925.0, 'time_delta': '23:18:45', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 704799797, 'number': 97, 'closed': datetime.datetime(2021, 8, 11, 19, 45, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 15, 16, 55, tzinfo=datetime.timezone.utc), 'time_taken': 534517.0, 'time_delta': '6 days, 4:28:37', 'additions': 321, 'deletions': 0, 'state': 'closed'}, {'id': 703364889, 'number': 95, 'closed': datetime.datetime(2021, 8, 11, 19, 47, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 11, 59, 54, tzinfo=datetime.timezone.utc), 'time_taken': 632856.0, 'time_delta': '7 days, 7:47:36', 'additions': 27, 'deletions': 10, 'state': 'closed'}, {'id': 701428337, 'number': 91, 'closed': datetime.datetime(2021, 8, 13, 11, 48, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 12, 37, 34, tzinfo=datetime.timezone.utc), 'time_taken': 947461.0, 'time_delta': '10 days, 23:11:01', 'additions': 367, 'deletions': 37, 'state': 'closed'}, {'id': 700979557, 'number': 90, 'closed': datetime.datetime(2021, 8, 18, 10, 7, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 20, 31, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1431326.0, 'time_delta': '16 days, 13:35:26', 'additions': 756, 'deletions': 7, 'state': 'closed'}, {'id': 696394125, 'number': 88, 'closed': datetime.datetime(2021, 8, 1, 19, 43, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 19, 10, 27, tzinfo=datetime.timezone.utc), 'time_taken': 693168.0, 'time_delta': '8 days, 0:32:48', 'additions': 457, 'deletions': 13, 'state': 'closed'}, {'id': 696182072, 'number': 87, 'closed': datetime.datetime(2021, 7, 24, 14, 42, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 20, 3, 23, tzinfo=datetime.timezone.utc), 'time_taken': 67144.0, 'time_delta': '18:39:04', 'additions': 104, 'deletions': 100, 'state': 'closed'}, {'id': 692513731, 'number': 85, 'closed': datetime.datetime(2021, 7, 20, 8, 18, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 11, 16, 27, tzinfo=datetime.timezone.utc), 'time_taken': 75694.0, 'time_delta': '21:01:34', 'additions': 984, 'deletions': 5, 'state': 'closed'}, {'id': 692125923, 'number': 84, 'closed': datetime.datetime(2021, 7, 19, 8, 24, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 17, 54, 58, tzinfo=datetime.timezone.utc), 'time_taken': 52160.0, 'time_delta': '14:29:20', 'additions': 302, 'deletions': 0, 'state': 'closed'}, {'id': 691889820, 'number': 83, 'closed': datetime.datetime(2021, 8, 2, 12, 38, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 8, 43, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1396488.0, 'time_delta': '16 days, 3:54:48', 'additions': 449, 'deletions': 31, 'state': 'closed'}, {'id': 691549215, 'number': 82, 'closed': datetime.datetime(2021, 7, 29, 13, 53, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 14, 50, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1119777.0, 'time_delta': '12 days, 23:02:57', 'additions': 18, 'deletions': 7, 'state': 'closed'}, {'id': 689252329, 'number': 81, 'closed': datetime.datetime(2021, 7, 14, 13, 43, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 17, 14, 2, tzinfo=datetime.timezone.utc), 'time_taken': 73769.0, 'time_delta': '20:29:29', 'additions': 11, 'deletions': 34, 'state': 'closed'}, {'id': 688117328, 'number': 80, 'closed': datetime.datetime(2021, 7, 21, 8, 9, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 19, 35, 56, tzinfo=datetime.timezone.utc), 'time_taken': 736395.0, 'time_delta': '8 days, 12:33:15', 'additions': 342, 'deletions': 138, 'state': 'closed'}, {'id': 686993333, 'number': 74, 'closed': datetime.datetime(2021, 7, 12, 22, 5, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 19, 21, 42, tzinfo=datetime.timezone.utc), 'time_taken': 269014.0, 'time_delta': '3 days, 2:43:34', 'additions': 106, 'deletions': 30, 'state': 'closed'}, {'id': 686690715, 'number': 73, 'closed': datetime.datetime(2021, 7, 9, 10, 54, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 10, 50, 47, tzinfo=datetime.timezone.utc), 'time_taken': 208.0, 'time_delta': '0:03:28', 'additions': 54, 'deletions': 0, 'state': 'closed'}, {'id': 686678073, 'number': 72, 'closed': datetime.datetime(2021, 7, 14, 13, 49, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 10, 29, 32, tzinfo=datetime.timezone.utc), 'time_taken': 444006.0, 'time_delta': '5 days, 3:20:06', 'additions': 29, 'deletions': 0, 'state': 'closed'}, {'id': 686621410, 'number': 71, 'closed': datetime.datetime(2021, 7, 9, 9, 38, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 9, 4, 17, tzinfo=datetime.timezone.utc), 'time_taken': 2064.0, 'time_delta': '0:34:24', 'additions': 22, 'deletions': 27, 'state': 'closed'}, {'id': 686226775, 'number': 70, 'closed': datetime.datetime(2021, 7, 8, 21, 27, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 18, 13, 24, tzinfo=datetime.timezone.utc), 'time_taken': 11633.0, 'time_delta': '3:13:53', 'additions': 85, 'deletions': 2, 'state': 'closed'}, {'id': 686107231, 'number': 69, 'closed': datetime.datetime(2021, 7, 8, 15, 46, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 15, 14, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1950.0, 'time_delta': '0:32:30', 'additions': 21, 'deletions': 4, 'state': 'closed'}, {'id': 686000113, 'number': 68, 'closed': datetime.datetime(2021, 7, 8, 13, 28, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 13, 9, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1148.0, 'time_delta': '0:19:08', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 685559763, 'number': 67, 'closed': datetime.datetime(2021, 7, 16, 13, 44, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 22, 48, 46, tzinfo=datetime.timezone.utc), 'time_taken': 744924.0, 'time_delta': '8 days, 14:55:24', 'additions': 749, 'deletions': 476, 'state': 'closed'}, {'id': 685387051, 'number': 65, 'closed': datetime.datetime(2021, 7, 7, 20, 34, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 17, 40, 17, tzinfo=datetime.timezone.utc), 'time_taken': 10451.0, 'time_delta': '2:54:11', 'additions': 42, 'deletions': 7, 'state': 'closed'}, {'id': 685357526, 'number': 64, 'closed': datetime.datetime(2021, 7, 7, 20, 15, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 16, 53, 44, tzinfo=datetime.timezone.utc), 'time_taken': 12087.0, 'time_delta': '3:21:27', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 684368122, 'number': 63, 'closed': datetime.datetime(2021, 7, 6, 13, 32, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 13, 15, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1055.0, 'time_delta': '0:17:35', 'additions': 18, 'deletions': 23, 'state': 'closed'}, {'id': 684360316, 'number': 62, 'closed': datetime.datetime(2021, 7, 6, 13, 7, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 13, 5, 56, tzinfo=datetime.timezone.utc), 'time_taken': 111.0, 'time_delta': '0:01:51', 'additions': 14, 'deletions': 14, 'state': 'closed'}, {'id': 684338385, 'number': 61, 'closed': datetime.datetime(2021, 7, 6, 13, 0, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 12, 35, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1523.0, 'time_delta': '0:25:23', 'additions': 37, 'deletions': 5, 'state': 'closed'}, {'id': 684331906, 'number': 60, 'closed': datetime.datetime(2021, 7, 6, 12, 32, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 12, 25, 49, tzinfo=datetime.timezone.utc), 'time_taken': 402.0, 'time_delta': '0:06:42', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 684288360, 'number': 59, 'closed': datetime.datetime(2021, 7, 6, 12, 0, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 11, 21, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2329.0, 'time_delta': '0:38:49', 'additions': 17, 'deletions': 2, 'state': 'closed'}, {'id': 682667966, 'number': 58, 'closed': datetime.datetime(2021, 7, 2, 14, 37, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 14, 21, 15, tzinfo=datetime.timezone.utc), 'time_taken': 971.0, 'time_delta': '0:16:11', 'additions': 31, 'deletions': 0, 'state': 'closed'}, {'id': 682663505, 'number': 57, 'closed': datetime.datetime(2021, 7, 2, 14, 20, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 14, 15, 7, tzinfo=datetime.timezone.utc), 'time_taken': 325.0, 'time_delta': '0:05:25', 'additions': 299, 'deletions': 0, 'state': 'closed'}, {'id': 680972995, 'number': 55, 'closed': datetime.datetime(2021, 7, 7, 20, 14, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 15, 18, 25, tzinfo=datetime.timezone.utc), 'time_taken': 622560.0, 'time_delta': '7 days, 4:56:00', 'additions': 298, 'deletions': 34, 'state': 'closed'}, {'id': 680690324, 'number': 53, 'closed': datetime.datetime(2021, 6, 30, 9, 44, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 9, 31, 9, tzinfo=datetime.timezone.utc), 'time_taken': 801.0, 'time_delta': '0:13:21', 'additions': 110, 'deletions': 138, 'state': 'closed'}, {'id': 678831210, 'number': 52, 'closed': datetime.datetime(2021, 8, 4, 9, 6, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 8, 34, 44, tzinfo=datetime.timezone.utc), 'time_taken': 3198720.0, 'time_delta': '37 days, 0:32:00', 'additions': 252, 'deletions': 117, 'state': 'closed'}, {'id': 677850768, 'number': 51, 'closed': datetime.datetime(2021, 6, 29, 12, 21, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 11, 44, 1, tzinfo=datetime.timezone.utc), 'time_taken': 347860.0, 'time_delta': '4 days, 0:37:40', 'additions': 1119, 'deletions': 110, 'state': 'closed'}, {'id': 677426963, 'number': 50, 'closed': datetime.datetime(2021, 6, 29, 12, 33, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 20, 47, 57, tzinfo=datetime.timezone.utc), 'time_taken': 402346.0, 'time_delta': '4 days, 15:45:46', 'additions': 384, 'deletions': 2, 'state': 'closed'}, {'id': 677300107, 'number': 48, 'closed': datetime.datetime(2021, 6, 24, 20, 37, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 17, 25, 34, tzinfo=datetime.timezone.utc), 'time_taken': 11497.0, 'time_delta': '3:11:37', 'additions': 203, 'deletions': 0, 'state': 'closed'}, {'id': 676973148, 'number': 47, 'closed': datetime.datetime(2021, 6, 25, 13, 3, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 10, 6, 40, tzinfo=datetime.timezone.utc), 'time_taken': 97015.0, 'time_delta': '1 day, 2:56:55', 'additions': 631, 'deletions': 107, 'state': 'closed'}, {'id': 676669374, 'number': 46, 'closed': datetime.datetime(2021, 6, 23, 22, 54, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 22, 47, 45, tzinfo=datetime.timezone.utc), 'time_taken': 379.0, 'time_delta': '0:06:19', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 676665448, 'number': 45, 'closed': datetime.datetime(2021, 6, 23, 22, 39, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 22, 36, 44, tzinfo=datetime.timezone.utc), 'time_taken': 151.0, 'time_delta': '0:02:31', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 676432619, 'number': 43, 'closed': datetime.datetime(2021, 6, 23, 22, 32, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 16, 10, 43, tzinfo=datetime.timezone.utc), 'time_taken': 22916.0, 'time_delta': '6:21:56', 'additions': 367, 'deletions': 5, 'state': 'closed'}, {'id': 676247748, 'number': 41, 'closed': datetime.datetime(2021, 6, 23, 13, 6, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 12, 36, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1792.0, 'time_delta': '0:29:52', 'additions': 140, 'deletions': 4, 'state': 'closed'}, {'id': 676168413, 'number': 40, 'closed': datetime.datetime(2021, 6, 23, 11, 52, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 10, 44, 34, tzinfo=datetime.timezone.utc), 'time_taken': 4077.0, 'time_delta': '1:07:57', 'additions': 226, 'deletions': 18, 'state': 'closed'}, {'id': 675650793, 'number': 37, 'closed': datetime.datetime(2021, 6, 23, 9, 17, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 18, 5, 56, tzinfo=datetime.timezone.utc), 'time_taken': 54715.0, 'time_delta': '15:11:55', 'additions': 93, 'deletions': 113, 'state': 'closed'}, {'id': 675455385, 'number': 35, 'closed': datetime.datetime(2021, 6, 22, 14, 7, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 14, 5, 43, tzinfo=datetime.timezone.utc), 'time_taken': 115.0, 'time_delta': '0:01:55', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 675235937, 'number': 29, 'closed': datetime.datetime(2021, 6, 22, 10, 6, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 9, 17, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2961.0, 'time_delta': '0:49:21', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 675232538, 'number': 28, 'closed': datetime.datetime(2021, 6, 22, 14, 2, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 9, 12, 48, tzinfo=datetime.timezone.utc), 'time_taken': 17357.0, 'time_delta': '4:49:17', 'additions': 20, 'deletions': 2, 'state': 'closed'}, {'id': 675230221, 'number': 27, 'closed': datetime.datetime(2021, 6, 23, 9, 2, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 9, 9, 51, tzinfo=datetime.timezone.utc), 'time_taken': 85960.0, 'time_delta': '23:52:40', 'additions': 445, 'deletions': 135, 'state': 'closed'}, {'id': 673444763, 'number': 21, 'closed': datetime.datetime(2021, 6, 24, 10, 14, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 12, 47, tzinfo=datetime.timezone.utc), 'time_taken': 509231.0, 'time_delta': '5 days, 21:27:11', 'additions': 280, 'deletions': 81, 'state': 'closed'}, {'id': 673333431, 'number': 20, 'closed': datetime.datetime(2021, 6, 23, 8, 49, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 9, 53, 53, tzinfo=datetime.timezone.utc), 'time_taken': 428146.0, 'time_delta': '4 days, 22:55:46', 'additions': 412, 'deletions': 129, 'state': 'closed'}, {'id': 673326473, 'number': 19, 'closed': datetime.datetime(2021, 6, 21, 14, 59, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 9, 43, 21, tzinfo=datetime.timezone.utc), 'time_taken': 278191.0, 'time_delta': '3 days, 5:16:31', 'additions': 134, 'deletions': 90, 'state': 'closed'}, {'id': 669418397, 'number': 17, 'closed': datetime.datetime(2021, 6, 23, 16, 19, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 9, 48, 43, tzinfo=datetime.timezone.utc), 'time_taken': 801074.0, 'time_delta': '9 days, 6:31:14', 'additions': 115, 'deletions': 4, 'state': 'closed'}, {'id': 668056858, 'number': 16, 'closed': datetime.datetime(2021, 6, 21, 12, 47, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 11, 52, 27, tzinfo=datetime.timezone.utc), 'time_taken': 867325.0, 'time_delta': '10 days, 0:55:25', 'additions': 2171, 'deletions': 92, 'state': 'closed'}, {'id': 664993585, 'number': 14, 'closed': datetime.datetime(2021, 6, 25, 11, 47, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 14, 54, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1457585.0, 'time_delta': '16 days, 20:53:05', 'additions': 396, 'deletions': 9, 'state': 'closed'}, {'id': 662942274, 'number': 13, 'closed': datetime.datetime(2021, 6, 7, 20, 21, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 6, 12, 40, 42, tzinfo=datetime.timezone.utc), 'time_taken': 114046.0, 'time_delta': '1 day, 7:40:46', 'additions': 1248, 'deletions': 10, 'state': 'closed'}, {'id': 660830581, 'number': 11, 'closed': datetime.datetime(2021, 6, 7, 20, 0, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 3, 11, 35, 10, tzinfo=datetime.timezone.utc), 'time_taken': 375933.0, 'time_delta': '4 days, 8:25:33', 'additions': 928, 'deletions': 48, 'state': 'closed'}, {'id': 657527263, 'number': 7, 'closed': datetime.datetime(2021, 6, 7, 20, 29, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 29, 19, 59, 26, tzinfo=datetime.timezone.utc), 'time_taken': 779378.0, 'time_delta': '9 days, 0:29:38', 'additions': 2310, 'deletions': 32, 'state': 'closed'}, {'id': 650763472, 'number': 6, 'closed': datetime.datetime(2021, 6, 4, 13, 22, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 23, 10, 22, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1047563.0, 'time_delta': '12 days, 2:59:23', 'additions': 359, 'deletions': 7, 'state': 'closed'}, {'id': 650630316, 'number': 4, 'closed': datetime.datetime(2021, 5, 22, 20, 58, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 13, 44, 42, tzinfo=datetime.timezone.utc), 'time_taken': 26048.0, 'time_delta': '7:14:08', 'additions': 62, 'deletions': 1, 'state': 'closed'}, {'id': 650110359, 'number': 2, 'closed': datetime.datetime(2021, 5, 22, 12, 8, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 16, 13, 17, tzinfo=datetime.timezone.utc), 'time_taken': 71713.0, 'time_delta': '19:55:13', 'additions': 74, 'deletions': 2, 'state': 'closed'}]"
