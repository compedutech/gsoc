pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
829749244,recent_topics: Add Private message to recent_topics.,"We add Private message to the Recent topics to make it an
all-encompassing overview of everything that's happening for a user.

![image](https://user-images.githubusercontent.com/51414879/165738465-570a47ad-fd75-42ec-94d2-f32cee70f747.png)
Fixes #19449
",True,20890,https://api.github.com/repos/zulip/zulip/pulls/20890,https://github.com/zulip/zulip/pull/20890,closed,390,121,13,1,72,61,5,0,"[{'name': 'priority: high'}, {'name': 'size: XL'}, {'name': 'area: recent-conversations'}, {'name': 'release goal'}, {'name': 'chat.zulip.org review'}]",2022-01-23 13:29:09+00:00,2022-10-17 22:02:01+00:00,23099572.0,"267 days, 8:32:52","[{'comment_id': 799275449, 'comment_body': ""We don't need this condition anymore. Message is of only two types."", 'comment_created': datetime.datetime(2022, 2, 4, 8, 59, 41, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 799276467, 'comment_body': 'We should extract this to a function `get_key_from_message`.', 'comment_created': datetime.datetime(2022, 2, 4, 9, 0, 36, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 799278174, 'comment_body': 'Why remove blank new lines? They help in reading code sometimes.', 'comment_created': datetime.datetime(2022, 2, 4, 9, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 799284345, 'comment_body': ""Let's extract a function to return the common details between `format_pm` and `format_topic` instead of repeating all the code here."", 'comment_created': datetime.datetime(2022, 2, 4, 9, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 799286098, 'comment_body': 'This needs a condition to check the message is a stream message and remove the ` topic_data.type !== ""private""` condition from here since we are still processing `unread` private messages.', 'comment_created': datetime.datetime(2022, 2, 4, 9, 12, 39, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 799287684, 'comment_body': 'Extract this into `get_thread_unread_count_from_message` and use it in both extracted `format_pm/topic` function above and here.', 'comment_created': datetime.datetime(2022, 2, 4, 9, 14, 57, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 799360118, 'comment_body': '@amanagr is it okay to set the `pm_key` as `to_user_ids` ?', 'comment_created': datetime.datetime(2022, 2, 4, 10, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 799374645, 'comment_body': 'It must have been by mistake. Resolved!!', 'comment_created': datetime.datetime(2022, 2, 4, 11, 12, 48, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 799509700, 'comment_body': 'It is fine but `recipient_id` is better. So, we should use `recipient_id` here, thanks for asking.', 'comment_created': datetime.datetime(2022, 2, 4, 14, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 799605245, 'comment_body': 'I have changed it to `topic_data.type === ""stream""`. Unread PM\'s are processed with this. ', 'comment_created': datetime.datetime(2022, 2, 4, 16, 7, 18, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 804248609, 'comment_body': 'We should replace this test with something verifying the processing of private messages :)', 'comment_created': datetime.datetime(2022, 2, 10, 23, 51, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 804478690, 'comment_body': 'on it \r\n', 'comment_created': datetime.datetime(2022, 2, 11, 9, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 849816531, 'comment_body': 'All strings should be tagged for translation. \r\n\r\nhttps://zulip.readthedocs.io/en/latest/translating/internationalization.html', 'comment_created': datetime.datetime(2022, 4, 13, 19, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 849818099, 'comment_body': ""What's your thinking on the approach of adding a new template here vs. adding conditionals in `static/templates/recent_topic_row.hbs`?  It seems like several blocks, including this one and the one below, could be identical or nearly identical, and it'd potentially help a lot for readability/maintainability to share code."", 'comment_created': datetime.datetime(2022, 4, 13, 19, 21, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 849818782, 'comment_body': 'We should include an explanation of why we think the rule should not apply here when doing these overrides.', 'comment_created': datetime.datetime(2022, 4, 13, 19, 22, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 849819290, 'comment_body': ""How is this 53px determined? It's possible we want to do some math with variables like we have in `left-sidebar.css` to compute this value... magic numbers like 53px are rarely a good way to do things."", 'comment_created': datetime.datetime(2022, 4, 13, 19, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 849820132, 'comment_body': ""Same question with this 46px; I don't understand how it related to the 53px below either."", 'comment_created': datetime.datetime(2022, 4, 13, 19, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 849820322, 'comment_body': 'Can you add a comment explaining the intent of this block?  Negative margins are generally a bad pattern, and I wonder if we could do something more declarative with flex or another modern CSS feature here.', 'comment_created': datetime.datetime(2022, 4, 13, 19, 24, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 849832903, 'comment_body': ""@timabbott Main concerns for creating new template was introduction of lots of conditionals in `recent_topic_row.hbs` for icons, titles etc. which I think it would clutter the template, and some variables name wouldn't match their use, that could be confusing, or maybe we can use common names such as `thread_key` in place of `topic_key` and `pm_key`. "", 'comment_created': datetime.datetime(2022, 4, 13, 19, 42, 14, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 850001740, 'comment_body': ""Yeah, I think `conversation_key` would be a good common variable name -- we can do a preparatory refactoring commit to migrates the existing template to that, simplifying the implementation.\r\n\r\nI think it's OK for moderately size blocks to be inside conditions -- it's just silly to copy the entire file when large sections are identical. (This often leads to problems where we fix a bug in only one copy)."", 'comment_created': datetime.datetime(2022, 4, 14, 0, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988438635, 'comment_body': ""Why is this if/else outside the `recent_topics_actions` block? Oh, I guess we have this existing weird setup -- the name of `recent_topics_actions` suggests there is a single div, but there's actually just one.\r\n\r\nAnd I guess it's intentional that you can't mark as read from this UI, but that seems like something we'd want to change in a follow-up?"", 'comment_created': datetime.datetime(2022, 10, 5, 23, 46, 58, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988449757, 'comment_body': ""Why do we have this containing `div` with the `flex_container` class only for private messages? I'm wondering if we can shrink the region that has this if/else block, and/or just make the markup more similar, which in turn would make reading the CSS easier.\r\n\r\n(I did notice that the topic block does have both stream and PM versions inside a shared `flex_container` div)."", 'comment_created': datetime.datetime(2022, 10, 6, 0, 16, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988450574, 'comment_body': 'This explanation is not particularly satisfying. I believe StyleLint bans using prefixes like `-webkit-box` because they are not going to work on Firefox; see: https://caniuse.com/?search=webkit-box\r\n\r\nYou can test on Firefox to see if this is indeed broken there, but generally our preference will be to use a different CSS mechanism that is part of the standard.\r\n\r\nIf we need this despite it not being a standard, a comment for this situation would be one that explains ""We use `display: webkit-box` here despite it not being supported on Firefox because ..."", aka explaining the context that the author understands for why it\'s appropriate to override the linter here.', 'comment_created': datetime.datetime(2022, 10, 6, 0, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988451218, 'comment_body': 'How are these numbers picked? And how do they related to the styles in `user_circles.css`?', 'comment_created': datetime.datetime(2022, 10, 6, 0, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988451910, 'comment_body': 'This color does not appear anywhere else in the app; how did you pick it? Could the colors for these icons be represented as just an `opacity` on the default text color for the light/dark themes?', 'comment_created': datetime.datetime(2022, 10, 6, 0, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988452558, 'comment_body': ""Let's call this `message_to_conversation_unread_count(msg)`; I'd also prefer to have it live in `recent_topics_ui.js` rather than here, since this file tries to avoid dealing with full message objects."", 'comment_created': datetime.datetime(2022, 10, 6, 0, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988457257, 'comment_body': 'Can you explain this change? It seems unrelated to the rest of the pull request and isn\'t called by the new code.\r\n\r\nI also don\'t expect a real message to fail to have a `display_reply_to`...\r\n\r\nNow, it seems very possible we should have an independent commit to tweak this function to have an explicit code path for recent topics; I think at present it probably always returns `""""`, but it might be better to make that explicit with a check at the top of the function -- we\'ll likely want the same for the inbox view too when we do that.', 'comment_created': datetime.datetime(2022, 10, 6, 0, 38, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988458679, 'comment_body': ""This logic will fail once this widget is internationalized. You could check a CSS class instead, but I also wonder if we could instead just have this function not be called before the `topics_widget` is initialized and delete this block?\r\n\r\nThe comment doesn't super make sense to me; how is `get_current_list` related to this function?"", 'comment_created': datetime.datetime(2022, 10, 6, 0, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988459706, 'comment_body': 'I\'d define `const recent_conversation_key_prefix = ""recent_conversation:""` at the top of the file, and use that variable both in the `.slice` below and in the related code that generates this prefix.', 'comment_created': datetime.datetime(2022, 10, 6, 0, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988460003, 'comment_body': ""Let's use better function/variable names than `msg_data/msg_info`:\r\n```\r\nfunction format_conversation(conversation_data) {\r\n   const context = {};\r\n    \r\n```\r\n\r\nwe're doing computations around a conversation, not a message, here; and the thing we're returning is the context used to render an HTML template."", 'comment_created': datetime.datetime(2022, 10, 6, 0, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988463116, 'comment_body': 'I think you can probably deduplicate most of the ~6 lines here for populating the `senders` / etc. fields; only the code to compute `all_senders` and `senders` appears to be different?', 'comment_created': datetime.datetime(2022, 10, 6, 0, 54, 35, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988464258, 'comment_body': ""This sorting algorithm is likely wrong; you can't do this comparison without `toLowerCase` when the above one was done with it.\r\n\r\n`return util.strcmp(a.toLowerCase(), b.toLowerCase())` might be what you want to use instead of this function anyway."", 'comment_created': datetime.datetime(2022, 10, 6, 0, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 988465455, 'comment_body': 'Is this algorithm equivalent to \r\n```\r\nfunction topic_sort_key(conversation_data) {\r\n    const message = message_store.get(conversation.last_message_id)\r\n    if (message.type === ""private"") {\r\n        return message.display_reply_to;\r\n    }\r\n    return message.topic;\r\n}\r\n\r\nfunction topic_sort(a, b) {\r\n   return sort_comparator(topic_sort_key(a), topic_sort_key(b));\r\n}\r\n```\r\n\r\nBecause if so, that\'d be a lot more readable.', 'comment_created': datetime.datetime(2022, 10, 6, 1, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 990434893, 'comment_body': 'Mark as read is possible from this UI, it just takes some time to rerender and remove the unread counter. ', 'comment_created': datetime.datetime(2022, 10, 7, 19, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 990445211, 'comment_body': ""In `Private message` row we need to show the presence/group indicator for PMs, for this reason I have used the `flex_container` for only PMs. I'll try to shrink it. "", 'comment_created': datetime.datetime(2022, 10, 7, 19, 33, 32, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 990604675, 'comment_body': '@timabbott This is for the closed composed ui recipient change along with the change in the recent topics row. \r\nOn executing the `set_table_focus`, we call `compose_closed_ui.update_reply_recipient_label(message);` which in turn calls the `get_recipient_label` in `compose_closed_ui`.\r\nhttps://github.com/zulip/zulip/blob/686bdc23cd78708a688718882d21d7e1797bee72/static/js/recent_topics_ui.js#L188-L201\r\n\r\nAnd the `message` object is obtained from the above code, which only has `stream` and `topic` or `recipients`, the `display_reply_to` ', 'comment_created': datetime.datetime(2022, 10, 8, 7, 26, 57, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 995386747, 'comment_body': '@timabbott This function works as intended but there is a small bug, resolved topics get sorted before the unresolved topics.', 'comment_created': datetime.datetime(2022, 10, 14, 6, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 995387119, 'comment_body': '@timabbott The size of the `user_circle` is kept constant with the user_circle in left sidebar. But it was looking weird so I decreased the size by 1px. ', 'comment_created': datetime.datetime(2022, 10, 14, 6, 26, 51, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 995412150, 'comment_body': '@timabbott I have converted the color of both the icons to `opacity` in dark as well as light mode. ', 'comment_created': datetime.datetime(2022, 10, 14, 7, 2, 18, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 995434529, 'comment_body': 'I have changed the function name to `format_conversation(conversation_data)` and `msg_info` to `context`.', 'comment_created': datetime.datetime(2022, 10, 14, 7, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 995454396, 'comment_body': 'I have added the `data-private` attribute in the `tr` tag which would not pose any problem with internalization.', 'comment_created': datetime.datetime(2022, 10, 14, 7, 50, 3, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 996221774, 'comment_body': ""OK; I'm not sure I understand the bug though."", 'comment_created': datetime.datetime(2022, 10, 15, 0, 4, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 996222684, 'comment_body': ""OK, this is improved; but I still don't understand when this function will be called before `topics_widget` is initialized; can you explain that?"", 'comment_created': datetime.datetime(2022, 10, 15, 0, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 996225753, 'comment_body': ""OK -- let's add a comment noting that this case is for when this function is passed a recent topics private message row. That will make it a lot easier to understand :).\r\n\r\nBut I also wonder -- isn't this fake `message` object only used for that one function? \r\n\r\nMy read at this point is that we should probably just add a prep commit to `compose_closed_ui.js` that changes the interface between these two modules, and just pass a `label` parameter that's constructed in this function to `update_reply_recipient_label` here. The name `message` is confusing, since it's not a message object we're passing, and we don't seem to be materially sharing code usefully with `get_recipient_label`.\r\n"", 'comment_created': datetime.datetime(2022, 10, 15, 0, 27, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 996228791, 'comment_body': ""I did a bit more reading and think this is a mess that's a bit out of scope here; I'll add some comments and we can open a follow-up issue: https://github.com/zulip/zulip/issues/23250"", 'comment_created': datetime.datetime(2022, 10, 15, 0, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 996228909, 'comment_body': ""Testing, all that I've observed is that resolved topics are sorted alphabetically after everything, presumably because the unicode check character is larger than the alphabet characters. This seems fine?"", 'comment_created': datetime.datetime(2022, 10, 15, 0, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 996265047, 'comment_body': '@timabbott When using `util.strcmp` for comparing the resolved topics appear at top of the list in sorted manner\r\n![image](https://user-images.githubusercontent.com/51414879/195973937-fad47b68-04be-4690-9f55-ee9b84099c5b.png)\r\nAnd then comes the unsorted topics (in sorted manner). Is this the expected behaviour?\r\n', 'comment_created': datetime.datetime(2022, 10, 15, 7, 3, 54, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 996269923, 'comment_body': 'I have tested with firefox and is working as expected.', 'comment_created': datetime.datetime(2022, 10, 15, 7, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 997179016, 'comment_body': '@timabbott The bug faced here was that on reload of page, using key board navigation on first few seconds after the reload returned `topics_widget.get_current_list()` undefined.\r\n\r\nThis is due to the fact that `complete_rerender` calls `revive_current_focus` as `callback_after_render` and `revive_current_focus` calls `set_table_focus` which calls `get_row_type` which uses `get_current_list` thus get_current_list is call before the widget is returned. \r\n\r\n', 'comment_created': datetime.datetime(2022, 10, 17, 15, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 997398277, 'comment_body': '@timabbott I have tested both on firefox and chrome, line clamping using webkit is working fine. Can we use it in our final versions with suitable comments?', 'comment_created': datetime.datetime(2022, 10, 17, 18, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 997428405, 'comment_body': ""This should be:\r\n```\r\n-    {{#if (or filter_pm not is_spectator)}}\r\n+    {{#if filter_pm}}\r\n```\r\n\r\n`filter_pm` is always false if a spectator, so it doesn't accomplish anything, and this tweak better matches the other filters which all have the same property."", 'comment_created': datetime.datetime(2022, 10, 17, 19, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 997428530, 'comment_body': 'Removed this trailing whitespace.', 'comment_created': datetime.datetime(2022, 10, 17, 19, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 997429575, 'comment_body': ""No, if you hover over a private message count, one can't mark it as read here. I think that's probably a bug?"", 'comment_created': datetime.datetime(2022, 10, 17, 19, 24, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 997430074, 'comment_body': 'OK, that makes sense as a constraint. Seems likely we should be able to clean this up as a follow-up.', 'comment_created': datetime.datetime(2022, 10, 17, 19, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 997431752, 'comment_body': ""I'll change the comment and integrate this, but please start a #frontend thread about whether there's a better way to do line clamping without this `webkit-box` feature that is webkit-specific."", 'comment_created': datetime.datetime(2022, 10, 17, 19, 27, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 997433534, 'comment_body': 'This comment should explain the encoding. ', 'comment_created': datetime.datetime(2022, 10, 17, 19, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 997440745, 'comment_body': 'Added this explanatory comment:\r\n\r\n        // The to_user_ids field on a private message object is a                                        \r\n        // string containing the user IDs involved in the message in                                     \r\n        // sorted order.                                                                                 \r\n', 'comment_created': datetime.datetime(2022, 10, 17, 19, 38, 5, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 997441047, 'comment_body': '-    return """";\r\n+    throw new Error(`Invalid message type ${msg.type}`);\r\n\r\nOther message types should be impossible; added an exception here.', 'comment_created': datetime.datetime(2022, 10, 17, 19, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 997441225, 'comment_body': 'Yes, I will start the conversation there.', 'comment_created': datetime.datetime(2022, 10, 17, 19, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 997450173, 'comment_body': ""OK yeah the question was unclear. I think what you're saying is replacing the `toLowerCase` comparisons we have with `util.strcmp` would cause resolved topics to be sorted first, which I think I agree we probably don't want. So I think we can stick with what you have in this PR."", 'comment_created': datetime.datetime(2022, 10, 17, 19, 49, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 997452326, 'comment_body': 'OK can you open an issue with a title like ""Refactor recent_topics_ui.get_row_type to not explicitly depend on topics_widget having been rendered"" with a clear description of that sequence (spelled out a bit more for someone not looking at the code) and reproduction steps for the bug one would have if we removed this block? \r\n\r\nThis logic is somewhat brittle but I think we can fix it as a follow-up issue.', 'comment_created': datetime.datetime(2022, 10, 17, 19, 52, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '67e4b966d8c4d5e00863d54bda4d34e0c15ef1cd', 'committer_username': 'madrix01', 'committer_name': 'Shlok Patel', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 5, 16, 5, 17, tzinfo=datetime.timezone.utc)}]",Shlok Patel,51414879,,User,,52,,58,59
989823416,inbox: Add inbox view.,"Issue: #22189

",False,22408,https://api.github.com/repos/zulip/zulip/pulls/22408,https://github.com/zulip/zulip/pull/22408,closed,1317,10,31,1,12,19,8,0,"[{'name': 'feedback wanted'}, {'name': 'area: message feed (uncategorized)'}, {'name': 'priority: high'}, {'name': 'size: XL'}, {'name': 'difficult'}, {'name': 'has conflicts'}, {'name': 'UX'}, {'name': 'redesign'}]",2022-07-07 07:51:44+00:00,2023-09-11 18:52:51+00:00,37278067.0,"431 days, 11:01:07","[{'comment_id': 916171325, 'comment_body': 'export function', 'comment_created': datetime.datetime(2022, 7, 7, 18, 33, 33, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 1102007870, 'comment_body': ""Let's put any click handlers in a `initialize` function in `inbox_ui.js`.\r\n\r\nI suppose it could also be useful to do a preparatory refactor to move the recent topics click handlers to their module; in general we're hoping to get rid of this module."", 'comment_created': datetime.datetime(2023, 2, 9, 20, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102009962, 'comment_body': ""I would hope that we wouldn't need an explicit rerender when changing theme -- we should be controlling the color scheme via CSS. @madrix01 is there a reason you needed this?"", 'comment_created': datetime.datetime(2023, 2, 9, 20, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102013621, 'comment_body': ""This line should be deleted; it does nothing and makes the switch statement here very confusing. \r\n\r\nWhat we're doing is having a single block of code be the handler for all of these keys, and that handle is to dispatch to the recent topics and inbox modules' own code if appropriate, and that's much more clear if we just have two if statements in the block here."", 'comment_created': datetime.datetime(2023, 2, 9, 20, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102014215, 'comment_body': 'This is an example of something that should instead be replaced with a better abstraction, ideally. See\r\n\r\nhttps://chat.zulip.org/#narrow/stream/6-frontend/topic/recent_topics_util.2Eis_visible/near/1506369', 'comment_created': datetime.datetime(2023, 2, 9, 20, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102016168, 'comment_body': ""I see, it's probably the `correct_stream_color` algorithm. This is probably fine, but needs a comment, or maybe better, we should extract a function `dark_theme.rerender_components_with_javascript_color_logic()` that is just a wrapper for `inbox_ui.complete_rerender`"", 'comment_created': datetime.datetime(2023, 2, 9, 20, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102017653, 'comment_body': ""I'm not sure what features we're using of this, but it looks to be a fairly large module compared to all the alternatives, and it's at a size level that is nontrivial for a pretty minor functionality, so we should look at whether a 3x smaller alternative would work instead.\r\n\r\nhttps://bundlephobia.com/package/chroma-js@2.4.2\r\n\r\n"", 'comment_created': datetime.datetime(2023, 2, 9, 20, 57, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102018170, 'comment_body': 'This is another call point that should definitely be ""Is the message list visible"".', 'comment_created': datetime.datetime(2023, 2, 9, 20, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102021358, 'comment_body': ""It could be a good prep commit/PR to replace this coding pattern where we basically have a bunch of copies of `deselect_top_left_corner_items` each with one item removed -- is there a reason we can't just have these all call `deselect_top_left_corner_items` and then select the thing they want ... and also why `deselect_top_left_corner_items` couldn't just use a single selector to catch all the top-left corner things we want to deselect if currently selected?"", 'comment_created': datetime.datetime(2023, 2, 9, 21, 2, 34, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102021849, 'comment_body': ""Let's put a comment here that we need this in the context because we want `inbox` to only be available in development for now, so we can remember why it's here for when we want to remove it."", 'comment_created': datetime.datetime(2023, 2, 9, 21, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102023129, 'comment_body': ""@madrix01 can you explain why you added these new functions rather than using existing APIs for this module? I don't have a clear idea of what problem is being solved; I would expect `get_counts` to just do it."", 'comment_created': datetime.datetime(2023, 2, 9, 21, 4, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102023340, 'comment_body': 'This looks like a copy of `get_counts`; maybe it was a merge conflict accident?', 'comment_created': datetime.datetime(2023, 2, 9, 21, 5, 14, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102024333, 'comment_body': ""Hmm, reading this code, don't we need to update something when a private message gets marked as unread too?\r\n\r\n@amanagr is this an existing bug in recent topics? I don't see a parallel code path there either..."", 'comment_created': datetime.datetime(2023, 2, 9, 21, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102025645, 'comment_body': ""Is this a misresolved merge conflict? I'm not sure why we'd need to change the logo SVG for recent topics."", 'comment_created': datetime.datetime(2023, 2, 9, 21, 8, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102027850, 'comment_body': ""I should add that I'm OK with integrating this as-is and dealing with that as a follow-up if it's nontrivial. Perhaps it's worth starting a #frontend thread about this library choice, since I think there are similar color transformations needed elsewhere in the redesign project."", 'comment_created': datetime.datetime(2023, 2, 9, 21, 10, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102031863, 'comment_body': ""So there's a substantial portion of this logic that duplicates the recent topics version of it; except this is a stale version. @amanagr perhaps you can figure out a way to make most of this be done as calls to some common functions with names like `narrow.show_message_feed()` and `narrow.hide_message_feed()` that do all the work that is really about getting ready for that view, not something about recent topics/inbox views? Idunno, I just worry about this having skew with Recent Topics -- it's already grown some."", 'comment_created': datetime.datetime(2023, 2, 9, 21, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102033927, 'comment_body': ""I'm not sure about these IDs; they seem overly generic. I propose a pattern along the lines of `#topics:14` -> `#inbox_topics_for_stream_14`.\r\n\r\nI this module is using these functions consistently, though, that should just require changes there."", 'comment_created': datetime.datetime(2023, 2, 9, 21, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1102034930, 'comment_body': 'Should this be `LS_KEY`? We usually use all-caps for hardcoded constants.', 'comment_created': datetime.datetime(2023, 2, 9, 21, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 1103753897, 'comment_body': 'Started discussion in https://chat.zulip.org/#narrow/stream/101-design/topic/UI.20redesign.3A.20stream.2Ftopic.20header.20bar/near/1413426', 'comment_created': datetime.datetime(2023, 2, 12, 8, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}]","[{'commit_sha': '81e71e5f462e61e0a97ef4cb307d2aefd5e0231f', 'committer_username': 'madrix01', 'committer_name': 'Shlok Patel', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 5, 16, 5, 17, tzinfo=datetime.timezone.utc)}]",Shlok Patel,51414879,,User,,52,,58,59
998618928,settings: Improve user deactivation system.,"Issue #18941 
We currently don't have any provision for deactivating spammer signed up in the organization. We add an option of marking a user as ""spammer"" when deactivating the user, on top that there appears a dropdown for selecting whether you want to delete the messages of spammer or not.

**Screenshots**
![Screenshot from 2022-07-21 17-57-44](https://user-images.githubusercontent.com/51414879/180213415-79d86b38-a4c7-4056-a202-6bc3b55a4ada.png)


**Self-review checklist**
 
* [x]  [Self-reviewed](https://zulip.readthedocs.io/en/latest/contributing/code-reviewing.html#how-to-review-code) the changes for clarity and maintainability (variable names, code reuse, readability, etc.).

Communicate decisions, questions, and potential concerns.
* [ ]  Explains differences from previous plans (e.g., issue description).
* [ ]  Highlights technical choices and bugs encountered.
* [ ]  Calls out remaining decisions and concerns.
* [x]  Automated tests verify logic where appropriate.

Individual commits are ready for review (see [commit discipline](https://zulip.readthedocs.io/en/latest/contributing/version-control.html)).

* [x]  Each commit is a coherent idea.
* [x]  Commit message(s) explain reasoning and motivation for changes.

Completed manual review and testing of the following:

* [x]  Visual appearance of the changes.
* [ ]  Responsiveness and internationalization.
* [ ]  Strings and tooltips.
* [x]  End-to-end functionality of buttons, interactions and flows.
* [x]  Corner cases, error conditions, and easily imagined bugs.

",False,22506,https://api.github.com/repos/zulip/zulip/pulls/22506,https://github.com/zulip/zulip/pull/22506,open,284,6,14,2,12,9,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2022-07-17 11:09:25+00:00,,0.0,,"[{'comment_id': 961110565, 'comment_body': ""Removing `TYPE_CHECKING` here introduced a bug that was fixed in the next commit; I'm fixing that before merging the first commit, but be careful about this sort of thing, as it can often cause partially merging a PR to break CI."", 'comment_created': datetime.datetime(2022, 9, 1, 21, 19, 35, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 961112134, 'comment_body': ""I'll keep that in mind. Thank you!!"", 'comment_created': datetime.datetime(2022, 9, 1, 21, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 961122342, 'comment_body': 'Reading this I noticed this bug: \r\n\r\nFixed in 43a57494f90c98022e20913c37f81c4d186e4614, including rebasing your commit on top of that.', 'comment_created': datetime.datetime(2022, 9, 1, 21, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 961122939, 'comment_body': '@alya is removing ""(spammer)"" from the name of a user when reactivating them part of the design for this feature?\r\n\r\nI would prefer we not do so, both because that\'s not going to work with i18n if we translate ""spammer"", which we probably should, and also because that feels like a separate operation.', 'comment_created': datetime.datetime(2022, 9, 1, 21, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 961123805, 'comment_body': ""You should use a `defaultdict` so you don't need these conditionals."", 'comment_created': datetime.datetime(2022, 9, 1, 21, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 961124170, 'comment_body': ""We don't generally do blank lines at the start of functions; remove this :)"", 'comment_created': datetime.datetime(2022, 9, 1, 21, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 961125793, 'comment_body': ""This object definitely doesn't belong the `Message` model, but in another comment I'll propose an API change that means we don't need it anyway."", 'comment_created': datetime.datetime(2022, 9, 1, 21, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 961126585, 'comment_body': 'So after some discussion with @alya, I think it\'s probably better replace the current dropdown design with 3 checkboxes:\r\n* Delete all private messages\r\n* Delete all public stream messages\r\n* Delete all private stream messages\r\n\r\nWith the default being all checked if you selected ""Mark as spammer"". \r\n\r\nThe extra flexibility seems useful and it\'s probably about as simple from an API perpsective.\r\n\r\nWe can call the checkboxes `delete_private_messages`, `delete_public_stream_messages`, `delete_private_stream_messages`.', 'comment_created': datetime.datetime(2022, 9, 1, 21, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 961127195, 'comment_body': ""Let's add a field to the `extra_data` dict in the `RealmAuditLog` entry below with the spammer/deletion parameters that were used for the deactivation."", 'comment_created': datetime.datetime(2022, 9, 1, 21, 45, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '687b68e3a201b89614ce07c736dff648498d4f8b', 'committer_username': 'madrix01', 'committer_name': 'Shlok Patel', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 5, 16, 5, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b8d3a7e1ad2cecbd5a7b1a56e99726e00f80556', 'committer_username': 'madrix01', 'committer_name': 'Shlok Patel', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 5, 16, 5, 17, tzinfo=datetime.timezone.utc)}]",Shlok Patel,51414879,,User,,52,,58,59
858903611,left_sidebar: Add section for different stream types.,"Issue #19812

The left sidebar has four potential stream groupings.
This becomes confusing when the groupings are not labeled.
To address this, we should add section headings to the
left side bar with the following names:
* Pinned streams (+ muted pinned streams)
* Active streams (+ muted active streams)
* Inactive streams

![image](https://user-images.githubusercontent.com/51414879/159350693-f748ce58-d911-473d-9017-e46db11344d0.png)
![image](https://user-images.githubusercontent.com/51414879/159350769-0e270b60-f41d-4029-8896-b037c497b6ae.png)
",True,21201,https://api.github.com/repos/zulip/zulip/pulls/21201,https://github.com/zulip/zulip/pull/21201,closed,243,40,11,1,14,13,5,0,"[{'name': 'area: left sidebar (misc)'}, {'name': 'priority: high'}, {'name': 'size: XL'}, {'name': 'redesign'}, {'name': 'integration review'}]",2022-02-20 20:37:37+00:00,2022-08-07 04:59:24+00:00,14458907.0,"167 days, 8:21:47","[{'comment_id': 825496532, 'comment_body': 'It appears you wanted to keep this for testing your changes locally?', 'comment_created': datetime.datetime(2022, 3, 13, 19, 59, 11, tzinfo=datetime.timezone.utc), 'commenter': 'm-e-l-u-h-a-n', 'type': 'User'}, {'comment_id': 825497204, 'comment_body': '```javascript\r\n$(""#stream_filters"").on(""click"", ""li .toggle_stream_mute"", (e) => {\r\n```\r\nI think `.toggle_stream_mute` should be `.toggle_stream_muted`', 'comment_created': datetime.datetime(2022, 3, 13, 20, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'm-e-l-u-h-a-n', 'type': 'User'}, {'comment_id': 825497447, 'comment_body': 'I think we should have a template for this with Active/Inactive/Pinned as template variable. Injecting raw html like this appears a bit unconventional.', 'comment_created': datetime.datetime(2022, 3, 13, 20, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'm-e-l-u-h-a-n', 'type': 'User'}, {'comment_id': 825497551, 'comment_body': 'Having a templates for `div.streams_subheader` would be helpful here as well.', 'comment_created': datetime.datetime(2022, 3, 13, 20, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'm-e-l-u-h-a-n', 'type': 'User'}, {'comment_id': 825500017, 'comment_body': 'Oops, I forgot to remove. ', 'comment_created': datetime.datetime(2022, 3, 13, 20, 31, 3, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 825500383, 'comment_body': '@m-e-l-u-h-a-n Since we are not adding `Mute icon` near muted streams is this part necessary?', 'comment_created': datetime.datetime(2022, 3, 13, 20, 33, 37, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 828997756, 'comment_body': '@m-e-l-u-h-a-n as template variable like string template declared at the start of the file or a different .hbs file?', 'comment_created': datetime.datetime(2022, 3, 17, 11, 0, 58, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 829075487, 'comment_body': ""I meant creating a different `.hbs` file and passing Active/Inactive/Pinned as template variable to this file. It would be easy to make changes later if any design/html change is needed for this. May be you can also do this in it's own separate commit.\r\n"", 'comment_created': datetime.datetime(2022, 3, 17, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'm-e-l-u-h-a-n', 'type': 'User'}, {'comment_id': 829090140, 'comment_body': ""@m-e-l-u-h-a-n In commit e556623, I have implemented the .hbs version. But while writing the tests, it requires the mock to be present in every tests of `stream_list.js`, event if it's not required. "", 'comment_created': datetime.datetime(2022, 3, 17, 13, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 829108645, 'comment_body': ""That's because those test call `stream_list.build_stream_list();` that is where these elements are rendered. So you need them to have as a mock in the test.\r\n\r\nAlso we can wait for Tim/Alya's call on this if you are not sure about making this change."", 'comment_created': datetime.datetime(2022, 3, 17, 13, 20, 36, tzinfo=datetime.timezone.utc), 'commenter': 'm-e-l-u-h-a-n', 'type': 'User'}, {'comment_id': 829577737, 'comment_body': 'We generally avoid writing any HTML outside HTML templates where possible, so yeah a template (or section within the template for the stream list) sounds correct. ', 'comment_created': datetime.datetime(2022, 3, 17, 23, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 884016434, 'comment_body': 'Actually I could not find any element with class `.toggle_stream_mute` in dev tools inspector. Can you please mention about which mute icon you are setting event handler for? ', 'comment_created': datetime.datetime(2022, 5, 27, 22, 41, 28, tzinfo=datetime.timezone.utc), 'commenter': 'm-e-l-u-h-a-n', 'type': 'User'}]","[{'commit_sha': '3c71b81b6788a4435152f2ed85a80fce4482f85b', 'committer_username': 'madrix01', 'committer_name': 'Shlok Patel', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 5, 16, 5, 17, tzinfo=datetime.timezone.utc)}]",Shlok Patel,51414879,,User,,52,,58,59
962103873,recent-topics: Mark as read using unread counters in Recent topics.,"@timabbott  Copy of PR #22201 

The PR changes the following behaviors and UI:
1. Removes the checkmark button to mark the topic as read in
""Recent Topics"".
2. Make the unread messages counter be the button for marking
all messages in the topic as read. The unread messages counter
is made clickable and tooltip is set to ""Mark as read"".

In ""recent_topic_row.hbs"", remove the checkmark button and add
classes and attributes to "".unread_counter"" to give it desirable
behaviour on clicking.

In ""zulip.css"" set ""opacity: 0.7"" for "".on_hover_topic_read"".

In ""recent_topics.css"" we set the background-color of unread counter to
hsl(105, 2%, 50%) to decrease fading of unread counter.

Fixes: #21654",True,22219,https://api.github.com/repos/zulip/zulip/pulls/22219,https://github.com/zulip/zulip/pull/22219,closed,58,15,3,3,17,5,4,0,"[{'name': 'priority: high'}, {'name': 'size: L'}, {'name': 'area: recent-conversations'}, {'name': 'UI experiment'}]",2022-06-08 20:12:07+00:00,2022-08-07 02:55:54+00:00,5121827.0,"59 days, 6:43:47","[{'comment_id': 927324108, 'comment_body': 'Unnecessary new line.', 'comment_created': datetime.datetime(2022, 7, 22, 6, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 927326157, 'comment_body': 'Instead of using DOM for this, we can just check if the topic is unread or not using what we already know about it. Using DOM will take a lot of time and resources.', 'comment_created': datetime.datetime(2022, 7, 22, 6, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'amanagr', 'type': 'User'}, {'comment_id': 927872992, 'comment_body': 'I have updated the code. For getting rows i have used jQuery but to check if it is unread, i have used `unread.js`. Is there any other ways to get rows without jQuery ?', 'comment_created': datetime.datetime(2022, 7, 22, 17, 48, 7, tzinfo=datetime.timezone.utc), 'commenter': 'madrix01', 'type': 'User'}, {'comment_id': 939598053, 'comment_body': ""I'm not sure this algorithm is necessarily correct in general -- what you're checking is whether the last message in the topic is unread. We should be checking whether the topic has unread messages.\r\n\r\nDo you want `unread.num_unread_for_topic(stream_id, topic)` instead?"", 'comment_created': datetime.datetime(2022, 8, 7, 2, 39, 5, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 939598625, 'comment_body': 'Looking at the patterns in this file, I think this is correct:\r\n\r\n```\r\ndiff --git a/static/js/recent_topics_ui.js b/static/js/recent_topics_ui.js\r\nindex daadb38b76..a6cfe25901 100644\r\n--- a/static/js/recent_topics_ui.js\r\n+++ b/static/js/recent_topics_ui.js\r\n@@ -710,7 +710,7 @@ function is_focus_at_last_table_row() {\r\n function has_unread(row) {\r\n     const last_msg_id = topics_widget.get_current_list()[row].last_msg_id;\r\n     const last_msg = message_store.get(last_msg_id);\r\n-    return last_msg.unread;\r\n+    return unread.num_unread_for_topic(last_msg.stream_id, last_msg.topic) > 0;\r\n }\r\n \r\n export function focus_clicked_element(topic_row_index, col, topic_key) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 7, 2, 47, 47, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'c5fed915cfd207baf09398569346c57a1541ddd8', 'committer_username': 'madrix01', 'committer_name': 'Shlok Patel', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 5, 16, 5, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7767ed217d411f5bd4af5e41a6a9e5e71762234b', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45743ea195c36520d5554170d573a90fe2f981de', 'committer_username': 'madrix01', 'committer_name': 'Shlok Patel', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 5, 16, 5, 17, tzinfo=datetime.timezone.utc)}]",Shlok Patel,51414879,,User,,52,,58,59
956147892,recent_topics: Limit topic name from covering unread column.,"When there is no unread messages in topic. Topic name seems to expand
into unread count column, which looks inconsistent.

In order to solve the above problem. We change the visibility of
unread_count to `visiblity:hidden` when there are no unread messages.

**Before**
![image](https://user-images.githubusercontent.com/51414879/165735425-46152b83-069f-4e00-a050-6111951977df.png)
**Now**
![image](https://user-images.githubusercontent.com/51414879/171684142-f57edf22-dd2b-4d26-aee7-80cb4340da5a.png)

Thanks @amanagr for helping with this. 
Fixes a part of #19449",True,22180,https://api.github.com/repos/zulip/zulip/pulls/22180,https://github.com/zulip/zulip/pull/22180,closed,6,1,2,1,2,0,1,0,[{'name': 'size: S'}],2022-06-02 17:00:27+00:00,2022-06-02 19:52:58+00:00,10351.0,2:52:31,[],"[{'commit_sha': 'b5e21ceeaff4f425979b5723b6bd013fd223550f', 'committer_username': 'madrix01', 'committer_name': 'Shlok Patel', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 5, 16, 5, 17, tzinfo=datetime.timezone.utc)}]",Shlok Patel,51414879,,User,,52,,58,59
949172279,compose: Make compose box tooltips consitent.,"Issue #22132 

To make the tooltips of the button in the top row consistent with the
button in top row of compose. This includes -
* Removing the bold formatting from the ""Go to conversation"" tooltip.
* Converting the ""Expand compose"" tooltip to Tippy.

![image](https://user-images.githubusercontent.com/51414879/170683586-cc6352fe-484d-4468-b3be-b8423d2b952c.png)
![image](https://user-images.githubusercontent.com/51414879/170683636-f9b653aa-4edb-42b4-80b6-04092e58da27.png)
",True,22137,https://api.github.com/repos/zulip/zulip/pulls/22137,https://github.com/zulip/zulip/pull/22137,closed,2,2,2,1,5,0,5,0,"[{'name': 'design'}, {'name': 'area: compose (misc)'}, {'name': 'priority: high'}, {'name': 'size: XS'}, {'name': 'integration review'}]",2022-05-27 10:35:16+00:00,2022-06-28 20:24:13+00:00,2800137.0,"32 days, 9:48:57",[],"[{'commit_sha': '50b219f0d40c74ec43f67c5a8bfdb5a2db1628d3', 'committer_username': 'madrix01', 'committer_name': 'Shlok Patel', 'committer_email': None, 'commit_date': datetime.datetime(2019, 6, 5, 16, 5, 17, tzinfo=datetime.timezone.utc)}]",Shlok Patel,51414879,,User,,52,,58,59

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43160685,zulip,zulip/zulip,Python,7618,21016,375,1134,60300,2467,28,799,"[{'id': 998618928, 'number': 22506, 'closed': None, 'created': datetime.datetime(2022, 7, 17, 11, 9, 25, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 284, 'deletions': 6, 'state': 'open'}, {'id': 989823416, 'number': 22408, 'closed': datetime.datetime(2023, 9, 11, 18, 52, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 7, 51, 44, tzinfo=datetime.timezone.utc), 'time_taken': 37278067.0, 'time_delta': '431 days, 11:01:07', 'additions': 1317, 'deletions': 10, 'state': 'closed'}, {'id': 962103873, 'number': 22219, 'closed': datetime.datetime(2022, 8, 7, 2, 55, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 8, 20, 12, 7, tzinfo=datetime.timezone.utc), 'time_taken': 5121827.0, 'time_delta': '59 days, 6:43:47', 'additions': 58, 'deletions': 15, 'state': 'closed'}, {'id': 960320828, 'number': 22201, 'closed': datetime.datetime(2022, 6, 8, 19, 9, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 7, 12, 30, 38, tzinfo=datetime.timezone.utc), 'time_taken': 110315.0, 'time_delta': '1 day, 6:38:35', 'additions': 9, 'deletions': 10, 'state': 'closed'}, {'id': 956147892, 'number': 22180, 'closed': datetime.datetime(2022, 6, 2, 19, 52, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 2, 17, 0, 27, tzinfo=datetime.timezone.utc), 'time_taken': 10351.0, 'time_delta': '2:52:31', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 952367909, 'number': 22160, 'closed': datetime.datetime(2022, 7, 28, 23, 13, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 31, 19, 40, 6, tzinfo=datetime.timezone.utc), 'time_taken': 5024000.0, 'time_delta': '58 days, 3:33:20', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 949172279, 'number': 22137, 'closed': datetime.datetime(2022, 6, 28, 20, 24, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 27, 10, 35, 16, tzinfo=datetime.timezone.utc), 'time_taken': 2800137.0, 'time_delta': '32 days, 9:48:57', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 889782413, 'number': 21562, 'closed': None, 'created': datetime.datetime(2022, 3, 25, 18, 50, 5, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 181, 'deletions': 54, 'state': 'open'}, {'id': 858903611, 'number': 21201, 'closed': datetime.datetime(2022, 8, 7, 4, 59, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 20, 20, 37, 37, tzinfo=datetime.timezone.utc), 'time_taken': 14458907.0, 'time_delta': '167 days, 8:21:47', 'additions': 243, 'deletions': 40, 'state': 'closed'}, {'id': 855549548, 'number': 21170, 'closed': datetime.datetime(2023, 10, 2, 5, 14, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 17, 14, 36, 27, tzinfo=datetime.timezone.utc), 'time_taken': 51115089.0, 'time_delta': '591 days, 14:38:09', 'additions': 67, 'deletions': 0, 'state': 'closed'}, {'id': 848934265, 'number': 21114, 'closed': datetime.datetime(2022, 7, 26, 19, 35, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 12, 12, 42, 32, tzinfo=datetime.timezone.utc), 'time_taken': 14194382.0, 'time_delta': '164 days, 6:53:02', 'additions': 14, 'deletions': 10, 'state': 'closed'}, {'id': 842168745, 'number': 21059, 'closed': datetime.datetime(2022, 2, 9, 22, 36, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 7, 21, 12, 29, tzinfo=datetime.timezone.utc), 'time_taken': 177862.0, 'time_delta': '2 days, 1:24:22', 'additions': 22, 'deletions': 2, 'state': 'closed'}, {'id': 829749244, 'number': 20890, 'closed': datetime.datetime(2022, 10, 17, 22, 2, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 23, 13, 29, 9, tzinfo=datetime.timezone.utc), 'time_taken': 23099572.0, 'time_delta': '267 days, 8:32:52', 'additions': 390, 'deletions': 121, 'state': 'closed'}, {'id': 821491948, 'number': 20782, 'closed': datetime.datetime(2022, 1, 20, 2, 7, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 13, 20, 56, 39, tzinfo=datetime.timezone.utc), 'time_taken': 537056.0, 'time_delta': '6 days, 5:10:56', 'additions': 48, 'deletions': 0, 'state': 'closed'}, {'id': 804527780, 'number': 20589, 'closed': datetime.datetime(2021, 12, 21, 23, 45, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 16, 14, 53, 1, tzinfo=datetime.timezone.utc), 'time_taken': 463965.0, 'time_delta': '5 days, 8:52:45', 'additions': 31, 'deletions': 28, 'state': 'closed'}, {'id': 798706826, 'number': 20516, 'closed': None, 'created': datetime.datetime(2021, 12, 9, 10, 59, 30, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 22, 'deletions': 2, 'state': 'open'}, {'id': 795610133, 'number': 20470, 'closed': datetime.datetime(2022, 8, 29, 6, 33, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 6, 7, 55, 56, tzinfo=datetime.timezone.utc), 'time_taken': 22977468.0, 'time_delta': '265 days, 22:37:48', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 789888668, 'number': 20375, 'closed': datetime.datetime(2022, 2, 2, 0, 5, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 27, 7, 20, 48, tzinfo=datetime.timezone.utc), 'time_taken': 5762682.0, 'time_delta': '66 days, 16:44:42', 'additions': 60, 'deletions': 11, 'state': 'closed'}, {'id': 783505824, 'number': 20293, 'closed': datetime.datetime(2023, 6, 23, 3, 13, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 18, 8, 40, 4, tzinfo=datetime.timezone.utc), 'time_taken': 50265215.0, 'time_delta': '581 days, 18:33:35', 'additions': 140, 'deletions': 1, 'state': 'closed'}, {'id': 774821084, 'number': 20188, 'closed': datetime.datetime(2021, 11, 23, 6, 10, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 6, 16, 18, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1432337.0, 'time_delta': '16 days, 13:52:17', 'additions': 36, 'deletions': 0, 'state': 'closed'}, {'id': 771219008, 'number': 20135, 'closed': datetime.datetime(2021, 11, 3, 18, 14, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 2, 8, 58, 42, tzinfo=datetime.timezone.utc), 'time_taken': 119720.0, 'time_delta': '1 day, 9:15:20', 'additions': 4, 'deletions': 16, 'state': 'closed'}, {'id': 764719559, 'number': 20053, 'closed': datetime.datetime(2021, 10, 27, 0, 52, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 23, 17, 34, 34, tzinfo=datetime.timezone.utc), 'time_taken': 285503.0, 'time_delta': '3 days, 7:18:23', 'additions': 7, 'deletions': 9, 'state': 'closed'}, {'id': 760392706, 'number': 19996, 'closed': datetime.datetime(2021, 10, 22, 20, 40, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 18, 12, 6, 57, tzinfo=datetime.timezone.utc), 'time_taken': 376428.0, 'time_delta': '4 days, 8:33:48', 'additions': 441, 'deletions': 0, 'state': 'closed'}, {'id': 755502007, 'number': 19948, 'closed': datetime.datetime(2021, 12, 4, 5, 42, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 11, 17, 42, 2, tzinfo=datetime.timezone.utc), 'time_taken': 4622432.0, 'time_delta': '53 days, 12:00:32', 'additions': 232, 'deletions': 1, 'state': 'closed'}, {'id': 744653986, 'number': 19854, 'closed': datetime.datetime(2022, 7, 26, 19, 33, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 28, 10, 17, 24, tzinfo=datetime.timezone.utc), 'time_taken': 26039754.0, 'time_delta': '301 days, 9:15:54', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 737112485, 'number': 19790, 'closed': datetime.datetime(2022, 2, 12, 10, 24, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 19, 17, 29, 42, tzinfo=datetime.timezone.utc), 'time_taken': 12588903.0, 'time_delta': '145 days, 16:55:03', 'additions': 11, 'deletions': 2, 'state': 'closed'}, {'id': 733178329, 'number': 19744, 'closed': datetime.datetime(2021, 10, 1, 22, 34, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 13, 23, 0, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1553644.0, 'time_delta': '17 days, 23:34:04', 'additions': 60, 'deletions': 0, 'state': 'closed'}, {'id': 717185060, 'number': 19610, 'closed': datetime.datetime(2021, 12, 4, 5, 27, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 17, 40, 42, tzinfo=datetime.timezone.utc), 'time_taken': 9028024.0, 'time_delta': '104 days, 11:47:04', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 715750732, 'number': 19594, 'closed': datetime.datetime(2021, 8, 21, 15, 29, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 9, 12, 30, tzinfo=datetime.timezone.utc), 'time_taken': 195407.0, 'time_delta': '2 days, 6:16:47', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 713994427, 'number': 19583, 'closed': None, 'created': datetime.datetime(2021, 8, 17, 7, 40, 32, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 47, 'deletions': 8, 'state': 'open'}, {'id': 712516982, 'number': 19571, 'closed': datetime.datetime(2021, 8, 17, 7, 10, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 17, 17, 47, tzinfo=datetime.timezone.utc), 'time_taken': 309177.0, 'time_delta': '3 days, 13:52:57', 'additions': 47, 'deletions': 8, 'state': 'closed'}, {'id': 712094556, 'number': 19570, 'closed': datetime.datetime(2021, 8, 13, 6, 49, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 6, 11, 3, tzinfo=datetime.timezone.utc), 'time_taken': 2291.0, 'time_delta': '0:38:11', 'additions': 62, 'deletions': 19, 'state': 'closed'}]"
