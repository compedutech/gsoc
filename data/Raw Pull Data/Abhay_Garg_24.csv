pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
663541268,Fix #3268: Introduce Maven pinning artifacts Mechanism,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3268:
Introduced Pinning Artifacts mechanism for Maven dependencies.


## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3270,https://api.github.com/repos/oppia/oppia-android/pulls/3270,https://github.com/oppia/oppia-android/pull/3270,closed,9727,2,4,14,13,16,0,0,[],2021-06-07 12:58:33+00:00,2021-06-28 20:09:47+00:00,1840274.0,"21 days, 7:11:14","[{'comment_id': 646571406, 'comment_body': 'When I tried setting `fail_if_repin_required` attribute here - \r\n```\r\nmaven_install(\r\n    artifacts = DAGGER_ARTIFACTS + get_maven_dependencies(),\r\n    fetch_sources = True,\r\n    maven_install_json = ""//:maven_install.json"",\r\n    fail_if_repin_required = True,\r\n    repositories = DAGGER_REPOSITORIES + [\r\n        ""https://maven.fabric.io/public"",\r\n        ""https://maven.google.com"",\r\n        ""https://repo1.maven.org/maven2"",\r\n    ],\r\n)\r\n```\r\n\r\nIt threw an error - \r\n```\r\nStarting local Bazel server and connecting to it...\r\nERROR: Traceback (most recent call last):\r\n        File ""/home/prayutsu/opensource/oppia-android/WORKSPACE"", line 145, column 14, in <toplevel>\r\n                maven_install(\r\n        File ""/home/prayutsu/.cache/bazel/_bazel_prayutsu/65c630ff6a7321024a3fd83ac1880b0b/external/rules_jvm_external/defs.bzl"", line 20, column 5, in maven_install\r\n                def maven_install(\r\nError: maven_install() got unexpected keyword argument: fail_if_repin_required\r\nERROR: error loading package \'\': Encountered error while reading extension file \'defs.bzl\': no such package \'@maven//\': error loading package \'external\': Could not load //external package\r\n\r\n```\r\n\r\n![Screenshot from 2021-06-07 18-38-33](https://user-images.githubusercontent.com/54636525/121022040-9d7fa000-c7bf-11eb-85d3-c263a55b34b9.png)\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 7, 13, 9, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 646955433, 'comment_body': 'Try a newer version of rules_jvm_external.\r\n\r\nhttps://github.com/oppia/oppia-android/blob/f87e5047ef9da68fac4bc40168149ff50e1d4a09/third_party/versions.bzl#L112', 'comment_created': datetime.datetime(2021, 6, 7, 21, 33, 22, tzinfo=datetime.timezone.utc), 'commenter': 'fsharpasharp', 'type': 'User'}, {'comment_id': 647523035, 'comment_body': 'Got fixed, Thanks @fsharpasharp :) \r\nWe were using quite an old version.', 'comment_created': datetime.datetime(2021, 6, 8, 14, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 655835234, 'comment_body': 'Per my feedback in your document today, could we maybe put this in third_party, or do we not have a choice?', 'comment_created': datetime.datetime(2021, 6, 22, 2, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 655835309, 'comment_body': 'Can you provide some context on why this upgrade is needed?', 'comment_created': datetime.datetime(2021, 6, 22, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 655882271, 'comment_body': ""The older version didn't support the `fail_if_repin_required` attribute. It has been introduced lately, that's why we need this upgrade."", 'comment_created': datetime.datetime(2021, 6, 22, 5, 17, 12, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 655914783, 'comment_body': 'I tried moving it to third_party package by following the [documentation](https://github.com/bazelbuild/rules_jvm_external#custom-location-for-maven_installjson) but it is throwing error - `Could not find a BUILD file`\r\n\r\n![Screenshot from 2021-06-22 11-52-32](https://user-images.githubusercontent.com/54636525/122874694-e6535f00-d350-11eb-8ba3-d9f80c978c7d.png)\r\n\r\nI also tried making the same location as mentioned in the documentation (by adding name attribute and making a package in the third-party directory along with an empty BUILD file) but it threw the same error.\r\n![Screenshot from 2021-06-22 12-01-13](https://user-images.githubusercontent.com/54636525/122875250-a2148e80-d351-11eb-8ddd-b894551ecc1d.png)\r\n\r\n@fsharpasharp Can you spot some mistakes here? (I have pushed the changes that according to me should do the work here).\r\n', 'comment_created': datetime.datetime(2021, 6, 22, 6, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 659921960, 'comment_body': ""Shouldn't this be ``//third_party:maven_install.json`` since the file is part of our repository?"", 'comment_created': datetime.datetime(2021, 6, 28, 16, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659922408, 'comment_body': 'Got it--thanks for the clarification!', 'comment_created': datetime.datetime(2021, 6, 28, 16, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659922639, 'comment_body': 'Just left another comment--I think you might have made a mistake in the WORKSPACE file.', 'comment_created': datetime.datetime(2021, 6, 28, 16, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 659950065, 'comment_body': 'Done. Thanks for pointing this out.', 'comment_created': datetime.datetime(2021, 6, 28, 16, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 659950565, 'comment_body': 'Thanks, it got fixed. I also had to shift it to third_party manually.', 'comment_created': datetime.datetime(2021, 6, 28, 16, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 660045705, 'comment_body': '```suggestion\r\n# Third-party dependencies.\r\n```', 'comment_created': datetime.datetime(2021, 6, 28, 19, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660046108, 'comment_body': 'Do you know why these are needed now? Is it because of a merge with develop?', 'comment_created': datetime.datetime(2021, 6, 28, 19, 7, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 660049090, 'comment_body': 'Yes, right, I took a pull from develop and this dependency was added.', 'comment_created': datetime.datetime(2021, 6, 28, 19, 12, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 660049416, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 28, 19, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}]","[{'commit_sha': '0af8eb830e8af29614f64e5af7110ed36861b65d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03023b6aad758b50a895d62ec01e87cf4d2934f5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9c4ea87f5113ff8400925378a1869342a392cfa', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5856ef5bf9da6f1368c370d019c184bfd8e9cae6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8abe941c22f4b3d983435224ff47a4446a0c9ed6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26a3aaebab77b12b6f9f0bed142781f969fc4916', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce46a74f5c1476ae81f7954a7a1cce782abf86e1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e9bf11d3470db81a13250fe94cd5bfeba018042', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '164786bdf9a10fb0517c8e37715dd79ea44abf44', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b709bffae47e73440879ab46a227cefdd9ae549a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a361f90a51d0c45cbaa21b6418baca164eb96451', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff7d9b2869598fa14b21434288bcef95877ba093', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acb98bb90aebaa158654e684cf065cbd32e7ebbb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9d87be1c6df8961115a4014d359116b14a322fc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}]",Abhay Garg,54636525,,User,,31,,33,42
685394774,Fix #3285: Create Kotlin script to compile list of maven dependencies and license links,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

Fixes #3285:
Created a Kotlin script that compiles a list of Maven dependencies (direct + transitive) along with their licenses links.

To run the script, run the following command - 
```
bazel run //scripts:generate_maven_dependencies_list -- $(pwd) third_party/maven_install.json 
```

Expected Output - 
As maven_dependencies.textproto has been updated manually by me, the script should complete its execution and print - 
```
Script executed succesfully: maven_dependencies.textproto updated successfully.""
```

Screenhots of passing `GenerateMavenDependenciesListTest` - 
![Screenshot from 2021-07-16 06-39-38](https://user-images.githubusercontent.com/54636525/125876718-38332ce3-9de5-4021-9a01-947558b9577d.png)

Screenhots of passing `LicenseFetcherImplTest` - 
![Screenshot from 2021-07-16 06-41-40](https://user-images.githubusercontent.com/54636525/125876808-ee8af607-9783-441a-aa88-3e9ab9c05e7c.png)


## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3434,https://api.github.com/repos/oppia/oppia-android/pulls/3434,https://github.com/oppia/oppia-android/pull/3434,closed,2742,108,23,188,9,436,0,1,[],2021-07-07 17:52:48+00:00,2021-07-16 22:19:41+00:00,793613.0,"9 days, 4:26:53","[{'comment_id': 665752423, 'comment_body': 'I have added the test file and will write test cases by tomorrow.', 'comment_created': datetime.datetime(2021, 7, 7, 22, 44, 4, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 665979979, 'comment_body': 'This & below: these should also be marked as testonly.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 25, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665980856, 'comment_body': 'Is this documentation still correct? It seems like just one list is passed in.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 26, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665981141, 'comment_body': ""This doesn't read quite right for being a list. Perhaps: ``maven_dependency_filenames`` might be clearer?"", 'comment_created': datetime.datetime(2021, 7, 8, 8, 27, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665981492, 'comment_body': ""This doesn't seem correct--please update."", 'comment_created': datetime.datetime(2021, 7, 8, 8, 27, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665982173, 'comment_body': '```suggestion\r\nLibraries corresponding to attributing third-party library copyright licenses in Oppia Android.\r\n```\r\n\r\nFor consistency in capitalization.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665983149, 'comment_body': 'Is the defaulting to null necessary for this & other attributes?', 'comment_created': datetime.datetime(2021, 7, 8, 8, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665984520, 'comment_body': ""As discussed, I suggest indicating this is an alternative vs. secondary.\r\n\r\nThat being said, how does the pipeline decide when to use primary vs. the alternative link? I'm still not sure if I have a great grasp on when we would want to use the alternative link or why it's necessary."", 'comment_created': datetime.datetime(2021, 7, 8, 8, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665986008, 'comment_body': 'Per our chat, I think this & the other enums need a lot more documentation about which are set by humans vs. the script & when.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 33, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665987231, 'comment_body': ""There doesn't seem to be any source corresponding to this binary in the PR."", 'comment_created': datetime.datetime(2021, 7, 8, 8, 35, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665988294, 'comment_body': 'Does this need to be public?', 'comment_created': datetime.datetime(2021, 7, 8, 8, 36, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665988592, 'comment_body': 'Can this just be typed as a List?', 'comment_created': datetime.datetime(2021, 7, 8, 8, 37, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665989498, 'comment_body': ""Conventionally I would expect this to be named ``maven_dependencies_proto``. If 'list' should be included then I suggest also renaming the proto.\r\n\r\nDitto for the java_proto/java_proto_lite versions below."", 'comment_created': datetime.datetime(2021, 7, 8, 8, 38, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665989789, 'comment_body': 'Nit: prefer puttting on single line like the above target for consistency.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665990221, 'comment_body': 'This is only needed if ``assertThrows`` is used. I think you can remove it based on the current test.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 39, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665990604, 'comment_body': 'Reminder to add tests (I saw your comment, just adding this for my own cataloging for when I go back to check my old comments).', 'comment_created': datetime.datetime(2021, 7, 8, 8, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665995931, 'comment_body': ""Typo in word 'absolute'. Please proofread & check spelling for all documentation this file & elsewhere in the PR."", 'comment_created': datetime.datetime(2021, 7, 8, 8, 47, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665996203, 'comment_body': 'Ditto here & elsewhere for how to refer to Oppia Android (per my other comment).', 'comment_created': datetime.datetime(2021, 7, 8, 8, 47, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665996767, 'comment_body': 'Why is the path to the textproto necessary? It seems like we always use the same file since we pull it in during build time.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665997095, 'comment_body': 'Should this still be included?', 'comment_created': datetime.datetime(2021, 7, 8, 8, 48, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665997465, 'comment_body': 'I suggest making maven_install be relative to the root directory to avoid needing to repeat ``$(pwd)``.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665997828, 'comment_body': ""Here & elsewhere: should just be 'Pom' per https://developer.android.com/kotlin/style-guide#camel_case."", 'comment_created': datetime.datetime(2021, 7, 8, 8, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 665999217, 'comment_body': 'More Kotlin idiomatic:\r\n\r\n```suggestion\r\n  val licenseSetFromPom = dependenciesListFromTextproto.flatMap { dependency ->\r\n    dependency.licenseList\r\n  }.toSet()\r\n```\r\n\r\nDitto elsewhere (generally try to avoid vars/mutability where you can).', 'comment_created': datetime.datetime(2021, 7, 8, 8, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666000442, 'comment_body': 'Extending from my Kotlin idiomatic comment above, this could be replaced with a filter{} I think. Ditto for other similar cases.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 53, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666001897, 'comment_body': 'Here & below: these seem to be helpers and thus should be private (generally I think everything except main() should probably be private in this file).', 'comment_created': datetime.datetime(2021, 7, 8, 8, 54, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666002586, 'comment_body': 'Suggest moving this to a new method in BazelClient & adding a corresponding test for it.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 55, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666002925, 'comment_body': 'Why the substring?', 'comment_created': datetime.datetime(2021, 7, 8, 8, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666003412, 'comment_body': 'This seems really complicated. Could we use an XML parser like the one from #3341 instead of manually parsing XML here?', 'comment_created': datetime.datetime(2021, 7, 8, 8, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666003979, 'comment_body': 'We should be using TextFormat, not toString(). See the sample PR I shared with you that does this for our script to download assets for the alpha build.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666004298, 'comment_body': 'Prefer to use the BazelClient in scripts/.../common, instead.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 57, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 666032778, 'comment_body': 'To omit `@maven//:`\r\nMade a constant to replace 9.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666042633, 'comment_body': 'Done.\r\nOut of curiosity, what libraries and binaries should be marked as Testonly? \r\nI initially thought that only the ones which are needed for testing purposes should be marked as Testonly.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 49, 12, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666042784, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666042875, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 49, 33, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666042973, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 49, 40, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666043098, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 49, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666043394, 'comment_body': ""hmm, I saw it wasn't necessary. Fixed."", 'comment_created': datetime.datetime(2021, 7, 8, 9, 50, 12, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666044329, 'comment_body': 'It was unwanted, therefore removed.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 51, 29, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666044500, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666044691, 'comment_body': 'Yup, fixed.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 51, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666044811, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 52, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666044888, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666045673, 'comment_body': 'I am passing it as a parameter for testing purposes.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666045766, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 53, 19, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666046099, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666046330, 'comment_body': ""Done.\r\nI think I'll have to make all the functions public only to test the working of each function individually. Unlike other cases, it seems a little hard to test the functioning of the full script at once. "", 'comment_created': datetime.datetime(2021, 7, 8, 9, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666105898, 'comment_body': 'Once you write test cases assign me back as nothing much to review on for now', 'comment_created': datetime.datetime(2021, 7, 8, 11, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 666310981, 'comment_body': 'Done.\r\n\r\nThe pipeline will decide whether to use primary vs alternative link on the basis of `primary_link_type` - \r\n```kotlin\r\nwhen(primary_link_type) {\r\n  PrimaryLinkType.SCRAPE_DIRECTLY ->  // Use primary_link\r\n  PrimaryLinkType.SCRAPE_FROM_LOCAL_COPY -> // Use alternative link\r\n  PrimaryLinkType.SHOW_LINK_ONLY -> // Use primary link\r\n  else -> Throw Exception(""Human Intervention is needed to update maven_dependencies.textproto"")\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 15, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666323090, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 15, 56, 30, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666323429, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 15, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666323668, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 15, 57, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666413087, 'comment_body': ""Looks like we don't need any."", 'comment_created': datetime.datetime(2021, 7, 8, 18, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666414113, 'comment_body': 'Updated documentation. PTAL again. Also tried to simplify the cases.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666443103, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 53, 56, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666443187, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 8, 18, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666952591, 'comment_body': ""I think that can parse an XML file but here we don't have an XML file, we just have a string of XML file."", 'comment_created': datetime.datetime(2021, 7, 9, 13, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666969072, 'comment_body': 'Tried using the new BazelClient, but it is giving an error - \r\n```\r\nException in thread ""main"" java.lang.IllegalStateException: Expected non-zero exit code (not 7) for command: [bazel, query, \'deps(deps(//:oppia), intersect, //third_party/...), intersect, @maven//...\'].\r\nStandard output:\r\n\r\nError output:\r\nLoading: 0 packages loaded\r\nERROR: The package part of \'deps(deps(//:oppia) intersect //third_party/...) intersect @maven//...\' should not end in a slash\r\nLoading: 0 packages loaded\r\nLoading: 0 packages loaded\r\n        at org.oppia.android.scripts.common.BazelClient.executeBazelCommand(BazelClient.kt:146)\r\n        at org.oppia.android.scripts.common.BazelClient.executeBazelCommand$default(BazelClient.kt:135)\r\n        at org.oppia.android.scripts.common.BazelClient.retrieveThirdPartyMavenDependenciesList(BazelClient.kt:122)\r\n        at org.oppia.android.scripts.maven.GenerateMavenDependenciesListKt.runBazelQueryCommand(GenerateMavenDependenciesList.kt:275)\r\n        at org.oppia.android.scripts.maven.GenerateMavenDependenciesListKt.main(GenerateMavenDependenciesList.kt:50)\r\n\r\n```\r\n\r\nI also tried removing \'\\\' and using triple quotes for the command arguments but it didn\'t work.\r\n\r\nI also encountered this before, so I made some changes in `executeCommand()` method of the private Bazel Client, and then it worked.\r\n\r\nOriginal `executeCommand()` method - \r\n```kotlin\r\nval process =\r\n      ProcessBuilder(assembledCommand)\r\n        .directory(workingDir)\r\n        .redirectErrorStream(includeErrorOutput)\r\n        .start()\r\n```\r\n\r\nAfter changes in the private BazelClient -\r\n```kotlin\r\nval process = ProcessBuilder()\r\n      .command(""bash"", ""-c"", assembledCommand.joinToString("" ""))\r\n      .directory(workingDir)\r\n      .redirectErrorStream(includeErrorOutput)\r\n      .start()\r\n```', 'comment_created': datetime.datetime(2021, 7, 9, 13, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 666970759, 'comment_body': ""Made a new method but currently, it isn't working, will add a test case once it gets fixed."", 'comment_created': datetime.datetime(2021, 7, 9, 13, 58, 56, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 667022458, 'comment_body': ""@BenHenning I am a little confused about this field, this isn't used anywhere. Do we really need this field?"", 'comment_created': datetime.datetime(2021, 7, 9, 15, 10, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 667374923, 'comment_body': 'Nit:\r\n` OriginOfLicenses origin_of_licenses = 5;`', 'comment_created': datetime.datetime(2021, 7, 10, 19, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 667375013, 'comment_body': 'Nit: `// Enum that determines if the primary license link that is extracted from the POM file of the`', 'comment_created': datetime.datetime(2021, 7, 10, 19, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 667375060, 'comment_body': 'Remove initial `an` as its already mentioned in above line.', 'comment_created': datetime.datetime(2021, 7, 10, 19, 13, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 667375186, 'comment_body': 'As we do not have a `SecondaryLinkType` this can be converted to `UNSPECIFIED = 0;`', 'comment_created': datetime.datetime(2021, 7, 10, 19, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 667375613, 'comment_body': 'The naming format of `mavenListDependencies` does not make sense as from this sentence it looks like `mavenListDependencies` should be available in `mave_install.json` file, which it does not.', 'comment_created': datetime.datetime(2021, 7, 10, 19, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 667376069, 'comment_body': '@prayutsu I think now these paths can be used directly as in scripts instead of passing them. ', 'comment_created': datetime.datetime(2021, 7, 10, 19, 23, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 667376116, 'comment_body': 'If you update this, make sure to update PR description and below example too.', 'comment_created': datetime.datetime(2021, 7, 10, 19, 24, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 668134891, 'comment_body': ""For the Android codebase, only things that should only be used by tests should be marked as 'testonly'.\r\n\r\nFor scripts, everything should be marked as 'testonly' to ensure it can't accidentally be used in the Android codebase. It would probably be better to utilize Bazel constraints, but this is a reasonable way to do things for now."", 'comment_created': datetime.datetime(2021, 7, 12, 17, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668135856, 'comment_body': 'Rather than using an escape quote, I suggest just passing along the deps(...) bit as a single, second string. See other queries in this file for reference.', 'comment_created': datetime.datetime(2021, 7, 12, 17, 49, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668135971, 'comment_body': 'Please add a KDoc for this function (see others in this file for reference).', 'comment_created': datetime.datetime(2021, 7, 12, 17, 49, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668137501, 'comment_body': ""I think you can assume the pb file lives under the scripts/assets folder (like done here: https://github.com/oppia/oppia-android/blob/develop/scripts/src/java/org/oppia/android/scripts/regex/RegexPatternValidationCheck.kt#L93). For tests, you should be able to just write that file in the local working directory of the test so that it's available to load (which means your test binary target would *not* pull in the assets since you'd be manually building the proto inside tests, instead)."", 'comment_created': datetime.datetime(2021, 7, 12, 17, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668137695, 'comment_body': 'Similar to your other PR: should be ""too few""', 'comment_created': datetime.datetime(2021, 7, 12, 17, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668138026, 'comment_body': 'Should be on a single line (in general, only line-wrap if needed). Ditto everywhere else.', 'comment_created': datetime.datetime(2021, 7, 12, 17, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668140114, 'comment_body': 'More idiomatic version:\r\n\r\n```suggestion\r\n  return dependencyListFromPom.map { dependency ->\r\n    dependencyListFromProto.find {\r\n      it.artifactName == dependency.artifactName\r\n    } ?: dependency\r\n  }\r\n```\r\n\r\nDitto elsewhere in the PR (prefer utilizing more Kotlin constructs to follow common idioms).', 'comment_created': datetime.datetime(2021, 7, 12, 17, 55, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668142308, 'comment_body': ""I suggest using the ``apply{}`` method of constructing a proto that I suggested in your other PR here since it'll avoid needing to keep around a message builder."", 'comment_created': datetime.datetime(2021, 7, 12, 17, 59, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668142657, 'comment_body': 'Could just a List be returned, instead?', 'comment_created': datetime.datetime(2021, 7, 12, 17, 59, 35, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668142927, 'comment_body': 'Is ``toList`` necessary?', 'comment_created': datetime.datetime(2021, 7, 12, 17, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668143789, 'comment_body': 'Is this actually correct? I thought we needed to count the number of colons in the coord to determine if there even is a version present since not all coordinates have versions specified.', 'comment_created': datetime.datetime(2021, 7, 12, 18, 1, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668144092, 'comment_body': 'Prefer using string replace methods instead of reconstructing the string with a string builder.', 'comment_created': datetime.datetime(2021, 7, 12, 18, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668144446, 'comment_body': 'Prefer constructing this in-place without using a mutable list (per my earlier Kotlin idiom comments).', 'comment_created': datetime.datetime(2021, 7, 12, 18, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668144640, 'comment_body': 'The name could be a bit more specific, maybe: ``retrieveThirdPartyMavenDependenciesList``?', 'comment_created': datetime.datetime(2021, 7, 12, 18, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668145207, 'comment_body': 'This seems like a magic number. Could you maybe instead do something like:\r\n\r\n```kotlin\r\nprivate val MAVEN_PREFIX_LENGTH = ""<prefix>"".length\r\n```\r\n\r\nThat would provide context on what the actual prefix is.', 'comment_created': datetime.datetime(2021, 7, 12, 18, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668145380, 'comment_body': 'Should you verify that the deps actually start with the maven prefix for a sanity check?', 'comment_created': datetime.datetime(2021, 7, 12, 18, 3, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668145491, 'comment_body': 'I suggest adding a brief comment explaining why this sort is happening.', 'comment_created': datetime.datetime(2021, 7, 12, 18, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668145665, 'comment_body': 'Ditto here--please use a clearer name to indicate what the method is specifically doing.', 'comment_created': datetime.datetime(2021, 7, 12, 18, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668146081, 'comment_body': 'Ditto here & everywhere else you use a mutable* (prefer trying to avoid it with in-line constructions of the collection).', 'comment_created': datetime.datetime(2021, 7, 12, 18, 4, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668146311, 'comment_body': ""What does 'parsed' mean here? Prefer trying to contextualize what the value specifically represents in its name."", 'comment_created': datetime.datetime(2021, 7, 12, 18, 5, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668146749, 'comment_body': 'What are you removing from the URL? I suggest adding a single line comment to explain this logic.', 'comment_created': datetime.datetime(2021, 7, 12, 18, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668147286, 'comment_body': 'Suggest using java.net.URL, instead, since you can more easily manipulate parts of it like the scheme or filename (per your above code) before generating a new URL.', 'comment_created': datetime.datetime(2021, 7, 12, 18, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668147888, 'comment_body': ""Nit: 'in' should be on the previous line since there's enough room."", 'comment_created': datetime.datetime(2021, 7, 12, 18, 7, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668149514, 'comment_body': 'It was needed before because I was assuming that in some cases the script can correctly infer when something can be scraped, and before you had both primary and alternative links. It may still be a cleaner way to represent the dependencies, though. The origin could always be the original list of license links, and the actual license list could indicate the ones that a human has manually specified to ensure the dependency is correct.\r\n\r\n@rt4914 any thoughts?', 'comment_created': datetime.datetime(2021, 7, 12, 18, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668149625, 'comment_body': 'We should start with an index of 1.', 'comment_created': datetime.datetime(2021, 7, 12, 18, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668150476, 'comment_body': ""Per other comments, this primary/alternative thing still seems too complicated to me. I think it's fine to store the links that we can't use for context, but there should be just 1 license name/link that's associated with the License object, and that should be confirmed by a human in *all* cases. I don't think that's a matter of primary/secondary, but rather a reference to what the license could be and actually is."", 'comment_created': datetime.datetime(2021, 7, 12, 18, 11, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668152510, 'comment_body': ""That's actually not what we want to do. When testing a component, you should always test it through its public API. Exposing implementation pieces to tests is fragile: if the implementation changes, the tests may fail. Tests should only fail if the contract they're verifying no longer matches the contract by the implementation. In many cases we change implementations without changing the contract (the most common scenarios being cases when we refactor the code). In these situations, the tests ought to never even be updated or only updated superficially (such as if the APIs themselves are slightly refactored without changing meaning)."", 'comment_created': datetime.datetime(2021, 7, 12, 18, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668153100, 'comment_body': ""Sorry, I don't understand. Below you're reading the URL of the pom file--isn't that downloading an XML file to parse?"", 'comment_created': datetime.datetime(2021, 7, 12, 18, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668153555, 'comment_body': ""Sorry, I'm not following. Printing out a proto file the way you are isn't correct. We need to use TextFormat in order to ensure that the textproto file is compatible with the protoc rule we use to convert it to pb."", 'comment_created': datetime.datetime(2021, 7, 12, 18, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668663922, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668664006, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668664100, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 12, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668664321, 'comment_body': 'Reframed the Kdoc.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 13, 20, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668664475, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668664548, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668665587, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 15, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668665862, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 15, 49, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668674804, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668674888, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 30, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668675377, 'comment_body': 'Nopes, removed it.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668678090, 'comment_body': ""Actually, I didn't find any example where the version is not mentioned in the coordinate. And if that's the case, then how the count of colons can help us determine if there is a version of the dependency or not.\r\nCan there be a maximum of one colon in the coordinate?\r\n\r\nOther than that I also have another thought here, can we avoid mentioning the version at this moment as we are already keeping the full name of the dependency. \r\nWe can extract the version of the dependency from the dependency name itself (if there exists one), this will save us writing a complete list of versions in the XML. WDYT?\r\n"", 'comment_created': datetime.datetime(2021, 7, 13, 11, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668678244, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668678314, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668678405, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 35, 6, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668678494, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668678880, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 35, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668679978, 'comment_body': 'Remove the `.sort` as we are using `.contains()` to check if a dependency exists in bazelQuetDepsList and it does not require the list to be sorted.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 37, 18, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668680166, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668680331, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 37, 46, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668687783, 'comment_body': 'Removed the variable.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 49, 5, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668687883, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 49, 16, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668688013, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 49, 28, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668688165, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 11, 49, 43, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668899580, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 15, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668987844, 'comment_body': '(This is only a sample test setup in the data module so that I could explore different options while writing the test case)\r\nI tried mocking the network part with the help of Mockito, and this test case is passing, but according to the documentation, there should be `eq` before the argument of the method while defining the mockito behavior, so the correct implementation should be - \r\n\r\n```kotlin\r\n@Test\r\n  fun testMockitoUnitTest() {\r\n    val mockLicenseFetcher = Mockito.mock(LicenseFetcher::class.java)\r\n    `when`(mockLicenseFetcher.fetchText(eq(""https//www.google.com""))).thenReturn(""abhay"")\r\n\r\n    assertThat(mockLicenseFetcher.fetchText(""https//www.google.com"")).contains(""abhay"")\r\n  }\r\n```\r\n\r\nBut this test case fails and the error that I get is  - \r\nNote: the import used for eq is `import org.mockito.ArgumentMatchers`, I also tried with the import `import org.mockito.Mockito.eq`\r\n```\r\njava.lang.NullPointerException: eq(""https//www.google.com"") must not be null\r\n\r\n\tat org.oppia.android.data.backends.gae.api.ClassroomServiceTest.testMockito(ClassroomServiceTest.kt:56)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.robolectric.RobolectricTestRunner$HelperTestRunner$1.evaluate(RobolectricTestRunner.java:575)\r\n\tat org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:263)\r\n\tat org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```\r\n![Screenshot from 2021-07-13 22-17-23](https://user-images.githubusercontent.com/54636525/125501247-e3d8051f-db46-46ad-8f23-832c875ab694.png)\r\n', 'comment_created': datetime.datetime(2021, 7, 13, 17, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 668991318, 'comment_body': 'Need this for testing exceptions. Will very soon be adding final test cases for the script.', 'comment_created': datetime.datetime(2021, 7, 13, 17, 57, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669001600, 'comment_body': ""If we pass `NetworkAndBazelUtils` as a parameter to the constructor of the `MavenDependenciesListWriter`, we can't access it inside the main() function that is inside the companion object.\r\nAnd we require a companion object to declare the main function.\r\n\r\nA workaround here maybe, to remove the companion object and declare a different public function that will invoke the script. \r\n@BenHenning Please let me know your thoughts on this.\r\n\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2021, 7, 13, 18, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669008142, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 7, 13, 18, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669008978, 'comment_body': 'Acknowledged. Made all the functions private.', 'comment_created': datetime.datetime(2021, 7, 13, 18, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669009257, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 13, 18, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669011217, 'comment_body': ""I tried searching for it on the web, but couldn't find any example. Can you please provide one?"", 'comment_created': datetime.datetime(2021, 7, 13, 18, 27, 30, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669014265, 'comment_body': ""@BenHenning @rt4914 \r\nThe problem here is that even if we create new pb files during testing when we'll run the script, it will still read the file at \r\n`scripts/assets/maven_dependencies.pb` as we are going to hard code it in the `getProto()` function. We'll not be able to control it and it will always read the updated list which will not enable us to test different scenarios.\r\n"", 'comment_created': datetime.datetime(2021, 7, 13, 18, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669028597, 'comment_body': 'This change is a bit large (since a lot of refactoring would be required and that too manually) and I am currently working on it to make it as per your suggestions.', 'comment_created': datetime.datetime(2021, 7, 13, 18, 54, 23, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669186949, 'comment_body': ""You'll probably need to add a new method here to properly handle ``eq``: https://github.com/oppia/oppia-android/blob/develop/testing/src/main/java/org/oppia/android/testing/mockito/MockitoKotlinHelper.kt#L17."", 'comment_created': datetime.datetime(2021, 7, 14, 0, 0, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669187863, 'comment_body': 'I think I clarified this in our chat, but please let me know if additional clarity is needed.', 'comment_created': datetime.datetime(2021, 7, 14, 0, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669188380, 'comment_body': ""I think the important requirement to meet is that if the version of a dependency changes, we may need to reevaluate the licenses list to make sure it's up-to-date.\r\n\r\nPer https://maven.apache.org/pom.html#Maven_Coordinates I think we can just assume that there are always 2 colons and that coordinates are fully well-formed (all situations should result in an exception being thrown)."", 'comment_created': datetime.datetime(2021, 7, 14, 0, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669189083, 'comment_body': 'Ah, apparently URL and URI are immutable with no builders, so this won\'t actually work. Please disregard.\r\n\r\nHowever, you can probably simplify this slightly by replace()ing ""http"" with ""https"" if the string does not startsWith ""https"".', 'comment_created': datetime.datetime(2021, 7, 14, 0, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 669400916, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 14, 8, 26, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669580980, 'comment_body': ""@BenHenning This test is failing because the query is taking a little longer than 15 seconds - \r\n```\r\nThere was 1 failure:\r\n1) testRetrieveThirdPartyMavenDepsList_forTestBinary_returnsDependenciesList(org.oppia.android.scripts.common.BazelClientTest)\r\njava.lang.IllegalStateException: Expected non-zero exit code (not 7) for command: [bazel, query, deps(deps(//:test_oppia) intersect //third_party/...) intersect @maven//...].\r\nStandard output:\r\n\r\nError output:\r\n$TEST_TMPDIR defined: output root default is '/home/prayutsu/.cache/bazel/_bazel_prayutsu/65c630ff6a7321024a3fd83ac1880b0b/sandbox/linux-sandbox/58/execroot/__main__/_tmp/f65578bdd5e6a06f0954ab44d157a1f1' and max_idle_secs default is '15'.\r\n\r\n```\r\n\r\n![Screenshot from 2021-07-14 18-13-21](https://user-images.githubusercontent.com/54636525/125623924-07815392-08a0-45f7-91c6-e37909a5ec5a.png)\r\n\r\nThe default process timeout is configured to be 60 seconds in CommandExecutorImpl() then why the test failed for just 15 seconds?\r\n\r\n"", 'comment_created': datetime.datetime(2021, 7, 14, 12, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669887719, 'comment_body': 'I tried using capture but it kept throwing the same error. After a bit of research, I found that there is a separate library of [mockito for kotlin](https://github.com/mockito/mockito-kotlin), I added that, and it got fixed.\r\n\r\n@BenHenning @rt4914 Will delete these changes once this is approved.', 'comment_created': datetime.datetime(2021, 7, 14, 19, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669898460, 'comment_body': 'This also does not work and throws exception - \r\n```\r\nThere was 1 failure:\r\n1) testLicenseNeedManualWork_scriptFailsWithExceptionAndCallOut(org.oppia.android.scripts.maven.MavenDependenciesListWriterTest)\r\njava.io.FileNotFoundException: scripts/assets/maven_dependencies.pb (Read-only file system)\r\n        at java.io.FileOutputStream.open0(Native Method)\r\n        at java.io.FileOutputStream.open(FileOutputStream.java:270)\r\n        at java.io.FileOutputStream.<init>(FileOutputStream.java:213)\r\n        at java.io.FileOutputStream.<init>(FileOutputStream.java:162)\r\n        at org.oppia.android.scripts.maven.MavenDependenciesListWriterTest.testLicenseNeedManualWork_scriptFailsWithExceptionAndCallOut(MavenDependenciesListWriterTest.kt:79)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\r\n```\r\n', 'comment_created': datetime.datetime(2021, 7, 14, 19, 37, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 669914484, 'comment_body': ""However, we can probably make that work by passing the relative path of the binary file as a parameter. Because then we'll create this file inside the tempFolder and then it will not throw an exception."", 'comment_created': datetime.datetime(2021, 7, 14, 20, 2, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670146608, 'comment_body': 'Verified. Resolving now.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670147084, 'comment_body': 'Maybe change this to LINK_UNSPECIFIED', 'comment_created': datetime.datetime(2021, 7, 15, 5, 36, 10, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 670147148, 'comment_body': 'Maybe change this to ORIGIN_UNKNOWN', 'comment_created': datetime.datetime(2021, 7, 15, 5, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 670147277, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 36, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670147429, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 37, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670147693, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 37, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670147977, 'comment_body': 'Verfied.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670148616, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670148770, 'comment_body': 'Verfied.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 40, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670149313, 'comment_body': 'Updated to `scripts:oppia_script_binary_visibility `', 'comment_created': datetime.datetime(2021, 7, 15, 5, 41, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670149510, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 5, 42, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670149795, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 5, 43, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670150018, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 43, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670152551, 'comment_body': 'Added tests for MavenDependenciesListWriter since that would contain the actual logic of the script. We have an ongoing conversation regarding fixing the test cases.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670153063, 'comment_body': 'This has been shifted to GenerateMavenDependenciesListWriter.kt and we have removed `absolute` as we are now passing a relative path to the maven_install.json', 'comment_created': datetime.datetime(2021, 7, 15, 5, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670153468, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 5, 52, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670153919, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 5, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670154223, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670154904, 'comment_body': 'Updated to `retrieveDependencyListFromPom`', 'comment_created': datetime.datetime(2021, 7, 15, 5, 55, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670155536, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670155869, 'comment_body': 'Verfied.', 'comment_created': datetime.datetime(2021, 7, 15, 5, 57, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670157084, 'comment_body': 'Replaced with `dep.substring(MAVEN_PREFIX.length, dep.length)`', 'comment_created': datetime.datetime(2021, 7, 15, 6, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670157928, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 15, 6, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670159110, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 15, 6, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670160619, 'comment_body': ""As per conversation, let's go ahead and apply this. It will help us in keeping reference to original links."", 'comment_created': datetime.datetime(2021, 7, 15, 6, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670162248, 'comment_body': 'Verfied.', 'comment_created': datetime.datetime(2021, 7, 15, 6, 10, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670162859, 'comment_body': 'Nit fix for the comment:\r\n```\r\n  /**\r\n   * Returns the list of direct and indirect maven third-party dependencies on which the specified\r\n   * binary depends.\r\n   */\r\n```', 'comment_created': datetime.datetime(2021, 7, 15, 6, 11, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670163103, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670163186, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 15, 6, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670163532, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 13, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670164260, 'comment_body': 'Veried.', 'comment_created': datetime.datetime(2021, 7, 15, 6, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670164407, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670164714, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670165349, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 17, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670165807, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670166004, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670166121, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670166260, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 19, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670166675, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 19, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670167088, 'comment_body': 'Verified.\r\n`getDependencyListFromMavenInstall`', 'comment_created': datetime.datetime(2021, 7, 15, 6, 20, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670167626, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 21, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670167744, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670168201, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 22, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670168707, 'comment_body': 'Verified.\r\n```\r\n    private fun replaceHttpWithHttps(\r\n      urlBuilder: StringBuilder\r\n    ): String {\r\n      var url = urlBuilder.toString()\r\n      if (!url.startsWith(""https"")) {\r\n        url = url.replace(""http"", ""https"")\r\n      }\r\n      return url\r\n    }\r\n```', 'comment_created': datetime.datetime(2021, 7, 15, 6, 24, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670169092, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 6, 24, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670184686, 'comment_body': 'Actually, the link does not always point to a downloadable file - https://repo1.maven.org/maven2/com/google/protobuf/protobuf-lite/3.0.0/protobuf-lite-3.0.0.pom\r\n\r\nOr I am getting it wrong? In this case, too, a file will get downloaded which will contain this text?', 'comment_created': datetime.datetime(2021, 7, 15, 6, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670186908, 'comment_body': 'Resolving as this is approved.', 'comment_created': datetime.datetime(2021, 7, 15, 6, 58, 18, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670193664, 'comment_body': ""@BenHenning The test if failing even after specifying the --max_idle_secs=60000.\r\n![Screenshot from 2021-07-15 12-29-15](https://user-images.githubusercontent.com/54636525/125743653-fabbe246-d98e-4474-90cd-e78af7058882.png)\r\n\r\nI also tried specifying this option after `query` just like other methods but this also failed - \r\n\r\n![Screenshot from 2021-07-15 12-37-17](https://user-images.githubusercontent.com/54636525/125744646-5aee1639-6b6a-428a-9aa7-a338471e5665.png)\r\n\r\nAlso, you asked to update BazelClient to use a default idle limit of 60 seconds but I couldn't see any code relevant to that.\r\nCan you please elaborate how to do that?\r\n"", 'comment_created': datetime.datetime(2021, 7, 15, 7, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670194220, 'comment_body': 'Now using mockito-kotlin and the error got fixed.', 'comment_created': datetime.datetime(2021, 7, 15, 7, 10, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670208096, 'comment_body': ""@BenHenning I tried mkdiring only directories, but it also gives the same error - \r\n![Screenshot from 2021-07-15 12-56-46](https://user-images.githubusercontent.com/54636525/125747210-9325fa5f-ce6a-444f-b1bb-7dc80d5a90cc.png)\r\n\r\nAlso tried this as per https://stackoverflow.com/a/3634906/12215015\r\n![Screenshot from 2021-07-15 13-00-47](https://user-images.githubusercontent.com/54636525/125747577-6bbcef06-4326-4a10-a70e-50ddd33eec11.png)\r\n\r\nBut didn't work."", 'comment_created': datetime.datetime(2021, 7, 15, 7, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670209429, 'comment_body': 'Done. Also note that this is now present in `BazelClient.kt`', 'comment_created': datetime.datetime(2021, 7, 15, 7, 33, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670216152, 'comment_body': 'I just tried this and caught the exception for the artifact - `android.arch.core:common:jar:sources:1.1.1`- \r\n```\r\n/home/prayutsu/.cache/bazel/_bazel_prayutsu/65c630ff6a7321024a3fd83ac1880b0b/execroot/__main__/bazel-out/k8-fastbuild/bin/scripts/generate_maven_dependencies_list: line 112: fg: no job control\r\nException in thread ""main"" java.lang.Exception: Couldn\'t parse the version for the artifact \'android.arch.core:common:jar:sources:1.1.1\'\r\n        at org.oppia.android.scripts.maven.MavenDependenciesListWriter$Companion.omitVersionAndReplaceColonsHyphensPeriods(MavenDependenciesListWriter.kt:256)\r\n        at org.oppia.android.scripts.maven.MavenDependenciesListWriter$Companion.getDependencyListFromMavenInstall(MavenDependenciesListWriter.kt:336)\r\n        at org.oppia.android.scripts.maven.MavenDependenciesListWriter$Companion.main(MavenDependenciesListWriter.kt:62)\r\n        at org.oppia.android.scripts.maven.GenerateMavenDependenciesListKt.main(GenerateMavenDependenciesList.kt:8)\r\n\r\n```\r\n\r\nWhat should be done in this case?', 'comment_created': datetime.datetime(2021, 7, 15, 7, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670216761, 'comment_body': 'Already tracking this above.', 'comment_created': datetime.datetime(2021, 7, 15, 7, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670373190, 'comment_body': 'Verified', 'comment_created': datetime.datetime(2021, 7, 15, 11, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 670384936, 'comment_body': 'is this a correct function name', 'comment_created': datetime.datetime(2021, 7, 15, 11, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670385173, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 15, 11, 43, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670385244, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 15, 11, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670388693, 'comment_body': 'we can keep this inside the class as these are not getting used by any other class. ', 'comment_created': datetime.datetime(2021, 7, 15, 11, 48, 45, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670389417, 'comment_body': 'Could you add a bit more detail what are these seven points?', 'comment_created': datetime.datetime(2021, 7, 15, 11, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670391876, 'comment_body': 'We can create a helper function at the bottom for these three lines and all the tests can use it rather than rewriting these lines. ', 'comment_created': datetime.datetime(2021, 7, 15, 11, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670392574, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 15, 11, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670392630, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 15, 11, 54, 54, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670392720, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 15, 11, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670392760, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 15, 11, 55, 6, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670392843, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 15, 11, 55, 13, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670392893, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 15, 11, 55, 18, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670392972, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 15, 11, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670462924, 'comment_body': 'This enum is mo more needed as per the new changes.', 'comment_created': datetime.datetime(2021, 7, 15, 13, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670463006, 'comment_body': 'This enum is mo more needed as per the new changes.', 'comment_created': datetime.datetime(2021, 7, 15, 13, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670465701, 'comment_body': 'Updated the pipeline as per the suggestions.', 'comment_created': datetime.datetime(2021, 7, 15, 13, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670468870, 'comment_body': 'No more needed.', 'comment_created': datetime.datetime(2021, 7, 15, 13, 36, 24, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670469341, 'comment_body': 'Made required changes and hence resolving.', 'comment_created': datetime.datetime(2021, 7, 15, 13, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670696536, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 7, 15, 18, 6, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670896754, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670896782, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670896847, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 5, 31, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670896929, 'comment_body': 'These were just for my reference. Removed.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670896978, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670897094, 'comment_body': 'it was no more needed.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670897107, 'comment_body': 'it was no more needed.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670897137, 'comment_body': 'it was no more needed.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670897243, 'comment_body': 'it was no more needed and hence removed.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670897285, 'comment_body': 'it was no more needed and hence removed.', 'comment_created': datetime.datetime(2021, 7, 16, 1, 7, 8, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 670968058, 'comment_body': 'This is a public property of the class, so it should also have a KDoc explaining what it is. I suggest linking to Maven documentation, if needed, to help provide context.\r\n\r\nDitto for all the other Moshi classes.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 5, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670969066, 'comment_body': '```suggestion\r\n    // stored in Oppia Android licenses repository: https://github.com/oppia/oppia-android-licenses.\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 5, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670969351, 'comment_body': ""What does 'valid' mean? Could we be more descriptive in the name & documentation?"", 'comment_created': datetime.datetime(2021, 7, 16, 5, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670969701, 'comment_body': ""Given that it's using a URL, this technically isn't a 'local' copy. Maybe 'ExtractedCopy' would be clearer? Ditto everywhere else where 'local' is used in this context."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670969930, 'comment_body': ""Can this be private, instead? It doesn't seem to be used outside of this package."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670970167, 'comment_body': 'Are any of these deps needed for this library?', 'comment_created': datetime.datetime(2021, 7, 16, 5, 12, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670970323, 'comment_body': 'The name should be specific to what\'s being provided. I suggest: ""license_fetcher"".', 'comment_created': datetime.datetime(2021, 7, 16, 5, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670970401, 'comment_body': 'Ditto here--can this be private?', 'comment_created': datetime.datetime(2021, 7, 16, 5, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670970870, 'comment_body': ""This target should be defined in maveninstall since that's where the data files are located.\r\n\r\nAlso, suggest renaming 'maveninstall' to 'data' or 'json' since then the package is maven/data or maven/json which I think is a bit clearer.\r\n\r\nFinally, this library represents the whole package so it should be named the same as the package it belongs in (e.g. 'json')."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670971267, 'comment_body': ""```suggestion\r\n  /** The [File] corresponding to the Bazel WORKSPACE file. */\r\n```\r\n\r\nIt may not necessarily contain rules_jvm_external definitions, and I don't think it ever contains libraries (since we use BUILD files for that)."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670971373, 'comment_body': 'Please add KDoc & tests for this.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670972276, 'comment_body': 'Optional: ah interesting. I think this means the new dependency is forcing a bunch of our transitive and other deps to newer versions. Might be worth updating some of the versions listed in versions.bzl in a separate PR after this is merged to point to the newer versions that the conflict resolution is forcing anyway.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 18, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670972422, 'comment_body': 'Please make this a test-only dependency. We never want to use anything other than proto lite in production Android code.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670973416, 'comment_body': ""This test suite doesn't actually seem like it will catch anything. It's not testing LicenseFetcherImpl, it's actually just testing that the mocks in this test are working correctly (i.e. it's testing mockito-kotlin).\r\n\r\nI don't think there's a clean way to test LicenseFetcherImpl since it relies on a network, so I think it's best to just remove this test suite altogether since it won't catch regressions."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670974361, 'comment_body': 'You could probably include this in the multi-line string below:\r\n\r\n```suggestion\r\n     """"""\r\n     ...\r\n     artifactsList = [\r\n       ${ depsList.joinToString(separator = ""\\n"") { ""\\""$it\\"","" } }\r\n     ]\r\n     ...\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 5, 25, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670974622, 'comment_body': 'You might also just be able to inline it below in the maven_install block, too.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670975266, 'comment_body': ""Some possible tests:\r\n\r\n- Make sure calling this adds a maven_install call\r\n- Verify that the provided deps list is correct in the file when:\r\n  - It's empty\r\n  - It has 1 dep\r\n  - It has multiple deps\r\n- Make sure multiple calls to this method does not result in it generating again\r\n- Verify that calling this with one dep correctly sets up the workspace by performing a query to ensure the downloaded maven artifact is present in the build graph"", 'comment_created': datetime.datetime(2021, 7, 16, 5, 28, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670975837, 'comment_body': ""Suggest renaming the parameter to 'binaryTarget' and changing the call to pass in '//:oppia' rather than assembling it. The current approach is a bit odd because it's assuming the binary is always at the root level. Generally, we try to pass around either filenames or fully qualified Bazel targets, never partial things for either."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670976247, 'comment_body': ""Suggest using rootBuildFile from the testBazelWorkspace rather than creating a new copy of it since that's what that field is for."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 31, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670976508, 'comment_body': 'Suggest naming this AndroidManifest.xml for convention.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670976961, 'comment_body': ""I suggest also testing this for some cases that change how the query would behave:\r\n- No maven deps\r\n- Maven deps in maven_install that aren't referenced by the binary's dependencies\r\n- Dependencies directly referenced by the binary instead of via a library (will require overwriting the root build file, I think, but you're already doing that below in your new helper)"", 'comment_created': datetime.datetime(2021, 7, 16, 5, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670977232, 'comment_body': ""I suggest factoring this into a helper since it'll help with the new tests suggested below."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670977738, 'comment_body': ""These should both be private since they don't need to referenced outside of this class."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670977810, 'comment_body': ""This can be ``internal``, I think, since it only needs to be accessed by the test & ``main``.\r\n\r\nAlso, I suggest calling this the same as the name of the file, i.e. ``GenerateMavenDependenciesList`` since that's more expected (that the file & class names match)."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670978380, 'comment_body': ""I actually will go back on an earlier comment. I suggest passing this in now that you're also passing in the pb file--I think that will make the configuration of the overall script more predictable."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 37, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670978974, 'comment_body': '```suggestion\r\n      println(""\\nPlease verify the license link(s) for the following license(s) manually:"")\r\n```\r\n\r\nNit on plurality.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 39, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670979579, 'comment_body': 'For the three different outcomes possible in this script (exception 1, exception 2, and success), can you please simulate each of them in CI & reply with links to each of the runs resulting in each of the outcomes? I suggest doing this after all other comments are resolved.\r\n\r\nThis helps demonstrate that the script both passes and fails precisely when expected as a manual verification.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 41, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670979945, 'comment_body': 'Nit: please rearrange your helpers to be in the order the appear above. This is ""appendix-style"" arrangement vs. ""footnote-style"" or arbitrary, and it can help make the flow of the class easier to follow.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670980450, 'comment_body': ""```suggestion\r\n        license.verifiedLinkCase != License.VerifiedLinkCase.VERIFIEDLINK_NOT_SET\r\n```\r\n\r\nMore Kotlin idiomatic ('!=' does exactly the same thing as your previous code).\r\n\r\nDitto elsewhere."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 43, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670981008, 'comment_body': '```suggestion\r\n            license.isOriginalLinkInvalid\r\n```\r\n\r\n``isOriginalLinkInvalid`` is a boolean.\r\n\r\nDitto below for the false check (can just do ``!isOriginalLinkInvalid``).', 'comment_created': datetime.datetime(2021, 7, 16, 5, 45, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670981454, 'comment_body': ""Here & elsewhere: for each helper like this, I suggest adding a brief single-line comment by the return statement explaining what some of the concepts mean to provide more context. Such as in this case: what is meant by 'broken license'."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670982007, 'comment_body': '```suggestion\r\n      val updateLicenseList = mavenDependency.licenseList.map { license ->\r\n        manuallyUpdatedLicenses.find {\r\n          it.originalLink == license.originalLink && it.licenseName == license.licenseName\r\n        } ?: license\r\n      }\r\n```\r\n\r\nShorter & more idiomatic.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 48, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670982305, 'comment_body': 'Maybe ``updatedLicenseList``?', 'comment_created': datetime.datetime(2021, 7, 16, 5, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670982562, 'comment_body': 'I suggest also converting this to a ``.map{}`` setup like my suggestion below to shorten it a bit & avoid the mutable structure.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 49, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670983285, 'comment_body': ""```suggestion\r\n    return artifactName.substring(0, artifactName.lastIndexOf(':'))\r\n      .replace('.', '_')\r\n      .replace(':', '_')\r\n      .replace('-', '_')\r\n```\r\n\r\nMore conventional wrapping since we try to keep wrapping equal at whichever syntactical level we break.\r\n\r\nI also optionally inlined the variable since extra lines are being added and the code seemed sufficiently clear without the variable."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670983642, 'comment_body': ""For this & following lines related to Moshi properties, ``?.`` seems unnecessary since none of the fields are nullable anymore. I suggest using the direct access ``.`` operator instead.\r\n\r\nI think this also means you don't need the ``?:`` case below, either."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 52, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670983836, 'comment_body': '```suggestion\r\n      omitVersionAndReplaceColonsHyphensPeriods(dep.coord) in bazelQueryDepsNames\r\n```\r\n\r\nMore idiomatic.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 53, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670984413, 'comment_body': ""Is it always guaranteed to be 3 characters? Maybe cut relative to the index of the last ``.`` since that's guaranteed to work for all extensions.\r\n\r\nAlso, ``?.`` not needed here either, I think."", 'comment_created': datetime.datetime(2021, 7, 16, 5, 54, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670984781, 'comment_body': ""Why not use substring?\r\n\r\n```kotlin\r\nval artifactVersion = artifactName.substringAfterLast(':')\r\n```"", 'comment_created': datetime.datetime(2021, 7, 16, 5, 55, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670985368, 'comment_body': 'I suggest also using a ``map{}`` here. You could optionally go one step farther and have a single return statement with the map built into the proto builder ``apply`` for ``MavenDependencyList``, but I defer to your choice on whether to have the map be separate for code readability/clarity.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670985742, 'comment_body': '```suggestion\r\n        if (dep.startsWith(MAVEN_PREFIX)) dep.substring(MAVEN_PREFIX.length) else dep\r\n```\r\n\r\nsubstring automatically goes to the end of the string if no endIndex is specified.\r\n\r\nThat being said, I suggest using ``removePrefix`` instead: https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/remove-prefix.html.', 'comment_created': datetime.datetime(2021, 7, 16, 5, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670986184, 'comment_body': 'Is ``.absoluteFile`` necessary?', 'comment_created': datetime.datetime(2021, 7, 16, 5, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670986603, 'comment_body': 'I suggest factoring the common code from here & above into a helper to avoid duplicating the Maven install parsing bits.\r\n\r\nAlso, I think there are more cases here where ``?.``/``?:`` can be omitted.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670987028, 'comment_body': ""Is this needed? Won't the for loop below have zero iterations if the length is 0?"", 'comment_created': datetime.datetime(2021, 7, 16, 6, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670987172, 'comment_body': 'If this is an enum, I suggest using ``==`` here, too.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 1, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670987416, 'comment_body': ""FYI ``toList`` isn't needed; a MutableList is also a List."", 'comment_created': datetime.datetime(2021, 7, 16, 6, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670987893, 'comment_body': 'I think you can just pass in the string directly:\r\n\r\n```suggestion\r\n    val document = docBuilder.parse(pomText)\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 6, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670988561, 'comment_body': 'Maybe another case where removePrefix is helpful:\r\n\r\n```suggestion\r\n    return ""https${url.removePrefix(""https"").removePrefix(""http"")}""\r\n```\r\n\r\nThough that\'s slightly hacky.\r\n\r\nOr you could ``replaceFirst(""http://"", ""https://"")``.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670989889, 'comment_body': ""I suggest using 5 minutes:\r\n\r\n```suggestion\r\n        CommandExecutorImpl(processTimeout = 5, processTimeoutUnit = TimeUnit.SECONDS)\r\n```\r\n\r\nAlso, it's probably reasonable to factor the constructor call into a lazy to avoid duplicating it in every test (nothing is gained by duplicating in this case)."", 'comment_created': datetime.datetime(2021, 7, 16, 6, 9, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670990410, 'comment_body': ""Is it that they aren't verified or that the files are empty? The test name should be really clear on the specific conditions that lead to this outcome.\r\n\r\nDitto for other test names."", 'comment_created': datetime.datetime(2021, 7, 16, 6, 10, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670990530, 'comment_body': 'Here & elsewhere: does the textproto actually need to be created? I thought it was mainly output from the script that we verify.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670991121, 'comment_body': 'For these deps I suggest interpolating the constant variables defined above to keep the two places in sync.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 12, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670991248, 'comment_body': 'I suggest interpolating these versions in the POM links above to keep the two in sync.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 12, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670991433, 'comment_body': 'Perhaps ``createThirdPartyAndroidLibrary`` would be clearer?', 'comment_created': datetime.datetime(2021, 7, 16, 6, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670991557, 'comment_body': 'All helpers should be private in this class.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 13, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670991889, 'comment_body': 'AndroidManifest.xml here, too.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670991970, 'comment_body': 'Consider also putting this bit in the multi-line string below, as well.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670992900, 'comment_body': 'For reference, this & the test above have good test names since they really clearly describe what conditions lead to the exception.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 16, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670993320, 'comment_body': 'This could be ``DEP_WITHOUT_LICENSE`` to make it really clear to the reader. Ditto for the other dependencies.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 17, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670993350, 'comment_body': 'What about dependencies with multiple licenses?', 'comment_created': datetime.datetime(2021, 7, 16, 6, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670994585, 'comment_body': 'What exactly is the difference between this & the test above?', 'comment_created': datetime.datetime(2021, 7, 16, 6, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670995191, 'comment_body': 'Do any of these tests verify the output of the textproto file? That seems important since there are steps when humans need to manually modify that file. We should make sure the correct file is outputted in each of the relevant license cases:\r\n- License has valid, scrapable link\r\n- License has invalid link\r\n- License has link that is valid, but not scrapable\r\n- Dependency is missing licenses', 'comment_created': datetime.datetime(2021, 7, 16, 6, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670996898, 'comment_body': 'As discussed, we root caused the issue during the team chat & found a workaround.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670997100, 'comment_body': 'Discussed during the team chat a method for doing this.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 670997269, 'comment_body': 'Discussed during team chat & verified a way to use document to parse the POM file.', 'comment_created': datetime.datetime(2021, 7, 16, 6, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671019744, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 12, 56, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671019800, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 13, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671019875, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 13, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671020415, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671033492, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671033535, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 38, 29, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671033616, 'comment_body': 'Done.\r\n', 'comment_created': datetime.datetime(2021, 7, 16, 7, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671035162, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 41, 22, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671037692, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 45, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671037796, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671041437, 'comment_body': 'Done.\r\n```\r\nfun retrieveThirdPartyMavenDepsListForBinary(binaryTarget: String): List<String> {\r\n    return executeBazelCommand(\r\n      ""query"",\r\n      ""deps(deps($binaryTarget) intersect //third_party/...) intersect @maven//...""\r\n    )\r\n  }\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 7, 52, 16, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671043477, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 55, 33, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671043583, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 55, 45, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671045426, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 58, 40, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671045996, 'comment_body': 'had to keep it public. Discussed on chat already.', 'comment_created': datetime.datetime(2021, 7, 16, 7, 59, 39, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671048660, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 3, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671048999, 'comment_body': 'Ack, will do that.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 4, 22, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671060415, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671060553, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 22, 19, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671066994, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 31, 54, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671071042, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671078393, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 49, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671078448, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671081047, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 53, 17, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671081671, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 54, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671082640, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671084110, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 8, 57, 41, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671089955, 'comment_body': 'Done.\r\n```kotlin\r\nval mavenDependencyList = finalDependenciesList.map { it ->\r\n      // Remove "".jar"" or "".aar"" or any other extension from the specified url.\r\n      val pomFileUrl = ""${it.url?.dropLast(3)}pom""\r\n      val artifactName = it.coord\r\n      val artifactVersion = artifactName.substringAfterLast(\':\')\r\n      val pomFile = licenseFetcher.scrapeText(pomFileUrl)\r\n      val mavenDependency = MavenDependency.newBuilder().apply {\r\n        this.artifactName = it.coord\r\n        this.artifactVersion = artifactVersion.toString()\r\n        this.addAllLicense(extractLicenseLinksFromPom(pomFile))\r\n      }\r\n      mavenDependencyList.add(mavenDependency.build())\r\n    }\r\n    return MavenDependencyList.newBuilder().addAllMavenDependency(mavenDependencyList).build()\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 9, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671095087, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 14, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671097288, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 17, 31, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671097967, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671098231, 'comment_body': 'Nopes, removed.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671098810, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 19, 59, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671102039, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671102269, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671106169, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671113069, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 16, 9, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671114010, 'comment_body': 'Why not point to a static blob reference to this license, too, rather than pulling it into the licenses repo?', 'comment_created': datetime.datetime(2021, 7, 16, 9, 44, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671114436, 'comment_body': ""This should say 'ISC License'"", 'comment_created': datetime.datetime(2021, 7, 16, 9, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671114540, 'comment_body': ""Ditto here--prefer pointing directly to the GitHub version since it's available."", 'comment_created': datetime.datetime(2021, 7, 16, 9, 45, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671116337, 'comment_body': 'Changed to `val doc = docBuilder.parse(InputSource(pomText.byteInputStream()))` as per our chat.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 48, 12, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671117074, 'comment_body': 'Rather than pointing to ``master``, we should point to the specific commit corresponding to the version that we depend on to guard against the license changing without us updating the version.\r\n\r\nDitto for other raw github retrievals below (except when they come from our repo since we version those files).', 'comment_created': datetime.datetime(2021, 7, 16, 9, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671117199, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 49, 41, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671122103, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 9, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671124973, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671128152, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671131910, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671133105, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671133421, 'comment_body': 'Done as per our chat.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671133485, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671135855, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 20, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671144285, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671150592, 'comment_body': ""Actually, both, if the files are empty that means that the script has to be run for the very first time that also implies that the license details wouldn't be verified in this case."", 'comment_created': datetime.datetime(2021, 7, 16, 10, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671155092, 'comment_body': 'Not much, in the above test case, all the dependencies have almost one license.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671155301, 'comment_body': 'We have a test case below for this.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671156253, 'comment_body': 'Noted.', 'comment_created': datetime.datetime(2021, 7, 16, 10, 58, 40, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671169309, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 11, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671172079, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 11, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671217794, 'comment_body': 'Per discussion, please follow up with Gists & local runs of these to help provide examples.', 'comment_created': datetime.datetime(2021, 7, 16, 12, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671221638, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 12, 45, 56, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671221942, 'comment_body': 'Remove--this is already in retrieveDependencyTree itself.', 'comment_created': datetime.datetime(2021, 7, 16, 12, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671222086, 'comment_body': '```suggestion\r\n      ?: throw Exception(""Failed to parse $pathToMavenInstall"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 12, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671227583, 'comment_body': ""For here & comment above: please replace 'local' with 'extracted' as well."", 'comment_created': datetime.datetime(2021, 7, 16, 12, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671227947, 'comment_body': '```suggestion\r\n    // in Oppia Android licenses repository: https://github.com/oppia/oppia-android-licenses\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 12, 52, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671232889, 'comment_body': ""Currently seems like this isn't done yet."", 'comment_created': datetime.datetime(2021, 7, 16, 12, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671235544, 'comment_body': ""Consider just setting it to 5 minutes instead--that's one of the benefits of being able to specify time unit."", 'comment_created': datetime.datetime(2021, 7, 16, 13, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671237009, 'comment_body': ""Doesn't appear done yet."", 'comment_created': datetime.datetime(2021, 7, 16, 13, 2, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671237860, 'comment_body': ""Doesn't appear done, but I don't feel strongly about this one."", 'comment_created': datetime.datetime(2021, 7, 16, 13, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671298266, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 14, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671298400, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 14, 27, 24, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671298485, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 14, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671298561, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 14, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671298603, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 14, 27, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671299166, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 14, 28, 18, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671299406, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 14, 28, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671306657, 'comment_body': ""I tried this but I think it's not possible, I couldn't obtain a link to the specific commit. "", 'comment_created': datetime.datetime(2021, 7, 16, 14, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671307429, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 14, 39, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671318901, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 14, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671319302, 'comment_body': ""Sorry, didn't push earlier. Now done."", 'comment_created': datetime.datetime(2021, 7, 16, 14, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671319596, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 14, 54, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671324556, 'comment_body': 'Added one more test case.', 'comment_created': datetime.datetime(2021, 7, 16, 15, 1, 25, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671328421, 'comment_body': '```suggestion\r\n  fun setUpWorkspaceForRulesJvmExternal(depsList: List<String>) {\r\n```\r\n\r\nDitto at callsites.', 'comment_created': datetime.datetime(2021, 7, 16, 15, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671333353, 'comment_body': ""Shouldn't this be using the rootBuildFile instead of a third-party one?"", 'comment_created': datetime.datetime(2021, 7, 16, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671333631, 'comment_body': 'This & the above are basically the same. Can we use a single helper that takes the build file so that it can be used in both places?', 'comment_created': datetime.datetime(2021, 7, 16, 15, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671343200, 'comment_body': 'Added 5 new test cases', 'comment_created': datetime.datetime(2021, 7, 16, 15, 28, 22, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671349842, 'comment_body': 'Could we parse the textproto using TextFormat and evaluate the properties from the proto itself?\r\n\r\nDitto for other textproto files.', 'comment_created': datetime.datetime(2021, 7, 16, 15, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671355420, 'comment_body': 'Here is the gist - https://gist.github.com/prayutsu/5bd43ac3de3825f20f1fb9bc5d522deb', 'comment_created': datetime.datetime(2021, 7, 16, 15, 46, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671358869, 'comment_body': '```suggestion\r\n  fun testDependencyHasLocalCopyLinkAndScrapableLink_scriptFails_andWritesTextproto() {\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 15, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671363809, 'comment_body': 'What about textrproto output for success?', 'comment_created': datetime.datetime(2021, 7, 16, 15, 58, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671367578, 'comment_body': 'In the latest version I still see ``createAndroidLibrary``', 'comment_created': datetime.datetime(2021, 7, 16, 16, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671368473, 'comment_body': 'Here & elsewhere: this is backwards. Truth is always assertThat(subject).hasOutcome(). I suggest changing this to:\r\n\r\n``assertThat(thirdPartyDependenciesList).contains(""@maven//:..."")``\r\n\r\nDitto above.', 'comment_created': datetime.datetime(2021, 7, 16, 16, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671373699, 'comment_body': ""This is possible. Here are the steps to find this:\r\n\r\n1. Navigate to the license file on GitHub (e.g. https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/LICENSE)\r\n2. Navigate to the repo link version (e.g. https://github.com/firebase/firebase-android-sdk/blob/master/LICENSE)\r\n3. Click the three dots on the upper right and click 'copy permalink' which should give you something like this: https://github.com/firebase/firebase-android-sdk/blob/52e1cf89efd795d798ae5485b8503e04e4a936b8/LICENSE\r\n4. Verify that this is the correct license for the version that we're using (tying to specific version isn't as important as long as we have a frozen permalink)\r\n5. Convert the link back to a raw link: https://raw.githubusercontent.com/firebase/firebase-android-sdk/52e1cf89efd795d798ae5485b8503e04e4a936b8/LICENSE\r\n6. Use this raw link in files"", 'comment_created': datetime.datetime(2021, 7, 16, 16, 14, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671374933, 'comment_body': ""Thanks. The output for the first one seems like it's missing details on the specific artifact/coordinate. Could we include that? It's sort of impossible to address the issues without that information."", 'comment_created': datetime.datetime(2021, 7, 16, 16, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671385586, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 16, 16, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671385724, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 16, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671385814, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 7, 16, 16, 33, 33, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671385860, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 16, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671386224, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 16, 34, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671389585, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 16, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671389798, 'comment_body': ""Apologies, it's done now."", 'comment_created': datetime.datetime(2021, 7, 16, 16, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671424688, 'comment_body': 'This was an example--all the other GitHub references still need to be made into permalinks.', 'comment_created': datetime.datetime(2021, 7, 16, 17, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671426769, 'comment_body': 'As discussed, please file an issue & add a TODO for improving the output for the first scenario in a follow-up PR in M2.', 'comment_created': datetime.datetime(2021, 7, 16, 17, 45, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671427322, 'comment_body': '@BenHenning confirming if this looks good.', 'comment_created': datetime.datetime(2021, 7, 16, 17, 46, 43, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671428912, 'comment_body': ""Ah I see. I actually think I lean toward the individual property checking with a helper since it's a lot more explicit on the defaults. Here, we're hiding default properties vs. being explicit about what we intend them to be.\r\n\r\nBoth are technically equivalent, but it's good to be clearer in tests."", 'comment_created': datetime.datetime(2021, 7, 16, 17, 49, 27, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671506029, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671506107, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 23, 24, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671506235, 'comment_body': 'Suggest: assertIsDependency', 'comment_created': datetime.datetime(2021, 7, 16, 20, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671506700, 'comment_body': 'More Truth idiomatic: ``assertThat(dependency.licenseList).isEmpty()``', 'comment_created': datetime.datetime(2021, 7, 16, 20, 24, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671507639, 'comment_body': 'Filed an issue - https://github.com/oppia/oppia-android/issues/3486', 'comment_created': datetime.datetime(2021, 7, 16, 20, 26, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671507783, 'comment_body': 'Here & below: suggest checking the type, then the property. E.g.:\r\n\r\n```kotlin\r\nassertThat(license.verifiedLinkCase).isEqualTo(License.VerifiedLinkCase.VERIFIEDLINK_SCRAPABLE_LINK)\r\nassertThat(license.scrapableLink.url).isEqualTo(verifiedLink)\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 20, 27, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671507957, 'comment_body': 'Prefer:\r\n\r\n```suggestion\r\n    assertThat(license.isOriginalLinkInvalid).isFalse()\r\n```\r\n\r\nDitto elsewhere, and for the true case.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 27, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671508591, 'comment_body': ""Suggest: ``parseTextProto``?\r\n\r\nalso for consistency, it may be nice to do a quick find & replace for 'textproto' to be two words (e.g. s/Textproto/TextProto & s/textproto/textProto & s/textproto/text proto) depending on the circumstances."", 'comment_created': datetime.datetime(2021, 7, 16, 20, 28, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671508725, 'comment_body': '```suggestion\r\n  private fun initializeCommandExecutorWithLongProcessWaitTime(): CommandExecutorImpl {\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 20, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671510000, 'comment_body': 'Also added a TODO.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671510894, 'comment_body': '```suggestion\r\n  // TODO(#3486): Update GenerateMavenDependenciesList.kt to call out first coordinate name\r\n  // that should be updated to update all occurrences of the license.\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 20, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671511140, 'comment_body': 'Main nit: can you move this next to the code that actually prints out the text that we want to update? That seems a bit more natural of a location.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 34, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671511833, 'comment_body': 'Thanks! Resolving this now.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 35, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671512451, 'comment_body': 'Resolving this to reduce the number of conversation threads since there are now quite a few, and this seems addressed.\r\n\r\nPlease follow up with me if you have any specific concerns here.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 37, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671512765, 'comment_body': 'Resolving this to reduce the number of conversation threads since there are now quite a few, and this seems addressed.\r\n\r\nPlease follow up with me if you have any specific concerns here.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 37, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671512824, 'comment_body': 'Resolving this to reduce the number of conversation threads since there are now quite a few, and this seems addressed.\r\n\r\nPlease follow up with me if you have any specific concerns here.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671513466, 'comment_body': ""@prayutsu I think this hasn't been resolved yet. PTAL."", 'comment_created': datetime.datetime(2021, 7, 16, 20, 39, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671513635, 'comment_body': ""@prayutsu I think this hasn't been resolved yet. PTAL."", 'comment_created': datetime.datetime(2021, 7, 16, 20, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671521436, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 57, 40, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671521469, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671521523, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671521708, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671521775, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671521846, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 58, 40, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671521893, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 20, 58, 47, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671522039, 'comment_body': 'Done. (But also kept here as it also involves some part)', 'comment_created': datetime.datetime(2021, 7, 16, 20, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671522531, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 0, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671522585, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671524356, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671526578, 'comment_body': ""```suggestion\r\n   * Helper function to parse the text proto file to a proto class.\r\n```\r\n\r\nIn this case since it's documentation."", 'comment_created': datetime.datetime(2021, 7, 16, 21, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671526616, 'comment_body': '```suggestion\r\n   * @return proto class from the parsed text proto file\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 21, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671526987, 'comment_body': ""isFalse() here & elsewhere. Please make sure to check all places when comments say 'ditto' (or just in general--this is really good practice when following up to reviewer comments)."", 'comment_created': datetime.datetime(2021, 7, 16, 21, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671527332, 'comment_body': 'I think ""com.crashlytics.sdk.android:crashlytics:2.9.8"" also needs to be updated, but the rest look correct.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671528860, 'comment_body': 'Is this completed? I still see ``getProto``.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671529359, 'comment_body': '``TextProto`` per other comment.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671529633, 'comment_body': '```suggestion\r\n  fun testEmptyPbFile_scriptFailsWithException_writesTextProto() {\r\n```\r\n\r\nPer other comment. Ditto for other test methods.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 16, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671534900, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 29, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671534940, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671535018, 'comment_body': 'Done and noted.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 30, 6, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671535188, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 30, 33, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671535265, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671535697, 'comment_body': 'done.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 31, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671535855, 'comment_body': 'Thanks, updated.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 32, 19, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671537330, 'comment_body': '```suggestion\r\n    val dependenciesListFromTextProto = retrieveMavenDependencyList(pathToProtoBinary)\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 21, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 671540280, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 45, 1, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 671541447, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 16, 21, 48, 46, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}]","[{'commit_sha': '0af8eb830e8af29614f64e5af7110ed36861b65d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03023b6aad758b50a895d62ec01e87cf4d2934f5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9c4ea87f5113ff8400925378a1869342a392cfa', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5856ef5bf9da6f1368c370d019c184bfd8e9cae6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8abe941c22f4b3d983435224ff47a4446a0c9ed6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26a3aaebab77b12b6f9f0bed142781f969fc4916', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce46a74f5c1476ae81f7954a7a1cce782abf86e1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '225a4fc070efb18dda2f4e08d76ac94b2b0321aa', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '638895fa2e461aae4b2d9f6e519e8349e0b3d282', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3fd706805e82358fb0cb4be551e3fe10ae6ee2c', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b25e77646138df0189eacb8c3a029bf26615abb2', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44e0150e382ab0bd4a085ad21b371fe78c63ca2', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1d38f1393f18d709a32940cf14f0c45b1a43bc', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '173fe5314ae3b57a55d49d150f95e3efed2ac5da', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '618e380d8c52b3bdb31c0b85a253ab6177cc221b', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3830ac088920f22e8c7bd59dc70a05ce1ea16f7', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb93c0a1ce2044bdd7fe1a3a5c4955313f02d6fa', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7342c16b93a5bf6c827b5cd50c1e495f5442986', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51e593b8f1a108a3c48794f840966e718f8b426b', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d1765798791e95d8f1ce539dd3fc750390c4883', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1913ef73e881b4a3251378f3ce7ab1e6a3164c75', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16bb0418a90c5f1d5ab9ca69f5d11fe6b16c76fd', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '325f28c5033d45fba09dc6fa076749dcf590828d', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'def5f061f09ed067abcb300d49e4b5f998bd736b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2aec29718edafc6d941e7d87c3307c673ea3fafb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f2e35d97b9bbc3f5662517e205101aae4318450', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3f8ea697bd66cf4e9e94dc1398560de400b32fa', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1970eb4ff4fc47f743607a66ff25932882f15d2', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f440a33e6036b742a58f68b12d0adc704764c10b', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df3a68513eedf16c6d0fb7501382751d1874e913', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fc013e7a0ee90e8c3a190d08ed5a1061b553600', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a956b22a7c98f9c44c54a183cd9771c47a664275', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49094e441fe8b14f74551392fc28f096c360d07c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '163310e09894c653122d2e0512dd47b9b6f087e1', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e9bf11d3470db81a13250fe94cd5bfeba018042', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b93e42104241845df835145d2dba96fd7e411669', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c6b49f6052d3a0dcfa83b6a98a0559d9e923f7a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44a489ef3c7c205f9669bb02145308f6d14590c2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '259322f39090d20e1c12bc85ecd4a53a6e1614e0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce66ac48775f008b623c0655e665cf832742baa5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '251282d0ea4aa4dd03de0fb9f7f3b0d32905b396', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '381853cd318e67681b24fcb4db203017eff05b75', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd01a238b9a361ac0f9da3667908bb081e89268c3', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96c0bfdcbce2a52ca0ccc128207acb19ff7fb37f', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be8cdbf1eb9ac27445b3225f67d3c971f9ba49a5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60e64dc566fdb74ca1a1a28b8f25aebadbb64065', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8740a48fee209a8c9f278437a9efc9e874bd09cb', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe17ed93aa4c70a35cec1af86dcea32e63874118', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '164786bdf9a10fb0517c8e37715dd79ea44abf44', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b709bffae47e73440879ab46a227cefdd9ae549a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a361f90a51d0c45cbaa21b6418baca164eb96451', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff7d9b2869598fa14b21434288bcef95877ba093', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbc91ddab33ff66ff74c950966738c375bdc3a39', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3353205add82cb2cac1d4cc6593e3cb92ae8be77', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46dc9bad7b98b6f0ee2f022e14a7436ada2b62df', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53e28015ca9d2b2e6affb2839190e4b70bbbd30d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c861c7a168c01fbe1058ca47d01805df53f1945', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60f248266a80f213d7d9d533151a2093294379bd', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9375775c4d793a3910c9e15cb7859705a5080356', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ba210e4fa082b36bc56c04da2158919167214f4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a94cc5eb0484a8ff458e82b843461b4f0b36ecdc', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a81152127ddaf0e80d47b3af2f9375556c36d0b4', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeb20d3a95a18a22c7f3044f8863bb14abbce1a0', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5a0166b859381c43c31d1421bab0c84ce90fd52', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ac402d40f3145ffc588260f0e7db08ba664d103', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32910ea758b73537bf79ec2002f33c32d07dabb5', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78693799f782e70409e91cf6c61091b2a699cb60', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b749db4d5f8378dd5ba1abf5ed6325e12619569', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10020344a811138759eb925c4f08692dda4eeb0a', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05dbe3ed6975861bfcd425a6efb7f9b84786a419', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83d66e01918ab83227f4d64eeb8f58718e9d4bf9', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b03eb729c0ccff76d9108ff33697db79a622f0df', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cae1f8d504a8a357c4d09d0842df078722d621c', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edd6b4ea459b3907682c3f7fc06f4f9db05d9c85', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a73b1fe4ca38ae0dd5bbbe896a383cb9559b103', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1637ccd5dfe39a17512b45ba44bcd9ade9e47ac1', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fba990ef364db43eb200e5f04d6a3adcdd36c5b3', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '262a4ecc2478e1f3ee8ebc65e35e1f7145ea3f4b', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74bb6b1dc79029b137f77b1dfb7213471308e615', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '899c50dd491338032d3ee99903844c304a61376c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4762601d8c144af466428f483a53cec6abd782ee', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69090e50490f521e7a572d2e06500a193d701adf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b56c1042f98839936b79672aec59f90a18675819', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5dce51014611ba9a4cbe8c29931b7c2baf44529', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '803c12881f57c3a59edb9034e96c3e297ce57176', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8a89c2904a0e83aac6256fad66113aea77ad683', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e01415fc049eba8a4afcf49d532e4839b8ee0d42', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4132be1c3ac642c0266d612f2e82feb6f47473da', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10759fcf37fa096f592f9cef79661359260400e6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68376e47a22a63982e39cafd139c5a96b3622026', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '345946123ddaa5d17c58cc9858637c433ef607e4', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '752c5ee14562c5e5f65debff94c2b37de4984e97', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e0b00c8982d93d01ff9a89befa532774dbd24c1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c50cd2929a4570eb9185ce3ef706403a6dc66429', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21e519791e12af1e9f30d891dfc4d554d3b93fd7', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e55757024e7b905f6bf1eae7057a48598ac61e02', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cb5db31908babb9012fcf155b14da2a24bb537a', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7f9fca129fd7d6e420af5f274f16ee3ea0b945', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b70c88051d4ba8bd4a3b7cd9f43414f27896ea94', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0152a2cf5af2f3598c4769ac209349559d817f7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31c1df5b6d3b373dfc3ae5e876f786e175faa482', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20efed9a65519c8a0f1bb4c3e9fafd50c86dc460', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28a5de1cb8e13e26fb351f3f0e382e65208ad32c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7977c0a83d5c8987180ada6fd6c7d5e86a6b8e20', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1077422538276a5fa3f7dae31707d03e3bd2e6e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fabd9c84858678161cd6206bfb21e22ed86a2c51', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd42d240f6770412d1f122c2b1da4a871b3fc1c05', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '217c9de3e828bcdb579e23b7982114b72b0b4caf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c1b1db3aefcd7f39a414dff9a634b4db245ffed', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01095408dab9c9a9fa54d247434fd4edeac78e23', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db08b9e144e5ef9c804f97fbe99f457cea925084', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9fada2c329b0f847affea0b43fc3ad92d74d112', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed9d9a851cf821e352a9ae12d0db1eabc04f34c', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c7d2b3397ae537da7cbd8d9a036c03ec8537b5e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7c35c6d0cd58946fca223cfc6e838164d3bdcf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3e4b9108334b5059b024c8d449d6bc9e7fd175e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a24591bf5d44319ec3860b316bd114b22f17ad2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c30158c0a9065520ef7226f9663289c033e82084', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd57ef42f0af3e7be963c5971bf27efa2ad129720', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74a068fa2b15de51478c8df1e5578f15ca8e66df', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f4c14bc8a57a28ff2089505e37f46fc12d7fbb0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91e108adc274c85d6719fe3e61aca03682aa0b52', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76897c8bb055c639640891eff46cb8e16c6cc7a4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f17901a20e14940c8fb911734a1888b4b5e4943', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5060dd2f041ad330d50a60bd8f75465225638ffa', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41e191cdee7670676441318ab26e504fc5c18947', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a469a3331dca091e9117b80f82baf0c67574ae4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a116afccf6865651024a00d8661d54a6775ec4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e52509567f8c630e182bca994c4368c82991033', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486c2d2bfa107628e7ed18e54cf4a8aaa44c3c3d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d0eaf8d4a4127c85843fb925b457079d2f2b72', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '765f7d476adcf88ad73785e3efaeb7339aac10b8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26161d85e2163a7814103decc3e0c26aba92bbdc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '380657ffea5edf6d45c4233537d11ffa9319eaca', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d0bdb104337135328677c8bf524ab1c77068215', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5deb9d915b060e40bee47cdac7aa0215cb9d0f63', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b0c768b5d5e7124e769dcf6eeb02f7b51023f24', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '161d9f7d2e36745b89a0657c0f60e47077c4a73c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '788a1e5ef84d0f2daadb8af253b4380f12f23b0a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8acadc8a6beed333d4f10650e866fd10010c3d1e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85a67e6e0f1b69d2f68ed15822b9debde9ec78e6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9287cdf55e4bb23d456df428b56e8940d0bd4229', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2b2782151360e8c87ed445d4fff7ccd0ac364fc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f4b9ecab1f5019b3e67aeda7a9517c4585b39d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f88d9add90c34d4c06c88f19260a47c70206c3d2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '041ebfaa5cc4fd675ad96920705c785af75ba244', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af6b8db67ef11817591ab13f779613d6e7928a9d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75b14e8cee33d7115c494cd3d76c36c673fb8e38', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fccdd2bef2dcc251453d15068b1a9807bf96902', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c9534fcbe7fe908ab388682a4d132532b8f3cc5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89b847018cd2f287ef0c6b483730a94149080e14', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1d942ae44e6376c26c6fb2b11c00d7cc76ee4f7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcd22c0cd61afc40b6f04ddf7df8408df0317a10', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f753064a8345cd1244a9c4fc0d1f94ef120ae96', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8858c63533bb9c9ac8f818736f83a0e5280d97c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b2eb86909f9651207f187d0c5f690712821d464', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18e12cee6030ccf665b7797c50927616767c693e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f98b4d72991d0214e6176384c43fa404169d68', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62ae59f74d6134c7f1b802a453c1c3e173965e93', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03973783d2a2c4b8370bd7e2e0b4f260eff1d6fd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92532d381196278a6b2dbc6a3d5fd4aa7c15c19b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a33e33b72f01926138514da02fdd60cad1c7ed6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e4b4b972e073d74683aa276d0186ab9bdb45138', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '737ab00feeeed843e749478bdd0f46ba2e0e9fdd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b65560db45a3d5ca390c98d62e409738dcf6742', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab5ea06d275d7f69ca4f1f9af563e453cd3985f5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6240891ebe7c8854f6db30fb3a1a0113314b90fe', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f1ff0089b7c3d471a980e469b9932071dd12a84', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b8152c1d2e5369f0b40fff63fcac3f0536b6fb8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6e54a62dff479fb26309fecb7d2d42295773a9e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8c50b2428d56c8fb924ed42c1a4164c17b26124', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f81e1956ae14e663f1109f86e2deb7c55603877d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63b0aa0bac0e079499a37fa5d4613aab5bd89af3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85529b9e43b057452c2edc015ef5172c51afde21', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a21642049b2b63db1a3dc05f1b65e6d64465cca7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfe5c68892365b0d989a91b9e091c7d0cdbfae94', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2065c4dd7c82e0d80c8ce61dfddc8547e955925e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2429fea28b8fb95c74172fc31db1df318c22a31d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbb339c5e6811d779d87538fc04ad61697c4fd62', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79554a3ad3bb13651bab776860b0ae69f3a37989', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2335a5b2e62691d97872bb540cfd08069b0421b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a48b897262bdf661da051035c9889bba7ee4194', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb05e68833a95e3478cc8e937bab0a1555447432', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cd618c8f27ea2898181bdbe4a124160f63e6d10', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a963a319b3696a40190d01631c2091bb0fe5fee3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '394688a7e5bffd267691573ee87865c8a53661b1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9c590373e65f9c6eb9456fed9ef2fa36d5df2d9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45cb139c5d88882ccf87c3ad7672bc4da0e88dce', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}]",Abhay Garg,54636525,,User,,31,,33,42
686739092,Fix #3287: Introduce Kotlin script to extract license texts,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3287:
Created a Kotlin script that extracts the license texts for the third-party maven dependencies.

To run the script, run the following command - 
```
bazel run //scripts:generate_license_texts -- $(pwd)/app/src/main/res/values scripts/assets/maven_dependencies.pb
```

As an output of the script, 5 files would get generated (resource XML files) that will be used to finally show these licenses in the UI. Note that these files should never be directly checked into the codebase.
They will only be generated by the maintainers at the time of preparing for a release.


Screenshot of passing test cases- 
![Screenshot from 2021-07-21 16-12-36](https://user-images.githubusercontent.com/54636525/126476263-72cf3a62-1acd-4ae8-9e15-dfe7e18624ee.png)


Files generated by the script can be seen here - 
https://gist.github.com/prayutsu/7693dabae98370ca000d959efaff0058


## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [ ] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3450,https://api.github.com/repos/oppia/oppia-android/pulls/3450,https://github.com/oppia/oppia-android/pull/3450,closed,1048,11,14,215,11,106,0,1,[],2021-07-09 12:08:55+00:00,2021-08-10 21:23:28+00:00,2798073.0,"32 days, 9:14:33","[{'comment_id': 667376555, 'comment_body': 'I think all of these can be directly defined in the script.', 'comment_created': datetime.datetime(2021, 7, 10, 19, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 667376820, 'comment_body': 'Make this private.', 'comment_created': datetime.datetime(2021, 7, 10, 19, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 667376841, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 7, 10, 19, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 668051751, 'comment_body': 'Could we use Guava for this, instead? https://stackoverflow.com/a/26572556', 'comment_created': datetime.datetime(2021, 7, 12, 15, 51, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668054875, 'comment_body': 'More Kotlin idiomatic:\r\n\r\n```suggestion\r\n  return mavenDependencyList.map { it.artifactVersion }\r\n```\r\n\r\nDitto elsewhere in this file.', 'comment_created': datetime.datetime(2021, 7, 12, 15, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668055633, 'comment_body': 'This should be private (only public API methods should be public which, for this script, is just ``main``).\r\n\r\nDitto elsewhere.', 'comment_created': datetime.datetime(2021, 7, 12, 15, 55, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668057172, 'comment_body': 'Why have different XML files for the string resources vs. bundling them in one? The latter seems easier to manage.', 'comment_created': datetime.datetime(2021, 7, 12, 15, 57, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668058769, 'comment_body': 'Here & elsewhere: it may be simpler to use forEachIndexed:\r\n\r\n```kotlin\r\nmavenDependenciesList.forEachIndexed { index, dependency ->\r\n  ...\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 15, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668060724, 'comment_body': ""This still isn't making sense to me--why would we keep a link that can't be shown? What's the case where we want to show the primary but not the secondary, or vice versa?\r\n\r\nIf the purpose is to retain the original link and allow for a local copy, then maybe using a ``oneof`` would be a better approach:\r\n\r\n```proto\r\noneof license_link_type {\r\n  ScrapableLink scrapable_link = 1;\r\n  LocalCopy local_copy = 2;\r\n  LinkOnly link_only = 3;\r\n}\r\n\r\nmessage ScrapableLink {\r\n  string url = 1;\r\n}\r\n\r\nmessage LocalCopy {\r\n  string filename = 1;\r\n}\r\n\r\nmessage DirectLink {\r\n  string url = 1;\r\n}\r\n```"", 'comment_created': datetime.datetime(2021, 7, 12, 16, 1, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668063663, 'comment_body': 'This is another case we can avoid needing to use a mutable set.', 'comment_created': datetime.datetime(2021, 7, 12, 16, 5, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668064380, 'comment_body': 'Optional, but a slightly nicer way to construct a proto is:\r\n\r\n```suggestion\r\n        CopyrightLicense.newBuilder().apply {\r\n          licenseName = license.licenseName\r\n          this.licenseText = licenseText\r\n          this.licenseLink = licenseLink\r\n        }.build()\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 16, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668065311, 'comment_body': ""This doesn't ever seem to be stored on disk. Why not use a data class instead of a proto?"", 'comment_created': datetime.datetime(2021, 7, 12, 16, 7, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668065990, 'comment_body': 'Nit: For the actual error & related variable news, it should be ""too few"" not ""too less"".', 'comment_created': datetime.datetime(2021, 7, 12, 16, 8, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668066805, 'comment_body': 'Is this a sufficient check for the list not being up-to-date? It could have entries but not have been recently updated, and it appears the check in the script would pass.', 'comment_created': datetime.datetime(2021, 7, 12, 16, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668067272, 'comment_body': 'Here & elsewhere: please only use ``main()`` when testing the script. We should never punch holes in the private implementation of a component when testing it, and instead should only test it through its public API.', 'comment_created': datetime.datetime(2021, 7, 12, 16, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668067839, 'comment_body': ""This doesn't seem sufficient. We should probably parse the XML to verify it's valid, and perform basic checks to make sure the correct attribute names & contents are being added. At the moment, the tests don't seem to be verifying the correctness of the generated XML."", 'comment_created': datetime.datetime(2021, 7, 12, 16, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668068658, 'comment_body': ""Please move the HTTP download portion of the script to a utility that's abstracted by an interface (maybe LicenseFetcher?) so that we can mock it out in the test. We should never be relying on network connectivity during a test since that both introduces flakiness and can prevent people from developing the codebase while offline."", 'comment_created': datetime.datetime(2021, 7, 12, 16, 12, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 668701352, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 13, 12, 9, 41, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 668701408, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 13, 12, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 668701444, 'comment_body': 'add kdoc', 'comment_created': datetime.datetime(2021, 7, 13, 12, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 668702217, 'comment_body': 'is this a helper function or a test?\r\n\r\nIf this a helper function, try to keep the test at a separate function. \r\n\r\nAlso, add kdoc', 'comment_created': datetime.datetime(2021, 7, 13, 12, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 670147920, 'comment_body': ""+1 dont store it as a proto if it isn't necessary"", 'comment_created': datetime.datetime(2021, 7, 15, 5, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vinitamurthi', 'type': 'User'}, {'comment_id': 673691734, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673691785, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673691846, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673691890, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673691942, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673691983, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 22, 56, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673692695, 'comment_body': 'Changed script to write only a single resource XML file.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 24, 34, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673692855, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673692972, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 25, 8, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673693992, 'comment_body': 'Sorry, I got a bit confused here, can you give an example here?', 'comment_created': datetime.datetime(2021, 7, 21, 6, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673694281, 'comment_body': 'No more needed as we are not using this proto class, but made changes for other proto classes.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 28, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673694340, 'comment_body': 'Done, removed.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673694406, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 28, 16, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673695008, 'comment_body': 'Actually, this script can not verify whether maven_dependencies.pb is up-to-date or not, we rely on the first script and the CI check for this.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673695062, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673695117, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 29, 33, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673695161, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673698529, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 36, 36, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673698572, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673698623, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 36, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673698868, 'comment_body': 'the function is not needed now.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 37, 18, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673702853, 'comment_body': 'These are data classes and hence are being exempted.', 'comment_created': datetime.datetime(2021, 7, 21, 6, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 674768322, 'comment_body': ""MavenDependency is no argument so we can remove the brackets. \r\nAs scripts is not a module so putting the brackets will not help us to directly jump over the class mentioned in the brackets. IDE doesn't help in such cases. \r\n\r\nWhat best I see here is `Returns an instance of MavenDependency proto message`\r\n\r\nApplies to other kdoc as well."", 'comment_created': datetime.datetime(2021, 7, 22, 12, 53, 52, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 674768492, 'comment_body': 'MavenDependencyList is no argument so we can remove the brackets. ', 'comment_created': datetime.datetime(2021, 7, 22, 12, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 674775174, 'comment_body': 'add a complete kdoc here with an explanation on what these arguments are and when to pass what. ', 'comment_created': datetime.datetime(2021, 7, 22, 13, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676078183, 'comment_body': 'Please mentioned `@param` and `@return` similar to below function', 'comment_created': datetime.datetime(2021, 7, 25, 3, 49, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676078395, 'comment_body': 'Typo in function name `retrieveListOfStrings`', 'comment_created': datetime.datetime(2021, 7, 25, 3, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676312208, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 26, 6, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676328839, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 26, 6, 39, 12, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676328886, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 26, 6, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676328941, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 26, 6, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 680347378, 'comment_body': 'add named argument for this and other similar cases', 'comment_created': datetime.datetime(2021, 7, 31, 11, 27, 39, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 680347515, 'comment_body': 'add kdoc explaining what each argument is and what it will return. Follow the format of using annotation `@param ...  @returns ..`', 'comment_created': datetime.datetime(2021, 7, 31, 11, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 680349226, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 31, 11, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 680349246, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 31, 11, 46, 29, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683282990, 'comment_body': ""Maybe instead: ``retrieve_license_texts`` or similar? I think my earlier comment about 'generation' applies here, too. Ditto for all the library/class names elsewhere."", 'comment_created': datetime.datetime(2021, 8, 5, 9, 22, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683283817, 'comment_body': 'Can this fit on one line?', 'comment_created': datetime.datetime(2021, 8, 5, 9, 23, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683284094, 'comment_body': '```suggestion\r\n   * @return list of [MavenDependency]s\r\n```', 'comment_created': datetime.datetime(2021, 8, 5, 9, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683284202, 'comment_body': 'Nit: remove extra newline between at-clauses. Ditto elsewhere.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683284750, 'comment_body': ""This & the helper name don't match the implementation--it's parsing a binary proto, not a textproto."", 'comment_created': datetime.datetime(2021, 8, 5, 9, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683285789, 'comment_body': 'This method seems really duplicative to the one above--can we can consolidate some of this common logic into helpers or somehow combine the methods?', 'comment_created': datetime.datetime(2021, 8, 5, 9, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683287545, 'comment_body': 'Suggest using File to compute a more robust path (to avoid depending on the argument to be passed a certain way:\r\n\r\n```suggestion\r\n    val valuesDirectory = File(pathToValuesDirectory) // Maybe verify this exists & is a directory with a check?\r\n    val thirdPartyDependenciesXml = File(valuesDirectory, ""third_party_dependencies.xml"")\r\n```\r\n\r\nDitto for other files (if applicable) to simplify & improve robustness.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683288307, 'comment_body': 'Nit: remove extra newline (for consistency). Ditto elsewhere.', 'comment_created': datetime.datetime(2021, 8, 5, 9, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683290204, 'comment_body': '```suggestion\r\nLibraries corresponding to parse maven_install.json file and representeing license details.\r\n```\r\n\r\nPrefer not to be too specific since implementations change over time (especially class names).', 'comment_created': datetime.datetime(2021, 8, 5, 9, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683291068, 'comment_body': 'Might this be a potentially better fit under a license/model package, instead?\r\n\r\nSimilarly, this data package might actually be better represented if it were called ""model"".', 'comment_created': datetime.datetime(2021, 8, 5, 9, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683455652, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 31, 56, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683456412, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 32, 52, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683456485, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 32, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683456560, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 33, 3, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683456727, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 33, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683457169, 'comment_body': 'Made a new helper method for the common part of both methods.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683457245, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683457353, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683457945, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683458049, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 13, 34, 45, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685501219, 'comment_body': 'Should be ""model""', 'comment_created': datetime.datetime(2021, 8, 9, 20, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685503560, 'comment_body': '```suggestion\r\n    return mavenDependencyList.flatMap { dependency ->\r\n      val licenseList = dependency.licenseList\r\n      check(licenseList.isNotEmpty()) { MAVEN_DEPENDENCY_LIST_NOT_UP_TO_DATE }\r\n      return@flatMap licenseList.map { license ->\r\n        retrieveCopyrightLicense(license)\r\n      }\r\n    }\r\n```\r\n\r\nThis should be (effectively) equivalent, and avoids the mutability. Ditto elsewhere in this file that uses mutable lists (prefer to avoid them everywhere if we can).', 'comment_created': datetime.datetime(2021, 8, 9, 20, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685504120, 'comment_body': ""```suggestion\r\n    return CopyrightLicense(license.licenseName, licenseLink, licenseText)\r\n```\r\n\r\nPrefer fitting things on one line if they don't exceed the column limit."", 'comment_created': datetime.datetime(2021, 8, 9, 20, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685504531, 'comment_body': 'This should also be ""model"".', 'comment_created': datetime.datetime(2021, 8, 9, 20, 38, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685504828, 'comment_body': '```suggestion\r\nData structures corresponding to parsing maven_install.json.\r\n```\r\n\r\nSlight clarification & grammar fixes.', 'comment_created': datetime.datetime(2021, 8, 9, 20, 39, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685506721, 'comment_body': '```suggestion\r\n  fun testScript_oneArgument_printsUsageStringAndThrowsException() {\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 20, 42, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685507412, 'comment_body': 'Does writeTo() close the stream? If not, this should probably be:\r\n\r\n```suggestion\r\n    pbFile.outputStream().use { mavenDependencyList.writeTo(it) }\r\n```\r\n\r\nTo ensure that resources are properly closed. Ditto for other tests.', 'comment_created': datetime.datetime(2021, 8, 9, 20, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685510839, 'comment_body': 'Might it be possible to move some of these bits to helpers to just retrieve the elements that the test needs to verify? If it helps, we can leverage data classes to represent some of the substructures that need to be verified, too.', 'comment_created': datetime.datetime(2021, 8, 9, 20, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685511978, 'comment_body': 'Suggest instead using Truth:\r\n\r\n```suggestion\r\n    assertThat(dependencyNamesList).containsExactly(""artifact.name"", ""artifact.name"", ""artifact.name"")\r\n```\r\n\r\nDitto everywhere else--prefer not using custom verifier methods unless needed.', 'comment_created': datetime.datetime(2021, 8, 9, 20, 51, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685512402, 'comment_body': 'Might it be possible to set this up to have different artifact names for each? It looks a bit like a bug here (and might hide real issues if we fail to pass data through properly).', 'comment_created': datetime.datetime(2021, 8, 9, 20, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685512806, 'comment_body': 'Is this still the correct expected content given that the license XML was replaced with test data?', 'comment_created': datetime.datetime(2021, 8, 9, 20, 52, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685513611, 'comment_body': ""For this & other methods, this is actually a create*() method. Prefer that over 'get' since 'get' implies that something is being retrieved, not created."", 'comment_created': datetime.datetime(2021, 8, 9, 20, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685513882, 'comment_body': '```suggestion\r\n  /**\r\n   * Parses the XML to return a list of values enclosed between string tags.\r\n   *\r\n   * @param xmlContent XML content to be parsed\r\n   * @param attributePrefix the prefix of the attribute of <string> tag that needs to be parsed\r\n   * @return list of parsed values of <string> nodes with the given attributrPrefix\r\n   */\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 20, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 685692080, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 3, 17, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692118, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692170, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692192, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692220, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692249, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 3, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692317, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692683, 'comment_body': ""Sorry, I didn't get that completely, aren't we already using helpers to retrieve a list of strings that need to be matched?"", 'comment_created': datetime.datetime(2021, 8, 10, 5, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692740, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 5, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692796, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 5, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692821, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 5, 43, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685692861, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 5, 52, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685693871, 'comment_body': 'Actually, we are not testing the output of third_party_dependencies.xml, we are creating a new values XML file in every test case, and we are mocking the `LicenseFetcher` that fetches the text of the URL for us. I have kept it original license text only because test data is completely in our hands and this way it looks closer to the real scenarios.', 'comment_created': datetime.datetime(2021, 8, 10, 5, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686330005, 'comment_body': 'This was addressed in a later comment (the idea is to use methods like ``map{}`` to avoid needing to use mutable structures).', 'comment_created': datetime.datetime(2021, 8, 10, 21, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686330989, 'comment_body': ""I was thinking more of isolating the XML reading & retrieval of higher-level elements to helper methods so that all the test needs to care about is retrieving exactly the data it needs. That being said, I don't feel strongly about this."", 'comment_created': datetime.datetime(2021, 8, 10, 21, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686331399, 'comment_body': 'Got it--thanks for clarifying.', 'comment_created': datetime.datetime(2021, 8, 10, 21, 22, 10, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': '0af8eb830e8af29614f64e5af7110ed36861b65d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03023b6aad758b50a895d62ec01e87cf4d2934f5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9c4ea87f5113ff8400925378a1869342a392cfa', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5856ef5bf9da6f1368c370d019c184bfd8e9cae6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8abe941c22f4b3d983435224ff47a4446a0c9ed6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26a3aaebab77b12b6f9f0bed142781f969fc4916', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce46a74f5c1476ae81f7954a7a1cce782abf86e1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '225a4fc070efb18dda2f4e08d76ac94b2b0321aa', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '638895fa2e461aae4b2d9f6e519e8349e0b3d282', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3fd706805e82358fb0cb4be551e3fe10ae6ee2c', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b25e77646138df0189eacb8c3a029bf26615abb2', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44e0150e382ab0bd4a085ad21b371fe78c63ca2', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1d38f1393f18d709a32940cf14f0c45b1a43bc', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '173fe5314ae3b57a55d49d150f95e3efed2ac5da', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '618e380d8c52b3bdb31c0b85a253ab6177cc221b', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3830ac088920f22e8c7bd59dc70a05ce1ea16f7', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb93c0a1ce2044bdd7fe1a3a5c4955313f02d6fa', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7342c16b93a5bf6c827b5cd50c1e495f5442986', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51e593b8f1a108a3c48794f840966e718f8b426b', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d1765798791e95d8f1ce539dd3fc750390c4883', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1913ef73e881b4a3251378f3ce7ab1e6a3164c75', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16bb0418a90c5f1d5ab9ca69f5d11fe6b16c76fd', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '325f28c5033d45fba09dc6fa076749dcf590828d', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'def5f061f09ed067abcb300d49e4b5f998bd736b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2aec29718edafc6d941e7d87c3307c673ea3fafb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f2e35d97b9bbc3f5662517e205101aae4318450', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3f8ea697bd66cf4e9e94dc1398560de400b32fa', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1970eb4ff4fc47f743607a66ff25932882f15d2', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f440a33e6036b742a58f68b12d0adc704764c10b', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df3a68513eedf16c6d0fb7501382751d1874e913', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fc013e7a0ee90e8c3a190d08ed5a1061b553600', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a956b22a7c98f9c44c54a183cd9771c47a664275', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49094e441fe8b14f74551392fc28f096c360d07c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '163310e09894c653122d2e0512dd47b9b6f087e1', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e9bf11d3470db81a13250fe94cd5bfeba018042', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b93e42104241845df835145d2dba96fd7e411669', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c6b49f6052d3a0dcfa83b6a98a0559d9e923f7a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44a489ef3c7c205f9669bb02145308f6d14590c2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '259322f39090d20e1c12bc85ecd4a53a6e1614e0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce66ac48775f008b623c0655e665cf832742baa5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '251282d0ea4aa4dd03de0fb9f7f3b0d32905b396', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '381853cd318e67681b24fcb4db203017eff05b75', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd01a238b9a361ac0f9da3667908bb081e89268c3', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96c0bfdcbce2a52ca0ccc128207acb19ff7fb37f', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be8cdbf1eb9ac27445b3225f67d3c971f9ba49a5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60e64dc566fdb74ca1a1a28b8f25aebadbb64065', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8740a48fee209a8c9f278437a9efc9e874bd09cb', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe17ed93aa4c70a35cec1af86dcea32e63874118', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '164786bdf9a10fb0517c8e37715dd79ea44abf44', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b709bffae47e73440879ab46a227cefdd9ae549a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a361f90a51d0c45cbaa21b6418baca164eb96451', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff7d9b2869598fa14b21434288bcef95877ba093', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbc91ddab33ff66ff74c950966738c375bdc3a39', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3353205add82cb2cac1d4cc6593e3cb92ae8be77', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46dc9bad7b98b6f0ee2f022e14a7436ada2b62df', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53e28015ca9d2b2e6affb2839190e4b70bbbd30d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c861c7a168c01fbe1058ca47d01805df53f1945', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60f248266a80f213d7d9d533151a2093294379bd', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9375775c4d793a3910c9e15cb7859705a5080356', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ba210e4fa082b36bc56c04da2158919167214f4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a94cc5eb0484a8ff458e82b843461b4f0b36ecdc', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a81152127ddaf0e80d47b3af2f9375556c36d0b4', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeb20d3a95a18a22c7f3044f8863bb14abbce1a0', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5a0166b859381c43c31d1421bab0c84ce90fd52', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ac402d40f3145ffc588260f0e7db08ba664d103', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32910ea758b73537bf79ec2002f33c32d07dabb5', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78693799f782e70409e91cf6c61091b2a699cb60', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b749db4d5f8378dd5ba1abf5ed6325e12619569', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10020344a811138759eb925c4f08692dda4eeb0a', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05dbe3ed6975861bfcd425a6efb7f9b84786a419', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83d66e01918ab83227f4d64eeb8f58718e9d4bf9', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b03eb729c0ccff76d9108ff33697db79a622f0df', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cae1f8d504a8a357c4d09d0842df078722d621c', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edd6b4ea459b3907682c3f7fc06f4f9db05d9c85', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a73b1fe4ca38ae0dd5bbbe896a383cb9559b103', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1637ccd5dfe39a17512b45ba44bcd9ade9e47ac1', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fba990ef364db43eb200e5f04d6a3adcdd36c5b3', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '262a4ecc2478e1f3ee8ebc65e35e1f7145ea3f4b', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74bb6b1dc79029b137f77b1dfb7213471308e615', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '899c50dd491338032d3ee99903844c304a61376c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4762601d8c144af466428f483a53cec6abd782ee', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69090e50490f521e7a572d2e06500a193d701adf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b56c1042f98839936b79672aec59f90a18675819', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5dce51014611ba9a4cbe8c29931b7c2baf44529', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '803c12881f57c3a59edb9034e96c3e297ce57176', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8a89c2904a0e83aac6256fad66113aea77ad683', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e01415fc049eba8a4afcf49d532e4839b8ee0d42', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4132be1c3ac642c0266d612f2e82feb6f47473da', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10759fcf37fa096f592f9cef79661359260400e6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68376e47a22a63982e39cafd139c5a96b3622026', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '345946123ddaa5d17c58cc9858637c433ef607e4', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '752c5ee14562c5e5f65debff94c2b37de4984e97', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e0b00c8982d93d01ff9a89befa532774dbd24c1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c50cd2929a4570eb9185ce3ef706403a6dc66429', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21e519791e12af1e9f30d891dfc4d554d3b93fd7', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e55757024e7b905f6bf1eae7057a48598ac61e02', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cb5db31908babb9012fcf155b14da2a24bb537a', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d7f9fca129fd7d6e420af5f274f16ee3ea0b945', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b70c88051d4ba8bd4a3b7cd9f43414f27896ea94', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0152a2cf5af2f3598c4769ac209349559d817f7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31c1df5b6d3b373dfc3ae5e876f786e175faa482', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20efed9a65519c8a0f1bb4c3e9fafd50c86dc460', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28a5de1cb8e13e26fb351f3f0e382e65208ad32c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7977c0a83d5c8987180ada6fd6c7d5e86a6b8e20', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1077422538276a5fa3f7dae31707d03e3bd2e6e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fabd9c84858678161cd6206bfb21e22ed86a2c51', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd42d240f6770412d1f122c2b1da4a871b3fc1c05', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '217c9de3e828bcdb579e23b7982114b72b0b4caf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c1b1db3aefcd7f39a414dff9a634b4db245ffed', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01095408dab9c9a9fa54d247434fd4edeac78e23', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db08b9e144e5ef9c804f97fbe99f457cea925084', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9fada2c329b0f847affea0b43fc3ad92d74d112', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed9d9a851cf821e352a9ae12d0db1eabc04f34c', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e687d91a16596f6d3c87c83d9f56457299e2933d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c7d2b3397ae537da7cbd8d9a036c03ec8537b5e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7c35c6d0cd58946fca223cfc6e838164d3bdcf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3e4b9108334b5059b024c8d449d6bc9e7fd175e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a24591bf5d44319ec3860b316bd114b22f17ad2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23adea78d20ff53c1366bf8c4b2da9d5f3f8e896', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0601424b4ef04dae9767f33d4a65bfca55d5e01', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd871f6b3b83c8541d0cd214cfef66e3407c5b7b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c30158c0a9065520ef7226f9663289c033e82084', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd57ef42f0af3e7be963c5971bf27efa2ad129720', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74a068fa2b15de51478c8df1e5578f15ca8e66df', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f4c14bc8a57a28ff2089505e37f46fc12d7fbb0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91e108adc274c85d6719fe3e61aca03682aa0b52', 'committer_username': 'Sparsh1212', 'committer_name': 'Sparsh Agrawal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 29, 4, 42, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76897c8bb055c639640891eff46cb8e16c6cc7a4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '541fffeab7c9f88b286913e366e7e35e3cf92221', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0db5e7cbb6ddc826031b83feca1bb4f37d6c3996', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f17901a20e14940c8fb911734a1888b4b5e4943', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5060dd2f041ad330d50a60bd8f75465225638ffa', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41e191cdee7670676441318ab26e504fc5c18947', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aef8479c847e8b2d7986b662125bf531f785ea4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '911a454851056c786790539501771d93392219cc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a469a3331dca091e9117b80f82baf0c67574ae4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba04c3f8c6728ac480c866d77cc39cfcd97c9c7d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42a116afccf6865651024a00d8661d54a6775ec4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e52509567f8c630e182bca994c4368c82991033', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486c2d2bfa107628e7ed18e54cf4a8aaa44c3c3d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b181471b7162e02878276a5ea0d3774b7587eee', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7779bd4bae8a5d5126607e7f8bd0d575f54147c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8341dad8faecadffe66421da892fec71502e31e0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d0eaf8d4a4127c85843fb925b457079d2f2b72', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '765f7d476adcf88ad73785e3efaeb7339aac10b8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26161d85e2163a7814103decc3e0c26aba92bbdc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e65e0d0a1b88a2c751d0ca9336d2b954a8c45b22', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef23558ab6cd25250d60cd3286417b608a3649cd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be06425f65cad8b63e739756ec1bebb3631aa27d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24caecf9f308627feda8c501c27d41c8f673905a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08d07dd1fcab1f8c531ffc3ff7f1573c4ed0540d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '380657ffea5edf6d45c4233537d11ffa9319eaca', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d0bdb104337135328677c8bf524ab1c77068215', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5deb9d915b060e40bee47cdac7aa0215cb9d0f63', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b0c768b5d5e7124e769dcf6eeb02f7b51023f24', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '619d4cdbfa32c0758d4438fc2f68880f39e7faf0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09bd480d4a1a25e5147a0055a864011fbe973754', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c909410d4f65d2a87680bd29ed80bcaceee59c46', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2b61f86ca1326abd51ab22b3a4ef8ded81bfa6a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d307c25278559a65380a69c18762b72e0e16024', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2756b3ef8cc696da565de763ee87dbd593537c76', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '161d9f7d2e36745b89a0657c0f60e47077c4a73c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '788a1e5ef84d0f2daadb8af253b4380f12f23b0a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8acadc8a6beed333d4f10650e866fd10010c3d1e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85a67e6e0f1b69d2f68ed15822b9debde9ec78e6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9287cdf55e4bb23d456df428b56e8940d0bd4229', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2b2782151360e8c87ed445d4fff7ccd0ac364fc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f4b9ecab1f5019b3e67aeda7a9517c4585b39d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f88d9add90c34d4c06c88f19260a47c70206c3d2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '041ebfaa5cc4fd675ad96920705c785af75ba244', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af6b8db67ef11817591ab13f779613d6e7928a9d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75b14e8cee33d7115c494cd3d76c36c673fb8e38', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c953d9a1a0271542a3a3c34adafee8294cb8396d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '932eb54a0b8eaf4eecb9fa28b820350ea53aaced', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2236a0adef01ed666cba3d741ec2d05d3248401c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95a16e6f833a85c2522c34398763f450e860a494', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd61947a709965a0bc6d005871a528dd95b470b39', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e4a0808587d5a871a0816585e3ab23829eec4bd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2675f576ec73f1f663e740dd09722ce77e346fc2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8731456d4004353bae0be199c6b33f0e5378c768', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bde3985e44ee2c67acba7dd805dfda36c3cbf7a0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '732309c19d5e0607b43b0f182a2b2fb7f4ce9360', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b85b748d22f6e38dd909fb703b25d1879d61ef68', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cb786e58bb1f5ad3b45c6556bd9d73c88e60bf6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7bde30845c630683f063846cbefd0ff87e26232', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e1759468ab5b30cc1126d5eecd232d39e55845c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dad52e5c8effb02940adff03a45cd6bffb8d9065', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15849e6ae3297e2582d9443347306ae4eb17437f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0c28ab799c9ed3670150bcae733ab6c1c8a5eeb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3548aa7ab52be7bb1ab33731f1f0e7dec16cbd8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6cee1c60ad4d555ad690a38dea468b4967056df', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3df71e47d59bbbbfaf75d49f2526053550f9ee3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '084595803db4adac9f9d5709c2bd47138a822cd7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e845bcc2f551bcb24877f060076e9ce91524dd34', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e92f5860175b1d5f0f0a7da8cfe7115b045b7249', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7d55bddfb430532e26ba27bd5fbbf9b60fcf1c0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a75371afbc99b4255414c4ea07276fde667cb7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cc906b5c64ca514facea606c54e7a1edc0047dc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1e2c1dcfa187e37744330b9aa5768e465fccc5d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aa3ceedeada3523992e2c9b897b3fb4d81c4787', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c4237945e4ff10ae420c9e2288d5d538bfc4c7e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dc0c9e16893609f7c885c1bba77e051dbff37ac', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dee428f60838e400f3fe87c0964b189d45878b3f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '725aa5e04dbed4371fc56aadec31cb0a1b3f6dac', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '253c960542fe121e9b8d701afbe9b8faaec7e617', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c02a6b2fa1854fe22763495687d59db26dd6c7c8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e52b243719062d2e24de6e80cfb5ea391b56c1c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e57fe7066c79c553ed300d41f7eee031f01200b6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90137b9c19b23835216ed620157b959ff9e4ec64', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfef8de39996934f830270424aadc8c8542e5e32', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f35316c0635ea3e52e039b47caf26982ac4e29f8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f35b7b1881baad5a88dbaaf2648a49923e00089', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fbc2af244064e1f642c39932472ca493daef5cd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f512c40d241b904682829d3532d53e124f1bacb7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55582c8a409e4a014865beaac05643223827fc78', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee2c4907e9e709ee94d0fccc0e770d2e54fe0894', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}]",Abhay Garg,54636525,,User,,31,,33,42
692521982,Fix #3486: Call out dependency names when license details incomplete Exception is thrown,"<!--
  - Thanks for submitting the code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

Fixes #3486:

When an exception is thrown to update license details, the script now calls out the specific dependencies that should be updated to update all other occurrences of those licenses.

Screenshot of passing test cases - 

![Screenshot from 2021-07-22 12-36-36](https://user-images.githubusercontent.com/54636525/126601397-df99b4ee-5ee6-4d1e-a4fe-373c6e9f9292.png)



## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3503,https://api.github.com/repos/oppia/oppia-android/pulls/3503,https://github.com/oppia/oppia-android/pull/3503,closed,861,101,4,11,7,36,0,1,[],2021-07-19 11:27:45+00:00,2021-07-30 05:53:36+00:00,930351.0,"10 days, 18:25:51","[{'comment_id': 672757755, 'comment_body': 'Should this command be in a separate line? It might be difficult for some people of understand what exactly is command in this entire line.', 'comment_created': datetime.datetime(2021, 7, 20, 2, 15, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 672758378, 'comment_body': 'Why is `:` at the end?', 'comment_created': datetime.datetime(2021, 7, 20, 2, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 672758746, 'comment_body': 'Looks odd when we read the entire sentence and therefore expecting a `.`', 'comment_created': datetime.datetime(2021, 7, 20, 2, 19, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 672759102, 'comment_body': ""Remove `ktlint-disable...` Try to rename it such that we don't need to ignore it.\r\n"", 'comment_created': datetime.datetime(2021, 7, 20, 2, 20, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 672820808, 'comment_body': '```suggestion\r\n        maven_dependencies.textproto. Note that only first dependency that contains the license \r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 5, 41, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 672821125, 'comment_body': 'Just to clarify: after updating the first license & re-running the script, all the other occurrences will be automatically fixed, correct?', 'comment_created': datetime.datetime(2021, 7, 20, 5, 42, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 672821261, 'comment_body': 'Should we include instructions to re-run the script if it fails in this case?', 'comment_created': datetime.datetime(2021, 7, 20, 5, 42, 40, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 672821716, 'comment_body': 'Prefer returning just Map (in general we should use immutable types unless mutability is needed).', 'comment_created': datetime.datetime(2021, 7, 20, 5, 43, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 672821923, 'comment_body': 'Should this be ``findFirstDependenciesWithBrokenLicenses`` since it may return more than one?', 'comment_created': datetime.datetime(2021, 7, 20, 5, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 672821969, 'comment_body': 'Prefer mutableMapOf', 'comment_created': datetime.datetime(2021, 7, 20, 5, 44, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 672822370, 'comment_body': ""FWIW I think you can just use ``first()`` since it'll throw if nothing's found."", 'comment_created': datetime.datetime(2021, 7, 20, 5, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 672823051, 'comment_body': 'I think you could also create an association instead of manually assembling the map:\r\n\r\n```kotlin\r\nreturn brokenLicenses.associateTo { license ->\r\n  mavenDependenciesList.first { dependency -> license in dependency.licenseList }\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 5, 47, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 672824211, 'comment_body': ""This should also be multiple tests. In general, each test should verify just one behavior. That means each test will exactly look like:\r\n\r\n- _Arrange_\r\n- _Act_\r\n- _Assert_\r\n\r\nIf you see something like arrange-act-assert-act-assert then that test is likely verifying multiple things.\r\n\r\nIn this case, it seems there are (at least) three behaviors worth testing:\r\n1. That in failing cases, the script correctly fails with the correct output\r\n2. That in failing cases, remedying the failure leads to a passing script\r\n3. In cases when the failure is remedied due to updating 1 license, the output from the script fixes all others\r\n\r\nThere may be other tests worth adding, and it's easier to determine that once you split out the different tests like the list above & consider them together."", 'comment_created': datetime.datetime(2021, 7, 20, 5, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 672824614, 'comment_body': ""Maybe just rely on the link below, instead, since it's easier to keep that up-to-date than code."", 'comment_created': datetime.datetime(2021, 7, 20, 5, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 673783484, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 8, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673783568, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 8, 48, 46, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673784186, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 8, 49, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673784700, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 8, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673784812, 'comment_body': 'Yes, right.', 'comment_created': datetime.datetime(2021, 7, 21, 8, 50, 23, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673785098, 'comment_body': 'yes, we have included that on line number 138.', 'comment_created': datetime.datetime(2021, 7, 21, 8, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673785718, 'comment_body': 'Now using - \r\n```\r\nreturn brokenLicenses.associateTo(mutableMapOf<License, String>()) { license ->\r\n      license to mavenDependenciesList.first { dependency ->\r\n        dependency.licenseList.contains(license)\r\n      }.artifactName\r\n    }\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 8, 51, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673785791, 'comment_body': 'done.', 'comment_created': datetime.datetime(2021, 7, 21, 8, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673785964, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 8, 51, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673786025, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 21, 8, 51, 56, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 673787105, 'comment_body': ""Shouldn't it be -\r\n```kotlin\r\n    return brokenLicenses.associateTo(mutableMapOf<License, String>()) { license ->\r\n      license to mavenDependenciesList.first { dependency ->\r\n        dependency.licenseList.contains(license)\r\n      }.artifactName\r\n    }\r\n```"", 'comment_created': datetime.datetime(2021, 7, 21, 8, 53, 16, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 674512684, 'comment_body': '```suggestion\r\n      this.extractedCopyLink = ExtractedCopyLink.newBuilder().apply {\r\n        url = ""https://local-copy/bsd-license""\r\n      }.build()\r\n```\r\n\r\nThe formatting of the previous version is a bit off, but this alternative also makes use of apply.\r\n\r\nDitto for other similar cases below.', 'comment_created': datetime.datetime(2021, 7, 22, 5, 39, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 674512860, 'comment_body': 'I think you can just do ``addLicense(incompleteApacheLicense)``. Ditto below.', 'comment_created': datetime.datetime(2021, 7, 22, 5, 39, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 674512987, 'comment_body': ""Nit: setUpBazelEnvironment\r\n\r\n'set up' is the verb form of the noun 'setup', and method names should always be verb phrases to describe the action taking place."", 'comment_created': datetime.datetime(2021, 7, 22, 5, 40, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 674514523, 'comment_body': 'The current formatting is a bit hard to read since each item in the list has a different indentation. One alternative:\r\n\r\n```suggestion\r\n        1. scrapable_link: If the license text is plain text and the URL mentioned can be scraped\r\n          directly from the original_link of the license. e.g - https://www.apache.org/licenses/LICENSE-2.0.txt\r\n```\r\n\r\nAlternative formatting suggestion (might need wrapping). This is +2 continuation from the list start. I suggest either this or aligned with the list start but with a newline between elements.', 'comment_created': datetime.datetime(2021, 7, 22, 5, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 674540280, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 22, 6, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 674540352, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 22, 6, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 674540429, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 22, 6, 49, 47, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 674541655, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 22, 6, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676078939, 'comment_body': 'Verified.', 'comment_created': datetime.datetime(2021, 7, 25, 3, 59, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 677974259, 'comment_body': 'Ah sorry. I think I meant associateWith.', 'comment_created': datetime.datetime(2021, 7, 28, 5, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 677980533, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 5, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}]","[{'commit_sha': 'dca89e176a2c4c4eecbc10a0a36b7b1be6df6b6f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eacaab6fd8a9c9b1c011cf09244ef7619273aae0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dd932234ef098b880447072072f28ae2cfcf182', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68b8e8583cffc64b6dd7b2cb704ca00c23bb0fc3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2fdd31abf90fb069875518d1691257cbd881641', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebcc66b39696bae60657f7e8fa7d9187e09e2ce9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dcd7e47d16500f6f41dbc5c3c377800468a54a1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cd5ab3c1e0cc8cf8a637ae6b7a2874187048633', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d39b7f512f74ae919d6396fc8730e18a2e235d0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f321805f79047f38bfe6195ef5bbf49d93a10db', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e2c8fea2e5e706a0dac8662caa1be782cd72a80', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}]",Abhay Garg,54636525,,User,,31,,33,42
692074517,Fix #3495 and #3496: Add support for displaying dependencies list and their license texts,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->


## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3495 and Fixes #3496:

Hooked up a new UI to display the third-party dependencies used to build Oppia Android.
Mock link - https://xd.adobe.com/view/e8aa4198-3940-47f9-514a-f41cc54457f6-9e9b/screen/0f94055a-c5f7-45a2-8bf5-9dcfdf1c7dce/specs/

## a11y

| License Text  | License List |
| ------------- | ------------- |
| ![Screenshot_2021-08-04-11-03-03-278_com google android apps accessibility auditor](https://user-images.githubusercontent.com/54636525/128128317-e091e70e-031d-4b74-a583-1e3ec7c39627.jpg) | ![Screenshot_2021-08-04-11-03-01-649_com google android apps accessibility auditor](https://user-images.githubusercontent.com/54636525/128128343-fd7b1b42-27b4-4a40-b856-071484363d0e.jpg) |

|  Dependency List  | Help |
| ------------- | ------------- |
| ![Screenshot_2021-08-04-11-03-00-043_com google android apps accessibility auditor](https://user-images.githubusercontent.com/54636525/128128369-0e8dc639-647e-416c-8d57-a74e20073e70.jpg)| ![Screenshot_2021-08-04-11-02-57-917_com google android apps accessibility auditor](https://user-images.githubusercontent.com/54636525/128128399-18e8012a-14f8-4016-8947-0a9f2bb92ea4.jpg) |

## a11y with RTL
| License Text  | License List |
| ------------- | ------------- |
|![Screenshot_1628055545](https://user-images.githubusercontent.com/54636525/128127890-d82e418e-5d50-4ac7-80ee-ed7b4f484160.png)|![Screenshot_1628055543](https://user-images.githubusercontent.com/54636525/128127921-27c2e150-e8e1-44da-a158-ebf6f94cf4b5.png)|

| Help |   Dependency List |
| ------------- | ------------- |
|![Screenshot_1628055537](https://user-images.githubusercontent.com/54636525/128127958-3a4c1fba-3f7b-4771-a311-0e5667be6ea2.png)|![Screenshot_1628055540](https://user-images.githubusercontent.com/54636525/128127979-a41e0cc7-b0eb-48a1-bda5-8dac00bb0f30.png)|


## Tests

![Screenshot from 2021-07-25 23-51-57](https://user-images.githubusercontent.com/54636525/126909301-400ccd72-d095-47ba-a746-f26b034e9344.png)
![Screenshot from 2021-07-28 15-40-20](https://user-images.githubusercontent.com/54636525/127306242-330589d4-5a0d-454f-8434-ed1815b54756.png)
![Screenshot from 2021-07-25 23-48-29](https://user-images.githubusercontent.com/54636525/126909304-937c502f-5efb-4456-9d46-e554c173e984.png)
![Screenshot from 2021-07-29 13-52-33](https://user-images.githubusercontent.com/54636525/127458234-421b9ece-aa9d-4d92-a78c-30edcdd3510e.png)

![Screenshot from 2021-07-25 23-46-58](https://user-images.githubusercontent.com/54636525/126909306-7594781f-2589-4603-8df9-b06199519009.png)
![Screenshot from 2021-07-28 15-33-58](https://user-images.githubusercontent.com/54636525/127306316-70610d0d-22e1-4f7e-ac26-12308223b463.png)
![Screenshot from 2021-07-25 23-43-38](https://user-images.githubusercontent.com/54636525/126909308-46d3d2ab-c940-49b5-a552-f6b645650faa.png)


## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3501,https://api.github.com/repos/oppia/oppia-android/pulls/3501,https://github.com/oppia/oppia-android/pull/3501,closed,3123,10,46,50,10,138,0,1,[],2021-07-18 11:35:14+00:00,2021-08-09 23:04:52+00:00,1942178.0,"22 days, 11:29:38","[{'comment_id': 676079283, 'comment_body': 'Please remove this label. This is incorrect.', 'comment_created': datetime.datetime(2021, 7, 25, 4, 3, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676079327, 'comment_body': 'Update this Kdoc.', 'comment_created': datetime.datetime(2021, 7, 25, 4, 4, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676079418, 'comment_body': 'Add one blank line after this line as the @Inject line is not clearly indicated as separated line because of indentation issue.', 'comment_created': datetime.datetime(2021, 7, 25, 4, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676079713, 'comment_body': 'Update this Kdoc.', 'comment_created': datetime.datetime(2021, 7, 25, 4, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676079837, 'comment_body': ""We don't need this global. This can be directly used in `handleOnCreate()`"", 'comment_created': datetime.datetime(2021, 7, 25, 4, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676080085, 'comment_body': 'Even though we are not passing anything in fragment, please use `ThirdPartyDependencyListFragment.newInstance` similar to what we do in other fragments. So that the code remains consistent.', 'comment_created': datetime.datetime(2021, 7, 25, 4, 13, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676080120, 'comment_body': 'Nit `fun handleCreateView(inflater: LayoutInflater, container: ViewGroup?): View {`', 'comment_created': datetime.datetime(2021, 7, 25, 4, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676080138, 'comment_body': 'Please remove this.', 'comment_created': datetime.datetime(2021, 7, 25, 4, 14, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676080155, 'comment_body': 'Remove it not needed', 'comment_created': datetime.datetime(2021, 7, 25, 4, 14, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676080504, 'comment_body': 'Nit space\r\n`<!-- LicenseListActivity -->`', 'comment_created': datetime.datetime(2021, 7, 25, 4, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676080505, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 7, 25, 4, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 676095787, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676095998, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676096005, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676096009, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 58, 31, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676096025, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676096050, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 58, 44, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676096060, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676096062, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676096067, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 59, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676096089, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676096101, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 25, 6, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676096143, 'comment_body': 'As the title will keep changing, what should be the correct label for this?', 'comment_created': datetime.datetime(2021, 7, 25, 6, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678396437, 'comment_body': 'This is `HomeActivity`. We are not showing any license here.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678400441, 'comment_body': 'Maybe use `third-party dependency`', 'comment_created': datetime.datetime(2021, 7, 28, 15, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678400717, 'comment_body': 'Kdoc for this as it is a public function.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678400889, 'comment_body': 'Also one blank line above this', 'comment_created': datetime.datetime(2021, 7, 28, 15, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678401186, 'comment_body': 'Nit: `""LicenseListFragment.dependency_index""`', 'comment_created': datetime.datetime(2021, 7, 28, 15, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678402246, 'comment_body': 'Is this correct? If yes, then the val name `licenseItemList` does not look correct.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678404097, 'comment_body': 'Do we actually need this? I am not sure about this.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678404527, 'comment_body': 'For all public objects/variables add a kdoc.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 18, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678405039, 'comment_body': 'Default value should be `0` ? Similar to `LicenseTextViewModel ` file', 'comment_created': datetime.datetime(2021, 7, 28, 15, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678405606, 'comment_body': 'Why is default value 1  for both cases?', 'comment_created': datetime.datetime(2021, 7, 28, 15, 19, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678405932, 'comment_body': 'Nit ` ""LicenseTextViewerActivity.dependency_index""`\r\n\r\nSame for other places', 'comment_created': datetime.datetime(2021, 7, 28, 15, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678406439, 'comment_body': 'This should be `0` ? Similar to other files.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678406671, 'comment_body': 'Why do we need this?', 'comment_created': datetime.datetime(2021, 7, 28, 15, 20, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678407728, 'comment_body': 'Optional Nit\r\n\r\n```\r\n  private fun getLicenseTextViewerFragment(): LicenseTextViewerFragment? {\r\n    return activity.supportFragmentManager\r\n      .findFragmentById(R.id.license_text_viewer_fragment_placeholder) as LicenseTextViewerFragment?\r\n  }\r\n```', 'comment_created': datetime.datetime(2021, 7, 28, 15, 21, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678408094, 'comment_body': 'Kdoc', 'comment_created': datetime.datetime(2021, 7, 28, 15, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678408265, 'comment_body': 'Ditto as per above comments.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 22, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678408441, 'comment_body': 'Remove these logs', 'comment_created': datetime.datetime(2021, 7, 28, 15, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678409458, 'comment_body': 'Instead of using a general kdoc for all ViewModels. Suggest mentioning exactly what this ViewModel is for.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678410128, 'comment_body': 'Add Kdoc', 'comment_created': datetime.datetime(2021, 7, 28, 15, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678547136, 'comment_body': ""Ah, sorry I didn't notice.\r\nRemoved it."", 'comment_created': datetime.datetime(2021, 7, 28, 18, 19, 36, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678576185, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 1, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678576255, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678576321, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 2, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678576375, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678577441, 'comment_body': ""\r\nI saw it here - https://stackoverflow.com/a/5931094/12215015\r\n```java\r\nResources res = getResources();\r\nTypedArray ta = res.obtainTypedArray(R.array.array0);\r\nint n = ta.length();\r\nString[][] array = new String[n][];\r\nfor (int i = 0; i < n; ++i) {\r\n    int id = ta.getResourceId(i, 0);\r\n    if (id > 0) {\r\n        array[i] = res.getStringArray(id);\r\n    } else {\r\n        // something wrong with the XML\r\n    }\r\n}\r\nta.recycle(); // Important!\r\n```\r\n\r\nReason hasn't been mentioned here."", 'comment_created': datetime.datetime(2021, 7, 28, 19, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678577506, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678577555, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 4, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678577626, 'comment_body': 'Made it 0.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678577706, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 28, 19, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678577790, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 4, 36, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678577894, 'comment_body': 'Mentioned the link above.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678577953, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678578011, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678578075, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678578112, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 5, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678578169, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 5, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678578224, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 5, 28, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678606258, 'comment_body': 'I even tried to set the license text directly from the fragment, but it still did not display the license text in the expected format. We are also using CDATA in `third_party_dependencies.xml`\r\n<img src=""https://user-images.githubusercontent.com/54636525/127386497-c8645f50-9583-4802-9a0e-d81075f6b208.jpg"" width=300>\r\n', 'comment_created': datetime.datetime(2021, 7, 28, 19, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678935476, 'comment_body': 'Issue resolved.', 'comment_created': datetime.datetime(2021, 7, 29, 8, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 680347474, 'comment_body': '@rt4914 @BenHenning Any suggestions for the KDoc of this class and inject method?', 'comment_created': datetime.datetime(2021, 7, 31, 11, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681413684, 'comment_body': 'Ack.', 'comment_created': datetime.datetime(2021, 8, 3, 3, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681415732, 'comment_body': 'I think this can be removed.', 'comment_created': datetime.datetime(2021, 8, 3, 3, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681415802, 'comment_body': 'Nit\r\n`      /* defValue= */ 0`', 'comment_created': datetime.datetime(2021, 8, 3, 3, 58, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681415897, 'comment_body': 'Ditto. Inline comment', 'comment_created': datetime.datetime(2021, 8, 3, 3, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681416034, 'comment_body': 'Ditto. Inline comment', 'comment_created': datetime.datetime(2021, 8, 3, 3, 59, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681416653, 'comment_body': 'Remove this attribute', 'comment_created': datetime.datetime(2021, 8, 3, 4, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681417293, 'comment_body': 'Please add color, font and font-size attributes also.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 3, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681417420, 'comment_body': 'Remove this and then generate RTL screenshots.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681417440, 'comment_body': 'Remove this and then generate RTL screenshots.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681418440, 'comment_body': 'Here and everywhere else use direct imports\r\n```\r\n  @Test\r\n  fun openThirdPartyDepsListActivity_selectItem_opensLicenseListActivity() {\r\n    launch(ThirdPartyDependencyListActivity::class.java).use {\r\n      onView(\r\n        atPosition(\r\n          recyclerViewId = R.id.third_party_dependency_list_fragment_recycler_view,\r\n          position = 1\r\n        )\r\n      ).perform(click())\r\n      intended(\r\n        allOf(\r\n          hasComponent(LicenseListActivity::class.java.name)\r\n        )\r\n      )\r\n    }\r\n  }\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 4, 7, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681418699, 'comment_body': 'Use direct import\r\n```\r\nonView(ViewMatchers.isRoot()).perform(orientationLandscape())\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 4, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681418834, 'comment_body': 'Ditto.\r\nUse direct imports\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 4, 8, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681419111, 'comment_body': 'Use direct imports at all places\r\n```\r\n  @Test\r\n  fun openLicenseListActivity_selectItem_opensLicenseTextViewerActivity() {\r\n    launch<LicenseListActivity>(createLicenseListActivity(0)).use {\r\n      onView(\r\n        atPosition(\r\n          recyclerViewId = R.id.license_list_fragment_recycler_view,\r\n          position = 0\r\n        )\r\n      ).perform(click())\r\n      intended(\r\n        allOf(\r\n          hasComponent(LicenseTextViewerActivity::class.java.name)\r\n        )\r\n      )\r\n    }\r\n  }\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 4, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 681420283, 'comment_body': '@rt4914 What should be the ideal values for these attributes?\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 4, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681429916, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681429962, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 44, 47, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681430029, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681430067, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 45, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681430095, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681430379, 'comment_body': 'Added these attributes, please let me know if there should be some different values for some attributes.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681430511, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681430593, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 46, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681430627, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 46, 54, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681430750, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681463136, 'comment_body': 'Removed the attribute but will update the screenshots once the accessibility check is fixed.', 'comment_created': datetime.datetime(2021, 8, 3, 6, 12, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681463293, 'comment_body': 'Removed the attribute but will update the screenshots once the accessibility check is fixed.', 'comment_created': datetime.datetime(2021, 8, 3, 6, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682270391, 'comment_body': 'Use style either `Body` or `Subtitle2` from `styles.xml` file.', 'comment_created': datetime.datetime(2021, 8, 4, 4, 5, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 682270816, 'comment_body': 'This should be \r\n`     private const val THIRD_PARTY_DEPENDENCY_INDEX = ""ThirdPartyListActivity.dependency_index""`', 'comment_created': datetime.datetime(2021, 8, 4, 4, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 682271353, 'comment_body': 'Use `Subtitle2` and remove `textSize`.\r\n\r\nAlso suggest removing `textColor=black` too.', 'comment_created': datetime.datetime(2021, 8, 4, 4, 8, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 682271741, 'comment_body': 'Subtitle1 already contains this textSize. this can be removed', 'comment_created': datetime.datetime(2021, 8, 4, 4, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 682271921, 'comment_body': 'Add color as required.', 'comment_created': datetime.datetime(2021, 8, 4, 4, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 682272561, 'comment_body': 'Use `minHeight=48dp` and `gravity=center_vertical` to fix A11y issue.', 'comment_created': datetime.datetime(2021, 8, 4, 4, 12, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 682304957, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 5, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682304981, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 5, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682305029, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 5, 46, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682305051, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 5, 46, 52, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682305075, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 5, 46, 58, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682468545, 'comment_body': 'For this & the other listeners, I suggest adding KDocs explaining what the parameters being passed in mean.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682469753, 'comment_body': 'This can be removed by constructing & returning an immutable list below (see comment).', 'comment_created': datetime.datetime(2021, 8, 4, 9, 58, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682470838, 'comment_body': '```suggestion\r\n  private fun getRecyclerViewItemList(): List<LicenseItemViewModel> {\r\n    val thirdPartyDependencyLicenseNamesArray = activity.resources.obtainTypedArray(\r\n      R.array.third_party_dependency_license_names_array\r\n    )\r\n    val licenseNamesArrayId = thirdPartyDependencyLicenseNamesArray.getResourceId(\r\n      dependencyIndex,\r\n      /* defValue= */ 0\r\n    )\r\n    val licenseNamesArray = activity.resources.getStringArray(licenseNamesArrayId)\r\n\r\n    val itemList = licenseNamesArray.mapIndexed { licenseIndex, name ->\r\n      LicenseItemViewModel(activity, name, licenseIndex, dependencyIndex)\r\n    }\r\n    thirdPartyDependencyLicenseNamesArray.recycle()\r\n    return itemList\r\n  }\r\n```\r\n\r\nMore idiomatic, safer (from a data mutation & sharing perspective), and slightly more compact.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682471170, 'comment_body': ""This one doesn't seem to require resources--could it go in the other view models list?"", 'comment_created': datetime.datetime(2021, 8, 4, 9, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682471668, 'comment_body': ""```suggestion\r\n * the name and version of the dependency which is displayed in the recycler view.\r\n```\r\n\r\n('recyclerview' isn't an English word)\r\n\r\nOr ``RecyclerView`` (proper name). Prefer one of these two ways to reference classes."", 'comment_created': datetime.datetime(2021, 8, 4, 10, 0, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682472332, 'comment_body': 'That contains what? This documentation might benefit from a bit more detail.', 'comment_created': datetime.datetime(2021, 8, 4, 10, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682472873, 'comment_body': 'Ditto for this method: prefer using a mutable list, avoiding the class-level mutable list, and possibly leveraging mapIndexed below.', 'comment_created': datetime.datetime(2021, 8, 4, 10, 1, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682473581, 'comment_body': 'Is this meant to be the human readable name or something we use to retrieve the license text? If the latter, could we not instead generate the XML files such that these two references are properly linked without needing to do any transformations?', 'comment_created': datetime.datetime(2021, 8, 4, 10, 2, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682473787, 'comment_body': ""Ditto for this view model (it doesn't seem to require R)."", 'comment_created': datetime.datetime(2021, 8, 4, 10, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682474744, 'comment_body': 'This name is really non-specific. Where is it used? That should be captured in the name. Ditto for the next string.', 'comment_created': datetime.datetime(2021, 8, 4, 10, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682475010, 'comment_body': '```suggestion\r\n  <string name=""third_party_dependency_version"">version %s</string>\r\n```\r\n\r\nIs this what you\'re going for? \'v\' probably won\'t translate well, or be read correctly by screenreaders.', 'comment_created': datetime.datetime(2021, 8, 4, 10, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682475228, 'comment_body': 'Will this be replaced by the name of the dependency/is this just a placeholder?', 'comment_created': datetime.datetime(2021, 8, 4, 10, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682533312, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682533388, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682533499, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682533617, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682533660, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 36, 26, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682533746, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682533789, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 36, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682534396, 'comment_body': 'Removed the function and will change the script to contain dependency names without any version at the end.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682534454, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682534879, 'comment_body': 'The right string is `Third-party Dependencies` only, therefore removed this string and now using the above string everywhere.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682536705, 'comment_body': 'No, it will not be replaced by the dependency name. The activity will actually display the list of licenses associated with the clicked dependency.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 41, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682538746, 'comment_body': 'Change done, now the UI looks like this - \r\n<img src=""https://user-images.githubusercontent.com/54636525/128175128-d3e74b5f-b92a-4ee3-96eb-83416c2e54f6.jpg"" width=300 />)\r\n', 'comment_created': datetime.datetime(2021, 8, 4, 11, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683227544, 'comment_body': ""Why quotes? Won't that show up in the UI?"", 'comment_created': datetime.datetime(2021, 8, 5, 8, 9, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683228194, 'comment_body': ""```suggestion\r\n   * @param dependencyIndex index of the dependency clicked by the user in\r\n   *   [ThirdPartyDependencyListFragment]\r\n   * @param licenseIndex index of the license clicked by the user in the [LicenseListFragment]\r\n```\r\n\r\n``:`` isn't needed.\r\n\r\nDitto for other files."", 'comment_created': datetime.datetime(2021, 8, 5, 8, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683229754, 'comment_body': 'Here & elsewhere: this ought to describe what is meant to happen due to the user performing this action, not necessarily the exact implementation details of how it works. For example, I\'d expect to read something like: ""Called when the user wants to open the license list for a particular dependency.""\r\n\r\nThe fact that we, in this situation, choose to intent to LicenseListActivity is a choice of one particular implementation of this listener, not necessarily all possible implementations. Consider that interfaces are defining a contract, not stipulating an implementation.\r\n\r\nDitto for other KDocs.', 'comment_created': datetime.datetime(2021, 8, 5, 8, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683232098, 'comment_body': 'I think that looks reasonable. @rt4914 any thoughts?', 'comment_created': datetime.datetime(2021, 8, 5, 8, 15, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683250310, 'comment_body': 'Removed unnecessary quotes', 'comment_created': datetime.datetime(2021, 8, 5, 8, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683250555, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 8, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683250651, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 8, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683604829, 'comment_body': 'From translation perspective it completely makes sense to use `version` instead of `v`, Thanks a lot.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 683606341, 'comment_body': 'Sounds good @rt4914.', 'comment_created': datetime.datetime(2021, 8, 5, 16, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683910641, 'comment_body': ""I missed this before, but can we actually just make these example deps rather than real ones with real licenses? If the purpose of this is for testing, then we shouldn't even hint at real dependencies (especially since we don't want people checking in real license copies, hence the check in your other PR)."", 'comment_created': datetime.datetime(2021, 8, 6, 2, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683918361, 'comment_body': 'done.', 'comment_created': datetime.datetime(2021, 8, 6, 3, 20, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 684044171, 'comment_body': 'Here & elsewhere: remove quotes?\r\n\r\nAlso, should these licenses be in a CDATA to preserve formatting?', 'comment_created': datetime.datetime(2021, 8, 6, 8, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 684055580, 'comment_body': ""https://developer.android.com/guide/topics/resources/string-resource.html#escaping_quotes\r\nQuotes help in preserve text formatting. CDATA only helps for HTML text parsing it doesn't handle whitespaces."", 'comment_created': datetime.datetime(2021, 8, 6, 8, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 685577295, 'comment_body': 'Ah I see. Thanks for clarifying.', 'comment_created': datetime.datetime(2021, 8, 9, 23, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': '1c7f2a1060a8e3bf4356a34b33786fbc094ac618', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41d01d26621dbb85af430ee408beb3c5fe7689b3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ced7633301a2ccf8bb109be7b2e9edd949bdc7dc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c76e1cb038264fe1d1d623cf88797a0b7101755e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4b7869b4eee8ca27c61b1b711bf9745a8790738', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7c4175354381c216a426edadf5ac15f1e9f0c5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2893aab25bf843763269fe9a413da50cfb3771d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdd569c803c419cd12f5f4a6f5e3528f7fe3677a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88691560574640c10a4fde0a7b65e8e3af5c1afc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46d71f900b8453afc5f49846dd74753478dc1525', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2414c77114162c8a4baae074097217f5405aa2e6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91dbd1d3ba6ebdfb3590e807eab9e38f2cba4286', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dc5e8d839aaaf9f82bc0b1bd01b72c81085c67f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef6dfacdc7e97eddc6c2cec1c9e4c44e5560fbcd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05883aa4d5bcc0e5a6a433f01945db13f4efe3ac', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2b4134b2056ed40757460f9dda4b3cda7709ccb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b420bcebc55b8d49acb9efbe83a126fd73bea5f6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f58b2d524a7edda049b81105302483e3d98209f2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da89ef38f3ba07bf64f312ee7b6f2de35c36d8c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9243bae63072b840ca46ee08e3b932d07aeaa04f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a473fa9cccd89b29c70e6d096bad919f00d707', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c6d0df07b68204cc38a81f9312c3bbd8ffc1783', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4e0ca95b48653eebc594e149e6bfc27cbb1e6f7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '696dfae6583918b5989eddadb610e4306de697c2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86a3fdd8f81d9f068736e5dc64e6d46c7fa3273b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5724f5398a8b57e89890e5da78f15db196a8912d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92bd8735810c7884b0ece5e42b6403e75204057c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9cc0b7b9490817640e496a13de03963323cd0f6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230689ba46421d8538ecd62bc501bda7b8fe0b0e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f580b3be0c71e221187b70db84559ad3dea56349', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db07e95c026e10bf971f68a27d98afe26da6f0de', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d8b1cfe036355cab44b191635f4dfac15fac35c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15abbd0fe598d9b212308368838d6c35642a5ed6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '597b4b9d148d6f74bba28b8bdb8d26384ca19a57', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd5ff2e36531010ce424297f758cd2b871983eeb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba640b32dd3d53ac358c6f1bcee5c73c3bc3ad3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3022255c2159f86b6fc968f9c085e4fbda45124d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd7a2de9bdf9f46ef4d2e5e424bec5ee747e648e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd60146ff566fd871c3c3f2cc4e138190e1962f51', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e97647d4146a09b41d783b2843a2b7a2b152accf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f358d1a55f13434ac6beeeceeca15dbe5812916e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9e622ff61ecc948f68b9c8f7a5c3544d93c3305', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '291882fc1915e79db36629daddbd704648fcfaa2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '017a105be91d23ca4bc79c63c478fb82bd2341cd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f05f22e82497d4dd39f410c3c2a3ab4f38b14cae', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '670b3a5bbd8d30daa2981072d4e1641727a4aafd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c9d67a9b5b97a58589b17e632578247831d366f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '827b7f788f35bf17a670fb95f293e54730114761', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80766c07bdb93259dbe4bb3a2ac194fd107ce62b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd37d8ecfcaac841e245806e916eb21114fc7abb6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}]",Abhay Garg,54636525,,User,,31,,33,42
696361989,Fix #3497: Add CI check to ensure maven_dependencies.textproto is up to date,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3497:
Added a CI check that ensures maven_dependencies.textproto is always up-to-date
All newly added test cases passing - 
![Screenshot from 2021-08-11 17-36-20](https://user-images.githubusercontent.com/54636525/129025800-d16314c0-b639-4811-af98-d2cebf6f9a1d.png)

![Screenshot from 2021-07-31 15-46-26](https://user-images.githubusercontent.com/54636525/127738544-d222707c-5744-46c3-b010-ea72b51bd9e5.png)


CI check failing because of incomplete list - 
![Screenshot from 2021-07-29 17-59-58](https://user-images.githubusercontent.com/54636525/127492019-cb41de08-64d1-41d6-a4df-61b211ac5743.png)

The new Maven Dependencies CI check failed in actual as Sparsh recently added some Kotlin dependency and thus maven_dependencies.textproto needed to be updated -
![Screenshot from 2021-07-31 23-08-32](https://user-images.githubusercontent.com/54636525/127748148-e472fa06-6874-4008-a696-afde9c7103f1.png)


## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3520,https://api.github.com/repos/oppia/oppia-android/pulls/3520,https://github.com/oppia/oppia-android/pull/3520,closed,3124,296,15,71,15,140,0,1,[],2021-07-24 14:54:56+00:00,2021-08-13 09:15:57+00:00,1707661.0,"19 days, 18:21:01","[{'comment_id': 676027982, 'comment_body': 'To verify that the CI check is working, I deleted this dependency from the list. And the check failed as expected.', 'comment_created': datetime.datetime(2021, 7, 24, 18, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676093152, 'comment_body': '```suggestion\r\n      - name: Maven Dependencies Update Check\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 6, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676093403, 'comment_body': 'Why change in this file?\r\nThis issue was handle in a different PR by Arjun. \r\n', 'comment_created': datetime.datetime(2021, 7, 25, 6, 35, 34, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676094437, 'comment_body': '```suggestion\r\n * \r\n * Example:\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 6, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676094471, 'comment_body': ""Need to check on how to document command-line arguments correctly. \r\nThough, I didn't find much options for this but suggesting one approach below\r\n\r\n```kt\r\n * @param [args]: ...\r\n *   - path_to_directory_root: ...\r\n *   - path_to_maven_install_json: ...\r\n *   - path_to_maven_dependencies_pb: ...\r\n```\r\n\r\nAnd in their des, we can mention their index as well"", 'comment_created': datetime.datetime(2021, 7, 25, 6, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676095877, 'comment_body': ""`path_to_directory_root` - `pathToRoot`\r\n\r\nBoth should have the same name. The variable name sounds good, let's update the same in comment block.\r\n\r\n"", 'comment_created': datetime.datetime(2021, 7, 25, 6, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676096228, 'comment_body': '```suggestion\r\n  val dependenciesListFromTextProto = mavenDependenciesListGenerator\r\n    .retrieveMavenDependencyList(pathToProtoBinary)\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 7, 0, 19, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676096247, 'comment_body': 'similar at other places.', 'comment_created': datetime.datetime(2021, 7, 25, 7, 0, 29, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676096463, 'comment_body': '```suggestion\r\n  val brokenLicenses =\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 7, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676096620, 'comment_body': ""```suggestion\r\n      not. If the link does not point to a valid license (e.g - https://fabric.io/terms),\r\n      set the 'is_original_link_invalid' field of the license to 'true'.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 25, 7, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676096727, 'comment_body': '```suggestion\r\n      maven_dependencies.textproto. Note that only the first dependency that contains the license \r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 7, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676096880, 'comment_body': 'We can reduce the number of `println` usage to only one with using trimIndent as we are doing at other places. ', 'comment_created': datetime.datetime(2021, 7, 25, 7, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676096905, 'comment_body': '```suggestion\r\n  \r\n  if (dependenciesWithoutAnyLinks.isNotEmpty()) {\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 7, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676097496, 'comment_body': 'missing kdoc', 'comment_created': datetime.datetime(2021, 7, 25, 7, 11, 10, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676097648, 'comment_body': '```suggestion\r\n\r\nprivate const val MAVEN_PREFIX = ""@maven//:""\r\n\r\nclass MavenDependenciesListGenerator(\r\n  val licenseFetcher: LicenseFetcher,\r\n  val commandExecutor: CommandExecutor = CommandExecutorImpl()\r\n) {\r\n\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 7, 12, 29, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676097735, 'comment_body': 'missing kdoc', 'comment_created': datetime.datetime(2021, 7, 25, 7, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676099019, 'comment_body': '```suggestion\r\n   * \r\n   * @return proto class from the parsed text proto file\r\n```', 'comment_created': datetime.datetime(2021, 7, 25, 7, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676099080, 'comment_body': '`@param` missing', 'comment_created': datetime.datetime(2021, 7, 25, 7, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676099211, 'comment_body': 'move this function to line number 128 just to keep app public function together ', 'comment_created': datetime.datetime(2021, 7, 25, 7, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676179306, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 38, 17, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179313, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 38, 23, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179319, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 38, 28, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179333, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 38, 33, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179337, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179344, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 38, 41, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179373, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179378, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179388, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179412, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 39, 5, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179422, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 39, 11, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179429, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 39, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179439, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 25, 17, 39, 21, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676179528, 'comment_body': ""I don't understand why it is appearing here, maybe it will get fixed once the base branch gets merged."", 'comment_created': datetime.datetime(2021, 7, 25, 17, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676260751, 'comment_body': ""doesn't seems like done. \r\n\r\nWhat I meant here is we can put the detail, same as what we do while adding general kdoc for any function. \r\n\r\n```kt\r\n@param [pathToPbFile]: ...\r\n\r\n@return ...\r\n```"", 'comment_created': datetime.datetime(2021, 7, 26, 3, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676260914, 'comment_body': 'ok, keeping this open to keep track of this. ', 'comment_created': datetime.datetime(2021, 7, 26, 3, 1, 2, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 676295002, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 26, 5, 11, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 676297149, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 26, 5, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 677995650, 'comment_body': 'Please do the same for the other two arguments as well. ', 'comment_created': datetime.datetime(2021, 7, 28, 5, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'anandwana001', 'type': 'User'}, {'comment_id': 678389507, 'comment_body': 'Undo these nit changes.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678390338, 'comment_body': 'Suggest adding screenshot of failing CI with appropriate error.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 3, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678393023, 'comment_body': '+1', 'comment_created': datetime.datetime(2021, 7, 28, 15, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678393151, 'comment_body': 'Ditto. Kdoc', 'comment_created': datetime.datetime(2021, 7, 28, 15, 6, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678393341, 'comment_body': 'Ditto elsewhere', 'comment_created': datetime.datetime(2021, 7, 28, 15, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 678532908, 'comment_body': 'Actually, these are unwanted extra spaces. So, we may want to keep it. Please confirm it again.', 'comment_created': datetime.datetime(2021, 7, 28, 17, 58, 27, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 678620429, 'comment_body': 'Looks like it is fixed now.', 'comment_created': datetime.datetime(2021, 7, 28, 20, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 679106025, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 679177221, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 7, 29, 13, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 680218630, 'comment_body': 'I will add KDocs for all the public methods and more test cases for the remaining functions tomorrow.\r\n@BenHenning Until then, please do let me know if the PR looks good overall.', 'comment_created': datetime.datetime(2021, 7, 30, 21, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 680340269, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 7, 31, 10, 15, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 680340281, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 7, 31, 10, 15, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 680340292, 'comment_body': 'Added.', 'comment_created': datetime.datetime(2021, 7, 31, 10, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 681421096, 'comment_body': 'Okay.', 'comment_created': datetime.datetime(2021, 8, 3, 4, 16, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 683247142, 'comment_body': ""These aren't actually common, I think. They can be reused between license scripts, but they probably still belong under the license package (we would never expect to use them outside of the license package, for example)."", 'comment_created': datetime.datetime(2021, 8, 5, 8, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683248947, 'comment_body': 'Nit: missed this before, but this library should probably just be ""data"".', 'comment_created': datetime.datetime(2021, 8, 5, 8, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683249919, 'comment_body': '```suggestion\r\n * Helper to compile the third-party maven dependencies list for Oppia Android.\r\n```\r\n\r\nSome rewording to simplify & to generally retain proper grammar (in summary fragment form).', 'comment_created': datetime.datetime(2021, 8, 5, 8, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683250757, 'comment_body': '```suggestion\r\n  /**\r\n   * Returns the list of third-party dependency names per Bazel.\r\n   */\r\n```\r\n\r\nCan be simplified a bit, I think.', 'comment_created': datetime.datetime(2021, 8, 5, 8, 40, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683250995, 'comment_body': 'I suggest saving this as a lazy val rather than recreating it when needed.', 'comment_created': datetime.datetime(2021, 8, 5, 8, 40, 27, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683251568, 'comment_body': ""```suggestion\r\n   * Merges manual updates from the textproto file to the list of dependencies\r\n   * compiled with the help of Bazel Query and POM file links.\r\n```\r\n\r\n(needs reformatting now that it's shorter).\r\n\r\nMethod KDocs should always be verbs/verb phrases."", 'comment_created': datetime.datetime(2021, 8, 5, 8, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683252406, 'comment_body': 'Nit: no blanks between at-params (at least conventionally).\r\n\r\nDitto elsewhere.', 'comment_created': datetime.datetime(2021, 8, 5, 8, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683253021, 'comment_body': '```suggestion\r\n   * Retrieves the list of [MavenListDependency] such that each of these dependencies is present\r\n   * in maven_install.json and is also obtained from the Bazel query.\r\n```\r\n\r\nDitto elsewhere (particularly s/Query/query).', 'comment_created': datetime.datetime(2021, 8, 5, 8, 43, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683253589, 'comment_body': '```suggestion\r\n   * @return list of [MavenListDependency]s that contains the artifact name and a URL that is used\r\n```', 'comment_created': datetime.datetime(2021, 8, 5, 8, 43, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683253934, 'comment_body': '```suggestion\r\n   * Parses the text proto file to a proto class.\r\n```\r\n\r\n(thought FWIW KDocs on private methods are optional).', 'comment_created': datetime.datetime(2021, 8, 5, 8, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683255055, 'comment_body': ""'Generator' is a bit weird way to describe this, I think, since generation implies creating anew. Perhaps instead MavenDependenciesRetriever or similar would be a bit clearer?"", 'comment_created': datetime.datetime(2021, 8, 5, 8, 45, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683255894, 'comment_body': ""``assertThrows`` doesn't seem to be used--is this needed?"", 'comment_created': datetime.datetime(2021, 8, 5, 8, 47, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683257527, 'comment_body': 'Typo in word ``generate``.', 'comment_created': datetime.datetime(2021, 8, 5, 8, 49, 12, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683257962, 'comment_body': 'Is this actually needed in this suite? Prefer removing all vals not used by these tests.', 'comment_created': datetime.datetime(2021, 8, 5, 8, 49, 47, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683259641, 'comment_body': '```suggestion\r\n    assertThat(depsList).contains(\r\n      omitVersionAndReplaceColonsHyphensPeriods(DEP_WITH_SCRAPABLE_LICENSE),\r\n      omitVersionAndReplaceColonsHyphensPeriods(DEP_WITH_INVALID_LINKS),\r\n      omitVersionAndReplaceColonsHyphensPeriods(\r\n        DEP_WITH_DIRECT_LINK_ONLY_LICENSE\r\n      )\r\n    )\r\n```\r\n\r\nBit more idiomatic. Ditto elsewhere.\r\n\r\n(You can also test order by adding ``.inOrder()`` after the ``contains()`` call).', 'comment_created': datetime.datetime(2021, 8, 5, 8, 51, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683260010, 'comment_body': '```suggestion\r\n  fun testAddChangesFromTextProto_depsUpdated_returnsDepsListWithUpdatedDeps() {\r\n```\r\n\r\nSeparate test name components should always use lowerCamelCase. Ditto elsewhere (if applicable).', 'comment_created': datetime.datetime(2021, 8, 5, 8, 52, 18, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683262028, 'comment_body': ""Typo in word 'dependencies'"", 'comment_created': datetime.datetime(2021, 8, 5, 8, 54, 47, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683262371, 'comment_body': 'We should break after the ``=`` before breaking at the ``.`` when line wrapping. Ditto elsewhere.', 'comment_created': datetime.datetime(2021, 8, 5, 8, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683263809, 'comment_body': 'Is this check needed here if the other script already outputs this? In general, we ought to try and minimize check redundancy such that each script instructs exactly how to address the issues brought up by that script.', 'comment_created': datetime.datetime(2021, 8, 5, 8, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683265159, 'comment_body': 'Can this be made more actionable? I expect that the mitigation factors for all failures outlined by this script is exactly just running the other script & then fixing any issues it brings up, or is that not correct?', 'comment_created': datetime.datetime(2021, 8, 5, 8, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683367242, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683367335, 'comment_body': 'Done.\r\n\r\nEDIT - I have also renamed the package from `data` to `model` in another PR, so we can track this there.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 28, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683367948, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 29, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683368058, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683368142, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 29, 55, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683368336, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683368494, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683369853, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683370086, 'comment_body': 'fixed.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 33, 9, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683370268, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 33, 28, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683386539, 'comment_body': 'Removed this check from the script.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683386641, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683386712, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2021, 8, 5, 11, 59, 54, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683386849, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 8, 5, 12, 0, 7, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683394348, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 12, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683394423, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 12, 11, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683394507, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 12, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683395326, 'comment_body': ""This isn't working - \r\n![Screenshot from 2021-08-05 15-19-06](https://user-images.githubusercontent.com/54636525/128347858-d6493d13-ab8d-4bae-8892-41b9e4824f01.png)\r\n"", 'comment_created': datetime.datetime(2021, 8, 5, 12, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683396634, 'comment_body': 'Yes, the developers need to re-run the script to fix the failure. Do you have any particular suggestions to modify it?', 'comment_created': datetime.datetime(2021, 8, 5, 12, 15, 3, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683481987, 'comment_body': ""It wasn't needed and hence removed."", 'comment_created': datetime.datetime(2021, 8, 5, 14, 1, 41, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683581569, 'comment_body': '@BenHenning Confirmation regarding this additional CI check -\r\nIf a developer adds some dependencies and forgets to run the script then our original CI check (Maven Dependencies Update Check) will fail and the developer will run the script to add all dependencies.\r\nBut if the developer runs the script and some manual work was needed but doesn’t complete it, then also that CI check would pass. We depend entirely on the reviewers to prevent this, however, if we also run the original script in CI then we can catch this case through CI.\r\n\r\nWDYT?\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 15, 51, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686388267, 'comment_body': 'Vals are never UpperCamelCase (they should always be lowerCamelCase).', 'comment_created': datetime.datetime(2021, 8, 10, 23, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686391410, 'comment_body': ""Thanks for bringing this up. In that case, I actually think we're missing something in the check being introduced in this PR. I'd expect this check to only pass if the list is both up-to-date & correct (i.e. that all manual work is completed). Running this script is a nice-to-have since we could automatically upload the updated textproto file, but the most important thing is to make sure there's a guard in place that ensures the current repository state is exactly what we need for the license download script to work correctly."", 'comment_created': datetime.datetime(2021, 8, 10, 23, 41, 15, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686470648, 'comment_body': '@BenHenning https://github.com/oppia/oppia-android/pull/3650/checks?check_run_id=3264829165 An example of a case where this check will be useful.', 'comment_created': datetime.datetime(2021, 8, 11, 3, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686486294, 'comment_body': 'I think this needs to be:\r\n\r\n```suggestion\r\n    pbFile.outputStream().use { mavenDependencyList.writeTo(it) }\r\n```\r\n\r\nTo avoid leaking resources.\r\n\r\nDitto elsewhere.', 'comment_created': datetime.datetime(2021, 8, 11, 4, 41, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686486983, 'comment_body': 'Here & elsewhere: I suggest just outputting the error, and then the mitigation (i.e. running the command). Hedging by saying that running the script _could_ fix the error might actually result in people not trying it or potentially getting confused when trying something else. I think we always want people to run the script in these cases.', 'comment_created': datetime.datetime(2021, 8, 11, 4, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686487295, 'comment_body': '```suggestion\r\n  fun testMavenDepsListCheck_depsRemovedAndAddedBoth_failsAndCallOutRedundantAndMissingDeps() {\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 4, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686487569, 'comment_body': 'Seeing multiple large error blocks is a bit confusing. Could we maybe format the error something like this:\r\n\r\n```\r\nErrors were encountered. Please run script ... to fix.\r\n\r\nRedundant dependencies that need to be removed:\r\n\r\n  artifact_name: ...\r\n  artifact_version: ...\r\n\r\n  artifact_name: ...\r\n  artifact_version: ...\r\n\r\nMissing dependencies that need to be added:\r\n\r\n  artifact_name: ...\r\n  artifact_version: ...\r\n\r\n  artifact_name: ...\r\n  artifact_version: ...\r\n\r\n...\r\n\r\nRefer to <wiki page> for more details.\r\n```\r\n\r\nWould that be clearer? Note also the indentation for the artifacts--I think that might help a bit with visual readability.', 'comment_created': datetime.datetime(2021, 8, 11, 4, 45, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686489171, 'comment_body': ""This seems a bit hacky since setUpBazelEnvironment is a generic function used by all tests, but this if-check is specific to Firebase. Could we use a different helper to set up the special condition when it's needed and instead change this function to be generic & have no control flow?"", 'comment_created': datetime.datetime(2021, 8, 11, 4, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686489660, 'comment_body': 'I suggest instead having separate constants that are formatted as expected & pass those into the helper, instead. Prefer not to do much computation in tests since tests need to be verified by a human, and verifying logic is difficult (which is partly why we have tests in the first place). For that reason, tests should be as logically simple as possible.', 'comment_created': datetime.datetime(2021, 8, 11, 4, 52, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686490656, 'comment_body': ""Ditto here, above in the thirdPartyPrefixCoordList, and elsewhere--let's just manually create the exact val constants that we expect to avoid extra logic being required in the test."", 'comment_created': datetime.datetime(2021, 8, 11, 4, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686491554, 'comment_body': '```suggestion\r\n    assertThat(finalDepsList).hasSize(2)\r\n```\r\n\r\nMore idiomatic.\r\n\r\nDitto elsewhere.', 'comment_created': datetime.datetime(2021, 8, 11, 4, 58, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686493416, 'comment_body': 'If the only difference is the addition of license2, could you do a direct comparison here instead? E.g.:\r\n\r\n```kotlin\r\nassertThat(fileDepsList).containsAllIn(mavenDependenciesList)\r\n```\r\n\r\nAnd then check that the new one is present, e.g.:\r\n\r\n```kotlin\r\nassertThat(finalDepsList).contains(updatedLicense2)\r\n```\r\n\r\nThat would probably be a lot clearer here & elsewhere in the suite.', 'comment_created': datetime.datetime(2021, 8, 11, 5, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686493561, 'comment_body': 'Could instead assert that the string is empty.', 'comment_created': datetime.datetime(2021, 8, 11, 5, 4, 26, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686493761, 'comment_body': 'Instead of asserting the exact text output (which could change across proto versions), suggest instead parsing it using proto & comparing the protos in-memory.', 'comment_created': datetime.datetime(2021, 8, 11, 5, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686494414, 'comment_body': 'Ditto here: need to use ``use{}`` to ensure the file stream gets closed.', 'comment_created': datetime.datetime(2021, 8, 11, 5, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686495061, 'comment_body': 'Could you just check that the two protos are equal, instead? I think Truth comes with a proto subject, too: https://truth.dev/api/0.43/com/google/common/truth/extensions/proto/LiteProtoSubject.html.\r\n\r\nDitto elsewhere.', 'comment_created': datetime.datetime(2021, 8, 11, 5, 8, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686496205, 'comment_body': 'Per earlier comments, is it possible to replace all of these assert/verify methods with more direct proto comparison/contains, instead?', 'comment_created': datetime.datetime(2021, 8, 11, 5, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686496451, 'comment_body': 'This appears to be unused, but it probably should be per my earlier comment.\r\n\r\nThat being said, please make sure to remove all unused variables/members.', 'comment_created': datetime.datetime(2021, 8, 11, 5, 12, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686496742, 'comment_body': 'Could we just use File.readText() instead?', 'comment_created': datetime.datetime(2021, 8, 11, 5, 13, 51, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 686553739, 'comment_body': 'Actually, I am verifying each and every field explicitly as per your comment here - https://github.com/oppia/oppia-android/pull/3434#discussion_r671428912', 'comment_created': datetime.datetime(2021, 8, 11, 7, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686554432, 'comment_body': ""We definitely can do this, but then we'll have to construct the expected dependency list as it was done here - https://github.com/oppia/oppia-android/pull/3434#discussion_r671427322"", 'comment_created': datetime.datetime(2021, 8, 11, 7, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686621872, 'comment_body': 'I tried adding helpers to get indentation but it is trimming the initial indent as we are call `trimIndent`:\r\n```kotlin\r\n  private fun printDependenciesList(dependencyList: List<MavenDependency>) {\r\n    dependencyList.forEach { dep ->\r\n      println(\r\n        """"""\r\n          artifact_name: ""${dep.artifactName}""\r\n          artifact_version: ""${dep.artifactVersion}""\r\n        """""".trimIndent()\r\n      )\r\n      dep.licenseList.forEach { license ->\r\n        printLicense(license)\r\n      }\r\n      println()\r\n    }\r\n  }\r\n\r\n  private fun printLicense(license: License) {\r\n    println(\r\n      """"""\r\n        license {  \r\n          license_name: ""${license.licenseName}""\r\n          original_link: ""${license.originalLink}""  \r\n      """""".trimIndent()\r\n    )\r\n    when(license.verifiedLinkCase) {\r\n      License.VerifiedLinkCase.SCRAPABLE_LINK -> println(\r\n        """"""\r\n            scrapbale_link: ""${license.scrapableLink.url}""\r\n        """""".trimIndent()\r\n      )\r\n      License.VerifiedLinkCase.EXTRACTED_COPY_LINK -> println(\r\n        """"""\r\n            extracted_copy_link: ""${license.extractedCopyLink.url}""\r\n        """""".trimIndent()\r\n        )\r\n      License.VerifiedLinkCase.DIRECT_LINK_ONLY -> println(\r\n        """"""\r\n            direct_link_only: ""${license.directLinkOnly.url}""\r\n        """""".trimIndent()\r\n        )\r\n    }\r\n    println(""  }"")\r\n  }\r\n```\r\n\r\nAnd if we don\'t call `trimIndent` then we get an extra indentation.', 'comment_created': datetime.datetime(2021, 8, 11, 8, 37, 56, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686759284, 'comment_body': 'Removed this as it is no longer needed.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 57, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686759428, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 57, 28, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686759528, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686762033, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686762099, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 1, 20, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686762254, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 1, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686762404, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686762596, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 2, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686762686, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686763565, 'comment_body': ""I think that won't work as the license is contained within dependency and not `finalDepsList`."", 'comment_created': datetime.datetime(2021, 8, 11, 12, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686763729, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 3, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686764363, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686764499, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 5, 5, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686764917, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686764985, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 686922657, 'comment_body': 'modified as per other comments below.', 'comment_created': datetime.datetime(2021, 8, 11, 15, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 688210575, 'comment_body': '```suggestion\r\n/** Tests for [MavenDependenciesRetriever]. */\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 2, 58, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688210959, 'comment_body': '```suggestion\r\n  private val DATA_BINDING_DEP = ""androidx_databinding_databinding_adapters""\r\n  private val PROTO_DEP = ""com_google_protobuf_protobuf_lite""\r\n  private val GLIDE_DEP = ""com_github_bumptech_glide_annotations""\r\n  private val FIREBASE_DEP = ""com_google_firebase_firebase_analytics""\r\n  private val IO_FABRIC_DEP = ""io_fabric_sdk_android_fabric""\r\n\r\n  private val DATA_BINDING_DEP_WITH_THIRD_PARTY_PREFIX =\r\n    ""//third_party:$DATA_BINDING_DEP""\r\n  private val PROTO_DEP_WITH_THIRD_PARTY_PREFIX =\r\n    ""//third_party:$PROTO_DEP""\r\n  private val GLIDE_DEP_WITH_THIRD_PARTY_PREFIX =\r\n    ""//third_party:$GLIDE_DEP""\r\n  private val FIREBASE_DEP_WITH_THIRD_PARTY_PREFIX =\r\n    ""//third_party:$FIREBASE_DEP""\r\n  private val IO_FABRIC_DEP_WITH_THIRD_PARTY_PREFIX =\r\n    ""//third_party:$IO_FABRIC_DEP""\r\n```\r\n\r\nTo ensure that the constants are correctly associated. Ditto for the other test suite.\r\n\r\nAlso, if any of these can be wrapped to one line, please update.', 'comment_created': datetime.datetime(2021, 8, 13, 2, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688213498, 'comment_body': ""Ack. Let's keep this as-is then; it seems pretty clear."", 'comment_created': datetime.datetime(2021, 8, 13, 3, 9, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688214060, 'comment_body': '```suggestion\r\n  private fun setUpBazelEnvironmentWithUpdatedFirebaseDependency(coordsList: List<String>) {\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 3, 11, 3, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688214958, 'comment_body': 'No longer relevant per latest changes.', 'comment_created': datetime.datetime(2021, 8, 13, 3, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688232816, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 13, 4, 20, 43, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 688233642, 'comment_body': 'Actually, the ones listed above are a bit different, they can\'t have a hyphen \'-\' in them (only underscores) but the ones with third_party prefix can have a hyphen, e.g- \r\n```\r\nprivate val DATA_BINDING_DEP = ""androidx_databinding_databinding_adapters""\r\nprivate val DATA_BINDING_DEP_WITH_THIRD_PARTY_PREFIX =\r\n    ""//third_party:androidx_databinding_databinding-adapters""\r\n```\r\n', 'comment_created': datetime.datetime(2021, 8, 13, 4, 23, 43, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 688233699, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 13, 4, 23, 55, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 688368174, 'comment_body': 'Ah, got it--that was subtle. Thanks for clarifying.', 'comment_created': datetime.datetime(2021, 8, 13, 9, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': 'dca89e176a2c4c4eecbc10a0a36b7b1be6df6b6f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eacaab6fd8a9c9b1c011cf09244ef7619273aae0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dd932234ef098b880447072072f28ae2cfcf182', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68b8e8583cffc64b6dd7b2cb704ca00c23bb0fc3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2fdd31abf90fb069875518d1691257cbd881641', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebcc66b39696bae60657f7e8fa7d9187e09e2ce9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dcd7e47d16500f6f41dbc5c3c377800468a54a1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cd5ab3c1e0cc8cf8a637ae6b7a2874187048633', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d39b7f512f74ae919d6396fc8730e18a2e235d0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cbf5e188e3a33f2f3ac32fa39260fef85f55529', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4df99c9c58f7725206ba30b5106992bcf733e391', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e73e2d6c1f60e255e2e3bd7e8603739a105fcf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad042702ff6462c285cd2873128a90953906a3a4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f96498f20e08b4f539f260ba1dc85112eda0baf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '408e55ea65725f1d8ece498d2aeffa58fc3d3e4a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d6ef914e9101d2c250fe7113751ac3283828ac2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ff95b893ede42c93b3afd3fccddafd319618dd7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c64140bdc416a46b0d662065c0e6915fc3aab391', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a5dc1f6def958c9f6271f94698e25b748b6b713', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36b59218b52575d4fa9f39325434c46617ea1eec', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ea924d98f32855a0ecb5469a7270bebabf93b9d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1718b766a10a67403008f142689fd78853aca581', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f321805f79047f38bfe6195ef5bbf49d93a10db', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26eb0fc15d98221c415901e3984de318f5f0b424', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17d20200f494d6224a6fb00632a389507aeb1d40', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f47260ad12989bed414ec976e74e9fa488a3642', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e2c8fea2e5e706a0dac8662caa1be782cd72a80', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0349166f79e350f818fdaf35786d23da3f43156', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd328a8c1ebddd3829dee6faf7cfc5015550c88a9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab95715df2ecca0218100e8dc673ebd90395f913', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d85216532d935eb839fcd7dcad3c359b7035ba5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f542445f8f95b1e1ab02006c9deea72d042d2439', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27ff0ea070d5472627696b7bd9b73b5069f9ca5d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b84e23626a15e20498897885851da1993a3f4731', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '859034110bfd500312d4a722f4d84fcbed6872f9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edbae651f8f3ccd1d7f6539df601f55274ba445c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f663f85d678dc7972e023eb420fcd818f0f837eb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8626f95b24d5d3949ceb7a3f8137a89225a92fe', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '988af0cdb98ca902284093aaff3e0d3683a770e7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42d6e8b56e8297f8372cf6f5976aef85234df58b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '678d76f9bce5f47f39ce48b813a5e9c9f9fbe681', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '648a20399ef1fc29261366b86a6d0e6b4114fff3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ec006c7eada8029881db09b7d9f2ae4b9350dce', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baa07eb9e5dc3b91330bbf487eb7b13641f88b65', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75b91954bc2357ee2c07b65fb0d177a4034f8970', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25db1ffd6c7fe1bec12e3e3dc47eea2610025eec', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd45a095863f6c10d8ed02af96c8f27eb2fd60a4b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6676f98f9bde9d627df4892de65f90faf6cfabc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1268faf90710b58542a0dae0226f97ebac4b149c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cee0cf076c8133fcb8a8865836d813ae641140d3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1ed5f8b05728b33a4d6386da48f3873229777fa', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c260ee610257789cfd17e034c7d819a149e1458', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27830be81392b0e8e61b7237741adc91975d588d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d5a0e1c1b675de2aa4b564aa5c320a89be0de62', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab4ac139e7348e03dfc1f423c7edad39d976f99', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '662e25870eed09a4558291d0463388257bf3308c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8013ac50320e5da6db74a8d2d86b87a8fbac4952', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9a80f353851ca1e27e0e8e83feb89bc68191da2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c036817de16970664ecf8e7c8cb450132cef1337', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e86c31dac0054a682c3e6558a2038f4ba53d48c9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7c55e97251b8444c4364e5d70716c869068bcd8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eb8f363ffeeaba5ac6ebec2a7c054ec5643dce1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f41f93e15bf01cc2b5aaa73f4c07f030d32fb5df', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feaee3c2d722bdef4a04145962c3da42190be803', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78bbdc233a9f97ce89bdc47881d04831ade05f8e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2dda8c04a0c4a3dd9f5098382f1aa522922b377', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '236cc457fd71151b0bfa53dbad9edce28fc94268', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6963da864cb88f1ae05038bb5dd106dd541c2eb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '032fd8607a8b7b7905925e3cec89afe0e1a39936', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04b4d3e85b93cd19641fcf0babad6ff676d132a0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1801fc8d49445aef4efa98c32242ad1f3f02d22d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}]",Abhay Garg,54636525,,User,,31,,33,42
700929849,Fix #3498: Add CI check to ensure license text is never checked into Git,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
Fixes #3498  
Added a new script that will run on CI and verify that the version of third_party_dependencies.xml generated by GenerateLicenseTexts.kt is never checked into Git.

Screenshot -
![Screenshot from 2021-08-01 20-57-14](https://user-images.githubusercontent.com/54636525/127776492-6025ff5a-9fca-424f-b390-e9aa0d1e16d7.png)


## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3632,https://api.github.com/repos/oppia/oppia-android/pulls/3632,https://github.com/oppia/oppia-android/pull/3632,closed,196,0,8,91,10,26,1,1,[{'name': 'PR: LGTM'}],2021-08-01 15:18:42+00:00,2021-08-14 03:06:43+00:00,1079281.0,"12 days, 11:48:01","[{'comment_id': 682406964, 'comment_body': ""No need to have ``@param`` in this way. I suggest defining the parameters explicitly like we do in the other scripts since you're describing the CLI for a command rather than the arguments for a function being called."", 'comment_created': datetime.datetime(2021, 8, 4, 8, 33, 59, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682407208, 'comment_body': '```suggestion\r\n    throw Exception(""Too few arguments passed"")\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 8, 34, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682407725, 'comment_body': '```suggestion\r\n  if (comment !in xmlContent.contains) {\r\n```\r\n\r\nMore idiomatic version.', 'comment_created': datetime.datetime(2021, 8, 4, 8, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682408166, 'comment_body': '```suggestion\r\n    throw Exception(""License texts potentially checked into VCS"")\r\n```\r\n\r\nTechnically it\'s not guaranteed since you aren\'t verifying it (someone might have just removed or changed the warning, for example).', 'comment_created': datetime.datetime(2021, 8, 4, 8, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682408386, 'comment_body': '```suggestion\r\n  val xmlContent = thirdPartyDepsXml.readText()\r\n```\r\n\r\nMight this work, instead?', 'comment_created': datetime.datetime(2021, 8, 4, 8, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682409184, 'comment_body': 'I suggest introducing a scripts.license subpackage for this & your earlier PR, instead. The CI subpackage is for scripts needed to run the CI environment, not scripts that run in the CI environment (all scripts are potentials for running in CI).', 'comment_created': datetime.datetime(2021, 8, 4, 8, 36, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682410871, 'comment_body': ""Shouldn't this case fail? Perhaps we should verify that the XML file itself is empty, too (e.g. by using an XML parser like we do in the accessibility label script & verify that it has no elements--would that work?)."", 'comment_created': datetime.datetime(2021, 8, 4, 8, 38, 54, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682411132, 'comment_body': ""Another test worth including, I think: running the script when the XML file doesn't exist (to cover cases when it's moved in the future)."", 'comment_created': datetime.datetime(2021, 8, 4, 8, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682465094, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682465194, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682465268, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 51, 54, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682465342, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682465407, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 52, 4, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682465490, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682465575, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 9, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682466304, 'comment_body': 'I think the XML file will contain dummy texts so this test case should pass or am I missing something here?', 'comment_created': datetime.datetime(2021, 8, 4, 9, 53, 23, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682479625, 'comment_body': ""I think if you generated the file & manually readded the comment, it would cause the check to pass. Technically, that scenario should fail. While the comment acts as a canary, it's fairly easy to break it. The additional check that the XML file is also logically empty I think helps make this check much more robust overall."", 'comment_created': datetime.datetime(2021, 8, 4, 10, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682480347, 'comment_body': 'Do you also need to update the root scripts build file to point to the correct new location?', 'comment_created': datetime.datetime(2021, 8, 4, 10, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 682490660, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 4, 10, 28, 36, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 682499019, 'comment_body': 'Discussed on chat.', 'comment_created': datetime.datetime(2021, 8, 4, 10, 40, 43, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683210787, 'comment_body': ""Does this need to go into the overrides section since app's XML files are blanket codeowner assigned below?"", 'comment_created': datetime.datetime(2021, 8, 5, 7, 45, 28, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683210892, 'comment_body': '```suggestion\r\n# License texts.\r\n```', 'comment_created': datetime.datetime(2021, 8, 5, 7, 45, 39, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 683218268, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 5, 7, 56, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 683218371, 'comment_body': 'Moved to overrides section', 'comment_created': datetime.datetime(2021, 8, 5, 7, 56, 13, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 688653327, 'comment_body': 'Nit: we should actually throw a custom error exception (e.g. with ``check(file.exists()) { ""File does not exist: $file"" }``) since the exact ""No such file or directory"" can change between JVM implementations.', 'comment_created': datetime.datetime(2021, 8, 13, 16, 54, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 688658889, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 4, 7, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}]","[{'commit_sha': 'dca89e176a2c4c4eecbc10a0a36b7b1be6df6b6f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eacaab6fd8a9c9b1c011cf09244ef7619273aae0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dd932234ef098b880447072072f28ae2cfcf182', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68b8e8583cffc64b6dd7b2cb704ca00c23bb0fc3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2fdd31abf90fb069875518d1691257cbd881641', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebcc66b39696bae60657f7e8fa7d9187e09e2ce9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dcd7e47d16500f6f41dbc5c3c377800468a54a1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cd5ab3c1e0cc8cf8a637ae6b7a2874187048633', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d39b7f512f74ae919d6396fc8730e18a2e235d0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cbf5e188e3a33f2f3ac32fa39260fef85f55529', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4df99c9c58f7725206ba30b5106992bcf733e391', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e73e2d6c1f60e255e2e3bd7e8603739a105fcf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad042702ff6462c285cd2873128a90953906a3a4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f96498f20e08b4f539f260ba1dc85112eda0baf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '408e55ea65725f1d8ece498d2aeffa58fc3d3e4a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d6ef914e9101d2c250fe7113751ac3283828ac2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ff95b893ede42c93b3afd3fccddafd319618dd7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c64140bdc416a46b0d662065c0e6915fc3aab391', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a5dc1f6def958c9f6271f94698e25b748b6b713', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36b59218b52575d4fa9f39325434c46617ea1eec', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ea924d98f32855a0ecb5469a7270bebabf93b9d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1718b766a10a67403008f142689fd78853aca581', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f321805f79047f38bfe6195ef5bbf49d93a10db', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26eb0fc15d98221c415901e3984de318f5f0b424', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17d20200f494d6224a6fb00632a389507aeb1d40', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f47260ad12989bed414ec976e74e9fa488a3642', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e2c8fea2e5e706a0dac8662caa1be782cd72a80', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0349166f79e350f818fdaf35786d23da3f43156', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd328a8c1ebddd3829dee6faf7cfc5015550c88a9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab95715df2ecca0218100e8dc673ebd90395f913', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d85216532d935eb839fcd7dcad3c359b7035ba5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f542445f8f95b1e1ab02006c9deea72d042d2439', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27ff0ea070d5472627696b7bd9b73b5069f9ca5d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b84e23626a15e20498897885851da1993a3f4731', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '859034110bfd500312d4a722f4d84fcbed6872f9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edbae651f8f3ccd1d7f6539df601f55274ba445c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f663f85d678dc7972e023eb420fcd818f0f837eb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8626f95b24d5d3949ceb7a3f8137a89225a92fe', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '988af0cdb98ca902284093aaff3e0d3683a770e7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42d6e8b56e8297f8372cf6f5976aef85234df58b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '678d76f9bce5f47f39ce48b813a5e9c9f9fbe681', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '648a20399ef1fc29261366b86a6d0e6b4114fff3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ec006c7eada8029881db09b7d9f2ae4b9350dce', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baa07eb9e5dc3b91330bbf487eb7b13641f88b65', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75b91954bc2357ee2c07b65fb0d177a4034f8970', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25db1ffd6c7fe1bec12e3e3dc47eea2610025eec', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea234f924846d3528098d367f372204693fc2fbb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '790342fce72dfdc72c38769101c6891b10a6cfdd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '580e15ff66977fe4c7b0b2a4afb68b22e4e3ce76', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd45a095863f6c10d8ed02af96c8f27eb2fd60a4b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6676f98f9bde9d627df4892de65f90faf6cfabc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57e4e4ccb0b351fd5050889e46ffc53629f0550f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3afed2ad17ff2f6f522ea97e1a557b4e2d59b91', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1268faf90710b58542a0dae0226f97ebac4b149c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1def2b86cb57c595a7f965dd548773a7c5642dca', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '008931e4239435d58606ce61a2392db7404b222d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b113f3f942482d57ca6dcdf1d42527639ed142a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ca7a0884d4d721c25c964f9e6ed75178092be63', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cee0cf076c8133fcb8a8865836d813ae641140d3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1ed5f8b05728b33a4d6386da48f3873229777fa', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c260ee610257789cfd17e034c7d819a149e1458', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27830be81392b0e8e61b7237741adc91975d588d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d5a0e1c1b675de2aa4b564aa5c320a89be0de62', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab4ac139e7348e03dfc1f423c7edad39d976f99', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '662e25870eed09a4558291d0463388257bf3308c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8013ac50320e5da6db74a8d2d86b87a8fbac4952', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9a80f353851ca1e27e0e8e83feb89bc68191da2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c036817de16970664ecf8e7c8cb450132cef1337', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e86c31dac0054a682c3e6558a2038f4ba53d48c9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7c55e97251b8444c4364e5d70716c869068bcd8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eb8f363ffeeaba5ac6ebec2a7c054ec5643dce1', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f41f93e15bf01cc2b5aaa73f4c07f030d32fb5df', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feaee3c2d722bdef4a04145962c3da42190be803', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f90d1b65d42c92289f5af15346a41c2c88f704e8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '146aeecf72b51b4d88578147ce9367a758b54cb7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78bbdc233a9f97ce89bdc47881d04831ade05f8e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1824d8c17a153b38e1ed7ae973f1c2a87f01b545', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1b102da686e5fe8d5a732f28fc73eb8538f8a80', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '908defef2ded50a03a82173e527ce2885f476ae6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2dda8c04a0c4a3dd9f5098382f1aa522922b377', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '236cc457fd71151b0bfa53dbad9edce28fc94268', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6963da864cb88f1ae05038bb5dd106dd541c2eb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dd2a4b0656b5a7b4bde9053ab319d62456a04d9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '032fd8607a8b7b7905925e3cec89afe0e1a39936', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cea4c5e01c18e89a6ac069656ae0cabbf54a1a72', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e103c835fb06702e6c8645886e6056548402385', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04b4d3e85b93cd19641fcf0babad6ff676d132a0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1801fc8d49445aef4efa98c32242ad1f3f02d22d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05c15fcdfe8cf6be4d90211e19f2614c68c50767', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99f28a29824bbc27952b34129b148de7d430bcda', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab02f2c5de168fbb09bb885e2a4c142bcb7e2897', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}]",Abhay Garg,54636525,,User,,31,,33,42
710666447,Fix part of #3600: Add tablet UI for FAQs and Third-party Dependencies,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->

Fixes part of #3600:
Added new UI for tablet devices for HelpActivity that shows FAQs List and Dependencies List

Mock Link - https://xd.adobe.com/view/d405de00-a871-4f0f-73a0-f8acef30349b-a234/screen/dae1f41b-9551-430e-8b61-b285d6ee050b/
## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.

Screenshots - 
| Portrait  | Landscape |
| ------------- | ------------- |
|![Screenshot_2021-08-13-22-22-41-575_org oppia android](https://user-images.githubusercontent.com/54636525/129394923-63bf0eca-d306-4e93-a5e6-54b1881c3bf0.jpg)| ![Screenshot_2021-08-13-22-22-54-753_org oppia android](https://user-images.githubusercontent.com/54636525/129394945-decfbcf4-69ea-49f4-998c-defb6319bd9c.jpg)|
|![Screenshot_2021-08-13-22-22-40-037_org oppia android](https://user-images.githubusercontent.com/54636525/129395006-da64fd3b-76d6-4deb-a49b-cc651d3c7ce3.jpg)|![Screenshot_2021-08-13-22-22-53-219_org oppia android](https://user-images.githubusercontent.com/54636525/129395023-8cc42b44-4083-4137-94c3-9815ca0aa371.jpg)|
|![Screenshot_1628877313](https://user-images.githubusercontent.com/54636525/129400360-8ebb6e62-436e-4f81-8575-10c5cbe49173.png)|![Screenshot_1628877309](https://user-images.githubusercontent.com/54636525/129400599-1bfe19c6-994b-4d7b-ad40-1232c66e4784.png)|
|![Screenshot_1628877179](https://user-images.githubusercontent.com/54636525/129400446-180b51e4-9c5c-4383-b3a4-b1e6ec413703.png)|![Screenshot_1628877269](https://user-images.githubusercontent.com/54636525/129400420-5a76847f-203b-4da7-a825-244d188ab61b.png)|


![Screenshot from 2021-08-13 23-54-07](https://user-images.githubusercontent.com/54636525/129402856-4c820e7d-41d6-40f2-906f-5eb7fa6ff8b4.png)
3 test cases failing on espresso that are only meant for phones.
![Screenshot from 2021-08-16 14-31-22](https://user-images.githubusercontent.com/54636525/129538987-51a3ae9d-93ae-40c3-b1d0-1549f0829a5b.png)



",True,3671,https://api.github.com/repos/oppia/oppia-android/pulls/3671,https://github.com/oppia/oppia-android/pull/3671,closed,552,20,15,76,9,29,0,1,[],2021-08-12 10:41:53+00:00,2021-08-18 08:00:42+00:00,508729.0,"5 days, 21:18:49","[{'comment_id': 687879588, 'comment_body': 'I had to use `isDisplayed`  because when I tried using `isCompletelyDisplayed`, the test case was passing on espresso but failing on robolectric.\r\n![Screenshot from 2021-08-12 21-34-01](https://user-images.githubusercontent.com/54636525/129230367-c9de9620-1c24-44d8-a011-c33b49cd59c0.png)\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 16, 7, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 688435510, 'comment_body': 'This is not getting used anywhere.', 'comment_created': datetime.datetime(2021, 8, 13, 11, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 688437370, 'comment_body': 'use `navigate_up`', 'comment_created': datetime.datetime(2021, 8, 13, 11, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 688437849, 'comment_body': 'Use `Heading3` style so that you can get rid of `color`, `size`, height, font.', 'comment_created': datetime.datetime(2021, 8, 13, 11, 19, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 688438012, 'comment_body': 'Sounds good.', 'comment_created': datetime.datetime(2021, 8, 13, 11, 19, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 688438936, 'comment_body': 'Add configuration related tests too, meaning if a fragment is loaded on config change it stays the same.\r\nAlso add test for checking content description of `back arrow`\r\nAnother test to showcase that back-arrow and heading is visible in tablet and not visible in mobile.', 'comment_created': datetime.datetime(2021, 8, 13, 11, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 688491623, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 13, 12, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 688491721, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 13, 12, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 688492062, 'comment_body': 'Done, but kept the minHeight attribute as I found out Heading3 styles does not have minHeight attribute.', 'comment_created': datetime.datetime(2021, 8, 13, 12, 55, 59, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 688492501, 'comment_body': 'Added more test cases as suggested, PTAL.', 'comment_created': datetime.datetime(2021, 8, 13, 12, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 688888796, 'comment_body': 'Also please note this https://github.com/oppia/oppia-android/pull/3671#pullrequestreview-729628815', 'comment_created': datetime.datetime(2021, 8, 14, 6, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 689283087, 'comment_body': 'Nit\r\n`testHelpFragment_selectThirdPartyDeps_tabletConfigChanged_displaysThirdPartyDepsList `', 'comment_created': datetime.datetime(2021, 8, 16, 7, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 689283219, 'comment_body': '`testHelpFragment_selectFAQs_tabletConfigChanged_displaysFAQList`', 'comment_created': datetime.datetime(2021, 8, 16, 7, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 689284484, 'comment_body': 'Why do we need minHeight attribute for the TextView? Its not clickable.', 'comment_created': datetime.datetime(2021, 8, 16, 7, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 689362965, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 16, 9, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 689363060, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 16, 9, 5, 37, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 689450723, 'comment_body': 'Discussed on chat.', 'comment_created': datetime.datetime(2021, 8, 16, 11, 22, 3, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 690002957, 'comment_body': '```suggestion\r\ninterface LoadFaqListFragmentListener {\r\n```\r\n\r\nPer https://developer.android.com/kotlin/style-guide#camel_case. (Note that many existing FAQ components have incorrect names).', 'comment_created': datetime.datetime(2021, 8, 17, 3, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690002993, 'comment_body': 'Ditto (naming).', 'comment_created': datetime.datetime(2021, 8, 17, 3, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690003161, 'comment_body': 'This should describe what the user is doing, not what the implementation will do.', 'comment_created': datetime.datetime(2021, 8, 17, 3, 16, 21, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690003300, 'comment_body': 'Ditto for this KDoc.', 'comment_created': datetime.datetime(2021, 8, 17, 3, 16, 49, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690003566, 'comment_body': ""I think this can go in the regular VIEW_MODELS list since this doesn't actually depend on R."", 'comment_created': datetime.datetime(2021, 8, 17, 3, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690003735, 'comment_body': ""```suggestion\r\n  /** Indicates whether the device in use has a large screen & should be multi-pane. */\r\n```\r\n\r\n('Indicates' is a bit more correct since this is just a variable, it doesn't actually do anything directly)."", 'comment_created': datetime.datetime(2021, 8, 17, 3, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 690015784, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 17, 3, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 690015828, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 17, 3, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 690015954, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 17, 3, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 690016111, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 17, 3, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 690016147, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 17, 3, 59, 54, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 690016176, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 17, 3, 59, 59, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}]","[{'commit_sha': '1c7f2a1060a8e3bf4356a34b33786fbc094ac618', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41d01d26621dbb85af430ee408beb3c5fe7689b3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ced7633301a2ccf8bb109be7b2e9edd949bdc7dc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c76e1cb038264fe1d1d623cf88797a0b7101755e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4b7869b4eee8ca27c61b1b711bf9745a8790738', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7c4175354381c216a426edadf5ac15f1e9f0c5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2893aab25bf843763269fe9a413da50cfb3771d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdd569c803c419cd12f5f4a6f5e3528f7fe3677a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88691560574640c10a4fde0a7b65e8e3af5c1afc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46d71f900b8453afc5f49846dd74753478dc1525', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2414c77114162c8a4baae074097217f5405aa2e6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91dbd1d3ba6ebdfb3590e807eab9e38f2cba4286', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dc5e8d839aaaf9f82bc0b1bd01b72c81085c67f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef6dfacdc7e97eddc6c2cec1c9e4c44e5560fbcd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05883aa4d5bcc0e5a6a433f01945db13f4efe3ac', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2b4134b2056ed40757460f9dda4b3cda7709ccb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b420bcebc55b8d49acb9efbe83a126fd73bea5f6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f58b2d524a7edda049b81105302483e3d98209f2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da89ef38f3ba07bf64f312ee7b6f2de35c36d8c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9243bae63072b840ca46ee08e3b932d07aeaa04f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a473fa9cccd89b29c70e6d096bad919f00d707', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c6d0df07b68204cc38a81f9312c3bbd8ffc1783', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4e0ca95b48653eebc594e149e6bfc27cbb1e6f7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '696dfae6583918b5989eddadb610e4306de697c2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86a3fdd8f81d9f068736e5dc64e6d46c7fa3273b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5724f5398a8b57e89890e5da78f15db196a8912d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92bd8735810c7884b0ece5e42b6403e75204057c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9cc0b7b9490817640e496a13de03963323cd0f6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230689ba46421d8538ecd62bc501bda7b8fe0b0e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f580b3be0c71e221187b70db84559ad3dea56349', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db07e95c026e10bf971f68a27d98afe26da6f0de', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d8b1cfe036355cab44b191635f4dfac15fac35c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15abbd0fe598d9b212308368838d6c35642a5ed6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '597b4b9d148d6f74bba28b8bdb8d26384ca19a57', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd5ff2e36531010ce424297f758cd2b871983eeb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba640b32dd3d53ac358c6f1bcee5c73c3bc3ad3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3022255c2159f86b6fc968f9c085e4fbda45124d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd7a2de9bdf9f46ef4d2e5e424bec5ee747e648e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd60146ff566fd871c3c3f2cc4e138190e1962f51', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e97647d4146a09b41d783b2843a2b7a2b152accf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f358d1a55f13434ac6beeeceeca15dbe5812916e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9e622ff61ecc948f68b9c8f7a5c3544d93c3305', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '291882fc1915e79db36629daddbd704648fcfaa2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '017a105be91d23ca4bc79c63c478fb82bd2341cd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f05f22e82497d4dd39f410c3c2a3ab4f38b14cae', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '670b3a5bbd8d30daa2981072d4e1641727a4aafd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65fdb1e2887ee38863e3134ded378343b9b67acd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c9d67a9b5b97a58589b17e632578247831d366f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '827b7f788f35bf17a670fb95f293e54730114761', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80766c07bdb93259dbe4bb3a2ac194fd107ce62b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd37d8ecfcaac841e245806e916eb21114fc7abb6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb4bef5f3b62c51249b2dc0bcab7ab820932c49b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '811700893d6e2c9f8f7a745febbe7b6b0f2f5d4d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df2f309393eb4791986dc3ae76213480efd3617e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36f31b9f8f4f8f19fc07960762544eea43b1341c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b80809fa36247fa27ab7e8979d606505843b302', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50cf5f4b6ebb7c1f755ce360f8b9cb22178afda5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d3c967acc25162faa821753028ab54721e2d9bd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b18716aaab3ad4c4941719e33e6213163da2225a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b75409b398c7aea19ef94c20806ffe041ba8a0c4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b0fc8245e0739491e813607ddc2f90921cbf1c4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6abbd149d8179a9476a487e46b2532110390f8f5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22fdff9a2bc427f066214fc971d1f2e417261ade', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a98d05bc69fa57fb4cb71b1aa4b69f70d5b121c9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '282b9b1eddc256e35370e49a8ee343892d817af2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89d340ab70ffcb878e1d8f96abdb08c0f3559c2c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de8c999bfc5b7b12f62372bd6f3830ecd685df2f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a91b50c48ac7b10e4ce46a7169bfe00b60c82f5c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee52e667c0efa26cf88f0ed13b3a6d5d5b45c7e6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae413f822adab0487db237e16916f6abe1b59e7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7d9b1c28af208ab2c69edbb9c93a6f4a41e7fe0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6a8d55aa8bacb116a1bf53f572b2d82cd787446', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a2269de3d872cd1ac09f3f67ce3ef1fa85d2897', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be8512eca5d392532ae56ceddbdb1ac47236d10f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38c12890534bdfa76fc12931cf9053432562f7cf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4f5b41b126d8e726c40e31cafb6fed7d611c99d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}]",Abhay Garg,54636525,,User,,31,,33,42
712731136,Fix #3600: Add complete UI for tablet devices for copyright licenses lists and texts,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged.
  -->
 Fixes #3600:
Added split mode support on tablet devices for LicenseListFragment and LicenseTextViewerFragment.

| Portrait | Landscape |
| --- | --- |
| ![Screenshot_1629013550](https://user-images.githubusercontent.com/54636525/129471275-ef6c8ff7-d80e-42fe-8723-fe29cea98d19.png) | ![Screenshot_1629013557](https://user-images.githubusercontent.com/54636525/129471290-23adfa99-5abd-4d94-98b2-4167c567031c.png)|
|![Screenshot_1629013803](https://user-images.githubusercontent.com/54636525/129471330-3de6a3cf-a687-4226-a05c-169c9635408f.png)|![Screenshot_1629013792](https://user-images.githubusercontent.com/54636525/129471336-e8a23bce-8689-401d-bc92-ff778e1c5576.png)|
|![Screenshot_1629013904](https://user-images.githubusercontent.com/54636525/129471350-ee8ee7fc-5985-49a5-aa77-ff0ab35a9ee8.png)|![Screenshot_1629013897](https://user-images.githubusercontent.com/54636525/129471381-e25951c8-b976-476b-b715-0257d38642b5.png)|
|![Screenshot_1629013880](https://user-images.githubusercontent.com/54636525/129471301-cd457288-985b-4970-a640-aedebf32d9ea.png)|![Screenshot_1629013886](https://user-images.githubusercontent.com/54636525/129471309-04a78869-0a64-4599-a82a-5799a901fce8.png)|
|![Screenshot_2021-08-15-13-33-21-234_org oppia android](https://user-images.githubusercontent.com/54636525/129471687-09e069d6-f4fa-4e97-a373-e69281efeac7.jpg)|![Screenshot_2021-08-15-13-29-51-448_org oppia android](https://user-images.githubusercontent.com/54636525/129471695-79b464c7-c126-4fcb-9b53-260977764b15.jpg)|
|![Screenshot_2021-08-15-13-29-54-437_org oppia android](https://user-images.githubusercontent.com/54636525/129471701-2e8f38fb-4c49-4d04-bc31-fea646c6a22b.jpg)|![Screenshot_2021-08-15-13-36-23-887_org oppia android](https://user-images.githubusercontent.com/54636525/129471707-d9ad28c7-1fd1-4b65-a747-0a0296333ca2.jpg)|


Test cases-
![Screenshot from 2021-08-16 21-43-27](https://user-images.githubusercontent.com/54636525/129596946-e70726d8-839f-4d18-993b-a03e8c6a01d2.png)
(3 test cases failing in espresso that are only meant for mobile)
![Screenshot from 2021-08-16 21-49-05](https://user-images.githubusercontent.com/54636525/129596970-8ea14ff8-91c1-4f92-97b6-cc9089d02713.png)

## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [x] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [x] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [x] The PR is made from a branch that's **not** called ""develop"".
- [x] The PR is made from a branch that is up-to-date with ""develop"".
- [x] The PR's branch is based on ""develop"" and not on any other branch.
- [x] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3680,https://api.github.com/repos/oppia/oppia-android/pulls/3680,https://github.com/oppia/oppia-android/pull/3680,closed,897,88,22,108,6,19,0,1,[],2021-08-14 07:06:01+00:00,2021-08-19 16:04:18+00:00,464297.0,"5 days, 8:58:17","[{'comment_id': 690577346, 'comment_body': 'This can be shifted to single line.', 'comment_created': datetime.datetime(2021, 8, 17, 17, 26, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 690579532, 'comment_body': 'What is the use of these format arguments? `""third-party dependencies list""`', 'comment_created': datetime.datetime(2021, 8, 17, 17, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 690580746, 'comment_body': 'This change is not required', 'comment_created': datetime.datetime(2021, 8, 17, 17, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 690581380, 'comment_body': 'The `,` at the ned needs to be removed right?', 'comment_created': datetime.datetime(2021, 8, 17, 17, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 690581479, 'comment_body': 'You can removed this `?` too', 'comment_created': datetime.datetime(2021, 8, 17, 17, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 690581719, 'comment_body': 'Please update this.', 'comment_created': datetime.datetime(2021, 8, 17, 17, 32, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 690582291, 'comment_body': 'Update here and at other places\r\n` matches(withEffectiveVisibility(Visibility.VISIBLE))`', 'comment_created': datetime.datetime(2021, 8, 17, 17, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 690582568, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 8, 17, 17, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 690930996, 'comment_body': 'Actually, it is crossing the max 100 char limit when I am trying to fit it into a single line', 'comment_created': datetime.datetime(2021, 8, 18, 6, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 691007083, 'comment_body': 'As per your [earlier comment](https://github.com/oppia/oppia-android/pull/3671#issuecomment-899274381), I am setting the content description dynamically.', 'comment_created': datetime.datetime(2021, 8, 18, 8, 12, 27, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 691007308, 'comment_body': 'Reverted.', 'comment_created': datetime.datetime(2021, 8, 18, 8, 12, 46, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 691007385, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2021, 8, 18, 8, 12, 52, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 691007653, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 8, 18, 8, 13, 12, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 691007811, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2021, 8, 18, 8, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 691007896, 'comment_body': 'Done.\r\n', 'comment_created': datetime.datetime(2021, 8, 18, 8, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 691007961, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 18, 8, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 691570587, 'comment_body': 'Ack', 'comment_created': datetime.datetime(2021, 8, 18, 20, 12, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 691571507, 'comment_body': ""Please don't set it in hard-code form otherwise we won't be able to translate this to other languages. These strings should be defined in `strings.xml` file and then should be used here."", 'comment_created': datetime.datetime(2021, 8, 18, 20, 14, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 691746243, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 19, 3, 15, 35, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}]","[{'commit_sha': '1c7f2a1060a8e3bf4356a34b33786fbc094ac618', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41d01d26621dbb85af430ee408beb3c5fe7689b3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ced7633301a2ccf8bb109be7b2e9edd949bdc7dc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c76e1cb038264fe1d1d623cf88797a0b7101755e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4b7869b4eee8ca27c61b1b711bf9745a8790738', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b7c4175354381c216a426edadf5ac15f1e9f0c5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2893aab25bf843763269fe9a413da50cfb3771d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdd569c803c419cd12f5f4a6f5e3528f7fe3677a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88691560574640c10a4fde0a7b65e8e3af5c1afc', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46d71f900b8453afc5f49846dd74753478dc1525', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2414c77114162c8a4baae074097217f5405aa2e6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91dbd1d3ba6ebdfb3590e807eab9e38f2cba4286', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dc5e8d839aaaf9f82bc0b1bd01b72c81085c67f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef6dfacdc7e97eddc6c2cec1c9e4c44e5560fbcd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05883aa4d5bcc0e5a6a433f01945db13f4efe3ac', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2b4134b2056ed40757460f9dda4b3cda7709ccb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b420bcebc55b8d49acb9efbe83a126fd73bea5f6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f58b2d524a7edda049b81105302483e3d98209f2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da89ef38f3ba07bf64f312ee7b6f2de35c36d8c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9243bae63072b840ca46ee08e3b932d07aeaa04f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a473fa9cccd89b29c70e6d096bad919f00d707', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c6d0df07b68204cc38a81f9312c3bbd8ffc1783', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4e0ca95b48653eebc594e149e6bfc27cbb1e6f7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '696dfae6583918b5989eddadb610e4306de697c2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86a3fdd8f81d9f068736e5dc64e6d46c7fa3273b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5724f5398a8b57e89890e5da78f15db196a8912d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92bd8735810c7884b0ece5e42b6403e75204057c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9cc0b7b9490817640e496a13de03963323cd0f6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230689ba46421d8538ecd62bc501bda7b8fe0b0e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f580b3be0c71e221187b70db84559ad3dea56349', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db07e95c026e10bf971f68a27d98afe26da6f0de', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d8b1cfe036355cab44b191635f4dfac15fac35c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15abbd0fe598d9b212308368838d6c35642a5ed6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '597b4b9d148d6f74bba28b8bdb8d26384ca19a57', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd5ff2e36531010ce424297f758cd2b871983eeb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ba640b32dd3d53ac358c6f1bcee5c73c3bc3ad3', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3022255c2159f86b6fc968f9c085e4fbda45124d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd7a2de9bdf9f46ef4d2e5e424bec5ee747e648e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd60146ff566fd871c3c3f2cc4e138190e1962f51', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e97647d4146a09b41d783b2843a2b7a2b152accf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f358d1a55f13434ac6beeeceeca15dbe5812916e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9e622ff61ecc948f68b9c8f7a5c3544d93c3305', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '291882fc1915e79db36629daddbd704648fcfaa2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '017a105be91d23ca4bc79c63c478fb82bd2341cd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f05f22e82497d4dd39f410c3c2a3ab4f38b14cae', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '670b3a5bbd8d30daa2981072d4e1641727a4aafd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65fdb1e2887ee38863e3134ded378343b9b67acd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c9d67a9b5b97a58589b17e632578247831d366f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '827b7f788f35bf17a670fb95f293e54730114761', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80766c07bdb93259dbe4bb3a2ac194fd107ce62b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd37d8ecfcaac841e245806e916eb21114fc7abb6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb4bef5f3b62c51249b2dc0bcab7ab820932c49b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '811700893d6e2c9f8f7a745febbe7b6b0f2f5d4d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df2f309393eb4791986dc3ae76213480efd3617e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36f31b9f8f4f8f19fc07960762544eea43b1341c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b80809fa36247fa27ab7e8979d606505843b302', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50cf5f4b6ebb7c1f755ce360f8b9cb22178afda5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d3c967acc25162faa821753028ab54721e2d9bd', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b18716aaab3ad4c4941719e33e6213163da2225a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b75409b398c7aea19ef94c20806ffe041ba8a0c4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b0fc8245e0739491e813607ddc2f90921cbf1c4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6abbd149d8179a9476a487e46b2532110390f8f5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22fdff9a2bc427f066214fc971d1f2e417261ade', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a98d05bc69fa57fb4cb71b1aa4b69f70d5b121c9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3466aa20be66ba7b159050d91935cd5a07952b69', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73626925918ee841dec7b205a3d6115deea7245e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7521919d64b2de467fb41bfb3c37db7cc4a040a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '282b9b1eddc256e35370e49a8ee343892d817af2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89d340ab70ffcb878e1d8f96abdb08c0f3559c2c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b6a3429148f9915f785eb5709db38348d2fcff9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5bceb8236ac0a11293e5dd7fbeb8022c644e6b8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de8c999bfc5b7b12f62372bd6f3830ecd685df2f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a91b50c48ac7b10e4ce46a7169bfe00b60c82f5c', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af52561a9e74248ab7b862091d763ff25f5663d4', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9540806a56ec77234c0b1a2c78745485e3b258e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eab267b55688b14949c72a563a10234277b67087', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e1a876c502ca2fdc850ba9a33c2dd5fed7d9446', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b55de27794578e0a7cbf66843c2d23903dc3bec', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee52e667c0efa26cf88f0ed13b3a6d5d5b45c7e6', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73b0ab36929578336e392ecb871f9ac8061de58f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e092fd984570daa5fd985a9fc6d23abf93010019', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '480f5ff6494540cfb9c7dd1cb9a85b7faf834571', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91923158940897690a44eda2201d90b9016bed98', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46ad26b87247b2858f8ec8ae722b45045221109a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '099e05c829bc311cd0cf829d2cc2d80ac526f43b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae413f822adab0487db237e16916f6abe1b59e7', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9002d2c9385932b2320e2fa9d50d323f3b3f78eb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58fd6daec22b56f99bfb7cc7b1508c3047f42674', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '381ee86e962d50a65fd098ac5db89b1cf6d63b3b', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566b50ea3887ca5f81ec21fe7e992ecba3399f38', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7d9b1c28af208ab2c69edbb9c93a6f4a41e7fe0', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d699107b5a1b9107435e70bbe856b4603166899', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af442660c60e30a4048332df4716b4c68544494e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6a8d55aa8bacb116a1bf53f572b2d82cd787446', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a2269de3d872cd1ac09f3f67ce3ef1fa85d2897', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7862f49e73a16634d0cced2ee2ce3d27900b2e23', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be8512eca5d392532ae56ceddbdb1ac47236d10f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38c12890534bdfa76fc12931cf9053432562f7cf', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b54160e19bf8af65bc69e490e48fcfdc139e0db5', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4f5b41b126d8e726c40e31cafb6fed7d611c99d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c269a8ba201f225e19195fc6d7f009bb5ac0de7d', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dcbde0f711d0ca955fac250f6395c586a30d27a', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '406f8deeb10ce2b7aa242716b0b1f166d62a3ebb', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed187d76fb315ebd700d1c3ec97849598c296a0e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e47db947c164421b9b90776734db61a352287e2', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3520aafae1aacf4c3e060b9567cfb0b8f5818d8', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93ee2b1c44131fcdaa2bf8ec5662bdf04cc4df37', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec48bef327c6cef59e94095c7f950e0b6ed4867e', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}]",Abhay Garg,54636525,,User,,31,,33,42
718425661,Fix typos in RetrieveLicenseTexts.kt and the `STRING_TOO_LONG` error for CDDL license text,"<!--
  - Thanks for submitting code to Oppia! Please fill out the following as part of
  - your pull request so we can review your code more easily.
  -->

## Explanation
<!--
  - Explain what your PR does. If this PR fixes an existing bug, please include
  - ""Fixes #bugnum:"" in the explanation so that GitHub can auto-close the issue
  - when this PR is merged. 
  -->

The PR fixes the STRING_TOO_LONG error that occurs when the license text is too long to be displayed and some typos in RetrieveLicenseTexts.kt script.
<img src = ""https://user-images.githubusercontent.com/54636525/130578732-939cfb4d-814a-4c1b-83e6-72144bd2cfbf.jpg"" width=300>

Tests passing locally - 
![Screenshot from 2021-08-24 13-26-24](https://user-images.githubusercontent.com/54636525/130579213-e240d182-b972-4ac5-8905-d98054887f79.png)
![Screenshot from 2021-08-24 13-34-00](https://user-images.githubusercontent.com/54636525/130580188-52283f91-44cb-44b2-8426-78a4eb8496b3.png)


## Checklist
<!-- Please tick the relevant boxes by putting an ""x"" in them. -->
- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [ ] The PR explanation includes the words ""Fixes #bugnum: ..."" (or ""Fixes part of #bugnum"" if the PR only partially fixes an issue).
- [ ] The PR follows the [style guide](https://github.com/oppia/oppia-android/wiki/Coding-style-guide).
- [ ] The PR does not contain any unnecessary auto-generated code from Android Studio.
- [ ] The PR is made from a branch that's **not** called ""develop"".
- [ ] The PR is made from a branch that is up-to-date with ""develop"".
- [ ] The PR's branch is based on ""develop"" and not on any other branch.
- [ ] The PR is **assigned** to an appropriate reviewer in both the **Assignees** and the **Reviewers** sections.
",True,3720,https://api.github.com/repos/oppia/oppia-android/pulls/3720,https://github.com/oppia/oppia-android/pull/3720,closed,66,60,4,9,7,28,0,1,[],2021-08-24 05:38:06+00:00,2021-08-27 17:39:04+00:00,302458.0,"3 days, 12:00:58","[{'comment_id': 694544850, 'comment_body': ""These changes were done to print the artifacts with 2 spaces indentation but it didn't work. Also, I noticed in [#3684(checks)](https://github.com/oppia/oppia-android/pull/3684/checks?check_run_id=3408712501) that the error output was badly formatted.\r\n![Screenshot from 2021-08-24 11-09-57](https://user-images.githubusercontent.com/54636525/130581937-d9b10d0f-1af8-47bf-8d37-e2bc4e53a3a0.png)\r\nSo I fixed this and also modified the corresponding test case to ensure this isn't broken in the future. "", 'comment_created': datetime.datetime(2021, 8, 24, 6, 38, 29, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 694631631, 'comment_body': '@prayutsu Is this PR link mentioned above is correct ?', 'comment_created': datetime.datetime(2021, 8, 24, 8, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 694632089, 'comment_body': 'Can you mention the reference from where you got this limit?', 'comment_created': datetime.datetime(2021, 8, 24, 8, 30, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 694636055, 'comment_body': 'I think we should fetch this value from `RetrieveLicenseTexts.kt` file.', 'comment_created': datetime.datetime(2021, 8, 24, 8, 33, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 694637225, 'comment_body': 'I am unable to understand this. Are we not considering any special characters? If no, then why?', 'comment_created': datetime.datetime(2021, 8, 24, 8, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 694676854, 'comment_body': 'The PR link was correct but I have updated it to point to the specific check failure.', 'comment_created': datetime.datetime(2021, 8, 24, 9, 23, 45, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 694680550, 'comment_body': '[This](https://stackoverflow.com/a/51733275/12215015) answer says that the max limit is 32,767 bytes and a char takes 2 bytes. So I halved the mentioned size and set it as the limit.', 'comment_created': datetime.datetime(2021, 8, 24, 9, 28, 38, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 694690843, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 24, 9, 42, 14, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 694691194, 'comment_body': 'Changes this to include all chars from ASCII value 32 to 122.', 'comment_created': datetime.datetime(2021, 8, 24, 9, 42, 43, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 695167489, 'comment_body': ""Can you print the TextFormat version of the dep, instead? I don't think there's any guarantee that the Message.toString() method prints a parsable text proto (though it seems to be close)."", 'comment_created': datetime.datetime(2021, 8, 24, 20, 10, 27, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 695168513, 'comment_body': ""I don't think this is what we want to do, actually. Can we instead fragment the text into multiple strings & display them in segments in the UI? We intentionally reserve the link for cases when we can't show the text, but in this case we still can with additional work. I think that's important here.\r\n\r\nIf there is some technical reason we can't do this, though, then the link might be a reasonable back-up."", 'comment_created': datetime.datetime(2021, 8, 24, 20, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 696335854, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 26, 6, 42, 13, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 696336172, 'comment_body': 'Filed issue #3738 and added TODO.', 'comment_created': datetime.datetime(2021, 8, 26, 6, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 696342997, 'comment_body': 'Okay thanks.', 'comment_created': datetime.datetime(2021, 8, 26, 6, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 696343533, 'comment_body': 'Please mention this link in comments above the value\r\n`Reference: https://stackoverflow.com/a/51733275`', 'comment_created': datetime.datetime(2021, 8, 26, 6, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rt4914', 'type': 'User'}, {'comment_id': 696346316, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 26, 7, 0, 2, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 697239909, 'comment_body': 'Why this number versus the actual upper limit of 32KB?', 'comment_created': datetime.datetime(2021, 8, 27, 8, 7, 8, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 697239965, 'comment_body': 'Perhaps https://issuetracker.google.com/issues/110853846#comment5 would be a more authoritative reference? I think the SO link is referencing that one.', 'comment_created': datetime.datetime(2021, 8, 27, 8, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 697242172, 'comment_body': 'I suggest introducing a new helper (e.g. fetchViewableLicenseText) that calls fetchLicenseText directly & does the size check there, then returns the best value.\r\n\r\nThis avoids mutable state & duplicate code between the two cases. It also lets you consolidate the TODO to one location.', 'comment_created': datetime.datetime(2021, 8, 27, 8, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 697255631, 'comment_body': 'Do we really need to fully qualify the class or can we import it, instead?', 'comment_created': datetime.datetime(2021, 8, 27, 8, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 697256313, 'comment_body': 'Also for name, this should be specific to the content: ``MAX_LICENSE_LENGTH``.', 'comment_created': datetime.datetime(2021, 8, 27, 8, 32, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 697256867, 'comment_body': ""If this doesn't need to be a real link, prefer to use a fake one instead."", 'comment_created': datetime.datetime(2021, 8, 27, 8, 33, 27, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}, {'comment_id': 697277990, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 27, 9, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 697278185, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 27, 9, 4, 51, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 697278241, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 27, 9, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 697278325, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 8, 27, 9, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 697279202, 'comment_body': 'I halved the 32KB size as a single char takes 2 bytes. Is it correct or is there any other thing that needs to be taken into account?', 'comment_created': datetime.datetime(2021, 8, 27, 9, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'prayutsu', 'type': 'User'}, {'comment_id': 697612189, 'comment_body': 'Ah, good point--that sounds correct. Thanks!', 'comment_created': datetime.datetime(2021, 8, 27, 17, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'BenHenning', 'type': 'User'}]","[{'commit_sha': 'd8892fc9d9861f5e0fa36a50b11c809b048e2cd9', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0eb511e942b1a802e3f4aaaa829b7ee610b15e50', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '412b0cace08bb8b62787ef97810730c54193f54f', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '093b3c3975f7e3deb601dac6a5cb65e575e86066', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6635dc788607dd17ed546b5cc0dd98a3d2ac2879', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1ad043555b69c5b3e87bbc60255d9f7b39a6b39', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2e77be89c6208e326e9a1b658c7ab3673691f56', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd695d5de44f8e8a7d26b93d2aa09839c70314587', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1978ce76b4f31effe19580f265513c92c4fc023', 'committer_username': 'prayutsu', 'committer_name': 'Abhay Garg', 'committer_email': None, 'commit_date': datetime.datetime(2019, 8, 28, 15, 44, 38, tzinfo=datetime.timezone.utc)}]",Abhay Garg,54636525,,User,,31,,33,42

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
148093817,oppia-android,oppia/oppia-android,Kotlin,506,306,21,172,2042,498,137,13,"[{'id': 718425661, 'number': 3720, 'closed': datetime.datetime(2021, 8, 27, 17, 39, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 5, 38, 6, tzinfo=datetime.timezone.utc), 'time_taken': 302458.0, 'time_delta': '3 days, 12:00:58', 'additions': 66, 'deletions': 60, 'state': 'closed'}, {'id': 712759520, 'number': 3682, 'closed': datetime.datetime(2021, 8, 16, 18, 10, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 10, 49, 17, tzinfo=datetime.timezone.utc), 'time_taken': 199301.0, 'time_delta': '2 days, 7:21:41', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 712731136, 'number': 3680, 'closed': datetime.datetime(2021, 8, 19, 16, 4, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 7, 6, 1, tzinfo=datetime.timezone.utc), 'time_taken': 464297.0, 'time_delta': '5 days, 8:58:17', 'additions': 897, 'deletions': 88, 'state': 'closed'}, {'id': 710666447, 'number': 3671, 'closed': datetime.datetime(2021, 8, 18, 8, 0, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 10, 41, 53, tzinfo=datetime.timezone.utc), 'time_taken': 508729.0, 'time_delta': '5 days, 21:18:49', 'additions': 552, 'deletions': 20, 'state': 'closed'}, {'id': 705662555, 'number': 3650, 'closed': datetime.datetime(2021, 8, 13, 6, 13, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 18, 12, 35, tzinfo=datetime.timezone.utc), 'time_taken': 561664.0, 'time_delta': '6 days, 12:01:04', 'additions': 2859, 'deletions': 782, 'state': 'closed'}, {'id': 700929849, 'number': 3632, 'closed': datetime.datetime(2021, 8, 14, 3, 6, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 15, 18, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1079281.0, 'time_delta': '12 days, 11:48:01', 'additions': 196, 'deletions': 0, 'state': 'closed'}, {'id': 700927012, 'number': 3631, 'closed': datetime.datetime(2021, 8, 1, 15, 17, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 15, 6, 25, tzinfo=datetime.timezone.utc), 'time_taken': 638.0, 'time_delta': '0:10:38', 'additions': 1266, 'deletions': 79, 'state': 'closed'}, {'id': 696361989, 'number': 3520, 'closed': datetime.datetime(2021, 8, 13, 9, 15, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 14, 54, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1707661.0, 'time_delta': '19 days, 18:21:01', 'additions': 3124, 'deletions': 296, 'state': 'closed'}, {'id': 694260486, 'number': 3511, 'closed': datetime.datetime(2021, 7, 24, 15, 22, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 10, 45, 31, tzinfo=datetime.timezone.utc), 'time_taken': 275825.0, 'time_delta': '3 days, 4:37:05', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 692521982, 'number': 3503, 'closed': datetime.datetime(2021, 7, 30, 5, 53, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 11, 27, 45, tzinfo=datetime.timezone.utc), 'time_taken': 930351.0, 'time_delta': '10 days, 18:25:51', 'additions': 861, 'deletions': 101, 'state': 'closed'}, {'id': 692074517, 'number': 3501, 'closed': datetime.datetime(2021, 8, 9, 23, 4, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 11, 35, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1942178.0, 'time_delta': '22 days, 11:29:38', 'additions': 3123, 'deletions': 10, 'state': 'closed'}, {'id': 686739092, 'number': 3450, 'closed': datetime.datetime(2021, 8, 10, 21, 23, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 12, 8, 55, tzinfo=datetime.timezone.utc), 'time_taken': 2798073.0, 'time_delta': '32 days, 9:14:33', 'additions': 1048, 'deletions': 11, 'state': 'closed'}, {'id': 685887108, 'number': 3444, 'closed': datetime.datetime(2021, 7, 9, 12, 10, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 10, 26, 32, tzinfo=datetime.timezone.utc), 'time_taken': 92654.0, 'time_delta': '1 day, 1:44:14', 'additions': 515, 'deletions': 0, 'state': 'closed'}, {'id': 685735951, 'number': 3442, 'closed': datetime.datetime(2021, 7, 8, 10, 39, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 6, 49, 31, tzinfo=datetime.timezone.utc), 'time_taken': 13774.0, 'time_delta': '3:49:34', 'additions': 4221, 'deletions': 557, 'state': 'closed'}, {'id': 685394774, 'number': 3434, 'closed': datetime.datetime(2021, 7, 16, 22, 19, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 17, 52, 48, tzinfo=datetime.timezone.utc), 'time_taken': 793613.0, 'time_delta': '9 days, 4:26:53', 'additions': 2742, 'deletions': 108, 'state': 'closed'}, {'id': 685338389, 'number': 3431, 'closed': datetime.datetime(2021, 7, 7, 17, 49, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 16, 23, 15, tzinfo=datetime.timezone.utc), 'time_taken': 5164.0, 'time_delta': '1:26:04', 'additions': 3078, 'deletions': 556, 'state': 'closed'}, {'id': 683203408, 'number': 3407, 'closed': datetime.datetime(2021, 7, 7, 17, 49, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 16, 42, 1, tzinfo=datetime.timezone.utc), 'time_taken': 263252.0, 'time_delta': '3 days, 1:07:32', 'additions': 3820, 'deletions': 557, 'state': 'closed'}, {'id': 672585233, 'number': 3338, 'closed': datetime.datetime(2021, 7, 7, 17, 56, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 12, 30, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1747552.0, 'time_delta': '20 days, 5:25:52', 'additions': 2348, 'deletions': 1, 'state': 'closed'}, {'id': 663541268, 'number': 3270, 'closed': datetime.datetime(2021, 6, 28, 20, 9, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 12, 58, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1840274.0, 'time_delta': '21 days, 7:11:14', 'additions': 9727, 'deletions': 2, 'state': 'closed'}, {'id': 630483447, 'number': 3163, 'closed': datetime.datetime(2021, 5, 7, 8, 52, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 5, 10, 36, 29, tzinfo=datetime.timezone.utc), 'time_taken': 166583.0, 'time_delta': '1 day, 22:16:23', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 615836235, 'number': 3092, 'closed': datetime.datetime(2021, 4, 15, 15, 11, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 15, 8, 21, 56, tzinfo=datetime.timezone.utc), 'time_taken': 24560.0, 'time_delta': '6:49:20', 'additions': 378, 'deletions': 231, 'state': 'closed'}, {'id': 592978241, 'number': 2916, 'closed': datetime.datetime(2021, 5, 1, 0, 57, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 11, 5, 52, tzinfo=datetime.timezone.utc), 'time_taken': 4024327.0, 'time_delta': '46 days, 13:52:07', 'additions': 518, 'deletions': 243, 'state': 'closed'}, {'id': 586016730, 'number': 2843, 'closed': datetime.datetime(2021, 3, 9, 7, 42, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 6, 7, 18, 30, tzinfo=datetime.timezone.utc), 'time_taken': 260614.0, 'time_delta': '3 days, 0:23:34', 'additions': 12, 'deletions': 2, 'state': 'closed'}, {'id': 584176705, 'number': 2837, 'closed': datetime.datetime(2021, 7, 21, 7, 31, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 3, 18, 30, 33, tzinfo=datetime.timezone.utc), 'time_taken': 12056468.0, 'time_delta': '139 days, 13:01:08', 'additions': 345, 'deletions': 366, 'state': 'closed'}, {'id': 575238728, 'number': 2740, 'closed': datetime.datetime(2021, 7, 21, 7, 29, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 17, 21, 57, 27, tzinfo=datetime.timezone.utc), 'time_taken': 13253537.0, 'time_delta': '153 days, 9:32:17', 'additions': 250, 'deletions': 348, 'state': 'closed'}, {'id': 570325435, 'number': 2671, 'closed': datetime.datetime(2021, 2, 17, 5, 13, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 9, 14, 5, 54, tzinfo=datetime.timezone.utc), 'time_taken': 659278.0, 'time_delta': '7 days, 15:07:58', 'additions': 601, 'deletions': 46, 'state': 'closed'}, {'id': 568276660, 'number': 2629, 'closed': datetime.datetime(2021, 2, 14, 23, 53, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 5, 11, 4, 10, tzinfo=datetime.timezone.utc), 'time_taken': 823754.0, 'time_delta': '9 days, 12:49:14', 'additions': 61, 'deletions': 97, 'state': 'closed'}, {'id': 557947106, 'number': 2521, 'closed': datetime.datetime(2021, 1, 21, 10, 25, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 20, 4, 52, 58, tzinfo=datetime.timezone.utc), 'time_taken': 106332.0, 'time_delta': '1 day, 5:32:12', 'additions': 22, 'deletions': 8, 'state': 'closed'}, {'id': 555702979, 'number': 2482, 'closed': datetime.datetime(2021, 2, 3, 10, 36, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 15, 13, 34, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1630916.0, 'time_delta': '18 days, 21:01:56', 'additions': 142, 'deletions': 99, 'state': 'closed'}, {'id': 549550963, 'number': 2396, 'closed': datetime.datetime(2021, 1, 21, 10, 31, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 5, 21, 23, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1343333.0, 'time_delta': '15 days, 13:08:53', 'additions': 284, 'deletions': 157, 'state': 'closed'}, {'id': 546941281, 'number': 2351, 'closed': datetime.datetime(2021, 1, 5, 4, 0, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 30, 13, 15, 1, tzinfo=datetime.timezone.utc), 'time_taken': 485128.0, 'time_delta': '5 days, 14:45:28', 'additions': 641, 'deletions': 341, 'state': 'closed'}, {'id': 526275612, 'number': 2164, 'closed': datetime.datetime(2020, 11, 25, 5, 28, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 24, 7, 52, 11, tzinfo=datetime.timezone.utc), 'time_taken': 77774.0, 'time_delta': '21:36:14', 'additions': 163, 'deletions': 111, 'state': 'closed'}, {'id': 524203980, 'number': 2128, 'closed': datetime.datetime(2020, 11, 21, 11, 4, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 19, 20, 13, 34, tzinfo=datetime.timezone.utc), 'time_taken': 139828.0, 'time_delta': '1 day, 14:50:28', 'additions': 272, 'deletions': 0, 'state': 'closed'}, {'id': 506804927, 'number': 2026, 'closed': datetime.datetime(2020, 11, 23, 16, 11, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 20, 13, 32, 28, tzinfo=datetime.timezone.utc), 'time_taken': 2947113.0, 'time_delta': '34 days, 2:38:33', 'additions': 163, 'deletions': 111, 'state': 'closed'}, {'id': 504022179, 'number': 2012, 'closed': datetime.datetime(2020, 12, 19, 15, 44, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 15, 11, 14, 9, tzinfo=datetime.timezone.utc), 'time_taken': 5632209.0, 'time_delta': '65 days, 4:30:09', 'additions': 25, 'deletions': 12, 'state': 'closed'}, {'id': 500151073, 'number': 1960, 'closed': datetime.datetime(2021, 1, 12, 5, 26, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 8, 19, 52, 56, tzinfo=datetime.timezone.utc), 'time_taken': 8242410.0, 'time_delta': '95 days, 9:33:30', 'additions': 134, 'deletions': 100, 'state': 'closed'}, {'id': 499395220, 'number': 1940, 'closed': datetime.datetime(2020, 10, 8, 19, 8, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 7, 17, 7, 9, tzinfo=datetime.timezone.utc), 'time_taken': 93697.0, 'time_delta': '1 day, 2:01:37', 'additions': 405, 'deletions': 1, 'state': 'closed'}, {'id': 498978650, 'number': 1938, 'closed': datetime.datetime(2020, 10, 8, 11, 53, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 7, 4, 58, 46, tzinfo=datetime.timezone.utc), 'time_taken': 111266.0, 'time_delta': '1 day, 6:54:26', 'additions': 447, 'deletions': 1, 'state': 'closed'}, {'id': 497566124, 'number': 1932, 'closed': datetime.datetime(2020, 10, 6, 9, 6, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 5, 4, 2, 5, tzinfo=datetime.timezone.utc), 'time_taken': 104694.0, 'time_delta': '1 day, 5:04:54', 'additions': 237, 'deletions': 1, 'state': 'closed'}, {'id': 497444777, 'number': 1931, 'closed': datetime.datetime(2020, 10, 4, 18, 57, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 4, 14, 43, 1, tzinfo=datetime.timezone.utc), 'time_taken': 15276.0, 'time_delta': '4:14:36', 'additions': 29, 'deletions': 29, 'state': 'closed'}, {'id': 495604398, 'number': 1923, 'closed': datetime.datetime(2020, 11, 17, 2, 10, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 30, 15, 42, 8, tzinfo=datetime.timezone.utc), 'time_taken': 4098480.0, 'time_delta': '47 days, 10:28:00', 'additions': 198, 'deletions': 49, 'state': 'closed'}, {'id': 495316200, 'number': 1922, 'closed': datetime.datetime(2020, 10, 6, 19, 57, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 30, 7, 38, 50, tzinfo=datetime.timezone.utc), 'time_taken': 562748.0, 'time_delta': '6 days, 12:19:08', 'additions': 519, 'deletions': 1, 'state': 'closed'}, {'id': 493739904, 'number': 1911, 'closed': datetime.datetime(2021, 3, 10, 3, 27, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 27, 15, 53, 32, tzinfo=datetime.timezone.utc), 'time_taken': 14124845.0, 'time_delta': '163 days, 11:34:05', 'additions': 175, 'deletions': 11, 'state': 'closed'}, {'id': 488649674, 'number': 1853, 'closed': datetime.datetime(2020, 9, 23, 5, 7, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 17, 12, 58, 15, tzinfo=datetime.timezone.utc), 'time_taken': 490139.0, 'time_delta': '5 days, 16:08:59', 'additions': 208, 'deletions': 359, 'state': 'closed'}, {'id': 487822975, 'number': 1847, 'closed': datetime.datetime(2020, 10, 16, 15, 28, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 16, 8, 30, 25, tzinfo=datetime.timezone.utc), 'time_taken': 2617070.0, 'time_delta': '30 days, 6:57:50', 'additions': 366, 'deletions': 1, 'state': 'closed'}, {'id': 487293534, 'number': 1843, 'closed': datetime.datetime(2020, 9, 19, 19, 57, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 15, 13, 23, 10, tzinfo=datetime.timezone.utc), 'time_taken': 369287.0, 'time_delta': '4 days, 6:34:47', 'additions': 49, 'deletions': 0, 'state': 'closed'}, {'id': 484357284, 'number': 1835, 'closed': datetime.datetime(2020, 9, 16, 4, 40, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 10, 21, 40, 1, tzinfo=datetime.timezone.utc), 'time_taken': 457202.0, 'time_delta': '5 days, 7:00:02', 'additions': 240, 'deletions': 0, 'state': 'closed'}, {'id': 482278112, 'number': 1826, 'closed': datetime.datetime(2020, 9, 10, 14, 26, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 20, 27, 30, tzinfo=datetime.timezone.utc), 'time_taken': 151158.0, 'time_delta': '1 day, 17:59:18', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 481602009, 'number': 1819, 'closed': datetime.datetime(2020, 9, 10, 14, 25, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 7, 19, 2, 31, tzinfo=datetime.timezone.utc), 'time_taken': 242593.0, 'time_delta': '2 days, 19:23:13', 'additions': 25, 'deletions': 8, 'state': 'closed'}, {'id': 480609795, 'number': 1816, 'closed': datetime.datetime(2021, 2, 9, 14, 10, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 5, 22, 23, 15, tzinfo=datetime.timezone.utc), 'time_taken': 13535248.0, 'time_delta': '156 days, 15:47:28', 'additions': 392, 'deletions': 44, 'state': 'closed'}, {'id': 480093562, 'number': 1807, 'closed': datetime.datetime(2020, 9, 8, 4, 34, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 4, 20, 56, 6, tzinfo=datetime.timezone.utc), 'time_taken': 286717.0, 'time_delta': '3 days, 7:38:37', 'additions': 362, 'deletions': 1, 'state': 'closed'}, {'id': 478107527, 'number': 1775, 'closed': datetime.datetime(2020, 9, 3, 7, 24, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 2, 19, 12, 10, tzinfo=datetime.timezone.utc), 'time_taken': 43935.0, 'time_delta': '12:12:15', 'additions': 265, 'deletions': 1, 'state': 'closed'}, {'id': 478096011, 'number': 1774, 'closed': datetime.datetime(2020, 9, 4, 9, 51, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 2, 18, 56, 5, tzinfo=datetime.timezone.utc), 'time_taken': 140148.0, 'time_delta': '1 day, 14:55:48', 'additions': 265, 'deletions': 1, 'state': 'closed'}, {'id': 477853743, 'number': 1773, 'closed': datetime.datetime(2020, 9, 5, 22, 24, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 2, 14, 18, 19, tzinfo=datetime.timezone.utc), 'time_taken': 288374.0, 'time_delta': '3 days, 8:06:14', 'additions': 2, 'deletions': 4, 'state': 'closed'}, {'id': 477247522, 'number': 1758, 'closed': datetime.datetime(2020, 9, 2, 17, 23, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 1, 18, 8, 47, tzinfo=datetime.timezone.utc), 'time_taken': 83692.0, 'time_delta': '23:14:52', 'additions': 237, 'deletions': 1, 'state': 'closed'}, {'id': 476185843, 'number': 1751, 'closed': datetime.datetime(2020, 9, 3, 21, 9, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 9, 46, 37, tzinfo=datetime.timezone.utc), 'time_taken': 300153.0, 'time_delta': '3 days, 11:22:33', 'additions': 14, 'deletions': 5, 'state': 'closed'}, {'id': 476120719, 'number': 1750, 'closed': datetime.datetime(2020, 9, 3, 21, 10, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 7, 32, 24, tzinfo=datetime.timezone.utc), 'time_taken': 308277.0, 'time_delta': '3 days, 13:37:57', 'additions': 237, 'deletions': 1, 'state': 'closed'}, {'id': 475786532, 'number': 1744, 'closed': datetime.datetime(2020, 8, 31, 17, 16, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 29, 14, 50, 4, tzinfo=datetime.timezone.utc), 'time_taken': 181606.0, 'time_delta': '2 days, 2:26:46', 'additions': 45, 'deletions': 45, 'state': 'closed'}, {'id': 475618697, 'number': 1740, 'closed': datetime.datetime(2020, 9, 26, 11, 5, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 28, 20, 5, 11, tzinfo=datetime.timezone.utc), 'time_taken': 2473230.0, 'time_delta': '28 days, 15:00:30', 'additions': 274, 'deletions': 42, 'state': 'closed'}, {'id': 475388941, 'number': 1738, 'closed': datetime.datetime(2020, 8, 29, 13, 5, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 28, 12, 52, 54, tzinfo=datetime.timezone.utc), 'time_taken': 87159.0, 'time_delta': '1 day, 0:12:39', 'additions': 11, 'deletions': 8, 'state': 'closed'}, {'id': 474547237, 'number': 1731, 'closed': datetime.datetime(2020, 8, 28, 10, 57, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 27, 8, 44, 25, tzinfo=datetime.timezone.utc), 'time_taken': 94395.0, 'time_delta': '1 day, 2:13:15', 'additions': 37, 'deletions': 13, 'state': 'closed'}, {'id': 472339886, 'number': 1700, 'closed': datetime.datetime(2020, 8, 26, 13, 0, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 8, 0, 18, tzinfo=datetime.timezone.utc), 'time_taken': 190830.0, 'time_delta': '2 days, 5:00:30', 'additions': 109, 'deletions': 76, 'state': 'closed'}, {'id': 472271795, 'number': 1696, 'closed': datetime.datetime(2020, 8, 25, 22, 26, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 5, 41, 2, tzinfo=datetime.timezone.utc), 'time_taken': 146699.0, 'time_delta': '1 day, 16:44:59', 'additions': 506, 'deletions': 490, 'state': 'closed'}, {'id': 471881313, 'number': 1691, 'closed': datetime.datetime(2020, 8, 24, 6, 52, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 22, 31, 28, tzinfo=datetime.timezone.utc), 'time_taken': 202858.0, 'time_delta': '2 days, 8:20:58', 'additions': 503, 'deletions': 487, 'state': 'closed'}, {'id': 471856781, 'number': 1690, 'closed': datetime.datetime(2020, 8, 24, 8, 1, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 21, 11, 4, tzinfo=datetime.timezone.utc), 'time_taken': 211850.0, 'time_delta': '2 days, 10:50:50', 'additions': 155, 'deletions': 124, 'state': 'closed'}, {'id': 471184191, 'number': 1685, 'closed': datetime.datetime(2020, 8, 21, 15, 24, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 19, 6, 25, tzinfo=datetime.timezone.utc), 'time_taken': 73074.0, 'time_delta': '20:17:54', 'additions': 8, 'deletions': 8, 'state': 'closed'}]"
